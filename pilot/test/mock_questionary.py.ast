Module(body=[ClassDef(name='MockQuestionary', bases=[], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='answers'), arg(arg='initial_state')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value='project_description')]), body=[If(test=Compare(left=Name(id='answers', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='answers', ctx=Store())], value=List(elts=[], ctx=Load()))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='answers', ctx=Store())], value=Call(func=Name(id='iter', ctx=Load()), args=[Name(id='answers', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Store())], value=Name(id='initial_state', ctx=Load()))], decorator_list=[]), ClassDef(name='Style', bases=[], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Pass()], decorator_list=[])], decorator_list=[]), FunctionDef(name='text', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='question', annotation=Name(id='str', ctx=Load())), arg(arg='style')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Constant(value='AI: '), op=Add(), right=Name(id='question', ctx=Load()))], keywords=[])), If(test=Call(func=Attribute(value=Name(id='question', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='User Story')], keywords=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Store())], value=Constant(value='user_stories'))], orelse=[If(test=Call(func=Attribute(value=Name(id='question', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='write "DONE"')], keywords=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Store())], value=Constant(value='DONE'))], orelse=[])]), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='ask', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='unsafe_ask', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='unsafe_ask', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Load()), ops=[Eq()], comparators=[Constant(value='user_stories')]), body=[Assign(targets=[Name(id='answer', ctx=Store())], value=Constant(value=''))], orelse=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Load()), ops=[Eq()], comparators=[Constant(value='DONE')]), body=[Assign(targets=[Name(id='answer', ctx=Store())], value=Constant(value='DONE'))], orelse=[Assign(targets=[Name(id='answer', ctx=Store())], value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='answers', ctx=Load()), Constant(value='')], keywords=[]))])]), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='User:'), Name(id='answer', ctx=Load())], keywords=[])), Return(value=Name(id='answer', ctx=Load()))], decorator_list=[])], decorator_list=[])], type_ignores=[])