Module(body=[ImportFrom(module='unittest.mock', names=[alias(name='patch')], level=0), ImportFrom(module='utils.telemetry', names=[alias(name='Telemetry')], level=0), FunctionDef(name='test_telemetry_constructor_with_telemetry_enabled', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='endpoint'), Constant(value='enabled')], values=[Constant(value='test-id'), Constant(value='test-endpoint'), Constant(value=True)])), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Assert(test=Attribute(value=Name(id='telemetry', ctx=Load()), attr='enabled', ctx=Load())), Assert(test=Compare(left=Attribute(value=Name(id='telemetry', ctx=Load()), attr='telemetry_id', ctx=Load()), ops=[Eq()], comparators=[Constant(value='test-id')])), Assert(test=Compare(left=Attribute(value=Name(id='telemetry', ctx=Load()), attr='endpoint', ctx=Load()), ops=[Eq()], comparators=[Constant(value='test-endpoint')]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])]), FunctionDef(name='test_telemetry_constructor_with_telemetry_disabled', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='enabled')], values=[Constant(value='existing-id'), Constant(value=False)])), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Assert(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='telemetry', ctx=Load()), attr='enabled', ctx=Load())))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])]), FunctionDef(name='test_telemetry_constructor_with_telemetry_not_configured', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Assert(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='telemetry', ctx=Load()), attr='enabled', ctx=Load())))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])]), FunctionDef(name='test_telemetry_constructor_logging_enabled', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings'), arg(arg='caplog')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='caplog', ctx=Load()), attr='set_level', ctx=Load()), args=[Constant(value='DEBUG')], keywords=[])), Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='endpoint'), Constant(value='enabled')], values=[Constant(value='test-id'), Constant(value='test-endpoint'), Constant(value=True)])), Expr(value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Constant(value='Anonymous telemetry enabled (id=test-id), configure or disable it in /path/to/config'), ops=[In()], comparators=[Attribute(value=Name(id='caplog', ctx=Load()), attr='text', ctx=Load())]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.config_path'), Constant(value='/path/to/config')], keywords=[]), Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])]), FunctionDef(name='test_clear_data_resets_data', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='empty', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='telemetry', ctx=Load()), attr='data', ctx=Store())], value=Dict(keys=[Constant(value='model'), Constant(value='num_llm_requests'), Constant(value='num_llm_tokens'), Constant(value='num_steps'), Constant(value='elapsed_time'), Constant(value='end_result'), Constant(value='user_feedback'), Constant(value='user_contact')], values=[Constant(value='test-model'), Constant(value=10), Constant(value=100), Constant(value=5), Constant(value=123.45), Constant(value='success'), Constant(value='Great!'), Constant(value='user@example.com')])), Assert(test=Compare(left=Attribute(value=Name(id='telemetry', ctx=Load()), attr='data', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='empty', ctx=Load()), attr='data', ctx=Load())])), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='clear_data', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='telemetry', ctx=Load()), attr='data', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='empty', ctx=Load()), attr='data', ctx=Load())]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.sys.platform'), Constant(value='test_platform')], keywords=[]), Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.sys.version'), Constant(value='test_version')], keywords=[]), Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.version'), Constant(value='test_pilot_version')], keywords=[])]), FunctionDef(name='test_clear_data_resets_times', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='telemetry', ctx=Load()), attr='start_time', ctx=Store())], value=Constant(value=1234567890)), Assign(targets=[Attribute(value=Name(id='telemetry', ctx=Load()), attr='end_time', ctx=Store())], value=Constant(value=1234567895)), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='clear_data', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='telemetry', ctx=Load()), attr='start_time', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])), Assert(test=Compare(left=Attribute(value=Name(id='telemetry', ctx=Load()), attr='end_time', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]))], decorator_list=[]), FunctionDef(name='test_telemetry_setup_already_enabled', args=arguments(posonlyargs=[], args=[arg(arg='mock_uuid4'), arg(arg='mock_settings')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='enabled')], values=[Constant(value='existing-id'), Constant(value=True)])), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='setup', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='mock_uuid4', ctx=Load()), attr='assert_not_called', ctx=Load()), args=[], keywords=[]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[]), Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.uuid4')], keywords=[])]), FunctionDef(name='test_telemetry_setup_enable', args=arguments(posonlyargs=[], args=[arg(arg='mock_uuid4'), arg(arg='mock_settings')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='enabled')], values=[Constant(value='existing-id'), Constant(value=False)])), Assign(targets=[Attribute(value=Name(id='mock_uuid4', ctx=Load()), attr='return_value', ctx=Store())], value=Constant(value='fake-id')), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='setup', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='mock_uuid4', ctx=Load()), attr='assert_called_once', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='telemetry', ctx=Load()), attr='telemetry_id', ctx=Load()), ops=[Eq()], comparators=[Constant(value='telemetry-fake-id')])), Assert(test=Compare(left=Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Load()), ops=[Eq()], comparators=[Dict(keys=[Constant(value='id'), Constant(value='endpoint'), Constant(value='enabled')], values=[Constant(value='telemetry-fake-id'), Attribute(value=Name(id='Telemetry', ctx=Load()), attr='DEFAULT_ENDPOINT', ctx=Load()), Constant(value=True)])]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[]), Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.uuid4')], keywords=[])]), FunctionDef(name='test_set_ignores_data_if_disabled', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='enabled')], values=[Constant(value='existing-id'), Constant(value=False)])), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='set', ctx=Load()), args=[Constant(value='model'), Constant(value='fake-model')], keywords=[])), Assert(test=Compare(left=Call(func=Attribute(value=Attribute(value=Name(id='telemetry', ctx=Load()), attr='data', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='model')], keywords=[]), ops=[NotEq()], comparators=[Constant(value='fake-model')]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])]), FunctionDef(name='test_set_updates_data_if_enabled', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='endpoint'), Constant(value='enabled')], values=[Constant(value='test-id'), Constant(value='test-endpoint'), Constant(value=True)])), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='set', ctx=Load()), args=[Constant(value='model'), Constant(value='fake-model')], keywords=[])), Assert(test=Compare(left=Subscript(value=Attribute(value=Name(id='telemetry', ctx=Load()), attr='data', ctx=Load()), slice=Constant(value='model'), ctx=Load()), ops=[Eq()], comparators=[Constant(value='fake-model')]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])]), FunctionDef(name='test_set_ignores_unknown_field', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='endpoint'), Constant(value='enabled')], values=[Constant(value='test-id'), Constant(value='test-endpoint'), Constant(value=True)])), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='set', ctx=Load()), args=[Constant(value='nonexistent_field'), Constant(value='value')], keywords=[])), Assert(test=Compare(left=Constant(value='nonexistent_field'), ops=[NotIn()], comparators=[Attribute(value=Name(id='telemetry', ctx=Load()), attr='data', ctx=Load())]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])]), FunctionDef(name='test_inc_increments_known_data_field', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='endpoint'), Constant(value='enabled')], values=[Constant(value='test-id'), Constant(value='test-endpoint'), Constant(value=True)])), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='inc', ctx=Load()), args=[Constant(value='num_llm_requests'), Constant(value=42)], keywords=[])), Assert(test=Compare(left=Subscript(value=Attribute(value=Name(id='telemetry', ctx=Load()), attr='data', ctx=Load()), slice=Constant(value='num_llm_requests'), ctx=Load()), ops=[Eq()], comparators=[Constant(value=42)]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])]), FunctionDef(name='test_inc_does_not_increment_when_disabled', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='enabled')], values=[Constant(value='existing-id'), Constant(value=False)])), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='inc', ctx=Load()), args=[Constant(value='num_llm_requests'), Constant(value=42)], keywords=[])), Assert(test=Compare(left=Subscript(value=Attribute(value=Name(id='telemetry', ctx=Load()), attr='data', ctx=Load()), slice=Constant(value='num_llm_requests'), ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])]), FunctionDef(name='test_inc_ignores_unknown_data_field', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='endpoint'), Constant(value='enabled')], values=[Constant(value='test-id'), Constant(value='test-endpoint'), Constant(value=True)])), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='inc', ctx=Load()), args=[Constant(value='unknown_field')], keywords=[])), Assert(test=Compare(left=Constant(value='unknown_field'), ops=[NotIn()], comparators=[Attribute(value=Name(id='telemetry', ctx=Load()), attr='data', ctx=Load())]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])]), FunctionDef(name='test_start_with_telemetry_disabled', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='enabled')], values=[Constant(value='existing-id'), Constant(value=False)])), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='start', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='telemetry', ctx=Load()), attr='start_time', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])]), FunctionDef(name='test_start_with_telemetry_enabled', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings'), arg(arg='mock_time')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='endpoint'), Constant(value='enabled')], values=[Constant(value='test-id'), Constant(value='test-endpoint'), Constant(value=True)])), Assign(targets=[Attribute(value=Attribute(value=Name(id='mock_time', ctx=Load()), attr='time', ctx=Load()), attr='return_value', ctx=Store())], value=Constant(value=1234.0)), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='start', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='telemetry', ctx=Load()), attr='start_time', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1234.0)]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.time')], keywords=[]), Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])]), FunctionDef(name='test_stop_when_not_enabled_does_nothing', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='enabled')], values=[Constant(value='existing-id'), Constant(value=False)])), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='stop', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='telemetry', ctx=Load()), attr='end_time', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])]), FunctionDef(name='test_stop_without_start_logs_error', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings'), arg(arg='caplog')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='endpoint'), Constant(value='enabled')], values=[Constant(value='test-id'), Constant(value='test-endpoint'), Constant(value=True)])), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='stop', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Constant(value='it was never started'), ops=[In()], comparators=[Attribute(value=Name(id='caplog', ctx=Load()), attr='text', ctx=Load())]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])]), FunctionDef(name='test_stop_calculates_elapsed_time', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings'), arg(arg='mock_time')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='endpoint'), Constant(value='enabled')], values=[Constant(value='test-id'), Constant(value='test-endpoint'), Constant(value=True)])), Assign(targets=[Attribute(value=Attribute(value=Name(id='mock_time', ctx=Load()), attr='time', ctx=Load()), attr='side_effect', ctx=Store())], value=List(elts=[Constant(value=1234), Constant(value=1235)], ctx=Load())), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='start', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='stop', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Subscript(value=Attribute(value=Name(id='telemetry', ctx=Load()), attr='data', ctx=Load()), slice=Constant(value='elapsed_time'), ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.time')], keywords=[]), Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])]), FunctionDef(name='test_send_enabled_and_successful', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings'), arg(arg='mock_post'), arg(arg='caplog')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='caplog', ctx=Load()), attr='set_level', ctx=Load()), args=[Constant(value='DEBUG')], keywords=[])), Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='endpoint'), Constant(value='enabled')], values=[Constant(value='test-id'), Constant(value='test-endpoint'), Constant(value=True)])), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='send', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='expected', ctx=Store())], value=Dict(keys=[Constant(value='pathId'), Constant(value='event'), Constant(value='data')], values=[Constant(value='test-id'), Constant(value='pilot-telemetry'), Attribute(value=Name(id='telemetry', ctx=Load()), attr='data', ctx=Load())])), Expr(value=Call(func=Attribute(value=Name(id='mock_post', ctx=Load()), attr='assert_called_once_with', ctx=Load()), args=[Constant(value='test-endpoint')], keywords=[keyword(arg='json', value=Name(id='expected', ctx=Load()))])), Assert(test=Compare(left=Constant(value='sending anonymous telemetry data to test-endpoint'), ops=[In()], comparators=[Attribute(value=Name(id='caplog', ctx=Load()), attr='text', ctx=Load())]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.requests.post')], keywords=[]), Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])]), FunctionDef(name='test_send_enabled_but_post_fails', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings'), arg(arg='mock_post')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='endpoint'), Constant(value='enabled')], values=[Constant(value='test-id'), Constant(value='test-endpoint'), Constant(value=True)])), Assign(targets=[Attribute(value=Name(id='mock_post', ctx=Load()), attr='side_effect', ctx=Store())], value=Call(func=Name(id='Exception', ctx=Load()), args=[Constant(value='Connection error')], keywords=[])), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='send', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='expected', ctx=Store())], value=Dict(keys=[Constant(value='pathId'), Constant(value='event'), Constant(value='data')], values=[Constant(value='test-id'), Constant(value='pilot-telemetry'), Attribute(value=Name(id='telemetry', ctx=Load()), attr='data', ctx=Load())])), Expr(value=Call(func=Attribute(value=Name(id='mock_post', ctx=Load()), attr='assert_called_once_with', ctx=Load()), args=[Attribute(value=Name(id='telemetry', ctx=Load()), attr='endpoint', ctx=Load())], keywords=[keyword(arg='json', value=Name(id='expected', ctx=Load()))]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.requests.post')], keywords=[]), Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])]), FunctionDef(name='test_send_not_enabled', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings'), arg(arg='mock_post')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='endpoint'), Constant(value='enabled')], values=[Constant(value='test-id'), Constant(value='test-endpoint'), Constant(value=False)])), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='send', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='mock_post', ctx=Load()), attr='assert_not_called', ctx=Load()), args=[], keywords=[]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.requests.post')], keywords=[]), Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])]), FunctionDef(name='test_send_no_endpoint_configured', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings'), arg(arg='mock_post'), arg(arg='caplog')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='endpoint'), Constant(value='enabled')], values=[Constant(value='test-id'), Constant(value=None), Constant(value=True)])), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='send', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='mock_post', ctx=Load()), attr='assert_not_called', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Constant(value='cannot send telemetry, no endpoint configured'), ops=[In()], comparators=[Attribute(value=Name(id='caplog', ctx=Load()), attr='text', ctx=Load())]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.requests.post')], keywords=[]), Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])]), FunctionDef(name='test_send_clears_data_after_sending', args=arguments(posonlyargs=[], args=[arg(arg='mock_settings'), arg(arg='_mock_post')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='mock_settings', ctx=Load()), attr='telemetry', ctx=Store())], value=Dict(keys=[Constant(value='id'), Constant(value='endpoint'), Constant(value='enabled')], values=[Constant(value='test-id'), Constant(value='test-endpoint'), Constant(value=True)])), Assign(targets=[Name(id='telemetry', ctx=Store())], value=Call(func=Name(id='Telemetry', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='telemetry', ctx=Load()), attr='data', ctx=Load()), slice=Constant(value='model'), ctx=Store())], value=Constant(value='test-model')), Expr(value=Call(func=Attribute(value=Name(id='telemetry', ctx=Load()), attr='send', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Subscript(value=Attribute(value=Name(id='telemetry', ctx=Load()), attr='data', ctx=Load()), slice=Constant(value='model'), ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.requests.post')], keywords=[]), Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='utils.telemetry.settings')], keywords=[])])], type_ignores=[])