Module(body=[ImportFrom(module='unittest.mock', names=[alias(name='Mock')], level=0), FunctionDef(name='mock_terminal_size', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='mock_size', ctx=Store())], value=Call(func=Name(id='Mock', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='mock_size', ctx=Load()), attr='columns', ctx=Store())], value=Constant(value=80)), Return(value=Name(id='mock_size', ctx=Load()))], decorator_list=[]), FunctionDef(name='assert_non_empty_string', args=arguments(posonlyargs=[], args=[arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=0)]))], decorator_list=[])], type_ignores=[])