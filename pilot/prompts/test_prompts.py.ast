Module(body=[ImportFrom(module='prompts', names=[alias(name='get_prompt')], level=1), FunctionDef(name='test_prompt_ran_command_None_exit', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='prompt', ctx=Store())], value=Call(func=Name(id='get_prompt', ctx=Load()), args=[Constant(value='dev_ops/ran_command.prompt'), Dict(keys=[Constant(value='cli_response'), Constant(value='command'), Constant(value='additional_message'), Constant(value='exit_code')], values=[Constant(value='stdout:\n```\nsuccess\n```'), Constant(value='./scripts/run_tests'), Constant(value='Some additional message\n'), Constant(value=None)])], keywords=[])), Assert(test=Compare(left=Name(id='prompt', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Constant(value="\nSome additional message\n\nI ran the command `./scripts/run_tests`. The output was:\n\nstdout:\n```\nsuccess\n```\n\nThink about this output and not any output in previous messages. If the command was successfully executed, respond with `DONE`. If it wasn't, respond with `NEEDS_DEBUGGING`.\n\nDo not respond with anything other than these two keywords.\n"), attr='strip', ctx=Load()), args=[], keywords=[])]))], decorator_list=[]), FunctionDef(name='test_prompt_ran_command_0_exit', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='prompt', ctx=Store())], value=Call(func=Name(id='get_prompt', ctx=Load()), args=[Constant(value='dev_ops/ran_command.prompt'), Dict(keys=[Constant(value='cli_response'), Constant(value='command'), Constant(value='additional_message'), Constant(value='exit_code')], values=[Constant(value='stdout:\n```\nsuccess\n```'), Constant(value='./scripts/run_tests'), Constant(value='Some additional message\n'), Constant(value=0)])], keywords=[])), Assert(test=Compare(left=Name(id='prompt', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Constant(value="\nSome additional message\n\nI ran the command `./scripts/run_tests`. The output was:\n\nstdout:\n```\nsuccess\n```\n\nThink about this output and not any output in previous messages. If the command was successfully executed, respond with `DONE`. If it wasn't, respond with `NEEDS_DEBUGGING`.\n\nDo not respond with anything other than these two keywords.\n"), attr='strip', ctx=Load()), args=[], keywords=[])]))], decorator_list=[]), FunctionDef(name='test_parse_task_no_processes', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='prompt', ctx=Store())], value=Call(func=Name(id='get_prompt', ctx=Load()), args=[Constant(value='development/parse_task.prompt'), Dict(keys=[Constant(value='running_processes')], values=[Dict(keys=[], values=[])])], keywords=[])), Assert(test=Compare(left=Constant(value='the following processes'), ops=[NotIn()], comparators=[Name(id='prompt', ctx=Load())]))], decorator_list=[])], type_ignores=[])