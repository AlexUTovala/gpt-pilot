Module(body=[ImportFrom(module='utils', names=[alias(name='should_execute_step')], level=1), ClassDef(name='TestShouldExecuteStep', bases=[], keywords=[], body=[FunctionDef(name='test_no_step_arg', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=Compare(left=Call(func=Name(id='should_execute_step', ctx=Load()), args=[Constant(value=None), Constant(value='project_description')], keywords=[]), ops=[Is()], comparators=[Constant(value=True)])), Assert(test=Compare(left=Call(func=Name(id='should_execute_step', ctx=Load()), args=[Constant(value=None), Constant(value='architecture')], keywords=[]), ops=[Is()], comparators=[Constant(value=True)])), Assert(test=Compare(left=Call(func=Name(id='should_execute_step', ctx=Load()), args=[Constant(value=None), Constant(value='coding')], keywords=[]), ops=[Is()], comparators=[Constant(value=True)]))], decorator_list=[]), FunctionDef(name='test_skip_step', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=Compare(left=Call(func=Name(id='should_execute_step', ctx=Load()), args=[Constant(value='architecture'), Constant(value='project_description')], keywords=[]), ops=[Is()], comparators=[Constant(value=False)])), Assert(test=Compare(left=Call(func=Name(id='should_execute_step', ctx=Load()), args=[Constant(value='architecture'), Constant(value='architecture')], keywords=[]), ops=[Is()], comparators=[Constant(value=True)])), Assert(test=Compare(left=Call(func=Name(id='should_execute_step', ctx=Load()), args=[Constant(value='architecture'), Constant(value='coding')], keywords=[]), ops=[Is()], comparators=[Constant(value=True)]))], decorator_list=[]), FunctionDef(name='test_unknown_step', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=Compare(left=Call(func=Name(id='should_execute_step', ctx=Load()), args=[Constant(value='architecture'), Constant(value='unknown')], keywords=[]), ops=[Is()], comparators=[Constant(value=False)])), Assert(test=Compare(left=Call(func=Name(id='should_execute_step', ctx=Load()), args=[Constant(value='unknown'), Constant(value='project_description')], keywords=[]), ops=[Is()], comparators=[Constant(value=False)])), Assert(test=Compare(left=Call(func=Name(id='should_execute_step', ctx=Load()), args=[Constant(value='unknown'), Constant(value=None)], keywords=[]), ops=[Is()], comparators=[Constant(value=False)])), Assert(test=Compare(left=Call(func=Name(id='should_execute_step', ctx=Load()), args=[Constant(value=None), Constant(value=None)], keywords=[]), ops=[Is()], comparators=[Constant(value=False)]))], decorator_list=[])], decorator_list=[])], type_ignores=[])