Module(body=[Import(names=[alias(name='collections')]), ClassDef(name='FreezableDefaultDict', bases=[Attribute(value=Name(id='collections', ctx=Load()), attr='defaultdict', ctx=Load())], keywords=[], body=[Expr(value=Constant(value="\n    Often it is desirable to prevent the mutation of\n    a default dict after its initial construction, such\n    as to prevent mutation during iteration.\n\n    >>> dd = FreezableDefaultDict(list)\n    >>> dd[0].append('1')\n    >>> dd.freeze()\n    >>> dd[1]\n    []\n    >>> len(dd)\n    1\n    ")), FunctionDef(name='__missing__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Constant(value='_frozen'), Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__missing__', ctx=Load())], keywords=[]), args=[Name(id='key', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='freeze', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_frozen', ctx=Store())], value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='key')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='default_factory', ctx=Load()), args=[], keywords=[])))], decorator_list=[])], decorator_list=[]), ClassDef(name='Pair', bases=[Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='namedtuple', ctx=Load()), args=[Constant(value='Pair'), Constant(value='name value')], keywords=[])], keywords=[], body=[FunctionDef(name='parse', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='text')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='cls', ctx=Load()), args=[Starred(value=Call(func=Name(id='map', ctx=Load()), args=[Attribute(value=Name(id='str', ctx=Load()), attr='strip', ctx=Load()), Call(func=Attribute(value=Name(id='text', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='='), Constant(value=1)], keywords=[])], keywords=[]), ctx=Load())], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())])], decorator_list=[])], type_ignores=[])