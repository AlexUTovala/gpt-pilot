Module(body=[Expr(value=Constant(value='distutils.pypirc\n\nProvides the PyPIRCCommand class, the base class for the command classes\nthat uses .pypirc in the distutils.command package.\n')), Import(names=[alias(name='os')]), ImportFrom(module='configparser', names=[alias(name='RawConfigParser')], level=0), ImportFrom(module='cmd', names=[alias(name='Command')], level=1), Assign(targets=[Name(id='DEFAULT_PYPIRC', ctx=Store())], value=Constant(value='[distutils]\nindex-servers =\n    pypi\n\n[pypi]\nusername:%s\npassword:%s\n')), ClassDef(name='PyPIRCCommand', bases=[Name(id='Command', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Base command that knows how to handle the .pypirc file')), Assign(targets=[Name(id='DEFAULT_REPOSITORY', ctx=Store())], value=Constant(value='https://upload.pypi.org/legacy/')), Assign(targets=[Name(id='DEFAULT_REALM', ctx=Store())], value=Constant(value='pypi')), Assign(targets=[Name(id='repository', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='realm', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='user_options', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='repository='), Constant(value='r'), BinOp(left=Constant(value='url of repository [default: %s]'), op=Mod(), right=Name(id='DEFAULT_REPOSITORY', ctx=Load()))], ctx=Load()), Tuple(elts=[Constant(value='show-response'), Constant(value=None), Constant(value='display full response text from server')], ctx=Load())], ctx=Load())), Assign(targets=[Name(id='boolean_options', ctx=Store())], value=List(elts=[Constant(value='show-response')], ctx=Load())), FunctionDef(name='_get_rc_file', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Returns rc file path.')), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='expanduser', ctx=Load()), args=[Constant(value='~')], keywords=[]), Constant(value='.pypirc')], keywords=[]))], decorator_list=[]), FunctionDef(name='_store_pypirc', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='username'), arg(arg='password')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Creates a default .pypirc file.')), Assign(targets=[Name(id='rc', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_rc_file', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='fdopen', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='open', ctx=Load()), args=[Name(id='rc', ctx=Load()), BinOp(left=Attribute(value=Name(id='os', ctx=Load()), attr='O_CREAT', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='os', ctx=Load()), attr='O_WRONLY', ctx=Load())), Constant(value=384)], keywords=[]), Constant(value='w')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Name(id='DEFAULT_PYPIRC', ctx=Load()), op=Mod(), right=Tuple(elts=[Name(id='username', ctx=Load()), Name(id='password', ctx=Load())], ctx=Load()))], keywords=[]))])], decorator_list=[]), FunctionDef(name='_read_pypirc', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Reads the .pypirc file.')), Assign(targets=[Name(id='rc', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_rc_file', ctx=Load()), args=[], keywords=[])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='rc', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='announce', ctx=Load()), args=[BinOp(left=Constant(value='Using PyPI login from %s'), op=Mod(), right=Name(id='rc', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='repository', ctx=Store())], value=BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='repository', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='DEFAULT_REPOSITORY', ctx=Load())])), Assign(targets=[Name(id='config', ctx=Store())], value=Call(func=Name(id='RawConfigParser', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='config', ctx=Load()), attr='read', ctx=Load()), args=[Name(id='rc', ctx=Load())], keywords=[])), Assign(targets=[Name(id='sections', ctx=Store())], value=Call(func=Attribute(value=Name(id='config', ctx=Load()), attr='sections', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Constant(value='distutils'), ops=[In()], comparators=[Name(id='sections', ctx=Load())]), body=[Assign(targets=[Name(id='index_servers', ctx=Store())], value=Call(func=Attribute(value=Name(id='config', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='distutils'), Constant(value='index-servers')], keywords=[])), Assign(targets=[Name(id='_servers', ctx=Store())], value=ListComp(elt=Call(func=Attribute(value=Name(id='server', ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='server', ctx=Store()), iter=Call(func=Attribute(value=Name(id='index_servers', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='\n')], keywords=[]), ifs=[Compare(left=Call(func=Attribute(value=Name(id='server', ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[]), ops=[NotEq()], comparators=[Constant(value='')])], is_async=0)])), If(test=Compare(left=Name(id='_servers', ctx=Load()), ops=[Eq()], comparators=[List(elts=[], ctx=Load())]), body=[If(test=Compare(left=Constant(value='pypi'), ops=[In()], comparators=[Name(id='sections', ctx=Load())]), body=[Assign(targets=[Name(id='_servers', ctx=Store())], value=List(elts=[Constant(value='pypi')], ctx=Load()))], orelse=[Return(value=Dict(keys=[], values=[]))])], orelse=[]), For(target=Name(id='server', ctx=Store()), iter=Name(id='_servers', ctx=Load()), body=[Assign(targets=[Name(id='current', ctx=Store())], value=Dict(keys=[Constant(value='server')], values=[Name(id='server', ctx=Load())])), Assign(targets=[Subscript(value=Name(id='current', ctx=Load()), slice=Constant(value='username'), ctx=Store())], value=Call(func=Attribute(value=Name(id='config', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='server', ctx=Load()), Constant(value='username')], keywords=[])), For(target=Tuple(elts=[Name(id='key', ctx=Store()), Name(id='default', ctx=Store())], ctx=Store()), iter=Tuple(elts=[Tuple(elts=[Constant(value='repository'), Attribute(value=Name(id='self', ctx=Load()), attr='DEFAULT_REPOSITORY', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='realm'), Attribute(value=Name(id='self', ctx=Load()), attr='DEFAULT_REALM', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='password'), Constant(value=None)], ctx=Load())], ctx=Load()), body=[If(test=Call(func=Attribute(value=Name(id='config', ctx=Load()), attr='has_option', ctx=Load()), args=[Name(id='server', ctx=Load()), Name(id='key', ctx=Load())], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='current', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Name(id='config', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='server', ctx=Load()), Name(id='key', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Subscript(value=Name(id='current', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store())], value=Name(id='default', ctx=Load()))])], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='server', ctx=Load()), ops=[Eq()], comparators=[Constant(value='pypi')]), Compare(left=Name(id='repository', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='DEFAULT_REPOSITORY', ctx=Load()), Constant(value='pypi')], ctx=Load())])]), body=[Assign(targets=[Subscript(value=Name(id='current', ctx=Load()), slice=Constant(value='repository'), ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='DEFAULT_REPOSITORY', ctx=Load())), Return(value=Name(id='current', ctx=Load()))], orelse=[]), If(test=BoolOp(op=Or(), values=[Compare(left=Subscript(value=Name(id='current', ctx=Load()), slice=Constant(value='server'), ctx=Load()), ops=[Eq()], comparators=[Name(id='repository', ctx=Load())]), Compare(left=Subscript(value=Name(id='current', ctx=Load()), slice=Constant(value='repository'), ctx=Load()), ops=[Eq()], comparators=[Name(id='repository', ctx=Load())])]), body=[Return(value=Name(id='current', ctx=Load()))], orelse=[])], orelse=[])], orelse=[If(test=Compare(left=Constant(value='server-login'), ops=[In()], comparators=[Name(id='sections', ctx=Load())]), body=[Assign(targets=[Name(id='server', ctx=Store())], value=Constant(value='server-login')), If(test=Call(func=Attribute(value=Name(id='config', ctx=Load()), attr='has_option', ctx=Load()), args=[Name(id='server', ctx=Load()), Constant(value='repository')], keywords=[]), body=[Assign(targets=[Name(id='repository', ctx=Store())], value=Call(func=Attribute(value=Name(id='config', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='server', ctx=Load()), Constant(value='repository')], keywords=[]))], orelse=[Assign(targets=[Name(id='repository', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='DEFAULT_REPOSITORY', ctx=Load()))]), Return(value=Dict(keys=[Constant(value='username'), Constant(value='password'), Constant(value='repository'), Constant(value='server'), Constant(value='realm')], values=[Call(func=Attribute(value=Name(id='config', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='server', ctx=Load()), Constant(value='username')], keywords=[]), Call(func=Attribute(value=Name(id='config', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='server', ctx=Load()), Constant(value='password')], keywords=[]), Name(id='repository', ctx=Load()), Name(id='server', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='DEFAULT_REALM', ctx=Load())]))], orelse=[])])], orelse=[]), Return(value=Dict(keys=[], values=[]))], decorator_list=[]), FunctionDef(name='_read_pypi_response', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='response')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Read and decode a PyPI HTTP response.')), Import(names=[alias(name='cgi')]), Assign(targets=[Name(id='content_type', ctx=Store())], value=Call(func=Attribute(value=Name(id='response', ctx=Load()), attr='getheader', ctx=Load()), args=[Constant(value='content-type'), Constant(value='text/plain')], keywords=[])), Assign(targets=[Name(id='encoding', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Call(func=Attribute(value=Name(id='cgi', ctx=Load()), attr='parse_header', ctx=Load()), args=[Name(id='content_type', ctx=Load())], keywords=[]), slice=Constant(value=1), ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='charset'), Constant(value='ascii')], keywords=[])), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='response', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), attr='decode', ctx=Load()), args=[Name(id='encoding', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='initialize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Initialize options.')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='repository', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='realm', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='show_response', ctx=Store())], value=Constant(value=0))], decorator_list=[]), FunctionDef(name='finalize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Finalizes options.')), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='repository', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='repository', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='DEFAULT_REPOSITORY', ctx=Load()))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='realm', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='realm', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='DEFAULT_REALM', ctx=Load()))], orelse=[])], decorator_list=[])], decorator_list=[])], type_ignores=[])