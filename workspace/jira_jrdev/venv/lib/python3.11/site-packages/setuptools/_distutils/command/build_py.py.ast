Module(body=[Expr(value=Constant(value="distutils.command.build_py\n\nImplements the Distutils 'build_py' command.")), Import(names=[alias(name='os')]), Import(names=[alias(name='importlib.util')]), Import(names=[alias(name='sys')]), Import(names=[alias(name='glob')]), ImportFrom(module='core', names=[alias(name='Command')], level=2), ImportFrom(module='errors', names=[alias(name='DistutilsOptionError'), alias(name='DistutilsFileError')], level=2), ImportFrom(module='util', names=[alias(name='convert_path')], level=2), ImportFrom(module='distutils._log', names=[alias(name='log')], level=0), ClassDef(name='build_py', bases=[Name(id='Command', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='description', ctx=Store())], value=Constant(value='"build" pure Python modules (copy to build directory)')), Assign(targets=[Name(id='user_options', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='build-lib='), Constant(value='d'), Constant(value='directory to "build" (copy) to')], ctx=Load()), Tuple(elts=[Constant(value='compile'), Constant(value='c'), Constant(value='compile .py to .pyc')], ctx=Load()), Tuple(elts=[Constant(value='no-compile'), Constant(value=None), Constant(value="don't compile .py files [default]")], ctx=Load()), Tuple(elts=[Constant(value='optimize='), Constant(value='O'), Constant(value='also compile with optimization: -O1 for "python -O", -O2 for "python -OO", and -O0 to disable [default: -O0]')], ctx=Load()), Tuple(elts=[Constant(value='force'), Constant(value='f'), Constant(value='forcibly build everything (ignore file timestamps)')], ctx=Load())], ctx=Load())), Assign(targets=[Name(id='boolean_options', ctx=Store())], value=List(elts=[Constant(value='compile'), Constant(value='force')], ctx=Load())), Assign(targets=[Name(id='negative_opt', ctx=Store())], value=Dict(keys=[Constant(value='no-compile')], values=[Constant(value='compile')])), FunctionDef(name='initialize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_lib', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='py_modules', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='package', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='package_data', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='package_dir', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='compile', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='optimize', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='force', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='finalize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='set_undefined_options', ctx=Load()), args=[Constant(value='build'), Tuple(elts=[Constant(value='build_lib'), Constant(value='build_lib')], ctx=Load()), Tuple(elts=[Constant(value='force'), Constant(value='force')], ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='packages', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='packages', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='py_modules', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='py_modules', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='package_data', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='package_data', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='package_dir', ctx=Store())], value=Dict(keys=[], values=[])), If(test=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='package_dir', ctx=Load()), body=[For(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='path', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='package_dir', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='package_dir', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Store())], value=Call(func=Name(id='convert_path', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='data_files', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_data_files', ctx=Load()), args=[], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='optimize', ctx=Load()), Name(id='int', ctx=Load())], keywords=[])), body=[Try(body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='optimize', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='optimize', ctx=Load())], keywords=[])), Assert(test=Compare(left=Constant(value=0), ops=[LtE(), LtE()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='optimize', ctx=Load()), Constant(value=2)]))], handlers=[ExceptHandler(type=Tuple(elts=[Name(id='ValueError', ctx=Load()), Name(id='AssertionError', ctx=Load())], ctx=Load()), body=[Raise(exc=Call(func=Name(id='DistutilsOptionError', ctx=Load()), args=[Constant(value='optimize must be 0, 1, or 2')], keywords=[]))])], orelse=[], finalbody=[])], orelse=[])], decorator_list=[]), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='py_modules', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='build_modules', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='packages', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='build_packages', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='build_package_data', ctx=Load()), args=[], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='byte_compile', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_outputs', ctx=Load()), args=[], keywords=[keyword(arg='include_bytecode', value=Constant(value=0))])], keywords=[]))], decorator_list=[]), FunctionDef(name='get_data_files', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="Generate list of '(package,src_dir,build_dir,filenames)' tuples")), Assign(targets=[Name(id='data', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='packages', ctx=Load())), body=[Return(value=Name(id='data', ctx=Load()))], orelse=[]), For(target=Name(id='package', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='packages', ctx=Load()), body=[Assign(targets=[Name(id='src_dir', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_package_dir', ctx=Load()), args=[Name(id='package', ctx=Load())], keywords=[])), Assign(targets=[Name(id='build_dir', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Starred(value=BinOp(left=List(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='build_lib', ctx=Load())], ctx=Load()), op=Add(), right=Call(func=Attribute(value=Name(id='package', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[])), ctx=Load())], keywords=[])), Assign(targets=[Name(id='plen', ctx=Store())], value=Constant(value=0)), If(test=Name(id='src_dir', ctx=Load()), body=[Assign(targets=[Name(id='plen', ctx=Store())], value=BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='src_dir', ctx=Load())], keywords=[]), op=Add(), right=Constant(value=1)))], orelse=[]), Assign(targets=[Name(id='filenames', ctx=Store())], value=ListComp(elt=Subscript(value=Name(id='file', ctx=Load()), slice=Slice(lower=Name(id='plen', ctx=Load())), ctx=Load()), generators=[comprehension(target=Name(id='file', ctx=Store()), iter=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='find_data_files', ctx=Load()), args=[Name(id='package', ctx=Load()), Name(id='src_dir', ctx=Load())], keywords=[]), ifs=[], is_async=0)])), Expr(value=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='package', ctx=Load()), Name(id='src_dir', ctx=Load()), Name(id='build_dir', ctx=Load()), Name(id='filenames', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='data', ctx=Load()))], decorator_list=[]), FunctionDef(name='find_data_files', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='package'), arg(arg='src_dir')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="Return filenames for package's data files in 'src_dir'")), Assign(targets=[Name(id='globs', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='package_data', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value=''), List(elts=[], ctx=Load())], keywords=[]), op=Add(), right=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='package_data', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='package', ctx=Load()), List(elts=[], ctx=Load())], keywords=[]))), Assign(targets=[Name(id='files', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='pattern', ctx=Store()), iter=Name(id='globs', ctx=Load()), body=[Assign(targets=[Name(id='filelist', ctx=Store())], value=Call(func=Attribute(value=Name(id='glob', ctx=Load()), attr='glob', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='glob', ctx=Load()), attr='escape', ctx=Load()), args=[Name(id='src_dir', ctx=Load())], keywords=[]), Call(func=Name(id='convert_path', ctx=Load()), args=[Name(id='pattern', ctx=Load())], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='files', ctx=Load()), attr='extend', ctx=Load()), args=[ListComp(elt=Name(id='fn', ctx=Load()), generators=[comprehension(target=Name(id='fn', ctx=Store()), iter=Name(id='filelist', ctx=Load()), ifs=[BoolOp(op=And(), values=[Compare(left=Name(id='fn', ctx=Load()), ops=[NotIn()], comparators=[Name(id='files', ctx=Load())]), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isfile', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[])])], is_async=0)])], keywords=[]))], orelse=[]), Return(value=Name(id='files', ctx=Load()))], decorator_list=[]), FunctionDef(name='build_package_data', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Copy data files into build directory')), For(target=Tuple(elts=[Name(id='package', ctx=Store()), Name(id='src_dir', ctx=Store()), Name(id='build_dir', ctx=Store()), Name(id='filenames', ctx=Store())], ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='data_files', ctx=Load()), body=[For(target=Name(id='filename', ctx=Store()), iter=Name(id='filenames', ctx=Load()), body=[Assign(targets=[Name(id='target', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='build_dir', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='mkpath', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='dirname', ctx=Load()), args=[Name(id='target', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='copy_file', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='src_dir', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[]), Name(id='target', ctx=Load())], keywords=[keyword(arg='preserve_mode', value=Constant(value=False))]))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='get_package_dir', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='package')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="Return the directory, relative to the top of the source\n        distribution, where package 'package' should be found\n        (at least according to the 'package_dir' option, if any).")), Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Name(id='package', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[])), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='package_dir', ctx=Load())), body=[If(test=Name(id='path', ctx=Load()), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Starred(value=Name(id='path', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[Return(value=Constant(value=''))])], orelse=[Assign(targets=[Name(id='tail', ctx=Store())], value=List(elts=[], ctx=Load())), While(test=Name(id='path', ctx=Load()), body=[Try(body=[Assign(targets=[Name(id='pdir', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='package_dir', ctx=Load()), slice=Call(func=Attribute(value=Constant(value='.'), attr='join', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='tail', ctx=Load()), attr='insert', ctx=Load()), args=[Constant(value=0), Subscript(value=Name(id='path', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())], keywords=[])), Delete(targets=[Subscript(value=Name(id='path', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Del())])])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='tail', ctx=Load()), attr='insert', ctx=Load()), args=[Constant(value=0), Name(id='pdir', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Starred(value=Name(id='tail', ctx=Load()), ctx=Load())], keywords=[]))], finalbody=[])], orelse=[Assign(targets=[Name(id='pdir', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='package_dir', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='')], keywords=[])), If(test=Compare(left=Name(id='pdir', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='tail', ctx=Load()), attr='insert', ctx=Load()), args=[Constant(value=0), Name(id='pdir', ctx=Load())], keywords=[]))], orelse=[]), If(test=Name(id='tail', ctx=Load()), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Starred(value=Name(id='tail', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[Return(value=Constant(value=''))])])])], decorator_list=[]), FunctionDef(name='check_package', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='package'), arg(arg='package_dir')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='package_dir', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='')]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='package_dir', ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='DistutilsFileError', ctx=Load()), args=[BinOp(left=Constant(value="package directory '%s' does not exist"), op=Mod(), right=Name(id='package_dir', ctx=Load()))], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[Name(id='package_dir', ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='DistutilsFileError', ctx=Load()), args=[BinOp(left=Constant(value="supposed package directory '%s' exists, but is not a directory"), op=Mod(), right=Name(id='package_dir', ctx=Load()))], keywords=[]))], orelse=[])], orelse=[]), If(test=Name(id='package', ctx=Load()), body=[Assign(targets=[Name(id='init_py', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='package_dir', ctx=Load()), Constant(value='__init__.py')], keywords=[])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isfile', ctx=Load()), args=[Name(id='init_py', ctx=Load())], keywords=[]), body=[Return(value=Name(id='init_py', ctx=Load()))], orelse=[])], orelse=[]), Return(value=Constant(value=None))], decorator_list=[]), FunctionDef(name='check_module', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='module'), arg(arg='module_file')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isfile', ctx=Load()), args=[Name(id='module_file', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='warning', ctx=Load()), args=[Constant(value='file %s (for module %s) not found'), Name(id='module_file', ctx=Load()), Name(id='module', ctx=Load())], keywords=[])), Return(value=Constant(value=False))], orelse=[Return(value=Constant(value=True))])], decorator_list=[]), FunctionDef(name='find_package_modules', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='package'), arg(arg='package_dir')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_package', ctx=Load()), args=[Name(id='package', ctx=Load()), Name(id='package_dir', ctx=Load())], keywords=[])), Assign(targets=[Name(id='module_files', ctx=Store())], value=Call(func=Attribute(value=Name(id='glob', ctx=Load()), attr='glob', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='glob', ctx=Load()), attr='escape', ctx=Load()), args=[Name(id='package_dir', ctx=Load())], keywords=[]), Constant(value='*.py')], keywords=[])], keywords=[])), Assign(targets=[Name(id='modules', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='setup_script', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='abspath', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='script_name', ctx=Load())], keywords=[])), For(target=Name(id='f', ctx=Store()), iter=Name(id='module_files', ctx=Load()), body=[Assign(targets=[Name(id='abs_f', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='abspath', ctx=Load()), args=[Name(id='f', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='abs_f', ctx=Load()), ops=[NotEq()], comparators=[Name(id='setup_script', ctx=Load())]), body=[Assign(targets=[Name(id='module', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='splitext', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Name(id='f', ctx=Load())], keywords=[])], keywords=[]), slice=Constant(value=0), ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='modules', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='package', ctx=Load()), Name(id='module', ctx=Load()), Name(id='f', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='debug_print', ctx=Load()), args=[BinOp(left=Constant(value='excluding %s'), op=Mod(), right=Name(id='setup_script', ctx=Load()))], keywords=[]))])], orelse=[]), Return(value=Name(id='modules', ctx=Load()))], decorator_list=[]), FunctionDef(name='find_modules', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Finds individually-specified Python modules, ie. those listed by\n        module name in \'self.py_modules\'.  Returns a list of tuples (package,\n        module_base, filename): \'package\' is a tuple of the path through\n        package-space to the module; \'module_base\' is the bare (no\n        packages, no dots) module name, and \'filename\' is the path to the\n        ".py" file (relative to the distribution root) that implements the\n        module.\n        ')), Assign(targets=[Name(id='packages', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='modules', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='module', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='py_modules', ctx=Load()), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Name(id='module', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[])), Assign(targets=[Name(id='package', ctx=Store())], value=Call(func=Attribute(value=Constant(value='.'), attr='join', ctx=Load()), args=[Subscript(value=Name(id='path', ctx=Load()), slice=Slice(lower=Constant(value=0), upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load())], keywords=[])), Assign(targets=[Name(id='module_base', ctx=Store())], value=Subscript(value=Name(id='path', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())), Try(body=[Assign(targets=[Tuple(elts=[Name(id='package_dir', ctx=Store()), Name(id='checked', ctx=Store())], ctx=Store())], value=Subscript(value=Name(id='packages', ctx=Load()), slice=Name(id='package', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Assign(targets=[Name(id='package_dir', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_package_dir', ctx=Load()), args=[Name(id='package', ctx=Load())], keywords=[])), Assign(targets=[Name(id='checked', ctx=Store())], value=Constant(value=0))])], orelse=[], finalbody=[]), If(test=UnaryOp(op=Not(), operand=Name(id='checked', ctx=Load())), body=[Assign(targets=[Name(id='init_py', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_package', ctx=Load()), args=[Name(id='package', ctx=Load()), Name(id='package_dir', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='packages', ctx=Load()), slice=Name(id='package', ctx=Load()), ctx=Store())], value=Tuple(elts=[Name(id='package_dir', ctx=Load()), Constant(value=1)], ctx=Load())), If(test=Name(id='init_py', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='modules', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='package', ctx=Load()), Constant(value='__init__'), Name(id='init_py', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='module_file', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='package_dir', ctx=Load()), BinOp(left=Name(id='module_base', ctx=Load()), op=Add(), right=Constant(value='.py'))], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_module', ctx=Load()), args=[Name(id='module', ctx=Load()), Name(id='module_file', ctx=Load())], keywords=[])), body=[Continue()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='modules', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='package', ctx=Load()), Name(id='module_base', ctx=Load()), Name(id='module_file', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='modules', ctx=Load()))], decorator_list=[]), FunctionDef(name='find_all_modules', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="Compute the list of all modules that will be built, whether\n        they are specified one-module-at-a-time ('self.py_modules') or\n        by whole packages ('self.packages').  Return a list of tuples\n        (package, module, module_file), just like 'find_modules()' and\n        'find_package_modules()' do.")), Assign(targets=[Name(id='modules', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='py_modules', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='modules', ctx=Load()), attr='extend', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='find_modules', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='packages', ctx=Load()), body=[For(target=Name(id='package', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='packages', ctx=Load()), body=[Assign(targets=[Name(id='package_dir', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_package_dir', ctx=Load()), args=[Name(id='package', ctx=Load())], keywords=[])), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='find_package_modules', ctx=Load()), args=[Name(id='package', ctx=Load()), Name(id='package_dir', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='modules', ctx=Load()), attr='extend', ctx=Load()), args=[Name(id='m', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Return(value=Name(id='modules', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_source_files', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=ListComp(elt=Subscript(value=Name(id='module', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), generators=[comprehension(target=Name(id='module', ctx=Store()), iter=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='find_all_modules', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='get_module_outfile', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='build_dir'), arg(arg='package'), arg(arg='module')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='outfile_path', ctx=Store())], value=BinOp(left=BinOp(left=List(elts=[Name(id='build_dir', ctx=Load())], ctx=Load()), op=Add(), right=Call(func=Name(id='list', ctx=Load()), args=[Name(id='package', ctx=Load())], keywords=[])), op=Add(), right=List(elts=[BinOp(left=Name(id='module', ctx=Load()), op=Add(), right=Constant(value='.py'))], ctx=Load()))), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Starred(value=Name(id='outfile_path', ctx=Load()), ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_outputs', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='include_bytecode')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=1)]), body=[Assign(targets=[Name(id='modules', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='find_all_modules', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='outputs', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Tuple(elts=[Name(id='package', ctx=Store()), Name(id='module', ctx=Store()), Name(id='module_file', ctx=Store())], ctx=Store()), iter=Name(id='modules', ctx=Load()), body=[Assign(targets=[Name(id='package', ctx=Store())], value=Call(func=Attribute(value=Name(id='package', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[])), Assign(targets=[Name(id='filename', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_module_outfile', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='build_lib', ctx=Load()), Name(id='package', ctx=Load()), Name(id='module', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='outputs', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])), If(test=Name(id='include_bytecode', ctx=Load()), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='compile', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='outputs', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='importlib', ctx=Load()), attr='util', ctx=Load()), attr='cache_from_source', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[keyword(arg='optimization', value=Constant(value=''))])], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='optimize', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), body=[Expr(value=Call(func=Attribute(value=Name(id='outputs', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='importlib', ctx=Load()), attr='util', ctx=Load()), attr='cache_from_source', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[keyword(arg='optimization', value=Attribute(value=Name(id='self', ctx=Load()), attr='optimize', ctx=Load()))])], keywords=[]))], orelse=[])], orelse=[])], orelse=[]), AugAssign(target=Name(id='outputs', ctx=Store()), op=Add(), value=ListComp(elt=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='build_dir', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[]), generators=[comprehension(target=Tuple(elts=[Name(id='package', ctx=Store()), Name(id='src_dir', ctx=Store()), Name(id='build_dir', ctx=Store()), Name(id='filenames', ctx=Store())], ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='data_files', ctx=Load()), ifs=[], is_async=0), comprehension(target=Name(id='filename', ctx=Store()), iter=Name(id='filenames', ctx=Load()), ifs=[], is_async=0)])), Return(value=Name(id='outputs', ctx=Load()))], decorator_list=[]), FunctionDef(name='build_module', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='module'), arg(arg='module_file'), arg(arg='package')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='package', ctx=Load()), Name(id='str', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='package', ctx=Store())], value=Call(func=Attribute(value=Name(id='package', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[]))], orelse=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='package', ctx=Load()), Tuple(elts=[Name(id='list', ctx=Load()), Name(id='tuple', ctx=Load())], ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='TypeError', ctx=Load()), args=[Constant(value="'package' must be a string (dot-separated), list, or tuple")], keywords=[]))], orelse=[])]), Assign(targets=[Name(id='outfile', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_module_outfile', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='build_lib', ctx=Load()), Name(id='package', ctx=Load()), Name(id='module', ctx=Load())], keywords=[])), Assign(targets=[Name(id='dir', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='dirname', ctx=Load()), args=[Name(id='outfile', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='mkpath', ctx=Load()), args=[Name(id='dir', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='copy_file', ctx=Load()), args=[Name(id='module_file', ctx=Load()), Name(id='outfile', ctx=Load())], keywords=[keyword(arg='preserve_mode', value=Constant(value=0))]))], decorator_list=[]), FunctionDef(name='build_modules', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='modules', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='find_modules', ctx=Load()), args=[], keywords=[])), For(target=Tuple(elts=[Name(id='package', ctx=Store()), Name(id='module', ctx=Store()), Name(id='module_file', ctx=Store())], ctx=Store()), iter=Name(id='modules', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='build_module', ctx=Load()), args=[Name(id='module', ctx=Load()), Name(id='module_file', ctx=Load()), Name(id='package', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='build_packages', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='package', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='packages', ctx=Load()), body=[Assign(targets=[Name(id='package_dir', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_package_dir', ctx=Load()), args=[Name(id='package', ctx=Load())], keywords=[])), Assign(targets=[Name(id='modules', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='find_package_modules', ctx=Load()), args=[Name(id='package', ctx=Load()), Name(id='package_dir', ctx=Load())], keywords=[])), For(target=Tuple(elts=[Name(id='package_', ctx=Store()), Name(id='module', ctx=Store()), Name(id='module_file', ctx=Store())], ctx=Store()), iter=Name(id='modules', ctx=Load()), body=[Assert(test=Compare(left=Name(id='package', ctx=Load()), ops=[Eq()], comparators=[Name(id='package_', ctx=Load())])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='build_module', ctx=Load()), args=[Name(id='module', ctx=Load()), Name(id='module_file', ctx=Load()), Name(id='package', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='byte_compile', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='files')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='sys', ctx=Load()), attr='dont_write_bytecode', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='warn', ctx=Load()), args=[Constant(value='byte-compiling is disabled, skipping.')], keywords=[])), Return()], orelse=[]), ImportFrom(module='util', names=[alias(name='byte_compile')], level=2), Assign(targets=[Name(id='prefix', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='build_lib', ctx=Load())), If(test=Compare(left=Subscript(value=Name(id='prefix', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='os', ctx=Load()), attr='sep', ctx=Load())]), body=[Assign(targets=[Name(id='prefix', ctx=Store())], value=BinOp(left=Name(id='prefix', ctx=Load()), op=Add(), right=Attribute(value=Name(id='os', ctx=Load()), attr='sep', ctx=Load())))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='compile', ctx=Load()), body=[Expr(value=Call(func=Name(id='byte_compile', ctx=Load()), args=[Name(id='files', ctx=Load())], keywords=[keyword(arg='optimize', value=Constant(value=0)), keyword(arg='force', value=Attribute(value=Name(id='self', ctx=Load()), attr='force', ctx=Load())), keyword(arg='prefix', value=Name(id='prefix', ctx=Load())), keyword(arg='dry_run', value=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load()))]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='optimize', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), body=[Expr(value=Call(func=Name(id='byte_compile', ctx=Load()), args=[Name(id='files', ctx=Load())], keywords=[keyword(arg='optimize', value=Attribute(value=Name(id='self', ctx=Load()), attr='optimize', ctx=Load())), keyword(arg='force', value=Attribute(value=Name(id='self', ctx=Load()), attr='force', ctx=Load())), keyword(arg='prefix', value=Name(id='prefix', ctx=Load())), keyword(arg='dry_run', value=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load()))]))], orelse=[])], decorator_list=[])], decorator_list=[])], type_ignores=[])