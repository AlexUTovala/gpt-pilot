Module(body=[Expr(value=Constant(value="distutils.command.build_clib\n\nImplements the Distutils 'build_clib' command, to build a C/C++ library\nthat is included in the module distribution and needed by an extension\nmodule.")), Import(names=[alias(name='os')]), ImportFrom(module='core', names=[alias(name='Command')], level=2), ImportFrom(module='errors', names=[alias(name='DistutilsSetupError')], level=2), ImportFrom(module='sysconfig', names=[alias(name='customize_compiler')], level=2), ImportFrom(module='distutils._log', names=[alias(name='log')], level=0), FunctionDef(name='show_compilers', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[ImportFrom(module='ccompiler', names=[alias(name='show_compilers')], level=2), Expr(value=Call(func=Name(id='show_compilers', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), ClassDef(name='build_clib', bases=[Name(id='Command', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='description', ctx=Store())], value=Constant(value='build C/C++ libraries used by Python extensions')), Assign(targets=[Name(id='user_options', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='build-clib='), Constant(value='b'), Constant(value='directory to build C/C++ libraries to')], ctx=Load()), Tuple(elts=[Constant(value='build-temp='), Constant(value='t'), Constant(value='directory to put temporary build by-products')], ctx=Load()), Tuple(elts=[Constant(value='debug'), Constant(value='g'), Constant(value='compile with debugging information')], ctx=Load()), Tuple(elts=[Constant(value='force'), Constant(value='f'), Constant(value='forcibly build everything (ignore file timestamps)')], ctx=Load()), Tuple(elts=[Constant(value='compiler='), Constant(value='c'), Constant(value='specify the compiler type')], ctx=Load())], ctx=Load())), Assign(targets=[Name(id='boolean_options', ctx=Store())], value=List(elts=[Constant(value='debug'), Constant(value='force')], ctx=Load())), Assign(targets=[Name(id='help_options', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='help-compiler'), Constant(value=None), Constant(value='list available compilers'), Name(id='show_compilers', ctx=Load())], ctx=Load())], ctx=Load())), FunctionDef(name='initialize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_clib', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_temp', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='libraries', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='include_dirs', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='define', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='undef', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='debug', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='force', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='compiler', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='finalize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='set_undefined_options', ctx=Load()), args=[Constant(value='build'), Tuple(elts=[Constant(value='build_temp'), Constant(value='build_clib')], ctx=Load()), Tuple(elts=[Constant(value='build_temp'), Constant(value='build_temp')], ctx=Load()), Tuple(elts=[Constant(value='compiler'), Constant(value='compiler')], ctx=Load()), Tuple(elts=[Constant(value='debug'), Constant(value='debug')], ctx=Load()), Tuple(elts=[Constant(value='force'), Constant(value='force')], ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='libraries', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='libraries', ctx=Load())), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='libraries', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_library_list', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='libraries', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='include_dirs', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='include_dirs', ctx=Store())], value=BoolOp(op=Or(), values=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='include_dirs', ctx=Load()), List(elts=[], ctx=Load())]))], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='include_dirs', ctx=Load()), Name(id='str', ctx=Load())], keywords=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='include_dirs', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='include_dirs', ctx=Load()), attr='split', ctx=Load()), args=[Attribute(value=Name(id='os', ctx=Load()), attr='pathsep', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='libraries', ctx=Load())), body=[Return()], orelse=[]), ImportFrom(module='ccompiler', names=[alias(name='new_compiler')], level=2), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='compiler', ctx=Store())], value=Call(func=Name(id='new_compiler', ctx=Load()), args=[], keywords=[keyword(arg='compiler', value=Attribute(value=Name(id='self', ctx=Load()), attr='compiler', ctx=Load())), keyword(arg='dry_run', value=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load())), keyword(arg='force', value=Attribute(value=Name(id='self', ctx=Load()), attr='force', ctx=Load()))])), Expr(value=Call(func=Name(id='customize_compiler', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='compiler', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='include_dirs', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='compiler', ctx=Load()), attr='set_include_dirs', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='include_dirs', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='define', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[For(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='define', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='compiler', ctx=Load()), attr='define_macro', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='undef', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[For(target=Name(id='macro', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='undef', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='compiler', ctx=Load()), attr='undefine_macro', ctx=Load()), args=[Name(id='macro', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='build_libraries', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='libraries', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='check_library_list', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='libraries')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="Ensure that the list of libraries is valid.\n\n        `library` is presumably provided as a command option 'libraries'.\n        This method checks that it is a list of 2-tuples, where the tuples\n        are (library_name, build_info_dict).\n\n        Raise DistutilsSetupError if the structure is invalid anywhere;\n        just returns otherwise.\n        ")), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='libraries', ctx=Load()), Name(id='list', ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='DistutilsSetupError', ctx=Load()), args=[Constant(value="'libraries' option must be a list of tuples")], keywords=[]))], orelse=[]), For(target=Name(id='lib', ctx=Store()), iter=Name(id='libraries', ctx=Load()), body=[If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='lib', ctx=Load()), Name(id='tuple', ctx=Load())], keywords=[])), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='lib', ctx=Load())], keywords=[]), ops=[NotEq()], comparators=[Constant(value=2)])]), body=[Raise(exc=Call(func=Name(id='DistutilsSetupError', ctx=Load()), args=[Constant(value="each element of 'libraries' must a 2-tuple")], keywords=[]))], orelse=[]), Assign(targets=[Tuple(elts=[Name(id='name', ctx=Store()), Name(id='build_info', ctx=Store())], ctx=Store())], value=Name(id='lib', ctx=Load())), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='DistutilsSetupError', ctx=Load()), args=[Constant(value="first element of each tuple in 'libraries' must be a string (the library name)")], keywords=[]))], orelse=[]), If(test=BoolOp(op=Or(), values=[Compare(left=Constant(value='/'), ops=[In()], comparators=[Name(id='name', ctx=Load())]), BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='os', ctx=Load()), attr='sep', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='/')]), Compare(left=Attribute(value=Name(id='os', ctx=Load()), attr='sep', ctx=Load()), ops=[In()], comparators=[Name(id='name', ctx=Load())])])]), body=[Raise(exc=Call(func=Name(id='DistutilsSetupError', ctx=Load()), args=[BinOp(left=Constant(value="bad library name '%s': may not contain directory separators"), op=Mod(), right=Subscript(value=Name(id='lib', ctx=Load()), slice=Constant(value=0), ctx=Load()))], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='build_info', ctx=Load()), Name(id='dict', ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='DistutilsSetupError', ctx=Load()), args=[Constant(value="second element of each tuple in 'libraries' must be a dictionary (build info)")], keywords=[]))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='get_library_names', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='libraries', ctx=Load())), body=[Return(value=Constant(value=None))], orelse=[]), Assign(targets=[Name(id='lib_names', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Tuple(elts=[Name(id='lib_name', ctx=Store()), Name(id='build_info', ctx=Store())], ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='libraries', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='lib_names', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='lib_name', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='lib_names', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_source_files', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_library_list', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='libraries', ctx=Load())], keywords=[])), Assign(targets=[Name(id='filenames', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Tuple(elts=[Name(id='lib_name', ctx=Store()), Name(id='build_info', ctx=Store())], ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='libraries', ctx=Load()), body=[Assign(targets=[Name(id='sources', ctx=Store())], value=Call(func=Attribute(value=Name(id='build_info', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='sources')], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='sources', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='sources', ctx=Load()), Tuple(elts=[Name(id='list', ctx=Load()), Name(id='tuple', ctx=Load())], ctx=Load())], keywords=[]))]), body=[Raise(exc=Call(func=Name(id='DistutilsSetupError', ctx=Load()), args=[BinOp(left=Constant(value="in 'libraries' option (library '%s'), 'sources' must be present and must be a list of source filenames"), op=Mod(), right=Name(id='lib_name', ctx=Load()))], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='filenames', ctx=Load()), attr='extend', ctx=Load()), args=[Name(id='sources', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='filenames', ctx=Load()))], decorator_list=[]), FunctionDef(name='build_libraries', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='libraries')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Tuple(elts=[Name(id='lib_name', ctx=Store()), Name(id='build_info', ctx=Store())], ctx=Store()), iter=Name(id='libraries', ctx=Load()), body=[Assign(targets=[Name(id='sources', ctx=Store())], value=Call(func=Attribute(value=Name(id='build_info', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='sources')], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='sources', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='sources', ctx=Load()), Tuple(elts=[Name(id='list', ctx=Load()), Name(id='tuple', ctx=Load())], ctx=Load())], keywords=[]))]), body=[Raise(exc=Call(func=Name(id='DistutilsSetupError', ctx=Load()), args=[BinOp(left=Constant(value="in 'libraries' option (library '%s'), 'sources' must be present and must be a list of source filenames"), op=Mod(), right=Name(id='lib_name', ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='sources', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Name(id='sources', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value="building '%s' library"), Name(id='lib_name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='macros', ctx=Store())], value=Call(func=Attribute(value=Name(id='build_info', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='macros')], keywords=[])), Assign(targets=[Name(id='include_dirs', ctx=Store())], value=Call(func=Attribute(value=Name(id='build_info', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='include_dirs')], keywords=[])), Assign(targets=[Name(id='objects', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='compiler', ctx=Load()), attr='compile', ctx=Load()), args=[Name(id='sources', ctx=Load())], keywords=[keyword(arg='output_dir', value=Attribute(value=Name(id='self', ctx=Load()), attr='build_temp', ctx=Load())), keyword(arg='macros', value=Name(id='macros', ctx=Load())), keyword(arg='include_dirs', value=Name(id='include_dirs', ctx=Load())), keyword(arg='debug', value=Attribute(value=Name(id='self', ctx=Load()), attr='debug', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='compiler', ctx=Load()), attr='create_static_lib', ctx=Load()), args=[Name(id='objects', ctx=Load()), Name(id='lib_name', ctx=Load())], keywords=[keyword(arg='output_dir', value=Attribute(value=Name(id='self', ctx=Load()), attr='build_clib', ctx=Load())), keyword(arg='debug', value=Attribute(value=Name(id='self', ctx=Load()), attr='debug', ctx=Load()))]))], orelse=[])], decorator_list=[])], decorator_list=[])], type_ignores=[])