Module(body=[Import(names=[alias(name='distutils.command.build_clib', asname='orig')]), ImportFrom(module='distutils.errors', names=[alias(name='DistutilsSetupError')], level=0), ImportFrom(module='distutils', names=[alias(name='log')], level=0), ImportFrom(module='setuptools.dep_util', names=[alias(name='newer_pairwise_group')], level=0), ClassDef(name='build_clib', bases=[Attribute(value=Name(id='orig', ctx=Load()), attr='build_clib', ctx=Load())], keywords=[], body=[Expr(value=Constant(value="\n    Override the default build_clib behaviour to do the following:\n\n    1. Implement a rudimentary timestamp-based dependency system\n       so 'compile()' doesn't run every time.\n    2. Add more keys to the 'build_info' dictionary:\n        * obj_deps - specify dependencies for each object compiled.\n                     this should be a dictionary mapping a key\n                     with the source filename to a list of\n                     dependencies. Use an empty string for global\n                     dependencies.\n        * cflags   - specify a list of additional flags to pass to\n                     the compiler.\n    ")), FunctionDef(name='build_libraries', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='libraries')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Tuple(elts=[Name(id='lib_name', ctx=Store()), Name(id='build_info', ctx=Store())], ctx=Store()), iter=Name(id='libraries', ctx=Load()), body=[Assign(targets=[Name(id='sources', ctx=Store())], value=Call(func=Attribute(value=Name(id='build_info', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='sources')], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='sources', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='sources', ctx=Load()), Tuple(elts=[Name(id='list', ctx=Load()), Name(id='tuple', ctx=Load())], ctx=Load())], keywords=[]))]), body=[Raise(exc=Call(func=Name(id='DistutilsSetupError', ctx=Load()), args=[BinOp(left=Constant(value="in 'libraries' option (library '%s'), 'sources' must be present and must be a list of source filenames"), op=Mod(), right=Name(id='lib_name', ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='sources', ctx=Store())], value=Call(func=Name(id='sorted', ctx=Load()), args=[Call(func=Name(id='list', ctx=Load()), args=[Name(id='sources', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value="building '%s' library"), Name(id='lib_name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='obj_deps', ctx=Store())], value=Call(func=Attribute(value=Name(id='build_info', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='obj_deps'), Call(func=Name(id='dict', ctx=Load()), args=[], keywords=[])], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='obj_deps', ctx=Load()), Name(id='dict', ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='DistutilsSetupError', ctx=Load()), args=[BinOp(left=Constant(value="in 'libraries' option (library '%s'), 'obj_deps' must be a dictionary of type 'source: list'"), op=Mod(), right=Name(id='lib_name', ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='dependencies', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='global_deps', ctx=Store())], value=Call(func=Attribute(value=Name(id='obj_deps', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value=''), Call(func=Name(id='list', ctx=Load()), args=[], keywords=[])], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='global_deps', ctx=Load()), Tuple(elts=[Name(id='list', ctx=Load()), Name(id='tuple', ctx=Load())], ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='DistutilsSetupError', ctx=Load()), args=[BinOp(left=Constant(value="in 'libraries' option (library '%s'), 'obj_deps' must be a dictionary of type 'source: list'"), op=Mod(), right=Name(id='lib_name', ctx=Load()))], keywords=[]))], orelse=[]), For(target=Name(id='source', ctx=Store()), iter=Name(id='sources', ctx=Load()), body=[Assign(targets=[Name(id='src_deps', ctx=Store())], value=List(elts=[Name(id='source', ctx=Load())], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='src_deps', ctx=Load()), attr='extend', ctx=Load()), args=[Name(id='global_deps', ctx=Load())], keywords=[])), Assign(targets=[Name(id='extra_deps', ctx=Store())], value=Call(func=Attribute(value=Name(id='obj_deps', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='source', ctx=Load()), Call(func=Name(id='list', ctx=Load()), args=[], keywords=[])], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='extra_deps', ctx=Load()), Tuple(elts=[Name(id='list', ctx=Load()), Name(id='tuple', ctx=Load())], ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='DistutilsSetupError', ctx=Load()), args=[BinOp(left=Constant(value="in 'libraries' option (library '%s'), 'obj_deps' must be a dictionary of type 'source: list'"), op=Mod(), right=Name(id='lib_name', ctx=Load()))], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='src_deps', ctx=Load()), attr='extend', ctx=Load()), args=[Name(id='extra_deps', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='dependencies', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='src_deps', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='expected_objects', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='compiler', ctx=Load()), attr='object_filenames', ctx=Load()), args=[Name(id='sources', ctx=Load())], keywords=[keyword(arg='output_dir', value=Attribute(value=Name(id='self', ctx=Load()), attr='build_temp', ctx=Load()))])), If(test=Compare(left=Call(func=Name(id='newer_pairwise_group', ctx=Load()), args=[Name(id='dependencies', ctx=Load()), Name(id='expected_objects', ctx=Load())], keywords=[]), ops=[NotEq()], comparators=[Tuple(elts=[List(elts=[], ctx=Load()), List(elts=[], ctx=Load())], ctx=Load())]), body=[Assign(targets=[Name(id='macros', ctx=Store())], value=Call(func=Attribute(value=Name(id='build_info', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='macros')], keywords=[])), Assign(targets=[Name(id='include_dirs', ctx=Store())], value=Call(func=Attribute(value=Name(id='build_info', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='include_dirs')], keywords=[])), Assign(targets=[Name(id='cflags', ctx=Store())], value=Call(func=Attribute(value=Name(id='build_info', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='cflags')], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='compiler', ctx=Load()), attr='compile', ctx=Load()), args=[Name(id='sources', ctx=Load())], keywords=[keyword(arg='output_dir', value=Attribute(value=Name(id='self', ctx=Load()), attr='build_temp', ctx=Load())), keyword(arg='macros', value=Name(id='macros', ctx=Load())), keyword(arg='include_dirs', value=Name(id='include_dirs', ctx=Load())), keyword(arg='extra_postargs', value=Name(id='cflags', ctx=Load())), keyword(arg='debug', value=Attribute(value=Name(id='self', ctx=Load()), attr='debug', ctx=Load()))]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='compiler', ctx=Load()), attr='create_static_lib', ctx=Load()), args=[Name(id='expected_objects', ctx=Load()), Name(id='lib_name', ctx=Load())], keywords=[keyword(arg='output_dir', value=Attribute(value=Name(id='self', ctx=Load()), attr='build_clib', ctx=Load())), keyword(arg='debug', value=Attribute(value=Name(id='self', ctx=Load()), attr='debug', ctx=Load()))]))], orelse=[])], decorator_list=[])], decorator_list=[])], type_ignores=[])