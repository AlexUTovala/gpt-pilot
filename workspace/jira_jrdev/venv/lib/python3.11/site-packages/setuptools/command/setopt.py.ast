Module(body=[ImportFrom(module='distutils.util', names=[alias(name='convert_path')], level=0), ImportFrom(module='distutils', names=[alias(name='log')], level=0), ImportFrom(module='distutils.errors', names=[alias(name='DistutilsOptionError')], level=0), Import(names=[alias(name='distutils')]), Import(names=[alias(name='os')]), Import(names=[alias(name='configparser')]), ImportFrom(module='setuptools', names=[alias(name='Command')], level=0), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='config_file'), Constant(value='edit_config'), Constant(value='option_base'), Constant(value='setopt')], ctx=Load())), FunctionDef(name='config_file', args=arguments(posonlyargs=[], args=[arg(arg='kind')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='local')]), body=[Expr(value=Constant(value='Get the filename of the distutils, local, global, or per-user config\n\n    `kind` must be one of "local", "global", or "user"\n    ')), If(test=Compare(left=Name(id='kind', ctx=Load()), ops=[Eq()], comparators=[Constant(value='local')]), body=[Return(value=Constant(value='setup.cfg'))], orelse=[]), If(test=Compare(left=Name(id='kind', ctx=Load()), ops=[Eq()], comparators=[Constant(value='global')]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='dirname', ctx=Load()), args=[Attribute(value=Name(id='distutils', ctx=Load()), attr='__file__', ctx=Load())], keywords=[]), Constant(value='distutils.cfg')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='kind', ctx=Load()), ops=[Eq()], comparators=[Constant(value='user')]), body=[Assign(targets=[Name(id='dot', ctx=Store())], value=BoolOp(op=Or(), values=[BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='os', ctx=Load()), attr='name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='posix')]), Constant(value='.')]), Constant(value='')])), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='expanduser', ctx=Load()), args=[Call(func=Name(id='convert_path', ctx=Load()), args=[BinOp(left=Constant(value='~/%spydistutils.cfg'), op=Mod(), right=Name(id='dot', ctx=Load()))], keywords=[])], keywords=[]))], orelse=[]), Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value="config_file() type must be 'local', 'global', or 'user'"), Name(id='kind', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='edit_config', args=arguments(posonlyargs=[], args=[arg(arg='filename'), arg(arg='settings'), arg(arg='dry_run')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Expr(value=Constant(value='Edit a configuration file to include `settings`\n\n    `settings` is a dictionary of dictionaries or ``None`` values, keyed by\n    command/section name.  A ``None`` value means to delete the entire section,\n    while a dictionary lists settings to be changed or deleted in that section.\n    A setting of ``None`` means to delete that setting.\n    ')), Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Reading configuration from %s'), Name(id='filename', ctx=Load())], keywords=[])), Assign(targets=[Name(id='opts', ctx=Store())], value=Call(func=Attribute(value=Name(id='configparser', ctx=Load()), attr='RawConfigParser', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='opts', ctx=Load()), attr='optionxform', ctx=Store())], value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Name(id='x', ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='opts', ctx=Load()), attr='read', ctx=Load()), args=[List(elts=[Name(id='filename', ctx=Load())], ctx=Load())], keywords=[])), For(target=Tuple(elts=[Name(id='section', ctx=Store()), Name(id='options', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='settings', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Compare(left=Name(id='options', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Deleting section [%s] from %s'), Name(id='section', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='opts', ctx=Load()), attr='remove_section', ctx=Load()), args=[Name(id='section', ctx=Load())], keywords=[]))], orelse=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='opts', ctx=Load()), attr='has_section', ctx=Load()), args=[Name(id='section', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Adding new section [%s] to %s'), Name(id='section', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='opts', ctx=Load()), attr='add_section', ctx=Load()), args=[Name(id='section', ctx=Load())], keywords=[]))], orelse=[]), For(target=Tuple(elts=[Name(id='option', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='options', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Compare(left=Name(id='value', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Deleting %s.%s from %s'), Name(id='section', ctx=Load()), Name(id='option', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='opts', ctx=Load()), attr='remove_option', ctx=Load()), args=[Name(id='section', ctx=Load()), Name(id='option', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='opts', ctx=Load()), attr='options', ctx=Load()), args=[Name(id='section', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Deleting empty [%s] section from %s'), Name(id='section', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='opts', ctx=Load()), attr='remove_section', ctx=Load()), args=[Name(id='section', ctx=Load())], keywords=[]))], orelse=[])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Setting %s.%s to %r in %s'), Name(id='section', ctx=Load()), Name(id='option', ctx=Load()), Name(id='value', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='opts', ctx=Load()), attr='set', ctx=Load()), args=[Name(id='section', ctx=Load()), Name(id='option', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))])], orelse=[])])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Writing %s'), Name(id='filename', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='dry_run', ctx=Load())), body=[With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='filename', ctx=Load()), Constant(value='w')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='opts', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='f', ctx=Load())], keywords=[]))])], orelse=[])], decorator_list=[]), ClassDef(name='option_base', bases=[Name(id='Command', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Abstract base class for commands that mess with config files')), Assign(targets=[Name(id='user_options', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='global-config'), Constant(value='g'), Constant(value='save options to the site-wide distutils.cfg file')], ctx=Load()), Tuple(elts=[Constant(value='user-config'), Constant(value='u'), Constant(value="save options to the current user's pydistutils.cfg file")], ctx=Load()), Tuple(elts=[Constant(value='filename='), Constant(value='f'), Constant(value='configuration file to use (default=setup.cfg)')], ctx=Load())], ctx=Load())), Assign(targets=[Name(id='boolean_options', ctx=Store())], value=List(elts=[Constant(value='global-config'), Constant(value='user-config')], ctx=Load())), FunctionDef(name='initialize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='global_config', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='user_config', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='finalize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='filenames', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='global_config', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='filenames', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='config_file', ctx=Load()), args=[Constant(value='global')], keywords=[])], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='user_config', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='filenames', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='config_file', ctx=Load()), args=[Constant(value='user')], keywords=[])], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='filenames', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load())], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='filenames', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='filenames', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='config_file', ctx=Load()), args=[Constant(value='local')], keywords=[])], keywords=[]))], orelse=[]), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='filenames', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=1)]), body=[Raise(exc=Call(func=Name(id='DistutilsOptionError', ctx=Load()), args=[Constant(value='Must specify only one configuration file option'), Name(id='filenames', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Store())], ctx=Store())], value=Name(id='filenames', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='setopt', bases=[Name(id='option_base', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Save command-line options to a file')), Assign(targets=[Name(id='description', ctx=Store())], value=Constant(value='set an option in setup.cfg or another config file')), Assign(targets=[Name(id='user_options', ctx=Store())], value=BinOp(left=List(elts=[Tuple(elts=[Constant(value='command='), Constant(value='c'), Constant(value='command to set an option for')], ctx=Load()), Tuple(elts=[Constant(value='option='), Constant(value='o'), Constant(value='option to set')], ctx=Load()), Tuple(elts=[Constant(value='set-value='), Constant(value='s'), Constant(value='value of the option')], ctx=Load()), Tuple(elts=[Constant(value='remove'), Constant(value='r'), Constant(value='remove (unset) the value')], ctx=Load())], ctx=Load()), op=Add(), right=Attribute(value=Name(id='option_base', ctx=Load()), attr='user_options', ctx=Load()))), Assign(targets=[Name(id='boolean_options', ctx=Store())], value=BinOp(left=Attribute(value=Name(id='option_base', ctx=Load()), attr='boolean_options', ctx=Load()), op=Add(), right=List(elts=[Constant(value='remove')], ctx=Load()))), FunctionDef(name='initialize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='option_base', ctx=Load()), attr='initialize_options', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='command', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='option', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='set_value', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='remove', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='finalize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='option_base', ctx=Load()), attr='finalize_options', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='command', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='option', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])]), body=[Raise(exc=Call(func=Name(id='DistutilsOptionError', ctx=Load()), args=[Constant(value='Must specify --command *and* --option')], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='set_value', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='remove', ctx=Load()))]), body=[Raise(exc=Call(func=Name(id='DistutilsOptionError', ctx=Load()), args=[Constant(value='Must specify --set-value or --remove')], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Name(id='edit_config', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load()), Dict(keys=[Attribute(value=Name(id='self', ctx=Load()), attr='command', ctx=Load())], values=[Dict(keys=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='option', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='-'), Constant(value='_')], keywords=[])], values=[Attribute(value=Name(id='self', ctx=Load()), attr='set_value', ctx=Load())])]), Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[])], type_ignores=[])