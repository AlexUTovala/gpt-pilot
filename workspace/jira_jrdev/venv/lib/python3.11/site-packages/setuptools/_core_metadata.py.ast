Module(body=[Expr(value=Constant(value='\nHandling of Core Metadata for Python packages (including reading and writing).\n\nSee: https://packaging.python.org/en/latest/specifications/core-metadata/\n')), Import(names=[alias(name='os')]), Import(names=[alias(name='stat')]), Import(names=[alias(name='textwrap')]), ImportFrom(module='email', names=[alias(name='message_from_file')], level=0), ImportFrom(module='email.message', names=[alias(name='Message')], level=0), ImportFrom(module='tempfile', names=[alias(name='NamedTemporaryFile')], level=0), ImportFrom(module='typing', names=[alias(name='Optional'), alias(name='List')], level=0), ImportFrom(module='distutils.util', names=[alias(name='rfc822_escape')], level=0), ImportFrom(names=[alias(name='_normalization'), alias(name='_reqs')], level=1), ImportFrom(module='extern.packaging.markers', names=[alias(name='Marker')], level=1), ImportFrom(module='extern.packaging.requirements', names=[alias(name='Requirement')], level=1), ImportFrom(module='extern.packaging.version', names=[alias(name='Version')], level=1), ImportFrom(module='warnings', names=[alias(name='SetuptoolsDeprecationWarning')], level=1), FunctionDef(name='get_metadata_version', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='mv', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Constant(value='metadata_version'), Constant(value=None)], keywords=[])), If(test=Compare(left=Name(id='mv', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='mv', ctx=Store())], value=Call(func=Name(id='Version', ctx=Load()), args=[Constant(value='2.1')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='metadata_version', ctx=Store())], value=Name(id='mv', ctx=Load()))], orelse=[]), Return(value=Name(id='mv', ctx=Load()))], decorator_list=[]), FunctionDef(name='rfc822_unescape', args=arguments(posonlyargs=[], args=[arg(arg='content', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Reverse RFC-822 escaping by removing leading whitespaces from content.')), Assign(targets=[Name(id='lines', ctx=Store())], value=Call(func=Attribute(value=Name(id='content', ctx=Load()), attr='splitlines', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='lines', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), body=[Return(value=Call(func=Attribute(value=Subscript(value=Name(id='lines', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='lstrip', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Constant(value='\n'), attr='join', ctx=Load()), args=[Tuple(elts=[Call(func=Attribute(value=Subscript(value=Name(id='lines', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='lstrip', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='textwrap', ctx=Load()), attr='dedent', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='\n'), attr='join', ctx=Load()), args=[Subscript(value=Name(id='lines', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load())], keywords=[])], keywords=[])], ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='_read_field_from_msg', args=arguments(posonlyargs=[], args=[arg(arg='msg', annotation=Name(id='Message', ctx=Load())), arg(arg='field', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Read Message header field.')), Assign(targets=[Name(id='value', ctx=Store())], value=Subscript(value=Name(id='msg', ctx=Load()), slice=Name(id='field', ctx=Load()), ctx=Load())), If(test=Compare(left=Name(id='value', ctx=Load()), ops=[Eq()], comparators=[Constant(value='UNKNOWN')]), body=[Return(value=Constant(value=None))], orelse=[]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='_read_field_unescaped_from_msg', args=arguments(posonlyargs=[], args=[arg(arg='msg', annotation=Name(id='Message', ctx=Load())), arg(arg='field', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Read Message header field and apply rfc822_unescape.')), Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='_read_field_from_msg', ctx=Load()), args=[Name(id='msg', ctx=Load()), Name(id='field', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='value', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return(value=Name(id='value', ctx=Load()))], orelse=[]), Return(value=Call(func=Name(id='rfc822_unescape', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='_read_list_from_msg', args=arguments(posonlyargs=[], args=[arg(arg='msg', annotation=Name(id='Message', ctx=Load())), arg(arg='field', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Read Message header field and return all results as list.')), Assign(targets=[Name(id='values', ctx=Store())], value=Call(func=Attribute(value=Name(id='msg', ctx=Load()), attr='get_all', ctx=Load()), args=[Name(id='field', ctx=Load()), Constant(value=None)], keywords=[])), If(test=Compare(left=Name(id='values', ctx=Load()), ops=[Eq()], comparators=[List(elts=[], ctx=Load())]), body=[Return(value=Constant(value=None))], orelse=[]), Return(value=Name(id='values', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), ctx=Load())), FunctionDef(name='_read_payload_from_msg', args=arguments(posonlyargs=[], args=[arg(arg='msg', annotation=Name(id='Message', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='msg', ctx=Load()), attr='get_payload', ctx=Load()), args=[], keywords=[]), attr='strip', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='value', ctx=Load()), ops=[Eq()], comparators=[Constant(value='UNKNOWN')]), UnaryOp(op=Not(), operand=Name(id='value', ctx=Load()))]), body=[Return(value=Constant(value=None))], orelse=[]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='read_pkg_file', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='file')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Reads the metadata values from a file object.')), Assign(targets=[Name(id='msg', ctx=Store())], value=Call(func=Name(id='message_from_file', ctx=Load()), args=[Name(id='file', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='metadata_version', ctx=Store())], value=Call(func=Name(id='Version', ctx=Load()), args=[Subscript(value=Name(id='msg', ctx=Load()), slice=Constant(value='metadata-version'), ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store())], value=Call(func=Name(id='_read_field_from_msg', ctx=Load()), args=[Name(id='msg', ctx=Load()), Constant(value='name')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='version', ctx=Store())], value=Call(func=Name(id='_read_field_from_msg', ctx=Load()), args=[Name(id='msg', ctx=Load()), Constant(value='version')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='description', ctx=Store())], value=Call(func=Name(id='_read_field_from_msg', ctx=Load()), args=[Name(id='msg', ctx=Load()), Constant(value='summary')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='author', ctx=Store())], value=Call(func=Name(id='_read_field_from_msg', ctx=Load()), args=[Name(id='msg', ctx=Load()), Constant(value='author')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='maintainer', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='author_email', ctx=Store())], value=Call(func=Name(id='_read_field_from_msg', ctx=Load()), args=[Name(id='msg', ctx=Load()), Constant(value='author-email')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='maintainer_email', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='url', ctx=Store())], value=Call(func=Name(id='_read_field_from_msg', ctx=Load()), args=[Name(id='msg', ctx=Load()), Constant(value='home-page')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='download_url', ctx=Store())], value=Call(func=Name(id='_read_field_from_msg', ctx=Load()), args=[Name(id='msg', ctx=Load()), Constant(value='download-url')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='license', ctx=Store())], value=Call(func=Name(id='_read_field_unescaped_from_msg', ctx=Load()), args=[Name(id='msg', ctx=Load()), Constant(value='license')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='long_description', ctx=Store())], value=Call(func=Name(id='_read_field_unescaped_from_msg', ctx=Load()), args=[Name(id='msg', ctx=Load()), Constant(value='description')], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='long_description', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='metadata_version', ctx=Load()), ops=[GtE()], comparators=[Call(func=Name(id='Version', ctx=Load()), args=[Constant(value='2.1')], keywords=[])])]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='long_description', ctx=Store())], value=Call(func=Name(id='_read_payload_from_msg', ctx=Load()), args=[Name(id='msg', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='description', ctx=Store())], value=Call(func=Name(id='_read_field_from_msg', ctx=Load()), args=[Name(id='msg', ctx=Load()), Constant(value='summary')], keywords=[])), If(test=Compare(left=Constant(value='keywords'), ops=[In()], comparators=[Name(id='msg', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='keywords', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='_read_field_from_msg', ctx=Load()), args=[Name(id='msg', ctx=Load()), Constant(value='keywords')], keywords=[]), attr='split', ctx=Load()), args=[Constant(value=',')], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='platforms', ctx=Store())], value=Call(func=Name(id='_read_list_from_msg', ctx=Load()), args=[Name(id='msg', ctx=Load()), Constant(value='platform')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='classifiers', ctx=Store())], value=Call(func=Name(id='_read_list_from_msg', ctx=Load()), args=[Name(id='msg', ctx=Load()), Constant(value='classifier')], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='metadata_version', ctx=Load()), ops=[Eq()], comparators=[Call(func=Name(id='Version', ctx=Load()), args=[Constant(value='1.1')], keywords=[])]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='requires', ctx=Store())], value=Call(func=Name(id='_read_list_from_msg', ctx=Load()), args=[Name(id='msg', ctx=Load()), Constant(value='requires')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='provides', ctx=Store())], value=Call(func=Name(id='_read_list_from_msg', ctx=Load()), args=[Name(id='msg', ctx=Load()), Constant(value='provides')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='obsoletes', ctx=Store())], value=Call(func=Name(id='_read_list_from_msg', ctx=Load()), args=[Name(id='msg', ctx=Load()), Constant(value='obsoletes')], keywords=[]))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='requires', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='provides', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='obsoletes', ctx=Store())], value=Constant(value=None))]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='license_files', ctx=Store())], value=Call(func=Name(id='_read_list_from_msg', ctx=Load()), args=[Name(id='msg', ctx=Load()), Constant(value='license-file')], keywords=[]))], decorator_list=[]), FunctionDef(name='single_line', args=arguments(posonlyargs=[], args=[arg(arg='val')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Quick and dirty validation for Summary pypa/setuptools#1390.\n    ')), If(test=Compare(left=Constant(value='\n'), ops=[In()], comparators=[Name(id='val', ctx=Load())]), body=[Assign(targets=[Name(id='msg', ctx=Store())], value=Constant(value='newlines are not allowed in `summary` and will break in the future')), Expr(value=Call(func=Attribute(value=Name(id='SetuptoolsDeprecationWarning', ctx=Load()), attr='emit', ctx=Load()), args=[Constant(value='Invalid config.'), Name(id='msg', ctx=Load())], keywords=[])), Assign(targets=[Name(id='val', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='val', ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[]), attr='split', ctx=Load()), args=[Constant(value='\n')], keywords=[]), slice=Constant(value=0), ctx=Load()))], orelse=[]), Return(value=Name(id='val', ctx=Load()))], decorator_list=[]), FunctionDef(name='write_pkg_info', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='base_dir')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Write the PKG-INFO file into the release tree.')), Assign(targets=[Name(id='temp', ctx=Store())], value=Constant(value='')), Assign(targets=[Name(id='final', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='base_dir', ctx=Load()), Constant(value='PKG-INFO')], keywords=[])), Try(body=[With(items=[withitem(context_expr=Call(func=Name(id='NamedTemporaryFile', ctx=Load()), args=[Constant(value='w')], keywords=[keyword(arg='encoding', value=Constant(value='utf-8')), keyword(arg='dir', value=Name(id='base_dir', ctx=Load())), keyword(arg='delete', value=Constant(value=False))]), optional_vars=Name(id='f', ctx=Store()))], body=[Assign(targets=[Name(id='temp', ctx=Store())], value=Attribute(value=Name(id='f', ctx=Load()), attr='name', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='write_pkg_file', ctx=Load()), args=[Name(id='f', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='permissions', ctx=Store())], value=Call(func=Attribute(value=Name(id='stat', ctx=Load()), attr='S_IMODE', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='lstat', ctx=Load()), args=[Name(id='temp', ctx=Load())], keywords=[]), attr='st_mode', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='chmod', ctx=Load()), args=[Name(id='temp', ctx=Load()), BinOp(left=BinOp(left=Name(id='permissions', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='stat', ctx=Load()), attr='S_IRGRP', ctx=Load())), op=BitOr(), right=Attribute(value=Name(id='stat', ctx=Load()), attr='S_IROTH', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='replace', ctx=Load()), args=[Name(id='temp', ctx=Load()), Name(id='final', ctx=Load())], keywords=[]))], handlers=[], orelse=[], finalbody=[If(test=BoolOp(op=And(), values=[Name(id='temp', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='temp', ctx=Load())], keywords=[])]), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='temp', ctx=Load())], keywords=[]))], orelse=[])])], decorator_list=[]), FunctionDef(name='write_pkg_file', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='file')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Write the PKG-INFO format data to a file object.')), Assign(targets=[Name(id='version', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_metadata_version', ctx=Load()), args=[], keywords=[])), FunctionDef(name='write_field', args=arguments(posonlyargs=[], args=[arg(arg='key'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='file', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value='%s: %s\n'), op=Mod(), right=Tuple(elts=[Name(id='key', ctx=Load()), Name(id='value', ctx=Load())], ctx=Load()))], keywords=[]))], decorator_list=[]), Expr(value=Call(func=Name(id='write_field', ctx=Load()), args=[Constant(value='Metadata-Version'), Call(func=Name(id='str', ctx=Load()), args=[Name(id='version', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Name(id='write_field', ctx=Load()), args=[Constant(value='Name'), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_name', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Name(id='write_field', ctx=Load()), args=[Constant(value='Version'), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_version', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='summary', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_description', ctx=Load()), args=[], keywords=[])), If(test=Name(id='summary', ctx=Load()), body=[Expr(value=Call(func=Name(id='write_field', ctx=Load()), args=[Constant(value='Summary'), Call(func=Name(id='single_line', ctx=Load()), args=[Name(id='summary', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='optional_fields', ctx=Store())], value=Tuple(elts=[Tuple(elts=[Constant(value='Home-page'), Constant(value='url')], ctx=Load()), Tuple(elts=[Constant(value='Download-URL'), Constant(value='download_url')], ctx=Load()), Tuple(elts=[Constant(value='Author'), Constant(value='author')], ctx=Load()), Tuple(elts=[Constant(value='Author-email'), Constant(value='author_email')], ctx=Load()), Tuple(elts=[Constant(value='Maintainer'), Constant(value='maintainer')], ctx=Load()), Tuple(elts=[Constant(value='Maintainer-email'), Constant(value='maintainer_email')], ctx=Load())], ctx=Load())), For(target=Tuple(elts=[Name(id='field', ctx=Store()), Name(id='attr', ctx=Store())], ctx=Store()), iter=Name(id='optional_fields', ctx=Load()), body=[Assign(targets=[Name(id='attr_val', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='attr', ctx=Load()), Constant(value=None)], keywords=[])), If(test=Compare(left=Name(id='attr_val', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='write_field', ctx=Load()), args=[Name(id='field', ctx=Load()), Name(id='attr_val', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='license', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_license', ctx=Load()), args=[], keywords=[])), If(test=Name(id='license', ctx=Load()), body=[Expr(value=Call(func=Name(id='write_field', ctx=Load()), args=[Constant(value='License'), Call(func=Name(id='rfc822_escape', ctx=Load()), args=[Name(id='license', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), For(target=Name(id='project_url', ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='project_urls', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Name(id='write_field', ctx=Load()), args=[Constant(value='Project-URL'), BinOp(left=Constant(value='%s, %s'), op=Mod(), right=Name(id='project_url', ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='keywords', ctx=Store())], value=Call(func=Attribute(value=Constant(value=','), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_keywords', ctx=Load()), args=[], keywords=[])], keywords=[])), If(test=Name(id='keywords', ctx=Load()), body=[Expr(value=Call(func=Name(id='write_field', ctx=Load()), args=[Constant(value='Keywords'), Name(id='keywords', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='platforms', ctx=Store())], value=BoolOp(op=Or(), values=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_platforms', ctx=Load()), args=[], keywords=[]), List(elts=[], ctx=Load())])), For(target=Name(id='platform', ctx=Store()), iter=Name(id='platforms', ctx=Load()), body=[Expr(value=Call(func=Name(id='write_field', ctx=Load()), args=[Constant(value='Platform'), Name(id='platform', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_write_list', ctx=Load()), args=[Name(id='file', ctx=Load()), Constant(value='Classifier'), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_classifiers', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_write_list', ctx=Load()), args=[Name(id='file', ctx=Load()), Constant(value='Requires'), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_requires', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_write_list', ctx=Load()), args=[Name(id='file', ctx=Load()), Constant(value='Provides'), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_provides', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_write_list', ctx=Load()), args=[Name(id='file', ctx=Load()), Constant(value='Obsoletes'), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_obsoletes', ctx=Load()), args=[], keywords=[])], keywords=[])), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Constant(value='python_requires')], keywords=[]), body=[Expr(value=Call(func=Name(id='write_field', ctx=Load()), args=[Constant(value='Requires-Python'), Attribute(value=Name(id='self', ctx=Load()), attr='python_requires', ctx=Load())], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='long_description_content_type', ctx=Load()), body=[Expr(value=Call(func=Name(id='write_field', ctx=Load()), args=[Constant(value='Description-Content-Type'), Attribute(value=Name(id='self', ctx=Load()), attr='long_description_content_type', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_write_list', ctx=Load()), args=[Name(id='file', ctx=Load()), Constant(value='License-File'), BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='license_files', ctx=Load()), List(elts=[], ctx=Load())])], keywords=[])), Expr(value=Call(func=Name(id='_write_requirements', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='file', ctx=Load())], keywords=[])), Assign(targets=[Name(id='long_description', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_long_description', ctx=Load()), args=[], keywords=[])), If(test=Name(id='long_description', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='file', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value='\n%s'), op=Mod(), right=Name(id='long_description', ctx=Load()))], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='long_description', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='\n')], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='file', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='\n')], keywords=[]))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='_write_requirements', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='file')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='req', ctx=Store()), iter=Call(func=Attribute(value=Name(id='_reqs', ctx=Load()), attr='parse', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='install_requires', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='file', ctx=Load()), attr='write', ctx=Load()), args=[JoinedStr(values=[Constant(value='Requires-Dist: '), FormattedValue(value=Name(id='req', ctx=Load()), conversion=-1), Constant(value='\n')])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='processed_extras', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Tuple(elts=[Name(id='augmented_extra', ctx=Store()), Name(id='reqs', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='extras_require', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='unsafe_extra', ctx=Store()), Name(id='_', ctx=Store()), Name(id='condition', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='augmented_extra', ctx=Load()), attr='partition', ctx=Load()), args=[Constant(value=':')], keywords=[])), Assign(targets=[Name(id='unsafe_extra', ctx=Store())], value=Call(func=Attribute(value=Name(id='unsafe_extra', ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='extra', ctx=Store())], value=Call(func=Attribute(value=Name(id='_normalization', ctx=Load()), attr='safe_extra', ctx=Load()), args=[Name(id='unsafe_extra', ctx=Load())], keywords=[])), If(test=Name(id='extra', ctx=Load()), body=[Expr(value=Call(func=Name(id='_write_provides_extra', ctx=Load()), args=[Name(id='file', ctx=Load()), Name(id='processed_extras', ctx=Load()), Name(id='extra', ctx=Load()), Name(id='unsafe_extra', ctx=Load())], keywords=[]))], orelse=[]), For(target=Name(id='req', ctx=Store()), iter=Call(func=Attribute(value=Name(id='_reqs', ctx=Load()), attr='parse_strings', ctx=Load()), args=[Name(id='reqs', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='r', ctx=Store())], value=Call(func=Name(id='_include_extra', ctx=Load()), args=[Name(id='req', ctx=Load()), Name(id='extra', ctx=Load()), Call(func=Attribute(value=Name(id='condition', ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='file', ctx=Load()), attr='write', ctx=Load()), args=[JoinedStr(values=[Constant(value='Requires-Dist: '), FormattedValue(value=Name(id='r', ctx=Load()), conversion=-1), Constant(value='\n')])], keywords=[]))], orelse=[])], orelse=[]), Return(value=Name(id='processed_extras', ctx=Load()))], decorator_list=[]), FunctionDef(name='_include_extra', args=arguments(posonlyargs=[], args=[arg(arg='req', annotation=Name(id='str', ctx=Load())), arg(arg='extra', annotation=Name(id='str', ctx=Load())), arg(arg='condition', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='r', ctx=Store())], value=Call(func=Name(id='Requirement', ctx=Load()), args=[Name(id='req', ctx=Load())], keywords=[])), Assign(targets=[Name(id='parts', ctx=Store())], value=Tuple(elts=[IfExp(test=Attribute(value=Name(id='r', ctx=Load()), attr='marker', ctx=Load()), body=JoinedStr(values=[Constant(value='('), FormattedValue(value=Attribute(value=Name(id='r', ctx=Load()), attr='marker', ctx=Load()), conversion=-1), Constant(value=')')]), orelse=Constant(value=None)), IfExp(test=Name(id='condition', ctx=Load()), body=JoinedStr(values=[Constant(value='('), FormattedValue(value=Name(id='condition', ctx=Load()), conversion=-1), Constant(value=')')]), orelse=Constant(value=None)), IfExp(test=Name(id='extra', ctx=Load()), body=JoinedStr(values=[Constant(value='extra == '), FormattedValue(value=Name(id='extra', ctx=Load()), conversion=114)]), orelse=Constant(value=None))], ctx=Load())), Assign(targets=[Attribute(value=Name(id='r', ctx=Load()), attr='marker', ctx=Store())], value=Call(func=Name(id='Marker', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=' and '), attr='join', ctx=Load()), args=[GeneratorExp(elt=Name(id='x', ctx=Load()), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Name(id='parts', ctx=Load()), ifs=[Name(id='x', ctx=Load())], is_async=0)])], keywords=[])], keywords=[])), Return(value=Name(id='r', ctx=Load()))], decorator_list=[], returns=Name(id='Requirement', ctx=Load())), FunctionDef(name='_write_provides_extra', args=arguments(posonlyargs=[], args=[arg(arg='file'), arg(arg='processed_extras'), arg(arg='safe'), arg(arg='unsafe')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='previous', ctx=Store())], value=Call(func=Attribute(value=Name(id='processed_extras', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='safe', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='previous', ctx=Load()), ops=[Eq()], comparators=[Name(id='unsafe', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='SetuptoolsDeprecationWarning', ctx=Load()), attr='emit', ctx=Load()), args=[Constant(value='Ambiguity during "extra" normalization for dependencies.'), JoinedStr(values=[Constant(value='\n            '), FormattedValue(value=Name(id='previous', ctx=Load()), conversion=114), Constant(value=' and '), FormattedValue(value=Name(id='unsafe', ctx=Load()), conversion=114), Constant(value=' normalize to the same value:\n\n                '), FormattedValue(value=Name(id='safe', ctx=Load()), conversion=114), Constant(value='\n\n            In future versions, setuptools might halt the build process.\n            ')])], keywords=[keyword(arg='see_url', value=Constant(value='https://peps.python.org/pep-0685/'))]))], orelse=[Assign(targets=[Subscript(value=Name(id='processed_extras', ctx=Load()), slice=Name(id='safe', ctx=Load()), ctx=Store())], value=Name(id='unsafe', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='file', ctx=Load()), attr='write', ctx=Load()), args=[JoinedStr(values=[Constant(value='Provides-Extra: '), FormattedValue(value=Name(id='safe', ctx=Load()), conversion=-1), Constant(value='\n')])], keywords=[]))])], decorator_list=[])], type_ignores=[])