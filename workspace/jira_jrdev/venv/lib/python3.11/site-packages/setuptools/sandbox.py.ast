Module(body=[Import(names=[alias(name='os')]), Import(names=[alias(name='sys')]), Import(names=[alias(name='tempfile')]), Import(names=[alias(name='operator')]), Import(names=[alias(name='functools')]), Import(names=[alias(name='itertools')]), Import(names=[alias(name='re')]), Import(names=[alias(name='contextlib')]), Import(names=[alias(name='pickle')]), Import(names=[alias(name='textwrap')]), Import(names=[alias(name='builtins')]), Import(names=[alias(name='pkg_resources')]), ImportFrom(module='distutils.errors', names=[alias(name='DistutilsError')], level=0), ImportFrom(module='pkg_resources', names=[alias(name='working_set')], level=0), If(test=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='java')], keywords=[]), body=[Import(names=[alias(name='org.python.modules.posix.PosixModule', asname='_os')])], orelse=[Assign(targets=[Name(id='_os', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='modules', ctx=Load()), slice=Attribute(value=Name(id='os', ctx=Load()), attr='name', ctx=Load()), ctx=Load()))]), Try(body=[Assign(targets=[Name(id='_file', ctx=Store())], value=Name(id='file', ctx=Load()))], handlers=[ExceptHandler(type=Name(id='NameError', ctx=Load()), body=[Assign(targets=[Name(id='_file', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[]), Assign(targets=[Name(id='_open', ctx=Store())], value=Name(id='open', ctx=Load())), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='AbstractSandbox'), Constant(value='DirectorySandbox'), Constant(value='SandboxViolation'), Constant(value='run_setup')], ctx=Load())), FunctionDef(name='_execfile', args=arguments(posonlyargs=[], args=[arg(arg='filename'), arg(arg='globals'), arg(arg='locals')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='\n    Python 3 implementation of execfile.\n    ')), Assign(targets=[Name(id='mode', ctx=Store())], value=Constant(value='rb')), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='filename', ctx=Load()), Name(id='mode', ctx=Load())], keywords=[]), optional_vars=Name(id='stream', ctx=Store()))], body=[Assign(targets=[Name(id='script', ctx=Store())], value=Call(func=Attribute(value=Name(id='stream', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]))]), If(test=Compare(left=Name(id='locals', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='locals', ctx=Store())], value=Name(id='globals', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='code', ctx=Store())], value=Call(func=Name(id='compile', ctx=Load()), args=[Name(id='script', ctx=Load()), Name(id='filename', ctx=Load()), Constant(value='exec')], keywords=[])), Expr(value=Call(func=Name(id='exec', ctx=Load()), args=[Name(id='code', ctx=Load()), Name(id='globals', ctx=Load()), Name(id='locals', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='save_argv', args=arguments(posonlyargs=[], args=[arg(arg='repl')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='saved', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='argv', ctx=Load()), slice=Slice(), ctx=Load())), If(test=Compare(left=Name(id='repl', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='argv', ctx=Load()), slice=Slice(), ctx=Store())], value=Name(id='repl', ctx=Load()))], orelse=[]), Try(body=[Expr(value=Yield(value=Name(id='saved', ctx=Load())))], handlers=[], orelse=[], finalbody=[Assign(targets=[Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='argv', ctx=Load()), slice=Slice(), ctx=Store())], value=Name(id='saved', ctx=Load()))])], decorator_list=[Attribute(value=Name(id='contextlib', ctx=Load()), attr='contextmanager', ctx=Load())]), FunctionDef(name='save_path', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='saved', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='path', ctx=Load()), slice=Slice(), ctx=Load())), Try(body=[Expr(value=Yield(value=Name(id='saved', ctx=Load())))], handlers=[], orelse=[], finalbody=[Assign(targets=[Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='path', ctx=Load()), slice=Slice(), ctx=Store())], value=Name(id='saved', ctx=Load()))])], decorator_list=[Attribute(value=Name(id='contextlib', ctx=Load()), attr='contextmanager', ctx=Load())]), FunctionDef(name='override_temp', args=arguments(posonlyargs=[], args=[arg(arg='replacement')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Monkey-patch tempfile.tempdir with replacement, ensuring it exists\n    ')), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load()), args=[Name(id='replacement', ctx=Load())], keywords=[keyword(arg='exist_ok', value=Constant(value=True))])), Assign(targets=[Name(id='saved', ctx=Store())], value=Attribute(value=Name(id='tempfile', ctx=Load()), attr='tempdir', ctx=Load())), Assign(targets=[Attribute(value=Name(id='tempfile', ctx=Load()), attr='tempdir', ctx=Store())], value=Name(id='replacement', ctx=Load())), Try(body=[Expr(value=Yield())], handlers=[], orelse=[], finalbody=[Assign(targets=[Attribute(value=Name(id='tempfile', ctx=Load()), attr='tempdir', ctx=Store())], value=Name(id='saved', ctx=Load()))])], decorator_list=[Attribute(value=Name(id='contextlib', ctx=Load()), attr='contextmanager', ctx=Load())]), FunctionDef(name='pushd', args=arguments(posonlyargs=[], args=[arg(arg='target')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='saved', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='chdir', ctx=Load()), args=[Name(id='target', ctx=Load())], keywords=[])), Try(body=[Expr(value=Yield(value=Name(id='saved', ctx=Load())))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='chdir', ctx=Load()), args=[Name(id='saved', ctx=Load())], keywords=[]))])], decorator_list=[Attribute(value=Name(id='contextlib', ctx=Load()), attr='contextmanager', ctx=Load())]), ClassDef(name='UnpickleableException', bases=[Name(id='Exception', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    An exception representing another Exception that could not be pickled.\n    ')), FunctionDef(name='dump', args=arguments(posonlyargs=[], args=[arg(arg='type'), arg(arg='exc')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Always return a dumped (pickled) type and exc. If exc can't be pickled,\n        wrap it in UnpickleableException first.\n        ")), Try(body=[Return(value=Tuple(elts=[Call(func=Attribute(value=Name(id='pickle', ctx=Load()), attr='dumps', ctx=Load()), args=[Name(id='type', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='pickle', ctx=Load()), attr='dumps', ctx=Load()), args=[Name(id='exc', ctx=Load())], keywords=[])], ctx=Load()))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), body=[ImportFrom(module='setuptools.sandbox', names=[alias(name='UnpickleableException', asname='cls')], level=0), Return(value=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='dump', ctx=Load()), args=[Name(id='cls', ctx=Load()), Call(func=Name(id='cls', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Name(id='exc', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[Name(id='staticmethod', ctx=Load())])], decorator_list=[]), ClassDef(name='ExceptionSaver', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    A Context Manager that will save an exception, serialized, and restore it\n    later.\n    ')), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='type'), arg(arg='exc'), arg(arg='tb')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Name(id='exc', ctx=Load())), body=[Return()], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_saved', ctx=Store())], value=Call(func=Attribute(value=Name(id='UnpickleableException', ctx=Load()), attr='dump', ctx=Load()), args=[Name(id='type', ctx=Load()), Name(id='exc', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_tb', ctx=Store())], value=Name(id='tb', ctx=Load())), Return(value=Constant(value=True))], decorator_list=[]), FunctionDef(name='resume', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='restore and re-raise any exception')), If(test=Compare(left=Constant(value='_saved'), ops=[NotIn()], comparators=[Call(func=Name(id='vars', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])]), body=[Return()], orelse=[]), Assign(targets=[Tuple(elts=[Name(id='type', ctx=Store()), Name(id='exc', ctx=Store())], ctx=Store())], value=Call(func=Name(id='map', ctx=Load()), args=[Attribute(value=Name(id='pickle', ctx=Load()), attr='loads', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_saved', ctx=Load())], keywords=[])), Raise(exc=Call(func=Attribute(value=Name(id='exc', ctx=Load()), attr='with_traceback', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_tb', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), FunctionDef(name='save_modules', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Context in which imported modules are saved.\n\n    Translates exceptions internal to the context into the equivalent exception\n    outside the context.\n    ')), Assign(targets=[Name(id='saved', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='modules', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='ExceptionSaver', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='saved_exc', ctx=Store()))], body=[Expr(value=Yield(value=Name(id='saved', ctx=Load())))]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='modules', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='saved', ctx=Load())], keywords=[])), Assign(targets=[Name(id='del_modules', ctx=Store())], value=GeneratorExp(elt=Name(id='mod_name', ctx=Load()), generators=[comprehension(target=Name(id='mod_name', ctx=Store()), iter=Attribute(value=Name(id='sys', ctx=Load()), attr='modules', ctx=Load()), ifs=[BoolOp(op=And(), values=[Compare(left=Name(id='mod_name', ctx=Load()), ops=[NotIn()], comparators=[Name(id='saved', ctx=Load())]), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='mod_name', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='encodings.')], keywords=[]))])], is_async=0)])), Expr(value=Call(func=Name(id='_clear_modules', ctx=Load()), args=[Name(id='del_modules', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='saved_exc', ctx=Load()), attr='resume', ctx=Load()), args=[], keywords=[]))], decorator_list=[Attribute(value=Name(id='contextlib', ctx=Load()), attr='contextmanager', ctx=Load())]), FunctionDef(name='_clear_modules', args=arguments(posonlyargs=[], args=[arg(arg='module_names')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='mod_name', ctx=Store()), iter=Call(func=Name(id='list', ctx=Load()), args=[Name(id='module_names', ctx=Load())], keywords=[]), body=[Delete(targets=[Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='modules', ctx=Load()), slice=Name(id='mod_name', ctx=Load()), ctx=Del())])], orelse=[])], decorator_list=[]), FunctionDef(name='save_pkg_resources_state', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='saved', ctx=Store())], value=Call(func=Attribute(value=Name(id='pkg_resources', ctx=Load()), attr='__getstate__', ctx=Load()), args=[], keywords=[])), Try(body=[Expr(value=Yield(value=Name(id='saved', ctx=Load())))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='pkg_resources', ctx=Load()), attr='__setstate__', ctx=Load()), args=[Name(id='saved', ctx=Load())], keywords=[]))])], decorator_list=[Attribute(value=Name(id='contextlib', ctx=Load()), attr='contextmanager', ctx=Load())]), FunctionDef(name='setup_context', args=arguments(posonlyargs=[], args=[arg(arg='setup_dir')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='temp_dir', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='setup_dir', ctx=Load()), Constant(value='temp')], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='save_pkg_resources_state', ctx=Load()), args=[], keywords=[]))], body=[With(items=[withitem(context_expr=Call(func=Name(id='save_modules', ctx=Load()), args=[], keywords=[]))], body=[With(items=[withitem(context_expr=Call(func=Name(id='save_path', ctx=Load()), args=[], keywords=[]))], body=[Expr(value=Call(func=Name(id='hide_setuptools', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='save_argv', ctx=Load()), args=[], keywords=[]))], body=[With(items=[withitem(context_expr=Call(func=Name(id='override_temp', ctx=Load()), args=[Name(id='temp_dir', ctx=Load())], keywords=[]))], body=[With(items=[withitem(context_expr=Call(func=Name(id='pushd', ctx=Load()), args=[Name(id='setup_dir', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Name(id='__import__', ctx=Load()), args=[Constant(value='setuptools')], keywords=[])), Expr(value=Yield())])])])])])])], decorator_list=[Attribute(value=Name(id='contextlib', ctx=Load()), attr='contextmanager', ctx=Load())]), Assign(targets=[Name(id='_MODULES_TO_HIDE', ctx=Store())], value=Set(elts=[Constant(value='setuptools'), Constant(value='distutils'), Constant(value='pkg_resources'), Constant(value='Cython'), Constant(value='_distutils_hack')])), FunctionDef(name='_needs_hiding', args=arguments(posonlyargs=[], args=[arg(arg='mod_name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n    >>> _needs_hiding('setuptools')\n    True\n    >>> _needs_hiding('pkg_resources')\n    True\n    >>> _needs_hiding('setuptools_plugin')\n    False\n    >>> _needs_hiding('setuptools.__init__')\n    True\n    >>> _needs_hiding('distutils')\n    True\n    >>> _needs_hiding('os')\n    False\n    >>> _needs_hiding('Cython')\n    True\n    ")), Assign(targets=[Name(id='base_module', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='mod_name', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.'), Constant(value=1)], keywords=[]), slice=Constant(value=0), ctx=Load())), Return(value=Compare(left=Name(id='base_module', ctx=Load()), ops=[In()], comparators=[Name(id='_MODULES_TO_HIDE', ctx=Load())]))], decorator_list=[]), FunctionDef(name='hide_setuptools', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n    Remove references to setuptools' modules from sys.modules to allow the\n    invocation to import the most appropriate setuptools. This technique is\n    necessary to avoid issues such as #315 where setuptools upgrading itself\n    would fail to find a function declared in the metadata.\n    ")), Assign(targets=[Name(id='_distutils_hack', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='modules', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='_distutils_hack'), Constant(value=None)], keywords=[])), If(test=Compare(left=Name(id='_distutils_hack', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='_distutils_hack', ctx=Load()), attr='_remove_shim', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='modules', ctx=Store())], value=Call(func=Name(id='filter', ctx=Load()), args=[Name(id='_needs_hiding', ctx=Load()), Attribute(value=Name(id='sys', ctx=Load()), attr='modules', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='_clear_modules', ctx=Load()), args=[Name(id='modules', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='run_setup', args=arguments(posonlyargs=[], args=[arg(arg='setup_script'), arg(arg='args')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Run a distutils setup script, sandboxed in its directory')), Assign(targets=[Name(id='setup_dir', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='abspath', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='dirname', ctx=Load()), args=[Name(id='setup_script', ctx=Load())], keywords=[])], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='setup_context', ctx=Load()), args=[Name(id='setup_dir', ctx=Load())], keywords=[]))], body=[Try(body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='argv', ctx=Load()), slice=Slice(), ctx=Store())], value=BinOp(left=List(elts=[Name(id='setup_script', ctx=Load())], ctx=Load()), op=Add(), right=Call(func=Name(id='list', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[]))), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='path', ctx=Load()), attr='insert', ctx=Load()), args=[Constant(value=0), Name(id='setup_dir', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='working_set', ctx=Load()), attr='__init__', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='working_set', ctx=Load()), attr='callbacks', ctx=Load()), attr='append', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='dist')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='dist', ctx=Load()), attr='activate', ctx=Load()), args=[], keywords=[]))], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='DirectorySandbox', ctx=Load()), args=[Name(id='setup_dir', ctx=Load())], keywords=[]))], body=[Assign(targets=[Name(id='ns', ctx=Store())], value=Call(func=Name(id='dict', ctx=Load()), args=[], keywords=[keyword(arg='__file__', value=Name(id='setup_script', ctx=Load())), keyword(arg='__name__', value=Constant(value='__main__'))])), Expr(value=Call(func=Name(id='_execfile', ctx=Load()), args=[Name(id='setup_script', ctx=Load()), Name(id='ns', ctx=Load())], keywords=[]))])], handlers=[ExceptHandler(type=Name(id='SystemExit', ctx=Load()), name='v', body=[If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='v', ctx=Load()), attr='args', ctx=Load()), Subscript(value=Attribute(value=Name(id='v', ctx=Load()), attr='args', ctx=Load()), slice=Constant(value=0), ctx=Load())]), body=[Raise()], orelse=[])])], orelse=[], finalbody=[])])], decorator_list=[]), ClassDef(name='AbstractSandbox', bases=[], keywords=[], body=[Expr(value=Constant(value="Wrap 'os' module and 'open()' builtin for virtualizing setup scripts")), Assign(targets=[Name(id='_active', ctx=Store())], value=Constant(value=False)), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_attrs', ctx=Store())], value=ListComp(elt=Name(id='name', ctx=Load()), generators=[comprehension(target=Name(id='name', ctx=Store()), iter=Call(func=Name(id='dir', ctx=Load()), args=[Name(id='_os', ctx=Load())], keywords=[]), ifs=[BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='name', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='_')], keywords=[])), Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])])], is_async=0)]))], decorator_list=[]), FunctionDef(name='_copy', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='source')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='name', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_attrs', ctx=Load()), body=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='os', ctx=Load()), Name(id='name', ctx=Load()), Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='source', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_copy', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), If(test=Name(id='_file', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='builtins', ctx=Load()), attr='file', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_file', ctx=Load()))], orelse=[]), Assign(targets=[Attribute(value=Name(id='builtins', ctx=Load()), attr='open', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_open', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_active', ctx=Store())], value=Constant(value=True))], decorator_list=[]), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exc_type'), arg(arg='exc_value'), arg(arg='traceback')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_active', ctx=Store())], value=Constant(value=False)), If(test=Name(id='_file', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='builtins', ctx=Load()), attr='file', ctx=Store())], value=Name(id='_file', ctx=Load()))], orelse=[]), Assign(targets=[Attribute(value=Name(id='builtins', ctx=Load()), attr='open', ctx=Store())], value=Name(id='_open', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_copy', ctx=Load()), args=[Name(id='_os', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='func')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="Run 'func' under os sandboxing")), With(items=[withitem(context_expr=Name(id='self', ctx=Load()))], body=[Return(value=Call(func=Name(id='func', ctx=Load()), args=[], keywords=[]))])], decorator_list=[]), FunctionDef(name='_mk_dual_path_wrapper', args=arguments(posonlyargs=[], args=[arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='original', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='_os', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), FunctionDef(name='wrap', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='src'), arg(arg='dst')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kw'), defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_active', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='src', ctx=Store()), Name(id='dst', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_remap_pair', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='src', ctx=Load()), Name(id='dst', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))]))], orelse=[]), Return(value=Call(func=Name(id='original', ctx=Load()), args=[Name(id='src', ctx=Load()), Name(id='dst', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))]))], decorator_list=[]), Return(value=Name(id='wrap', ctx=Load()))], decorator_list=[]), For(target=Name(id='name', ctx=Store()), iter=List(elts=[Constant(value='rename'), Constant(value='link'), Constant(value='symlink')], ctx=Load()), body=[If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='_os', ctx=Load()), Name(id='name', ctx=Load())], keywords=[]), body=[Assign(targets=[Subscript(value=Call(func=Name(id='locals', ctx=Load()), args=[], keywords=[]), slice=Name(id='name', ctx=Load()), ctx=Store())], value=Call(func=Name(id='_mk_dual_path_wrapper', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), FunctionDef(name='_mk_single_path_wrapper', args=arguments(posonlyargs=[], args=[arg(arg='name'), arg(arg='original')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='original', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='original', ctx=Load()), Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='_os', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])])), FunctionDef(name='wrap', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='path')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kw'), defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_active', ctx=Load()), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_remap_input', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='path', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))]))], orelse=[]), Return(value=Call(func=Name(id='original', ctx=Load()), args=[Name(id='path', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))]))], decorator_list=[]), Return(value=Name(id='wrap', ctx=Load()))], decorator_list=[]), If(test=Name(id='_file', ctx=Load()), body=[Assign(targets=[Name(id='_file', ctx=Store())], value=Call(func=Name(id='_mk_single_path_wrapper', ctx=Load()), args=[Constant(value='file'), Name(id='_file', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='_open', ctx=Store())], value=Call(func=Name(id='_mk_single_path_wrapper', ctx=Load()), args=[Constant(value='open'), Name(id='_open', ctx=Load())], keywords=[])), For(target=Name(id='name', ctx=Store()), iter=List(elts=[Constant(value='stat'), Constant(value='listdir'), Constant(value='chdir'), Constant(value='open'), Constant(value='chmod'), Constant(value='chown'), Constant(value='mkdir'), Constant(value='remove'), Constant(value='unlink'), Constant(value='rmdir'), Constant(value='utime'), Constant(value='lchown'), Constant(value='chroot'), Constant(value='lstat'), Constant(value='startfile'), Constant(value='mkfifo'), Constant(value='mknod'), Constant(value='pathconf'), Constant(value='access')], ctx=Load()), body=[If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='_os', ctx=Load()), Name(id='name', ctx=Load())], keywords=[]), body=[Assign(targets=[Subscript(value=Call(func=Name(id='locals', ctx=Load()), args=[], keywords=[]), slice=Name(id='name', ctx=Load()), ctx=Store())], value=Call(func=Name(id='_mk_single_path_wrapper', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), FunctionDef(name='_mk_single_with_return', args=arguments(posonlyargs=[], args=[arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='original', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='_os', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), FunctionDef(name='wrap', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='path')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kw'), defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_active', ctx=Load()), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_remap_input', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='path', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))])), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_remap_output', ctx=Load()), args=[Name(id='name', ctx=Load()), Call(func=Name(id='original', ctx=Load()), args=[Name(id='path', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))])], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='original', ctx=Load()), args=[Name(id='path', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))]))], decorator_list=[]), Return(value=Name(id='wrap', ctx=Load()))], decorator_list=[]), For(target=Name(id='name', ctx=Store()), iter=List(elts=[Constant(value='readlink'), Constant(value='tempnam')], ctx=Load()), body=[If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='_os', ctx=Load()), Name(id='name', ctx=Load())], keywords=[]), body=[Assign(targets=[Subscript(value=Call(func=Name(id='locals', ctx=Load()), args=[], keywords=[]), slice=Name(id='name', ctx=Load()), ctx=Store())], value=Call(func=Name(id='_mk_single_with_return', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), FunctionDef(name='_mk_query', args=arguments(posonlyargs=[], args=[arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='original', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='_os', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), FunctionDef(name='wrap', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kw'), defaults=[]), body=[Assign(targets=[Name(id='retval', ctx=Store())], value=Call(func=Name(id='original', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_active', ctx=Load()), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_remap_output', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='retval', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='retval', ctx=Load()))], decorator_list=[]), Return(value=Name(id='wrap', ctx=Load()))], decorator_list=[]), For(target=Name(id='name', ctx=Store()), iter=List(elts=[Constant(value='getcwd'), Constant(value='tmpnam')], ctx=Load()), body=[If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='_os', ctx=Load()), Name(id='name', ctx=Load())], keywords=[]), body=[Assign(targets=[Subscript(value=Call(func=Name(id='locals', ctx=Load()), args=[], keywords=[]), slice=Name(id='name', ctx=Load()), ctx=Store())], value=Call(func=Name(id='_mk_query', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), FunctionDef(name='_validate_path', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Called to remap or validate any path, whether input or output')), Return(value=Name(id='path', ctx=Load()))], decorator_list=[]), FunctionDef(name='_remap_input', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='operation'), arg(arg='path')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kw'), defaults=[]), body=[Expr(value=Constant(value='Called for path inputs')), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_validate_path', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_remap_output', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='operation'), arg(arg='path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Called for path outputs')), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_validate_path', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_remap_pair', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='operation'), arg(arg='src'), arg(arg='dst')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kw'), defaults=[]), body=[Expr(value=Constant(value='Called for path pairs like rename, link, and symlink operations')), Return(value=Tuple(elts=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_remap_input', ctx=Load()), args=[BinOp(left=Name(id='operation', ctx=Load()), op=Add(), right=Constant(value='-from')), Name(id='src', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))]), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_remap_input', ctx=Load()), args=[BinOp(left=Name(id='operation', ctx=Load()), op=Add(), right=Constant(value='-to')), Name(id='dst', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))])], ctx=Load()))], decorator_list=[])], decorator_list=[]), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='os', ctx=Load()), Constant(value='devnull')], keywords=[]), body=[Assign(targets=[Name(id='_EXCEPTIONS', ctx=Store())], value=List(elts=[Attribute(value=Name(id='os', ctx=Load()), attr='devnull', ctx=Load())], ctx=Load()))], orelse=[Assign(targets=[Name(id='_EXCEPTIONS', ctx=Store())], value=List(elts=[], ctx=Load()))]), ClassDef(name='DirectorySandbox', bases=[Name(id='AbstractSandbox', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Restrict operations to a single subdirectory - pseudo-chroot')), Assign(targets=[Name(id='write_ops', ctx=Store())], value=Call(func=Attribute(value=Name(id='dict', ctx=Load()), attr='fromkeys', ctx=Load()), args=[List(elts=[Constant(value='open'), Constant(value='chmod'), Constant(value='chown'), Constant(value='mkdir'), Constant(value='remove'), Constant(value='unlink'), Constant(value='rmdir'), Constant(value='utime'), Constant(value='lchown'), Constant(value='chroot'), Constant(value='mkfifo'), Constant(value='mknod'), Constant(value='tempnam')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='_exception_patterns', ctx=Store())], value=List(elts=[], ctx=Load())), Expr(value=Constant(value='exempt writing to paths that match the pattern')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='sandbox'), arg(arg='exceptions')], kwonlyargs=[], kw_defaults=[], defaults=[Name(id='_EXCEPTIONS', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_sandbox', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normcase', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='realpath', ctx=Load()), args=[Name(id='sandbox', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_prefix', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_sandbox', ctx=Load()), Constant(value='')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_exceptions', ctx=Store())], value=ListComp(elt=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normcase', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='realpath', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[])], keywords=[]), generators=[comprehension(target=Name(id='path', ctx=Store()), iter=Name(id='exceptions', ctx=Load()), ifs=[], is_async=0)])), Expr(value=Call(func=Attribute(value=Name(id='AbstractSandbox', ctx=Load()), attr='__init__', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_violation', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='operation')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kw'), defaults=[]), body=[ImportFrom(module='setuptools.sandbox', names=[alias(name='SandboxViolation')], level=0), Raise(exc=Call(func=Name(id='SandboxViolation', ctx=Load()), args=[Name(id='operation', ctx=Load()), Name(id='args', ctx=Load()), Name(id='kw', ctx=Load())], keywords=[]))], decorator_list=[]), If(test=Name(id='_file', ctx=Load()), body=[FunctionDef(name='_file', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='path'), arg(arg='mode')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kw'), defaults=[Constant(value='r')]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='mode', ctx=Load()), ops=[NotIn()], comparators=[Tuple(elts=[Constant(value='r'), Constant(value='rt'), Constant(value='rb'), Constant(value='rU'), Constant(value='U')], ctx=Load())]), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_ok', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_violation', ctx=Load()), args=[Constant(value='file'), Name(id='path', ctx=Load()), Name(id='mode', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))]))], orelse=[]), Return(value=Call(func=Name(id='_file', ctx=Load()), args=[Name(id='path', ctx=Load()), Name(id='mode', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))]))], decorator_list=[])], orelse=[]), FunctionDef(name='_open', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='path'), arg(arg='mode')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kw'), defaults=[Constant(value='r')]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='mode', ctx=Load()), ops=[NotIn()], comparators=[Tuple(elts=[Constant(value='r'), Constant(value='rt'), Constant(value='rb'), Constant(value='rU'), Constant(value='U')], ctx=Load())]), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_ok', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_violation', ctx=Load()), args=[Constant(value='open'), Name(id='path', ctx=Load()), Name(id='mode', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))]))], orelse=[]), Return(value=Call(func=Name(id='_open', ctx=Load()), args=[Name(id='path', ctx=Load()), Name(id='mode', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='tmpnam', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_violation', ctx=Load()), args=[Constant(value='tmpnam')], keywords=[]))], decorator_list=[]), FunctionDef(name='_ok', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='active', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_active', ctx=Load())), Try(body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_active', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='realpath', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normcase', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='realpath', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[])], keywords=[])), Return(value=BoolOp(op=Or(), values=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_exempted', ctx=Load()), args=[Name(id='realpath', ctx=Load())], keywords=[]), Compare(left=Name(id='realpath', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_sandbox', ctx=Load())]), Call(func=Attribute(value=Name(id='realpath', ctx=Load()), attr='startswith', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_prefix', ctx=Load())], keywords=[])]))], handlers=[], orelse=[], finalbody=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_active', ctx=Store())], value=Name(id='active', ctx=Load()))])], decorator_list=[]), FunctionDef(name='_exempted', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='filepath')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='start_matches', ctx=Store())], value=GeneratorExp(elt=Call(func=Attribute(value=Name(id='filepath', ctx=Load()), attr='startswith', ctx=Load()), args=[Name(id='exception', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='exception', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_exceptions', ctx=Load()), ifs=[], is_async=0)])), Assign(targets=[Name(id='pattern_matches', ctx=Store())], value=GeneratorExp(elt=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='pattern', ctx=Load()), Name(id='filepath', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='pattern', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_exception_patterns', ctx=Load()), ifs=[], is_async=0)])), Assign(targets=[Name(id='candidates', ctx=Store())], value=Call(func=Attribute(value=Name(id='itertools', ctx=Load()), attr='chain', ctx=Load()), args=[Name(id='start_matches', ctx=Load()), Name(id='pattern_matches', ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='any', ctx=Load()), args=[Name(id='candidates', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_remap_input', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='operation'), arg(arg='path')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kw'), defaults=[]), body=[Expr(value=Constant(value='Called for path inputs')), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='operation', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='write_ops', ctx=Load())]), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_ok', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_violation', ctx=Load()), args=[Name(id='operation', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='realpath', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))]))], orelse=[]), Return(value=Name(id='path', ctx=Load()))], decorator_list=[]), FunctionDef(name='_remap_pair', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='operation'), arg(arg='src'), arg(arg='dst')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kw'), defaults=[]), body=[Expr(value=Constant(value='Called for path pairs like rename, link, and symlink operations')), If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_ok', ctx=Load()), args=[Name(id='src', ctx=Load())], keywords=[])), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_ok', ctx=Load()), args=[Name(id='dst', ctx=Load())], keywords=[]))]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_violation', ctx=Load()), args=[Name(id='operation', ctx=Load()), Name(id='src', ctx=Load()), Name(id='dst', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))]))], orelse=[]), Return(value=Tuple(elts=[Name(id='src', ctx=Load()), Name(id='dst', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='open', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='file'), arg(arg='flags'), arg(arg='mode')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kw'), defaults=[Constant(value=511)]), body=[Expr(value=Constant(value='Called for low-level os.open()')), If(test=BoolOp(op=And(), values=[BinOp(left=Name(id='flags', ctx=Load()), op=BitAnd(), right=Name(id='WRITE_FLAGS', ctx=Load())), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_ok', ctx=Load()), args=[Name(id='file', ctx=Load())], keywords=[]))]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_violation', ctx=Load()), args=[Constant(value='os.open'), Name(id='file', ctx=Load()), Name(id='flags', ctx=Load()), Name(id='mode', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='_os', ctx=Load()), attr='open', ctx=Load()), args=[Name(id='file', ctx=Load()), Name(id='flags', ctx=Load()), Name(id='mode', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))]))], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='WRITE_FLAGS', ctx=Store())], value=Call(func=Attribute(value=Name(id='functools', ctx=Load()), attr='reduce', ctx=Load()), args=[Attribute(value=Name(id='operator', ctx=Load()), attr='or_', ctx=Load()), ListComp(elt=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='_os', ctx=Load()), Name(id='a', ctx=Load()), Constant(value=0)], keywords=[]), generators=[comprehension(target=Name(id='a', ctx=Store()), iter=Call(func=Attribute(value=Constant(value='O_WRONLY O_RDWR O_APPEND O_CREAT O_TRUNC O_TEMPORARY'), attr='split', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])], keywords=[])), ClassDef(name='SandboxViolation', bases=[Name(id='DistutilsError', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='A setup script attempted to modify the filesystem outside the sandbox')), Assign(targets=[Name(id='tmpl', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='textwrap', ctx=Load()), attr='dedent', ctx=Load()), args=[Constant(value="\n        SandboxViolation: {cmd}{args!r} {kwargs}\n\n        The package setup script has attempted to modify files on your system\n        that are not within the EasyInstall build area, and has been aborted.\n\n        This package cannot be safely installed by EasyInstall, and may not\n        support alternate installation locations even if you run its setup\n        script by hand.  Please inform the package's author and the EasyInstall\n        maintainers to find out if a fix or workaround is available.\n        ")], keywords=[]), attr='lstrip', ctx=Load()), args=[], keywords=[])), FunctionDef(name='__str__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='cmd', ctx=Store()), Name(id='args', ctx=Store()), Name(id='kwargs', ctx=Store())], ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='args', ctx=Load())), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tmpl', ctx=Load()), attr='format', ctx=Load()), args=[], keywords=[keyword(value=Call(func=Name(id='locals', ctx=Load()), args=[], keywords=[]))]))], decorator_list=[])], decorator_list=[])], type_ignores=[])