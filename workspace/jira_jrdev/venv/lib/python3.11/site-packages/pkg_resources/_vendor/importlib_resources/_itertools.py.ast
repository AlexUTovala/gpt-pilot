Module(body=[ImportFrom(module='itertools', names=[alias(name='filterfalse')], level=0), ImportFrom(module='typing', names=[alias(name='Callable'), alias(name='Iterable'), alias(name='Iterator'), alias(name='Optional'), alias(name='Set'), alias(name='TypeVar'), alias(name='Union')], level=0), Assign(targets=[Name(id='_T', ctx=Store())], value=Call(func=Name(id='TypeVar', ctx=Load()), args=[Constant(value='_T')], keywords=[])), Assign(targets=[Name(id='_U', ctx=Store())], value=Call(func=Name(id='TypeVar', ctx=Load()), args=[Constant(value='_U')], keywords=[])), FunctionDef(name='unique_everseen', args=arguments(posonlyargs=[], args=[arg(arg='iterable', annotation=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='_T', ctx=Load()), ctx=Load())), arg(arg='key', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='_T', ctx=Load())], ctx=Load()), Name(id='_U', ctx=Load())], ctx=Load()), ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='List unique elements, preserving order. Remember all elements ever seen.')), AnnAssign(target=Name(id='seen', ctx=Store()), annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='_T', ctx=Load()), Name(id='_U', ctx=Load())], ctx=Load()), ctx=Load()), ctx=Load()), value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[]), simple=1), Assign(targets=[Name(id='seen_add', ctx=Store())], value=Attribute(value=Name(id='seen', ctx=Load()), attr='add', ctx=Load())), If(test=Compare(left=Name(id='key', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[For(target=Name(id='element', ctx=Store()), iter=Call(func=Name(id='filterfalse', ctx=Load()), args=[Attribute(value=Name(id='seen', ctx=Load()), attr='__contains__', ctx=Load()), Name(id='iterable', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Name(id='seen_add', ctx=Load()), args=[Name(id='element', ctx=Load())], keywords=[])), Expr(value=Yield(value=Name(id='element', ctx=Load())))], orelse=[])], orelse=[For(target=Name(id='element', ctx=Store()), iter=Name(id='iterable', ctx=Load()), body=[Assign(targets=[Name(id='k', ctx=Store())], value=Call(func=Name(id='key', ctx=Load()), args=[Name(id='element', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='k', ctx=Load()), ops=[NotIn()], comparators=[Name(id='seen', ctx=Load())]), body=[Expr(value=Call(func=Name(id='seen_add', ctx=Load()), args=[Name(id='k', ctx=Load())], keywords=[])), Expr(value=Yield(value=Name(id='element', ctx=Load())))], orelse=[])], orelse=[])])], decorator_list=[], returns=Subscript(value=Name(id='Iterator', ctx=Load()), slice=Name(id='_T', ctx=Load()), ctx=Load()))], type_ignores=[])