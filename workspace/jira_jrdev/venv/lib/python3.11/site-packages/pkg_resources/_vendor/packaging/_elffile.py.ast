Module(body=[Expr(value=Constant(value='\nELF file parser.\n\nThis provides a class ``ELFFile`` that parses an ELF executable in a similar\ninterface to ``ZipFile``. Only the read interface is implemented.\n\nBased on: https://gist.github.com/lyssdod/f51579ae8d93c8657a5564aefc2ffbca\nELF header: https://refspecs.linuxfoundation.org/elf/gabi4+/ch4.eheader.html\n')), Import(names=[alias(name='enum')]), Import(names=[alias(name='os')]), Import(names=[alias(name='struct')]), ImportFrom(module='typing', names=[alias(name='IO'), alias(name='Optional'), alias(name='Tuple')], level=0), ClassDef(name='ELFInvalid', bases=[Name(id='ValueError', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='EIClass', bases=[Attribute(value=Name(id='enum', ctx=Load()), attr='IntEnum', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='C32', ctx=Store())], value=Constant(value=1)), Assign(targets=[Name(id='C64', ctx=Store())], value=Constant(value=2))], decorator_list=[]), ClassDef(name='EIData', bases=[Attribute(value=Name(id='enum', ctx=Load()), attr='IntEnum', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='Lsb', ctx=Store())], value=Constant(value=1)), Assign(targets=[Name(id='Msb', ctx=Store())], value=Constant(value=2))], decorator_list=[]), ClassDef(name='EMachine', bases=[Attribute(value=Name(id='enum', ctx=Load()), attr='IntEnum', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='I386', ctx=Store())], value=Constant(value=3)), Assign(targets=[Name(id='S390', ctx=Store())], value=Constant(value=22)), Assign(targets=[Name(id='Arm', ctx=Store())], value=Constant(value=40)), Assign(targets=[Name(id='X8664', ctx=Store())], value=Constant(value=62)), Assign(targets=[Name(id='AArc64', ctx=Store())], value=Constant(value=183))], decorator_list=[]), ClassDef(name='ELFFile', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    Representation of an ELF executable.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='f', annotation=Subscript(value=Name(id='IO', ctx=Load()), slice=Name(id='bytes', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_f', ctx=Store())], value=Name(id='f', ctx=Load())), Try(body=[Assign(targets=[Name(id='ident', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_read', ctx=Load()), args=[Constant(value='16B')], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='struct', ctx=Load()), attr='error', ctx=Load()), body=[Raise(exc=Call(func=Name(id='ELFInvalid', ctx=Load()), args=[Constant(value='unable to parse identification')], keywords=[]))])], orelse=[], finalbody=[]), Assign(targets=[Name(id='magic', ctx=Store())], value=Call(func=Name(id='bytes', ctx=Load()), args=[Subscript(value=Name(id='ident', ctx=Load()), slice=Slice(upper=Constant(value=4)), ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='magic', ctx=Load()), ops=[NotEq()], comparators=[Constant(value=b'\x7fELF')]), body=[Raise(exc=Call(func=Name(id='ELFInvalid', ctx=Load()), args=[JoinedStr(values=[Constant(value='invalid magic: '), FormattedValue(value=Name(id='magic', ctx=Load()), conversion=114)])], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='capacity', ctx=Store())], value=Subscript(value=Name(id='ident', ctx=Load()), slice=Constant(value=4), ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='encoding', ctx=Store())], value=Subscript(value=Name(id='ident', ctx=Load()), slice=Constant(value=5), ctx=Load())), Try(body=[Assign(targets=[Tuple(elts=[Name(id='e_fmt', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='_p_fmt', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='_p_idx', ctx=Store())], ctx=Store())], value=Subscript(value=Dict(keys=[Tuple(elts=[Constant(value=1), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=2)], ctx=Load()), Tuple(elts=[Constant(value=2), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value=2), Constant(value=2)], ctx=Load())], values=[Tuple(elts=[Constant(value='<HHIIIIIHHH'), Constant(value='<IIIIIIII'), Tuple(elts=[Constant(value=0), Constant(value=1), Constant(value=4)], ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='>HHIIIIIHHH'), Constant(value='>IIIIIIII'), Tuple(elts=[Constant(value=0), Constant(value=1), Constant(value=4)], ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='<HHIQQQIHHH'), Constant(value='<IIQQQQQQ'), Tuple(elts=[Constant(value=0), Constant(value=2), Constant(value=5)], ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='>HHIQQQIHHH'), Constant(value='>IIQQQQQQ'), Tuple(elts=[Constant(value=0), Constant(value=2), Constant(value=5)], ctx=Load())], ctx=Load())]), slice=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='capacity', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='encoding', ctx=Load())], ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Raise(exc=Call(func=Name(id='ELFInvalid', ctx=Load()), args=[JoinedStr(values=[Constant(value='unrecognized capacity ('), FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='capacity', ctx=Load()), conversion=-1), Constant(value=') or encoding ('), FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='encoding', ctx=Load()), conversion=-1), Constant(value=')')])], keywords=[]))])], orelse=[], finalbody=[]), Try(body=[Assign(targets=[Tuple(elts=[Name(id='_', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='machine', ctx=Store()), Name(id='_', ctx=Store()), Name(id='_', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='_e_phoff', ctx=Store()), Name(id='_', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='flags', ctx=Store()), Name(id='_', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='_e_phentsize', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='_e_phnum', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_read', ctx=Load()), args=[Name(id='e_fmt', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='struct', ctx=Load()), attr='error', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ELFInvalid', ctx=Load()), args=[Constant(value='unable to parse machine and section information')], keywords=[]), cause=Name(id='e', ctx=Load()))])], orelse=[], finalbody=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_read', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fmt', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='struct', ctx=Load()), attr='unpack', ctx=Load()), args=[Name(id='fmt', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_f', ctx=Load()), attr='read', ctx=Load()), args=[Call(func=Attribute(value=Name(id='struct', ctx=Load()), attr='calcsize', ctx=Load()), args=[Name(id='fmt', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], decorator_list=[], returns=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='int', ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load())), FunctionDef(name='interpreter', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        The path recorded in the ``PT_INTERP`` section header.\n        ')), For(target=Name(id='index', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_e_phnum', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_f', ctx=Load()), attr='seek', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='_e_phoff', ctx=Load()), op=Add(), right=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='_e_phentsize', ctx=Load()), op=Mult(), right=Name(id='index', ctx=Load())))], keywords=[])), Try(body=[Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_read', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_p_fmt', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='struct', ctx=Load()), attr='error', ctx=Load()), body=[Continue()])], orelse=[], finalbody=[]), If(test=Compare(left=Subscript(value=Name(id='data', ctx=Load()), slice=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_p_idx', ctx=Load()), slice=Constant(value=0), ctx=Load()), ctx=Load()), ops=[NotEq()], comparators=[Constant(value=3)]), body=[Continue()], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_f', ctx=Load()), attr='seek', ctx=Load()), args=[Subscript(value=Name(id='data', ctx=Load()), slice=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_p_idx', ctx=Load()), slice=Constant(value=1), ctx=Load()), ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='fsdecode', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_f', ctx=Load()), attr='read', ctx=Load()), args=[Subscript(value=Name(id='data', ctx=Load()), slice=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_p_idx', ctx=Load()), slice=Constant(value=2), ctx=Load()), ctx=Load())], keywords=[])], keywords=[]), attr='strip', ctx=Load()), args=[Constant(value='\x00')], keywords=[]))], orelse=[]), Return(value=Constant(value=None))], decorator_list=[Name(id='property', ctx=Load())], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], decorator_list=[])], type_ignores=[])