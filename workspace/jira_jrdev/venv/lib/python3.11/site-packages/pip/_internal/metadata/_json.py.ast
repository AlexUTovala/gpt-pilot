Module(body=[ImportFrom(module='email.header', names=[alias(name='Header'), alias(name='decode_header'), alias(name='make_header')], level=0), ImportFrom(module='email.message', names=[alias(name='Message')], level=0), ImportFrom(module='typing', names=[alias(name='Any'), alias(name='Dict'), alias(name='List'), alias(name='Union')], level=0), Assign(targets=[Name(id='METADATA_FIELDS', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='Metadata-Version'), Constant(value=False)], ctx=Load()), Tuple(elts=[Constant(value='Name'), Constant(value=False)], ctx=Load()), Tuple(elts=[Constant(value='Version'), Constant(value=False)], ctx=Load()), Tuple(elts=[Constant(value='Dynamic'), Constant(value=True)], ctx=Load()), Tuple(elts=[Constant(value='Platform'), Constant(value=True)], ctx=Load()), Tuple(elts=[Constant(value='Supported-Platform'), Constant(value=True)], ctx=Load()), Tuple(elts=[Constant(value='Summary'), Constant(value=False)], ctx=Load()), Tuple(elts=[Constant(value='Description'), Constant(value=False)], ctx=Load()), Tuple(elts=[Constant(value='Description-Content-Type'), Constant(value=False)], ctx=Load()), Tuple(elts=[Constant(value='Keywords'), Constant(value=False)], ctx=Load()), Tuple(elts=[Constant(value='Home-page'), Constant(value=False)], ctx=Load()), Tuple(elts=[Constant(value='Download-URL'), Constant(value=False)], ctx=Load()), Tuple(elts=[Constant(value='Author'), Constant(value=False)], ctx=Load()), Tuple(elts=[Constant(value='Author-email'), Constant(value=False)], ctx=Load()), Tuple(elts=[Constant(value='Maintainer'), Constant(value=False)], ctx=Load()), Tuple(elts=[Constant(value='Maintainer-email'), Constant(value=False)], ctx=Load()), Tuple(elts=[Constant(value='License'), Constant(value=False)], ctx=Load()), Tuple(elts=[Constant(value='Classifier'), Constant(value=True)], ctx=Load()), Tuple(elts=[Constant(value='Requires-Dist'), Constant(value=True)], ctx=Load()), Tuple(elts=[Constant(value='Requires-Python'), Constant(value=False)], ctx=Load()), Tuple(elts=[Constant(value='Requires-External'), Constant(value=True)], ctx=Load()), Tuple(elts=[Constant(value='Project-URL'), Constant(value=True)], ctx=Load()), Tuple(elts=[Constant(value='Provides-Extra'), Constant(value=True)], ctx=Load()), Tuple(elts=[Constant(value='Provides-Dist'), Constant(value=True)], ctx=Load()), Tuple(elts=[Constant(value='Obsoletes-Dist'), Constant(value=True)], ctx=Load())], ctx=Load())), FunctionDef(name='json_name', args=arguments(posonlyargs=[], args=[arg(arg='field', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='field', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), attr='replace', ctx=Load()), args=[Constant(value='-'), Constant(value='_')], keywords=[]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='msg_to_json', args=arguments(posonlyargs=[], args=[arg(arg='msg', annotation=Name(id='Message', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Convert a Message object into a JSON-compatible dictionary.')), FunctionDef(name='sanitise_header', args=arguments(posonlyargs=[], args=[arg(arg='h', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='Header', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='h', ctx=Load()), Name(id='Header', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='chunks', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Tuple(elts=[Name(id='bytes', ctx=Store()), Name(id='encoding', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='decode_header', ctx=Load()), args=[Name(id='h', ctx=Load())], keywords=[]), body=[If(test=Compare(left=Name(id='encoding', ctx=Load()), ops=[Eq()], comparators=[Constant(value='unknown-8bit')]), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='bytes', ctx=Load()), attr='decode', ctx=Load()), args=[Constant(value='utf-8')], keywords=[])), Assign(targets=[Name(id='encoding', ctx=Store())], value=Constant(value='utf-8'))], handlers=[ExceptHandler(type=Name(id='UnicodeDecodeError', ctx=Load()), body=[Assign(targets=[Name(id='encoding', ctx=Store())], value=Constant(value='latin1'))])], orelse=[], finalbody=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='bytes', ctx=Load()), Name(id='encoding', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='str', ctx=Load()), args=[Call(func=Name(id='make_header', ctx=Load()), args=[Name(id='chunks', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='h', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='str', ctx=Load())), Assign(targets=[Name(id='result', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Tuple(elts=[Name(id='field', ctx=Store()), Name(id='multi', ctx=Store())], ctx=Store()), iter=Name(id='METADATA_FIELDS', ctx=Load()), body=[If(test=Compare(left=Name(id='field', ctx=Load()), ops=[NotIn()], comparators=[Name(id='msg', ctx=Load())]), body=[Continue()], orelse=[]), Assign(targets=[Name(id='key', ctx=Store())], value=Call(func=Name(id='json_name', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[])), If(test=Name(id='multi', ctx=Load()), body=[AnnAssign(target=Name(id='value', ctx=Store()), annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()), value=ListComp(elt=Call(func=Name(id='sanitise_header', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='v', ctx=Store()), iter=Call(func=Attribute(value=Name(id='msg', ctx=Load()), attr='get_all', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[]), ifs=[], is_async=0)]), simple=1)], orelse=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='sanitise_header', ctx=Load()), args=[Call(func=Attribute(value=Name(id='msg', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[])], keywords=[])), If(test=Compare(left=Name(id='key', ctx=Load()), ops=[Eq()], comparators=[Constant(value='keywords')]), body=[If(test=Compare(left=Constant(value=','), ops=[In()], comparators=[Name(id='value', ctx=Load())]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=ListComp(elt=Call(func=Attribute(value=Name(id='v', ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='v', ctx=Store()), iter=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=',')], keywords=[]), ifs=[], is_async=0)]))], orelse=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='split', ctx=Load()), args=[], keywords=[]))])], orelse=[])]), Assign(targets=[Subscript(value=Name(id='result', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store())], value=Name(id='value', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='payload', ctx=Store())], value=Call(func=Attribute(value=Name(id='msg', ctx=Load()), attr='get_payload', ctx=Load()), args=[], keywords=[])), If(test=Name(id='payload', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='result', ctx=Load()), slice=Constant(value='description'), ctx=Store())], value=Name(id='payload', ctx=Load()))], orelse=[]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='Any', ctx=Load())], ctx=Load()), ctx=Load()))], type_ignores=[])