Module(body=[ImportFrom(module='typing', names=[alias(name='Dict'), alias(name='Generator')], level=0), ImportFrom(module='pip._vendor.requests.models', names=[alias(name='CONTENT_CHUNK_SIZE'), alias(name='Response')], level=0), ImportFrom(module='pip._internal.exceptions', names=[alias(name='NetworkConnectionError')], level=0), AnnAssign(target=Name(id='HEADERS', ctx=Store()), annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load()), value=Dict(keys=[Constant(value='Accept-Encoding')], values=[Constant(value='identity')]), simple=1), FunctionDef(name='raise_for_status', args=arguments(posonlyargs=[], args=[arg(arg='resp', annotation=Name(id='Response', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='http_error_msg', ctx=Store())], value=Constant(value='')), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='resp', ctx=Load()), attr='reason', ctx=Load()), Name(id='bytes', ctx=Load())], keywords=[]), body=[Try(body=[Assign(targets=[Name(id='reason', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='reason', ctx=Load()), attr='decode', ctx=Load()), args=[Constant(value='utf-8')], keywords=[]))], handlers=[ExceptHandler(type=Name(id='UnicodeDecodeError', ctx=Load()), body=[Assign(targets=[Name(id='reason', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='reason', ctx=Load()), attr='decode', ctx=Load()), args=[Constant(value='iso-8859-1')], keywords=[]))])], orelse=[], finalbody=[])], orelse=[Assign(targets=[Name(id='reason', ctx=Store())], value=Attribute(value=Name(id='resp', ctx=Load()), attr='reason', ctx=Load()))]), If(test=Compare(left=Constant(value=400), ops=[LtE(), Lt()], comparators=[Attribute(value=Name(id='resp', ctx=Load()), attr='status_code', ctx=Load()), Constant(value=500)]), body=[Assign(targets=[Name(id='http_error_msg', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Attribute(value=Name(id='resp', ctx=Load()), attr='status_code', ctx=Load()), conversion=-1), Constant(value=' Client Error: '), FormattedValue(value=Name(id='reason', ctx=Load()), conversion=-1), Constant(value=' for url: '), FormattedValue(value=Attribute(value=Name(id='resp', ctx=Load()), attr='url', ctx=Load()), conversion=-1)]))], orelse=[If(test=Compare(left=Constant(value=500), ops=[LtE(), Lt()], comparators=[Attribute(value=Name(id='resp', ctx=Load()), attr='status_code', ctx=Load()), Constant(value=600)]), body=[Assign(targets=[Name(id='http_error_msg', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Attribute(value=Name(id='resp', ctx=Load()), attr='status_code', ctx=Load()), conversion=-1), Constant(value=' Server Error: '), FormattedValue(value=Name(id='reason', ctx=Load()), conversion=-1), Constant(value=' for url: '), FormattedValue(value=Attribute(value=Name(id='resp', ctx=Load()), attr='url', ctx=Load()), conversion=-1)]))], orelse=[])]), If(test=Name(id='http_error_msg', ctx=Load()), body=[Raise(exc=Call(func=Name(id='NetworkConnectionError', ctx=Load()), args=[Name(id='http_error_msg', ctx=Load())], keywords=[keyword(arg='response', value=Name(id='resp', ctx=Load()))]))], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='response_chunks', args=arguments(posonlyargs=[], args=[arg(arg='response', annotation=Name(id='Response', ctx=Load())), arg(arg='chunk_size', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Name(id='CONTENT_CHUNK_SIZE', ctx=Load())]), body=[Expr(value=Constant(value='Given a requests Response, provide the data chunks.')), Try(body=[For(target=Name(id='chunk', ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='response', ctx=Load()), attr='raw', ctx=Load()), attr='stream', ctx=Load()), args=[Name(id='chunk_size', ctx=Load())], keywords=[keyword(arg='decode_content', value=Constant(value=False))]), body=[Expr(value=Yield(value=Name(id='chunk', ctx=Load())))], orelse=[])], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[While(test=Constant(value=True), body=[Assign(targets=[Name(id='chunk', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='response', ctx=Load()), attr='raw', ctx=Load()), attr='read', ctx=Load()), args=[Name(id='chunk_size', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='chunk', ctx=Load())), body=[Break()], orelse=[]), Expr(value=Yield(value=Name(id='chunk', ctx=Load())))], orelse=[])])], orelse=[], finalbody=[])], decorator_list=[], returns=Subscript(value=Name(id='Generator', ctx=Load()), slice=Tuple(elts=[Name(id='bytes', ctx=Load()), Constant(value=None), Constant(value=None)], ctx=Load()), ctx=Load()))], type_ignores=[])