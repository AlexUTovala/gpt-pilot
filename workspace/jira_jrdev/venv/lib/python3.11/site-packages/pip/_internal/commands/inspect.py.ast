Module(body=[Import(names=[alias(name='logging')]), ImportFrom(module='optparse', names=[alias(name='Values')], level=0), ImportFrom(module='typing', names=[alias(name='Any'), alias(name='Dict'), alias(name='List')], level=0), ImportFrom(module='pip._vendor.packaging.markers', names=[alias(name='default_environment')], level=0), ImportFrom(module='pip._vendor.rich', names=[alias(name='print_json')], level=0), ImportFrom(module='pip', names=[alias(name='__version__')], level=0), ImportFrom(module='pip._internal.cli', names=[alias(name='cmdoptions')], level=0), ImportFrom(module='pip._internal.cli.req_command', names=[alias(name='Command')], level=0), ImportFrom(module='pip._internal.cli.status_codes', names=[alias(name='SUCCESS')], level=0), ImportFrom(module='pip._internal.metadata', names=[alias(name='BaseDistribution'), alias(name='get_environment')], level=0), ImportFrom(module='pip._internal.utils.compat', names=[alias(name='stdlib_pkgs')], level=0), ImportFrom(module='pip._internal.utils.urls', names=[alias(name='path_to_url')], level=0), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Name(id='__name__', ctx=Load())], keywords=[])), ClassDef(name='InspectCommand', bases=[Name(id='Command', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    Inspect the content of a Python environment and produce a report in JSON format.\n    ')), Assign(targets=[Name(id='ignore_require_venv', ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='usage', ctx=Store())], value=Constant(value='\n      %prog [options]')), FunctionDef(name='add_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cmd_opts', ctx=Load()), attr='add_option', ctx=Load()), args=[Constant(value='--local')], keywords=[keyword(arg='action', value=Constant(value='store_true')), keyword(arg='default', value=Constant(value=False)), keyword(arg='help', value=Constant(value='If in a virtualenv that has global access, do not list globally-installed packages.'))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cmd_opts', ctx=Load()), attr='add_option', ctx=Load()), args=[Constant(value='--user')], keywords=[keyword(arg='dest', value=Constant(value='user')), keyword(arg='action', value=Constant(value='store_true')), keyword(arg='default', value=Constant(value=False)), keyword(arg='help', value=Constant(value='Only output packages installed in user-site.'))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cmd_opts', ctx=Load()), attr='add_option', ctx=Load()), args=[Call(func=Attribute(value=Name(id='cmdoptions', ctx=Load()), attr='list_path', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='parser', ctx=Load()), attr='insert_option_group', ctx=Load()), args=[Constant(value=0), Attribute(value=Name(id='self', ctx=Load()), attr='cmd_opts', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='options', annotation=Name(id='Values', ctx=Load())), arg(arg='args', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='cmdoptions', ctx=Load()), attr='check_list_path_option', ctx=Load()), args=[Name(id='options', ctx=Load())], keywords=[])), Assign(targets=[Name(id='dists', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='get_environment', ctx=Load()), args=[Attribute(value=Name(id='options', ctx=Load()), attr='path', ctx=Load())], keywords=[]), attr='iter_installed_distributions', ctx=Load()), args=[], keywords=[keyword(arg='local_only', value=Attribute(value=Name(id='options', ctx=Load()), attr='local', ctx=Load())), keyword(arg='user_only', value=Attribute(value=Name(id='options', ctx=Load()), attr='user', ctx=Load())), keyword(arg='skip', value=Call(func=Name(id='set', ctx=Load()), args=[Name(id='stdlib_pkgs', ctx=Load())], keywords=[]))])), Assign(targets=[Name(id='output', ctx=Store())], value=Dict(keys=[Constant(value='version'), Constant(value='pip_version'), Constant(value='installed'), Constant(value='environment')], values=[Constant(value='1'), Name(id='__version__', ctx=Load()), ListComp(elt=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_dist_to_dict', ctx=Load()), args=[Name(id='dist', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='dist', ctx=Store()), iter=Name(id='dists', ctx=Load()), ifs=[], is_async=0)]), Call(func=Name(id='default_environment', ctx=Load()), args=[], keywords=[])])), Expr(value=Call(func=Name(id='print_json', ctx=Load()), args=[], keywords=[keyword(arg='data', value=Name(id='output', ctx=Load()))])), Return(value=Name(id='SUCCESS', ctx=Load()))], decorator_list=[], returns=Name(id='int', ctx=Load())), FunctionDef(name='_dist_to_dict', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dist', annotation=Name(id='BaseDistribution', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[AnnAssign(target=Name(id='res', ctx=Store()), annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='Any', ctx=Load())], ctx=Load()), ctx=Load()), value=Dict(keys=[Constant(value='metadata'), Constant(value='metadata_location')], values=[Attribute(value=Name(id='dist', ctx=Load()), attr='metadata_dict', ctx=Load()), Attribute(value=Name(id='dist', ctx=Load()), attr='info_location', ctx=Load())]), simple=1), Assign(targets=[Name(id='direct_url', ctx=Store())], value=Attribute(value=Name(id='dist', ctx=Load()), attr='direct_url', ctx=Load())), If(test=Compare(left=Name(id='direct_url', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='direct_url'), ctx=Store())], value=Call(func=Attribute(value=Name(id='direct_url', ctx=Load()), attr='to_dict', ctx=Load()), args=[], keywords=[]))], orelse=[Assign(targets=[Name(id='editable_project_location', ctx=Store())], value=Attribute(value=Name(id='dist', ctx=Load()), attr='editable_project_location', ctx=Load())), If(test=Compare(left=Name(id='editable_project_location', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='direct_url'), ctx=Store())], value=Dict(keys=[Constant(value='url'), Constant(value='dir_info')], values=[Call(func=Name(id='path_to_url', ctx=Load()), args=[Name(id='editable_project_location', ctx=Load())], keywords=[]), Dict(keys=[Constant(value='editable')], values=[Constant(value=True)])]))], orelse=[])]), Assign(targets=[Name(id='installer', ctx=Store())], value=Attribute(value=Name(id='dist', ctx=Load()), attr='installer', ctx=Load())), If(test=Attribute(value=Name(id='dist', ctx=Load()), attr='installer', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='installer'), ctx=Store())], value=Name(id='installer', ctx=Load()))], orelse=[]), If(test=Attribute(value=Name(id='dist', ctx=Load()), attr='installed_with_dist_info', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='requested'), ctx=Store())], value=Attribute(value=Name(id='dist', ctx=Load()), attr='requested', ctx=Load()))], orelse=[]), Return(value=Name(id='res', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='Any', ctx=Load())], ctx=Load()), ctx=Load()))], decorator_list=[])], type_ignores=[])