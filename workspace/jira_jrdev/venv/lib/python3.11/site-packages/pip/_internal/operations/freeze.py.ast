Module(body=[Import(names=[alias(name='collections')]), Import(names=[alias(name='logging')]), Import(names=[alias(name='os')]), ImportFrom(module='typing', names=[alias(name='Container'), alias(name='Dict'), alias(name='Generator'), alias(name='Iterable'), alias(name='List'), alias(name='NamedTuple'), alias(name='Optional'), alias(name='Set')], level=0), ImportFrom(module='pip._vendor.packaging.utils', names=[alias(name='canonicalize_name')], level=0), ImportFrom(module='pip._vendor.packaging.version', names=[alias(name='Version')], level=0), ImportFrom(module='pip._internal.exceptions', names=[alias(name='BadCommand'), alias(name='InstallationError')], level=0), ImportFrom(module='pip._internal.metadata', names=[alias(name='BaseDistribution'), alias(name='get_environment')], level=0), ImportFrom(module='pip._internal.req.constructors', names=[alias(name='install_req_from_editable'), alias(name='install_req_from_line')], level=0), ImportFrom(module='pip._internal.req.req_file', names=[alias(name='COMMENT_RE')], level=0), ImportFrom(module='pip._internal.utils.direct_url_helpers', names=[alias(name='direct_url_as_pep440_direct_reference')], level=0), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Name(id='__name__', ctx=Load())], keywords=[])), ClassDef(name='_EditableInfo', bases=[Name(id='NamedTuple', ctx=Load())], keywords=[], body=[AnnAssign(target=Name(id='requirement', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1), AnnAssign(target=Name(id='comments', ctx=Store()), annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), simple=1)], decorator_list=[]), FunctionDef(name='freeze', args=arguments(posonlyargs=[], args=[arg(arg='requirement', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), ctx=Load())), arg(arg='local_only', annotation=Name(id='bool', ctx=Load())), arg(arg='user_only', annotation=Name(id='bool', ctx=Load())), arg(arg='paths', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), ctx=Load())), arg(arg='isolated', annotation=Name(id='bool', ctx=Load())), arg(arg='exclude_editable', annotation=Name(id='bool', ctx=Load())), arg(arg='skip', annotation=Subscript(value=Name(id='Container', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=False), Constant(value=False), Constant(value=None), Constant(value=False), Constant(value=False), Tuple(elts=[], ctx=Load())]), body=[AnnAssign(target=Name(id='installations', ctx=Store()), annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='FrozenRequirement', ctx=Load())], ctx=Load()), ctx=Load()), value=Dict(keys=[], values=[]), simple=1), Assign(targets=[Name(id='dists', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='get_environment', ctx=Load()), args=[Name(id='paths', ctx=Load())], keywords=[]), attr='iter_installed_distributions', ctx=Load()), args=[], keywords=[keyword(arg='local_only', value=Name(id='local_only', ctx=Load())), keyword(arg='skip', value=Tuple(elts=[], ctx=Load())), keyword(arg='user_only', value=Name(id='user_only', ctx=Load()))])), For(target=Name(id='dist', ctx=Store()), iter=Name(id='dists', ctx=Load()), body=[Assign(targets=[Name(id='req', ctx=Store())], value=Call(func=Attribute(value=Name(id='FrozenRequirement', ctx=Load()), attr='from_dist', ctx=Load()), args=[Name(id='dist', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Name(id='exclude_editable', ctx=Load()), Attribute(value=Name(id='req', ctx=Load()), attr='editable', ctx=Load())]), body=[Continue()], orelse=[]), Assign(targets=[Subscript(value=Name(id='installations', ctx=Load()), slice=Attribute(value=Name(id='req', ctx=Load()), attr='canonical_name', ctx=Load()), ctx=Store())], value=Name(id='req', ctx=Load()))], orelse=[]), If(test=Name(id='requirement', ctx=Load()), body=[AnnAssign(target=Name(id='emitted_options', ctx=Store()), annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[]), simple=1), AnnAssign(target=Name(id='req_files', ctx=Store()), annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()), value=Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='defaultdict', ctx=Load()), args=[Name(id='list', ctx=Load())], keywords=[]), simple=1), For(target=Name(id='req_file_path', ctx=Store()), iter=Name(id='requirement', ctx=Load()), body=[With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='req_file_path', ctx=Load())], keywords=[]), optional_vars=Name(id='req_file', ctx=Store()))], body=[For(target=Name(id='line', ctx=Store()), iter=Name(id='req_file', ctx=Load()), body=[If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='line', ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[])), Call(func=Attribute(value=Call(func=Attribute(value=Name(id='line', ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[]), attr='startswith', ctx=Load()), args=[Constant(value='#')], keywords=[]), Call(func=Attribute(value=Name(id='line', ctx=Load()), attr='startswith', ctx=Load()), args=[Tuple(elts=[Constant(value='-r'), Constant(value='--requirement'), Constant(value='-f'), Constant(value='--find-links'), Constant(value='-i'), Constant(value='--index-url'), Constant(value='--pre'), Constant(value='--trusted-host'), Constant(value='--process-dependency-links'), Constant(value='--extra-index-url'), Constant(value='--use-feature')], ctx=Load())], keywords=[])]), body=[Assign(targets=[Name(id='line', ctx=Store())], value=Call(func=Attribute(value=Name(id='line', ctx=Load()), attr='rstrip', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='line', ctx=Load()), ops=[NotIn()], comparators=[Name(id='emitted_options', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='emitted_options', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='line', ctx=Load())], keywords=[])), Expr(value=Yield(value=Name(id='line', ctx=Load())))], orelse=[]), Continue()], orelse=[]), If(test=BoolOp(op=Or(), values=[Call(func=Attribute(value=Name(id='line', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='-e')], keywords=[]), Call(func=Attribute(value=Name(id='line', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='--editable')], keywords=[])]), body=[If(test=Call(func=Attribute(value=Name(id='line', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='-e')], keywords=[]), body=[Assign(targets=[Name(id='line', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='line', ctx=Load()), slice=Slice(lower=Constant(value=2)), ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[]))], orelse=[Assign(targets=[Name(id='line', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Subscript(value=Name(id='line', ctx=Load()), slice=Slice(lower=Call(func=Name(id='len', ctx=Load()), args=[Constant(value='--editable')], keywords=[])), ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[]), attr='lstrip', ctx=Load()), args=[Constant(value='=')], keywords=[]))]), Assign(targets=[Name(id='line_req', ctx=Store())], value=Call(func=Name(id='install_req_from_editable', ctx=Load()), args=[Name(id='line', ctx=Load())], keywords=[keyword(arg='isolated', value=Name(id='isolated', ctx=Load()))]))], orelse=[Assign(targets=[Name(id='line_req', ctx=Store())], value=Call(func=Name(id='install_req_from_line', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='COMMENT_RE', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value=''), Name(id='line', ctx=Load())], keywords=[]), attr='strip', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='isolated', value=Name(id='isolated', ctx=Load()))]))]), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='line_req', ctx=Load()), attr='name', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value="Skipping line in requirement file [%s] because it's not clear what it would install: %s"), Name(id='req_file_path', ctx=Load()), Call(func=Attribute(value=Name(id='line', ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='  (add #egg=PackageName to the URL to avoid this warning)')], keywords=[]))], orelse=[Assign(targets=[Name(id='line_req_canonical_name', ctx=Store())], value=Call(func=Name(id='canonicalize_name', ctx=Load()), args=[Attribute(value=Name(id='line_req', ctx=Load()), attr='name', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='line_req_canonical_name', ctx=Load()), ops=[NotIn()], comparators=[Name(id='installations', ctx=Load())]), body=[If(test=UnaryOp(op=Not(), operand=Subscript(value=Name(id='req_files', ctx=Load()), slice=Attribute(value=Name(id='line_req', ctx=Load()), attr='name', ctx=Load()), ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[Constant(value='Requirement file [%s] contains %s, but package %r is not installed'), Name(id='req_file_path', ctx=Load()), Call(func=Attribute(value=Call(func=Attribute(value=Name(id='COMMENT_RE', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value=''), Name(id='line', ctx=Load())], keywords=[]), attr='strip', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='line_req', ctx=Load()), attr='name', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Subscript(value=Name(id='req_files', ctx=Load()), slice=Attribute(value=Name(id='line_req', ctx=Load()), attr='name', ctx=Load()), ctx=Load()), attr='append', ctx=Load()), args=[Name(id='req_file_path', ctx=Load())], keywords=[]))])], orelse=[Expr(value=Yield(value=Call(func=Attribute(value=Call(func=Name(id='str', ctx=Load()), args=[Subscript(value=Name(id='installations', ctx=Load()), slice=Name(id='line_req_canonical_name', ctx=Load()), ctx=Load())], keywords=[]), attr='rstrip', ctx=Load()), args=[], keywords=[]))), Delete(targets=[Subscript(value=Name(id='installations', ctx=Load()), slice=Name(id='line_req_canonical_name', ctx=Load()), ctx=Del())]), Expr(value=Call(func=Attribute(value=Subscript(value=Name(id='req_files', ctx=Load()), slice=Attribute(value=Name(id='line_req', ctx=Load()), attr='name', ctx=Load()), ctx=Load()), attr='append', ctx=Load()), args=[Name(id='req_file_path', ctx=Load())], keywords=[]))])])], orelse=[])])], orelse=[]), For(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='files', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='req_files', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='files', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=1)]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[Constant(value='Requirement %s included multiple times [%s]'), Name(id='name', ctx=Load()), Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[Call(func=Name(id='sorted', ctx=Load()), args=[Call(func=Name(id='set', ctx=Load()), args=[Name(id='files', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[]))], orelse=[])], orelse=[]), Expr(value=Yield(value=Constant(value='## The following requirements were added by pip freeze:')))], orelse=[]), For(target=Name(id='installation', ctx=Store()), iter=Call(func=Name(id='sorted', ctx=Load()), args=[Call(func=Attribute(value=Name(id='installations', ctx=Load()), attr='values', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='key', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Attribute(value=Name(id='x', ctx=Load()), attr='name', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])))]), body=[If(test=Compare(left=Attribute(value=Name(id='installation', ctx=Load()), attr='canonical_name', ctx=Load()), ops=[NotIn()], comparators=[Name(id='skip', ctx=Load())]), body=[Expr(value=Yield(value=Call(func=Attribute(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='installation', ctx=Load())], keywords=[]), attr='rstrip', ctx=Load()), args=[], keywords=[])))], orelse=[])], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Generator', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Constant(value=None), Constant(value=None)], ctx=Load()), ctx=Load())), FunctionDef(name='_format_as_name_version', args=arguments(posonlyargs=[], args=[arg(arg='dist', annotation=Name(id='BaseDistribution', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='dist_version', ctx=Store())], value=Attribute(value=Name(id='dist', ctx=Load()), attr='version', ctx=Load())), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='dist_version', ctx=Load()), Name(id='Version', ctx=Load())], keywords=[]), body=[Return(value=JoinedStr(values=[FormattedValue(value=Attribute(value=Name(id='dist', ctx=Load()), attr='raw_name', ctx=Load()), conversion=-1), Constant(value='=='), FormattedValue(value=Name(id='dist_version', ctx=Load()), conversion=-1)]))], orelse=[]), Return(value=JoinedStr(values=[FormattedValue(value=Attribute(value=Name(id='dist', ctx=Load()), attr='raw_name', ctx=Load()), conversion=-1), Constant(value='==='), FormattedValue(value=Name(id='dist_version', ctx=Load()), conversion=-1)]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='_get_editable_info', args=arguments(posonlyargs=[], args=[arg(arg='dist', annotation=Name(id='BaseDistribution', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Compute and return values (req, comments) for use in\n    FrozenRequirement.from_dist().\n    ')), Assign(targets=[Name(id='editable_project_location', ctx=Store())], value=Attribute(value=Name(id='dist', ctx=Load()), attr='editable_project_location', ctx=Load())), Assert(test=Name(id='editable_project_location', ctx=Load())), Assign(targets=[Name(id='location', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normcase', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='abspath', ctx=Load()), args=[Name(id='editable_project_location', ctx=Load())], keywords=[])], keywords=[])), ImportFrom(module='pip._internal.vcs', names=[alias(name='RemoteNotFoundError'), alias(name='RemoteNotValidError'), alias(name='vcs')], level=0), Assign(targets=[Name(id='vcs_backend', ctx=Store())], value=Call(func=Attribute(value=Name(id='vcs', ctx=Load()), attr='get_backend_for_dir', ctx=Load()), args=[Name(id='location', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='vcs_backend', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='display', ctx=Store())], value=Call(func=Name(id='_format_as_name_version', ctx=Load()), args=[Name(id='dist', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='No VCS found for editable requirement "%s" in: %r'), Name(id='display', ctx=Load()), Name(id='location', ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='_EditableInfo', ctx=Load()), args=[], keywords=[keyword(arg='requirement', value=Name(id='location', ctx=Load())), keyword(arg='comments', value=List(elts=[JoinedStr(values=[Constant(value='# Editable install with no version control ('), FormattedValue(value=Name(id='display', ctx=Load()), conversion=-1), Constant(value=')')])], ctx=Load()))]))], orelse=[]), Assign(targets=[Name(id='vcs_name', ctx=Store())], value=Attribute(value=Call(func=Name(id='type', ctx=Load()), args=[Name(id='vcs_backend', ctx=Load())], keywords=[]), attr='__name__', ctx=Load())), Try(body=[Assign(targets=[Name(id='req', ctx=Store())], value=Call(func=Attribute(value=Name(id='vcs_backend', ctx=Load()), attr='get_src_requirement', ctx=Load()), args=[Name(id='location', ctx=Load()), Attribute(value=Name(id='dist', ctx=Load()), attr='raw_name', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='RemoteNotFoundError', ctx=Load()), body=[Assign(targets=[Name(id='display', ctx=Store())], value=Call(func=Name(id='_format_as_name_version', ctx=Load()), args=[Name(id='dist', ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='_EditableInfo', ctx=Load()), args=[], keywords=[keyword(arg='requirement', value=Name(id='location', ctx=Load())), keyword(arg='comments', value=List(elts=[JoinedStr(values=[Constant(value='# Editable '), FormattedValue(value=Name(id='vcs_name', ctx=Load()), conversion=-1), Constant(value=' install with no remote ('), FormattedValue(value=Name(id='display', ctx=Load()), conversion=-1), Constant(value=')')])], ctx=Load()))]))]), ExceptHandler(type=Name(id='RemoteNotValidError', ctx=Load()), name='ex', body=[Assign(targets=[Name(id='display', ctx=Store())], value=Call(func=Name(id='_format_as_name_version', ctx=Load()), args=[Name(id='dist', ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='_EditableInfo', ctx=Load()), args=[], keywords=[keyword(arg='requirement', value=Name(id='location', ctx=Load())), keyword(arg='comments', value=List(elts=[JoinedStr(values=[Constant(value='# Editable '), FormattedValue(value=Name(id='vcs_name', ctx=Load()), conversion=-1), Constant(value=' install ('), FormattedValue(value=Name(id='display', ctx=Load()), conversion=-1), Constant(value=') with either a deleted local remote or invalid URI:')]), JoinedStr(values=[Constant(value="# '"), FormattedValue(value=Attribute(value=Name(id='ex', ctx=Load()), attr='url', ctx=Load()), conversion=-1), Constant(value="'")])], ctx=Load()))]))]), ExceptHandler(type=Name(id='BadCommand', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[Constant(value='cannot determine version of editable source in %s (%s command not found in path)'), Name(id='location', ctx=Load()), Attribute(value=Name(id='vcs_backend', ctx=Load()), attr='name', ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='_EditableInfo', ctx=Load()), args=[], keywords=[keyword(arg='requirement', value=Name(id='location', ctx=Load())), keyword(arg='comments', value=List(elts=[], ctx=Load()))]))]), ExceptHandler(type=Name(id='InstallationError', ctx=Load()), name='exc', body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[Constant(value='Error when trying to get requirement for VCS system %s'), Name(id='exc', ctx=Load())], keywords=[]))])], orelse=[Return(value=Call(func=Name(id='_EditableInfo', ctx=Load()), args=[], keywords=[keyword(arg='requirement', value=Name(id='req', ctx=Load())), keyword(arg='comments', value=List(elts=[], ctx=Load()))]))], finalbody=[]), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[Constant(value='Could not determine repository location of %s'), Name(id='location', ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='_EditableInfo', ctx=Load()), args=[], keywords=[keyword(arg='requirement', value=Name(id='location', ctx=Load())), keyword(arg='comments', value=List(elts=[Constant(value='## !! Could not determine repository location')], ctx=Load()))]))], decorator_list=[], returns=Name(id='_EditableInfo', ctx=Load())), ClassDef(name='FrozenRequirement', bases=[], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name', annotation=Name(id='str', ctx=Load())), arg(arg='req', annotation=Name(id='str', ctx=Load())), arg(arg='editable', annotation=Name(id='bool', ctx=Load())), arg(arg='comments', annotation=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Tuple(elts=[], ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store())], value=Name(id='name', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='canonical_name', ctx=Store())], value=Call(func=Name(id='canonicalize_name', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='req', ctx=Store())], value=Name(id='req', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='editable', ctx=Store())], value=Name(id='editable', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='comments', ctx=Store())], value=Name(id='comments', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='from_dist', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='dist', annotation=Name(id='BaseDistribution', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='editable', ctx=Store())], value=Attribute(value=Name(id='dist', ctx=Load()), attr='editable', ctx=Load())), If(test=Name(id='editable', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='req', ctx=Store()), Name(id='comments', ctx=Store())], ctx=Store())], value=Call(func=Name(id='_get_editable_info', ctx=Load()), args=[Name(id='dist', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='comments', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='direct_url', ctx=Store())], value=Attribute(value=Name(id='dist', ctx=Load()), attr='direct_url', ctx=Load())), If(test=Name(id='direct_url', ctx=Load()), body=[Assign(targets=[Name(id='req', ctx=Store())], value=Call(func=Name(id='direct_url_as_pep440_direct_reference', ctx=Load()), args=[Name(id='direct_url', ctx=Load()), Attribute(value=Name(id='dist', ctx=Load()), attr='raw_name', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='req', ctx=Store())], value=Call(func=Name(id='_format_as_name_version', ctx=Load()), args=[Name(id='dist', ctx=Load())], keywords=[]))])]), Return(value=Call(func=Name(id='cls', ctx=Load()), args=[Attribute(value=Name(id='dist', ctx=Load()), attr='raw_name', ctx=Load()), Name(id='req', ctx=Load()), Name(id='editable', ctx=Load())], keywords=[keyword(arg='comments', value=Name(id='comments', ctx=Load()))]))], decorator_list=[Name(id='classmethod', ctx=Load())], returns=Constant(value='FrozenRequirement')), FunctionDef(name='__str__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='req', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='req', ctx=Load())), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='editable', ctx=Load()), body=[Assign(targets=[Name(id='req', ctx=Store())], value=JoinedStr(values=[Constant(value='-e '), FormattedValue(value=Name(id='req', ctx=Load()), conversion=-1)]))], orelse=[]), Return(value=BinOp(left=Call(func=Attribute(value=Constant(value='\n'), attr='join', ctx=Load()), args=[BinOp(left=Call(func=Name(id='list', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='comments', ctx=Load())], keywords=[]), op=Add(), right=List(elts=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='req', ctx=Load())], keywords=[])], ctx=Load()))], keywords=[]), op=Add(), right=Constant(value='\n')))], decorator_list=[], returns=Name(id='str', ctx=Load()))], decorator_list=[])], type_ignores=[])