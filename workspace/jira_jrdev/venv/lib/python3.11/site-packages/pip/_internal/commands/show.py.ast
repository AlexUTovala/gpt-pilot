Module(body=[Import(names=[alias(name='logging')]), ImportFrom(module='optparse', names=[alias(name='Values')], level=0), ImportFrom(module='typing', names=[alias(name='Generator'), alias(name='Iterable'), alias(name='Iterator'), alias(name='List'), alias(name='NamedTuple'), alias(name='Optional')], level=0), ImportFrom(module='pip._vendor.packaging.utils', names=[alias(name='canonicalize_name')], level=0), ImportFrom(module='pip._internal.cli.base_command', names=[alias(name='Command')], level=0), ImportFrom(module='pip._internal.cli.status_codes', names=[alias(name='ERROR'), alias(name='SUCCESS')], level=0), ImportFrom(module='pip._internal.metadata', names=[alias(name='BaseDistribution'), alias(name='get_default_environment')], level=0), ImportFrom(module='pip._internal.utils.misc', names=[alias(name='write_output')], level=0), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Name(id='__name__', ctx=Load())], keywords=[])), ClassDef(name='ShowCommand', bases=[Name(id='Command', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    Show information about one or more installed packages.\n\n    The output is in RFC-compliant mail header format.\n    ')), Assign(targets=[Name(id='usage', ctx=Store())], value=Constant(value='\n      %prog [options] <package> ...')), Assign(targets=[Name(id='ignore_require_venv', ctx=Store())], value=Constant(value=True)), FunctionDef(name='add_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cmd_opts', ctx=Load()), attr='add_option', ctx=Load()), args=[Constant(value='-f'), Constant(value='--files')], keywords=[keyword(arg='dest', value=Constant(value='files')), keyword(arg='action', value=Constant(value='store_true')), keyword(arg='default', value=Constant(value=False)), keyword(arg='help', value=Constant(value='Show the full list of installed files for each package.'))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='parser', ctx=Load()), attr='insert_option_group', ctx=Load()), args=[Constant(value=0), Attribute(value=Name(id='self', ctx=Load()), attr='cmd_opts', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='options', annotation=Name(id='Values', ctx=Load())), arg(arg='args', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Name(id='args', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[Constant(value='ERROR: Please provide a package name or names.')], keywords=[])), Return(value=Name(id='ERROR', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='query', ctx=Store())], value=Name(id='args', ctx=Load())), Assign(targets=[Name(id='results', ctx=Store())], value=Call(func=Name(id='search_packages_info', ctx=Load()), args=[Name(id='query', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='print_results', ctx=Load()), args=[Name(id='results', ctx=Load())], keywords=[keyword(arg='list_files', value=Attribute(value=Name(id='options', ctx=Load()), attr='files', ctx=Load())), keyword(arg='verbose', value=Attribute(value=Name(id='options', ctx=Load()), attr='verbose', ctx=Load()))])), body=[Return(value=Name(id='ERROR', ctx=Load()))], orelse=[]), Return(value=Name(id='SUCCESS', ctx=Load()))], decorator_list=[], returns=Name(id='int', ctx=Load()))], decorator_list=[]), ClassDef(name='_PackageInfo', bases=[Name(id='NamedTuple', ctx=Load())], keywords=[], body=[AnnAssign(target=Name(id='name', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1), AnnAssign(target=Name(id='version', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1), AnnAssign(target=Name(id='location', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1), AnnAssign(target=Name(id='editable_project_location', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), simple=1), AnnAssign(target=Name(id='requires', ctx=Store()), annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), simple=1), AnnAssign(target=Name(id='required_by', ctx=Store()), annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), simple=1), AnnAssign(target=Name(id='installer', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1), AnnAssign(target=Name(id='metadata_version', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1), AnnAssign(target=Name(id='classifiers', ctx=Store()), annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), simple=1), AnnAssign(target=Name(id='summary', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1), AnnAssign(target=Name(id='homepage', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1), AnnAssign(target=Name(id='project_urls', ctx=Store()), annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), simple=1), AnnAssign(target=Name(id='author', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1), AnnAssign(target=Name(id='author_email', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1), AnnAssign(target=Name(id='license', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1), AnnAssign(target=Name(id='entry_points', ctx=Store()), annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), simple=1), AnnAssign(target=Name(id='files', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), ctx=Load()), simple=1)], decorator_list=[]), FunctionDef(name='search_packages_info', args=arguments(posonlyargs=[], args=[arg(arg='query', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n    Gather details from installed distributions. Print distribution name,\n    version, location, and installed files. Installed files requires a\n    pip generated 'installed-files.txt' in the distributions '.egg-info'\n    directory.\n    ")), Assign(targets=[Name(id='env', ctx=Store())], value=Call(func=Name(id='get_default_environment', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='installed', ctx=Store())], value=DictComp(key=Attribute(value=Name(id='dist', ctx=Load()), attr='canonical_name', ctx=Load()), value=Name(id='dist', ctx=Load()), generators=[comprehension(target=Name(id='dist', ctx=Store()), iter=Call(func=Attribute(value=Name(id='env', ctx=Load()), attr='iter_all_distributions', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])), Assign(targets=[Name(id='query_names', ctx=Store())], value=ListComp(elt=Call(func=Name(id='canonicalize_name', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='name', ctx=Store()), iter=Name(id='query', ctx=Load()), ifs=[], is_async=0)])), Assign(targets=[Name(id='missing', ctx=Store())], value=Call(func=Name(id='sorted', ctx=Load()), args=[ListComp(elt=Name(id='name', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='pkg', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='zip', ctx=Load()), args=[Name(id='query', ctx=Load()), Name(id='query_names', ctx=Load())], keywords=[]), ifs=[Compare(left=Name(id='pkg', ctx=Load()), ops=[NotIn()], comparators=[Name(id='installed', ctx=Load())])], is_async=0)])], keywords=[])), If(test=Name(id='missing', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[Constant(value='Package(s) not found: %s'), Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[Name(id='missing', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), FunctionDef(name='_get_requiring_packages', args=arguments(posonlyargs=[], args=[arg(arg='current_dist', annotation=Name(id='BaseDistribution', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=GeneratorExp(elt=BoolOp(op=Or(), values=[Subscript(value=Attribute(value=Name(id='dist', ctx=Load()), attr='metadata', ctx=Load()), slice=Constant(value='Name'), ctx=Load()), Constant(value='UNKNOWN')]), generators=[comprehension(target=Name(id='dist', ctx=Store()), iter=Call(func=Attribute(value=Name(id='installed', ctx=Load()), attr='values', ctx=Load()), args=[], keywords=[]), ifs=[Compare(left=Attribute(value=Name(id='current_dist', ctx=Load()), attr='canonical_name', ctx=Load()), ops=[In()], comparators=[SetComp(elt=Call(func=Name(id='canonicalize_name', ctx=Load()), args=[Attribute(value=Name(id='d', ctx=Load()), attr='name', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='d', ctx=Store()), iter=Call(func=Attribute(value=Name(id='dist', ctx=Load()), attr='iter_dependencies', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])])], is_async=0)]))], decorator_list=[], returns=Subscript(value=Name(id='Iterator', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), For(target=Name(id='query_name', ctx=Store()), iter=Name(id='query_names', ctx=Load()), body=[Try(body=[Assign(targets=[Name(id='dist', ctx=Store())], value=Subscript(value=Name(id='installed', ctx=Load()), slice=Name(id='query_name', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Continue()])], orelse=[], finalbody=[]), Assign(targets=[Name(id='requires', ctx=Store())], value=Call(func=Name(id='sorted', ctx=Load()), args=[GeneratorExp(elt=Attribute(value=Name(id='req', ctx=Load()), attr='name', ctx=Load()), generators=[comprehension(target=Name(id='req', ctx=Store()), iter=Call(func=Attribute(value=Name(id='dist', ctx=Load()), attr='iter_dependencies', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])], keywords=[keyword(arg='key', value=Attribute(value=Name(id='str', ctx=Load()), attr='lower', ctx=Load()))])), Assign(targets=[Name(id='required_by', ctx=Store())], value=Call(func=Name(id='sorted', ctx=Load()), args=[Call(func=Name(id='_get_requiring_packages', ctx=Load()), args=[Name(id='dist', ctx=Load())], keywords=[])], keywords=[keyword(arg='key', value=Attribute(value=Name(id='str', ctx=Load()), attr='lower', ctx=Load()))])), Try(body=[Assign(targets=[Name(id='entry_points_text', ctx=Store())], value=Call(func=Attribute(value=Name(id='dist', ctx=Load()), attr='read_text', ctx=Load()), args=[Constant(value='entry_points.txt')], keywords=[])), Assign(targets=[Name(id='entry_points', ctx=Store())], value=Call(func=Attribute(value=Name(id='entry_points_text', ctx=Load()), attr='splitlines', ctx=Load()), args=[], keywords=[keyword(arg='keepends', value=Constant(value=False))]))], handlers=[ExceptHandler(type=Name(id='FileNotFoundError', ctx=Load()), body=[Assign(targets=[Name(id='entry_points', ctx=Store())], value=List(elts=[], ctx=Load()))])], orelse=[], finalbody=[]), Assign(targets=[Name(id='files_iter', ctx=Store())], value=Call(func=Attribute(value=Name(id='dist', ctx=Load()), attr='iter_declared_entries', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='files_iter', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[AnnAssign(target=Name(id='files', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), ctx=Load()), value=Constant(value=None), simple=1)], orelse=[Assign(targets=[Name(id='files', ctx=Store())], value=Call(func=Name(id='sorted', ctx=Load()), args=[Name(id='files_iter', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='metadata', ctx=Store())], value=Attribute(value=Name(id='dist', ctx=Load()), attr='metadata', ctx=Load())), Expr(value=Yield(value=Call(func=Name(id='_PackageInfo', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Attribute(value=Name(id='dist', ctx=Load()), attr='raw_name', ctx=Load())), keyword(arg='version', value=Call(func=Name(id='str', ctx=Load()), args=[Attribute(value=Name(id='dist', ctx=Load()), attr='version', ctx=Load())], keywords=[])), keyword(arg='location', value=BoolOp(op=Or(), values=[Attribute(value=Name(id='dist', ctx=Load()), attr='location', ctx=Load()), Constant(value='')])), keyword(arg='editable_project_location', value=Attribute(value=Name(id='dist', ctx=Load()), attr='editable_project_location', ctx=Load())), keyword(arg='requires', value=Name(id='requires', ctx=Load())), keyword(arg='required_by', value=Name(id='required_by', ctx=Load())), keyword(arg='installer', value=Attribute(value=Name(id='dist', ctx=Load()), attr='installer', ctx=Load())), keyword(arg='metadata_version', value=BoolOp(op=Or(), values=[Attribute(value=Name(id='dist', ctx=Load()), attr='metadata_version', ctx=Load()), Constant(value='')])), keyword(arg='classifiers', value=Call(func=Attribute(value=Name(id='metadata', ctx=Load()), attr='get_all', ctx=Load()), args=[Constant(value='Classifier'), List(elts=[], ctx=Load())], keywords=[])), keyword(arg='summary', value=Call(func=Attribute(value=Name(id='metadata', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='Summary'), Constant(value='')], keywords=[])), keyword(arg='homepage', value=Call(func=Attribute(value=Name(id='metadata', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='Home-page'), Constant(value='')], keywords=[])), keyword(arg='project_urls', value=Call(func=Attribute(value=Name(id='metadata', ctx=Load()), attr='get_all', ctx=Load()), args=[Constant(value='Project-URL'), List(elts=[], ctx=Load())], keywords=[])), keyword(arg='author', value=Call(func=Attribute(value=Name(id='metadata', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='Author'), Constant(value='')], keywords=[])), keyword(arg='author_email', value=Call(func=Attribute(value=Name(id='metadata', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='Author-email'), Constant(value='')], keywords=[])), keyword(arg='license', value=Call(func=Attribute(value=Name(id='metadata', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='License'), Constant(value='')], keywords=[])), keyword(arg='entry_points', value=Name(id='entry_points', ctx=Load())), keyword(arg='files', value=Name(id='files', ctx=Load()))])))], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Generator', ctx=Load()), slice=Tuple(elts=[Name(id='_PackageInfo', ctx=Load()), Constant(value=None), Constant(value=None)], ctx=Load()), ctx=Load())), FunctionDef(name='print_results', args=arguments(posonlyargs=[], args=[arg(arg='distributions', annotation=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='_PackageInfo', ctx=Load()), ctx=Load())), arg(arg='list_files', annotation=Name(id='bool', ctx=Load())), arg(arg='verbose', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Print the information from installed distributions found.\n    ')), Assign(targets=[Name(id='results_printed', ctx=Store())], value=Constant(value=False)), For(target=Tuple(elts=[Name(id='i', ctx=Store()), Name(id='dist', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='distributions', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='results_printed', ctx=Store())], value=Constant(value=True)), If(test=Compare(left=Name(id='i', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), body=[Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='---')], keywords=[]))], orelse=[]), Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='Name: %s'), Attribute(value=Name(id='dist', ctx=Load()), attr='name', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='Version: %s'), Attribute(value=Name(id='dist', ctx=Load()), attr='version', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='Summary: %s'), Attribute(value=Name(id='dist', ctx=Load()), attr='summary', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='Home-page: %s'), Attribute(value=Name(id='dist', ctx=Load()), attr='homepage', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='Author: %s'), Attribute(value=Name(id='dist', ctx=Load()), attr='author', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='Author-email: %s'), Attribute(value=Name(id='dist', ctx=Load()), attr='author_email', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='License: %s'), Attribute(value=Name(id='dist', ctx=Load()), attr='license', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='Location: %s'), Attribute(value=Name(id='dist', ctx=Load()), attr='location', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='dist', ctx=Load()), attr='editable_project_location', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='Editable project location: %s'), Attribute(value=Name(id='dist', ctx=Load()), attr='editable_project_location', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='Requires: %s'), Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[Attribute(value=Name(id='dist', ctx=Load()), attr='requires', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='Required-by: %s'), Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[Attribute(value=Name(id='dist', ctx=Load()), attr='required_by', ctx=Load())], keywords=[])], keywords=[])), If(test=Name(id='verbose', ctx=Load()), body=[Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='Metadata-Version: %s'), Attribute(value=Name(id='dist', ctx=Load()), attr='metadata_version', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='Installer: %s'), Attribute(value=Name(id='dist', ctx=Load()), attr='installer', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='Classifiers:')], keywords=[])), For(target=Name(id='classifier', ctx=Store()), iter=Attribute(value=Name(id='dist', ctx=Load()), attr='classifiers', ctx=Load()), body=[Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='  %s'), Name(id='classifier', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='Entry-points:')], keywords=[])), For(target=Name(id='entry', ctx=Store()), iter=Attribute(value=Name(id='dist', ctx=Load()), attr='entry_points', ctx=Load()), body=[Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='  %s'), Call(func=Attribute(value=Name(id='entry', ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='Project-URLs:')], keywords=[])), For(target=Name(id='project_url', ctx=Store()), iter=Attribute(value=Name(id='dist', ctx=Load()), attr='project_urls', ctx=Load()), body=[Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='  %s'), Name(id='project_url', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), If(test=Name(id='list_files', ctx=Load()), body=[Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='Files:')], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='dist', ctx=Load()), attr='files', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='Cannot locate RECORD or installed-files.txt')], keywords=[]))], orelse=[For(target=Name(id='line', ctx=Store()), iter=Attribute(value=Name(id='dist', ctx=Load()), attr='files', ctx=Load()), body=[Expr(value=Call(func=Name(id='write_output', ctx=Load()), args=[Constant(value='  %s'), Call(func=Attribute(value=Name(id='line', ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[])])], orelse=[])], orelse=[]), Return(value=Name(id='results_printed', ctx=Load()))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], type_ignores=[])