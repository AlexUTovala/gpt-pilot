Module(body=[Expr(value=Constant(value='Metadata generation logic for legacy source distributions.\n')), Import(names=[alias(name='logging')]), Import(names=[alias(name='os')]), ImportFrom(module='pip._internal.build_env', names=[alias(name='BuildEnvironment')], level=0), ImportFrom(module='pip._internal.cli.spinners', names=[alias(name='open_spinner')], level=0), ImportFrom(module='pip._internal.exceptions', names=[alias(name='InstallationError'), alias(name='InstallationSubprocessError'), alias(name='MetadataGenerationFailed')], level=0), ImportFrom(module='pip._internal.utils.setuptools_build', names=[alias(name='make_setuptools_egg_info_args')], level=0), ImportFrom(module='pip._internal.utils.subprocess', names=[alias(name='call_subprocess')], level=0), ImportFrom(module='pip._internal.utils.temp_dir', names=[alias(name='TempDirectory')], level=0), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Name(id='__name__', ctx=Load())], keywords=[])), FunctionDef(name='_find_egg_info', args=arguments(posonlyargs=[], args=[arg(arg='directory', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Find an .egg-info subdirectory in `directory`.')), Assign(targets=[Name(id='filenames', ctx=Store())], value=ListComp(elt=Name(id='f', ctx=Load()), generators=[comprehension(target=Name(id='f', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='directory', ctx=Load())], keywords=[]), ifs=[Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.egg-info')], keywords=[])], is_async=0)])), If(test=UnaryOp(op=Not(), operand=Name(id='filenames', ctx=Load())), body=[Raise(exc=Call(func=Name(id='InstallationError', ctx=Load()), args=[JoinedStr(values=[Constant(value='No .egg-info directory found in '), FormattedValue(value=Name(id='directory', ctx=Load()), conversion=-1)])], keywords=[]))], orelse=[]), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='filenames', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=1)]), body=[Raise(exc=Call(func=Name(id='InstallationError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='More than one .egg-info directory found in {}'), attr='format', ctx=Load()), args=[Name(id='directory', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='directory', ctx=Load()), Subscript(value=Name(id='filenames', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='generate_metadata', args=arguments(posonlyargs=[], args=[arg(arg='build_env', annotation=Name(id='BuildEnvironment', ctx=Load())), arg(arg='setup_py_path', annotation=Name(id='str', ctx=Load())), arg(arg='source_dir', annotation=Name(id='str', ctx=Load())), arg(arg='isolated', annotation=Name(id='bool', ctx=Load())), arg(arg='details', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Generate metadata using setup.py-based defacto mechanisms.\n\n    Returns the generated metadata directory.\n    ')), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Running setup.py (path:%s) egg_info for package %s'), Name(id='setup_py_path', ctx=Load()), Name(id='details', ctx=Load())], keywords=[])), Assign(targets=[Name(id='egg_info_dir', ctx=Store())], value=Attribute(value=Call(func=Name(id='TempDirectory', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='pip-egg-info')), keyword(arg='globally_managed', value=Constant(value=True))]), attr='path', ctx=Load())), Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Name(id='make_setuptools_egg_info_args', ctx=Load()), args=[Name(id='setup_py_path', ctx=Load())], keywords=[keyword(arg='egg_info_dir', value=Name(id='egg_info_dir', ctx=Load())), keyword(arg='no_user_config', value=Name(id='isolated', ctx=Load()))])), With(items=[withitem(context_expr=Name(id='build_env', ctx=Load()))], body=[With(items=[withitem(context_expr=Call(func=Name(id='open_spinner', ctx=Load()), args=[Constant(value='Preparing metadata (setup.py)')], keywords=[]), optional_vars=Name(id='spinner', ctx=Store()))], body=[Try(body=[Expr(value=Call(func=Name(id='call_subprocess', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[keyword(arg='cwd', value=Name(id='source_dir', ctx=Load())), keyword(arg='command_desc', value=Constant(value='python setup.py egg_info')), keyword(arg='spinner', value=Name(id='spinner', ctx=Load()))]))], handlers=[ExceptHandler(type=Name(id='InstallationSubprocessError', ctx=Load()), name='error', body=[Raise(exc=Call(func=Name(id='MetadataGenerationFailed', ctx=Load()), args=[], keywords=[keyword(arg='package_details', value=Name(id='details', ctx=Load()))]), cause=Name(id='error', ctx=Load()))])], orelse=[], finalbody=[])])]), Return(value=Call(func=Name(id='_find_egg_info', ctx=Load()), args=[Name(id='egg_info_dir', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='str', ctx=Load()))], type_ignores=[])