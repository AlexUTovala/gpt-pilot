Module(body=[Import(names=[alias(name='contextlib')]), Import(names=[alias(name='hashlib')]), Import(names=[alias(name='logging')]), Import(names=[alias(name='os')]), ImportFrom(module='types', names=[alias(name='TracebackType')], level=0), ImportFrom(module='typing', names=[alias(name='Dict'), alias(name='Generator'), alias(name='Optional'), alias(name='Set'), alias(name='Type'), alias(name='Union')], level=0), ImportFrom(module='pip._internal.models.link', names=[alias(name='Link')], level=0), ImportFrom(module='pip._internal.req.req_install', names=[alias(name='InstallRequirement')], level=0), ImportFrom(module='pip._internal.utils.temp_dir', names=[alias(name='TempDirectory')], level=0), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Name(id='__name__', ctx=Load())], keywords=[])), FunctionDef(name='update_env_context_manager', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='changes', annotation=Name(id='str', ctx=Load())), defaults=[]), body=[Assign(targets=[Name(id='target', ctx=Store())], value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load())), Assign(targets=[Name(id='non_existent_marker', ctx=Store())], value=Call(func=Name(id='object', ctx=Load()), args=[], keywords=[])), AnnAssign(target=Name(id='saved_values', ctx=Store()), annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='object', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()), value=Dict(keys=[], values=[]), simple=1), For(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='new_value', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='changes', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Try(body=[Assign(targets=[Subscript(value=Name(id='saved_values', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Store())], value=Subscript(value=Name(id='target', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='saved_values', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Store())], value=Name(id='non_existent_marker', ctx=Load()))])], orelse=[], finalbody=[]), Assign(targets=[Subscript(value=Name(id='target', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Store())], value=Name(id='new_value', ctx=Load()))], orelse=[]), Try(body=[Expr(value=Yield())], handlers=[], orelse=[], finalbody=[For(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='original_value', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='saved_values', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Compare(left=Name(id='original_value', ctx=Load()), ops=[Is()], comparators=[Name(id='non_existent_marker', ctx=Load())]), body=[Delete(targets=[Subscript(value=Name(id='target', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Del())])], orelse=[Assert(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='original_value', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='target', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Store())], value=Name(id='original_value', ctx=Load()))])], orelse=[])])], decorator_list=[Attribute(value=Name(id='contextlib', ctx=Load()), attr='contextmanager', ctx=Load())], returns=Subscript(value=Name(id='Generator', ctx=Load()), slice=Tuple(elts=[Constant(value=None), Constant(value=None), Constant(value=None)], ctx=Load()), ctx=Load())), FunctionDef(name='get_build_tracker', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='root', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='PIP_BUILD_TRACKER')], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='contextlib', ctx=Load()), attr='ExitStack', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='ctx', ctx=Store()))], body=[If(test=Compare(left=Name(id='root', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='root', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='enter_context', ctx=Load()), args=[Call(func=Name(id='TempDirectory', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='build-tracker'))])], keywords=[]), attr='path', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='enter_context', ctx=Load()), args=[Call(func=Name(id='update_env_context_manager', ctx=Load()), args=[], keywords=[keyword(arg='PIP_BUILD_TRACKER', value=Name(id='root', ctx=Load()))])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Initialized build tracking at %s'), Name(id='root', ctx=Load())], keywords=[]))], orelse=[]), With(items=[withitem(context_expr=Call(func=Name(id='BuildTracker', ctx=Load()), args=[Name(id='root', ctx=Load())], keywords=[]), optional_vars=Name(id='tracker', ctx=Store()))], body=[Expr(value=Yield(value=Name(id='tracker', ctx=Load())))])])], decorator_list=[Attribute(value=Name(id='contextlib', ctx=Load()), attr='contextmanager', ctx=Load())], returns=Subscript(value=Name(id='Generator', ctx=Load()), slice=Tuple(elts=[Constant(value='BuildTracker'), Constant(value=None), Constant(value=None)], ctx=Load()), ctx=Load())), ClassDef(name='TrackerId', bases=[Name(id='str', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Uniquely identifying string provided to the build tracker.'))], decorator_list=[]), ClassDef(name='BuildTracker', bases=[], keywords=[], body=[Expr(value=Constant(value='Ensure that an sdist cannot request itself as a setup requirement.\n\n    When an sdist is prepared, it identifies its setup requirements in the\n    context of ``BuildTracker.track()``. If a requirement shows up recursively, this\n    raises an exception.\n\n    This stops fork bombs embedded in malicious packages.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='root', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_root', ctx=Store())], value=Name(id='root', ctx=Load())), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_entries', ctx=Store()), annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='TrackerId', ctx=Load()), Name(id='InstallRequirement', ctx=Load())], ctx=Load()), ctx=Load()), value=Dict(keys=[], values=[]), simple=0), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Created build tracker: %s'), Attribute(value=Name(id='self', ctx=Load()), attr='_root', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Entered build tracker: %s'), Attribute(value=Name(id='self', ctx=Load()), attr='_root', ctx=Load())], keywords=[])), Return(value=Name(id='self', ctx=Load()))], decorator_list=[], returns=Constant(value='BuildTracker')), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exc_type', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='Type', ctx=Load()), slice=Name(id='BaseException', ctx=Load()), ctx=Load()), ctx=Load())), arg(arg='exc_val', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='BaseException', ctx=Load()), ctx=Load())), arg(arg='exc_tb', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='TracebackType', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='cleanup', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_entry_path', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key', annotation=Name(id='TrackerId', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='hashed', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='hashlib', ctx=Load()), attr='sha224', ctx=Load()), args=[Call(func=Attribute(value=Name(id='key', ctx=Load()), attr='encode', ctx=Load()), args=[], keywords=[])], keywords=[]), attr='hexdigest', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_root', ctx=Load()), Name(id='hashed', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='add', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='req', annotation=Name(id='InstallRequirement', ctx=Load())), arg(arg='key', annotation=Name(id='TrackerId', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Add an InstallRequirement to build tracking.')), Assign(targets=[Name(id='entry_path', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_entry_path', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[])), Try(body=[With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='entry_path', ctx=Load())], keywords=[]), optional_vars=Name(id='fp', ctx=Store()))], body=[Assign(targets=[Name(id='contents', ctx=Store())], value=Call(func=Attribute(value=Name(id='fp', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]))])], handlers=[ExceptHandler(type=Name(id='FileNotFoundError', ctx=Load()), body=[Pass()])], orelse=[Assign(targets=[Name(id='message', ctx=Store())], value=Call(func=Attribute(value=Constant(value='{} is already being built: {}'), attr='format', ctx=Load()), args=[Attribute(value=Name(id='req', ctx=Load()), attr='link', ctx=Load()), Name(id='contents', ctx=Load())], keywords=[])), Raise(exc=Call(func=Name(id='LookupError', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[]))], finalbody=[]), Assert(test=Compare(left=Name(id='key', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_entries', ctx=Load())])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='entry_path', ctx=Load()), Constant(value='w')], keywords=[keyword(arg='encoding', value=Constant(value='utf-8'))]), optional_vars=Name(id='fp', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='fp', ctx=Load()), attr='write', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='req', ctx=Load())], keywords=[])], keywords=[]))]), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_entries', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store())], value=Name(id='req', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Added %s to build tracker %r'), Name(id='req', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_root', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='remove', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='req', annotation=Name(id='InstallRequirement', ctx=Load())), arg(arg='key', annotation=Name(id='TrackerId', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Remove an InstallRequirement from build tracking.')), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='unlink', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_entry_path', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[])], keywords=[])), Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_entries', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Del())]), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Removed %s from build tracker %r'), Name(id='req', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_root', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='cleanup', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Tuple(elts=[Name(id='key', ctx=Store()), Name(id='req', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_entries', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[])], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='req', ctx=Load()), Name(id='key', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Removed build tracker: %r'), Attribute(value=Name(id='self', ctx=Load()), attr='_root', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='track', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='req', annotation=Name(id='InstallRequirement', ctx=Load())), arg(arg='key', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Ensure that `key` cannot install itself as a setup requirement.\n\n        :raises LookupError: If `key` was already provided in a parent invocation of\n                             the context introduced by this method.')), Assign(targets=[Name(id='tracker_id', ctx=Store())], value=Call(func=Name(id='TrackerId', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='req', ctx=Load()), Name(id='tracker_id', ctx=Load())], keywords=[])), Expr(value=Yield()), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='req', ctx=Load()), Name(id='tracker_id', ctx=Load())], keywords=[]))], decorator_list=[Attribute(value=Name(id='contextlib', ctx=Load()), attr='contextmanager', ctx=Load())], returns=Subscript(value=Name(id='Generator', ctx=Load()), slice=Tuple(elts=[Constant(value=None), Constant(value=None), Constant(value=None)], ctx=Load()), ctx=Load()))], decorator_list=[])], type_ignores=[])