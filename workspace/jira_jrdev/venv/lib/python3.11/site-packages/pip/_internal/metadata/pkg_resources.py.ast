Module(body=[Import(names=[alias(name='email.message')]), Import(names=[alias(name='email.parser')]), Import(names=[alias(name='logging')]), Import(names=[alias(name='os')]), Import(names=[alias(name='zipfile')]), ImportFrom(module='typing', names=[alias(name='Collection'), alias(name='Iterable'), alias(name='Iterator'), alias(name='List'), alias(name='Mapping'), alias(name='NamedTuple'), alias(name='Optional')], level=0), ImportFrom(module='pip._vendor', names=[alias(name='pkg_resources')], level=0), ImportFrom(module='pip._vendor.packaging.requirements', names=[alias(name='Requirement')], level=0), ImportFrom(module='pip._vendor.packaging.utils', names=[alias(name='NormalizedName'), alias(name='canonicalize_name')], level=0), ImportFrom(module='pip._vendor.packaging.version', names=[alias(name='parse', asname='parse_version')], level=0), ImportFrom(module='pip._internal.exceptions', names=[alias(name='InvalidWheel'), alias(name='NoneMetadataError'), alias(name='UnsupportedWheel')], level=0), ImportFrom(module='pip._internal.utils.egg_link', names=[alias(name='egg_link_path_from_location')], level=0), ImportFrom(module='pip._internal.utils.misc', names=[alias(name='display_path'), alias(name='normalize_path')], level=0), ImportFrom(module='pip._internal.utils.wheel', names=[alias(name='parse_wheel'), alias(name='read_wheel_metadata_file')], level=0), ImportFrom(module='base', names=[alias(name='BaseDistribution'), alias(name='BaseEntryPoint'), alias(name='BaseEnvironment'), alias(name='DistributionVersion'), alias(name='InfoPath'), alias(name='Wheel')], level=1), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='NAME'), Constant(value='Distribution'), Constant(value='Environment')], ctx=Load())), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Name(id='__name__', ctx=Load())], keywords=[])), Assign(targets=[Name(id='NAME', ctx=Store())], value=Constant(value='pkg_resources')), ClassDef(name='EntryPoint', bases=[Name(id='NamedTuple', ctx=Load())], keywords=[], body=[AnnAssign(target=Name(id='name', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1), AnnAssign(target=Name(id='value', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1), AnnAssign(target=Name(id='group', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1)], decorator_list=[]), ClassDef(name='InMemoryMetadata', bases=[], keywords=[], body=[Expr(value=Constant(value='IMetadataProvider that reads metadata files from a dictionary.\n\n    This also maps metadata decoding exceptions to our internal exception type.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='metadata', annotation=Subscript(value=Name(id='Mapping', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='bytes', ctx=Load())], ctx=Load()), ctx=Load())), arg(arg='wheel_name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_metadata', ctx=Store())], value=Name(id='metadata', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_wheel_name', ctx=Store())], value=Name(id='wheel_name', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='has_metadata', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Name(id='name', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_metadata', ctx=Load())]))], decorator_list=[], returns=Name(id='bool', ctx=Load())), FunctionDef(name='get_metadata', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_metadata', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Load()), attr='decode', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Name(id='UnicodeDecodeError', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='UnsupportedWheel', ctx=Load()), args=[JoinedStr(values=[Constant(value='Error decoding metadata for '), FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='_wheel_name', ctx=Load()), conversion=-1), Constant(value=': '), FormattedValue(value=Name(id='e', ctx=Load()), conversion=-1), Constant(value=' in '), FormattedValue(value=Name(id='name', ctx=Load()), conversion=-1), Constant(value=' file')])], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='get_metadata_lines', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='pkg_resources', ctx=Load()), attr='yield_lines', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_metadata', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='metadata_isdir', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=False))], decorator_list=[], returns=Name(id='bool', ctx=Load())), FunctionDef(name='metadata_listdir', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=List(elts=[], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='run_script', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='script_name', annotation=Name(id='str', ctx=Load())), arg(arg='namespace', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None))], decorator_list=[]), ClassDef(name='Distribution', bases=[Name(id='BaseDistribution', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dist', annotation=Attribute(value=Name(id='pkg_resources', ctx=Load()), attr='Distribution', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_dist', ctx=Store())], value=Name(id='dist', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='from_directory', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='directory', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='dist_dir', ctx=Store())], value=Call(func=Attribute(value=Name(id='directory', ctx=Load()), attr='rstrip', ctx=Load()), args=[Attribute(value=Name(id='os', ctx=Load()), attr='sep', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='base_dir', ctx=Store()), Name(id='dist_dir_name', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='split', ctx=Load()), args=[Name(id='dist_dir', ctx=Load())], keywords=[])), Assign(targets=[Name(id='metadata', ctx=Store())], value=Call(func=Attribute(value=Name(id='pkg_resources', ctx=Load()), attr='PathMetadata', ctx=Load()), args=[Name(id='base_dir', ctx=Load()), Name(id='dist_dir', ctx=Load())], keywords=[])), If(test=Call(func=Attribute(value=Name(id='dist_dir', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.egg-info')], keywords=[]), body=[Assign(targets=[Name(id='dist_cls', ctx=Store())], value=Attribute(value=Name(id='pkg_resources', ctx=Load()), attr='Distribution', ctx=Load())), Assign(targets=[Name(id='dist_name', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='splitext', ctx=Load()), args=[Name(id='dist_dir_name', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()))], orelse=[Assert(test=Call(func=Attribute(value=Name(id='dist_dir', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.dist-info')], keywords=[])), Assign(targets=[Name(id='dist_cls', ctx=Store())], value=Attribute(value=Name(id='pkg_resources', ctx=Load()), attr='DistInfoDistribution', ctx=Load())), Assign(targets=[Name(id='dist_name', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='splitext', ctx=Load()), args=[Name(id='dist_dir_name', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='-')], keywords=[]), slice=Constant(value=0), ctx=Load()))]), Assign(targets=[Name(id='dist', ctx=Store())], value=Call(func=Name(id='dist_cls', ctx=Load()), args=[Name(id='base_dir', ctx=Load())], keywords=[keyword(arg='project_name', value=Name(id='dist_name', ctx=Load())), keyword(arg='metadata', value=Name(id='metadata', ctx=Load()))])), Return(value=Call(func=Name(id='cls', ctx=Load()), args=[Name(id='dist', ctx=Load())], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())], returns=Name(id='BaseDistribution', ctx=Load())), FunctionDef(name='from_metadata_file_contents', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='metadata_contents', annotation=Name(id='bytes', ctx=Load())), arg(arg='filename', annotation=Name(id='str', ctx=Load())), arg(arg='project_name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='metadata_dict', ctx=Store())], value=Dict(keys=[Constant(value='METADATA')], values=[Name(id='metadata_contents', ctx=Load())])), Assign(targets=[Name(id='dist', ctx=Store())], value=Call(func=Attribute(value=Name(id='pkg_resources', ctx=Load()), attr='DistInfoDistribution', ctx=Load()), args=[], keywords=[keyword(arg='location', value=Name(id='filename', ctx=Load())), keyword(arg='metadata', value=Call(func=Name(id='InMemoryMetadata', ctx=Load()), args=[Name(id='metadata_dict', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[])), keyword(arg='project_name', value=Name(id='project_name', ctx=Load()))])), Return(value=Call(func=Name(id='cls', ctx=Load()), args=[Name(id='dist', ctx=Load())], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())], returns=Name(id='BaseDistribution', ctx=Load())), FunctionDef(name='from_wheel', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='wheel', annotation=Name(id='Wheel', ctx=Load())), arg(arg='name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='wheel', ctx=Load()), attr='as_zipfile', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='zf', ctx=Store()))], body=[Assign(targets=[Tuple(elts=[Name(id='info_dir', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Name(id='parse_wheel', ctx=Load()), args=[Name(id='zf', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='metadata_dict', ctx=Store())], value=DictComp(key=Subscript(value=Call(func=Attribute(value=Name(id='path', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='/'), Constant(value=1)], keywords=[]), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), value=Call(func=Name(id='read_wheel_metadata_file', ctx=Load()), args=[Name(id='zf', ctx=Load()), Name(id='path', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='path', ctx=Store()), iter=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='namelist', ctx=Load()), args=[], keywords=[]), ifs=[Call(func=Attribute(value=Name(id='path', ctx=Load()), attr='startswith', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='info_dir', ctx=Load()), conversion=-1), Constant(value='/')])], keywords=[])], is_async=0)]))])], handlers=[ExceptHandler(type=Attribute(value=Name(id='zipfile', ctx=Load()), attr='BadZipFile', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='InvalidWheel', ctx=Load()), args=[Attribute(value=Name(id='wheel', ctx=Load()), attr='location', ctx=Load()), Name(id='name', ctx=Load())], keywords=[]), cause=Name(id='e', ctx=Load()))]), ExceptHandler(type=Name(id='UnsupportedWheel', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='UnsupportedWheel', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='name', ctx=Load()), conversion=-1), Constant(value=' has an invalid wheel, '), FormattedValue(value=Name(id='e', ctx=Load()), conversion=-1)])], keywords=[]))])], orelse=[], finalbody=[]), Assign(targets=[Name(id='dist', ctx=Store())], value=Call(func=Attribute(value=Name(id='pkg_resources', ctx=Load()), attr='DistInfoDistribution', ctx=Load()), args=[], keywords=[keyword(arg='location', value=Attribute(value=Name(id='wheel', ctx=Load()), attr='location', ctx=Load())), keyword(arg='metadata', value=Call(func=Name(id='InMemoryMetadata', ctx=Load()), args=[Name(id='metadata_dict', ctx=Load()), Attribute(value=Name(id='wheel', ctx=Load()), attr='location', ctx=Load())], keywords=[])), keyword(arg='project_name', value=Name(id='name', ctx=Load()))])), Return(value=Call(func=Name(id='cls', ctx=Load()), args=[Name(id='dist', ctx=Load())], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())], returns=Name(id='BaseDistribution', ctx=Load())), FunctionDef(name='location', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dist', ctx=Load()), attr='location', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='installed_location', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='egg_link', ctx=Store())], value=Call(func=Name(id='egg_link_path_from_location', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='raw_name', ctx=Load())], keywords=[])), If(test=Name(id='egg_link', ctx=Load()), body=[Assign(targets=[Name(id='location', ctx=Store())], value=Name(id='egg_link', ctx=Load()))], orelse=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='location', ctx=Load()), body=[Assign(targets=[Name(id='location', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='location', ctx=Load()))], orelse=[Return(value=Constant(value=None))])]), Return(value=Call(func=Name(id='normalize_path', ctx=Load()), args=[Name(id='location', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='info_location', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dist', ctx=Load()), attr='egg_info', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='installed_by_distutils', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Call(func=Name(id='bool', ctx=Load()), args=[Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dist', ctx=Load()), attr='_provider', ctx=Load()), attr='path', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[Return(value=Constant(value=False))])], orelse=[], finalbody=[])], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='canonical_name', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='canonicalize_name', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dist', ctx=Load()), attr='project_name', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='NormalizedName', ctx=Load())), FunctionDef(name='version', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='parse_version', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dist', ctx=Load()), attr='version', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='DistributionVersion', ctx=Load())), FunctionDef(name='is_file', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='path', annotation=Name(id='InfoPath', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dist', ctx=Load()), attr='has_metadata', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[], returns=Name(id='bool', ctx=Load())), FunctionDef(name='iter_distutils_script_names', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dist', ctx=Load()), attr='metadata_listdir', ctx=Load()), args=[Constant(value='scripts')], keywords=[])))], decorator_list=[], returns=Subscript(value=Name(id='Iterator', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='read_text', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='path', annotation=Name(id='InfoPath', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='name', ctx=Store())], value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dist', ctx=Load()), attr='has_metadata', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='FileNotFoundError', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='content', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dist', ctx=Load()), attr='get_metadata', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='content', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='NoneMetadataError', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='name', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='content', ctx=Load()))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='iter_entry_points', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Tuple(elts=[Name(id='group', ctx=Store()), Name(id='entries', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dist', ctx=Load()), attr='get_entry_map', ctx=Load()), args=[], keywords=[]), attr='items', ctx=Load()), args=[], keywords=[]), body=[For(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='entry_point', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='entries', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='name', ctx=Store()), Name(id='_', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='entry_point', ctx=Load())], keywords=[]), attr='partition', ctx=Load()), args=[Constant(value='=')], keywords=[])), Expr(value=Yield(value=Call(func=Name(id='EntryPoint', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Call(func=Attribute(value=Name(id='name', ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[])), keyword(arg='value', value=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[])), keyword(arg='group', value=Name(id='group', ctx=Load()))])))], orelse=[])], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='BaseEntryPoint', ctx=Load()), ctx=Load())), FunctionDef(name='_metadata_impl', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        :raises NoneMetadataError: if the distribution reports `has_metadata()`\n            True but `get_metadata()` returns None.\n        ')), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_dist', ctx=Load()), Attribute(value=Name(id='pkg_resources', ctx=Load()), attr='DistInfoDistribution', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='metadata_name', ctx=Store())], value=Constant(value='METADATA'))], orelse=[Assign(targets=[Name(id='metadata_name', ctx=Store())], value=Constant(value='PKG-INFO'))]), Try(body=[Assign(targets=[Name(id='metadata', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='read_text', ctx=Load()), args=[Name(id='metadata_name', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='FileNotFoundError', ctx=Load()), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='location', ctx=Load()), body=[Assign(targets=[Name(id='displaying_path', ctx=Store())], value=Call(func=Name(id='display_path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='location', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='displaying_path', ctx=Store())], value=Call(func=Name(id='repr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='location', ctx=Load())], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[Constant(value='No metadata found in %s'), Name(id='displaying_path', ctx=Load())], keywords=[])), Assign(targets=[Name(id='metadata', ctx=Store())], value=Constant(value=''))])], orelse=[], finalbody=[]), Assign(targets=[Name(id='feed_parser', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='email', ctx=Load()), attr='parser', ctx=Load()), attr='FeedParser', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='feed_parser', ctx=Load()), attr='feed', ctx=Load()), args=[Name(id='metadata', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='feed_parser', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Attribute(value=Attribute(value=Name(id='email', ctx=Load()), attr='message', ctx=Load()), attr='Message', ctx=Load())), FunctionDef(name='iter_dependencies', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='extras', annotation=Subscript(value=Name(id='Collection', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Tuple(elts=[], ctx=Load())]), body=[If(test=Name(id='extras', ctx=Load()), body=[Assign(targets=[Name(id='extras', ctx=Store())], value=Call(func=Name(id='frozenset', ctx=Load()), args=[GeneratorExp(elt=Call(func=Attribute(value=Name(id='pkg_resources', ctx=Load()), attr='safe_extra', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='e', ctx=Store()), iter=Name(id='extras', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), Assign(targets=[Name(id='extras', ctx=Store())], value=Call(func=Attribute(value=Name(id='extras', ctx=Load()), attr='intersection', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dist', ctx=Load()), attr='extras', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dist', ctx=Load()), attr='requires', ctx=Load()), args=[Name(id='extras', ctx=Load())], keywords=[]))], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='Requirement', ctx=Load()), ctx=Load())), FunctionDef(name='iter_provided_extras', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dist', ctx=Load()), attr='extras', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='is_extra_provided', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='extra', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Call(func=Attribute(value=Name(id='pkg_resources', ctx=Load()), attr='safe_extra', ctx=Load()), args=[Name(id='extra', ctx=Load())], keywords=[]), ops=[In()], comparators=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dist', ctx=Load()), attr='extras', ctx=Load())]))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], decorator_list=[]), ClassDef(name='Environment', bases=[Name(id='BaseEnvironment', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ws', annotation=Attribute(value=Name(id='pkg_resources', ctx=Load()), attr='WorkingSet', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_ws', ctx=Store())], value=Name(id='ws', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='default', args=arguments(posonlyargs=[], args=[arg(arg='cls')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='cls', ctx=Load()), args=[Attribute(value=Name(id='pkg_resources', ctx=Load()), attr='working_set', ctx=Load())], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())], returns=Name(id='BaseEnvironment', ctx=Load())), FunctionDef(name='from_paths', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='paths', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='cls', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pkg_resources', ctx=Load()), attr='WorkingSet', ctx=Load()), args=[Name(id='paths', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())], returns=Name(id='BaseEnvironment', ctx=Load())), FunctionDef(name='_iter_distributions', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='dist', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_ws', ctx=Load()), body=[Expr(value=Yield(value=Call(func=Name(id='Distribution', ctx=Load()), args=[Name(id='dist', ctx=Load())], keywords=[])))], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Iterator', ctx=Load()), slice=Name(id='BaseDistribution', ctx=Load()), ctx=Load())), FunctionDef(name='_search_distribution', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Find a distribution matching the ``name`` in the environment.\n\n        This searches from *all* distributions available in the environment, to\n        match the behavior of ``pkg_resources.get_distribution()``.\n        ')), Assign(targets=[Name(id='canonical_name', ctx=Store())], value=Call(func=Name(id='canonicalize_name', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[])), For(target=Name(id='dist', ctx=Store()), iter=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='iter_all_distributions', ctx=Load()), args=[], keywords=[]), body=[If(test=Compare(left=Attribute(value=Name(id='dist', ctx=Load()), attr='canonical_name', ctx=Load()), ops=[Eq()], comparators=[Name(id='canonical_name', ctx=Load())]), body=[Return(value=Name(id='dist', ctx=Load()))], orelse=[])], orelse=[]), Return(value=Constant(value=None))], decorator_list=[], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='BaseDistribution', ctx=Load()), ctx=Load())), FunctionDef(name='get_distribution', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='dist', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_search_distribution', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[])), If(test=Name(id='dist', ctx=Load()), body=[Return(value=Name(id='dist', ctx=Load()))], orelse=[]), Try(body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_ws', ctx=Load()), attr='require', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='pkg_resources', ctx=Load()), attr='DistributionNotFound', ctx=Load()), body=[Return(value=Constant(value=None))])], orelse=[], finalbody=[]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_search_distribution', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[]))], decorator_list=[], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='BaseDistribution', ctx=Load()), ctx=Load()))], decorator_list=[])], type_ignores=[])