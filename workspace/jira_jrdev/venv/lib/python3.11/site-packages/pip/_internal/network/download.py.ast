Module(body=[Expr(value=Constant(value='Download files with progress indicators.\n')), Import(names=[alias(name='email.message')]), Import(names=[alias(name='logging')]), Import(names=[alias(name='mimetypes')]), Import(names=[alias(name='os')]), ImportFrom(module='typing', names=[alias(name='Iterable'), alias(name='Optional'), alias(name='Tuple')], level=0), ImportFrom(module='pip._vendor.requests.models', names=[alias(name='CONTENT_CHUNK_SIZE'), alias(name='Response')], level=0), ImportFrom(module='pip._internal.cli.progress_bars', names=[alias(name='get_download_progress_renderer')], level=0), ImportFrom(module='pip._internal.exceptions', names=[alias(name='NetworkConnectionError')], level=0), ImportFrom(module='pip._internal.models.index', names=[alias(name='PyPI')], level=0), ImportFrom(module='pip._internal.models.link', names=[alias(name='Link')], level=0), ImportFrom(module='pip._internal.network.cache', names=[alias(name='is_from_cache')], level=0), ImportFrom(module='pip._internal.network.session', names=[alias(name='PipSession')], level=0), ImportFrom(module='pip._internal.network.utils', names=[alias(name='HEADERS'), alias(name='raise_for_status'), alias(name='response_chunks')], level=0), ImportFrom(module='pip._internal.utils.misc', names=[alias(name='format_size'), alias(name='redact_auth_from_url'), alias(name='splitext')], level=0), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Name(id='__name__', ctx=Load())], keywords=[])), FunctionDef(name='_get_http_response_size', args=arguments(posonlyargs=[], args=[arg(arg='resp', annotation=Name(id='Response', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='resp', ctx=Load()), attr='headers', ctx=Load()), slice=Constant(value='content-length'), ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Tuple(elts=[Name(id='ValueError', ctx=Load()), Name(id='KeyError', ctx=Load()), Name(id='TypeError', ctx=Load())], ctx=Load()), body=[Return(value=Constant(value=None))])], orelse=[], finalbody=[])], decorator_list=[], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='int', ctx=Load()), ctx=Load())), FunctionDef(name='_prepare_download', args=arguments(posonlyargs=[], args=[arg(arg='resp', annotation=Name(id='Response', ctx=Load())), arg(arg='link', annotation=Name(id='Link', ctx=Load())), arg(arg='progress_bar', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='total_length', ctx=Store())], value=Call(func=Name(id='_get_http_response_size', ctx=Load()), args=[Name(id='resp', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='link', ctx=Load()), attr='netloc', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='PyPI', ctx=Load()), attr='file_storage_domain', ctx=Load())]), body=[Assign(targets=[Name(id='url', ctx=Store())], value=Attribute(value=Name(id='link', ctx=Load()), attr='show_url', ctx=Load()))], orelse=[Assign(targets=[Name(id='url', ctx=Store())], value=Attribute(value=Name(id='link', ctx=Load()), attr='url_without_fragment', ctx=Load()))]), Assign(targets=[Name(id='logged_url', ctx=Store())], value=Call(func=Name(id='redact_auth_from_url', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), If(test=Name(id='total_length', ctx=Load()), body=[Assign(targets=[Name(id='logged_url', ctx=Store())], value=Call(func=Attribute(value=Constant(value='{} ({})'), attr='format', ctx=Load()), args=[Name(id='logged_url', ctx=Load()), Call(func=Name(id='format_size', ctx=Load()), args=[Name(id='total_length', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), If(test=Call(func=Name(id='is_from_cache', ctx=Load()), args=[Name(id='resp', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Using cached %s'), Name(id='logged_url', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Downloading %s'), Name(id='logged_url', ctx=Load())], keywords=[]))]), If(test=Compare(left=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='getEffectiveLevel', ctx=Load()), args=[], keywords=[]), ops=[Gt()], comparators=[Attribute(value=Name(id='logging', ctx=Load()), attr='INFO', ctx=Load())]), body=[Assign(targets=[Name(id='show_progress', ctx=Store())], value=Constant(value=False))], orelse=[If(test=Call(func=Name(id='is_from_cache', ctx=Load()), args=[Name(id='resp', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='show_progress', ctx=Store())], value=Constant(value=False))], orelse=[If(test=UnaryOp(op=Not(), operand=Name(id='total_length', ctx=Load())), body=[Assign(targets=[Name(id='show_progress', ctx=Store())], value=Constant(value=True))], orelse=[If(test=Compare(left=Name(id='total_length', ctx=Load()), ops=[Gt()], comparators=[BinOp(left=Constant(value=40), op=Mult(), right=Constant(value=1000))]), body=[Assign(targets=[Name(id='show_progress', ctx=Store())], value=Constant(value=True))], orelse=[Assign(targets=[Name(id='show_progress', ctx=Store())], value=Constant(value=False))])])])]), Assign(targets=[Name(id='chunks', ctx=Store())], value=Call(func=Name(id='response_chunks', ctx=Load()), args=[Name(id='resp', ctx=Load()), Name(id='CONTENT_CHUNK_SIZE', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='show_progress', ctx=Load())), body=[Return(value=Name(id='chunks', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='renderer', ctx=Store())], value=Call(func=Name(id='get_download_progress_renderer', ctx=Load()), args=[], keywords=[keyword(arg='bar_type', value=Name(id='progress_bar', ctx=Load())), keyword(arg='size', value=Name(id='total_length', ctx=Load()))])), Return(value=Call(func=Name(id='renderer', ctx=Load()), args=[Name(id='chunks', ctx=Load())], keywords=[]))], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='bytes', ctx=Load()), ctx=Load())), FunctionDef(name='sanitize_content_filename', args=arguments(posonlyargs=[], args=[arg(arg='filename', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Sanitize the "filename" value from a Content-Disposition header.\n    ')), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='parse_content_disposition', args=arguments(posonlyargs=[], args=[arg(arg='content_disposition', annotation=Name(id='str', ctx=Load())), arg(arg='default_filename', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Parse the "filename" value from a Content-Disposition header, and\n    return the default filename if the result is empty.\n    ')), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='email', ctx=Load()), attr='message', ctx=Load()), attr='Message', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value='content-type'), ctx=Store())], value=Name(id='content_disposition', ctx=Load())), Assign(targets=[Name(id='filename', ctx=Store())], value=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='get_param', ctx=Load()), args=[Constant(value='filename')], keywords=[])), If(test=Name(id='filename', ctx=Load()), body=[Assign(targets=[Name(id='filename', ctx=Store())], value=Call(func=Name(id='sanitize_content_filename', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Return(value=BoolOp(op=Or(), values=[Name(id='filename', ctx=Load()), Name(id='default_filename', ctx=Load())]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='_get_http_response_filename', args=arguments(posonlyargs=[], args=[arg(arg='resp', annotation=Name(id='Response', ctx=Load())), arg(arg='link', annotation=Name(id='Link', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get an ideal filename from the given HTTP response, falling back to\n    the link filename if not provided.\n    ')), Assign(targets=[Name(id='filename', ctx=Store())], value=Attribute(value=Name(id='link', ctx=Load()), attr='filename', ctx=Load())), Assign(targets=[Name(id='content_disposition', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='headers', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='content-disposition')], keywords=[])), If(test=Name(id='content_disposition', ctx=Load()), body=[Assign(targets=[Name(id='filename', ctx=Store())], value=Call(func=Name(id='parse_content_disposition', ctx=Load()), args=[Name(id='content_disposition', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[]))], orelse=[]), AnnAssign(target=Name(id='ext', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), value=Subscript(value=Call(func=Name(id='splitext', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[]), slice=Constant(value=1), ctx=Load()), simple=1), If(test=UnaryOp(op=Not(), operand=Name(id='ext', ctx=Load())), body=[Assign(targets=[Name(id='ext', ctx=Store())], value=Call(func=Attribute(value=Name(id='mimetypes', ctx=Load()), attr='guess_extension', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='headers', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='content-type'), Constant(value='')], keywords=[])], keywords=[])), If(test=Name(id='ext', ctx=Load()), body=[AugAssign(target=Name(id='filename', ctx=Store()), op=Add(), value=Name(id='ext', ctx=Load()))], orelse=[])], orelse=[]), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='ext', ctx=Load())), Compare(left=Attribute(value=Name(id='link', ctx=Load()), attr='url', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='resp', ctx=Load()), attr='url', ctx=Load())])]), body=[Assign(targets=[Name(id='ext', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='splitext', ctx=Load()), args=[Attribute(value=Name(id='resp', ctx=Load()), attr='url', ctx=Load())], keywords=[]), slice=Constant(value=1), ctx=Load())), If(test=Name(id='ext', ctx=Load()), body=[AugAssign(target=Name(id='filename', ctx=Store()), op=Add(), value=Name(id='ext', ctx=Load()))], orelse=[])], orelse=[]), Return(value=Name(id='filename', ctx=Load()))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='_http_get_download', args=arguments(posonlyargs=[], args=[arg(arg='session', annotation=Name(id='PipSession', ctx=Load())), arg(arg='link', annotation=Name(id='Link', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='target_url', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='link', ctx=Load()), attr='url', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='#'), Constant(value=1)], keywords=[]), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='resp', ctx=Store())], value=Call(func=Attribute(value=Name(id='session', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='target_url', ctx=Load())], keywords=[keyword(arg='headers', value=Name(id='HEADERS', ctx=Load())), keyword(arg='stream', value=Constant(value=True))])), Expr(value=Call(func=Name(id='raise_for_status', ctx=Load()), args=[Name(id='resp', ctx=Load())], keywords=[])), Return(value=Name(id='resp', ctx=Load()))], decorator_list=[], returns=Name(id='Response', ctx=Load())), ClassDef(name='Downloader', bases=[], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='session', annotation=Name(id='PipSession', ctx=Load())), arg(arg='progress_bar', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_session', ctx=Store())], value=Name(id='session', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_progress_bar', ctx=Store())], value=Name(id='progress_bar', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='link', annotation=Name(id='Link', ctx=Load())), arg(arg='location', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Download the file given by link into location.')), Try(body=[Assign(targets=[Name(id='resp', ctx=Store())], value=Call(func=Name(id='_http_get_download', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_session', ctx=Load()), Name(id='link', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='NetworkConnectionError', ctx=Load()), name='e', body=[Assert(test=Compare(left=Attribute(value=Name(id='e', ctx=Load()), attr='response', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='critical', ctx=Load()), args=[Constant(value='HTTP error %s while getting %s'), Attribute(value=Attribute(value=Name(id='e', ctx=Load()), attr='response', ctx=Load()), attr='status_code', ctx=Load()), Name(id='link', ctx=Load())], keywords=[])), Raise()])], orelse=[], finalbody=[]), Assign(targets=[Name(id='filename', ctx=Store())], value=Call(func=Name(id='_get_http_response_filename', ctx=Load()), args=[Name(id='resp', ctx=Load()), Name(id='link', ctx=Load())], keywords=[])), Assign(targets=[Name(id='filepath', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='location', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[])), Assign(targets=[Name(id='chunks', ctx=Store())], value=Call(func=Name(id='_prepare_download', ctx=Load()), args=[Name(id='resp', ctx=Load()), Name(id='link', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_progress_bar', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='filepath', ctx=Load()), Constant(value='wb')], keywords=[]), optional_vars=Name(id='content_file', ctx=Store()))], body=[For(target=Name(id='chunk', ctx=Store()), iter=Name(id='chunks', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='content_file', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='chunk', ctx=Load())], keywords=[]))], orelse=[])]), Assign(targets=[Name(id='content_type', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='headers', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='Content-Type'), Constant(value='')], keywords=[])), Return(value=Tuple(elts=[Name(id='filepath', ctx=Load()), Name(id='content_type', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load()))], decorator_list=[]), ClassDef(name='BatchDownloader', bases=[], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='session', annotation=Name(id='PipSession', ctx=Load())), arg(arg='progress_bar', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_session', ctx=Store())], value=Name(id='session', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_progress_bar', ctx=Store())], value=Name(id='progress_bar', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='links', annotation=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='Link', ctx=Load()), ctx=Load())), arg(arg='location', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Download the files given by links into location.')), For(target=Name(id='link', ctx=Store()), iter=Name(id='links', ctx=Load()), body=[Try(body=[Assign(targets=[Name(id='resp', ctx=Store())], value=Call(func=Name(id='_http_get_download', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_session', ctx=Load()), Name(id='link', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='NetworkConnectionError', ctx=Load()), name='e', body=[Assert(test=Compare(left=Attribute(value=Name(id='e', ctx=Load()), attr='response', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='critical', ctx=Load()), args=[Constant(value='HTTP error %s while getting %s'), Attribute(value=Attribute(value=Name(id='e', ctx=Load()), attr='response', ctx=Load()), attr='status_code', ctx=Load()), Name(id='link', ctx=Load())], keywords=[])), Raise()])], orelse=[], finalbody=[]), Assign(targets=[Name(id='filename', ctx=Store())], value=Call(func=Name(id='_get_http_response_filename', ctx=Load()), args=[Name(id='resp', ctx=Load()), Name(id='link', ctx=Load())], keywords=[])), Assign(targets=[Name(id='filepath', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='location', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[])), Assign(targets=[Name(id='chunks', ctx=Store())], value=Call(func=Name(id='_prepare_download', ctx=Load()), args=[Name(id='resp', ctx=Load()), Name(id='link', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_progress_bar', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='filepath', ctx=Load()), Constant(value='wb')], keywords=[]), optional_vars=Name(id='content_file', ctx=Store()))], body=[For(target=Name(id='chunk', ctx=Store()), iter=Name(id='chunks', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='content_file', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='chunk', ctx=Load())], keywords=[]))], orelse=[])]), Assign(targets=[Name(id='content_type', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='headers', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='Content-Type'), Constant(value='')], keywords=[])), Expr(value=Yield(value=Tuple(elts=[Name(id='link', ctx=Load()), Tuple(elts=[Name(id='filepath', ctx=Load()), Name(id='content_type', ctx=Load())], ctx=Load())], ctx=Load())))], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='Link', ctx=Load()), Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()), ctx=Load()))], decorator_list=[])], type_ignores=[])