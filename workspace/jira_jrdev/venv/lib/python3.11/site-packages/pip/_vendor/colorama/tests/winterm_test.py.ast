Module(body=[Import(names=[alias(name='sys')]), ImportFrom(module='unittest', names=[alias(name='TestCase'), alias(name='main'), alias(name='skipUnless')], level=0), Try(body=[ImportFrom(module='unittest.mock', names=[alias(name='Mock'), alias(name='patch')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[ImportFrom(module='mock', names=[alias(name='Mock'), alias(name='patch')], level=0)])], orelse=[], finalbody=[]), ImportFrom(module='winterm', names=[alias(name='WinColor'), alias(name='WinStyle'), alias(name='WinTerm')], level=2), ClassDef(name='WinTermTest', bases=[Name(id='TestCase', ctx=Load())], keywords=[], body=[FunctionDef(name='testInit', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='mockWin32')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='mockAttr', ctx=Store())], value=Call(func=Name(id='Mock', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='mockAttr', ctx=Load()), attr='wAttributes', ctx=Store())], value=BinOp(left=BinOp(left=Constant(value=7), op=Add(), right=BinOp(left=Constant(value=6), op=Mult(), right=Constant(value=16))), op=Add(), right=Constant(value=8))), Assign(targets=[Attribute(value=Attribute(value=Name(id='mockWin32', ctx=Load()), attr='GetConsoleScreenBufferInfo', ctx=Load()), attr='return_value', ctx=Store())], value=Name(id='mockAttr', ctx=Load())), Assign(targets=[Name(id='term', ctx=Store())], value=Call(func=Name(id='WinTerm', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='term', ctx=Load()), attr='_fore', ctx=Load()), Constant(value=7)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='term', ctx=Load()), attr='_back', ctx=Load()), Constant(value=6)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='term', ctx=Load()), attr='_style', ctx=Load()), Constant(value=8)], keywords=[]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='colorama.winterm.win32')], keywords=[])]), FunctionDef(name='testGetAttrs', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='term', ctx=Store())], value=Call(func=Name(id='WinTerm', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='term', ctx=Load()), attr='_fore', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='term', ctx=Load()), attr='_back', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='term', ctx=Load()), attr='_style', ctx=Store())], value=Constant(value=0)), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='term', ctx=Load()), attr='get_attrs', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[])), Assign(targets=[Attribute(value=Name(id='term', ctx=Load()), attr='_fore', ctx=Store())], value=Attribute(value=Name(id='WinColor', ctx=Load()), attr='YELLOW', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='term', ctx=Load()), attr='get_attrs', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='WinColor', ctx=Load()), attr='YELLOW', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='term', ctx=Load()), attr='_back', ctx=Store())], value=Attribute(value=Name(id='WinColor', ctx=Load()), attr='MAGENTA', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='term', ctx=Load()), attr='get_attrs', ctx=Load()), args=[], keywords=[]), BinOp(left=Attribute(value=Name(id='WinColor', ctx=Load()), attr='YELLOW', ctx=Load()), op=Add(), right=BinOp(left=Attribute(value=Name(id='WinColor', ctx=Load()), attr='MAGENTA', ctx=Load()), op=Mult(), right=Constant(value=16)))], keywords=[])), Assign(targets=[Attribute(value=Name(id='term', ctx=Load()), attr='_style', ctx=Store())], value=Attribute(value=Name(id='WinStyle', ctx=Load()), attr='BRIGHT', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='term', ctx=Load()), attr='get_attrs', ctx=Load()), args=[], keywords=[]), BinOp(left=BinOp(left=Attribute(value=Name(id='WinColor', ctx=Load()), attr='YELLOW', ctx=Load()), op=Add(), right=BinOp(left=Attribute(value=Name(id='WinColor', ctx=Load()), attr='MAGENTA', ctx=Load()), op=Mult(), right=Constant(value=16))), op=Add(), right=Attribute(value=Name(id='WinStyle', ctx=Load()), attr='BRIGHT', ctx=Load()))], keywords=[]))], decorator_list=[Call(func=Name(id='skipUnless', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='win')], keywords=[]), Constant(value='requires Windows')], keywords=[])]), FunctionDef(name='testResetAll', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='mockWin32')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='mockAttr', ctx=Store())], value=Call(func=Name(id='Mock', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='mockAttr', ctx=Load()), attr='wAttributes', ctx=Store())], value=BinOp(left=BinOp(left=Constant(value=1), op=Add(), right=BinOp(left=Constant(value=2), op=Mult(), right=Constant(value=16))), op=Add(), right=Constant(value=8))), Assign(targets=[Attribute(value=Attribute(value=Name(id='mockWin32', ctx=Load()), attr='GetConsoleScreenBufferInfo', ctx=Load()), attr='return_value', ctx=Store())], value=Name(id='mockAttr', ctx=Load())), Assign(targets=[Name(id='term', ctx=Store())], value=Call(func=Name(id='WinTerm', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='term', ctx=Load()), attr='set_console', ctx=Store())], value=Call(func=Name(id='Mock', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='term', ctx=Load()), attr='_fore', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=1))), Assign(targets=[Attribute(value=Name(id='term', ctx=Load()), attr='_back', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=1))), Assign(targets=[Attribute(value=Name(id='term', ctx=Load()), attr='_style', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=1))), Expr(value=Call(func=Attribute(value=Name(id='term', ctx=Load()), attr='reset_all', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='term', ctx=Load()), attr='_fore', ctx=Load()), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='term', ctx=Load()), attr='_back', ctx=Load()), Constant(value=2)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='term', ctx=Load()), attr='_style', ctx=Load()), Constant(value=8)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='term', ctx=Load()), attr='set_console', ctx=Load()), attr='called', ctx=Load()), Constant(value=True)], keywords=[]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='colorama.winterm.win32')], keywords=[])]), FunctionDef(name='testFore', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='term', ctx=Store())], value=Call(func=Name(id='WinTerm', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='term', ctx=Load()), attr='set_console', ctx=Store())], value=Call(func=Name(id='Mock', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='term', ctx=Load()), attr='_fore', ctx=Store())], value=Constant(value=0)), Expr(value=Call(func=Attribute(value=Name(id='term', ctx=Load()), attr='fore', ctx=Load()), args=[Constant(value=5)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='term', ctx=Load()), attr='_fore', ctx=Load()), Constant(value=5)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='term', ctx=Load()), attr='set_console', ctx=Load()), attr='called', ctx=Load()), Constant(value=True)], keywords=[]))], decorator_list=[Call(func=Name(id='skipUnless', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='win')], keywords=[]), Constant(value='requires Windows')], keywords=[])]), FunctionDef(name='testBack', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='term', ctx=Store())], value=Call(func=Name(id='WinTerm', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='term', ctx=Load()), attr='set_console', ctx=Store())], value=Call(func=Name(id='Mock', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='term', ctx=Load()), attr='_back', ctx=Store())], value=Constant(value=0)), Expr(value=Call(func=Attribute(value=Name(id='term', ctx=Load()), attr='back', ctx=Load()), args=[Constant(value=5)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='term', ctx=Load()), attr='_back', ctx=Load()), Constant(value=5)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='term', ctx=Load()), attr='set_console', ctx=Load()), attr='called', ctx=Load()), Constant(value=True)], keywords=[]))], decorator_list=[Call(func=Name(id='skipUnless', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='win')], keywords=[]), Constant(value='requires Windows')], keywords=[])]), FunctionDef(name='testStyle', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='term', ctx=Store())], value=Call(func=Name(id='WinTerm', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='term', ctx=Load()), attr='set_console', ctx=Store())], value=Call(func=Name(id='Mock', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='term', ctx=Load()), attr='_style', ctx=Store())], value=Constant(value=0)), Expr(value=Call(func=Attribute(value=Name(id='term', ctx=Load()), attr='style', ctx=Load()), args=[Constant(value=22)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='term', ctx=Load()), attr='_style', ctx=Load()), Constant(value=22)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='term', ctx=Load()), attr='set_console', ctx=Load()), attr='called', ctx=Load()), Constant(value=True)], keywords=[]))], decorator_list=[Call(func=Name(id='skipUnless', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='win')], keywords=[]), Constant(value='requires Windows')], keywords=[])]), FunctionDef(name='testSetConsole', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='mockWin32')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='mockAttr', ctx=Store())], value=Call(func=Name(id='Mock', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='mockAttr', ctx=Load()), attr='wAttributes', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Attribute(value=Name(id='mockWin32', ctx=Load()), attr='GetConsoleScreenBufferInfo', ctx=Load()), attr='return_value', ctx=Store())], value=Name(id='mockAttr', ctx=Load())), Assign(targets=[Name(id='term', ctx=Store())], value=Call(func=Name(id='WinTerm', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='term', ctx=Load()), attr='windll', ctx=Store())], value=Call(func=Name(id='Mock', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='term', ctx=Load()), attr='set_console', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='mockWin32', ctx=Load()), attr='SetConsoleTextAttribute', ctx=Load()), attr='call_args', ctx=Load()), Tuple(elts=[Tuple(elts=[Attribute(value=Name(id='mockWin32', ctx=Load()), attr='STDOUT', ctx=Load()), Call(func=Attribute(value=Name(id='term', ctx=Load()), attr='get_attrs', ctx=Load()), args=[], keywords=[])], ctx=Load()), Dict(keys=[], values=[])], ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='colorama.winterm.win32')], keywords=[])]), FunctionDef(name='testSetConsoleOnStderr', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='mockWin32')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='mockAttr', ctx=Store())], value=Call(func=Name(id='Mock', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='mockAttr', ctx=Load()), attr='wAttributes', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Attribute(value=Name(id='mockWin32', ctx=Load()), attr='GetConsoleScreenBufferInfo', ctx=Load()), attr='return_value', ctx=Store())], value=Name(id='mockAttr', ctx=Load())), Assign(targets=[Name(id='term', ctx=Store())], value=Call(func=Name(id='WinTerm', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='term', ctx=Load()), attr='windll', ctx=Store())], value=Call(func=Name(id='Mock', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='term', ctx=Load()), attr='set_console', ctx=Load()), args=[], keywords=[keyword(arg='on_stderr', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='mockWin32', ctx=Load()), attr='SetConsoleTextAttribute', ctx=Load()), attr='call_args', ctx=Load()), Tuple(elts=[Tuple(elts=[Attribute(value=Name(id='mockWin32', ctx=Load()), attr='STDERR', ctx=Load()), Call(func=Attribute(value=Name(id='term', ctx=Load()), attr='get_attrs', ctx=Load()), args=[], keywords=[])], ctx=Load()), Dict(keys=[], values=[])], ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='patch', ctx=Load()), args=[Constant(value='colorama.winterm.win32')], keywords=[])])], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Expr(value=Call(func=Name(id='main', ctx=Load()), args=[], keywords=[]))], orelse=[])], type_ignores=[])