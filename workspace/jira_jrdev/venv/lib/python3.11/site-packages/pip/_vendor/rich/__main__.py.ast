Module(body=[Import(names=[alias(name='colorsys')]), Import(names=[alias(name='io')]), ImportFrom(module='time', names=[alias(name='process_time')], level=0), ImportFrom(module='pip._vendor.rich', names=[alias(name='box')], level=0), ImportFrom(module='pip._vendor.rich.color', names=[alias(name='Color')], level=0), ImportFrom(module='pip._vendor.rich.console', names=[alias(name='Console'), alias(name='ConsoleOptions'), alias(name='Group'), alias(name='RenderableType'), alias(name='RenderResult')], level=0), ImportFrom(module='pip._vendor.rich.markdown', names=[alias(name='Markdown')], level=0), ImportFrom(module='pip._vendor.rich.measure', names=[alias(name='Measurement')], level=0), ImportFrom(module='pip._vendor.rich.pretty', names=[alias(name='Pretty')], level=0), ImportFrom(module='pip._vendor.rich.segment', names=[alias(name='Segment')], level=0), ImportFrom(module='pip._vendor.rich.style', names=[alias(name='Style')], level=0), ImportFrom(module='pip._vendor.rich.syntax', names=[alias(name='Syntax')], level=0), ImportFrom(module='pip._vendor.rich.table', names=[alias(name='Table')], level=0), ImportFrom(module='pip._vendor.rich.text', names=[alias(name='Text')], level=0), ClassDef(name='ColorBox', bases=[], keywords=[], body=[FunctionDef(name='__rich_console__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='console', annotation=Name(id='Console', ctx=Load())), arg(arg='options', annotation=Name(id='ConsoleOptions', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='y', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=0), Constant(value=5)], keywords=[]), body=[For(target=Name(id='x', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='options', ctx=Load()), attr='max_width', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='h', ctx=Store())], value=BinOp(left=Name(id='x', ctx=Load()), op=Div(), right=Attribute(value=Name(id='options', ctx=Load()), attr='max_width', ctx=Load()))), Assign(targets=[Name(id='l', ctx=Store())], value=BinOp(left=Constant(value=0.1), op=Add(), right=BinOp(left=BinOp(left=Name(id='y', ctx=Load()), op=Div(), right=Constant(value=5)), op=Mult(), right=Constant(value=0.7)))), Assign(targets=[Tuple(elts=[Name(id='r1', ctx=Store()), Name(id='g1', ctx=Store()), Name(id='b1', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='colorsys', ctx=Load()), attr='hls_to_rgb', ctx=Load()), args=[Name(id='h', ctx=Load()), Name(id='l', ctx=Load()), Constant(value=1.0)], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='r2', ctx=Store()), Name(id='g2', ctx=Store()), Name(id='b2', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='colorsys', ctx=Load()), attr='hls_to_rgb', ctx=Load()), args=[Name(id='h', ctx=Load()), BinOp(left=Name(id='l', ctx=Load()), op=Add(), right=BinOp(left=Constant(value=0.7), op=Div(), right=Constant(value=10))), Constant(value=1.0)], keywords=[])), Assign(targets=[Name(id='bgcolor', ctx=Store())], value=Call(func=Attribute(value=Name(id='Color', ctx=Load()), attr='from_rgb', ctx=Load()), args=[BinOp(left=Name(id='r1', ctx=Load()), op=Mult(), right=Constant(value=255)), BinOp(left=Name(id='g1', ctx=Load()), op=Mult(), right=Constant(value=255)), BinOp(left=Name(id='b1', ctx=Load()), op=Mult(), right=Constant(value=255))], keywords=[])), Assign(targets=[Name(id='color', ctx=Store())], value=Call(func=Attribute(value=Name(id='Color', ctx=Load()), attr='from_rgb', ctx=Load()), args=[BinOp(left=Name(id='r2', ctx=Load()), op=Mult(), right=Constant(value=255)), BinOp(left=Name(id='g2', ctx=Load()), op=Mult(), right=Constant(value=255)), BinOp(left=Name(id='b2', ctx=Load()), op=Mult(), right=Constant(value=255))], keywords=[])), Expr(value=Yield(value=Call(func=Name(id='Segment', ctx=Load()), args=[Constant(value='▄'), Call(func=Name(id='Style', ctx=Load()), args=[], keywords=[keyword(arg='color', value=Name(id='color', ctx=Load())), keyword(arg='bgcolor', value=Name(id='bgcolor', ctx=Load()))])], keywords=[])))], orelse=[]), Expr(value=Yield(value=Call(func=Attribute(value=Name(id='Segment', ctx=Load()), attr='line', ctx=Load()), args=[], keywords=[])))], orelse=[])], decorator_list=[], returns=Name(id='RenderResult', ctx=Load())), FunctionDef(name='__rich_measure__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='console', annotation=Constant(value='Console')), arg(arg='options', annotation=Name(id='ConsoleOptions', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Measurement', ctx=Load()), args=[Constant(value=1), Attribute(value=Name(id='options', ctx=Load()), attr='max_width', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='Measurement', ctx=Load()))], decorator_list=[]), FunctionDef(name='make_test_card', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get a renderable that demonstrates a number of features.')), Assign(targets=[Name(id='table', ctx=Store())], value=Call(func=Attribute(value=Name(id='Table', ctx=Load()), attr='grid', ctx=Load()), args=[], keywords=[keyword(arg='padding', value=Constant(value=1)), keyword(arg='pad_edge', value=Constant(value=True))])), Assign(targets=[Attribute(value=Name(id='table', ctx=Load()), attr='title', ctx=Store())], value=Constant(value='Rich features')), Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_column', ctx=Load()), args=[Constant(value='Feature')], keywords=[keyword(arg='no_wrap', value=Constant(value=True)), keyword(arg='justify', value=Constant(value='center')), keyword(arg='style', value=Constant(value='bold red'))])), Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_column', ctx=Load()), args=[Constant(value='Demonstration')], keywords=[])), Assign(targets=[Name(id='color_table', ctx=Store())], value=Call(func=Name(id='Table', ctx=Load()), args=[], keywords=[keyword(arg='box', value=Constant(value=None)), keyword(arg='expand', value=Constant(value=False)), keyword(arg='show_header', value=Constant(value=False)), keyword(arg='show_edge', value=Constant(value=False)), keyword(arg='pad_edge', value=Constant(value=False))])), Expr(value=Call(func=Attribute(value=Name(id='color_table', ctx=Load()), attr='add_row', ctx=Load()), args=[Constant(value='✓ [bold green]4-bit color[/]\n✓ [bold blue]8-bit color[/]\n✓ [bold magenta]Truecolor (16.7 million)[/]\n✓ [bold yellow]Dumb terminals[/]\n✓ [bold cyan]Automatic color conversion'), Call(func=Name(id='ColorBox', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_row', ctx=Load()), args=[Constant(value='Colors'), Name(id='color_table', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_row', ctx=Load()), args=[Constant(value='Styles'), Constant(value='All ansi styles: [bold]bold[/], [dim]dim[/], [italic]italic[/italic], [underline]underline[/], [strike]strikethrough[/], [reverse]reverse[/], and even [blink]blink[/].')], keywords=[])), Assign(targets=[Name(id='lorem', ctx=Store())], value=Constant(value='Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque in metus sed sapien ultricies pretium a at justo. Maecenas luctus velit et auctor maximus.')), Assign(targets=[Name(id='lorem_table', ctx=Store())], value=Call(func=Attribute(value=Name(id='Table', ctx=Load()), attr='grid', ctx=Load()), args=[], keywords=[keyword(arg='padding', value=Constant(value=1)), keyword(arg='collapse_padding', value=Constant(value=True))])), Assign(targets=[Attribute(value=Name(id='lorem_table', ctx=Load()), attr='pad_edge', ctx=Store())], value=Constant(value=False)), Expr(value=Call(func=Attribute(value=Name(id='lorem_table', ctx=Load()), attr='add_row', ctx=Load()), args=[Call(func=Name(id='Text', ctx=Load()), args=[Name(id='lorem', ctx=Load())], keywords=[keyword(arg='justify', value=Constant(value='left')), keyword(arg='style', value=Constant(value='green'))]), Call(func=Name(id='Text', ctx=Load()), args=[Name(id='lorem', ctx=Load())], keywords=[keyword(arg='justify', value=Constant(value='center')), keyword(arg='style', value=Constant(value='yellow'))]), Call(func=Name(id='Text', ctx=Load()), args=[Name(id='lorem', ctx=Load())], keywords=[keyword(arg='justify', value=Constant(value='right')), keyword(arg='style', value=Constant(value='blue'))]), Call(func=Name(id='Text', ctx=Load()), args=[Name(id='lorem', ctx=Load())], keywords=[keyword(arg='justify', value=Constant(value='full')), keyword(arg='style', value=Constant(value='red'))])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_row', ctx=Load()), args=[Constant(value='Text'), Call(func=Name(id='Group', ctx=Load()), args=[Call(func=Attribute(value=Name(id='Text', ctx=Load()), attr='from_markup', ctx=Load()), args=[Constant(value='Word wrap text. Justify [green]left[/], [yellow]center[/], [blue]right[/] or [red]full[/].\n')], keywords=[]), Name(id='lorem_table', ctx=Load())], keywords=[])], keywords=[])), FunctionDef(name='comparison', args=arguments(posonlyargs=[], args=[arg(arg='renderable1', annotation=Name(id='RenderableType', ctx=Load())), arg(arg='renderable2', annotation=Name(id='RenderableType', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='table', ctx=Store())], value=Call(func=Name(id='Table', ctx=Load()), args=[], keywords=[keyword(arg='show_header', value=Constant(value=False)), keyword(arg='pad_edge', value=Constant(value=False)), keyword(arg='box', value=Constant(value=None)), keyword(arg='expand', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_column', ctx=Load()), args=[Constant(value='1')], keywords=[keyword(arg='ratio', value=Constant(value=1))])), Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_column', ctx=Load()), args=[Constant(value='2')], keywords=[keyword(arg='ratio', value=Constant(value=1))])), Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_row', ctx=Load()), args=[Name(id='renderable1', ctx=Load()), Name(id='renderable2', ctx=Load())], keywords=[])), Return(value=Name(id='table', ctx=Load()))], decorator_list=[], returns=Name(id='Table', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_row', ctx=Load()), args=[Constant(value='Asian\nlanguage\nsupport'), Constant(value=':flag_for_china:  该库支持中文，日文和韩文文本！\n:flag_for_japan:  ライブラリは中国語、日本語、韓国語のテキストをサポートしています\n:flag_for_south_korea:  이 라이브러리는 중국어, 일본어 및 한국어 텍스트를 지원합니다')], keywords=[])), Assign(targets=[Name(id='markup_example', ctx=Store())], value=Constant(value='[bold magenta]Rich[/] supports a simple [i]bbcode[/i]-like [b]markup[/b] for [yellow]color[/], [underline]style[/], and emoji! :+1: :apple: :ant: :bear: :baguette_bread: :bus: ')), Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_row', ctx=Load()), args=[Constant(value='Markup'), Name(id='markup_example', ctx=Load())], keywords=[])), Assign(targets=[Name(id='example_table', ctx=Store())], value=Call(func=Name(id='Table', ctx=Load()), args=[], keywords=[keyword(arg='show_edge', value=Constant(value=False)), keyword(arg='show_header', value=Constant(value=True)), keyword(arg='expand', value=Constant(value=False)), keyword(arg='row_styles', value=List(elts=[Constant(value='none'), Constant(value='dim')], ctx=Load())), keyword(arg='box', value=Attribute(value=Name(id='box', ctx=Load()), attr='SIMPLE', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='example_table', ctx=Load()), attr='add_column', ctx=Load()), args=[Constant(value='[green]Date')], keywords=[keyword(arg='style', value=Constant(value='green')), keyword(arg='no_wrap', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Name(id='example_table', ctx=Load()), attr='add_column', ctx=Load()), args=[Constant(value='[blue]Title')], keywords=[keyword(arg='style', value=Constant(value='blue'))])), Expr(value=Call(func=Attribute(value=Name(id='example_table', ctx=Load()), attr='add_column', ctx=Load()), args=[Constant(value='[cyan]Production Budget')], keywords=[keyword(arg='style', value=Constant(value='cyan')), keyword(arg='justify', value=Constant(value='right')), keyword(arg='no_wrap', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Name(id='example_table', ctx=Load()), attr='add_column', ctx=Load()), args=[Constant(value='[magenta]Box Office')], keywords=[keyword(arg='style', value=Constant(value='magenta')), keyword(arg='justify', value=Constant(value='right')), keyword(arg='no_wrap', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Name(id='example_table', ctx=Load()), attr='add_row', ctx=Load()), args=[Constant(value='Dec 20, 2019'), Constant(value='Star Wars: The Rise of Skywalker'), Constant(value='$275,000,000'), Constant(value='$375,126,118')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='example_table', ctx=Load()), attr='add_row', ctx=Load()), args=[Constant(value='May 25, 2018'), Constant(value='[b]Solo[/]: A Star Wars Story'), Constant(value='$275,000,000'), Constant(value='$393,151,347')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='example_table', ctx=Load()), attr='add_row', ctx=Load()), args=[Constant(value='Dec 15, 2017'), Constant(value='Star Wars Ep. VIII: The Last Jedi'), Constant(value='$262,000,000'), Constant(value='[bold]$1,332,539,889[/bold]')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='example_table', ctx=Load()), attr='add_row', ctx=Load()), args=[Constant(value='May 19, 1999'), Constant(value='Star Wars Ep. [b]I[/b]: [i]The phantom Menace'), Constant(value='$115,000,000'), Constant(value='$1,027,044,677')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_row', ctx=Load()), args=[Constant(value='Tables'), Name(id='example_table', ctx=Load())], keywords=[])), Assign(targets=[Name(id='code', ctx=Store())], value=Constant(value='def iter_last(values: Iterable[T]) -> Iterable[Tuple[bool, T]]:\n    """Iterate and generate a tuple with a flag for last value."""\n    iter_values = iter(values)\n    try:\n        previous_value = next(iter_values)\n    except StopIteration:\n        return\n    for value in iter_values:\n        yield False, previous_value\n        previous_value = value\n    yield True, previous_value')), Assign(targets=[Name(id='pretty_data', ctx=Store())], value=Dict(keys=[Constant(value='foo'), Constant(value='atomic')], values=[List(elts=[Constant(value=3.1427), Tuple(elts=[Constant(value='Paul Atreides'), Constant(value='Vladimir Harkonnen'), Constant(value='Thufir Hawat')], ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value=False), Constant(value=True), Constant(value=None)], ctx=Load())])), Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_row', ctx=Load()), args=[Constant(value='Syntax\nhighlighting\n&\npretty\nprinting'), Call(func=Name(id='comparison', ctx=Load()), args=[Call(func=Name(id='Syntax', ctx=Load()), args=[Name(id='code', ctx=Load()), Constant(value='python3')], keywords=[keyword(arg='line_numbers', value=Constant(value=True)), keyword(arg='indent_guides', value=Constant(value=True))]), Call(func=Name(id='Pretty', ctx=Load()), args=[Name(id='pretty_data', ctx=Load())], keywords=[keyword(arg='indent_guides', value=Constant(value=True))])], keywords=[])], keywords=[])), Assign(targets=[Name(id='markdown_example', ctx=Store())], value=Constant(value='# Markdown\n\nSupports much of the *markdown* __syntax__!\n\n- Headers\n- Basic formatting: **bold**, *italic*, `code`\n- Block quotes\n- Lists, and more...\n    ')), Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_row', ctx=Load()), args=[Constant(value='Markdown'), Call(func=Name(id='comparison', ctx=Load()), args=[BinOp(left=Constant(value='[cyan]'), op=Add(), right=Name(id='markdown_example', ctx=Load())), Call(func=Name(id='Markdown', ctx=Load()), args=[Name(id='markdown_example', ctx=Load())], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_row', ctx=Load()), args=[Constant(value='+more!'), Constant(value='Progress bars, columns, styled logging handler, tracebacks, etc...')], keywords=[])), Return(value=Name(id='table', ctx=Load()))], decorator_list=[], returns=Name(id='Table', ctx=Load())), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Assign(targets=[Name(id='console', ctx=Store())], value=Call(func=Name(id='Console', ctx=Load()), args=[], keywords=[keyword(arg='file', value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='StringIO', ctx=Load()), args=[], keywords=[])), keyword(arg='force_terminal', value=Constant(value=True))])), Assign(targets=[Name(id='test_card', ctx=Store())], value=Call(func=Name(id='make_test_card', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='start', ctx=Store())], value=Call(func=Name(id='process_time', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='console', ctx=Load()), attr='print', ctx=Load()), args=[Name(id='test_card', ctx=Load())], keywords=[])), Assign(targets=[Name(id='pre_cache_taken', ctx=Store())], value=Call(func=Name(id='round', ctx=Load()), args=[BinOp(left=BinOp(left=Call(func=Name(id='process_time', ctx=Load()), args=[], keywords=[]), op=Sub(), right=Name(id='start', ctx=Load())), op=Mult(), right=Constant(value=1000.0)), Constant(value=1)], keywords=[])), Assign(targets=[Attribute(value=Name(id='console', ctx=Load()), attr='file', ctx=Store())], value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='StringIO', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='start', ctx=Store())], value=Call(func=Name(id='process_time', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='console', ctx=Load()), attr='print', ctx=Load()), args=[Name(id='test_card', ctx=Load())], keywords=[])), Assign(targets=[Name(id='taken', ctx=Store())], value=Call(func=Name(id='round', ctx=Load()), args=[BinOp(left=BinOp(left=Call(func=Name(id='process_time', ctx=Load()), args=[], keywords=[]), op=Sub(), right=Name(id='start', ctx=Load())), op=Mult(), right=Constant(value=1000.0)), Constant(value=1)], keywords=[])), Assign(targets=[Name(id='c', ctx=Store())], value=Call(func=Name(id='Console', ctx=Load()), args=[], keywords=[keyword(arg='record', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Name(id='c', ctx=Load()), attr='print', ctx=Load()), args=[Name(id='test_card', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[JoinedStr(values=[Constant(value='rendered in '), FormattedValue(value=Name(id='pre_cache_taken', ctx=Load()), conversion=-1), Constant(value='ms (cold cache)')])], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[JoinedStr(values=[Constant(value='rendered in '), FormattedValue(value=Name(id='taken', ctx=Load()), conversion=-1), Constant(value='ms (warm cache)')])], keywords=[])), ImportFrom(module='pip._vendor.rich.panel', names=[alias(name='Panel')], level=0), Assign(targets=[Name(id='console', ctx=Store())], value=Call(func=Name(id='Console', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='sponsor_message', ctx=Store())], value=Call(func=Attribute(value=Name(id='Table', ctx=Load()), attr='grid', ctx=Load()), args=[], keywords=[keyword(arg='padding', value=Constant(value=1))])), Expr(value=Call(func=Attribute(value=Name(id='sponsor_message', ctx=Load()), attr='add_column', ctx=Load()), args=[], keywords=[keyword(arg='style', value=Constant(value='green')), keyword(arg='justify', value=Constant(value='right'))])), Expr(value=Call(func=Attribute(value=Name(id='sponsor_message', ctx=Load()), attr='add_column', ctx=Load()), args=[], keywords=[keyword(arg='no_wrap', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Name(id='sponsor_message', ctx=Load()), attr='add_row', ctx=Load()), args=[Constant(value='Textualize'), Constant(value='[u blue link=https://github.com/textualize]https://github.com/textualize')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='sponsor_message', ctx=Load()), attr='add_row', ctx=Load()), args=[Constant(value='Twitter'), Constant(value='[u blue link=https://twitter.com/willmcgugan]https://twitter.com/willmcgugan')], keywords=[])), Assign(targets=[Name(id='intro_message', ctx=Store())], value=Call(func=Attribute(value=Name(id='Text', ctx=Load()), attr='from_markup', ctx=Load()), args=[Constant(value='We hope you enjoy using Rich!\n\nRich is maintained with [red]:heart:[/] by [link=https://www.textualize.io]Textualize.io[/]\n\n- Will McGugan')], keywords=[])), Assign(targets=[Name(id='message', ctx=Store())], value=Call(func=Attribute(value=Name(id='Table', ctx=Load()), attr='grid', ctx=Load()), args=[], keywords=[keyword(arg='padding', value=Constant(value=2))])), Expr(value=Call(func=Attribute(value=Name(id='message', ctx=Load()), attr='add_column', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='message', ctx=Load()), attr='add_column', ctx=Load()), args=[], keywords=[keyword(arg='no_wrap', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Name(id='message', ctx=Load()), attr='add_row', ctx=Load()), args=[Name(id='intro_message', ctx=Load()), Name(id='sponsor_message', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='console', ctx=Load()), attr='print', ctx=Load()), args=[Call(func=Attribute(value=Name(id='Panel', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[keyword(arg='box', value=Attribute(value=Name(id='box', ctx=Load()), attr='ROUNDED', ctx=Load())), keyword(arg='padding', value=Tuple(elts=[Constant(value=1), Constant(value=2)], ctx=Load())), keyword(arg='title', value=Constant(value='[b red]Thanks for trying out Rich!')), keyword(arg='border_style', value=Constant(value='bright_blue'))])], keywords=[keyword(arg='justify', value=Constant(value='center'))]))], orelse=[])], type_ignores=[])