Module(body=[Expr(value=Constant(value='\n    pygments.filter\n    ~~~~~~~~~~~~~~~\n\n    Module that implements the default filter.\n\n    :copyright: Copyright 2006-2023 by the Pygments team, see AUTHORS.\n    :license: BSD, see LICENSE for details.\n')), FunctionDef(name='apply_filters', args=arguments(posonlyargs=[], args=[arg(arg='stream'), arg(arg='filters'), arg(arg='lexer')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value="\n    Use this method to apply an iterable of filters to\n    a stream. If lexer is given it's forwarded to the\n    filter, otherwise the filter receives `None`.\n    ")), FunctionDef(name='_apply', args=arguments(posonlyargs=[], args=[arg(arg='filter_'), arg(arg='stream')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='filter_', ctx=Load()), attr='filter', ctx=Load()), args=[Name(id='lexer', ctx=Load()), Name(id='stream', ctx=Load())], keywords=[])))], decorator_list=[]), For(target=Name(id='filter_', ctx=Store()), iter=Name(id='filters', ctx=Load()), body=[Assign(targets=[Name(id='stream', ctx=Store())], value=Call(func=Name(id='_apply', ctx=Load()), args=[Name(id='filter_', ctx=Load()), Name(id='stream', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='stream', ctx=Load()))], decorator_list=[]), FunctionDef(name='simplefilter', args=arguments(posonlyargs=[], args=[arg(arg='f')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Decorator that converts a function into a filter::\n\n        @simplefilter\n        def lowercase(self, lexer, stream, options):\n            for ttype, value in stream:\n                yield ttype, value.lower()\n    ')), Return(value=Call(func=Name(id='type', ctx=Load()), args=[Attribute(value=Name(id='f', ctx=Load()), attr='__name__', ctx=Load()), Tuple(elts=[Name(id='FunctionFilter', ctx=Load())], ctx=Load()), Dict(keys=[Constant(value='__module__'), Constant(value='__doc__'), Constant(value='function')], values=[Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='f', ctx=Load()), Constant(value='__module__')], keywords=[]), Attribute(value=Name(id='f', ctx=Load()), attr='__doc__', ctx=Load()), Name(id='f', ctx=Load())])], keywords=[]))], decorator_list=[]), ClassDef(name='Filter', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    Default filter. Subclass this class or use the `simplefilter`\n    decorator to create own filters.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='options'), defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='options', ctx=Store())], value=Name(id='options', ctx=Load()))], decorator_list=[]), FunctionDef(name='filter', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='lexer'), arg(arg='stream')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Call(func=Name(id='NotImplementedError', ctx=Load()), args=[], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='FunctionFilter', bases=[Name(id='Filter', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    Abstract class used by `simplefilter` to create simple\n    function filters on the fly. The `simplefilter` decorator\n    automatically creates subclasses of this class for\n    functions passed to it.\n    ')), Assign(targets=[Name(id='function', ctx=Store())], value=Constant(value=None)), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='options'), defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Constant(value='function')], keywords=[])), body=[Raise(exc=Call(func=Name(id='TypeError', ctx=Load()), args=[BinOp(left=Constant(value='%r used without bound function'), op=Mod(), right=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__class__', ctx=Load()), attr='__name__', ctx=Load()))], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='Filter', ctx=Load()), attr='__init__', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[keyword(value=Name(id='options', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='filter', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='lexer'), arg(arg='stream')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='function', ctx=Load()), args=[Name(id='lexer', ctx=Load()), Name(id='stream', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='options', ctx=Load())], keywords=[])))], decorator_list=[])], decorator_list=[])], type_ignores=[])