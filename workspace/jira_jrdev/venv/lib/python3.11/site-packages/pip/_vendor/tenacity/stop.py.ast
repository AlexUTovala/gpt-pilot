Module(body=[Import(names=[alias(name='abc')]), Import(names=[alias(name='typing')]), ImportFrom(module='pip._vendor.tenacity', names=[alias(name='_utils')], level=0), If(test=Attribute(value=Name(id='typing', ctx=Load()), attr='TYPE_CHECKING', ctx=Load()), body=[Import(names=[alias(name='threading')]), ImportFrom(module='pip._vendor.tenacity', names=[alias(name='RetryCallState')], level=0)], orelse=[]), ClassDef(name='stop_base', bases=[Attribute(value=Name(id='abc', ctx=Load()), attr='ABC', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Abstract base class for stop strategies.')), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[Attribute(value=Name(id='abc', ctx=Load()), attr='abstractmethod', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='__and__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other', annotation=Constant(value='stop_base'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='stop_all', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='other', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value='stop_all')), FunctionDef(name='__or__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other', annotation=Constant(value='stop_base'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='stop_any', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='other', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value='stop_any'))], decorator_list=[]), Assign(targets=[Name(id='StopBaseT', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Union', ctx=Load()), slice=Tuple(elts=[Name(id='stop_base', ctx=Load()), Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Constant(value='RetryCallState')], ctx=Load()), Name(id='bool', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())), ClassDef(name='stop_any', bases=[Name(id='stop_base', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Stop if any of the stop condition is valid.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='stops', annotation=Name(id='stop_base', ctx=Load())), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='stops', ctx=Store())], value=Name(id='stops', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='any', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='x', ctx=Load()), args=[Name(id='retry_state', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='stops', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], decorator_list=[]), ClassDef(name='stop_all', bases=[Name(id='stop_base', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Stop if all the stop conditions are valid.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='stops', annotation=Name(id='stop_base', ctx=Load())), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='stops', ctx=Store())], value=Name(id='stops', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='all', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='x', ctx=Load()), args=[Name(id='retry_state', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='stops', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], decorator_list=[]), ClassDef(name='_stop_never', bases=[Name(id='stop_base', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Never stop.')), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=False))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='stop_never', ctx=Store())], value=Call(func=Name(id='_stop_never', ctx=Load()), args=[], keywords=[])), ClassDef(name='stop_when_event_set', bases=[Name(id='stop_base', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Stop when the given event is set.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='event', annotation=Constant(value='threading.Event'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='event', ctx=Store())], value=Name(id='event', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='event', ctx=Load()), attr='is_set', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], decorator_list=[]), ClassDef(name='stop_after_attempt', bases=[Name(id='stop_base', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Stop when the previous attempt >= max_attempt.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='max_attempt_number', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='max_attempt_number', ctx=Store())], value=Name(id='max_attempt_number', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Attribute(value=Name(id='retry_state', ctx=Load()), attr='attempt_number', ctx=Load()), ops=[GtE()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='max_attempt_number', ctx=Load())]))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], decorator_list=[]), ClassDef(name='stop_after_delay', bases=[Name(id='stop_base', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Stop when the time from the first attempt >= limit.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='max_delay', annotation=Attribute(value=Name(id='_utils', ctx=Load()), attr='time_unit_type', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='max_delay', ctx=Store())], value=Call(func=Attribute(value=Name(id='_utils', ctx=Load()), attr='to_seconds', ctx=Load()), args=[Name(id='max_delay', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='retry_state', ctx=Load()), attr='seconds_since_start', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='__call__() called but seconds_since_start is not set')], keywords=[]))], orelse=[]), Return(value=Compare(left=Attribute(value=Name(id='retry_state', ctx=Load()), attr='seconds_since_start', ctx=Load()), ops=[GtE()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='max_delay', ctx=Load())]))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], decorator_list=[])], type_ignores=[])