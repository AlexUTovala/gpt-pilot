Module(body=[Expr(value=Constant(value='\n    pygments.formatters.irc\n    ~~~~~~~~~~~~~~~~~~~~~~~\n\n    Formatter for IRC output\n\n    :copyright: Copyright 2006-2023 by the Pygments team, see AUTHORS.\n    :license: BSD, see LICENSE for details.\n')), ImportFrom(module='pip._vendor.pygments.formatter', names=[alias(name='Formatter')], level=0), ImportFrom(module='pip._vendor.pygments.token', names=[alias(name='Keyword'), alias(name='Name'), alias(name='Comment'), alias(name='String'), alias(name='Error'), alias(name='Number'), alias(name='Operator'), alias(name='Generic'), alias(name='Token'), alias(name='Whitespace')], level=0), ImportFrom(module='pip._vendor.pygments.util', names=[alias(name='get_choice_opt')], level=0), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='IRCFormatter')], ctx=Load())), Assign(targets=[Name(id='IRC_COLORS', ctx=Store())], value=Dict(keys=[Name(id='Token', ctx=Load()), Name(id='Whitespace', ctx=Load()), Name(id='Comment', ctx=Load()), Attribute(value=Name(id='Comment', ctx=Load()), attr='Preproc', ctx=Load()), Name(id='Keyword', ctx=Load()), Attribute(value=Name(id='Keyword', ctx=Load()), attr='Type', ctx=Load()), Attribute(value=Name(id='Operator', ctx=Load()), attr='Word', ctx=Load()), Attribute(value=Name(id='Name', ctx=Load()), attr='Builtin', ctx=Load()), Attribute(value=Name(id='Name', ctx=Load()), attr='Function', ctx=Load()), Attribute(value=Name(id='Name', ctx=Load()), attr='Namespace', ctx=Load()), Attribute(value=Name(id='Name', ctx=Load()), attr='Class', ctx=Load()), Attribute(value=Name(id='Name', ctx=Load()), attr='Exception', ctx=Load()), Attribute(value=Name(id='Name', ctx=Load()), attr='Decorator', ctx=Load()), Attribute(value=Name(id='Name', ctx=Load()), attr='Variable', ctx=Load()), Attribute(value=Name(id='Name', ctx=Load()), attr='Constant', ctx=Load()), Attribute(value=Name(id='Name', ctx=Load()), attr='Attribute', ctx=Load()), Attribute(value=Name(id='Name', ctx=Load()), attr='Tag', ctx=Load()), Name(id='String', ctx=Load()), Name(id='Number', ctx=Load()), Attribute(value=Name(id='Generic', ctx=Load()), attr='Deleted', ctx=Load()), Attribute(value=Name(id='Generic', ctx=Load()), attr='Inserted', ctx=Load()), Attribute(value=Name(id='Generic', ctx=Load()), attr='Heading', ctx=Load()), Attribute(value=Name(id='Generic', ctx=Load()), attr='Subheading', ctx=Load()), Attribute(value=Name(id='Generic', ctx=Load()), attr='Error', ctx=Load()), Name(id='Error', ctx=Load())], values=[Tuple(elts=[Constant(value=''), Constant(value='')], ctx=Load()), Tuple(elts=[Constant(value='gray'), Constant(value='brightblack')], ctx=Load()), Tuple(elts=[Constant(value='gray'), Constant(value='brightblack')], ctx=Load()), Tuple(elts=[Constant(value='cyan'), Constant(value='brightcyan')], ctx=Load()), Tuple(elts=[Constant(value='blue'), Constant(value='brightblue')], ctx=Load()), Tuple(elts=[Constant(value='cyan'), Constant(value='brightcyan')], ctx=Load()), Tuple(elts=[Constant(value='magenta'), Constant(value='brightcyan')], ctx=Load()), Tuple(elts=[Constant(value='cyan'), Constant(value='brightcyan')], ctx=Load()), Tuple(elts=[Constant(value='green'), Constant(value='brightgreen')], ctx=Load()), Tuple(elts=[Constant(value='_cyan_'), Constant(value='_brightcyan_')], ctx=Load()), Tuple(elts=[Constant(value='_green_'), Constant(value='_brightgreen_')], ctx=Load()), Tuple(elts=[Constant(value='cyan'), Constant(value='brightcyan')], ctx=Load()), Tuple(elts=[Constant(value='brightblack'), Constant(value='gray')], ctx=Load()), Tuple(elts=[Constant(value='red'), Constant(value='brightred')], ctx=Load()), Tuple(elts=[Constant(value='red'), Constant(value='brightred')], ctx=Load()), Tuple(elts=[Constant(value='cyan'), Constant(value='brightcyan')], ctx=Load()), Tuple(elts=[Constant(value='brightblue'), Constant(value='brightblue')], ctx=Load()), Tuple(elts=[Constant(value='yellow'), Constant(value='yellow')], ctx=Load()), Tuple(elts=[Constant(value='blue'), Constant(value='brightblue')], ctx=Load()), Tuple(elts=[Constant(value='brightred'), Constant(value='brightred')], ctx=Load()), Tuple(elts=[Constant(value='green'), Constant(value='brightgreen')], ctx=Load()), Tuple(elts=[Constant(value='**'), Constant(value='**')], ctx=Load()), Tuple(elts=[Constant(value='*magenta*'), Constant(value='*brightmagenta*')], ctx=Load()), Tuple(elts=[Constant(value='brightred'), Constant(value='brightred')], ctx=Load()), Tuple(elts=[Constant(value='_brightred_'), Constant(value='_brightred_')], ctx=Load())])), Assign(targets=[Name(id='IRC_COLOR_MAP', ctx=Store())], value=Dict(keys=[Constant(value='white'), Constant(value='black'), Constant(value='blue'), Constant(value='brightgreen'), Constant(value='brightred'), Constant(value='yellow'), Constant(value='magenta'), Constant(value='orange'), Constant(value='green'), Constant(value='brightyellow'), Constant(value='lightgreen'), Constant(value='brightcyan'), Constant(value='cyan'), Constant(value='lightblue'), Constant(value='red'), Constant(value='brightblue'), Constant(value='brightmagenta'), Constant(value='brightblack'), Constant(value='gray')], values=[Constant(value=0), Constant(value=1), Constant(value=2), Constant(value=3), Constant(value=4), Constant(value=5), Constant(value=6), Constant(value=7), Constant(value=7), Constant(value=8), Constant(value=9), Constant(value=9), Constant(value=10), Constant(value=11), Constant(value=11), Constant(value=12), Constant(value=13), Constant(value=14), Constant(value=15)])), FunctionDef(name='ircformat', args=arguments(posonlyargs=[], args=[arg(arg='color'), arg(arg='text')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='color', ctx=Load())], keywords=[]), ops=[Lt()], comparators=[Constant(value=1)]), body=[Return(value=Name(id='text', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='add', ctx=Store()), Name(id='sub', ctx=Store())], value=Constant(value='')), If(test=Compare(left=Constant(value='_'), ops=[In()], comparators=[Name(id='color', ctx=Load())]), body=[AugAssign(target=Name(id='add', ctx=Store()), op=Add(), value=Constant(value='\x1d')), Assign(targets=[Name(id='sub', ctx=Store())], value=BinOp(left=Constant(value='\x1d'), op=Add(), right=Name(id='sub', ctx=Load()))), Assign(targets=[Name(id='color', ctx=Store())], value=Call(func=Attribute(value=Name(id='color', ctx=Load()), attr='strip', ctx=Load()), args=[Constant(value='_')], keywords=[]))], orelse=[]), If(test=Compare(left=Constant(value='*'), ops=[In()], comparators=[Name(id='color', ctx=Load())]), body=[AugAssign(target=Name(id='add', ctx=Store()), op=Add(), value=Constant(value='\x02')), Assign(targets=[Name(id='sub', ctx=Store())], value=BinOp(left=Constant(value='\x02'), op=Add(), right=Name(id='sub', ctx=Load()))), Assign(targets=[Name(id='color', ctx=Store())], value=Call(func=Attribute(value=Name(id='color', ctx=Load()), attr='strip', ctx=Load()), args=[Constant(value='*')], keywords=[]))], orelse=[]), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='color', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=0)]), body=[AugAssign(target=Name(id='add', ctx=Store()), op=Add(), value=BinOp(left=Constant(value='\x03'), op=Add(), right=Call(func=Attribute(value=Call(func=Name(id='str', ctx=Load()), args=[Subscript(value=Name(id='IRC_COLOR_MAP', ctx=Load()), slice=Name(id='color', ctx=Load()), ctx=Load())], keywords=[]), attr='zfill', ctx=Load()), args=[Constant(value=2)], keywords=[]))), Assign(targets=[Name(id='sub', ctx=Store())], value=BinOp(left=Constant(value='\x03'), op=Add(), right=Name(id='sub', ctx=Load())))], orelse=[]), Return(value=BinOp(left=BinOp(left=Name(id='add', ctx=Load()), op=Add(), right=Name(id='text', ctx=Load())), op=Add(), right=Name(id='sub', ctx=Load()))), Return(value=BinOp(left=BinOp(left=BinOp(left=BinOp(left=BinOp(left=BinOp(left=Constant(value='<'), op=Add(), right=Name(id='add', ctx=Load())), op=Add(), right=Constant(value='>')), op=Add(), right=Name(id='text', ctx=Load())), op=Add(), right=Constant(value='</')), op=Add(), right=Name(id='sub', ctx=Load())), op=Add(), right=Constant(value='>')))], decorator_list=[]), ClassDef(name='IRCFormatter', bases=[Name(id='Formatter', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    Format tokens with IRC color sequences\n\n    The `get_style_defs()` method doesn\'t do anything special since there is\n    no support for common styles.\n\n    Options accepted:\n\n    `bg`\n        Set to ``"light"`` or ``"dark"`` depending on the terminal\'s background\n        (default: ``"light"``).\n\n    `colorscheme`\n        A dictionary mapping token types to (lightbg, darkbg) color names or\n        ``None`` (default: ``None`` = use builtin colorscheme).\n\n    `linenos`\n        Set to ``True`` to have line numbers in the output as well\n        (default: ``False`` = no line numbers).\n    ')), Assign(targets=[Name(id='name', ctx=Store())], value=Constant(value='IRC')), Assign(targets=[Name(id='aliases', ctx=Store())], value=List(elts=[Constant(value='irc'), Constant(value='IRC')], ctx=Load())), Assign(targets=[Name(id='filenames', ctx=Store())], value=List(elts=[], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='options'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='Formatter', ctx=Load()), attr='__init__', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[keyword(value=Name(id='options', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='darkbg', ctx=Store())], value=Compare(left=Call(func=Name(id='get_choice_opt', ctx=Load()), args=[Name(id='options', ctx=Load()), Constant(value='bg'), List(elts=[Constant(value='light'), Constant(value='dark')], ctx=Load()), Constant(value='light')], keywords=[]), ops=[Eq()], comparators=[Constant(value='dark')])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='colorscheme', ctx=Store())], value=BoolOp(op=Or(), values=[Call(func=Attribute(value=Name(id='options', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='colorscheme'), Constant(value=None)], keywords=[]), Name(id='IRC_COLORS', ctx=Load())])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='linenos', ctx=Store())], value=Call(func=Attribute(value=Name(id='options', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='linenos'), Constant(value=False)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_lineno', ctx=Store())], value=Constant(value=0))], decorator_list=[]), FunctionDef(name='_write_lineno', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='outfile')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='linenos', ctx=Load()), body=[AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_lineno', ctx=Store()), op=Add(), value=Constant(value=1)), Expr(value=Call(func=Attribute(value=Name(id='outfile', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value='%04d: '), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_lineno', ctx=Load()))], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='format_unencoded', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='tokensource'), arg(arg='outfile')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_write_lineno', ctx=Load()), args=[Name(id='outfile', ctx=Load())], keywords=[])), For(target=Tuple(elts=[Name(id='ttype', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Name(id='tokensource', ctx=Load()), body=[Assign(targets=[Name(id='color', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='colorscheme', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='ttype', ctx=Load())], keywords=[])), While(test=Compare(left=Name(id='color', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='ttype', ctx=Store())], value=Subscript(value=Name(id='ttype', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load())), Assign(targets=[Name(id='color', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='colorscheme', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='ttype', ctx=Load())], keywords=[]))], orelse=[]), If(test=Name(id='color', ctx=Load()), body=[Assign(targets=[Name(id='color', ctx=Store())], value=Subscript(value=Name(id='color', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='darkbg', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='spl', ctx=Store())], value=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='\n')], keywords=[])), For(target=Name(id='line', ctx=Store()), iter=Subscript(value=Name(id='spl', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()), body=[If(test=Name(id='line', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='outfile', ctx=Load()), attr='write', ctx=Load()), args=[Call(func=Name(id='ircformat', ctx=Load()), args=[Name(id='color', ctx=Load()), Name(id='line', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='outfile', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='\n')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_write_lineno', ctx=Load()), args=[Name(id='outfile', ctx=Load())], keywords=[]))], orelse=[]), If(test=Subscript(value=Name(id='spl', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='outfile', ctx=Load()), attr='write', ctx=Load()), args=[Call(func=Name(id='ircformat', ctx=Load()), args=[Name(id='color', ctx=Load()), Subscript(value=Name(id='spl', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='outfile', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))])], orelse=[])], decorator_list=[])], decorator_list=[])], type_ignores=[])