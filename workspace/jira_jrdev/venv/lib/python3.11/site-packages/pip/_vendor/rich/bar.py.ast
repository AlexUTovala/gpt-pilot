Module(body=[ImportFrom(module='typing', names=[alias(name='Optional'), alias(name='Union')], level=0), ImportFrom(module='color', names=[alias(name='Color')], level=1), ImportFrom(module='console', names=[alias(name='Console'), alias(name='ConsoleOptions'), alias(name='RenderResult')], level=1), ImportFrom(module='jupyter', names=[alias(name='JupyterMixin')], level=1), ImportFrom(module='measure', names=[alias(name='Measurement')], level=1), ImportFrom(module='segment', names=[alias(name='Segment')], level=1), ImportFrom(module='style', names=[alias(name='Style')], level=1), Assign(targets=[Name(id='BEGIN_BLOCK_ELEMENTS', ctx=Store())], value=List(elts=[Constant(value='█'), Constant(value='█'), Constant(value='█'), Constant(value='▐'), Constant(value='▐'), Constant(value='▐'), Constant(value='▕'), Constant(value='▕')], ctx=Load())), Assign(targets=[Name(id='END_BLOCK_ELEMENTS', ctx=Store())], value=List(elts=[Constant(value=' '), Constant(value='▏'), Constant(value='▎'), Constant(value='▍'), Constant(value='▌'), Constant(value='▋'), Constant(value='▊'), Constant(value='▉')], ctx=Load())), Assign(targets=[Name(id='FULL_BLOCK', ctx=Store())], value=Constant(value='█')), ClassDef(name='Bar', bases=[Name(id='JupyterMixin', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Renders a solid block bar.\n\n    Args:\n        size (float): Value for the end of the bar.\n        begin (float): Begin point (between 0 and size, inclusive).\n        end (float): End point (between 0 and size, inclusive).\n        width (int, optional): Width of the bar, or ``None`` for maximum width. Defaults to None.\n        color (Union[Color, str], optional): Color of the bar. Defaults to "default".\n        bgcolor (Union[Color, str], optional): Color of bar background. Defaults to "default".\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='size', annotation=Name(id='float', ctx=Load())), arg(arg='begin', annotation=Name(id='float', ctx=Load())), arg(arg='end', annotation=Name(id='float', ctx=Load()))], kwonlyargs=[arg(arg='width', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='int', ctx=Load()), ctx=Load())), arg(arg='color', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='Color', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load())), arg(arg='bgcolor', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='Color', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load()))], kw_defaults=[Constant(value=None), Constant(value='default'), Constant(value='default')], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='size', ctx=Store())], value=Name(id='size', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='begin', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Name(id='begin', ctx=Load()), Constant(value=0)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='end', ctx=Store())], value=Call(func=Name(id='min', ctx=Load()), args=[Name(id='end', ctx=Load()), Name(id='size', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='width', ctx=Store())], value=Name(id='width', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Store())], value=Call(func=Name(id='Style', ctx=Load()), args=[], keywords=[keyword(arg='color', value=Name(id='color', ctx=Load())), keyword(arg='bgcolor', value=Name(id='bgcolor', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=JoinedStr(values=[Constant(value='Bar('), FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='size', ctx=Load()), conversion=-1), Constant(value=', '), FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='begin', ctx=Load()), conversion=-1), Constant(value=', '), FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='end', ctx=Load()), conversion=-1), Constant(value=')')]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='__rich_console__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='console', annotation=Name(id='Console', ctx=Load())), arg(arg='options', annotation=Name(id='ConsoleOptions', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='width', ctx=Store())], value=Call(func=Name(id='min', ctx=Load()), args=[IfExp(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='width', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Attribute(value=Name(id='self', ctx=Load()), attr='width', ctx=Load()), orelse=Attribute(value=Name(id='options', ctx=Load()), attr='max_width', ctx=Load())), Attribute(value=Name(id='options', ctx=Load()), attr='max_width', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='begin', ctx=Load()), ops=[GtE()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='end', ctx=Load())]), body=[Expr(value=Yield(value=Call(func=Name(id='Segment', ctx=Load()), args=[BinOp(left=Constant(value=' '), op=Mult(), right=Name(id='width', ctx=Load())), Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Load())], keywords=[]))), Expr(value=Yield(value=Call(func=Attribute(value=Name(id='Segment', ctx=Load()), attr='line', ctx=Load()), args=[], keywords=[]))), Return()], orelse=[]), Assign(targets=[Name(id='prefix_complete_eights', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=Name(id='width', ctx=Load()), op=Mult(), right=Constant(value=8)), op=Mult(), right=Attribute(value=Name(id='self', ctx=Load()), attr='begin', ctx=Load())), op=Div(), right=Attribute(value=Name(id='self', ctx=Load()), attr='size', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='prefix_bar_count', ctx=Store())], value=BinOp(left=Name(id='prefix_complete_eights', ctx=Load()), op=FloorDiv(), right=Constant(value=8))), Assign(targets=[Name(id='prefix_eights_count', ctx=Store())], value=BinOp(left=Name(id='prefix_complete_eights', ctx=Load()), op=Mod(), right=Constant(value=8))), Assign(targets=[Name(id='body_complete_eights', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=Name(id='width', ctx=Load()), op=Mult(), right=Constant(value=8)), op=Mult(), right=Attribute(value=Name(id='self', ctx=Load()), attr='end', ctx=Load())), op=Div(), right=Attribute(value=Name(id='self', ctx=Load()), attr='size', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='body_bar_count', ctx=Store())], value=BinOp(left=Name(id='body_complete_eights', ctx=Load()), op=FloorDiv(), right=Constant(value=8))), Assign(targets=[Name(id='body_eights_count', ctx=Store())], value=BinOp(left=Name(id='body_complete_eights', ctx=Load()), op=Mod(), right=Constant(value=8))), Assign(targets=[Name(id='prefix', ctx=Store())], value=BinOp(left=Constant(value=' '), op=Mult(), right=Name(id='prefix_bar_count', ctx=Load()))), If(test=Name(id='prefix_eights_count', ctx=Load()), body=[AugAssign(target=Name(id='prefix', ctx=Store()), op=Add(), value=Subscript(value=Name(id='BEGIN_BLOCK_ELEMENTS', ctx=Load()), slice=Name(id='prefix_eights_count', ctx=Load()), ctx=Load()))], orelse=[]), Assign(targets=[Name(id='body', ctx=Store())], value=BinOp(left=Name(id='FULL_BLOCK', ctx=Load()), op=Mult(), right=Name(id='body_bar_count', ctx=Load()))), If(test=Name(id='body_eights_count', ctx=Load()), body=[AugAssign(target=Name(id='body', ctx=Store()), op=Add(), value=Subscript(value=Name(id='END_BLOCK_ELEMENTS', ctx=Load()), slice=Name(id='body_eights_count', ctx=Load()), ctx=Load()))], orelse=[]), Assign(targets=[Name(id='suffix', ctx=Store())], value=BinOp(left=Constant(value=' '), op=Mult(), right=BinOp(left=Name(id='width', ctx=Load()), op=Sub(), right=Call(func=Name(id='len', ctx=Load()), args=[Name(id='body', ctx=Load())], keywords=[])))), Expr(value=Yield(value=Call(func=Name(id='Segment', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='prefix', ctx=Load()), op=Add(), right=Subscript(value=Name(id='body', ctx=Load()), slice=Slice(lower=Call(func=Name(id='len', ctx=Load()), args=[Name(id='prefix', ctx=Load())], keywords=[])), ctx=Load())), op=Add(), right=Name(id='suffix', ctx=Load())), Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Load())], keywords=[]))), Expr(value=Yield(value=Call(func=Attribute(value=Name(id='Segment', ctx=Load()), attr='line', ctx=Load()), args=[], keywords=[])))], decorator_list=[], returns=Name(id='RenderResult', ctx=Load())), FunctionDef(name='__rich_measure__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='console', annotation=Name(id='Console', ctx=Load())), arg(arg='options', annotation=Name(id='ConsoleOptions', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=IfExp(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='width', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Call(func=Name(id='Measurement', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='width', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='width', ctx=Load())], keywords=[]), orelse=Call(func=Name(id='Measurement', ctx=Load()), args=[Constant(value=4), Attribute(value=Name(id='options', ctx=Load()), attr='max_width', ctx=Load())], keywords=[])))], decorator_list=[], returns=Name(id='Measurement', ctx=Load()))], decorator_list=[])], type_ignores=[])