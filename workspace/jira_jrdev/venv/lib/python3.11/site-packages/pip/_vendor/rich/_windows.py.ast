Module(body=[Import(names=[alias(name='sys')]), ImportFrom(module='dataclasses', names=[alias(name='dataclass')], level=0), ClassDef(name='WindowsConsoleFeatures', bases=[], keywords=[], body=[Expr(value=Constant(value='Windows features available.')), AnnAssign(target=Name(id='vt', ctx=Store()), annotation=Name(id='bool', ctx=Load()), value=Constant(value=False), simple=1), Expr(value=Constant(value='The console supports VT codes.')), AnnAssign(target=Name(id='truecolor', ctx=Store()), annotation=Name(id='bool', ctx=Load()), value=Constant(value=False), simple=1), Expr(value=Constant(value='The console supports truecolor.'))], decorator_list=[Name(id='dataclass', ctx=Load())]), Try(body=[Import(names=[alias(name='ctypes')]), ImportFrom(module='ctypes', names=[alias(name='LibraryLoader')], level=0), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), ops=[Eq()], comparators=[Constant(value='win32')]), body=[Assign(targets=[Name(id='windll', ctx=Store())], value=Call(func=Name(id='LibraryLoader', ctx=Load()), args=[Attribute(value=Name(id='ctypes', ctx=Load()), attr='WinDLL', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='windll', ctx=Store())], value=Constant(value=None)), Raise(exc=Call(func=Name(id='ImportError', ctx=Load()), args=[Constant(value='Not windows')], keywords=[]))]), ImportFrom(module='pip._vendor.rich._win32_console', names=[alias(name='ENABLE_VIRTUAL_TERMINAL_PROCESSING'), alias(name='GetConsoleMode'), alias(name='GetStdHandle'), alias(name='LegacyWindowsError')], level=0)], handlers=[ExceptHandler(type=Tuple(elts=[Name(id='AttributeError', ctx=Load()), Name(id='ImportError', ctx=Load()), Name(id='ValueError', ctx=Load())], ctx=Load()), body=[FunctionDef(name='get_windows_console_features', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='features', ctx=Store())], value=Call(func=Name(id='WindowsConsoleFeatures', ctx=Load()), args=[], keywords=[])), Return(value=Name(id='features', ctx=Load()))], decorator_list=[], returns=Name(id='WindowsConsoleFeatures', ctx=Load()))])], orelse=[FunctionDef(name='get_windows_console_features', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get windows console features.\n\n        Returns:\n            WindowsConsoleFeatures: An instance of WindowsConsoleFeatures.\n        ')), Assign(targets=[Name(id='handle', ctx=Store())], value=Call(func=Name(id='GetStdHandle', ctx=Load()), args=[], keywords=[])), Try(body=[Assign(targets=[Name(id='console_mode', ctx=Store())], value=Call(func=Name(id='GetConsoleMode', ctx=Load()), args=[Name(id='handle', ctx=Load())], keywords=[])), Assign(targets=[Name(id='success', ctx=Store())], value=Constant(value=True))], handlers=[ExceptHandler(type=Name(id='LegacyWindowsError', ctx=Load()), body=[Assign(targets=[Name(id='console_mode', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='success', ctx=Store())], value=Constant(value=False))])], orelse=[], finalbody=[]), Assign(targets=[Name(id='vt', ctx=Store())], value=Call(func=Name(id='bool', ctx=Load()), args=[BoolOp(op=And(), values=[Name(id='success', ctx=Load()), BinOp(left=Name(id='console_mode', ctx=Load()), op=BitAnd(), right=Name(id='ENABLE_VIRTUAL_TERMINAL_PROCESSING', ctx=Load()))])], keywords=[])), Assign(targets=[Name(id='truecolor', ctx=Store())], value=Constant(value=False)), If(test=Name(id='vt', ctx=Load()), body=[Assign(targets=[Name(id='win_version', ctx=Store())], value=Call(func=Attribute(value=Name(id='sys', ctx=Load()), attr='getwindowsversion', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='truecolor', ctx=Store())], value=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='win_version', ctx=Load()), attr='major', ctx=Load()), ops=[Gt()], comparators=[Constant(value=10)]), BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='win_version', ctx=Load()), attr='major', ctx=Load()), ops=[Eq()], comparators=[Constant(value=10)]), Compare(left=Attribute(value=Name(id='win_version', ctx=Load()), attr='build', ctx=Load()), ops=[GtE()], comparators=[Constant(value=15063)])])]))], orelse=[]), Assign(targets=[Name(id='features', ctx=Store())], value=Call(func=Name(id='WindowsConsoleFeatures', ctx=Load()), args=[], keywords=[keyword(arg='vt', value=Name(id='vt', ctx=Load())), keyword(arg='truecolor', value=Name(id='truecolor', ctx=Load()))])), Return(value=Name(id='features', ctx=Load()))], decorator_list=[], returns=Name(id='WindowsConsoleFeatures', ctx=Load()))], finalbody=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Import(names=[alias(name='platform')]), Assign(targets=[Name(id='features', ctx=Store())], value=Call(func=Name(id='get_windows_console_features', ctx=Load()), args=[], keywords=[])), ImportFrom(module='pip._vendor.rich', names=[alias(name='print')], level=0), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[JoinedStr(values=[Constant(value='platform="'), FormattedValue(value=Call(func=Attribute(value=Name(id='platform', ctx=Load()), attr='system', ctx=Load()), args=[], keywords=[]), conversion=-1), Constant(value='"')])], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Name(id='features', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], type_ignores=[])