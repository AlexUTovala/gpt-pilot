Module(body=[Import(names=[alias(name='sys')]), ImportFrom(module='threading', names=[alias(name='Event'), alias(name='RLock'), alias(name='Thread')], level=0), ImportFrom(module='types', names=[alias(name='TracebackType')], level=0), ImportFrom(module='typing', names=[alias(name='IO'), alias(name='Any'), alias(name='Callable'), alias(name='List'), alias(name='Optional'), alias(name='TextIO'), alias(name='Type'), alias(name='cast')], level=0), ImportFrom(names=[alias(name='get_console')], level=1), ImportFrom(module='console', names=[alias(name='Console'), alias(name='ConsoleRenderable'), alias(name='RenderableType'), alias(name='RenderHook')], level=1), ImportFrom(module='control', names=[alias(name='Control')], level=1), ImportFrom(module='file_proxy', names=[alias(name='FileProxy')], level=1), ImportFrom(module='jupyter', names=[alias(name='JupyterMixin')], level=1), ImportFrom(module='live_render', names=[alias(name='LiveRender'), alias(name='VerticalOverflowMethod')], level=1), ImportFrom(module='screen', names=[alias(name='Screen')], level=1), ImportFrom(module='text', names=[alias(name='Text')], level=1), ClassDef(name='_RefreshThread', bases=[Name(id='Thread', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='A thread that calls refresh() at regular intervals.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='live', annotation=Constant(value='Live')), arg(arg='refresh_per_second', annotation=Name(id='float', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='live', ctx=Store())], value=Name(id='live', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='refresh_per_second', ctx=Store())], value=Name(id='refresh_per_second', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='done', ctx=Store())], value=Call(func=Name(id='Event', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(arg='daemon', value=Constant(value=True))]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='stop', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='done', ctx=Load()), attr='set', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[While(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='done', ctx=Load()), attr='wait', ctx=Load()), args=[BinOp(left=Constant(value=1), op=Div(), right=Attribute(value=Name(id='self', ctx=Load()), attr='refresh_per_second', ctx=Load()))], keywords=[])), body=[With(items=[withitem(context_expr=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='live', ctx=Load()), attr='_lock', ctx=Load()))], body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='done', ctx=Load()), attr='is_set', ctx=Load()), args=[], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='live', ctx=Load()), attr='refresh', ctx=Load()), args=[], keywords=[]))], orelse=[])])], orelse=[])], decorator_list=[], returns=Constant(value=None))], decorator_list=[]), ClassDef(name='Live', bases=[Name(id='JupyterMixin', ctx=Load()), Name(id='RenderHook', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Renders an auto-updating live display of any given renderable.\n\n    Args:\n        renderable (RenderableType, optional): The renderable to live display. Defaults to displaying nothing.\n        console (Console, optional): Optional Console instance. Default will an internal Console instance writing to stdout.\n        screen (bool, optional): Enable alternate screen mode. Defaults to False.\n        auto_refresh (bool, optional): Enable auto refresh. If disabled, you will need to call `refresh()` or `update()` with refresh flag. Defaults to True\n        refresh_per_second (float, optional): Number of times per second to refresh the live display. Defaults to 4.\n        transient (bool, optional): Clear the renderable on exit (has no effect when screen=True). Defaults to False.\n        redirect_stdout (bool, optional): Enable redirection of stdout, so ``print`` may be used. Defaults to True.\n        redirect_stderr (bool, optional): Enable redirection of stderr. Defaults to True.\n        vertical_overflow (VerticalOverflowMethod, optional): How to handle renderable when it is too tall for the console. Defaults to "ellipsis".\n        get_renderable (Callable[[], RenderableType], optional): Optional callable to get renderable. Defaults to None.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='renderable', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='RenderableType', ctx=Load()), ctx=Load()))], kwonlyargs=[arg(arg='console', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='Console', ctx=Load()), ctx=Load())), arg(arg='screen', annotation=Name(id='bool', ctx=Load())), arg(arg='auto_refresh', annotation=Name(id='bool', ctx=Load())), arg(arg='refresh_per_second', annotation=Name(id='float', ctx=Load())), arg(arg='transient', annotation=Name(id='bool', ctx=Load())), arg(arg='redirect_stdout', annotation=Name(id='bool', ctx=Load())), arg(arg='redirect_stderr', annotation=Name(id='bool', ctx=Load())), arg(arg='vertical_overflow', annotation=Name(id='VerticalOverflowMethod', ctx=Load())), arg(arg='get_renderable', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[], ctx=Load()), Name(id='RenderableType', ctx=Load())], ctx=Load()), ctx=Load()), ctx=Load()))], kw_defaults=[Constant(value=None), Constant(value=False), Constant(value=True), Constant(value=4), Constant(value=False), Constant(value=True), Constant(value=True), Constant(value='ellipsis'), Constant(value=None)], defaults=[Constant(value=None)]), body=[Assert(test=Compare(left=Name(id='refresh_per_second', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), msg=Constant(value='refresh_per_second must be > 0')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_renderable', ctx=Store())], value=Name(id='renderable', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Store())], value=IfExp(test=Compare(left=Name(id='console', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Name(id='console', ctx=Load()), orelse=Call(func=Name(id='get_console', ctx=Load()), args=[], keywords=[]))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_screen', ctx=Store())], value=Name(id='screen', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_alt_screen', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_redirect_stdout', ctx=Store())], value=Name(id='redirect_stdout', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_redirect_stderr', ctx=Store())], value=Name(id='redirect_stderr', ctx=Load())), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_restore_stdout', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='IO', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), ctx=Load()), value=Constant(value=None), simple=0), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_restore_stderr', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='IO', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), ctx=Load()), value=Constant(value=None), simple=0), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Store())], value=Call(func=Name(id='RLock', ctx=Load()), args=[], keywords=[])), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='ipy_widget', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='Any', ctx=Load()), ctx=Load()), value=Constant(value=None), simple=0), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='auto_refresh', ctx=Store())], value=Name(id='auto_refresh', ctx=Load())), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_started', ctx=Store()), annotation=Name(id='bool', ctx=Load()), value=Constant(value=False), simple=0), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='transient', ctx=Store())], value=IfExp(test=Name(id='screen', ctx=Load()), body=Constant(value=True), orelse=Name(id='transient', ctx=Load()))), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_refresh_thread', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='_RefreshThread', ctx=Load()), ctx=Load()), value=Constant(value=None), simple=0), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='refresh_per_second', ctx=Store())], value=Name(id='refresh_per_second', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='vertical_overflow', ctx=Store())], value=Name(id='vertical_overflow', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_get_renderable', ctx=Store())], value=Name(id='get_renderable', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_live_render', ctx=Store())], value=Call(func=Name(id='LiveRender', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_renderable', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='vertical_overflow', value=Name(id='vertical_overflow', ctx=Load()))]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='is_started', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Check if live display has been started.')), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_started', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='get_renderable', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='renderable', ctx=Store())], value=IfExp(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_get_renderable', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_renderable', ctx=Load()), args=[], keywords=[]), orelse=Attribute(value=Name(id='self', ctx=Load()), attr='_renderable', ctx=Load()))), Return(value=BoolOp(op=Or(), values=[Name(id='renderable', ctx=Load()), Constant(value='')]))], decorator_list=[], returns=Name(id='RenderableType', ctx=Load())), FunctionDef(name='start', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='refresh', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Expr(value=Constant(value='Start live rendering display.\n\n        Args:\n            refresh (bool, optional): Also refresh. Defaults to False.\n        ')), With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_started', ctx=Load()), body=[Return()], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='set_live', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_started', ctx=Store())], value=Constant(value=True)), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_screen', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_alt_screen', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='set_alt_screen', ctx=Load()), args=[Constant(value=True)], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='show_cursor', ctx=Load()), args=[Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_enable_redirect_io', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='push_render_hook', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), If(test=Name(id='refresh', ctx=Load()), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='refresh', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='stop', ctx=Load()), args=[], keywords=[])), Raise()])], orelse=[], finalbody=[])], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='auto_refresh', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_refresh_thread', ctx=Store())], value=Call(func=Name(id='_RefreshThread', ctx=Load()), args=[Name(id='self', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='refresh_per_second', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_refresh_thread', ctx=Load()), attr='start', ctx=Load()), args=[], keywords=[]))], orelse=[])])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='stop', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Stop live rendering display.')), With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_started', ctx=Load())), body=[Return()], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='clear_live', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_started', ctx=Store())], value=Constant(value=False)), If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='auto_refresh', ctx=Load()), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_refresh_thread', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_refresh_thread', ctx=Load()), attr='stop', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_refresh_thread', ctx=Store())], value=Constant(value=None))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='vertical_overflow', ctx=Store())], value=Constant(value='visible')), With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()))], body=[Try(body=[If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_alt_screen', ctx=Load())), UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='is_jupyter', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='refresh', ctx=Load()), args=[], keywords=[]))], orelse=[])], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_disable_redirect_io', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='pop_render_hook', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_alt_screen', ctx=Load())), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='is_terminal', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='line', ctx=Load()), args=[], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='show_cursor', ctx=Load()), args=[Constant(value=True)], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_alt_screen', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='set_alt_screen', ctx=Load()), args=[Constant(value=False)], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='transient', ctx=Load()), UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_alt_screen', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='control', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_live_render', ctx=Load()), attr='restore_cursor', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='ipy_widget', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Attribute(value=Name(id='self', ctx=Load()), attr='transient', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='ipy_widget', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], orelse=[])])])])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load()), args=[], keywords=[keyword(arg='refresh', value=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_renderable', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]))])), Return(value=Name(id='self', ctx=Load()))], decorator_list=[], returns=Constant(value='Live')), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exc_type', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='Type', ctx=Load()), slice=Name(id='BaseException', ctx=Load()), ctx=Load()), ctx=Load())), arg(arg='exc_val', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='BaseException', ctx=Load()), ctx=Load())), arg(arg='exc_tb', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='TracebackType', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='stop', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_enable_redirect_io', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Enable redirecting of stdout / stderr.')), If(test=BoolOp(op=Or(), values=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='is_terminal', ctx=Load()), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='is_jupyter', ctx=Load())]), body=[If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_redirect_stdout', ctx=Load()), UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), Name(id='FileProxy', ctx=Load())], keywords=[]))]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_restore_stdout', ctx=Store())], value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load())), Assign(targets=[Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Store())], value=Call(func=Name(id='cast', ctx=Load()), args=[Constant(value='TextIO'), Call(func=Name(id='FileProxy', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_redirect_stderr', ctx=Load()), UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='sys', ctx=Load()), attr='stderr', ctx=Load()), Name(id='FileProxy', ctx=Load())], keywords=[]))]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_restore_stderr', ctx=Store())], value=Attribute(value=Name(id='sys', ctx=Load()), attr='stderr', ctx=Load())), Assign(targets=[Attribute(value=Name(id='sys', ctx=Load()), attr='stderr', ctx=Store())], value=Call(func=Name(id='cast', ctx=Load()), args=[Constant(value='TextIO'), Call(func=Name(id='FileProxy', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), Attribute(value=Name(id='sys', ctx=Load()), attr='stderr', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_disable_redirect_io', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Disable redirecting of stdout / stderr.')), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_restore_stdout', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Store())], value=Call(func=Name(id='cast', ctx=Load()), args=[Constant(value='TextIO'), Attribute(value=Name(id='self', ctx=Load()), attr='_restore_stdout', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_restore_stdout', ctx=Store())], value=Constant(value=None))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_restore_stderr', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='sys', ctx=Load()), attr='stderr', ctx=Store())], value=Call(func=Name(id='cast', ctx=Load()), args=[Constant(value='TextIO'), Attribute(value=Name(id='self', ctx=Load()), attr='_restore_stderr', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_restore_stderr', ctx=Store())], value=Constant(value=None))], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='renderable', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get the renderable that is being displayed\n\n        Returns:\n            RenderableType: Displayed renderable.\n        ')), Assign(targets=[Name(id='renderable', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_renderable', ctx=Load()), args=[], keywords=[])), Return(value=IfExp(test=Attribute(value=Name(id='self', ctx=Load()), attr='_alt_screen', ctx=Load()), body=Call(func=Name(id='Screen', ctx=Load()), args=[Name(id='renderable', ctx=Load())], keywords=[]), orelse=Name(id='renderable', ctx=Load())))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='RenderableType', ctx=Load())), FunctionDef(name='update', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='renderable', annotation=Name(id='RenderableType', ctx=Load()))], kwonlyargs=[arg(arg='refresh', annotation=Name(id='bool', ctx=Load()))], kw_defaults=[Constant(value=False)], defaults=[]), body=[Expr(value=Constant(value='Update the renderable that is being displayed\n\n        Args:\n            renderable (RenderableType): New renderable to use.\n            refresh (bool, optional): Refresh the display. Defaults to False.\n        ')), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='renderable', ctx=Load()), Name(id='str', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='renderable', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='render_str', ctx=Load()), args=[Name(id='renderable', ctx=Load())], keywords=[]))], orelse=[]), With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_renderable', ctx=Store())], value=Name(id='renderable', ctx=Load())), If(test=Name(id='refresh', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='refresh', ctx=Load()), args=[], keywords=[]))], orelse=[])])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='refresh', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Update the display of the Live Render.')), With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_live_render', ctx=Load()), attr='set_renderable', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='renderable', ctx=Load())], keywords=[])), If(test=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='is_jupyter', ctx=Load()), body=[Try(body=[ImportFrom(module='IPython.display', names=[alias(name='display')], level=0), ImportFrom(module='ipywidgets', names=[alias(name='Output')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Import(names=[alias(name='warnings')]), Expr(value=Call(func=Attribute(value=Name(id='warnings', ctx=Load()), attr='warn', ctx=Load()), args=[Constant(value='install "ipywidgets" for Jupyter support')], keywords=[]))])], orelse=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='ipy_widget', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='ipy_widget', ctx=Store())], value=Call(func=Name(id='Output', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Name(id='display', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='ipy_widget', ctx=Load())], keywords=[]))], orelse=[]), With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='ipy_widget', ctx=Load()))], body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='ipy_widget', ctx=Load()), attr='clear_output', ctx=Load()), args=[], keywords=[keyword(arg='wait', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='print', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_live_render', ctx=Load()), attr='renderable', ctx=Load())], keywords=[]))])], finalbody=[])], orelse=[If(test=BoolOp(op=And(), values=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='is_terminal', ctx=Load()), UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='is_dumb_terminal', ctx=Load()))]), body=[With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()))], body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='print', ctx=Load()), args=[Call(func=Name(id='Control', ctx=Load()), args=[], keywords=[])], keywords=[]))])], orelse=[If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_started', ctx=Load())), UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='transient', ctx=Load()))]), body=[With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()))], body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='print', ctx=Load()), args=[Call(func=Name(id='Control', ctx=Load()), args=[], keywords=[])], keywords=[]))])], orelse=[])])])])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='process_renderables', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='renderables', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='ConsoleRenderable', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Process renderables to restore cursor and display progress.')), Assign(targets=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_live_render', ctx=Load()), attr='vertical_overflow', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='vertical_overflow', ctx=Load())), If(test=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='console', ctx=Load()), attr='is_interactive', ctx=Load()), body=[With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[Assign(targets=[Name(id='reset', ctx=Store())], value=IfExp(test=Attribute(value=Name(id='self', ctx=Load()), attr='_alt_screen', ctx=Load()), body=Call(func=Attribute(value=Name(id='Control', ctx=Load()), attr='home', ctx=Load()), args=[], keywords=[]), orelse=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_live_render', ctx=Load()), attr='position_cursor', ctx=Load()), args=[], keywords=[]))), Assign(targets=[Name(id='renderables', ctx=Store())], value=List(elts=[Name(id='reset', ctx=Load()), Starred(value=Name(id='renderables', ctx=Load()), ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_live_render', ctx=Load())], ctx=Load()))])], orelse=[If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_started', ctx=Load())), UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='transient', ctx=Load()))]), body=[Assign(targets=[Name(id='renderables', ctx=Store())], value=List(elts=[Starred(value=Name(id='renderables', ctx=Load()), ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_live_render', ctx=Load())], ctx=Load()))], orelse=[])]), Return(value=Name(id='renderables', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='ConsoleRenderable', ctx=Load()), ctx=Load()))], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Import(names=[alias(name='random')]), Import(names=[alias(name='time')]), ImportFrom(module='itertools', names=[alias(name='cycle')], level=0), ImportFrom(module='typing', names=[alias(name='Dict'), alias(name='List'), alias(name='Tuple')], level=0), ImportFrom(module='align', names=[alias(name='Align')], level=1), ImportFrom(module='console', names=[alias(name='Console')], level=1), ImportFrom(module='live', names=[alias(name='Live', asname='Live')], level=1), ImportFrom(module='panel', names=[alias(name='Panel')], level=1), ImportFrom(module='rule', names=[alias(name='Rule')], level=1), ImportFrom(module='syntax', names=[alias(name='Syntax')], level=1), ImportFrom(module='table', names=[alias(name='Table')], level=1), Assign(targets=[Name(id='console', ctx=Store())], value=Call(func=Name(id='Console', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='syntax', ctx=Store())], value=Call(func=Name(id='Syntax', ctx=Load()), args=[Constant(value='def loop_last(values: Iterable[T]) -> Iterable[Tuple[bool, T]]:\n    """Iterate and generate a tuple with a flag for last value."""\n    iter_values = iter(values)\n    try:\n        previous_value = next(iter_values)\n    except StopIteration:\n        return\n    for value in iter_values:\n        yield False, previous_value\n        previous_value = value\n    yield True, previous_value'), Constant(value='python')], keywords=[keyword(arg='line_numbers', value=Constant(value=True))])), Assign(targets=[Name(id='table', ctx=Store())], value=Call(func=Name(id='Table', ctx=Load()), args=[Constant(value='foo'), Constant(value='bar'), Constant(value='baz')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_row', ctx=Load()), args=[Constant(value='1'), Constant(value='2'), Constant(value='3')], keywords=[])), Assign(targets=[Name(id='progress_renderables', ctx=Store())], value=List(elts=[Constant(value='You can make the terminal shorter and taller to see the live table hideText may be printed while the progress bars are rendering.'), Call(func=Name(id='Panel', ctx=Load()), args=[Constant(value='In fact, [i]any[/i] renderable will work')], keywords=[]), Constant(value='Such as [magenta]tables[/]...'), Name(id='table', ctx=Load()), Constant(value='Pretty printed structures...'), Dict(keys=[Constant(value='type'), Constant(value='text')], values=[Constant(value='example'), Constant(value='Pretty printed')]), Constant(value='Syntax...'), Name(id='syntax', ctx=Load()), Call(func=Name(id='Rule', ctx=Load()), args=[Constant(value='Give it a try!')], keywords=[])], ctx=Load())), Assign(targets=[Name(id='examples', ctx=Store())], value=Call(func=Name(id='cycle', ctx=Load()), args=[Name(id='progress_renderables', ctx=Load())], keywords=[])), Assign(targets=[Name(id='exchanges', ctx=Store())], value=List(elts=[Constant(value='SGD'), Constant(value='MYR'), Constant(value='EUR'), Constant(value='USD'), Constant(value='AUD'), Constant(value='JPY'), Constant(value='CNH'), Constant(value='HKD'), Constant(value='CAD'), Constant(value='INR'), Constant(value='DKK'), Constant(value='GBP'), Constant(value='RUB'), Constant(value='NZD'), Constant(value='MXN'), Constant(value='IDR'), Constant(value='TWD'), Constant(value='THB'), Constant(value='VND')], ctx=Load())), With(items=[withitem(context_expr=Call(func=Name(id='Live', ctx=Load()), args=[], keywords=[keyword(arg='console', value=Name(id='console', ctx=Load()))]), optional_vars=Name(id='live_table', ctx=Store()))], body=[AnnAssign(target=Name(id='exchange_rate_dict', ctx=Store()), annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load()), Name(id='float', ctx=Load())], ctx=Load()), ctx=Load()), value=Dict(keys=[], values=[]), simple=1), For(target=Name(id='index', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=100)], keywords=[]), body=[Assign(targets=[Name(id='select_exchange', ctx=Store())], value=Subscript(value=Name(id='exchanges', ctx=Load()), slice=BinOp(left=Name(id='index', ctx=Load()), op=Mod(), right=Call(func=Name(id='len', ctx=Load()), args=[Name(id='exchanges', ctx=Load())], keywords=[])), ctx=Load())), For(target=Name(id='exchange', ctx=Store()), iter=Name(id='exchanges', ctx=Load()), body=[If(test=Compare(left=Name(id='exchange', ctx=Load()), ops=[Eq()], comparators=[Name(id='select_exchange', ctx=Load())]), body=[Continue()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='sleep', ctx=Load()), args=[Constant(value=0.4)], keywords=[])), If(test=Compare(left=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='randint', ctx=Load()), args=[Constant(value=0), Constant(value=10)], keywords=[]), ops=[Lt()], comparators=[Constant(value=1)]), body=[Expr(value=Call(func=Attribute(value=Name(id='console', ctx=Load()), attr='log', ctx=Load()), args=[Call(func=Name(id='next', ctx=Load()), args=[Name(id='examples', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Name(id='exchange_rate_dict', ctx=Load()), slice=Tuple(elts=[Name(id='select_exchange', ctx=Load()), Name(id='exchange', ctx=Load())], ctx=Load()), ctx=Store())], value=BinOp(left=Constant(value=200), op=Div(), right=BinOp(left=BinOp(left=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='random', ctx=Load()), args=[], keywords=[]), op=Mult(), right=Constant(value=320)), op=Add(), right=Constant(value=1)))), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='exchange_rate_dict', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='exchanges', ctx=Load())], keywords=[]), op=Sub(), right=Constant(value=1))]), body=[Expr(value=Call(func=Attribute(value=Name(id='exchange_rate_dict', ctx=Load()), attr='pop', ctx=Load()), args=[Subscript(value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='exchange_rate_dict', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[]), slice=Constant(value=0), ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='table', ctx=Store())], value=Call(func=Name(id='Table', ctx=Load()), args=[], keywords=[keyword(arg='title', value=Constant(value='Exchange Rates'))])), Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_column', ctx=Load()), args=[Constant(value='Source Currency')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_column', ctx=Load()), args=[Constant(value='Destination Currency')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_column', ctx=Load()), args=[Constant(value='Exchange Rate')], keywords=[])), For(target=Tuple(elts=[Tuple(elts=[Name(id='source', ctx=Store()), Name(id='dest', ctx=Store())], ctx=Store()), Name(id='exchange_rate', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='exchange_rate_dict', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_row', ctx=Load()), args=[Name(id='source', ctx=Load()), Name(id='dest', ctx=Load()), Call(func=Name(id='Text', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='exchange_rate', ctx=Load()), conversion=-1, format_spec=JoinedStr(values=[Constant(value='.4f')]))])], keywords=[keyword(arg='style', value=IfExp(test=Compare(left=Name(id='exchange_rate', ctx=Load()), ops=[Lt()], comparators=[Constant(value=1.0)]), body=Constant(value='red'), orelse=Constant(value='green')))])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='live_table', ctx=Load()), attr='update', ctx=Load()), args=[Call(func=Attribute(value=Name(id='Align', ctx=Load()), attr='center', ctx=Load()), args=[Name(id='table', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[])])], orelse=[])], type_ignores=[])