Module(body=[ImportFrom(module='types', names=[alias(name='TracebackType')], level=0), ImportFrom(module='typing', names=[alias(name='Optional'), alias(name='Type')], level=0), ImportFrom(module='console', names=[alias(name='Console'), alias(name='RenderableType')], level=1), ImportFrom(module='jupyter', names=[alias(name='JupyterMixin')], level=1), ImportFrom(module='live', names=[alias(name='Live')], level=1), ImportFrom(module='spinner', names=[alias(name='Spinner')], level=1), ImportFrom(module='style', names=[alias(name='StyleType')], level=1), ClassDef(name='Status', bases=[Name(id='JupyterMixin', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Displays a status indicator with a \'spinner\' animation.\n\n    Args:\n        status (RenderableType): A status renderable (str or Text typically).\n        console (Console, optional): Console instance to use, or None for global console. Defaults to None.\n        spinner (str, optional): Name of spinner animation (see python -m rich.spinner). Defaults to "dots".\n        spinner_style (StyleType, optional): Style of spinner. Defaults to "status.spinner".\n        speed (float, optional): Speed factor for spinner animation. Defaults to 1.0.\n        refresh_per_second (float, optional): Number of refreshes per second. Defaults to 12.5.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='status', annotation=Name(id='RenderableType', ctx=Load()))], kwonlyargs=[arg(arg='console', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='Console', ctx=Load()), ctx=Load())), arg(arg='spinner', annotation=Name(id='str', ctx=Load())), arg(arg='spinner_style', annotation=Name(id='StyleType', ctx=Load())), arg(arg='speed', annotation=Name(id='float', ctx=Load())), arg(arg='refresh_per_second', annotation=Name(id='float', ctx=Load()))], kw_defaults=[Constant(value=None), Constant(value='dots'), Constant(value='status.spinner'), Constant(value=1.0), Constant(value=12.5)], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='status', ctx=Store())], value=Name(id='status', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='spinner_style', ctx=Store())], value=Name(id='spinner_style', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='speed', ctx=Store())], value=Name(id='speed', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_spinner', ctx=Store())], value=Call(func=Name(id='Spinner', ctx=Load()), args=[Name(id='spinner', ctx=Load())], keywords=[keyword(arg='text', value=Name(id='status', ctx=Load())), keyword(arg='style', value=Name(id='spinner_style', ctx=Load())), keyword(arg='speed', value=Name(id='speed', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_live', ctx=Store())], value=Call(func=Name(id='Live', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='renderable', ctx=Load())], keywords=[keyword(arg='console', value=Name(id='console', ctx=Load())), keyword(arg='refresh_per_second', value=Name(id='refresh_per_second', ctx=Load())), keyword(arg='transient', value=Constant(value=True))]))], decorator_list=[]), FunctionDef(name='renderable', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_spinner', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='Spinner', ctx=Load())), FunctionDef(name='console', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get the Console used by the Status objects.')), Return(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_live', ctx=Load()), attr='console', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())], returns=Constant(value='Console')), FunctionDef(name='update', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='status', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='RenderableType', ctx=Load()), ctx=Load()))], kwonlyargs=[arg(arg='spinner', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='spinner_style', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='StyleType', ctx=Load()), ctx=Load())), arg(arg='speed', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='float', ctx=Load()), ctx=Load()))], kw_defaults=[Constant(value=None), Constant(value=None), Constant(value=None)], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='Update status.\n\n        Args:\n            status (Optional[RenderableType], optional): New status renderable or None for no change. Defaults to None.\n            spinner (Optional[str], optional): New spinner or None for no change. Defaults to None.\n            spinner_style (Optional[StyleType], optional): New spinner style or None for no change. Defaults to None.\n            speed (Optional[float], optional): Speed factor for spinner animation or None for no change. Defaults to None.\n        ')), If(test=Compare(left=Name(id='status', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='status', ctx=Store())], value=Name(id='status', ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='spinner_style', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='spinner_style', ctx=Store())], value=Name(id='spinner_style', ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='speed', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='speed', ctx=Store())], value=Name(id='speed', ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='spinner', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_spinner', ctx=Store())], value=Call(func=Name(id='Spinner', ctx=Load()), args=[Name(id='spinner', ctx=Load())], keywords=[keyword(arg='text', value=Attribute(value=Name(id='self', ctx=Load()), attr='status', ctx=Load())), keyword(arg='style', value=Attribute(value=Name(id='self', ctx=Load()), attr='spinner_style', ctx=Load())), keyword(arg='speed', value=Attribute(value=Name(id='self', ctx=Load()), attr='speed', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_live', ctx=Load()), attr='update', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='renderable', ctx=Load())], keywords=[keyword(arg='refresh', value=Constant(value=True))]))], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_spinner', ctx=Load()), attr='update', ctx=Load()), args=[], keywords=[keyword(arg='text', value=Attribute(value=Name(id='self', ctx=Load()), attr='status', ctx=Load())), keyword(arg='style', value=Attribute(value=Name(id='self', ctx=Load()), attr='spinner_style', ctx=Load())), keyword(arg='speed', value=Attribute(value=Name(id='self', ctx=Load()), attr='speed', ctx=Load()))]))])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='start', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Start the status animation.')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_live', ctx=Load()), attr='start', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='stop', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Stop the spinner animation.')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_live', ctx=Load()), attr='stop', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__rich__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='renderable', ctx=Load()))], decorator_list=[], returns=Name(id='RenderableType', ctx=Load())), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load()), args=[], keywords=[])), Return(value=Name(id='self', ctx=Load()))], decorator_list=[], returns=Constant(value='Status')), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exc_type', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='Type', ctx=Load()), slice=Name(id='BaseException', ctx=Load()), ctx=Load()), ctx=Load())), arg(arg='exc_val', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='BaseException', ctx=Load()), ctx=Load())), arg(arg='exc_tb', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='TracebackType', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='stop', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None))], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[ImportFrom(module='time', names=[alias(name='sleep')], level=0), ImportFrom(module='console', names=[alias(name='Console')], level=1), Assign(targets=[Name(id='console', ctx=Store())], value=Call(func=Name(id='Console', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='console', ctx=Load()), attr='status', ctx=Load()), args=[Constant(value='[magenta]Covid detector booting up')], keywords=[]), optional_vars=Name(id='status', ctx=Store()))], body=[Expr(value=Call(func=Name(id='sleep', ctx=Load()), args=[Constant(value=3)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='console', ctx=Load()), attr='log', ctx=Load()), args=[Constant(value='Importing advanced AI')], keywords=[])), Expr(value=Call(func=Name(id='sleep', ctx=Load()), args=[Constant(value=3)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='console', ctx=Load()), attr='log', ctx=Load()), args=[Constant(value='Advanced Covid AI Ready')], keywords=[])), Expr(value=Call(func=Name(id='sleep', ctx=Load()), args=[Constant(value=3)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='status', ctx=Load()), attr='update', ctx=Load()), args=[], keywords=[keyword(arg='status', value=Constant(value='[bold blue] Scanning for Covid')), keyword(arg='spinner', value=Constant(value='earth'))])), Expr(value=Call(func=Name(id='sleep', ctx=Load()), args=[Constant(value=3)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='console', ctx=Load()), attr='log', ctx=Load()), args=[Constant(value='Found 10,000,000,000 copies of Covid32.exe')], keywords=[])), Expr(value=Call(func=Name(id='sleep', ctx=Load()), args=[Constant(value=3)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='status', ctx=Load()), attr='update', ctx=Load()), args=[], keywords=[keyword(arg='status', value=Constant(value='[bold red]Moving Covid32.exe to Trash')), keyword(arg='spinner', value=Constant(value='bouncingBall')), keyword(arg='spinner_style', value=Constant(value='yellow'))])), Expr(value=Call(func=Name(id='sleep', ctx=Load()), args=[Constant(value=5)], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='console', ctx=Load()), attr='print', ctx=Load()), args=[Constant(value='[bold green]Covid deleted successfully')], keywords=[]))], orelse=[])], type_ignores=[])