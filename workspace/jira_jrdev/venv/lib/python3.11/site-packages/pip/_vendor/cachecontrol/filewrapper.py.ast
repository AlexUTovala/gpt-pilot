Module(body=[ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), Import(names=[alias(name='mmap')]), ImportFrom(module='tempfile', names=[alias(name='NamedTemporaryFile')], level=0), ImportFrom(module='typing', names=[alias(name='TYPE_CHECKING'), alias(name='Any'), alias(name='Callable')], level=0), If(test=Name(id='TYPE_CHECKING', ctx=Load()), body=[ImportFrom(module='http.client', names=[alias(name='HTTPResponse')], level=0)], orelse=[]), ClassDef(name='CallbackFileWrapper', bases=[], keywords=[], body=[Expr(value=Constant(value="\n    Small wrapper around a fp object which will tee everything read into a\n    buffer, and when that file is closed it will execute a callback with the\n    contents of that buffer.\n\n    All attributes are proxied to the underlying file object.\n\n    This class uses members with a double underscore (__) leading prefix so as\n    not to accidentally shadow an attribute.\n\n    The data is stored in a temporary file until it is all available.  As long\n    as the temporary files directory is disk-based (sometimes it's a\n    memory-backed-``tmpfs`` on Linux), data will be unloaded to disk if memory\n    pressure is high.  For small files the disk usually won't be used at all,\n    it'll all be in the filesystem memory cache, so there should be no\n    performance impact.\n    ")), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fp', annotation=Name(id='HTTPResponse', ctx=Load())), arg(arg='callback', annotation=BinOp(left=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='bytes', ctx=Load())], ctx=Load()), Constant(value=None)], ctx=Load()), ctx=Load()), op=BitOr(), right=Constant(value=None)))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='__buf', ctx=Store())], value=Call(func=Name(id='NamedTemporaryFile', ctx=Load()), args=[Constant(value='rb+')], keywords=[keyword(arg='delete', value=Constant(value=True))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='__fp', ctx=Store())], value=Name(id='fp', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='__callback', ctx=Store())], value=Name(id='callback', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__getattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='fp', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='__getattribute__', ctx=Load()), args=[Constant(value='_CallbackFileWrapper__fp')], keywords=[])), Return(value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='fp', ctx=Load()), Name(id='name', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='Any', ctx=Load())), FunctionDef(name='__is_fp_closed', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__fp', ctx=Load()), attr='fp', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]))], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[]), Try(body=[AnnAssign(target=Name(id='closed', ctx=Store()), annotation=Name(id='bool', ctx=Load()), value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__fp', ctx=Load()), attr='closed', ctx=Load()), simple=1), Return(value=Name(id='closed', ctx=Load()))], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[]), Return(value=Constant(value=False))], decorator_list=[], returns=Name(id='bool', ctx=Load())), FunctionDef(name='_close', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='__callback', ctx=Load()), body=[If(test=Compare(left=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__buf', ctx=Load()), attr='tell', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value=0)]), body=[Assign(targets=[Name(id='result', ctx=Store())], value=Constant(value=b''))], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__buf', ctx=Load()), attr='seek', ctx=Load()), args=[Constant(value=0), Constant(value=0)], keywords=[])), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Name(id='memoryview', ctx=Load()), args=[Call(func=Attribute(value=Name(id='mmap', ctx=Load()), attr='mmap', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__buf', ctx=Load()), attr='fileno', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[keyword(arg='access', value=Attribute(value=Name(id='mmap', ctx=Load()), attr='ACCESS_READ', ctx=Load()))])], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='__callback', ctx=Load()), args=[Name(id='result', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='__callback', ctx=Store())], value=Constant(value=None)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__buf', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='read', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='amt', annotation=BinOp(left=Name(id='int', ctx=Load()), op=BitOr(), right=Constant(value=None)))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[AnnAssign(target=Name(id='data', ctx=Store()), annotation=Name(id='bytes', ctx=Load()), value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__fp', ctx=Load()), attr='read', ctx=Load()), args=[Name(id='amt', ctx=Load())], keywords=[]), simple=1), If(test=Name(id='data', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__buf', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))], orelse=[]), If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='__is_fp_closed', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_close', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Name(id='data', ctx=Load()))], decorator_list=[], returns=Name(id='bytes', ctx=Load())), FunctionDef(name='_safe_read', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='amt', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[AnnAssign(target=Name(id='data', ctx=Store()), annotation=Name(id='bytes', ctx=Load()), value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__fp', ctx=Load()), attr='_safe_read', ctx=Load()), args=[Name(id='amt', ctx=Load())], keywords=[]), simple=1), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='amt', ctx=Load()), ops=[Eq()], comparators=[Constant(value=2)]), Compare(left=Name(id='data', ctx=Load()), ops=[Eq()], comparators=[Constant(value=b'\r\n')])]), body=[Return(value=Name(id='data', ctx=Load()))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__buf', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[])), If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='__is_fp_closed', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_close', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Name(id='data', ctx=Load()))], decorator_list=[], returns=Name(id='bytes', ctx=Load()))], decorator_list=[])], type_ignores=[])