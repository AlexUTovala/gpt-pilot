Module(body=[Import(names=[alias(name='re')]), Import(names=[alias(name='sys')]), Import(names=[alias(name='os')]), ImportFrom(module='ansi', names=[alias(name='AnsiFore'), alias(name='AnsiBack'), alias(name='AnsiStyle'), alias(name='Style'), alias(name='BEL')], level=1), ImportFrom(module='winterm', names=[alias(name='enable_vt_processing'), alias(name='WinTerm'), alias(name='WinColor'), alias(name='WinStyle')], level=1), ImportFrom(module='win32', names=[alias(name='windll'), alias(name='winapi_test')], level=1), Assign(targets=[Name(id='winterm', ctx=Store())], value=Constant(value=None)), If(test=Compare(left=Name(id='windll', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='winterm', ctx=Store())], value=Call(func=Name(id='WinTerm', ctx=Load()), args=[], keywords=[]))], orelse=[]), ClassDef(name='StreamWrapper', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Expr(value=Constant(value="\n    Wraps a stream (such as stdout), acting as a transparent proxy for all\n    attribute access apart from method 'write()', which is delegated to our\n    Converter instance.\n    ")), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='wrapped'), arg(arg='converter')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='__wrapped', ctx=Store())], value=Name(id='wrapped', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='__convertor', ctx=Store())], value=Name(id='converter', ctx=Load()))], decorator_list=[]), FunctionDef(name='__getattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='__wrapped', ctx=Load()), Name(id='name', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__wrapped', ctx=Load()), attr='__enter__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__wrapped', ctx=Load()), attr='__exit__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='__setstate__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='state')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='__dict__', ctx=Store())], value=Name(id='state', ctx=Load()))], decorator_list=[]), FunctionDef(name='__getstate__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='__dict__', ctx=Load()))], decorator_list=[]), FunctionDef(name='write', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='text')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__convertor', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='isatty', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='stream', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='__wrapped', ctx=Load())), If(test=Compare(left=Constant(value='PYCHARM_HOSTED'), ops=[In()], comparators=[Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load())]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='stream', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), BoolOp(op=Or(), values=[Compare(left=Name(id='stream', ctx=Load()), ops=[Is()], comparators=[Attribute(value=Name(id='sys', ctx=Load()), attr='__stdout__', ctx=Load())]), Compare(left=Name(id='stream', ctx=Load()), ops=[Is()], comparators=[Attribute(value=Name(id='sys', ctx=Load()), attr='__stderr__', ctx=Load())])])]), body=[Return(value=Constant(value=True))], orelse=[])], orelse=[]), Try(body=[Assign(targets=[Name(id='stream_isatty', ctx=Store())], value=Attribute(value=Name(id='stream', ctx=Load()), attr='isatty', ctx=Load()))], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[Return(value=Constant(value=False))])], orelse=[Return(value=Call(func=Name(id='stream_isatty', ctx=Load()), args=[], keywords=[]))], finalbody=[])], decorator_list=[]), FunctionDef(name='closed', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='stream', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='__wrapped', ctx=Load())), Try(body=[Return(value=Attribute(value=Name(id='stream', ctx=Load()), attr='closed', ctx=Load()))], handlers=[ExceptHandler(type=Tuple(elts=[Name(id='AttributeError', ctx=Load()), Name(id='ValueError', ctx=Load())], ctx=Load()), body=[Return(value=Constant(value=True))])], orelse=[], finalbody=[])], decorator_list=[Name(id='property', ctx=Load())])], decorator_list=[]), ClassDef(name='AnsiToWin32', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Expr(value=Constant(value="\n    Implements a 'write()' method which, on Windows, will strip ANSI character\n    sequences from the text, and if outputting to a tty, will convert them into\n    win32 function calls.\n    ")), Assign(targets=[Name(id='ANSI_CSI_RE', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='\x01?\x1b\\[((?:\\d|;)*)([a-zA-Z])\x02?')], keywords=[])), Assign(targets=[Name(id='ANSI_OSC_RE', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='\x01?\x1b\\]([^\x07]*)(\x07)\x02?')], keywords=[])), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='wrapped'), arg(arg='convert'), arg(arg='strip'), arg(arg='autoreset')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None), Constant(value=False)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='wrapped', ctx=Store())], value=Name(id='wrapped', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='autoreset', ctx=Store())], value=Name(id='autoreset', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Store())], value=Call(func=Name(id='StreamWrapper', ctx=Load()), args=[Name(id='wrapped', ctx=Load()), Name(id='self', ctx=Load())], keywords=[])), Assign(targets=[Name(id='on_windows', ctx=Store())], value=Compare(left=Attribute(value=Name(id='os', ctx=Load()), attr='name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='nt')])), Assign(targets=[Name(id='conversion_supported', ctx=Store())], value=BoolOp(op=And(), values=[Name(id='on_windows', ctx=Load()), Call(func=Name(id='winapi_test', ctx=Load()), args=[], keywords=[])])), Try(body=[Assign(targets=[Name(id='fd', ctx=Store())], value=Call(func=Attribute(value=Name(id='wrapped', ctx=Load()), attr='fileno', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), body=[Assign(targets=[Name(id='fd', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=1)))])], orelse=[], finalbody=[]), Assign(targets=[Name(id='system_has_native_ansi', ctx=Store())], value=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Name(id='on_windows', ctx=Load())), Call(func=Name(id='enable_vt_processing', ctx=Load()), args=[Name(id='fd', ctx=Load())], keywords=[])])), Assign(targets=[Name(id='have_tty', ctx=Store())], value=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='closed', ctx=Load())), Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='isatty', ctx=Load()), args=[], keywords=[])])), Assign(targets=[Name(id='need_conversion', ctx=Store())], value=BoolOp(op=And(), values=[Name(id='conversion_supported', ctx=Load()), UnaryOp(op=Not(), operand=Name(id='system_has_native_ansi', ctx=Load()))])), If(test=Compare(left=Name(id='strip', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='strip', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='need_conversion', ctx=Load()), UnaryOp(op=Not(), operand=Name(id='have_tty', ctx=Load()))]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='strip', ctx=Store())], value=Name(id='strip', ctx=Load())), If(test=Compare(left=Name(id='convert', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='convert', ctx=Store())], value=BoolOp(op=And(), values=[Name(id='need_conversion', ctx=Load()), Name(id='have_tty', ctx=Load())]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='convert', ctx=Store())], value=Name(id='convert', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='win32_calls', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_win32_calls', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='on_stderr', ctx=Store())], value=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='wrapped', ctx=Load()), ops=[Is()], comparators=[Attribute(value=Name(id='sys', ctx=Load()), attr='stderr', ctx=Load())]))], decorator_list=[]), FunctionDef(name='should_wrap', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        True if this class is actually needed. If false, then the output\n        stream will not be affected, nor will win32 calls be issued, so\n        wrapping stdout is not actually required. This will generally be\n        False on non-Windows platforms, unless optional functionality like\n        autoreset has been requested using kwargs to init()\n        ')), Return(value=BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='convert', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='strip', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='autoreset', ctx=Load())]))], decorator_list=[]), FunctionDef(name='get_win32_calls', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='convert', ctx=Load()), Name(id='winterm', ctx=Load())]), body=[Return(value=Dict(keys=[Attribute(value=Name(id='AnsiStyle', ctx=Load()), attr='RESET_ALL', ctx=Load()), Attribute(value=Name(id='AnsiStyle', ctx=Load()), attr='BRIGHT', ctx=Load()), Attribute(value=Name(id='AnsiStyle', ctx=Load()), attr='DIM', ctx=Load()), Attribute(value=Name(id='AnsiStyle', ctx=Load()), attr='NORMAL', ctx=Load()), Attribute(value=Name(id='AnsiFore', ctx=Load()), attr='BLACK', ctx=Load()), Attribute(value=Name(id='AnsiFore', ctx=Load()), attr='RED', ctx=Load()), Attribute(value=Name(id='AnsiFore', ctx=Load()), attr='GREEN', ctx=Load()), Attribute(value=Name(id='AnsiFore', ctx=Load()), attr='YELLOW', ctx=Load()), Attribute(value=Name(id='AnsiFore', ctx=Load()), attr='BLUE', ctx=Load()), Attribute(value=Name(id='AnsiFore', ctx=Load()), attr='MAGENTA', ctx=Load()), Attribute(value=Name(id='AnsiFore', ctx=Load()), attr='CYAN', ctx=Load()), Attribute(value=Name(id='AnsiFore', ctx=Load()), attr='WHITE', ctx=Load()), Attribute(value=Name(id='AnsiFore', ctx=Load()), attr='RESET', ctx=Load()), Attribute(value=Name(id='AnsiFore', ctx=Load()), attr='LIGHTBLACK_EX', ctx=Load()), Attribute(value=Name(id='AnsiFore', ctx=Load()), attr='LIGHTRED_EX', ctx=Load()), Attribute(value=Name(id='AnsiFore', ctx=Load()), attr='LIGHTGREEN_EX', ctx=Load()), Attribute(value=Name(id='AnsiFore', ctx=Load()), attr='LIGHTYELLOW_EX', ctx=Load()), Attribute(value=Name(id='AnsiFore', ctx=Load()), attr='LIGHTBLUE_EX', ctx=Load()), Attribute(value=Name(id='AnsiFore', ctx=Load()), attr='LIGHTMAGENTA_EX', ctx=Load()), Attribute(value=Name(id='AnsiFore', ctx=Load()), attr='LIGHTCYAN_EX', ctx=Load()), Attribute(value=Name(id='AnsiFore', ctx=Load()), attr='LIGHTWHITE_EX', ctx=Load()), Attribute(value=Name(id='AnsiBack', ctx=Load()), attr='BLACK', ctx=Load()), Attribute(value=Name(id='AnsiBack', ctx=Load()), attr='RED', ctx=Load()), Attribute(value=Name(id='AnsiBack', ctx=Load()), attr='GREEN', ctx=Load()), Attribute(value=Name(id='AnsiBack', ctx=Load()), attr='YELLOW', ctx=Load()), Attribute(value=Name(id='AnsiBack', ctx=Load()), attr='BLUE', ctx=Load()), Attribute(value=Name(id='AnsiBack', ctx=Load()), attr='MAGENTA', ctx=Load()), Attribute(value=Name(id='AnsiBack', ctx=Load()), attr='CYAN', ctx=Load()), Attribute(value=Name(id='AnsiBack', ctx=Load()), attr='WHITE', ctx=Load()), Attribute(value=Name(id='AnsiBack', ctx=Load()), attr='RESET', ctx=Load()), Attribute(value=Name(id='AnsiBack', ctx=Load()), attr='LIGHTBLACK_EX', ctx=Load()), Attribute(value=Name(id='AnsiBack', ctx=Load()), attr='LIGHTRED_EX', ctx=Load()), Attribute(value=Name(id='AnsiBack', ctx=Load()), attr='LIGHTGREEN_EX', ctx=Load()), Attribute(value=Name(id='AnsiBack', ctx=Load()), attr='LIGHTYELLOW_EX', ctx=Load()), Attribute(value=Name(id='AnsiBack', ctx=Load()), attr='LIGHTBLUE_EX', ctx=Load()), Attribute(value=Name(id='AnsiBack', ctx=Load()), attr='LIGHTMAGENTA_EX', ctx=Load()), Attribute(value=Name(id='AnsiBack', ctx=Load()), attr='LIGHTCYAN_EX', ctx=Load()), Attribute(value=Name(id='AnsiBack', ctx=Load()), attr='LIGHTWHITE_EX', ctx=Load())], values=[Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='reset_all', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='style', ctx=Load()), Attribute(value=Name(id='WinStyle', ctx=Load()), attr='BRIGHT', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='style', ctx=Load()), Attribute(value=Name(id='WinStyle', ctx=Load()), attr='NORMAL', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='style', ctx=Load()), Attribute(value=Name(id='WinStyle', ctx=Load()), attr='NORMAL', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='fore', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='BLACK', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='fore', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='RED', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='fore', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='GREEN', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='fore', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='YELLOW', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='fore', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='BLUE', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='fore', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='MAGENTA', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='fore', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='CYAN', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='fore', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='GREY', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='fore', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='fore', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='BLACK', ctx=Load()), Constant(value=True)], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='fore', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='RED', ctx=Load()), Constant(value=True)], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='fore', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='GREEN', ctx=Load()), Constant(value=True)], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='fore', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='YELLOW', ctx=Load()), Constant(value=True)], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='fore', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='BLUE', ctx=Load()), Constant(value=True)], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='fore', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='MAGENTA', ctx=Load()), Constant(value=True)], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='fore', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='CYAN', ctx=Load()), Constant(value=True)], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='fore', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='GREY', ctx=Load()), Constant(value=True)], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='back', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='BLACK', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='back', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='RED', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='back', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='GREEN', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='back', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='YELLOW', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='back', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='BLUE', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='back', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='MAGENTA', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='back', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='CYAN', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='back', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='GREY', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='back', ctx=Load())], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='back', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='BLACK', ctx=Load()), Constant(value=True)], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='back', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='RED', ctx=Load()), Constant(value=True)], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='back', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='GREEN', ctx=Load()), Constant(value=True)], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='back', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='YELLOW', ctx=Load()), Constant(value=True)], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='back', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='BLUE', ctx=Load()), Constant(value=True)], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='back', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='MAGENTA', ctx=Load()), Constant(value=True)], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='back', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='CYAN', ctx=Load()), Constant(value=True)], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='winterm', ctx=Load()), attr='back', ctx=Load()), Attribute(value=Name(id='WinColor', ctx=Load()), attr='GREY', ctx=Load()), Constant(value=True)], ctx=Load())]))], orelse=[]), Return(value=Call(func=Name(id='dict', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='write', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='text')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='strip', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='convert', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='write_and_convert', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='wrapped', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='wrapped', ctx=Load()), attr='flush', ctx=Load()), args=[], keywords=[]))]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='autoreset', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='reset_all', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='reset_all', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='convert', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='call_win32', ctx=Load()), args=[Constant(value='m'), Tuple(elts=[Constant(value=0)], ctx=Load())], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='strip', ctx=Load())), UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='closed', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='wrapped', ctx=Load()), attr='write', ctx=Load()), args=[Attribute(value=Name(id='Style', ctx=Load()), attr='RESET_ALL', ctx=Load())], keywords=[]))], orelse=[])])], decorator_list=[]), FunctionDef(name='write_and_convert', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='text')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Write the given text to our wrapped stream, stripping any ANSI\n        sequences from the text, and optionally converting them into win32\n        calls.\n        ')), Assign(targets=[Name(id='cursor', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='text', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='convert_osc', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[])), For(target=Name(id='match', ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='ANSI_CSI_RE', ctx=Load()), attr='finditer', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='start', ctx=Store()), Name(id='end', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='match', ctx=Load()), attr='span', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='write_plain_text', ctx=Load()), args=[Name(id='text', ctx=Load()), Name(id='cursor', ctx=Load()), Name(id='start', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='convert_ansi', ctx=Load()), args=[Starred(value=Call(func=Attribute(value=Name(id='match', ctx=Load()), attr='groups', ctx=Load()), args=[], keywords=[]), ctx=Load())], keywords=[])), Assign(targets=[Name(id='cursor', ctx=Store())], value=Name(id='end', ctx=Load()))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='write_plain_text', ctx=Load()), args=[Name(id='text', ctx=Load()), Name(id='cursor', ctx=Load()), Call(func=Name(id='len', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='write_plain_text', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='text'), arg(arg='start'), arg(arg='end')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='start', ctx=Load()), ops=[Lt()], comparators=[Name(id='end', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='wrapped', ctx=Load()), attr='write', ctx=Load()), args=[Subscript(value=Name(id='text', ctx=Load()), slice=Slice(lower=Name(id='start', ctx=Load()), upper=Name(id='end', ctx=Load())), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='wrapped', ctx=Load()), attr='flush', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='convert_ansi', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='paramstring'), arg(arg='command')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='convert', ctx=Load()), body=[Assign(targets=[Name(id='params', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='extract_params', ctx=Load()), args=[Name(id='command', ctx=Load()), Name(id='paramstring', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='call_win32', ctx=Load()), args=[Name(id='command', ctx=Load()), Name(id='params', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='extract_params', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='command'), arg(arg='paramstring')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='command', ctx=Load()), ops=[In()], comparators=[Constant(value='Hf')]), body=[Assign(targets=[Name(id='params', ctx=Store())], value=Call(func=Name(id='tuple', ctx=Load()), args=[GeneratorExp(elt=IfExp(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[]), ops=[NotEq()], comparators=[Constant(value=0)]), body=Call(func=Name(id='int', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[]), orelse=Constant(value=1)), generators=[comprehension(target=Name(id='p', ctx=Store()), iter=Call(func=Attribute(value=Name(id='paramstring', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=';')], keywords=[]), ifs=[], is_async=0)])], keywords=[])), While(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='params', ctx=Load())], keywords=[]), ops=[Lt()], comparators=[Constant(value=2)]), body=[Assign(targets=[Name(id='params', ctx=Store())], value=BinOp(left=Name(id='params', ctx=Load()), op=Add(), right=Tuple(elts=[Constant(value=1)], ctx=Load())))], orelse=[])], orelse=[Assign(targets=[Name(id='params', ctx=Store())], value=Call(func=Name(id='tuple', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='int', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='p', ctx=Store()), iter=Call(func=Attribute(value=Name(id='paramstring', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=';')], keywords=[]), ifs=[Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[]), ops=[NotEq()], comparators=[Constant(value=0)])], is_async=0)])], keywords=[])), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='params', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=0)]), body=[If(test=Compare(left=Name(id='command', ctx=Load()), ops=[In()], comparators=[Constant(value='JKm')]), body=[Assign(targets=[Name(id='params', ctx=Store())], value=Tuple(elts=[Constant(value=0)], ctx=Load()))], orelse=[If(test=Compare(left=Name(id='command', ctx=Load()), ops=[In()], comparators=[Constant(value='ABCD')]), body=[Assign(targets=[Name(id='params', ctx=Store())], value=Tuple(elts=[Constant(value=1)], ctx=Load()))], orelse=[])])], orelse=[])]), Return(value=Name(id='params', ctx=Load()))], decorator_list=[]), FunctionDef(name='call_win32', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='command'), arg(arg='params')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='command', ctx=Load()), ops=[Eq()], comparators=[Constant(value='m')]), body=[For(target=Name(id='param', ctx=Store()), iter=Name(id='params', ctx=Load()), body=[If(test=Compare(left=Name(id='param', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='win32_calls', ctx=Load())]), body=[Assign(targets=[Name(id='func_args', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='win32_calls', ctx=Load()), slice=Name(id='param', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='func', ctx=Store())], value=Subscript(value=Name(id='func_args', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='args', ctx=Store())], value=Subscript(value=Name(id='func_args', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load())), Assign(targets=[Name(id='kwargs', ctx=Store())], value=Call(func=Name(id='dict', ctx=Load()), args=[], keywords=[keyword(arg='on_stderr', value=Attribute(value=Name(id='self', ctx=Load()), attr='on_stderr', ctx=Load()))])), Expr(value=Call(func=Name(id='func', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], orelse=[])], orelse=[])], orelse=[If(test=Compare(left=Name(id='command', ctx=Load()), ops=[In()], comparators=[Constant(value='J')]), body=[Expr(value=Call(func=Attribute(value=Name(id='winterm', ctx=Load()), attr='erase_screen', ctx=Load()), args=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[keyword(arg='on_stderr', value=Attribute(value=Name(id='self', ctx=Load()), attr='on_stderr', ctx=Load()))]))], orelse=[If(test=Compare(left=Name(id='command', ctx=Load()), ops=[In()], comparators=[Constant(value='K')]), body=[Expr(value=Call(func=Attribute(value=Name(id='winterm', ctx=Load()), attr='erase_line', ctx=Load()), args=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[keyword(arg='on_stderr', value=Attribute(value=Name(id='self', ctx=Load()), attr='on_stderr', ctx=Load()))]))], orelse=[If(test=Compare(left=Name(id='command', ctx=Load()), ops=[In()], comparators=[Constant(value='Hf')]), body=[Expr(value=Call(func=Attribute(value=Name(id='winterm', ctx=Load()), attr='set_cursor_position', ctx=Load()), args=[Name(id='params', ctx=Load())], keywords=[keyword(arg='on_stderr', value=Attribute(value=Name(id='self', ctx=Load()), attr='on_stderr', ctx=Load()))]))], orelse=[If(test=Compare(left=Name(id='command', ctx=Load()), ops=[In()], comparators=[Constant(value='ABCD')]), body=[Assign(targets=[Name(id='n', ctx=Store())], value=Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='x', ctx=Store()), Name(id='y', ctx=Store())], ctx=Store())], value=Subscript(value=Dict(keys=[Constant(value='A'), Constant(value='B'), Constant(value='C'), Constant(value='D')], values=[Tuple(elts=[Constant(value=0), UnaryOp(op=USub(), operand=Name(id='n', ctx=Load()))], ctx=Load()), Tuple(elts=[Constant(value=0), Name(id='n', ctx=Load())], ctx=Load()), Tuple(elts=[Name(id='n', ctx=Load()), Constant(value=0)], ctx=Load()), Tuple(elts=[UnaryOp(op=USub(), operand=Name(id='n', ctx=Load())), Constant(value=0)], ctx=Load())]), slice=Name(id='command', ctx=Load()), ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='winterm', ctx=Load()), attr='cursor_adjust', ctx=Load()), args=[Name(id='x', ctx=Load()), Name(id='y', ctx=Load())], keywords=[keyword(arg='on_stderr', value=Attribute(value=Name(id='self', ctx=Load()), attr='on_stderr', ctx=Load()))]))], orelse=[])])])])])], decorator_list=[]), FunctionDef(name='convert_osc', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='text')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='match', ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='ANSI_OSC_RE', ctx=Load()), attr='finditer', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='start', ctx=Store()), Name(id='end', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='match', ctx=Load()), attr='span', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='text', ctx=Store())], value=BinOp(left=Subscript(value=Name(id='text', ctx=Load()), slice=Slice(upper=Name(id='start', ctx=Load())), ctx=Load()), op=Add(), right=Subscript(value=Name(id='text', ctx=Load()), slice=Slice(lower=Name(id='end', ctx=Load())), ctx=Load()))), Assign(targets=[Tuple(elts=[Name(id='paramstring', ctx=Store()), Name(id='command', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='match', ctx=Load()), attr='groups', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='command', ctx=Load()), ops=[Eq()], comparators=[Name(id='BEL', ctx=Load())]), body=[If(test=Compare(left=Call(func=Attribute(value=Name(id='paramstring', ctx=Load()), attr='count', ctx=Load()), args=[Constant(value=';')], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), body=[Assign(targets=[Name(id='params', ctx=Store())], value=Call(func=Attribute(value=Name(id='paramstring', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=';')], keywords=[])), If(test=Compare(left=Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[In()], comparators=[Constant(value='02')]), body=[Expr(value=Call(func=Attribute(value=Name(id='winterm', ctx=Load()), attr='set_title', ctx=Load()), args=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value=1), ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], orelse=[]), Return(value=Name(id='text', ctx=Load()))], decorator_list=[]), FunctionDef(name='flush', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='wrapped', ctx=Load()), attr='flush', ctx=Load()), args=[], keywords=[]))], decorator_list=[])], decorator_list=[])], type_ignores=[])