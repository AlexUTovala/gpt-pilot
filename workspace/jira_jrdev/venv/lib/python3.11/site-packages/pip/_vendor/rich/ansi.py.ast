Module(body=[Import(names=[alias(name='re')]), Import(names=[alias(name='sys')]), ImportFrom(module='contextlib', names=[alias(name='suppress')], level=0), ImportFrom(module='typing', names=[alias(name='Iterable'), alias(name='NamedTuple'), alias(name='Optional')], level=0), ImportFrom(module='color', names=[alias(name='Color')], level=1), ImportFrom(module='style', names=[alias(name='Style')], level=1), ImportFrom(module='text', names=[alias(name='Text')], level=1), Assign(targets=[Name(id='re_ansi', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='\n(?:\\x1b\\](.*?)\\x1b\\\\)|\n(?:\\x1b([(@-Z\\\\-_]|\\[[0-?]*[ -/]*[@-~]))\n'), Attribute(value=Name(id='re', ctx=Load()), attr='VERBOSE', ctx=Load())], keywords=[])), ClassDef(name='_AnsiToken', bases=[Name(id='NamedTuple', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Result of ansi tokenized string.')), AnnAssign(target=Name(id='plain', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value=''), simple=1), AnnAssign(target=Name(id='sgr', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), value=Constant(value=''), simple=1), AnnAssign(target=Name(id='osc', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), value=Constant(value=''), simple=1)], decorator_list=[]), FunctionDef(name='_ansi_tokenize', args=arguments(posonlyargs=[], args=[arg(arg='ansi_text', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Tokenize a string in to plain text and ANSI codes.\n\n    Args:\n        ansi_text (str): A String containing ANSI codes.\n\n    Yields:\n        AnsiToken: A named tuple of (plain, sgr, osc)\n    ')), Assign(targets=[Name(id='position', ctx=Store())], value=Constant(value=0)), AnnAssign(target=Name(id='sgr', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), simple=1), AnnAssign(target=Name(id='osc', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), simple=1), For(target=Name(id='match', ctx=Store()), iter=Call(func=Attribute(value=Name(id='re_ansi', ctx=Load()), attr='finditer', ctx=Load()), args=[Name(id='ansi_text', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='start', ctx=Store()), Name(id='end', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='match', ctx=Load()), attr='span', ctx=Load()), args=[Constant(value=0)], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='osc', ctx=Store()), Name(id='sgr', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='match', ctx=Load()), attr='groups', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='start', ctx=Load()), ops=[Gt()], comparators=[Name(id='position', ctx=Load())]), body=[Expr(value=Yield(value=Call(func=Name(id='_AnsiToken', ctx=Load()), args=[Subscript(value=Name(id='ansi_text', ctx=Load()), slice=Slice(lower=Name(id='position', ctx=Load()), upper=Name(id='start', ctx=Load())), ctx=Load())], keywords=[])))], orelse=[]), If(test=Name(id='sgr', ctx=Load()), body=[If(test=Compare(left=Name(id='sgr', ctx=Load()), ops=[Eq()], comparators=[Constant(value='(')]), body=[Assign(targets=[Name(id='position', ctx=Store())], value=BinOp(left=Name(id='end', ctx=Load()), op=Add(), right=Constant(value=1))), Continue()], orelse=[]), If(test=Call(func=Attribute(value=Name(id='sgr', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='m')], keywords=[]), body=[Expr(value=Yield(value=Call(func=Name(id='_AnsiToken', ctx=Load()), args=[Constant(value=''), Subscript(value=Name(id='sgr', ctx=Load()), slice=Slice(lower=Constant(value=1), upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()), Name(id='osc', ctx=Load())], keywords=[])))], orelse=[])], orelse=[Expr(value=Yield(value=Call(func=Name(id='_AnsiToken', ctx=Load()), args=[Constant(value=''), Name(id='sgr', ctx=Load()), Name(id='osc', ctx=Load())], keywords=[])))]), Assign(targets=[Name(id='position', ctx=Store())], value=Name(id='end', ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='position', ctx=Load()), ops=[Lt()], comparators=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='ansi_text', ctx=Load())], keywords=[])]), body=[Expr(value=Yield(value=Call(func=Name(id='_AnsiToken', ctx=Load()), args=[Subscript(value=Name(id='ansi_text', ctx=Load()), slice=Slice(lower=Name(id='position', ctx=Load())), ctx=Load())], keywords=[])))], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='_AnsiToken', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='SGR_STYLE_MAP', ctx=Store())], value=Dict(keys=[Constant(value=1), Constant(value=2), Constant(value=3), Constant(value=4), Constant(value=5), Constant(value=6), Constant(value=7), Constant(value=8), Constant(value=9), Constant(value=21), Constant(value=22), Constant(value=23), Constant(value=24), Constant(value=25), Constant(value=26), Constant(value=27), Constant(value=28), Constant(value=29), Constant(value=30), Constant(value=31), Constant(value=32), Constant(value=33), Constant(value=34), Constant(value=35), Constant(value=36), Constant(value=37), Constant(value=39), Constant(value=40), Constant(value=41), Constant(value=42), Constant(value=43), Constant(value=44), Constant(value=45), Constant(value=46), Constant(value=47), Constant(value=49), Constant(value=51), Constant(value=52), Constant(value=53), Constant(value=54), Constant(value=55), Constant(value=90), Constant(value=91), Constant(value=92), Constant(value=93), Constant(value=94), Constant(value=95), Constant(value=96), Constant(value=97), Constant(value=100), Constant(value=101), Constant(value=102), Constant(value=103), Constant(value=104), Constant(value=105), Constant(value=106), Constant(value=107)], values=[Constant(value='bold'), Constant(value='dim'), Constant(value='italic'), Constant(value='underline'), Constant(value='blink'), Constant(value='blink2'), Constant(value='reverse'), Constant(value='conceal'), Constant(value='strike'), Constant(value='underline2'), Constant(value='not dim not bold'), Constant(value='not italic'), Constant(value='not underline'), Constant(value='not blink'), Constant(value='not blink2'), Constant(value='not reverse'), Constant(value='not conceal'), Constant(value='not strike'), Constant(value='color(0)'), Constant(value='color(1)'), Constant(value='color(2)'), Constant(value='color(3)'), Constant(value='color(4)'), Constant(value='color(5)'), Constant(value='color(6)'), Constant(value='color(7)'), Constant(value='default'), Constant(value='on color(0)'), Constant(value='on color(1)'), Constant(value='on color(2)'), Constant(value='on color(3)'), Constant(value='on color(4)'), Constant(value='on color(5)'), Constant(value='on color(6)'), Constant(value='on color(7)'), Constant(value='on default'), Constant(value='frame'), Constant(value='encircle'), Constant(value='overline'), Constant(value='not frame not encircle'), Constant(value='not overline'), Constant(value='color(8)'), Constant(value='color(9)'), Constant(value='color(10)'), Constant(value='color(11)'), Constant(value='color(12)'), Constant(value='color(13)'), Constant(value='color(14)'), Constant(value='color(15)'), Constant(value='on color(8)'), Constant(value='on color(9)'), Constant(value='on color(10)'), Constant(value='on color(11)'), Constant(value='on color(12)'), Constant(value='on color(13)'), Constant(value='on color(14)'), Constant(value='on color(15)')])), ClassDef(name='AnsiDecoder', bases=[], keywords=[], body=[Expr(value=Constant(value='Translate ANSI code in to styled Text.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Store())], value=Call(func=Attribute(value=Name(id='Style', ctx=Load()), attr='null', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='decode', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='terminal_text', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Decode ANSI codes in an iterable of lines.\n\n        Args:\n            lines (Iterable[str]): An iterable of lines of terminal output.\n\n        Yields:\n            Text: Marked up Text.\n        ')), For(target=Name(id='line', ctx=Store()), iter=Call(func=Attribute(value=Name(id='terminal_text', ctx=Load()), attr='splitlines', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Yield(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='decode_line', ctx=Load()), args=[Name(id='line', ctx=Load())], keywords=[])))], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='Text', ctx=Load()), ctx=Load())), FunctionDef(name='decode_line', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='line', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Decode a line containing ansi codes.\n\n        Args:\n            line (str): A line of terminal output.\n\n        Returns:\n            Text: A Text instance marked up according to ansi codes.\n        ')), Assign(targets=[Name(id='from_ansi', ctx=Store())], value=Attribute(value=Name(id='Color', ctx=Load()), attr='from_ansi', ctx=Load())), Assign(targets=[Name(id='from_rgb', ctx=Store())], value=Attribute(value=Name(id='Color', ctx=Load()), attr='from_rgb', ctx=Load())), Assign(targets=[Name(id='_Style', ctx=Store())], value=Name(id='Style', ctx=Load())), Assign(targets=[Name(id='text', ctx=Store())], value=Call(func=Name(id='Text', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='append', ctx=Store())], value=Attribute(value=Name(id='text', ctx=Load()), attr='append', ctx=Load())), Assign(targets=[Name(id='line', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='line', ctx=Load()), attr='rsplit', ctx=Load()), args=[Constant(value='\r'), Constant(value=1)], keywords=[]), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())), For(target=Tuple(elts=[Name(id='plain_text', ctx=Store()), Name(id='sgr', ctx=Store()), Name(id='osc', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='_ansi_tokenize', ctx=Load()), args=[Name(id='line', ctx=Load())], keywords=[]), body=[If(test=Name(id='plain_text', ctx=Load()), body=[Expr(value=Call(func=Name(id='append', ctx=Load()), args=[Name(id='plain_text', ctx=Load()), BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Load()), Constant(value=None)])], keywords=[]))], orelse=[If(test=Compare(left=Name(id='osc', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[If(test=Call(func=Attribute(value=Name(id='osc', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='8;')], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='_params', ctx=Store()), Name(id='semicolon', ctx=Store()), Name(id='link', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='osc', ctx=Load()), slice=Slice(lower=Constant(value=2)), ctx=Load()), attr='partition', ctx=Load()), args=[Constant(value=';')], keywords=[])), If(test=Name(id='semicolon', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Load()), attr='update_link', ctx=Load()), args=[BoolOp(op=Or(), values=[Name(id='link', ctx=Load()), Constant(value=None)])], keywords=[]))], orelse=[])], orelse=[])], orelse=[If(test=Compare(left=Name(id='sgr', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='codes', ctx=Store())], value=ListComp(elt=Call(func=Name(id='min', ctx=Load()), args=[Constant(value=255), IfExp(test=Name(id='_code', ctx=Load()), body=Call(func=Name(id='int', ctx=Load()), args=[Name(id='_code', ctx=Load())], keywords=[]), orelse=Constant(value=0))], keywords=[]), generators=[comprehension(target=Name(id='_code', ctx=Store()), iter=Call(func=Attribute(value=Name(id='sgr', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=';')], keywords=[]), ifs=[BoolOp(op=Or(), values=[Call(func=Attribute(value=Name(id='_code', ctx=Load()), attr='isdigit', ctx=Load()), args=[], keywords=[]), Compare(left=Name(id='_code', ctx=Load()), ops=[Eq()], comparators=[Constant(value='')])])], is_async=0)])), Assign(targets=[Name(id='iter_codes', ctx=Store())], value=Call(func=Name(id='iter', ctx=Load()), args=[Name(id='codes', ctx=Load())], keywords=[])), For(target=Name(id='code', ctx=Store()), iter=Name(id='iter_codes', ctx=Load()), body=[If(test=Compare(left=Name(id='code', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Store())], value=Call(func=Attribute(value=Name(id='_Style', ctx=Load()), attr='null', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=Compare(left=Name(id='code', ctx=Load()), ops=[In()], comparators=[Name(id='SGR_STYLE_MAP', ctx=Load())]), body=[AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Name(id='_Style', ctx=Load()), attr='parse', ctx=Load()), args=[Subscript(value=Name(id='SGR_STYLE_MAP', ctx=Load()), slice=Name(id='code', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='code', ctx=Load()), ops=[Eq()], comparators=[Constant(value=38)]), body=[With(items=[withitem(context_expr=Call(func=Name(id='suppress', ctx=Load()), args=[Name(id='StopIteration', ctx=Load())], keywords=[]))], body=[Assign(targets=[Name(id='color_type', ctx=Store())], value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='iter_codes', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='color_type', ctx=Load()), ops=[Eq()], comparators=[Constant(value=5)]), body=[AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Name(id='_Style', ctx=Load()), attr='from_color', ctx=Load()), args=[Call(func=Name(id='from_ansi', ctx=Load()), args=[Call(func=Name(id='next', ctx=Load()), args=[Name(id='iter_codes', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[If(test=Compare(left=Name(id='color_type', ctx=Load()), ops=[Eq()], comparators=[Constant(value=2)]), body=[AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Name(id='_Style', ctx=Load()), attr='from_color', ctx=Load()), args=[Call(func=Name(id='from_rgb', ctx=Load()), args=[Call(func=Name(id='next', ctx=Load()), args=[Name(id='iter_codes', ctx=Load())], keywords=[]), Call(func=Name(id='next', ctx=Load()), args=[Name(id='iter_codes', ctx=Load())], keywords=[]), Call(func=Name(id='next', ctx=Load()), args=[Name(id='iter_codes', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[])])])], orelse=[If(test=Compare(left=Name(id='code', ctx=Load()), ops=[Eq()], comparators=[Constant(value=48)]), body=[With(items=[withitem(context_expr=Call(func=Name(id='suppress', ctx=Load()), args=[Name(id='StopIteration', ctx=Load())], keywords=[]))], body=[Assign(targets=[Name(id='color_type', ctx=Store())], value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='iter_codes', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='color_type', ctx=Load()), ops=[Eq()], comparators=[Constant(value=5)]), body=[AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Name(id='_Style', ctx=Load()), attr='from_color', ctx=Load()), args=[Constant(value=None), Call(func=Name(id='from_ansi', ctx=Load()), args=[Call(func=Name(id='next', ctx=Load()), args=[Name(id='iter_codes', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[If(test=Compare(left=Name(id='color_type', ctx=Load()), ops=[Eq()], comparators=[Constant(value=2)]), body=[AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Name(id='_Style', ctx=Load()), attr='from_color', ctx=Load()), args=[Constant(value=None), Call(func=Name(id='from_rgb', ctx=Load()), args=[Call(func=Name(id='next', ctx=Load()), args=[Name(id='iter_codes', ctx=Load())], keywords=[]), Call(func=Name(id='next', ctx=Load()), args=[Name(id='iter_codes', ctx=Load())], keywords=[]), Call(func=Name(id='next', ctx=Load()), args=[Name(id='iter_codes', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[])])])], orelse=[])])])])], orelse=[])], orelse=[])])])], orelse=[]), Return(value=Name(id='text', ctx=Load()))], decorator_list=[], returns=Name(id='Text', ctx=Load()))], decorator_list=[]), If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='win32')]), Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')])]), body=[Import(names=[alias(name='io')]), Import(names=[alias(name='os')]), Import(names=[alias(name='pty')]), Import(names=[alias(name='sys')]), Assign(targets=[Name(id='decoder', ctx=Store())], value=Call(func=Name(id='AnsiDecoder', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='stdout', ctx=Store())], value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='BytesIO', ctx=Load()), args=[], keywords=[])), FunctionDef(name='read', args=arguments(posonlyargs=[], args=[arg(arg='fd', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='read', ctx=Load()), args=[Name(id='fd', ctx=Load()), Constant(value=1024)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='stdout', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[])), Return(value=Name(id='data', ctx=Load()))], decorator_list=[], returns=Name(id='bytes', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='pty', ctx=Load()), attr='spawn', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='argv', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load()), Name(id='read', ctx=Load())], keywords=[])), ImportFrom(module='console', names=[alias(name='Console')], level=1), Assign(targets=[Name(id='console', ctx=Store())], value=Call(func=Name(id='Console', ctx=Load()), args=[], keywords=[keyword(arg='record', value=Constant(value=True))])), Assign(targets=[Name(id='stdout_result', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='stdout', ctx=Load()), attr='getvalue', ctx=Load()), args=[], keywords=[]), attr='decode', ctx=Load()), args=[Constant(value='utf-8')], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Name(id='stdout_result', ctx=Load())], keywords=[])), For(target=Name(id='line', ctx=Store()), iter=Call(func=Attribute(value=Name(id='decoder', ctx=Load()), attr='decode', ctx=Load()), args=[Name(id='stdout_result', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='console', ctx=Load()), attr='print', ctx=Load()), args=[Name(id='line', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='console', ctx=Load()), attr='save_html', ctx=Load()), args=[Constant(value='stdout.html')], keywords=[]))], orelse=[])], type_ignores=[])