Module(body=[Import(names=[alias(name='sys')]), Import(names=[alias(name='typing')]), ImportFrom(module='pip._vendor.tenacity', names=[alias(name='BaseRetrying')], level=0), ImportFrom(module='pip._vendor.tenacity', names=[alias(name='DoAttempt')], level=0), ImportFrom(module='pip._vendor.tenacity', names=[alias(name='DoSleep')], level=0), ImportFrom(module='pip._vendor.tenacity', names=[alias(name='RetryCallState')], level=0), ImportFrom(module='tornado', names=[alias(name='gen')], level=0), If(test=Attribute(value=Name(id='typing', ctx=Load()), attr='TYPE_CHECKING', ctx=Load()), body=[ImportFrom(module='tornado.concurrent', names=[alias(name='Future')], level=0)], orelse=[]), Assign(targets=[Name(id='_RetValT', ctx=Store())], value=Call(func=Attribute(value=Name(id='typing', ctx=Load()), attr='TypeVar', ctx=Load()), args=[Constant(value='_RetValT')], keywords=[])), ClassDef(name='TornadoRetrying', bases=[Name(id='BaseRetrying', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='sleep', annotation=Constant(value='typing.Callable[[float], Future[None]]'))], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs', annotation=Attribute(value=Name(id='typing', ctx=Load()), attr='Any', ctx=Load())), defaults=[Attribute(value=Name(id='gen', ctx=Load()), attr='sleep', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='sleep', ctx=Store())], value=Name(id='sleep', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fn', annotation=Constant(value='typing.Callable[..., typing.Union[typing.Generator[typing.Any, typing.Any, _RetValT], Future[_RetValT]]]'))], vararg=arg(arg='args', annotation=Attribute(value=Name(id='typing', ctx=Load()), attr='Any', ctx=Load())), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs', annotation=Attribute(value=Name(id='typing', ctx=Load()), attr='Any', ctx=Load())), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='begin', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='retry_state', ctx=Store())], value=Call(func=Name(id='RetryCallState', ctx=Load()), args=[], keywords=[keyword(arg='retry_object', value=Name(id='self', ctx=Load())), keyword(arg='fn', value=Name(id='fn', ctx=Load())), keyword(arg='args', value=Name(id='args', ctx=Load())), keyword(arg='kwargs', value=Name(id='kwargs', ctx=Load()))])), While(test=Constant(value=True), body=[Assign(targets=[Name(id='do', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='iter', ctx=Load()), args=[], keywords=[keyword(arg='retry_state', value=Name(id='retry_state', ctx=Load()))])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='do', ctx=Load()), Name(id='DoAttempt', ctx=Load())], keywords=[]), body=[Try(body=[Assign(targets=[Name(id='result', ctx=Store())], value=Yield(value=Call(func=Name(id='fn', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])))], handlers=[ExceptHandler(type=Name(id='BaseException', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='retry_state', ctx=Load()), attr='set_exception', ctx=Load()), args=[Call(func=Attribute(value=Name(id='sys', ctx=Load()), attr='exc_info', ctx=Load()), args=[], keywords=[])], keywords=[]))])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='retry_state', ctx=Load()), attr='set_result', ctx=Load()), args=[Name(id='result', ctx=Load())], keywords=[]))], finalbody=[])], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='do', ctx=Load()), Name(id='DoSleep', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='retry_state', ctx=Load()), attr='prepare_for_next_attempt', ctx=Load()), args=[], keywords=[])), Expr(value=Yield(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='sleep', ctx=Load()), args=[Name(id='do', ctx=Load())], keywords=[])))], orelse=[Raise(exc=Call(func=Attribute(value=Name(id='gen', ctx=Load()), attr='Return', ctx=Load()), args=[Name(id='do', ctx=Load())], keywords=[]))])])], orelse=[])], decorator_list=[Attribute(value=Name(id='gen', ctx=Load()), attr='coroutine', ctx=Load())], returns=Constant(value='typing.Generator[typing.Any, typing.Any, _RetValT]'))], decorator_list=[])], type_ignores=[])