Module(body=[Expr(value=Constant(value='\n    pygments.formatters.pangomarkup\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    Formatter for Pango markup output.\n\n    :copyright: Copyright 2006-2023 by the Pygments team, see AUTHORS.\n    :license: BSD, see LICENSE for details.\n')), ImportFrom(module='pip._vendor.pygments.formatter', names=[alias(name='Formatter')], level=0), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='PangoMarkupFormatter')], ctx=Load())), Assign(targets=[Name(id='_escape_table', ctx=Store())], value=Dict(keys=[Call(func=Name(id='ord', ctx=Load()), args=[Constant(value='&')], keywords=[]), Call(func=Name(id='ord', ctx=Load()), args=[Constant(value='<')], keywords=[])], values=[Constant(value='&amp;'), Constant(value='&lt;')])), FunctionDef(name='escape_special_chars', args=arguments(posonlyargs=[], args=[arg(arg='text'), arg(arg='table')], kwonlyargs=[], kw_defaults=[], defaults=[Name(id='_escape_table', ctx=Load())]), body=[Expr(value=Constant(value='Escape & and < for Pango Markup.')), Return(value=Call(func=Attribute(value=Name(id='text', ctx=Load()), attr='translate', ctx=Load()), args=[Name(id='table', ctx=Load())], keywords=[]))], decorator_list=[]), ClassDef(name='PangoMarkupFormatter', bases=[Name(id='Formatter', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    Format tokens as Pango Markup code. It can then be rendered to an SVG.\n\n    .. versionadded:: 2.9\n    ')), Assign(targets=[Name(id='name', ctx=Store())], value=Constant(value='Pango Markup')), Assign(targets=[Name(id='aliases', ctx=Store())], value=List(elts=[Constant(value='pango'), Constant(value='pangomarkup')], ctx=Load())), Assign(targets=[Name(id='filenames', ctx=Store())], value=List(elts=[], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='options'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='Formatter', ctx=Load()), attr='__init__', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[keyword(value=Name(id='options', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='styles', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Tuple(elts=[Name(id='token', ctx=Store()), Name(id='style', ctx=Store())], ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Load()), body=[Assign(targets=[Name(id='start', ctx=Store())], value=Constant(value='')), Assign(targets=[Name(id='end', ctx=Store())], value=Constant(value='')), If(test=Subscript(value=Name(id='style', ctx=Load()), slice=Constant(value='color'), ctx=Load()), body=[AugAssign(target=Name(id='start', ctx=Store()), op=Add(), value=BinOp(left=Constant(value='<span fgcolor="#%s">'), op=Mod(), right=Subscript(value=Name(id='style', ctx=Load()), slice=Constant(value='color'), ctx=Load()))), Assign(targets=[Name(id='end', ctx=Store())], value=BinOp(left=Constant(value='</span>'), op=Add(), right=Name(id='end', ctx=Load())))], orelse=[]), If(test=Subscript(value=Name(id='style', ctx=Load()), slice=Constant(value='bold'), ctx=Load()), body=[AugAssign(target=Name(id='start', ctx=Store()), op=Add(), value=Constant(value='<b>')), Assign(targets=[Name(id='end', ctx=Store())], value=BinOp(left=Constant(value='</b>'), op=Add(), right=Name(id='end', ctx=Load())))], orelse=[]), If(test=Subscript(value=Name(id='style', ctx=Load()), slice=Constant(value='italic'), ctx=Load()), body=[AugAssign(target=Name(id='start', ctx=Store()), op=Add(), value=Constant(value='<i>')), Assign(targets=[Name(id='end', ctx=Store())], value=BinOp(left=Constant(value='</i>'), op=Add(), right=Name(id='end', ctx=Load())))], orelse=[]), If(test=Subscript(value=Name(id='style', ctx=Load()), slice=Constant(value='underline'), ctx=Load()), body=[AugAssign(target=Name(id='start', ctx=Store()), op=Add(), value=Constant(value='<u>')), Assign(targets=[Name(id='end', ctx=Store())], value=BinOp(left=Constant(value='</u>'), op=Add(), right=Name(id='end', ctx=Load())))], orelse=[]), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='styles', ctx=Load()), slice=Name(id='token', ctx=Load()), ctx=Store())], value=Tuple(elts=[Name(id='start', ctx=Load()), Name(id='end', ctx=Load())], ctx=Load()))], orelse=[])], decorator_list=[]), FunctionDef(name='format_unencoded', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='tokensource'), arg(arg='outfile')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='lastval', ctx=Store())], value=Constant(value='')), Assign(targets=[Name(id='lasttype', ctx=Store())], value=Constant(value=None)), Expr(value=Call(func=Attribute(value=Name(id='outfile', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='<tt>')], keywords=[])), For(target=Tuple(elts=[Name(id='ttype', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Name(id='tokensource', ctx=Load()), body=[While(test=Compare(left=Name(id='ttype', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='styles', ctx=Load())]), body=[Assign(targets=[Name(id='ttype', ctx=Store())], value=Attribute(value=Name(id='ttype', ctx=Load()), attr='parent', ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='ttype', ctx=Load()), ops=[Eq()], comparators=[Name(id='lasttype', ctx=Load())]), body=[AugAssign(target=Name(id='lastval', ctx=Store()), op=Add(), value=Call(func=Name(id='escape_special_chars', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], orelse=[If(test=Name(id='lastval', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='stylebegin', ctx=Store()), Name(id='styleend', ctx=Store())], ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='styles', ctx=Load()), slice=Name(id='lasttype', ctx=Load()), ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='outfile', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='stylebegin', ctx=Load()), op=Add(), right=Name(id='lastval', ctx=Load())), op=Add(), right=Name(id='styleend', ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='lastval', ctx=Store())], value=Call(func=Name(id='escape_special_chars', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])), Assign(targets=[Name(id='lasttype', ctx=Store())], value=Name(id='ttype', ctx=Load()))])], orelse=[]), If(test=Name(id='lastval', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='stylebegin', ctx=Store()), Name(id='styleend', ctx=Store())], ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='styles', ctx=Load()), slice=Name(id='lasttype', ctx=Load()), ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='outfile', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='stylebegin', ctx=Load()), op=Add(), right=Name(id='lastval', ctx=Load())), op=Add(), right=Name(id='styleend', ctx=Load()))], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='outfile', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='</tt>')], keywords=[]))], decorator_list=[])], decorator_list=[])], type_ignores=[])