Module(body=[Expr(value=Constant(value='Windows.')), ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), Import(names=[alias(name='ctypes')]), Import(names=[alias(name='os')]), Import(names=[alias(name='sys')]), ImportFrom(module='functools', names=[alias(name='lru_cache')], level=0), ImportFrom(module='typing', names=[alias(name='TYPE_CHECKING')], level=0), ImportFrom(module='api', names=[alias(name='PlatformDirsABC')], level=1), If(test=Name(id='TYPE_CHECKING', ctx=Load()), body=[ImportFrom(module='collections.abc', names=[alias(name='Callable')], level=0)], orelse=[]), ClassDef(name='Windows', bases=[Name(id='PlatformDirsABC', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    `MSDN on where to store app data files\n    <http://support.microsoft.com/default.aspx?scid=kb;en-us;310294#XSLTH3194121123120121120120>`_.\n    Makes use of the\n    `appname <platformdirs.api.PlatformDirsABC.appname>`,\n    `appauthor <platformdirs.api.PlatformDirsABC.appauthor>`,\n    `version <platformdirs.api.PlatformDirsABC.version>`,\n    `roaming <platformdirs.api.PlatformDirsABC.roaming>`,\n    `opinion <platformdirs.api.PlatformDirsABC.opinion>`,\n    `ensure_exists <platformdirs.api.PlatformDirsABC.ensure_exists>`.\n    ')), FunctionDef(name='user_data_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        :return: data directory tied to the user, e.g.\n         ``%USERPROFILE%\\AppData\\Local\\$appauthor\\$appname`` (not roaming) or\n         ``%USERPROFILE%\\AppData\\Roaming\\$appauthor\\$appname`` (roaming)\n        ')), Assign(targets=[Name(id='const', ctx=Store())], value=IfExp(test=Attribute(value=Name(id='self', ctx=Load()), attr='roaming', ctx=Load()), body=Constant(value='CSIDL_APPDATA'), orelse=Constant(value='CSIDL_LOCAL_APPDATA'))), Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normpath', ctx=Load()), args=[Call(func=Name(id='get_win_folder', ctx=Load()), args=[Name(id='const', ctx=Load())], keywords=[])], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_append_parts', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='_append_parts', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='path', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[arg(arg='opinion_value', annotation=BinOp(left=Name(id='str', ctx=Load()), op=BitOr(), right=Constant(value=None)))], kw_defaults=[Constant(value=None)], defaults=[]), body=[Assign(targets=[Name(id='params', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='appname', ctx=Load()), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='appauthor', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=False)]), body=[Assign(targets=[Name(id='author', ctx=Store())], value=BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='appauthor', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='appname', ctx=Load())])), Expr(value=Call(func=Attribute(value=Name(id='params', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='author', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='params', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='appname', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='opinion_value', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Attribute(value=Name(id='self', ctx=Load()), attr='opinion', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='params', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='opinion_value', ctx=Load())], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='version', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='params', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='version', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='path', ctx=Load()), Starred(value=Name(id='params', ctx=Load()), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_optionally_create_directory', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[])), Return(value=Name(id='path', ctx=Load()))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='site_data_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: data directory shared by users, e.g. ``C:\\ProgramData\\$appauthor\\$appname``')), Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normpath', ctx=Load()), args=[Call(func=Name(id='get_win_folder', ctx=Load()), args=[Constant(value='CSIDL_COMMON_APPDATA')], keywords=[])], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_append_parts', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_config_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: config directory tied to the user, same as `user_data_dir`')), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='user_data_dir', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='site_config_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: config directory shared by the users, same as `site_data_dir`')), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='site_data_dir', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_cache_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        :return: cache directory tied to the user (if opinionated with ``Cache`` folder within ``$appname``) e.g.\n         ``%USERPROFILE%\\AppData\\Local\\$appauthor\\$appname\\Cache\\$version``\n        ')), Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normpath', ctx=Load()), args=[Call(func=Name(id='get_win_folder', ctx=Load()), args=[Constant(value='CSIDL_LOCAL_APPDATA')], keywords=[])], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_append_parts', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[keyword(arg='opinion_value', value=Constant(value='Cache'))]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='site_cache_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: cache directory shared by users, e.g. ``C:\\ProgramData\\$appauthor\\$appname\\Cache\\$version``')), Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normpath', ctx=Load()), args=[Call(func=Name(id='get_win_folder', ctx=Load()), args=[Constant(value='CSIDL_COMMON_APPDATA')], keywords=[])], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_append_parts', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[keyword(arg='opinion_value', value=Constant(value='Cache'))]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_state_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: state directory tied to the user, same as `user_data_dir`')), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='user_data_dir', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_log_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: log directory tied to the user, same as `user_data_dir` if not opinionated else ``Logs`` in it')), Assign(targets=[Name(id='path', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='user_data_dir', ctx=Load())), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='opinion', ctx=Load()), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='path', ctx=Load()), Constant(value='Logs')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_optionally_create_directory', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='path', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_documents_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: documents directory tied to the user e.g. ``%USERPROFILE%\\Documents``')), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normpath', ctx=Load()), args=[Call(func=Name(id='get_win_folder', ctx=Load()), args=[Constant(value='CSIDL_PERSONAL')], keywords=[])], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_downloads_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: downloads directory tied to the user e.g. ``%USERPROFILE%\\Downloads``')), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normpath', ctx=Load()), args=[Call(func=Name(id='get_win_folder', ctx=Load()), args=[Constant(value='CSIDL_DOWNLOADS')], keywords=[])], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_pictures_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: pictures directory tied to the user e.g. ``%USERPROFILE%\\Pictures``')), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normpath', ctx=Load()), args=[Call(func=Name(id='get_win_folder', ctx=Load()), args=[Constant(value='CSIDL_MYPICTURES')], keywords=[])], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_videos_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: videos directory tied to the user e.g. ``%USERPROFILE%\\Videos``')), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normpath', ctx=Load()), args=[Call(func=Name(id='get_win_folder', ctx=Load()), args=[Constant(value='CSIDL_MYVIDEO')], keywords=[])], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_music_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: music directory tied to the user e.g. ``%USERPROFILE%\\Music``')), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normpath', ctx=Load()), args=[Call(func=Name(id='get_win_folder', ctx=Load()), args=[Constant(value='CSIDL_MYMUSIC')], keywords=[])], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_runtime_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        :return: runtime directory tied to the user, e.g.\n         ``%USERPROFILE%\\AppData\\Local\\Temp\\$appauthor\\$appname``\n        ')), Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normpath', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Call(func=Name(id='get_win_folder', ctx=Load()), args=[Constant(value='CSIDL_LOCAL_APPDATA')], keywords=[]), Constant(value='Temp')], keywords=[])], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_append_parts', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='str', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_win_folder_from_env_vars', args=arguments(posonlyargs=[], args=[arg(arg='csidl_name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get folder from environment variables.')), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Name(id='get_win_folder_if_csidl_name_not_env_var', ctx=Load()), args=[Name(id='csidl_name', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='result', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Name(id='result', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='env_var_name', ctx=Store())], value=Call(func=Attribute(value=Dict(keys=[Constant(value='CSIDL_APPDATA'), Constant(value='CSIDL_COMMON_APPDATA'), Constant(value='CSIDL_LOCAL_APPDATA')], values=[Constant(value='APPDATA'), Constant(value='ALLUSERSPROFILE'), Constant(value='LOCALAPPDATA')]), attr='get', ctx=Load()), args=[Name(id='csidl_name', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='env_var_name', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='msg', ctx=Store())], value=JoinedStr(values=[Constant(value='Unknown CSIDL name: '), FormattedValue(value=Name(id='csidl_name', ctx=Load()), conversion=-1)])), Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Name(id='msg', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='env_var_name', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='result', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='msg', ctx=Store())], value=JoinedStr(values=[Constant(value='Unset environment variable: '), FormattedValue(value=Name(id='env_var_name', ctx=Load()), conversion=-1)])), Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Name(id='msg', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='get_win_folder_if_csidl_name_not_env_var', args=arguments(posonlyargs=[], args=[arg(arg='csidl_name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get folder for a CSIDL name that does not exist as an environment variable.')), If(test=Compare(left=Name(id='csidl_name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='CSIDL_PERSONAL')]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normpath', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), slice=Constant(value='USERPROFILE'), ctx=Load())], keywords=[]), Constant(value='Documents')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='csidl_name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='CSIDL_DOWNLOADS')]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normpath', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), slice=Constant(value='USERPROFILE'), ctx=Load())], keywords=[]), Constant(value='Downloads')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='csidl_name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='CSIDL_MYPICTURES')]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normpath', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), slice=Constant(value='USERPROFILE'), ctx=Load())], keywords=[]), Constant(value='Pictures')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='csidl_name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='CSIDL_MYVIDEO')]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normpath', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), slice=Constant(value='USERPROFILE'), ctx=Load())], keywords=[]), Constant(value='Videos')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='csidl_name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='CSIDL_MYMUSIC')]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normpath', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), slice=Constant(value='USERPROFILE'), ctx=Load())], keywords=[]), Constant(value='Music')], keywords=[]))], orelse=[]), Return(value=Constant(value=None))], decorator_list=[], returns=BinOp(left=Name(id='str', ctx=Load()), op=BitOr(), right=Constant(value=None))), FunctionDef(name='get_win_folder_from_registry', args=arguments(posonlyargs=[], args=[arg(arg='csidl_name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n    Get folder from the registry.\n\n    This is a fallback technique at best. I'm not sure if using the registry for these guarantees us the correct answer\n    for all CSIDL_* names.\n    ")), Assign(targets=[Name(id='shell_folder_name', ctx=Store())], value=Call(func=Attribute(value=Dict(keys=[Constant(value='CSIDL_APPDATA'), Constant(value='CSIDL_COMMON_APPDATA'), Constant(value='CSIDL_LOCAL_APPDATA'), Constant(value='CSIDL_PERSONAL'), Constant(value='CSIDL_DOWNLOADS'), Constant(value='CSIDL_MYPICTURES'), Constant(value='CSIDL_MYVIDEO'), Constant(value='CSIDL_MYMUSIC')], values=[Constant(value='AppData'), Constant(value='Common AppData'), Constant(value='Local AppData'), Constant(value='Personal'), Constant(value='{374DE290-123F-4565-9164-39C4925E467B}'), Constant(value='My Pictures'), Constant(value='My Video'), Constant(value='My Music')]), attr='get', ctx=Load()), args=[Name(id='csidl_name', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='shell_folder_name', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='msg', ctx=Store())], value=JoinedStr(values=[Constant(value='Unknown CSIDL name: '), FormattedValue(value=Name(id='csidl_name', ctx=Load()), conversion=-1)])), Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Name(id='msg', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='win32')]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], orelse=[]), Import(names=[alias(name='winreg')]), Assign(targets=[Name(id='key', ctx=Store())], value=Call(func=Attribute(value=Name(id='winreg', ctx=Load()), attr='OpenKey', ctx=Load()), args=[Attribute(value=Name(id='winreg', ctx=Load()), attr='HKEY_CURRENT_USER', ctx=Load()), Constant(value='Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders')], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='directory', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='winreg', ctx=Load()), attr='QueryValueEx', ctx=Load()), args=[Name(id='key', ctx=Load()), Name(id='shell_folder_name', ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='directory', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='get_win_folder_via_ctypes', args=arguments(posonlyargs=[], args=[arg(arg='csidl_name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get folder with ctypes.')), Assign(targets=[Name(id='csidl_const', ctx=Store())], value=Call(func=Attribute(value=Dict(keys=[Constant(value='CSIDL_APPDATA'), Constant(value='CSIDL_COMMON_APPDATA'), Constant(value='CSIDL_LOCAL_APPDATA'), Constant(value='CSIDL_PERSONAL'), Constant(value='CSIDL_MYPICTURES'), Constant(value='CSIDL_MYVIDEO'), Constant(value='CSIDL_MYMUSIC'), Constant(value='CSIDL_DOWNLOADS')], values=[Constant(value=26), Constant(value=35), Constant(value=28), Constant(value=5), Constant(value=39), Constant(value=14), Constant(value=13), Constant(value=40)]), attr='get', ctx=Load()), args=[Name(id='csidl_name', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='csidl_const', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='msg', ctx=Store())], value=JoinedStr(values=[Constant(value='Unknown CSIDL name: '), FormattedValue(value=Name(id='csidl_name', ctx=Load()), conversion=-1)])), Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Name(id='msg', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='buf', ctx=Store())], value=Call(func=Attribute(value=Name(id='ctypes', ctx=Load()), attr='create_unicode_buffer', ctx=Load()), args=[Constant(value=1024)], keywords=[])), Assign(targets=[Name(id='windll', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='ctypes', ctx=Load()), Constant(value='windll')], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='windll', ctx=Load()), attr='shell32', ctx=Load()), attr='SHGetFolderPathW', ctx=Load()), args=[Constant(value=None), Name(id='csidl_const', ctx=Load()), Constant(value=None), Constant(value=0), Name(id='buf', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='any', ctx=Load()), args=[GeneratorExp(elt=Compare(left=Call(func=Name(id='ord', ctx=Load()), args=[Name(id='c', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=255)]), generators=[comprehension(target=Name(id='c', ctx=Store()), iter=Name(id='buf', ctx=Load()), ifs=[], is_async=0)])], keywords=[]), body=[Assign(targets=[Name(id='buf2', ctx=Store())], value=Call(func=Attribute(value=Name(id='ctypes', ctx=Load()), attr='create_unicode_buffer', ctx=Load()), args=[Constant(value=1024)], keywords=[])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='windll', ctx=Load()), attr='kernel32', ctx=Load()), attr='GetShortPathNameW', ctx=Load()), args=[Attribute(value=Name(id='buf', ctx=Load()), attr='value', ctx=Load()), Name(id='buf2', ctx=Load()), Constant(value=1024)], keywords=[]), body=[Assign(targets=[Name(id='buf', ctx=Store())], value=Name(id='buf2', ctx=Load()))], orelse=[])], orelse=[]), If(test=Compare(left=Name(id='csidl_name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='CSIDL_DOWNLOADS')]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='buf', ctx=Load()), attr='value', ctx=Load()), Constant(value='Downloads')], keywords=[]))], orelse=[]), Return(value=Attribute(value=Name(id='buf', ctx=Load()), attr='value', ctx=Load()))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='_pick_get_win_folder', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='ctypes', ctx=Load()), Constant(value='windll')], keywords=[]), body=[Return(value=Name(id='get_win_folder_via_ctypes', ctx=Load()))], orelse=[]), Try(body=[Import(names=[alias(name='winreg')])], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Return(value=Name(id='get_win_folder_from_env_vars', ctx=Load()))])], orelse=[Return(value=Name(id='get_win_folder_from_registry', ctx=Load()))], finalbody=[])], decorator_list=[], returns=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='str', ctx=Load())], ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='get_win_folder', ctx=Store())], value=Call(func=Call(func=Name(id='lru_cache', ctx=Load()), args=[], keywords=[keyword(arg='maxsize', value=Constant(value=None))]), args=[Call(func=Name(id='_pick_get_win_folder', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='Windows')], ctx=Load()))], type_ignores=[])