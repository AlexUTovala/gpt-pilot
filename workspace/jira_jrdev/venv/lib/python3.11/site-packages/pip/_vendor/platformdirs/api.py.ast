Module(body=[Expr(value=Constant(value='Base API.')), ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), Import(names=[alias(name='os')]), ImportFrom(module='abc', names=[alias(name='ABC'), alias(name='abstractmethod')], level=0), ImportFrom(module='pathlib', names=[alias(name='Path')], level=0), ImportFrom(module='typing', names=[alias(name='TYPE_CHECKING')], level=0), If(test=Name(id='TYPE_CHECKING', ctx=Load()), body=[Import(names=[alias(name='sys')]), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=8)], ctx=Load())]), body=[ImportFrom(module='typing', names=[alias(name='Literal')], level=0)], orelse=[ImportFrom(module='pip._vendor.typing_extensions', names=[alias(name='Literal')], level=0)])], orelse=[]), ClassDef(name='PlatformDirsABC', bases=[Name(id='ABC', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Abstract base class for platform directories.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='appname', annotation=BinOp(left=Name(id='str', ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='appauthor', annotation=BinOp(left=BinOp(left=Name(id='str', ctx=Load()), op=BitOr(), right=Constant(value=None)), op=BitOr(), right=Subscript(value=Name(id='Literal', ctx=Load()), slice=Constant(value=False), ctx=Load()))), arg(arg='version', annotation=BinOp(left=Name(id='str', ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='roaming', annotation=Name(id='bool', ctx=Load())), arg(arg='multipath', annotation=Name(id='bool', ctx=Load())), arg(arg='opinion', annotation=Name(id='bool', ctx=Load())), arg(arg='ensure_exists', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=False), Constant(value=False), Constant(value=True), Constant(value=False)]), body=[Expr(value=Constant(value='\n        Create a new platform directory.\n\n        :param appname: See `appname`.\n        :param appauthor: See `appauthor`.\n        :param version: See `version`.\n        :param roaming: See `roaming`.\n        :param multipath: See `multipath`.\n        :param opinion: See `opinion`.\n        :param ensure_exists: See `ensure_exists`.\n        ')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='appname', ctx=Store())], value=Name(id='appname', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='appauthor', ctx=Store())], value=Name(id='appauthor', ctx=Load())), Expr(value=Constant(value='\n        The name of the app author or distributing body for this application. Typically, it is the owning company name.\n        Defaults to `appname`. You may pass ``False`` to disable it.\n        ')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='version', ctx=Store())], value=Name(id='version', ctx=Load())), Expr(value=Constant(value='\n        An optional version path element to append to the path. You might want to use this if you want multiple versions\n        of your app to be able to run independently. If used, this would typically be ``<major>.<minor>``.\n        ')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='roaming', ctx=Store())], value=Name(id='roaming', ctx=Load())), Expr(value=Constant(value='\n        Whether to use the roaming appdata directory on Windows. That means that for users on a Windows network setup\n        for roaming profiles, this user data will be synced on login (see\n        `here <http://technet.microsoft.com/en-us/library/cc766489(WS.10).aspx>`_).\n        ')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='multipath', ctx=Store())], value=Name(id='multipath', ctx=Load())), Expr(value=Constant(value='\n        An optional parameter only applicable to Unix/Linux which indicates that the entire list of data dirs should be\n        returned. By default, the first item would only be returned.\n        ')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='opinion', ctx=Store())], value=Name(id='opinion', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='ensure_exists', ctx=Store())], value=Name(id='ensure_exists', ctx=Load())), Expr(value=Constant(value='\n        Optionally create the directory (and any missing parents) upon access if it does not exist.\n        By default, no directories are created.\n        '))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_append_app_name_and_version', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='base', annotation=Name(id='str', ctx=Load())), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='params', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Subscript(value=Name(id='base', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='appname', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='params', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='appname', ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='version', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='params', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='version', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Subscript(value=Name(id='base', ctx=Load()), slice=Constant(value=0), ctx=Load()), Starred(value=Name(id='params', ctx=Load()), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_optionally_create_directory', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[])), Return(value=Name(id='path', ctx=Load()))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='_optionally_create_directory', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='path', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='ensure_exists', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]), attr='mkdir', ctx=Load()), args=[], keywords=[keyword(arg='parents', value=Constant(value=True)), keyword(arg='exist_ok', value=Constant(value=True))]))], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='user_data_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: data directory tied to the user'))], decorator_list=[Name(id='property', ctx=Load()), Name(id='abstractmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='site_data_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: data directory shared by users'))], decorator_list=[Name(id='property', ctx=Load()), Name(id='abstractmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_config_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: config directory tied to the user'))], decorator_list=[Name(id='property', ctx=Load()), Name(id='abstractmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='site_config_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: config directory shared by the users'))], decorator_list=[Name(id='property', ctx=Load()), Name(id='abstractmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_cache_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: cache directory tied to the user'))], decorator_list=[Name(id='property', ctx=Load()), Name(id='abstractmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='site_cache_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: cache directory shared by users'))], decorator_list=[Name(id='property', ctx=Load()), Name(id='abstractmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_state_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: state directory tied to the user'))], decorator_list=[Name(id='property', ctx=Load()), Name(id='abstractmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_log_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: log directory tied to the user'))], decorator_list=[Name(id='property', ctx=Load()), Name(id='abstractmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_documents_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: documents directory tied to the user'))], decorator_list=[Name(id='property', ctx=Load()), Name(id='abstractmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_downloads_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: downloads directory tied to the user'))], decorator_list=[Name(id='property', ctx=Load()), Name(id='abstractmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_pictures_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: pictures directory tied to the user'))], decorator_list=[Name(id='property', ctx=Load()), Name(id='abstractmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_videos_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: videos directory tied to the user'))], decorator_list=[Name(id='property', ctx=Load()), Name(id='abstractmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_music_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: music directory tied to the user'))], decorator_list=[Name(id='property', ctx=Load()), Name(id='abstractmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_runtime_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: runtime directory tied to the user'))], decorator_list=[Name(id='property', ctx=Load()), Name(id='abstractmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_data_path', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: data path tied to the user')), Return(value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='user_data_dir', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='Path', ctx=Load())), FunctionDef(name='site_data_path', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: data path shared by users')), Return(value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='site_data_dir', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='Path', ctx=Load())), FunctionDef(name='user_config_path', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: config path tied to the user')), Return(value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='user_config_dir', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='Path', ctx=Load())), FunctionDef(name='site_config_path', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: config path shared by the users')), Return(value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='site_config_dir', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='Path', ctx=Load())), FunctionDef(name='user_cache_path', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: cache path tied to the user')), Return(value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='user_cache_dir', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='Path', ctx=Load())), FunctionDef(name='site_cache_path', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: cache path shared by users')), Return(value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='site_cache_dir', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='Path', ctx=Load())), FunctionDef(name='user_state_path', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: state path tied to the user')), Return(value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='user_state_dir', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='Path', ctx=Load())), FunctionDef(name='user_log_path', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: log path tied to the user')), Return(value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='user_log_dir', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='Path', ctx=Load())), FunctionDef(name='user_documents_path', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: documents path tied to the user')), Return(value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='user_documents_dir', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='Path', ctx=Load())), FunctionDef(name='user_downloads_path', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: downloads path tied to the user')), Return(value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='user_downloads_dir', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='Path', ctx=Load())), FunctionDef(name='user_pictures_path', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: pictures path tied to the user')), Return(value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='user_pictures_dir', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='Path', ctx=Load())), FunctionDef(name='user_videos_path', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: videos path tied to the user')), Return(value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='user_videos_dir', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='Path', ctx=Load())), FunctionDef(name='user_music_path', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: music path tied to the user')), Return(value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='user_music_dir', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='Path', ctx=Load())), FunctionDef(name='user_runtime_path', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':return: runtime path tied to the user')), Return(value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='user_runtime_dir', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='Path', ctx=Load()))], decorator_list=[])], type_ignores=[])