Module(body=[ImportFrom(module='typing', names=[alias(name='TYPE_CHECKING')], level=0), ImportFrom(module='measure', names=[alias(name='Measurement')], level=1), ImportFrom(module='segment', names=[alias(name='Segment')], level=1), ImportFrom(module='style', names=[alias(name='StyleType')], level=1), If(test=Name(id='TYPE_CHECKING', ctx=Load()), body=[ImportFrom(module='console', names=[alias(name='Console'), alias(name='ConsoleOptions'), alias(name='RenderResult'), alias(name='RenderableType')], level=1)], orelse=[]), ClassDef(name='Styled', bases=[], keywords=[], body=[Expr(value=Constant(value='Apply a style to a renderable.\n\n    Args:\n        renderable (RenderableType): Any renderable.\n        style (StyleType): A style to apply across the entire renderable.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='renderable', annotation=Constant(value='RenderableType')), arg(arg='style', annotation=Constant(value='StyleType'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='renderable', ctx=Store())], value=Name(id='renderable', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Store())], value=Name(id='style', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__rich_console__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='console', annotation=Constant(value='Console')), arg(arg='options', annotation=Constant(value='ConsoleOptions'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='style', ctx=Store())], value=Call(func=Attribute(value=Name(id='console', ctx=Load()), attr='get_style', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Load())], keywords=[])), Assign(targets=[Name(id='rendered_segments', ctx=Store())], value=Call(func=Attribute(value=Name(id='console', ctx=Load()), attr='render', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='renderable', ctx=Load()), Name(id='options', ctx=Load())], keywords=[])), Assign(targets=[Name(id='segments', ctx=Store())], value=Call(func=Attribute(value=Name(id='Segment', ctx=Load()), attr='apply_style', ctx=Load()), args=[Name(id='rendered_segments', ctx=Load()), Name(id='style', ctx=Load())], keywords=[])), Return(value=Name(id='segments', ctx=Load()))], decorator_list=[], returns=Constant(value='RenderResult')), FunctionDef(name='__rich_measure__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='console', annotation=Constant(value='Console')), arg(arg='options', annotation=Constant(value='ConsoleOptions'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='Measurement', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='console', ctx=Load()), Name(id='options', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='renderable', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='Measurement', ctx=Load()))], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[ImportFrom(module='pip._vendor.rich', names=[alias(name='print')], level=0), ImportFrom(module='pip._vendor.rich.panel', names=[alias(name='Panel')], level=0), Assign(targets=[Name(id='panel', ctx=Store())], value=Call(func=Name(id='Styled', ctx=Load()), args=[Call(func=Name(id='Panel', ctx=Load()), args=[Constant(value='hello')], keywords=[]), Constant(value='on blue')], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Name(id='panel', ctx=Load())], keywords=[]))], orelse=[])], type_ignores=[])