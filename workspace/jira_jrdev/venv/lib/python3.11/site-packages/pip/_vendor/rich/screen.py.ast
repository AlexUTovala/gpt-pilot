Module(body=[ImportFrom(module='typing', names=[alias(name='Optional'), alias(name='TYPE_CHECKING')], level=0), ImportFrom(module='segment', names=[alias(name='Segment')], level=1), ImportFrom(module='style', names=[alias(name='StyleType')], level=1), ImportFrom(module='_loop', names=[alias(name='loop_last')], level=1), If(test=Name(id='TYPE_CHECKING', ctx=Load()), body=[ImportFrom(module='console', names=[alias(name='Console'), alias(name='ConsoleOptions'), alias(name='RenderResult'), alias(name='RenderableType'), alias(name='Group')], level=1)], orelse=[]), ClassDef(name='Screen', bases=[], keywords=[], body=[Expr(value=Constant(value='A renderable that fills the terminal screen and crops excess.\n\n    Args:\n        renderable (RenderableType): Child renderable.\n        style (StyleType, optional): Optional background style. Defaults to None.\n    ')), AnnAssign(target=Name(id='renderable', ctx=Store()), annotation=Constant(value='RenderableType'), simple=1), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='renderables', annotation=Constant(value='RenderableType')), kwonlyargs=[arg(arg='style', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='StyleType', ctx=Load()), ctx=Load())), arg(arg='application_mode', annotation=Name(id='bool', ctx=Load()))], kw_defaults=[Constant(value=None), Constant(value=False)], defaults=[]), body=[ImportFrom(module='pip._vendor.rich.console', names=[alias(name='Group')], level=0), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='renderable', ctx=Store())], value=Call(func=Name(id='Group', ctx=Load()), args=[Starred(value=Name(id='renderables', ctx=Load()), ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Store())], value=Name(id='style', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='application_mode', ctx=Store())], value=Name(id='application_mode', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__rich_console__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='console', annotation=Constant(value='Console')), arg(arg='options', annotation=Constant(value='ConsoleOptions'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='width', ctx=Store()), Name(id='height', ctx=Store())], ctx=Store())], value=Attribute(value=Name(id='options', ctx=Load()), attr='size', ctx=Load())), Assign(targets=[Name(id='style', ctx=Store())], value=IfExp(test=Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Load()), body=Call(func=Attribute(value=Name(id='console', ctx=Load()), attr='get_style', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Load())], keywords=[]), orelse=Constant(value=None))), Assign(targets=[Name(id='render_options', ctx=Store())], value=Call(func=Attribute(value=Name(id='options', ctx=Load()), attr='update', ctx=Load()), args=[], keywords=[keyword(arg='width', value=Name(id='width', ctx=Load())), keyword(arg='height', value=Name(id='height', ctx=Load()))])), Assign(targets=[Name(id='lines', ctx=Store())], value=Call(func=Attribute(value=Name(id='console', ctx=Load()), attr='render_lines', ctx=Load()), args=[BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='renderable', ctx=Load()), Constant(value='')]), Name(id='render_options', ctx=Load())], keywords=[keyword(arg='style', value=Name(id='style', ctx=Load())), keyword(arg='pad', value=Constant(value=True))])), Assign(targets=[Name(id='lines', ctx=Store())], value=Call(func=Attribute(value=Name(id='Segment', ctx=Load()), attr='set_shape', ctx=Load()), args=[Name(id='lines', ctx=Load()), Name(id='width', ctx=Load()), Name(id='height', ctx=Load())], keywords=[keyword(arg='style', value=Name(id='style', ctx=Load()))])), Assign(targets=[Name(id='new_line', ctx=Store())], value=IfExp(test=Attribute(value=Name(id='self', ctx=Load()), attr='application_mode', ctx=Load()), body=Call(func=Name(id='Segment', ctx=Load()), args=[Constant(value='\n\r')], keywords=[]), orelse=Call(func=Attribute(value=Name(id='Segment', ctx=Load()), attr='line', ctx=Load()), args=[], keywords=[]))), For(target=Tuple(elts=[Name(id='last', ctx=Store()), Name(id='line', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='loop_last', ctx=Load()), args=[Name(id='lines', ctx=Load())], keywords=[]), body=[Expr(value=YieldFrom(value=Name(id='line', ctx=Load()))), If(test=UnaryOp(op=Not(), operand=Name(id='last', ctx=Load())), body=[Expr(value=Yield(value=Name(id='new_line', ctx=Load())))], orelse=[])], orelse=[])], decorator_list=[], returns=Constant(value='RenderResult'))], decorator_list=[])], type_ignores=[])