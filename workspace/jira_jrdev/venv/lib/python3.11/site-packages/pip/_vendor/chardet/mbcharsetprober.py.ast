Module(body=[ImportFrom(module='typing', names=[alias(name='Optional'), alias(name='Union')], level=0), ImportFrom(module='chardistribution', names=[alias(name='CharDistributionAnalysis')], level=1), ImportFrom(module='charsetprober', names=[alias(name='CharSetProber')], level=1), ImportFrom(module='codingstatemachine', names=[alias(name='CodingStateMachine')], level=1), ImportFrom(module='enums', names=[alias(name='LanguageFilter'), alias(name='MachineState'), alias(name='ProbingState')], level=1), ClassDef(name='MultiByteCharSetProber', bases=[Name(id='CharSetProber', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    MultiByteCharSetProber\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='lang_filter', annotation=Name(id='LanguageFilter', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Attribute(value=Name(id='LanguageFilter', ctx=Load()), attr='NONE', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(arg='lang_filter', value=Name(id='lang_filter', ctx=Load()))])), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='distribution_analyzer', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='CharDistributionAnalysis', ctx=Load()), ctx=Load()), value=Constant(value=None), simple=0), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='coding_sm', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='CodingStateMachine', ctx=Load()), ctx=Load()), value=Constant(value=None), simple=0), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_last_char', ctx=Store())], value=Call(func=Name(id='bytearray', ctx=Load()), args=[Constant(value=b'\x00\x00')], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='reset', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='reset', ctx=Load()), args=[], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='coding_sm', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='coding_sm', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='distribution_analyzer', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution_analyzer', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_last_char', ctx=Store())], value=Call(func=Name(id='bytearray', ctx=Load()), args=[Constant(value=b'\x00\x00')], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='feed', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='byte_str', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='bytes', ctx=Load()), Name(id='bytearray', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='coding_sm', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])), Assert(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='distribution_analyzer', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])), For(target=Tuple(elts=[Name(id='i', ctx=Store()), Name(id='byte', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='byte_str', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='coding_state', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='coding_sm', ctx=Load()), attr='next_state', ctx=Load()), args=[Name(id='byte', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='coding_state', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='MachineState', ctx=Load()), attr='ERROR', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='%s %s prober hit error at byte %s'), Attribute(value=Name(id='self', ctx=Load()), attr='charset_name', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='language', ctx=Load()), Name(id='i', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Store())], value=Attribute(value=Name(id='ProbingState', ctx=Load()), attr='NOT_ME', ctx=Load())), Break()], orelse=[]), If(test=Compare(left=Name(id='coding_state', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='MachineState', ctx=Load()), attr='ITS_ME', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Store())], value=Attribute(value=Name(id='ProbingState', ctx=Load()), attr='FOUND_IT', ctx=Load())), Break()], orelse=[]), If(test=Compare(left=Name(id='coding_state', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='MachineState', ctx=Load()), attr='START', ctx=Load())]), body=[Assign(targets=[Name(id='char_len', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='coding_sm', ctx=Load()), attr='get_current_charlen', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='i', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_last_char', ctx=Load()), slice=Constant(value=1), ctx=Store())], value=Name(id='byte', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution_analyzer', ctx=Load()), attr='feed', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_last_char', ctx=Load()), Name(id='char_len', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution_analyzer', ctx=Load()), attr='feed', ctx=Load()), args=[Subscript(value=Name(id='byte_str', ctx=Load()), slice=Slice(lower=BinOp(left=Name(id='i', ctx=Load()), op=Sub(), right=Constant(value=1)), upper=BinOp(left=Name(id='i', ctx=Load()), op=Add(), right=Constant(value=1))), ctx=Load()), Name(id='char_len', ctx=Load())], keywords=[]))])], orelse=[])], orelse=[]), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_last_char', ctx=Load()), slice=Constant(value=0), ctx=Store())], value=Subscript(value=Name(id='byte_str', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='ProbingState', ctx=Load()), attr='DETECTING', ctx=Load())]), body=[If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution_analyzer', ctx=Load()), attr='got_enough_data', ctx=Load()), args=[], keywords=[]), Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_confidence', ctx=Load()), args=[], keywords=[]), ops=[Gt()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='SHORTCUT_THRESHOLD', ctx=Load())])]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Store())], value=Attribute(value=Name(id='ProbingState', ctx=Load()), attr='FOUND_IT', ctx=Load()))], orelse=[])], orelse=[]), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Load()))], decorator_list=[], returns=Name(id='ProbingState', ctx=Load())), FunctionDef(name='get_confidence', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='distribution_analyzer', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution_analyzer', ctx=Load()), attr='get_confidence', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Name(id='float', ctx=Load()))], decorator_list=[])], type_ignores=[])