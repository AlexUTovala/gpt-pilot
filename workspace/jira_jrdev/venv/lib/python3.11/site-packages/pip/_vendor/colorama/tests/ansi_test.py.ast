Module(body=[Import(names=[alias(name='sys')]), ImportFrom(module='unittest', names=[alias(name='TestCase'), alias(name='main')], level=0), ImportFrom(module='ansi', names=[alias(name='Back'), alias(name='Fore'), alias(name='Style')], level=2), ImportFrom(module='ansitowin32', names=[alias(name='AnsiToWin32')], level=2), Assign(targets=[Name(id='stdout_orig', ctx=Store())], value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load())), Assign(targets=[Name(id='stderr_orig', ctx=Store())], value=Attribute(value=Name(id='sys', ctx=Load()), attr='stderr', ctx=Load())), ClassDef(name='AnsiTest', bases=[Name(id='TestCase', ctx=Load())], keywords=[], body=[FunctionDef(name='setUp', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertNotEqual', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load())], keywords=[]), Name(id='AnsiToWin32', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertNotEqual', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Attribute(value=Name(id='sys', ctx=Load()), attr='stderr', ctx=Load())], keywords=[]), Name(id='AnsiToWin32', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='tearDown', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Store())], value=Name(id='stdout_orig', ctx=Load())), Assign(targets=[Attribute(value=Name(id='sys', ctx=Load()), attr='stderr', ctx=Store())], value=Name(id='stderr_orig', ctx=Load()))], decorator_list=[]), FunctionDef(name='testForeAttributes', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Fore', ctx=Load()), attr='BLACK', ctx=Load()), Constant(value='\x1b[30m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Fore', ctx=Load()), attr='RED', ctx=Load()), Constant(value='\x1b[31m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Fore', ctx=Load()), attr='GREEN', ctx=Load()), Constant(value='\x1b[32m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Fore', ctx=Load()), attr='YELLOW', ctx=Load()), Constant(value='\x1b[33m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Fore', ctx=Load()), attr='BLUE', ctx=Load()), Constant(value='\x1b[34m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Fore', ctx=Load()), attr='MAGENTA', ctx=Load()), Constant(value='\x1b[35m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Fore', ctx=Load()), attr='CYAN', ctx=Load()), Constant(value='\x1b[36m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Fore', ctx=Load()), attr='WHITE', ctx=Load()), Constant(value='\x1b[37m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Fore', ctx=Load()), attr='RESET', ctx=Load()), Constant(value='\x1b[39m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Fore', ctx=Load()), attr='LIGHTBLACK_EX', ctx=Load()), Constant(value='\x1b[90m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Fore', ctx=Load()), attr='LIGHTRED_EX', ctx=Load()), Constant(value='\x1b[91m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Fore', ctx=Load()), attr='LIGHTGREEN_EX', ctx=Load()), Constant(value='\x1b[92m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Fore', ctx=Load()), attr='LIGHTYELLOW_EX', ctx=Load()), Constant(value='\x1b[93m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Fore', ctx=Load()), attr='LIGHTBLUE_EX', ctx=Load()), Constant(value='\x1b[94m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Fore', ctx=Load()), attr='LIGHTMAGENTA_EX', ctx=Load()), Constant(value='\x1b[95m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Fore', ctx=Load()), attr='LIGHTCYAN_EX', ctx=Load()), Constant(value='\x1b[96m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Fore', ctx=Load()), attr='LIGHTWHITE_EX', ctx=Load()), Constant(value='\x1b[97m')], keywords=[]))], decorator_list=[]), FunctionDef(name='testBackAttributes', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Back', ctx=Load()), attr='BLACK', ctx=Load()), Constant(value='\x1b[40m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Back', ctx=Load()), attr='RED', ctx=Load()), Constant(value='\x1b[41m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Back', ctx=Load()), attr='GREEN', ctx=Load()), Constant(value='\x1b[42m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Back', ctx=Load()), attr='YELLOW', ctx=Load()), Constant(value='\x1b[43m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Back', ctx=Load()), attr='BLUE', ctx=Load()), Constant(value='\x1b[44m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Back', ctx=Load()), attr='MAGENTA', ctx=Load()), Constant(value='\x1b[45m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Back', ctx=Load()), attr='CYAN', ctx=Load()), Constant(value='\x1b[46m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Back', ctx=Load()), attr='WHITE', ctx=Load()), Constant(value='\x1b[47m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Back', ctx=Load()), attr='RESET', ctx=Load()), Constant(value='\x1b[49m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Back', ctx=Load()), attr='LIGHTBLACK_EX', ctx=Load()), Constant(value='\x1b[100m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Back', ctx=Load()), attr='LIGHTRED_EX', ctx=Load()), Constant(value='\x1b[101m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Back', ctx=Load()), attr='LIGHTGREEN_EX', ctx=Load()), Constant(value='\x1b[102m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Back', ctx=Load()), attr='LIGHTYELLOW_EX', ctx=Load()), Constant(value='\x1b[103m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Back', ctx=Load()), attr='LIGHTBLUE_EX', ctx=Load()), Constant(value='\x1b[104m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Back', ctx=Load()), attr='LIGHTMAGENTA_EX', ctx=Load()), Constant(value='\x1b[105m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Back', ctx=Load()), attr='LIGHTCYAN_EX', ctx=Load()), Constant(value='\x1b[106m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Back', ctx=Load()), attr='LIGHTWHITE_EX', ctx=Load()), Constant(value='\x1b[107m')], keywords=[]))], decorator_list=[]), FunctionDef(name='testStyleAttributes', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Style', ctx=Load()), attr='DIM', ctx=Load()), Constant(value='\x1b[2m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Style', ctx=Load()), attr='NORMAL', ctx=Load()), Constant(value='\x1b[22m')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='Style', ctx=Load()), attr='BRIGHT', ctx=Load()), Constant(value='\x1b[1m')], keywords=[]))], decorator_list=[])], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Expr(value=Call(func=Name(id='main', ctx=Load()), args=[], keywords=[]))], orelse=[])], type_ignores=[])