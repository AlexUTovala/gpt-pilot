Module(body=[Expr(value=Constant(value='\nCommonly used hooks for on_setattr.\n')), ImportFrom(names=[alias(name='_config')], level=1), ImportFrom(module='exceptions', names=[alias(name='FrozenAttributeError')], level=1), FunctionDef(name='pipe', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='setters'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Run all *setters* and return the return value of the last one.\n\n    .. versionadded:: 20.1.0\n    ')), FunctionDef(name='wrapped_pipe', args=arguments(posonlyargs=[], args=[arg(arg='instance'), arg(arg='attrib'), arg(arg='new_value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='rv', ctx=Store())], value=Name(id='new_value', ctx=Load())), For(target=Name(id='setter', ctx=Store()), iter=Name(id='setters', ctx=Load()), body=[Assign(targets=[Name(id='rv', ctx=Store())], value=Call(func=Name(id='setter', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='attrib', ctx=Load()), Name(id='rv', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='rv', ctx=Load()))], decorator_list=[]), Return(value=Name(id='wrapped_pipe', ctx=Load()))], decorator_list=[]), FunctionDef(name='frozen', args=arguments(posonlyargs=[], args=[arg(arg='_'), arg(arg='__'), arg(arg='___')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Prevent an attribute to be modified.\n\n    .. versionadded:: 20.1.0\n    ')), Raise(exc=Call(func=Name(id='FrozenAttributeError', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='validate', args=arguments(posonlyargs=[], args=[arg(arg='instance'), arg(arg='attrib'), arg(arg='new_value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n    Run *attrib*'s validator on *new_value* if it has one.\n\n    .. versionadded:: 20.1.0\n    ")), If(test=Compare(left=Attribute(value=Name(id='_config', ctx=Load()), attr='_run_validators', ctx=Load()), ops=[Is()], comparators=[Constant(value=False)]), body=[Return(value=Name(id='new_value', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='v', ctx=Store())], value=Attribute(value=Name(id='attrib', ctx=Load()), attr='validator', ctx=Load())), If(test=UnaryOp(op=Not(), operand=Name(id='v', ctx=Load())), body=[Return(value=Name(id='new_value', ctx=Load()))], orelse=[]), Expr(value=Call(func=Name(id='v', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='attrib', ctx=Load()), Name(id='new_value', ctx=Load())], keywords=[])), Return(value=Name(id='new_value', ctx=Load()))], decorator_list=[]), FunctionDef(name='convert', args=arguments(posonlyargs=[], args=[arg(arg='instance'), arg(arg='attrib'), arg(arg='new_value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n    Run *attrib*'s converter -- if it has one --  on *new_value* and return the\n    result.\n\n    .. versionadded:: 20.1.0\n    ")), Assign(targets=[Name(id='c', ctx=Store())], value=Attribute(value=Name(id='attrib', ctx=Load()), attr='converter', ctx=Load())), If(test=Name(id='c', ctx=Load()), body=[Return(value=Call(func=Name(id='c', ctx=Load()), args=[Name(id='new_value', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='new_value', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='NO_OP', ctx=Store())], value=Call(func=Name(id='object', ctx=Load()), args=[], keywords=[]))], type_ignores=[])