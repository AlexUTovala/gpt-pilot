Module(body=[Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='set_run_validators'), Constant(value='get_run_validators')], ctx=Load())), Assign(targets=[Name(id='_run_validators', ctx=Store())], value=Constant(value=True)), FunctionDef(name='set_run_validators', args=arguments(posonlyargs=[], args=[arg(arg='run')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Set whether or not validators are run.  By default, they are run.\n\n    .. deprecated:: 21.3.0 It will not be removed, but it also will not be\n        moved to new ``attrs`` namespace. Use `attrs.validators.set_disabled()`\n        instead.\n    ')), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='run', ctx=Load()), Name(id='bool', ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='TypeError', ctx=Load()), args=[Constant(value="'run' must be bool.")], keywords=[]))], orelse=[]), Global(names=['_run_validators']), Assign(targets=[Name(id='_run_validators', ctx=Store())], value=Name(id='run', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_run_validators', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Return whether or not validators are run.\n\n    .. deprecated:: 21.3.0 It will not be removed, but it also will not be\n        moved to new ``attrs`` namespace. Use `attrs.validators.get_disabled()`\n        instead.\n    ')), Return(value=Name(id='_run_validators', ctx=Load()))], decorator_list=[])], type_ignores=[])