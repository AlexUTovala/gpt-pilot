Module(body=[Expr(value=Constant(value='\n\n    webencodings.mklabels\n    ~~~~~~~~~~~~~~~~~~~~~\n\n    Regenarate the webencodings.labels module.\n\n    :copyright: Copyright 2012 by Simon Sapin\n    :license: BSD, see LICENSE for details.\n\n')), Import(names=[alias(name='json')]), Try(body=[ImportFrom(module='urllib', names=[alias(name='urlopen')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[ImportFrom(module='urllib.request', names=[alias(name='urlopen')], level=0)])], orelse=[], finalbody=[]), FunctionDef(name='assert_lower', args=arguments(posonlyargs=[], args=[arg(arg='string')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=Compare(left=Name(id='string', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Name(id='string', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])])), Return(value=Name(id='string', ctx=Load()))], decorator_list=[]), FunctionDef(name='generate', args=arguments(posonlyargs=[], args=[arg(arg='url')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='parts', ctx=Store())], value=List(elts=[Constant(value='"""\n\n    webencodings.labels\n    ~~~~~~~~~~~~~~~~~~~\n\n    Map encoding labels to their name.\n\n    :copyright: Copyright 2012 by Simon Sapin\n    :license: BSD, see LICENSE for details.\n\n"""\n\n# XXX Do not edit!\n# This file is automatically generated by mklabels.py\n\nLABELS = {\n')], ctx=Load())), Assign(targets=[Name(id='labels', ctx=Store())], value=ListComp(elt=Tuple(elts=[Call(func=Attribute(value=Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Name(id='assert_lower', ctx=Load()), args=[Name(id='label', ctx=Load())], keywords=[])], keywords=[]), attr='lstrip', ctx=Load()), args=[Constant(value='u')], keywords=[]), Call(func=Attribute(value=Call(func=Name(id='repr', ctx=Load()), args=[Subscript(value=Name(id='encoding', ctx=Load()), slice=Constant(value='name'), ctx=Load())], keywords=[]), attr='lstrip', ctx=Load()), args=[Constant(value='u')], keywords=[])], ctx=Load()), generators=[comprehension(target=Name(id='category', ctx=Store()), iter=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='loads', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='urlopen', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[]), attr='read', ctx=Load()), args=[], keywords=[]), attr='decode', ctx=Load()), args=[Constant(value='ascii')], keywords=[])], keywords=[]), ifs=[], is_async=0), comprehension(target=Name(id='encoding', ctx=Store()), iter=Subscript(value=Name(id='category', ctx=Load()), slice=Constant(value='encodings'), ctx=Load()), ifs=[], is_async=0), comprehension(target=Name(id='label', ctx=Store()), iter=Subscript(value=Name(id='encoding', ctx=Load()), slice=Constant(value='labels'), ctx=Load()), ifs=[], is_async=0)])), Assign(targets=[Name(id='max_len', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='len', ctx=Load()), args=[Name(id='label', ctx=Load())], keywords=[]), generators=[comprehension(target=Tuple(elts=[Name(id='label', ctx=Store()), Name(id='name', ctx=Store())], ctx=Store()), iter=Name(id='labels', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='extend', ctx=Load()), args=[GeneratorExp(elt=BinOp(left=Constant(value='    %s:%s %s,\n'), op=Mod(), right=Tuple(elts=[Name(id='label', ctx=Load()), BinOp(left=Constant(value=' '), op=Mult(), right=BinOp(left=Name(id='max_len', ctx=Load()), op=Sub(), right=Call(func=Name(id='len', ctx=Load()), args=[Name(id='label', ctx=Load())], keywords=[]))), Name(id='name', ctx=Load())], ctx=Load())), generators=[comprehension(target=Tuple(elts=[Name(id='label', ctx=Store()), Name(id='name', ctx=Store())], ctx=Store()), iter=Name(id='labels', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='}')], keywords=[])), Return(value=Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Name(id='parts', ctx=Load())], keywords=[]))], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Call(func=Name(id='generate', ctx=Load()), args=[Constant(value='http://encoding.spec.whatwg.org/encodings.json')], keywords=[])], keywords=[]))], orelse=[])], type_ignores=[])