Module(body=[Expr(value=Constant(value='\nrequests.hooks\n~~~~~~~~~~~~~~\n\nThis module provides the capabilities for the Requests hooks system.\n\nAvailable hooks:\n\n``response``:\n    The response generated from a Request.\n')), Assign(targets=[Name(id='HOOKS', ctx=Store())], value=List(elts=[Constant(value='response')], ctx=Load())), FunctionDef(name='default_hooks', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=DictComp(key=Name(id='event', ctx=Load()), value=List(elts=[], ctx=Load()), generators=[comprehension(target=Name(id='event', ctx=Store()), iter=Name(id='HOOKS', ctx=Load()), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='dispatch_hook', args=arguments(posonlyargs=[], args=[arg(arg='key'), arg(arg='hooks'), arg(arg='hook_data')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Constant(value='Dispatches a hook dictionary on a given piece of data.')), Assign(targets=[Name(id='hooks', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='hooks', ctx=Load()), Dict(keys=[], values=[])])), Assign(targets=[Name(id='hooks', ctx=Store())], value=Call(func=Attribute(value=Name(id='hooks', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[])), If(test=Name(id='hooks', ctx=Load()), body=[If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='hooks', ctx=Load()), Constant(value='__call__')], keywords=[]), body=[Assign(targets=[Name(id='hooks', ctx=Store())], value=List(elts=[Name(id='hooks', ctx=Load())], ctx=Load()))], orelse=[]), For(target=Name(id='hook', ctx=Store()), iter=Name(id='hooks', ctx=Load()), body=[Assign(targets=[Name(id='_hook_data', ctx=Store())], value=Call(func=Name(id='hook', ctx=Load()), args=[Name(id='hook_data', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), If(test=Compare(left=Name(id='_hook_data', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='hook_data', ctx=Store())], value=Name(id='_hook_data', ctx=Load()))], orelse=[])], orelse=[])], orelse=[]), Return(value=Name(id='hook_data', ctx=Load()))], decorator_list=[])], type_ignores=[])