Module(body=[Expr(value=Constant(value='\ncertifi.py\n~~~~~~~~~~\n\nThis module returns the installation location of cacert.pem or its contents.\n')), Import(names=[alias(name='sys')]), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=11)], ctx=Load())]), body=[ImportFrom(module='importlib.resources', names=[alias(name='as_file'), alias(name='files')], level=0), Assign(targets=[Name(id='_CACERT_CTX', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='_CACERT_PATH', ctx=Store())], value=Constant(value=None)), FunctionDef(name='where', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Global(names=['_CACERT_CTX']), Global(names=['_CACERT_PATH']), If(test=Compare(left=Name(id='_CACERT_PATH', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='_CACERT_CTX', ctx=Store())], value=Call(func=Name(id='as_file', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Name(id='files', ctx=Load()), args=[Constant(value='pip._vendor.certifi')], keywords=[]), attr='joinpath', ctx=Load()), args=[Constant(value='cacert.pem')], keywords=[])], keywords=[])), Assign(targets=[Name(id='_CACERT_PATH', ctx=Store())], value=Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='_CACERT_CTX', ctx=Load()), attr='__enter__', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Return(value=Name(id='_CACERT_PATH', ctx=Load()))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='contents', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='files', ctx=Load()), args=[Constant(value='pip._vendor.certifi')], keywords=[]), attr='joinpath', ctx=Load()), args=[Constant(value='cacert.pem')], keywords=[]), attr='read_text', ctx=Load()), args=[], keywords=[keyword(arg='encoding', value=Constant(value='ascii'))]))], decorator_list=[], returns=Name(id='str', ctx=Load()))], orelse=[If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=7)], ctx=Load())]), body=[ImportFrom(module='importlib.resources', names=[alias(name='path', asname='get_path'), alias(name='read_text')], level=0), Assign(targets=[Name(id='_CACERT_CTX', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='_CACERT_PATH', ctx=Store())], value=Constant(value=None)), FunctionDef(name='where', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Global(names=['_CACERT_CTX']), Global(names=['_CACERT_PATH']), If(test=Compare(left=Name(id='_CACERT_PATH', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='_CACERT_CTX', ctx=Store())], value=Call(func=Name(id='get_path', ctx=Load()), args=[Constant(value='pip._vendor.certifi'), Constant(value='cacert.pem')], keywords=[])), Assign(targets=[Name(id='_CACERT_PATH', ctx=Store())], value=Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='_CACERT_CTX', ctx=Load()), attr='__enter__', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Return(value=Name(id='_CACERT_PATH', ctx=Load()))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='contents', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='read_text', ctx=Load()), args=[Constant(value='pip._vendor.certifi'), Constant(value='cacert.pem')], keywords=[keyword(arg='encoding', value=Constant(value='ascii'))]))], decorator_list=[], returns=Name(id='str', ctx=Load()))], orelse=[Import(names=[alias(name='os')]), Import(names=[alias(name='types')]), ImportFrom(module='typing', names=[alias(name='Union')], level=0), Assign(targets=[Name(id='Package', ctx=Store())], value=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='types', ctx=Load()), attr='ModuleType', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='Resource', ctx=Store())], value=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Constant(value='os.PathLike')], ctx=Load()), ctx=Load())), FunctionDef(name='read_text', args=arguments(posonlyargs=[], args=[arg(arg='package', annotation=Name(id='Package', ctx=Load())), arg(arg='resource', annotation=Name(id='Resource', ctx=Load())), arg(arg='encoding', annotation=Name(id='str', ctx=Load())), arg(arg='errors', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='utf-8'), Constant(value='strict')]), body=[With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Call(func=Name(id='where', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='encoding', value=Name(id='encoding', ctx=Load()))]), optional_vars=Name(id='data', ctx=Store()))], body=[Return(value=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]))])], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='where', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='f', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='dirname', ctx=Load()), args=[Name(id='__file__', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='f', ctx=Load()), Constant(value='cacert.pem')], keywords=[]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='contents', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='read_text', ctx=Load()), args=[Constant(value='pip._vendor.certifi'), Constant(value='cacert.pem')], keywords=[keyword(arg='encoding', value=Constant(value='ascii'))]))], decorator_list=[], returns=Name(id='str', ctx=Load()))])])], type_ignores=[])