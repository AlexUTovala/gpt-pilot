Module(body=[Expr(value=Constant(value='\n    pygments.formatters.rtf\n    ~~~~~~~~~~~~~~~~~~~~~~~\n\n    A formatter that generates RTF files.\n\n    :copyright: Copyright 2006-2023 by the Pygments team, see AUTHORS.\n    :license: BSD, see LICENSE for details.\n')), ImportFrom(module='pip._vendor.pygments.formatter', names=[alias(name='Formatter')], level=0), ImportFrom(module='pip._vendor.pygments.util', names=[alias(name='get_int_opt'), alias(name='surrogatepair')], level=0), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='RtfFormatter')], ctx=Load())), ClassDef(name='RtfFormatter', bases=[Name(id='Formatter', ctx=Load())], keywords=[], body=[Expr(value=Constant(value="\n    Format tokens as RTF markup. This formatter automatically outputs full RTF\n    documents with color information and other useful stuff. Perfect for Copy and\n    Paste into Microsoft(R) Word(R) documents.\n\n    Please note that ``encoding`` and ``outencoding`` options are ignored.\n    The RTF format is ASCII natively, but handles unicode characters correctly\n    thanks to escape sequences.\n\n    .. versionadded:: 0.6\n\n    Additional options accepted:\n\n    `style`\n        The style to use, can be a string or a Style subclass (default:\n        ``'default'``).\n\n    `fontface`\n        The used font family, for example ``Bitstream Vera Sans``. Defaults to\n        some generic font which is supposed to have fixed width.\n\n    `fontsize`\n        Size of the font used. Size is specified in half points. The\n        default is 24 half-points, giving a size 12 font.\n\n        .. versionadded:: 2.0\n    ")), Assign(targets=[Name(id='name', ctx=Store())], value=Constant(value='RTF')), Assign(targets=[Name(id='aliases', ctx=Store())], value=List(elts=[Constant(value='rtf')], ctx=Load())), Assign(targets=[Name(id='filenames', ctx=Store())], value=List(elts=[Constant(value='*.rtf')], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='options'), defaults=[]), body=[Expr(value=Constant(value='\n        Additional options accepted:\n\n        ``fontface``\n            Name of the font used. Could for example be ``\'Courier New\'``\n            to further specify the default which is ``\'\\fmodern\'``. The RTF\n            specification claims that ``\\fmodern`` are "Fixed-pitch serif\n            and sans serif fonts". Hope every RTF implementation thinks\n            the same about modern...\n\n        ')), Expr(value=Call(func=Attribute(value=Name(id='Formatter', ctx=Load()), attr='__init__', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[keyword(value=Name(id='options', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='fontface', ctx=Store())], value=BoolOp(op=Or(), values=[Call(func=Attribute(value=Name(id='options', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='fontface')], keywords=[]), Constant(value='')])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='fontsize', ctx=Store())], value=Call(func=Name(id='get_int_opt', ctx=Load()), args=[Name(id='options', ctx=Load()), Constant(value='fontsize'), Constant(value=0)], keywords=[]))], decorator_list=[]), FunctionDef(name='_escape', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='text')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='text', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='\\'), Constant(value='\\\\')], keywords=[]), attr='replace', ctx=Load()), args=[Constant(value='{'), Constant(value='\\{')], keywords=[]), attr='replace', ctx=Load()), args=[Constant(value='}'), Constant(value='\\}')], keywords=[]))], decorator_list=[]), FunctionDef(name='_escape_text', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='text')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Name(id='text', ctx=Load())), body=[Return(value=Constant(value=''))], orelse=[]), Assign(targets=[Name(id='text', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_escape', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[])), Assign(targets=[Name(id='buf', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='c', ctx=Store()), iter=Name(id='text', ctx=Load()), body=[Assign(targets=[Name(id='cn', ctx=Store())], value=Call(func=Name(id='ord', ctx=Load()), args=[Name(id='c', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='cn', ctx=Load()), ops=[Lt()], comparators=[BinOp(left=Constant(value=2), op=Pow(), right=Constant(value=7))]), body=[Expr(value=Call(func=Attribute(value=Name(id='buf', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='c', ctx=Load())], keywords=[])], keywords=[]))], orelse=[If(test=Compare(left=BinOp(left=Constant(value=2), op=Pow(), right=Constant(value=7)), ops=[LtE(), Lt()], comparators=[Name(id='cn', ctx=Load()), BinOp(left=Constant(value=2), op=Pow(), right=Constant(value=16))]), body=[Expr(value=Call(func=Attribute(value=Name(id='buf', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Constant(value='{\\u%d}'), op=Mod(), right=Name(id='cn', ctx=Load()))], keywords=[]))], orelse=[If(test=Compare(left=BinOp(left=Constant(value=2), op=Pow(), right=Constant(value=16)), ops=[LtE()], comparators=[Name(id='cn', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='buf', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Constant(value='{\\u%d}{\\u%d}'), op=Mod(), right=Call(func=Name(id='surrogatepair', ctx=Load()), args=[Name(id='cn', ctx=Load())], keywords=[]))], keywords=[]))], orelse=[])])])], orelse=[]), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Name(id='buf', ctx=Load())], keywords=[]), attr='replace', ctx=Load()), args=[Constant(value='\n'), Constant(value='\\par\n')], keywords=[]))], decorator_list=[]), FunctionDef(name='format_unencoded', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='tokensource'), arg(arg='outfile')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='outfile', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value='{\\rtf1\\ansi\\uc0\\deff0{\\fonttbl{\\f0\\fmodern\\fprq1\\fcharset0%s;}}{\\colortbl;'), op=Mod(), right=BoolOp(op=Or(), values=[BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='fontface', ctx=Load()), BinOp(left=Constant(value=' '), op=Add(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_escape', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='fontface', ctx=Load())], keywords=[]))]), Constant(value='')]))], keywords=[])), Assign(targets=[Name(id='color_mapping', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='offset', ctx=Store())], value=Constant(value=1)), For(target=Tuple(elts=[Name(id='_', ctx=Store()), Name(id='style', ctx=Store())], ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Load()), body=[For(target=Name(id='color', ctx=Store()), iter=Tuple(elts=[Subscript(value=Name(id='style', ctx=Load()), slice=Constant(value='color'), ctx=Load()), Subscript(value=Name(id='style', ctx=Load()), slice=Constant(value='bgcolor'), ctx=Load()), Subscript(value=Name(id='style', ctx=Load()), slice=Constant(value='border'), ctx=Load())], ctx=Load()), body=[If(test=BoolOp(op=And(), values=[Name(id='color', ctx=Load()), Compare(left=Name(id='color', ctx=Load()), ops=[NotIn()], comparators=[Name(id='color_mapping', ctx=Load())])]), body=[Assign(targets=[Subscript(value=Name(id='color_mapping', ctx=Load()), slice=Name(id='color', ctx=Load()), ctx=Store())], value=Name(id='offset', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='outfile', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value='\\red%d\\green%d\\blue%d;'), op=Mod(), right=Tuple(elts=[Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='color', ctx=Load()), slice=Slice(lower=Constant(value=0), upper=Constant(value=2)), ctx=Load()), Constant(value=16)], keywords=[]), Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='color', ctx=Load()), slice=Slice(lower=Constant(value=2), upper=Constant(value=4)), ctx=Load()), Constant(value=16)], keywords=[]), Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='color', ctx=Load()), slice=Slice(lower=Constant(value=4), upper=Constant(value=6)), ctx=Load()), Constant(value=16)], keywords=[])], ctx=Load()))], keywords=[])), AugAssign(target=Name(id='offset', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[])], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='outfile', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='}\\f0 ')], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='fontsize', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='outfile', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value='\\fs%d'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='fontsize', ctx=Load()))], keywords=[]))], orelse=[]), For(target=Tuple(elts=[Name(id='ttype', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Name(id='tokensource', ctx=Load()), body=[While(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Load()), attr='styles_token', ctx=Load()), args=[Name(id='ttype', ctx=Load())], keywords=[])), Attribute(value=Name(id='ttype', ctx=Load()), attr='parent', ctx=Load())]), body=[Assign(targets=[Name(id='ttype', ctx=Store())], value=Attribute(value=Name(id='ttype', ctx=Load()), attr='parent', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='style', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Load()), attr='style_for_token', ctx=Load()), args=[Name(id='ttype', ctx=Load())], keywords=[])), Assign(targets=[Name(id='buf', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=Subscript(value=Name(id='style', ctx=Load()), slice=Constant(value='bgcolor'), ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='buf', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Constant(value='\\cb%d'), op=Mod(), right=Subscript(value=Name(id='color_mapping', ctx=Load()), slice=Subscript(value=Name(id='style', ctx=Load()), slice=Constant(value='bgcolor'), ctx=Load()), ctx=Load()))], keywords=[]))], orelse=[]), If(test=Subscript(value=Name(id='style', ctx=Load()), slice=Constant(value='color'), ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='buf', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Constant(value='\\cf%d'), op=Mod(), right=Subscript(value=Name(id='color_mapping', ctx=Load()), slice=Subscript(value=Name(id='style', ctx=Load()), slice=Constant(value='color'), ctx=Load()), ctx=Load()))], keywords=[]))], orelse=[]), If(test=Subscript(value=Name(id='style', ctx=Load()), slice=Constant(value='bold'), ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='buf', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='\\b')], keywords=[]))], orelse=[]), If(test=Subscript(value=Name(id='style', ctx=Load()), slice=Constant(value='italic'), ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='buf', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='\\i')], keywords=[]))], orelse=[]), If(test=Subscript(value=Name(id='style', ctx=Load()), slice=Constant(value='underline'), ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='buf', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='\\ul')], keywords=[]))], orelse=[]), If(test=Subscript(value=Name(id='style', ctx=Load()), slice=Constant(value='border'), ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='buf', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Constant(value='\\chbrdr\\chcfpat%d'), op=Mod(), right=Subscript(value=Name(id='color_mapping', ctx=Load()), slice=Subscript(value=Name(id='style', ctx=Load()), slice=Constant(value='border'), ctx=Load()), ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='start', ctx=Store())], value=Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Name(id='buf', ctx=Load())], keywords=[])), If(test=Name(id='start', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='outfile', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value='{%s '), op=Mod(), right=Name(id='start', ctx=Load()))], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='outfile', ctx=Load()), attr='write', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_escape_text', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])], keywords=[])), If(test=Name(id='start', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='outfile', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='}')], keywords=[]))], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='outfile', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='}')], keywords=[]))], decorator_list=[])], decorator_list=[])], type_ignores=[])