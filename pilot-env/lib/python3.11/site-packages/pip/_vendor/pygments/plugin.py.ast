Module(body=[Expr(value=Constant(value='\n    pygments.plugin\n    ~~~~~~~~~~~~~~~\n\n    Pygments plugin interface. By default, this tries to use\n    ``importlib.metadata``, which is in the Python standard\n    library since Python 3.8, or its ``importlib_metadata``\n    backport for earlier versions of Python. It falls back on\n    ``pkg_resources`` if not found. Finally, if ``pkg_resources``\n    is not found either, no plugins are loaded at all.\n\n    lexer plugins::\n\n        [pygments.lexers]\n        yourlexer = yourmodule:YourLexer\n\n    formatter plugins::\n\n        [pygments.formatters]\n        yourformatter = yourformatter:YourFormatter\n        /.ext = yourformatter:YourFormatter\n\n    As you can see, you can define extensions for the formatter\n    with a leading slash.\n\n    syntax plugins::\n\n        [pygments.styles]\n        yourstyle = yourstyle:YourStyle\n\n    filter plugin::\n\n        [pygments.filter]\n        yourfilter = yourfilter:YourFilter\n\n\n    :copyright: Copyright 2006-2023 by the Pygments team, see AUTHORS.\n    :license: BSD, see LICENSE for details.\n')), Assign(targets=[Name(id='LEXER_ENTRY_POINT', ctx=Store())], value=Constant(value='pygments.lexers')), Assign(targets=[Name(id='FORMATTER_ENTRY_POINT', ctx=Store())], value=Constant(value='pygments.formatters')), Assign(targets=[Name(id='STYLE_ENTRY_POINT', ctx=Store())], value=Constant(value='pygments.styles')), Assign(targets=[Name(id='FILTER_ENTRY_POINT', ctx=Store())], value=Constant(value='pygments.filters')), FunctionDef(name='iter_entry_points', args=arguments(posonlyargs=[], args=[arg(arg='group_name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[ImportFrom(module='importlib.metadata', names=[alias(name='entry_points')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Try(body=[ImportFrom(module='importlib_metadata', names=[alias(name='entry_points')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Try(body=[ImportFrom(module='pip._vendor.pkg_resources', names=[alias(name='iter_entry_points')], level=0)], handlers=[ExceptHandler(type=Tuple(elts=[Name(id='ImportError', ctx=Load()), Name(id='OSError', ctx=Load())], ctx=Load()), body=[Return(value=List(elts=[], ctx=Load()))])], orelse=[Return(value=Call(func=Name(id='iter_entry_points', ctx=Load()), args=[Name(id='group_name', ctx=Load())], keywords=[]))], finalbody=[])])], orelse=[], finalbody=[])])], orelse=[], finalbody=[]), Assign(targets=[Name(id='groups', ctx=Store())], value=Call(func=Name(id='entry_points', ctx=Load()), args=[], keywords=[])), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='groups', ctx=Load()), Constant(value='select')], keywords=[]), body=[Return(value=Call(func=Attribute(value=Name(id='groups', ctx=Load()), attr='select', ctx=Load()), args=[], keywords=[keyword(arg='group', value=Name(id='group_name', ctx=Load()))]))], orelse=[Return(value=Call(func=Attribute(value=Name(id='groups', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='group_name', ctx=Load()), List(elts=[], ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='find_plugin_lexers', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='entrypoint', ctx=Store()), iter=Call(func=Name(id='iter_entry_points', ctx=Load()), args=[Name(id='LEXER_ENTRY_POINT', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Call(func=Attribute(value=Name(id='entrypoint', ctx=Load()), attr='load', ctx=Load()), args=[], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='find_plugin_formatters', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='entrypoint', ctx=Store()), iter=Call(func=Name(id='iter_entry_points', ctx=Load()), args=[Name(id='FORMATTER_ENTRY_POINT', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Tuple(elts=[Attribute(value=Name(id='entrypoint', ctx=Load()), attr='name', ctx=Load()), Call(func=Attribute(value=Name(id='entrypoint', ctx=Load()), attr='load', ctx=Load()), args=[], keywords=[])], ctx=Load())))], orelse=[])], decorator_list=[]), FunctionDef(name='find_plugin_styles', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='entrypoint', ctx=Store()), iter=Call(func=Name(id='iter_entry_points', ctx=Load()), args=[Name(id='STYLE_ENTRY_POINT', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Tuple(elts=[Attribute(value=Name(id='entrypoint', ctx=Load()), attr='name', ctx=Load()), Call(func=Attribute(value=Name(id='entrypoint', ctx=Load()), attr='load', ctx=Load()), args=[], keywords=[])], ctx=Load())))], orelse=[])], decorator_list=[]), FunctionDef(name='find_plugin_filters', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='entrypoint', ctx=Store()), iter=Call(func=Name(id='iter_entry_points', ctx=Load()), args=[Name(id='FILTER_ENTRY_POINT', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Tuple(elts=[Attribute(value=Name(id='entrypoint', ctx=Load()), attr='name', ctx=Load()), Call(func=Attribute(value=Name(id='entrypoint', ctx=Load()), attr='load', ctx=Load()), args=[], keywords=[])], ctx=Load())))], orelse=[])], decorator_list=[])], type_ignores=[])