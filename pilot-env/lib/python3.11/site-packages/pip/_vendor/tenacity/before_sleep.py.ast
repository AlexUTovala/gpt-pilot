Module(body=[Import(names=[alias(name='typing')]), ImportFrom(module='pip._vendor.tenacity', names=[alias(name='_utils')], level=0), If(test=Attribute(value=Name(id='typing', ctx=Load()), attr='TYPE_CHECKING', ctx=Load()), body=[Import(names=[alias(name='logging')]), ImportFrom(module='pip._vendor.tenacity', names=[alias(name='RetryCallState')], level=0)], orelse=[]), FunctionDef(name='before_sleep_nothing', args=arguments(posonlyargs=[], args=[arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Before call strategy that does nothing.'))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='before_sleep_log', args=arguments(posonlyargs=[], args=[arg(arg='logger', annotation=Constant(value='logging.Logger')), arg(arg='log_level', annotation=Name(id='int', ctx=Load())), arg(arg='exc_info', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Expr(value=Constant(value='Before call strategy that logs to some logger the attempt.')), FunctionDef(name='log_it', args=arguments(posonlyargs=[], args=[arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[AnnAssign(target=Name(id='local_exc_info', ctx=Store()), annotation=BinOp(left=BinOp(left=Name(id='BaseException', ctx=Load()), op=BitOr(), right=Name(id='bool', ctx=Load())), op=BitOr(), right=Constant(value=None)), simple=1), If(test=Compare(left=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='log_it() called before outcome was set')], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='retry_state', ctx=Load()), attr='next_action', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='log_it() called before next_action was set')], keywords=[]))], orelse=[]), If(test=Attribute(value=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), attr='failed', ctx=Load()), body=[Assign(targets=[Name(id='ex', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), attr='exception', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='verb', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store())], value=Tuple(elts=[Constant(value='raised'), JoinedStr(values=[FormattedValue(value=Attribute(value=Attribute(value=Name(id='ex', ctx=Load()), attr='__class__', ctx=Load()), attr='__name__', ctx=Load()), conversion=-1), Constant(value=': '), FormattedValue(value=Name(id='ex', ctx=Load()), conversion=-1)])], ctx=Load())), If(test=Name(id='exc_info', ctx=Load()), body=[Assign(targets=[Name(id='local_exc_info', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), attr='exception', ctx=Load()), args=[], keywords=[]))], orelse=[Assign(targets=[Name(id='local_exc_info', ctx=Store())], value=Constant(value=False))])], orelse=[Assign(targets=[Tuple(elts=[Name(id='verb', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store())], value=Tuple(elts=[Constant(value='returned'), Call(func=Attribute(value=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), attr='result', ctx=Load()), args=[], keywords=[])], ctx=Load())), Assign(targets=[Name(id='local_exc_info', ctx=Store())], value=Constant(value=False))]), If(test=Compare(left=Attribute(value=Name(id='retry_state', ctx=Load()), attr='fn', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='fn_name', ctx=Store())], value=Constant(value='<unknown>'))], orelse=[Assign(targets=[Name(id='fn_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='_utils', ctx=Load()), attr='get_callback_name', ctx=Load()), args=[Attribute(value=Name(id='retry_state', ctx=Load()), attr='fn', ctx=Load())], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='log', ctx=Load()), args=[Name(id='log_level', ctx=Load()), JoinedStr(values=[Constant(value='Retrying '), FormattedValue(value=Name(id='fn_name', ctx=Load()), conversion=-1), Constant(value=' in '), FormattedValue(value=Attribute(value=Attribute(value=Name(id='retry_state', ctx=Load()), attr='next_action', ctx=Load()), attr='sleep', ctx=Load()), conversion=-1), Constant(value=' seconds as it '), FormattedValue(value=Name(id='verb', ctx=Load()), conversion=-1), Constant(value=' '), FormattedValue(value=Name(id='value', ctx=Load()), conversion=-1), Constant(value='.')])], keywords=[keyword(arg='exc_info', value=Name(id='local_exc_info', ctx=Load()))]))], decorator_list=[], returns=Constant(value=None)), Return(value=Name(id='log_it', ctx=Load()))], decorator_list=[], returns=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Constant(value='RetryCallState')], ctx=Load()), Constant(value=None)], ctx=Load()), ctx=Load()))], type_ignores=[])