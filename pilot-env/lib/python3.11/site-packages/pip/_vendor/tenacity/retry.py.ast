Module(body=[Import(names=[alias(name='abc')]), Import(names=[alias(name='re')]), Import(names=[alias(name='typing')]), If(test=Attribute(value=Name(id='typing', ctx=Load()), attr='TYPE_CHECKING', ctx=Load()), body=[ImportFrom(module='pip._vendor.tenacity', names=[alias(name='RetryCallState')], level=0)], orelse=[]), ClassDef(name='retry_base', bases=[Attribute(value=Name(id='abc', ctx=Load()), attr='ABC', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Abstract base class for retry strategies.')), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[Attribute(value=Name(id='abc', ctx=Load()), attr='abstractmethod', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='__and__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other', annotation=Constant(value='retry_base'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='retry_all', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='other', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value='retry_all')), FunctionDef(name='__or__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other', annotation=Constant(value='retry_base'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='retry_any', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='other', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value='retry_any'))], decorator_list=[]), Assign(targets=[Name(id='RetryBaseT', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Union', ctx=Load()), slice=Tuple(elts=[Name(id='retry_base', ctx=Load()), Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Constant(value='RetryCallState')], ctx=Load()), Name(id='bool', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())), ClassDef(name='_retry_never', bases=[Name(id='retry_base', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Retry strategy that never rejects any result.')), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=False))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='retry_never', ctx=Store())], value=Call(func=Name(id='_retry_never', ctx=Load()), args=[], keywords=[])), ClassDef(name='_retry_always', bases=[Name(id='retry_base', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Retry strategy that always rejects any result.')), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=True))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='retry_always', ctx=Store())], value=Call(func=Name(id='_retry_always', ctx=Load()), args=[], keywords=[])), ClassDef(name='retry_if_exception', bases=[Name(id='retry_base', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Retry strategy that retries if an exception verifies a predicate.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='predicate', annotation=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='BaseException', ctx=Load())], ctx=Load()), Name(id='bool', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='predicate', ctx=Store())], value=Name(id='predicate', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='__call__() called before outcome was set')], keywords=[]))], orelse=[]), If(test=Attribute(value=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), attr='failed', ctx=Load()), body=[Assign(targets=[Name(id='exception', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), attr='exception', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='exception', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='outcome failed but the exception is None')], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='predicate', ctx=Load()), args=[Name(id='exception', ctx=Load())], keywords=[]))], orelse=[Return(value=Constant(value=False))])], decorator_list=[], returns=Name(id='bool', ctx=Load()))], decorator_list=[]), ClassDef(name='retry_if_exception_type', bases=[Name(id='retry_if_exception', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Retries if an exception has been raised of one or more types.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exception_types', annotation=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Union', ctx=Load()), slice=Tuple(elts=[Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Type', ctx=Load()), slice=Name(id='BaseException', ctx=Load()), ctx=Load()), Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Tuple', ctx=Load()), slice=Tuple(elts=[Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Type', ctx=Load()), slice=Name(id='BaseException', ctx=Load()), ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Name(id='Exception', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='exception_types', ctx=Store())], value=Name(id='exception_types', ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='e')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='e', ctx=Load()), Name(id='exception_types', ctx=Load())], keywords=[]))], keywords=[]))], decorator_list=[], returns=Constant(value=None))], decorator_list=[]), ClassDef(name='retry_if_not_exception_type', bases=[Name(id='retry_if_exception', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Retries except an exception has been raised of one or more types.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exception_types', annotation=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Union', ctx=Load()), slice=Tuple(elts=[Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Type', ctx=Load()), slice=Name(id='BaseException', ctx=Load()), ctx=Load()), Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Tuple', ctx=Load()), slice=Tuple(elts=[Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Type', ctx=Load()), slice=Name(id='BaseException', ctx=Load()), ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Name(id='Exception', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='exception_types', ctx=Store())], value=Name(id='exception_types', ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='e')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='e', ctx=Load()), Name(id='exception_types', ctx=Load())], keywords=[])))], keywords=[]))], decorator_list=[], returns=Constant(value=None))], decorator_list=[]), ClassDef(name='retry_unless_exception_type', bases=[Name(id='retry_if_exception', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Retries until an exception is raised of one or more types.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exception_types', annotation=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Union', ctx=Load()), slice=Tuple(elts=[Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Type', ctx=Load()), slice=Name(id='BaseException', ctx=Load()), ctx=Load()), Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Tuple', ctx=Load()), slice=Tuple(elts=[Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Type', ctx=Load()), slice=Name(id='BaseException', ctx=Load()), ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Name(id='Exception', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='exception_types', ctx=Store())], value=Name(id='exception_types', ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='e')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='e', ctx=Load()), Name(id='exception_types', ctx=Load())], keywords=[])))], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='__call__() called before outcome was set')], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), attr='failed', ctx=Load())), body=[Return(value=Constant(value=True))], orelse=[]), Assign(targets=[Name(id='exception', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), attr='exception', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='exception', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='outcome failed but the exception is None')], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='predicate', ctx=Load()), args=[Name(id='exception', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], decorator_list=[]), ClassDef(name='retry_if_exception_cause_type', bases=[Name(id='retry_base', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Retries if any of the causes of the raised exception is of one or more types.\n\n    The check on the type of the cause of the exception is done recursively (until finding\n    an exception in the chain that has no `__cause__`)\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exception_types', annotation=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Union', ctx=Load()), slice=Tuple(elts=[Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Type', ctx=Load()), slice=Name(id='BaseException', ctx=Load()), ctx=Load()), Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Tuple', ctx=Load()), slice=Tuple(elts=[Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Type', ctx=Load()), slice=Name(id='BaseException', ctx=Load()), ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Name(id='Exception', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='exception_cause_types', ctx=Store())], value=Name(id='exception_types', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='__call__ called before outcome was set')], keywords=[]))], orelse=[]), If(test=Attribute(value=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), attr='failed', ctx=Load()), body=[Assign(targets=[Name(id='exc', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), attr='exception', ctx=Load()), args=[], keywords=[])), While(test=Compare(left=Name(id='exc', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='exc', ctx=Load()), attr='__cause__', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='exception_cause_types', ctx=Load())], keywords=[]), body=[Return(value=Constant(value=True))], orelse=[]), Assign(targets=[Name(id='exc', ctx=Store())], value=Attribute(value=Name(id='exc', ctx=Load()), attr='__cause__', ctx=Load()))], orelse=[])], orelse=[]), Return(value=Constant(value=False))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], decorator_list=[]), ClassDef(name='retry_if_result', bases=[Name(id='retry_base', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Retries if the result verifies a predicate.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='predicate', annotation=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Attribute(value=Name(id='typing', ctx=Load()), attr='Any', ctx=Load())], ctx=Load()), Name(id='bool', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='predicate', ctx=Store())], value=Name(id='predicate', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='__call__() called before outcome was set')], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), attr='failed', ctx=Load())), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='predicate', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), attr='result', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[Return(value=Constant(value=False))])], decorator_list=[], returns=Name(id='bool', ctx=Load()))], decorator_list=[]), ClassDef(name='retry_if_not_result', bases=[Name(id='retry_base', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Retries if the result refutes a predicate.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='predicate', annotation=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Attribute(value=Name(id='typing', ctx=Load()), attr='Any', ctx=Load())], ctx=Load()), Name(id='bool', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='predicate', ctx=Store())], value=Name(id='predicate', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='__call__() called before outcome was set')], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), attr='failed', ctx=Load())), body=[Return(value=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='predicate', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), attr='result', ctx=Load()), args=[], keywords=[])], keywords=[])))], orelse=[Return(value=Constant(value=False))])], decorator_list=[], returns=Name(id='bool', ctx=Load()))], decorator_list=[]), ClassDef(name='retry_if_exception_message', bases=[Name(id='retry_if_exception', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Retries if an exception message equals or matches.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='message', annotation=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='match', annotation=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[If(test=BoolOp(op=And(), values=[Name(id='message', ctx=Load()), Name(id='match', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='TypeError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__class__', ctx=Load()), attr='__name__', ctx=Load()), conversion=-1), Constant(value="() takes either 'message' or 'match', not both")])], keywords=[]))], orelse=[]), If(test=Name(id='message', ctx=Load()), body=[FunctionDef(name='message_fnc', args=arguments(posonlyargs=[], args=[arg(arg='exception', annotation=Name(id='BaseException', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Name(id='message', ctx=Load()), ops=[Eq()], comparators=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='exception', ctx=Load())], keywords=[])]))], decorator_list=[], returns=Name(id='bool', ctx=Load())), Assign(targets=[Name(id='predicate', ctx=Store())], value=Name(id='message_fnc', ctx=Load()))], orelse=[If(test=Name(id='match', ctx=Load()), body=[Assign(targets=[Name(id='prog', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Name(id='match', ctx=Load())], keywords=[])), FunctionDef(name='match_fnc', args=arguments(posonlyargs=[], args=[arg(arg='exception', annotation=Name(id='BaseException', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='prog', ctx=Load()), attr='match', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='exception', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], decorator_list=[], returns=Name(id='bool', ctx=Load())), Assign(targets=[Name(id='predicate', ctx=Store())], value=Name(id='match_fnc', ctx=Load()))], orelse=[Raise(exc=Call(func=Name(id='TypeError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__class__', ctx=Load()), attr='__name__', ctx=Load()), conversion=-1), Constant(value="() missing 1 required argument 'message' or 'match'")])], keywords=[]))])]), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='predicate', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None))], decorator_list=[]), ClassDef(name='retry_if_not_exception_message', bases=[Name(id='retry_if_exception_message', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Retries until an exception message equals or matches.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='message', annotation=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='match', annotation=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='message', ctx=Load()), Name(id='match', ctx=Load())], keywords=[])), Assign(targets=[Name(id='if_predicate', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='predicate', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='predicate', ctx=Store())], value=Lambda(args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args_'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs_'), defaults=[]), body=UnaryOp(op=Not(), operand=Call(func=Name(id='if_predicate', ctx=Load()), args=[Starred(value=Name(id='args_', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs_', ctx=Load()))]))))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='__call__() called before outcome was set')], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), attr='failed', ctx=Load())), body=[Return(value=Constant(value=True))], orelse=[]), Assign(targets=[Name(id='exception', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='retry_state', ctx=Load()), attr='outcome', ctx=Load()), attr='exception', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='exception', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='outcome failed but the exception is None')], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='predicate', ctx=Load()), args=[Name(id='exception', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], decorator_list=[]), ClassDef(name='retry_any', bases=[Name(id='retry_base', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Retries if any of the retries condition is valid.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='retries', annotation=Name(id='retry_base', ctx=Load())), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='retries', ctx=Store())], value=Name(id='retries', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='any', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='r', ctx=Load()), args=[Name(id='retry_state', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='r', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='retries', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], decorator_list=[]), ClassDef(name='retry_all', bases=[Name(id='retry_base', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Retries if all the retries condition are valid.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='retries', annotation=Name(id='retry_base', ctx=Load())), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='retries', ctx=Store())], value=Name(id='retries', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='retry_state', annotation=Constant(value='RetryCallState'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='all', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='r', ctx=Load()), args=[Name(id='retry_state', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='r', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='retries', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], decorator_list=[])], type_ignores=[])