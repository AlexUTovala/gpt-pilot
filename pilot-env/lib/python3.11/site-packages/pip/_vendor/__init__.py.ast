Module(body=[Expr(value=Constant(value='\npip._vendor is for vendoring dependencies of pip to prevent needing pip to\ndepend on something external.\n\nFiles inside of pip._vendor should be considered immutable and should only be\nupdated to versions from upstream.\n')), ImportFrom(module='__future__', names=[alias(name='absolute_import')], level=0), Import(names=[alias(name='glob')]), Import(names=[alias(name='os.path')]), Import(names=[alias(name='sys')]), Assign(targets=[Name(id='DEBUNDLED', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='WHEEL_DIR', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='abspath', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='dirname', ctx=Load()), args=[Name(id='__file__', ctx=Load())], keywords=[])], keywords=[])), FunctionDef(name='vendored', args=arguments(posonlyargs=[], args=[arg(arg='modulename')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='vendored_name', ctx=Store())], value=Call(func=Attribute(value=Constant(value='{0}.{1}'), attr='format', ctx=Load()), args=[Name(id='__name__', ctx=Load()), Name(id='modulename', ctx=Load())], keywords=[])), Try(body=[Expr(value=Call(func=Name(id='__import__', ctx=Load()), args=[Name(id='modulename', ctx=Load()), Call(func=Name(id='globals', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='locals', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='level', value=Constant(value=0))]))], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Pass()])], orelse=[Assign(targets=[Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='modules', ctx=Load()), slice=Name(id='vendored_name', ctx=Load()), ctx=Store())], value=Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='modules', ctx=Load()), slice=Name(id='modulename', ctx=Load()), ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='base', ctx=Store()), Name(id='head', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='vendored_name', ctx=Load()), attr='rsplit', ctx=Load()), args=[Constant(value='.'), Constant(value=1)], keywords=[])), Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='modules', ctx=Load()), slice=Name(id='base', ctx=Load()), ctx=Load()), Name(id='head', ctx=Load()), Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='modules', ctx=Load()), slice=Name(id='modulename', ctx=Load()), ctx=Load())], keywords=[]))], finalbody=[])], decorator_list=[]), If(test=Name(id='DEBUNDLED', ctx=Load()), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='path', ctx=Load()), slice=Slice(), ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='glob', ctx=Load()), attr='glob', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='WHEEL_DIR', ctx=Load()), Constant(value='*.whl')], keywords=[])], keywords=[]), op=Add(), right=Attribute(value=Name(id='sys', ctx=Load()), attr='path', ctx=Load()))), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='cachecontrol')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='certifi')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='colorama')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='distlib')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='distro')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='six')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='six.moves')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='six.moves.urllib')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='six.moves.urllib.parse')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='packaging')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='packaging.version')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='packaging.specifiers')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='pep517')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='pkg_resources')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='platformdirs')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='progress')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.exceptions')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3._collections')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.connection')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.connectionpool')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.contrib')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.contrib.ntlmpool')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.contrib.pyopenssl')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.exceptions')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.fields')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.filepost')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.packages')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.packages.ordered_dict')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.packages.six')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.packages.ssl_match_hostname')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.packages.ssl_match_hostname._implementation')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.poolmanager')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.request')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.response')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.util')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.util.connection')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.util.request')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.util.response')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.util.retry')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.util.ssl_')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.util.timeout')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='requests.packages.urllib3.util.url')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='resolvelib')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='rich')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='rich.console')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='rich.highlighter')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='rich.logging')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='rich.markup')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='rich.progress')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='rich.segment')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='rich.style')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='rich.text')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='rich.traceback')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='tenacity')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='tomli')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='truststore')], keywords=[])), Expr(value=Call(func=Name(id='vendored', ctx=Load()), args=[Constant(value='urllib3')], keywords=[]))], orelse=[])], type_ignores=[])