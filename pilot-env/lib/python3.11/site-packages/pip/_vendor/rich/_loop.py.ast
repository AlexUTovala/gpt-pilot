Module(body=[ImportFrom(module='typing', names=[alias(name='Iterable'), alias(name='Tuple'), alias(name='TypeVar')], level=0), Assign(targets=[Name(id='T', ctx=Store())], value=Call(func=Name(id='TypeVar', ctx=Load()), args=[Constant(value='T')], keywords=[])), FunctionDef(name='loop_first', args=arguments(posonlyargs=[], args=[arg(arg='values', annotation=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='T', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Iterate and generate a tuple with a flag for first value.')), Assign(targets=[Name(id='iter_values', ctx=Store())], value=Call(func=Name(id='iter', ctx=Load()), args=[Name(id='values', ctx=Load())], keywords=[])), Try(body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='iter_values', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='StopIteration', ctx=Load()), body=[Return()])], orelse=[], finalbody=[]), Expr(value=Yield(value=Tuple(elts=[Constant(value=True), Name(id='value', ctx=Load())], ctx=Load()))), For(target=Name(id='value', ctx=Store()), iter=Name(id='iter_values', ctx=Load()), body=[Expr(value=Yield(value=Tuple(elts=[Constant(value=False), Name(id='value', ctx=Load())], ctx=Load())))], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='bool', ctx=Load()), Name(id='T', ctx=Load())], ctx=Load()), ctx=Load()), ctx=Load())), FunctionDef(name='loop_last', args=arguments(posonlyargs=[], args=[arg(arg='values', annotation=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='T', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Iterate and generate a tuple with a flag for last value.')), Assign(targets=[Name(id='iter_values', ctx=Store())], value=Call(func=Name(id='iter', ctx=Load()), args=[Name(id='values', ctx=Load())], keywords=[])), Try(body=[Assign(targets=[Name(id='previous_value', ctx=Store())], value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='iter_values', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='StopIteration', ctx=Load()), body=[Return()])], orelse=[], finalbody=[]), For(target=Name(id='value', ctx=Store()), iter=Name(id='iter_values', ctx=Load()), body=[Expr(value=Yield(value=Tuple(elts=[Constant(value=False), Name(id='previous_value', ctx=Load())], ctx=Load()))), Assign(targets=[Name(id='previous_value', ctx=Store())], value=Name(id='value', ctx=Load()))], orelse=[]), Expr(value=Yield(value=Tuple(elts=[Constant(value=True), Name(id='previous_value', ctx=Load())], ctx=Load())))], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='bool', ctx=Load()), Name(id='T', ctx=Load())], ctx=Load()), ctx=Load()), ctx=Load())), FunctionDef(name='loop_first_last', args=arguments(posonlyargs=[], args=[arg(arg='values', annotation=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='T', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Iterate and generate a tuple with a flag for first and last value.')), Assign(targets=[Name(id='iter_values', ctx=Store())], value=Call(func=Name(id='iter', ctx=Load()), args=[Name(id='values', ctx=Load())], keywords=[])), Try(body=[Assign(targets=[Name(id='previous_value', ctx=Store())], value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='iter_values', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='StopIteration', ctx=Load()), body=[Return()])], orelse=[], finalbody=[]), Assign(targets=[Name(id='first', ctx=Store())], value=Constant(value=True)), For(target=Name(id='value', ctx=Store()), iter=Name(id='iter_values', ctx=Load()), body=[Expr(value=Yield(value=Tuple(elts=[Name(id='first', ctx=Load()), Constant(value=False), Name(id='previous_value', ctx=Load())], ctx=Load()))), Assign(targets=[Name(id='first', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='previous_value', ctx=Store())], value=Name(id='value', ctx=Load()))], orelse=[]), Expr(value=Yield(value=Tuple(elts=[Name(id='first', ctx=Load()), Constant(value=True), Name(id='previous_value', ctx=Load())], ctx=Load())))], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='bool', ctx=Load()), Name(id='bool', ctx=Load()), Name(id='T', ctx=Load())], ctx=Load()), ctx=Load()), ctx=Load()))], type_ignores=[])