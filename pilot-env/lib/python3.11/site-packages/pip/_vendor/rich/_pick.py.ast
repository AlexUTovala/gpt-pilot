Module(body=[ImportFrom(module='typing', names=[alias(name='Optional')], level=0), FunctionDef(name='pick_bool', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='values', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='bool', ctx=Load()), ctx=Load())), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Pick the first non-none bool or return the last value.\n\n    Args:\n        *values (bool): Any number of boolean or None values.\n\n    Returns:\n        bool: First non-none boolean.\n    ')), Assert(test=Name(id='values', ctx=Load()), msg=Constant(value='1 or more values required')), For(target=Name(id='value', ctx=Store()), iter=Name(id='values', ctx=Load()), body=[If(test=Compare(left=Name(id='value', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Name(id='value', ctx=Load()))], orelse=[])], orelse=[]), Return(value=Call(func=Name(id='bool', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], type_ignores=[])