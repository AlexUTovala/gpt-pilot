Module(body=[ImportFrom(module='typing', names=[alias(name='List'), alias(name='TypeVar')], level=0), Assign(targets=[Name(id='T', ctx=Store())], value=Call(func=Name(id='TypeVar', ctx=Load()), args=[Constant(value='T')], keywords=[])), ClassDef(name='Stack', bases=[Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='T', ctx=Load()), ctx=Load())], keywords=[], body=[Expr(value=Constant(value='A small shim over builtin list.')), FunctionDef(name='top', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get top of stack.')), Return(value=Subscript(value=Name(id='self', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='T', ctx=Load())), FunctionDef(name='push', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='item', annotation=Name(id='T', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Push an item on to the stack (append in stack nomenclature).')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='item', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None))], decorator_list=[])], type_ignores=[])