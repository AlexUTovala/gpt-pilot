Module(body=[ImportFrom(module='typing', names=[alias(name='cast'), alias(name='List'), alias(name='Optional'), alias(name='TYPE_CHECKING'), alias(name='Union')], level=0), ImportFrom(module='_spinners', names=[alias(name='SPINNERS')], level=1), ImportFrom(module='measure', names=[alias(name='Measurement')], level=1), ImportFrom(module='table', names=[alias(name='Table')], level=1), ImportFrom(module='text', names=[alias(name='Text')], level=1), If(test=Name(id='TYPE_CHECKING', ctx=Load()), body=[ImportFrom(module='console', names=[alias(name='Console'), alias(name='ConsoleOptions'), alias(name='RenderResult'), alias(name='RenderableType')], level=1), ImportFrom(module='style', names=[alias(name='StyleType')], level=1)], orelse=[]), ClassDef(name='Spinner', bases=[], keywords=[], body=[Expr(value=Constant(value='A spinner animation.\n\n    Args:\n        name (str): Name of spinner (run python -m rich.spinner).\n        text (RenderableType, optional): A renderable to display at the right of the spinner (str or Text typically). Defaults to "".\n        style (StyleType, optional): Style for spinner animation. Defaults to None.\n        speed (float, optional): Speed factor for animation. Defaults to 1.0.\n\n    Raises:\n        KeyError: If name isn\'t one of the supported spinner animations.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name', annotation=Name(id='str', ctx=Load())), arg(arg='text', annotation=Constant(value='RenderableType'))], kwonlyargs=[arg(arg='style', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Constant(value='StyleType'), ctx=Load())), arg(arg='speed', annotation=Name(id='float', ctx=Load()))], kw_defaults=[Constant(value=None), Constant(value=1.0)], defaults=[Constant(value='')]), body=[Try(body=[Assign(targets=[Name(id='spinner', ctx=Store())], value=Subscript(value=Name(id='SPINNERS', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Raise(exc=Call(func=Name(id='KeyError', ctx=Load()), args=[JoinedStr(values=[Constant(value='no spinner called '), FormattedValue(value=Name(id='name', ctx=Load()), conversion=114)])], keywords=[]))])], orelse=[], finalbody=[]), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='text', ctx=Store()), annotation=Constant(value='Union[RenderableType, Text]'), value=IfExp(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='text', ctx=Load()), Name(id='str', ctx=Load())], keywords=[]), body=Call(func=Attribute(value=Name(id='Text', ctx=Load()), attr='from_markup', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[]), orelse=Name(id='text', ctx=Load())), simple=0), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='frames', ctx=Store())], value=Subscript(value=Call(func=Name(id='cast', ctx=Load()), args=[Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), Subscript(value=Name(id='spinner', ctx=Load()), slice=Constant(value='frames'), ctx=Load())], keywords=[]), slice=Slice(), ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='interval', ctx=Store())], value=Call(func=Name(id='cast', ctx=Load()), args=[Name(id='float', ctx=Load()), Subscript(value=Name(id='spinner', ctx=Load()), slice=Constant(value='interval'), ctx=Load())], keywords=[])), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='start_time', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='float', ctx=Load()), ctx=Load()), value=Constant(value=None), simple=0), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Store())], value=Name(id='style', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='speed', ctx=Store())], value=Name(id='speed', ctx=Load())), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='frame_no_offset', ctx=Store()), annotation=Name(id='float', ctx=Load()), value=Constant(value=0.0), simple=0), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_update_speed', ctx=Store())], value=Constant(value=0.0))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__rich_console__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='console', annotation=Constant(value='Console')), arg(arg='options', annotation=Constant(value='ConsoleOptions'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Yield(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='render', ctx=Load()), args=[Call(func=Attribute(value=Name(id='console', ctx=Load()), attr='get_time', ctx=Load()), args=[], keywords=[])], keywords=[])))], decorator_list=[], returns=Constant(value='RenderResult')), FunctionDef(name='__rich_measure__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='console', annotation=Constant(value='Console')), arg(arg='options', annotation=Constant(value='ConsoleOptions'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='text', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='render', ctx=Load()), args=[Constant(value=0)], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='Measurement', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='console', ctx=Load()), Name(id='options', ctx=Load()), Name(id='text', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='Measurement', ctx=Load())), FunctionDef(name='render', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='time', annotation=Name(id='float', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Render the spinner for a given time.\n\n        Args:\n            time (float): Time in seconds.\n\n        Returns:\n            RenderableType: A renderable containing animation frame.\n        ')), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='start_time', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='start_time', ctx=Store())], value=Name(id='time', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='frame_no', ctx=Store())], value=BinOp(left=BinOp(left=BinOp(left=BinOp(left=Name(id='time', ctx=Load()), op=Sub(), right=Attribute(value=Name(id='self', ctx=Load()), attr='start_time', ctx=Load())), op=Mult(), right=Attribute(value=Name(id='self', ctx=Load()), attr='speed', ctx=Load())), op=Div(), right=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='interval', ctx=Load()), op=Div(), right=Constant(value=1000.0))), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='frame_no_offset', ctx=Load()))), Assign(targets=[Name(id='frame', ctx=Store())], value=Call(func=Name(id='Text', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='frames', ctx=Load()), slice=BinOp(left=Call(func=Name(id='int', ctx=Load()), args=[Name(id='frame_no', ctx=Load())], keywords=[]), op=Mod(), right=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='frames', ctx=Load())], keywords=[])), ctx=Load())], keywords=[keyword(arg='style', value=BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Load()), Constant(value='')]))])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_update_speed', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='frame_no_offset', ctx=Store())], value=Name(id='frame_no', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='start_time', ctx=Store())], value=Name(id='time', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='speed', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_update_speed', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_update_speed', ctx=Store())], value=Constant(value=0.0))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='text', ctx=Load())), body=[Return(value=Name(id='frame', ctx=Load()))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='text', ctx=Load()), Tuple(elts=[Name(id='str', ctx=Load()), Name(id='Text', ctx=Load())], ctx=Load())], keywords=[]), body=[Return(value=Call(func=Attribute(value=Name(id='Text', ctx=Load()), attr='assemble', ctx=Load()), args=[Name(id='frame', ctx=Load()), Constant(value=' '), Attribute(value=Name(id='self', ctx=Load()), attr='text', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='table', ctx=Store())], value=Call(func=Attribute(value=Name(id='Table', ctx=Load()), attr='grid', ctx=Load()), args=[], keywords=[keyword(arg='padding', value=Constant(value=1))])), Expr(value=Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='add_row', ctx=Load()), args=[Name(id='frame', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='text', ctx=Load())], keywords=[])), Return(value=Name(id='table', ctx=Load()))])])], decorator_list=[], returns=Constant(value='RenderableType')), FunctionDef(name='update', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[arg(arg='text', annotation=Constant(value='RenderableType')), arg(arg='style', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Constant(value='StyleType'), ctx=Load())), arg(arg='speed', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='float', ctx=Load()), ctx=Load()))], kw_defaults=[Constant(value=''), Constant(value=None), Constant(value=None)], defaults=[]), body=[Expr(value=Constant(value='Updates attributes of a spinner after it has been started.\n\n        Args:\n            text (RenderableType, optional): A renderable to display at the right of the spinner (str or Text typically). Defaults to "".\n            style (StyleType, optional): Style for spinner animation. Defaults to None.\n            speed (float, optional): Speed factor for animation. Defaults to None.\n        ')), If(test=Name(id='text', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='text', ctx=Store())], value=IfExp(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='text', ctx=Load()), Name(id='str', ctx=Load())], keywords=[]), body=Call(func=Attribute(value=Name(id='Text', ctx=Load()), attr='from_markup', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[]), orelse=Name(id='text', ctx=Load())))], orelse=[]), If(test=Name(id='style', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Store())], value=Name(id='style', ctx=Load()))], orelse=[]), If(test=Name(id='speed', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_update_speed', ctx=Store())], value=Name(id='speed', ctx=Load()))], orelse=[])], decorator_list=[], returns=Constant(value=None))], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[ImportFrom(module='time', names=[alias(name='sleep')], level=0), ImportFrom(module='columns', names=[alias(name='Columns')], level=1), ImportFrom(module='panel', names=[alias(name='Panel')], level=1), ImportFrom(module='live', names=[alias(name='Live')], level=1), Assign(targets=[Name(id='all_spinners', ctx=Store())], value=Call(func=Name(id='Columns', ctx=Load()), args=[ListComp(elt=Call(func=Name(id='Spinner', ctx=Load()), args=[Name(id='spinner_name', ctx=Load())], keywords=[keyword(arg='text', value=Call(func=Name(id='Text', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Name(id='spinner_name', ctx=Load())], keywords=[])], keywords=[keyword(arg='style', value=Constant(value='green'))]))]), generators=[comprehension(target=Name(id='spinner_name', ctx=Store()), iter=Call(func=Name(id='sorted', ctx=Load()), args=[Call(func=Attribute(value=Name(id='SPINNERS', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[]), ifs=[], is_async=0)])], keywords=[keyword(arg='column_first', value=Constant(value=True)), keyword(arg='expand', value=Constant(value=True))])), With(items=[withitem(context_expr=Call(func=Name(id='Live', ctx=Load()), args=[Call(func=Name(id='Panel', ctx=Load()), args=[Name(id='all_spinners', ctx=Load())], keywords=[keyword(arg='title', value=Constant(value='Spinners')), keyword(arg='border_style', value=Constant(value='blue'))])], keywords=[keyword(arg='refresh_per_second', value=Constant(value=20))]), optional_vars=Name(id='live', ctx=Store()))], body=[While(test=Constant(value=True), body=[Expr(value=Call(func=Name(id='sleep', ctx=Load()), args=[Constant(value=0.1)], keywords=[]))], orelse=[])])], orelse=[])], type_ignores=[])