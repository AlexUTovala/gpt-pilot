Module(body=[ImportFrom(module='__future__', names=[alias(name='unicode_literals')], level=0), Import(names=[alias(name='bisect')]), Import(names=[alias(name='io')]), Import(names=[alias(name='logging')]), Import(names=[alias(name='os')]), Import(names=[alias(name='pkgutil')]), Import(names=[alias(name='sys')]), Import(names=[alias(name='types')]), Import(names=[alias(name='zipimport')]), ImportFrom(names=[alias(name='DistlibException')], level=1), ImportFrom(module='util', names=[alias(name='cached_property'), alias(name='get_cache_base'), alias(name='Cache')], level=1), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Name(id='__name__', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cache', ctx=Store())], value=Constant(value=None)), ClassDef(name='ResourceCache', bases=[Name(id='Cache', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='base')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='base', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='base', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Call(func=Name(id='get_cache_base', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='str', ctx=Load()), args=[Constant(value='resource-cache')], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ResourceCache', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='base', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='is_stale', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource'), arg(arg='path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Is the cache stale for the given resource?\n\n        :param resource: The :class:`Resource` being cached.\n        :param path: The path of the resource in the cache.\n        :return: True if the cache is stale.\n        ')), Return(value=Constant(value=True))], decorator_list=[]), FunctionDef(name='get', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Get a resource into the cache,\n\n        :param resource: A :class:`Resource` instance.\n        :return: The pathname of the resource in the cache.\n        ')), Assign(targets=[Tuple(elts=[Name(id='prefix', ctx=Store()), Name(id='path', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='resource', ctx=Load()), attr='finder', ctx=Load()), attr='get_cache_info', ctx=Load()), args=[Name(id='resource', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='prefix', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='result', ctx=Store())], value=Name(id='path', ctx=Load()))], orelse=[Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='base', ctx=Load()), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix_to_dir', ctx=Load()), args=[Name(id='prefix', ctx=Load())], keywords=[]), Name(id='path', ctx=Load())], keywords=[])), Assign(targets=[Name(id='dirname', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='dirname', ctx=Load()), args=[Name(id='result', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='result', ctx=Load())], keywords=[])), body=[Assign(targets=[Name(id='stale', ctx=Store())], value=Constant(value=True))], orelse=[Assign(targets=[Name(id='stale', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_stale', ctx=Load()), args=[Name(id='resource', ctx=Load()), Name(id='path', ctx=Load())], keywords=[]))]), If(test=Name(id='stale', ctx=Load()), body=[With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='result', ctx=Load()), Constant(value='wb')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='write', ctx=Load()), args=[Attribute(value=Name(id='resource', ctx=Load()), attr='bytes', ctx=Load())], keywords=[]))])], orelse=[])]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='ResourceBase', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='finder'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='finder', ctx=Store())], value=Name(id='finder', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store())], value=Name(id='name', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='Resource', bases=[Name(id='ResourceBase', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    A class representing an in-package resource, such as a data file. This is\n    not normally instantiated by user code, but rather by a\n    :class:`ResourceFinder` which manages the resource.\n    ')), Assign(targets=[Name(id='is_container', ctx=Store())], value=Constant(value=False)), FunctionDef(name='as_stream', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Get the resource as a stream.\n\n        This is not a property to make it obvious that it returns a new stream\n        each time.\n        ')), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='finder', ctx=Load()), attr='get_stream', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='file_path', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Global(names=['cache']), If(test=Compare(left=Name(id='cache', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='cache', ctx=Store())], value=Call(func=Name(id='ResourceCache', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='cache', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[Name(id='cached_property', ctx=Load())]), FunctionDef(name='bytes', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='finder', ctx=Load()), attr='get_bytes', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[Name(id='cached_property', ctx=Load())]), FunctionDef(name='size', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='finder', ctx=Load()), attr='get_size', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[Name(id='cached_property', ctx=Load())])], decorator_list=[]), ClassDef(name='ResourceContainer', bases=[Name(id='ResourceBase', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='is_container', ctx=Store())], value=Constant(value=True)), FunctionDef(name='resources', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='finder', ctx=Load()), attr='get_resources', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[Name(id='cached_property', ctx=Load())])], decorator_list=[]), ClassDef(name='ResourceFinder', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    Resource finder for file system resources.\n    ')), If(test=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='java')], keywords=[]), body=[Assign(targets=[Name(id='skipped_extensions', ctx=Store())], value=Tuple(elts=[Constant(value='.pyc'), Constant(value='.pyo'), Constant(value='.class')], ctx=Load()))], orelse=[Assign(targets=[Name(id='skipped_extensions', ctx=Store())], value=Tuple(elts=[Constant(value='.pyc'), Constant(value='.pyo')], ctx=Load()))]), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='module')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='module', ctx=Store())], value=Name(id='module', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='loader', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='module', ctx=Load()), Constant(value='__loader__'), Constant(value=None)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='base', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='dirname', ctx=Load()), args=[Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='module', ctx=Load()), Constant(value='__file__'), Constant(value='')], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='_adjust_path', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='realpath', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_make_path', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource_name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='resource_name', ctx=Load()), Name(id='bytes', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='sep', ctx=Store())], value=Constant(value=b'/'))], orelse=[Assign(targets=[Name(id='sep', ctx=Store())], value=Constant(value='/'))]), Assign(targets=[Name(id='parts', ctx=Store())], value=Call(func=Attribute(value=Name(id='resource_name', ctx=Load()), attr='split', ctx=Load()), args=[Name(id='sep', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='insert', ctx=Load()), args=[Constant(value=0), Attribute(value=Name(id='self', ctx=Load()), attr='base', ctx=Load())], keywords=[])), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Starred(value=Name(id='parts', ctx=Load()), ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_adjust_path', ctx=Load()), args=[Name(id='result', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_find', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_cache_info', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Tuple(elts=[Constant(value=None), Attribute(value=Name(id='resource', ctx=Load()), attr='path', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='find', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource_name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_make_path', ctx=Load()), args=[Name(id='resource_name', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_find', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[])), body=[Assign(targets=[Name(id='result', ctx=Store())], value=Constant(value=None))], orelse=[If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_is_directory', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Name(id='ResourceContainer', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='resource_name', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Name(id='Resource', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='resource_name', ctx=Load())], keywords=[]))]), Assign(targets=[Attribute(value=Name(id='result', ctx=Load()), attr='path', ctx=Store())], value=Name(id='path', ctx=Load()))]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_stream', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='open', ctx=Load()), args=[Attribute(value=Name(id='resource', ctx=Load()), attr='path', ctx=Load()), Constant(value='rb')], keywords=[]))], decorator_list=[]), FunctionDef(name='get_bytes', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Attribute(value=Name(id='resource', ctx=Load()), attr='path', ctx=Load()), Constant(value='rb')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Return(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]))])], decorator_list=[]), FunctionDef(name='get_size', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='getsize', ctx=Load()), args=[Attribute(value=Name(id='resource', ctx=Load()), attr='path', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_resources', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='allowed', args=arguments(posonlyargs=[], args=[arg(arg='f')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BoolOp(op=And(), values=[Compare(left=Name(id='f', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='__pycache__')]), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='endswith', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='skipped_extensions', ctx=Load())], keywords=[]))]))], decorator_list=[]), Return(value=Call(func=Name(id='set', ctx=Load()), args=[ListComp(elt=Name(id='f', ctx=Load()), generators=[comprehension(target=Name(id='f', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Attribute(value=Name(id='resource', ctx=Load()), attr='path', ctx=Load())], keywords=[]), ifs=[Call(func=Name(id='allowed', ctx=Load()), args=[Name(id='f', ctx=Load())], keywords=[])], is_async=0)])], keywords=[]))], decorator_list=[]), FunctionDef(name='is_container', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_is_directory', ctx=Load()), args=[Attribute(value=Name(id='resource', ctx=Load()), attr='path', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='_is_directory', ctx=Store())], value=Call(func=Name(id='staticmethod', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load())], keywords=[])), FunctionDef(name='iterator', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource_name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='find', ctx=Load()), args=[Name(id='resource_name', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='resource', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='todo', ctx=Store())], value=List(elts=[Name(id='resource', ctx=Load())], ctx=Load())), While(test=Name(id='todo', ctx=Load()), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='todo', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value=0)], keywords=[])), Expr(value=Yield(value=Name(id='resource', ctx=Load()))), If(test=Attribute(value=Name(id='resource', ctx=Load()), attr='is_container', ctx=Load()), body=[Assign(targets=[Name(id='rname', ctx=Store())], value=Attribute(value=Name(id='resource', ctx=Load()), attr='name', ctx=Load())), For(target=Name(id='name', ctx=Store()), iter=Attribute(value=Name(id='resource', ctx=Load()), attr='resources', ctx=Load()), body=[If(test=UnaryOp(op=Not(), operand=Name(id='rname', ctx=Load())), body=[Assign(targets=[Name(id='new_name', ctx=Store())], value=Name(id='name', ctx=Load()))], orelse=[Assign(targets=[Name(id='new_name', ctx=Store())], value=Call(func=Attribute(value=Constant(value='/'), attr='join', ctx=Load()), args=[List(elts=[Name(id='rname', ctx=Load()), Name(id='name', ctx=Load())], ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='child', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='find', ctx=Load()), args=[Name(id='new_name', ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='child', ctx=Load()), attr='is_container', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='todo', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='child', ctx=Load())], keywords=[]))], orelse=[Expr(value=Yield(value=Name(id='child', ctx=Load())))])], orelse=[])], orelse=[])], orelse=[])], orelse=[])], decorator_list=[])], decorator_list=[]), ClassDef(name='ZipResourceFinder', bases=[Name(id='ResourceFinder', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    Resource finder for resources in .zip files.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='module')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ZipResourceFinder', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='module', ctx=Load())], keywords=[])), Assign(targets=[Name(id='archive', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='loader', ctx=Load()), attr='archive', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='prefix_len', ctx=Store())], value=BinOp(left=Constant(value=1), op=Add(), right=Call(func=Name(id='len', ctx=Load()), args=[Name(id='archive', ctx=Load())], keywords=[]))), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='loader', ctx=Load()), Constant(value='_files')], keywords=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_files', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='loader', ctx=Load()), attr='_files', ctx=Load()))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_files', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='zipimport', ctx=Load()), attr='_zip_directory_cache', ctx=Load()), slice=Name(id='archive', ctx=Load()), ctx=Load()))]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Store())], value=Call(func=Name(id='sorted', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_files', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_adjust_path', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Name(id='path', ctx=Load()))], decorator_list=[]), FunctionDef(name='_find', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Subscript(value=Name(id='path', ctx=Load()), slice=Slice(lower=Attribute(value=Name(id='self', ctx=Load()), attr='prefix_len', ctx=Load())), ctx=Load())), If(test=Compare(left=Name(id='path', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_files', ctx=Load())]), body=[Assign(targets=[Name(id='result', ctx=Store())], value=Constant(value=True))], orelse=[If(test=BoolOp(op=And(), values=[Name(id='path', ctx=Load()), Compare(left=Subscript(value=Name(id='path', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='os', ctx=Load()), attr='sep', ctx=Load())])]), body=[Assign(targets=[Name(id='path', ctx=Store())], value=BinOp(left=Name(id='path', ctx=Load()), op=Add(), right=Attribute(value=Name(id='os', ctx=Load()), attr='sep', ctx=Load())))], orelse=[]), Assign(targets=[Name(id='i', ctx=Store())], value=Call(func=Attribute(value=Name(id='bisect', ctx=Load()), attr='bisect', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Load()), Name(id='path', ctx=Load())], keywords=[])), Try(body=[Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), attr='startswith', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='IndexError', ctx=Load()), body=[Assign(targets=[Name(id='result', ctx=Store())], value=Constant(value=False))])], orelse=[], finalbody=[])]), If(test=UnaryOp(op=Not(), operand=Name(id='result', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='_find failed: %r %r'), Name(id='path', ctx=Load()), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='loader', ctx=Load()), attr='prefix', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='_find worked: %r %r'), Name(id='path', ctx=Load()), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='loader', ctx=Load()), attr='prefix', ctx=Load())], keywords=[]))]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_cache_info', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='prefix', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='loader', ctx=Load()), attr='archive', ctx=Load())), Assign(targets=[Name(id='path', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='resource', ctx=Load()), attr='path', ctx=Load()), slice=Slice(lower=BinOp(left=Constant(value=1), op=Add(), right=Call(func=Name(id='len', ctx=Load()), args=[Name(id='prefix', ctx=Load())], keywords=[]))), ctx=Load())), Return(value=Tuple(elts=[Name(id='prefix', ctx=Load()), Name(id='path', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='get_bytes', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='loader', ctx=Load()), attr='get_data', ctx=Load()), args=[Attribute(value=Name(id='resource', ctx=Load()), attr='path', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_stream', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='BytesIO', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_bytes', ctx=Load()), args=[Name(id='resource', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='get_size', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='resource', ctx=Load()), attr='path', ctx=Load()), slice=Slice(lower=Attribute(value=Name(id='self', ctx=Load()), attr='prefix_len', ctx=Load())), ctx=Load())), Return(value=Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_files', ctx=Load()), slice=Name(id='path', ctx=Load()), ctx=Load()), slice=Constant(value=3), ctx=Load()))], decorator_list=[]), FunctionDef(name='get_resources', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='resource', ctx=Load()), attr='path', ctx=Load()), slice=Slice(lower=Attribute(value=Name(id='self', ctx=Load()), attr='prefix_len', ctx=Load())), ctx=Load())), If(test=BoolOp(op=And(), values=[Name(id='path', ctx=Load()), Compare(left=Subscript(value=Name(id='path', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='os', ctx=Load()), attr='sep', ctx=Load())])]), body=[AugAssign(target=Name(id='path', ctx=Store()), op=Add(), value=Attribute(value=Name(id='os', ctx=Load()), attr='sep', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='plen', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[])), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='i', ctx=Store())], value=Call(func=Attribute(value=Name(id='bisect', ctx=Load()), attr='bisect', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Load()), Name(id='path', ctx=Load())], keywords=[])), While(test=Compare(left=Name(id='i', ctx=Load()), ops=[Lt()], comparators=[Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Load())], keywords=[])]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), attr='startswith', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[])), body=[Break()], orelse=[]), Assign(targets=[Name(id='s', ctx=Store())], value=Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Slice(lower=Name(id='plen', ctx=Load())), ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='add', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='split', ctx=Load()), args=[Attribute(value=Name(id='os', ctx=Load()), attr='sep', ctx=Load()), Constant(value=1)], keywords=[]), slice=Constant(value=0), ctx=Load())], keywords=[])), AugAssign(target=Name(id='i', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[]), FunctionDef(name='_is_directory', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Subscript(value=Name(id='path', ctx=Load()), slice=Slice(lower=Attribute(value=Name(id='self', ctx=Load()), attr='prefix_len', ctx=Load())), ctx=Load())), If(test=BoolOp(op=And(), values=[Name(id='path', ctx=Load()), Compare(left=Subscript(value=Name(id='path', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='os', ctx=Load()), attr='sep', ctx=Load())])]), body=[AugAssign(target=Name(id='path', ctx=Store()), op=Add(), value=Attribute(value=Name(id='os', ctx=Load()), attr='sep', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='i', ctx=Store())], value=Call(func=Attribute(value=Name(id='bisect', ctx=Load()), attr='bisect', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Load()), Name(id='path', ctx=Load())], keywords=[])), Try(body=[Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), attr='startswith', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='IndexError', ctx=Load()), body=[Assign(targets=[Name(id='result', ctx=Store())], value=Constant(value=False))])], orelse=[], finalbody=[]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='_finder_registry', ctx=Store())], value=Dict(keys=[Call(func=Name(id='type', ctx=Load()), args=[Constant(value=None)], keywords=[]), Attribute(value=Name(id='zipimport', ctx=Load()), attr='zipimporter', ctx=Load())], values=[Name(id='ResourceFinder', ctx=Load()), Name(id='ZipResourceFinder', ctx=Load())])), Try(body=[Try(body=[Import(names=[alias(name='_frozen_importlib_external', asname='_fi')])], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Import(names=[alias(name='_frozen_importlib', asname='_fi')])])], orelse=[], finalbody=[]), Assign(targets=[Subscript(value=Name(id='_finder_registry', ctx=Load()), slice=Attribute(value=Name(id='_fi', ctx=Load()), attr='SourceFileLoader', ctx=Load()), ctx=Store())], value=Name(id='ResourceFinder', ctx=Load())), Assign(targets=[Subscript(value=Name(id='_finder_registry', ctx=Load()), slice=Attribute(value=Name(id='_fi', ctx=Load()), attr='FileFinder', ctx=Load()), ctx=Store())], value=Name(id='ResourceFinder', ctx=Load())), Assign(targets=[Subscript(value=Name(id='_finder_registry', ctx=Load()), slice=Attribute(value=Name(id='_fi', ctx=Load()), attr='SourcelessFileLoader', ctx=Load()), ctx=Store())], value=Name(id='ResourceFinder', ctx=Load())), Delete(targets=[Name(id='_fi', ctx=Del())])], handlers=[ExceptHandler(type=Tuple(elts=[Name(id='ImportError', ctx=Load()), Name(id='AttributeError', ctx=Load())], ctx=Load()), body=[Pass()])], orelse=[], finalbody=[]), FunctionDef(name='register_finder', args=arguments(posonlyargs=[], args=[arg(arg='loader'), arg(arg='finder_maker')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Subscript(value=Name(id='_finder_registry', ctx=Load()), slice=Call(func=Name(id='type', ctx=Load()), args=[Name(id='loader', ctx=Load())], keywords=[]), ctx=Store())], value=Name(id='finder_maker', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='_finder_cache', ctx=Store())], value=Dict(keys=[], values=[])), FunctionDef(name='finder', args=arguments(posonlyargs=[], args=[arg(arg='package')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Return a resource finder for a package.\n    :param package: The name of the package.\n    :return: A :class:`ResourceFinder` instance for the package.\n    ')), If(test=Compare(left=Name(id='package', ctx=Load()), ops=[In()], comparators=[Name(id='_finder_cache', ctx=Load())]), body=[Assign(targets=[Name(id='result', ctx=Store())], value=Subscript(value=Name(id='_finder_cache', ctx=Load()), slice=Name(id='package', ctx=Load()), ctx=Load()))], orelse=[If(test=Compare(left=Name(id='package', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='sys', ctx=Load()), attr='modules', ctx=Load())]), body=[Expr(value=Call(func=Name(id='__import__', ctx=Load()), args=[Name(id='package', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='module', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='modules', ctx=Load()), slice=Name(id='package', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='module', ctx=Load()), Constant(value='__path__'), Constant(value=None)], keywords=[])), If(test=Compare(left=Name(id='path', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='DistlibException', ctx=Load()), args=[Constant(value='You cannot get a finder for a module, only for a package')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='loader', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='module', ctx=Load()), Constant(value='__loader__'), Constant(value=None)], keywords=[])), Assign(targets=[Name(id='finder_maker', ctx=Store())], value=Call(func=Attribute(value=Name(id='_finder_registry', ctx=Load()), attr='get', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Name(id='loader', ctx=Load())], keywords=[])], keywords=[])), If(test=Compare(left=Name(id='finder_maker', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='DistlibException', ctx=Load()), args=[BinOp(left=Constant(value='Unable to locate finder for %r'), op=Mod(), right=Name(id='package', ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Name(id='finder_maker', ctx=Load()), args=[Name(id='module', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='_finder_cache', ctx=Load()), slice=Name(id='package', ctx=Load()), ctx=Store())], value=Name(id='result', ctx=Load()))]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='_dummy_module', ctx=Store())], value=Call(func=Attribute(value=Name(id='types', ctx=Load()), attr='ModuleType', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Constant(value='__dummy__')], keywords=[])], keywords=[])), FunctionDef(name='finder_for_path', args=arguments(posonlyargs=[], args=[arg(arg='path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Return a resource finder for a path, which should represent a container.\n\n    :param path: The path.\n    :return: A :class:`ResourceFinder` instance for the path.\n    ')), Assign(targets=[Name(id='result', ctx=Store())], value=Constant(value=None)), Expr(value=Call(func=Attribute(value=Name(id='pkgutil', ctx=Load()), attr='get_importer', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[])), Assign(targets=[Name(id='loader', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='path_importer_cache', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[])), Assign(targets=[Name(id='finder', ctx=Store())], value=Call(func=Attribute(value=Name(id='_finder_registry', ctx=Load()), attr='get', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Name(id='loader', ctx=Load())], keywords=[])], keywords=[])), If(test=Name(id='finder', ctx=Load()), body=[Assign(targets=[Name(id='module', ctx=Store())], value=Name(id='_dummy_module', ctx=Load())), Assign(targets=[Attribute(value=Name(id='module', ctx=Load()), attr='__file__', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='path', ctx=Load()), Constant(value='')], keywords=[])), Assign(targets=[Attribute(value=Name(id='module', ctx=Load()), attr='__loader__', ctx=Store())], value=Name(id='loader', ctx=Load())), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Name(id='finder', ctx=Load()), args=[Name(id='module', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[])], type_ignores=[])