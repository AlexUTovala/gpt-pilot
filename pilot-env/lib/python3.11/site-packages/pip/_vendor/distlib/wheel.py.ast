Module(body=[ImportFrom(module='__future__', names=[alias(name='unicode_literals')], level=0), Import(names=[alias(name='base64')]), Import(names=[alias(name='codecs')]), Import(names=[alias(name='datetime')]), ImportFrom(module='email', names=[alias(name='message_from_file')], level=0), Import(names=[alias(name='hashlib')]), Import(names=[alias(name='json')]), Import(names=[alias(name='logging')]), Import(names=[alias(name='os')]), Import(names=[alias(name='posixpath')]), Import(names=[alias(name='re')]), Import(names=[alias(name='shutil')]), Import(names=[alias(name='sys')]), Import(names=[alias(name='tempfile')]), Import(names=[alias(name='zipfile')]), ImportFrom(names=[alias(name='__version__'), alias(name='DistlibException')], level=1), ImportFrom(module='compat', names=[alias(name='sysconfig'), alias(name='ZipFile'), alias(name='fsdecode'), alias(name='text_type'), alias(name='filter')], level=1), ImportFrom(module='database', names=[alias(name='InstalledDistribution')], level=1), ImportFrom(module='metadata', names=[alias(name='Metadata'), alias(name='METADATA_FILENAME'), alias(name='WHEEL_METADATA_FILENAME'), alias(name='LEGACY_METADATA_FILENAME')], level=1), ImportFrom(module='util', names=[alias(name='FileOperator'), alias(name='convert_path'), alias(name='CSVReader'), alias(name='CSVWriter'), alias(name='Cache'), alias(name='cached_property'), alias(name='get_cache_base'), alias(name='read_exports'), alias(name='tempdir'), alias(name='get_platform')], level=1), ImportFrom(module='version', names=[alias(name='NormalizedVersion'), alias(name='UnsupportedVersionError')], level=1), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Name(id='__name__', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cache', ctx=Store())], value=Constant(value=None)), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='sys', ctx=Load()), Constant(value='pypy_version_info')], keywords=[]), body=[Assign(targets=[Name(id='IMP_PREFIX', ctx=Store())], value=Constant(value='pp'))], orelse=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='java')], keywords=[]), body=[Assign(targets=[Name(id='IMP_PREFIX', ctx=Store())], value=Constant(value='jy'))], orelse=[If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), ops=[Eq()], comparators=[Constant(value='cli')]), body=[Assign(targets=[Name(id='IMP_PREFIX', ctx=Store())], value=Constant(value='ip'))], orelse=[Assign(targets=[Name(id='IMP_PREFIX', ctx=Store())], value=Constant(value='cp'))])])]), Assign(targets=[Name(id='VER_SUFFIX', ctx=Store())], value=Call(func=Attribute(value=Name(id='sysconfig', ctx=Load()), attr='get_config_var', ctx=Load()), args=[Constant(value='py_version_nodot')], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='VER_SUFFIX', ctx=Load())), body=[Assign(targets=[Name(id='VER_SUFFIX', ctx=Store())], value=BinOp(left=Constant(value='%s%s'), op=Mod(), right=Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), slice=Slice(upper=Constant(value=2)), ctx=Load())))], orelse=[]), Assign(targets=[Name(id='PYVER', ctx=Store())], value=BinOp(left=Constant(value='py'), op=Add(), right=Name(id='VER_SUFFIX', ctx=Load()))), Assign(targets=[Name(id='IMPVER', ctx=Store())], value=BinOp(left=Name(id='IMP_PREFIX', ctx=Load()), op=Add(), right=Name(id='VER_SUFFIX', ctx=Load()))), Assign(targets=[Name(id='ARCH', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='get_platform', ctx=Load()), args=[], keywords=[]), attr='replace', ctx=Load()), args=[Constant(value='-'), Constant(value='_')], keywords=[]), attr='replace', ctx=Load()), args=[Constant(value='.'), Constant(value='_')], keywords=[])), Assign(targets=[Name(id='ABI', ctx=Store())], value=Call(func=Attribute(value=Name(id='sysconfig', ctx=Load()), attr='get_config_var', ctx=Load()), args=[Constant(value='SOABI')], keywords=[])), If(test=BoolOp(op=And(), values=[Name(id='ABI', ctx=Load()), Call(func=Attribute(value=Name(id='ABI', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='cpython-')], keywords=[])]), body=[Assign(targets=[Name(id='ABI', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ABI', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='cpython-'), Constant(value='cp')], keywords=[]), attr='split', ctx=Load()), args=[Constant(value='-')], keywords=[]), slice=Constant(value=0), ctx=Load()))], orelse=[FunctionDef(name='_derive_abi', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='parts', ctx=Store())], value=List(elts=[Constant(value='cp'), Name(id='VER_SUFFIX', ctx=Load())], ctx=Load())), If(test=Call(func=Attribute(value=Name(id='sysconfig', ctx=Load()), attr='get_config_var', ctx=Load()), args=[Constant(value='Py_DEBUG')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='d')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='IMP_PREFIX', ctx=Load()), ops=[Eq()], comparators=[Constant(value='cp')]), body=[Assign(targets=[Name(id='vi', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), slice=Slice(upper=Constant(value=2)), ctx=Load())), If(test=Compare(left=Name(id='vi', ctx=Load()), ops=[Lt()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=8)], ctx=Load())]), body=[Assign(targets=[Name(id='wpm', ctx=Store())], value=Call(func=Attribute(value=Name(id='sysconfig', ctx=Load()), attr='get_config_var', ctx=Load()), args=[Constant(value='WITH_PYMALLOC')], keywords=[])), If(test=Compare(left=Name(id='wpm', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='wpm', ctx=Store())], value=Constant(value=True))], orelse=[]), If(test=Name(id='wpm', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='m')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='vi', ctx=Load()), ops=[Lt()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=3)], ctx=Load())]), body=[Assign(targets=[Name(id='us', ctx=Store())], value=Call(func=Attribute(value=Name(id='sysconfig', ctx=Load()), attr='get_config_var', ctx=Load()), args=[Constant(value='Py_UNICODE_SIZE')], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='us', ctx=Load()), ops=[Eq()], comparators=[Constant(value=4)]), BoolOp(op=And(), values=[Compare(left=Name(id='us', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='maxunicode', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1114111)])])]), body=[Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='u')], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], orelse=[]), Return(value=Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Name(id='parts', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='ABI', ctx=Store())], value=Call(func=Name(id='_derive_abi', ctx=Load()), args=[], keywords=[])), Delete(targets=[Name(id='_derive_abi', ctx=Del())])]), Assign(targets=[Name(id='FILENAME_RE', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='\n(?P<nm>[^-]+)\n-(?P<vn>\\d+[^-]*)\n(-(?P<bn>\\d+[^-]*))?\n-(?P<py>\\w+\\d+(\\.\\w+\\d+)*)\n-(?P<bi>\\w+)\n-(?P<ar>\\w+(\\.\\w+)*)\n\\.whl$\n'), BinOp(left=Attribute(value=Name(id='re', ctx=Load()), attr='IGNORECASE', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='re', ctx=Load()), attr='VERBOSE', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='NAME_VERSION_RE', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='\n(?P<nm>[^-]+)\n-(?P<vn>\\d+[^-]*)\n(-(?P<bn>\\d+[^-]*))?$\n'), BinOp(left=Attribute(value=Name(id='re', ctx=Load()), attr='IGNORECASE', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='re', ctx=Load()), attr='VERBOSE', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='SHEBANG_RE', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value=b'\\s*#![^\\r\\n]*')], keywords=[])), Assign(targets=[Name(id='SHEBANG_DETAIL_RE', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value=b'^(\\s*#!("[^"]+"|\\S+))\\s+(.*)$')], keywords=[])), Assign(targets=[Name(id='SHEBANG_PYTHON', ctx=Store())], value=Constant(value=b'#!python')), Assign(targets=[Name(id='SHEBANG_PYTHONW', ctx=Store())], value=Constant(value=b'#!pythonw')), If(test=Compare(left=Attribute(value=Name(id='os', ctx=Load()), attr='sep', ctx=Load()), ops=[Eq()], comparators=[Constant(value='/')]), body=[Assign(targets=[Name(id='to_posix', ctx=Store())], value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='o')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Name(id='o', ctx=Load())))], orelse=[Assign(targets=[Name(id='to_posix', ctx=Store())], value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='o')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='o', ctx=Load()), attr='replace', ctx=Load()), args=[Attribute(value=Name(id='os', ctx=Load()), attr='sep', ctx=Load()), Constant(value='/')], keywords=[])))]), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[Lt()], comparators=[Constant(value=3)]), body=[Import(names=[alias(name='imp')])], orelse=[Assign(targets=[Name(id='imp', ctx=Store())], value=Constant(value=None)), Import(names=[alias(name='importlib.machinery')]), Import(names=[alias(name='importlib.util')])]), FunctionDef(name='_get_suffixes', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Name(id='imp', ctx=Load()), body=[Return(value=ListComp(elt=Subscript(value=Name(id='s', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='s', ctx=Store()), iter=Call(func=Attribute(value=Name(id='imp', ctx=Load()), attr='get_suffixes', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], orelse=[Return(value=Attribute(value=Attribute(value=Name(id='importlib', ctx=Load()), attr='machinery', ctx=Load()), attr='EXTENSION_SUFFIXES', ctx=Load()))])], decorator_list=[]), FunctionDef(name='_load_dynamic', args=arguments(posonlyargs=[], args=[arg(arg='name'), arg(arg='path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Name(id='imp', ctx=Load()), body=[Return(value=Call(func=Attribute(value=Name(id='imp', ctx=Load()), attr='load_dynamic', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='path', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='spec', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='importlib', ctx=Load()), attr='util', ctx=Load()), attr='spec_from_file_location', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='path', ctx=Load())], keywords=[])), Assign(targets=[Name(id='module', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='importlib', ctx=Load()), attr='util', ctx=Load()), attr='module_from_spec', ctx=Load()), args=[Name(id='spec', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='modules', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Store())], value=Name(id='module', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='spec', ctx=Load()), attr='loader', ctx=Load()), attr='exec_module', ctx=Load()), args=[Name(id='module', ctx=Load())], keywords=[])), Return(value=Name(id='module', ctx=Load()))])], decorator_list=[]), ClassDef(name='Mounter', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='impure_wheels', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='libs', ctx=Store())], value=Dict(keys=[], values=[]))], decorator_list=[]), FunctionDef(name='add', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='pathname'), arg(arg='extensions')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='impure_wheels', ctx=Load()), slice=Name(id='pathname', ctx=Load()), ctx=Store())], value=Name(id='extensions', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='libs', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='extensions', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='remove', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='pathname')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='extensions', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='impure_wheels', ctx=Load()), attr='pop', ctx=Load()), args=[Name(id='pathname', ctx=Load())], keywords=[])), For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Name(id='extensions', ctx=Load()), body=[If(test=Compare(left=Name(id='k', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='libs', ctx=Load())]), body=[Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='libs', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Del())])], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='find_module', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fullname'), arg(arg='path')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='fullname', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='libs', ctx=Load())]), body=[Assign(targets=[Name(id='result', ctx=Store())], value=Name(id='self', ctx=Load()))], orelse=[Assign(targets=[Name(id='result', ctx=Store())], value=Constant(value=None))]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[]), FunctionDef(name='load_module', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fullname')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='fullname', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='sys', ctx=Load()), attr='modules', ctx=Load())]), body=[Assign(targets=[Name(id='result', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='modules', ctx=Load()), slice=Name(id='fullname', ctx=Load()), ctx=Load()))], orelse=[If(test=Compare(left=Name(id='fullname', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='libs', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ImportError', ctx=Load()), args=[BinOp(left=Constant(value='unable to find extension for %s'), op=Mod(), right=Name(id='fullname', ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Name(id='_load_dynamic', ctx=Load()), args=[Name(id='fullname', ctx=Load()), Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='libs', ctx=Load()), slice=Name(id='fullname', ctx=Load()), ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='result', ctx=Load()), attr='__loader__', ctx=Store())], value=Name(id='self', ctx=Load())), Assign(targets=[Name(id='parts', ctx=Store())], value=Call(func=Attribute(value=Name(id='fullname', ctx=Load()), attr='rsplit', ctx=Load()), args=[Constant(value='.'), Constant(value=1)], keywords=[])), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='parts', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=1)]), body=[Assign(targets=[Attribute(value=Name(id='result', ctx=Load()), attr='__package__', ctx=Store())], value=Subscript(value=Name(id='parts', ctx=Load()), slice=Constant(value=0), ctx=Load()))], orelse=[])]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='_hook', ctx=Store())], value=Call(func=Name(id='Mounter', ctx=Load()), args=[], keywords=[])), ClassDef(name='Wheel', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    Class to build and install from Wheel files (PEP 427).\n    ')), Assign(targets=[Name(id='wheel_version', ctx=Store())], value=Tuple(elts=[Constant(value=1), Constant(value=1)], ctx=Load())), Assign(targets=[Name(id='hash_kind', ctx=Store())], value=Constant(value='sha256')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='filename'), arg(arg='sign'), arg(arg='verify')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=False), Constant(value=False)]), body=[Expr(value=Constant(value='\n        Initialise an instance using a (valid) filename.\n        ')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='sign', ctx=Store())], value=Name(id='sign', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='should_verify', ctx=Store())], value=Name(id='verify', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='buildver', ctx=Store())], value=Constant(value='')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='pyver', ctx=Store())], value=List(elts=[Name(id='PYVER', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='abi', ctx=Store())], value=List(elts=[Constant(value='none')], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='arch', ctx=Store())], value=List(elts=[Constant(value='any')], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='dirname', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='filename', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store())], value=Constant(value='dummy')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='version', ctx=Store())], value=Constant(value='0.1')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_filename', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load()))], orelse=[Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='NAME_VERSION_RE', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])), If(test=Name(id='m', ctx=Load()), body=[Assign(targets=[Name(id='info', ctx=Store())], value=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='groupdict', ctx=Load()), args=[Constant(value='')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store())], value=Subscript(value=Name(id='info', ctx=Load()), slice=Constant(value='nm'), ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='version', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='info', ctx=Load()), slice=Constant(value='vn'), ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='_'), Constant(value='-')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='buildver', ctx=Store())], value=Subscript(value=Name(id='info', ctx=Load()), slice=Constant(value='bn'), ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_filename', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load()))], orelse=[Assign(targets=[Tuple(elts=[Name(id='dirname', ctx=Store()), Name(id='filename', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='split', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='FILENAME_RE', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='m', ctx=Load())), body=[Raise(exc=Call(func=Name(id='DistlibException', ctx=Load()), args=[BinOp(left=Constant(value='Invalid name or filename: %r'), op=Mod(), right=Name(id='filename', ctx=Load()))], keywords=[]))], orelse=[]), If(test=Name(id='dirname', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='dirname', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='abspath', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_filename', ctx=Store())], value=Name(id='filename', ctx=Load())), Assign(targets=[Name(id='info', ctx=Store())], value=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='groupdict', ctx=Load()), args=[Constant(value='')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store())], value=Subscript(value=Name(id='info', ctx=Load()), slice=Constant(value='nm'), ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='version', ctx=Store())], value=Subscript(value=Name(id='info', ctx=Load()), slice=Constant(value='vn'), ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='buildver', ctx=Store())], value=Subscript(value=Name(id='info', ctx=Load()), slice=Constant(value='bn'), ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='pyver', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='info', ctx=Load()), slice=Constant(value='py'), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='abi', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='info', ctx=Load()), slice=Constant(value='bi'), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='arch', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='info', ctx=Load()), slice=Constant(value='ar'), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[]))])])], decorator_list=[]), FunctionDef(name='filename', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Build and return a filename from the various components.\n        ')), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='buildver', ctx=Load()), body=[Assign(targets=[Name(id='buildver', ctx=Store())], value=BinOp(left=Constant(value='-'), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='buildver', ctx=Load())))], orelse=[Assign(targets=[Name(id='buildver', ctx=Store())], value=Constant(value=''))]), Assign(targets=[Name(id='pyver', ctx=Store())], value=Call(func=Attribute(value=Constant(value='.'), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pyver', ctx=Load())], keywords=[])), Assign(targets=[Name(id='abi', ctx=Store())], value=Call(func=Attribute(value=Constant(value='.'), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='abi', ctx=Load())], keywords=[])), Assign(targets=[Name(id='arch', ctx=Store())], value=Call(func=Attribute(value=Constant(value='.'), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='arch', ctx=Load())], keywords=[])), Assign(targets=[Name(id='version', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='version', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='-'), Constant(value='_')], keywords=[])), Return(value=BinOp(left=Constant(value='%s-%s%s-%s-%s-%s.whl'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), Name(id='version', ctx=Load()), Name(id='buildver', ctx=Load()), Name(id='pyver', ctx=Load()), Name(id='abi', ctx=Load()), Name(id='arch', ctx=Load())], ctx=Load())))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='exists', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='dirname', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isfile', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='tags', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='pyver', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='pyver', ctx=Load()), body=[For(target=Name(id='abi', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='abi', ctx=Load()), body=[For(target=Name(id='arch', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='arch', ctx=Load()), body=[Expr(value=Yield(value=Tuple(elts=[Name(id='pyver', ctx=Load()), Name(id='abi', ctx=Load()), Name(id='arch', ctx=Load())], ctx=Load())))], orelse=[])], orelse=[])], orelse=[])], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='metadata', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='pathname', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='dirname', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load())], keywords=[])), Assign(targets=[Name(id='name_ver', ctx=Store())], value=BinOp(left=Constant(value='%s-%s'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='version', ctx=Load())], ctx=Load()))), Assign(targets=[Name(id='info_dir', ctx=Store())], value=BinOp(left=Constant(value='%s.dist-info'), op=Mod(), right=Name(id='name_ver', ctx=Load()))), Assign(targets=[Name(id='wrapper', ctx=Store())], value=Call(func=Attribute(value=Name(id='codecs', ctx=Load()), attr='getreader', ctx=Load()), args=[Constant(value='utf-8')], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='ZipFile', ctx=Load()), args=[Name(id='pathname', ctx=Load()), Constant(value='r')], keywords=[]), optional_vars=Name(id='zf', ctx=Store()))], body=[Assign(targets=[Name(id='wheel_metadata', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_wheel_metadata', ctx=Load()), args=[Name(id='zf', ctx=Load())], keywords=[])), Assign(targets=[Name(id='wv', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='wheel_metadata', ctx=Load()), slice=Constant(value='Wheel-Version'), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.'), Constant(value=1)], keywords=[])), Assign(targets=[Name(id='file_version', ctx=Store())], value=Call(func=Name(id='tuple', ctx=Load()), args=[ListComp(elt=Call(func=Name(id='int', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Name(id='wv', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), Assign(targets=[Name(id='fns', ctx=Store())], value=List(elts=[Name(id='WHEEL_METADATA_FILENAME', ctx=Load()), Name(id='LEGACY_METADATA_FILENAME', ctx=Load())], ctx=Load())), Assign(targets=[Name(id='result', ctx=Store())], value=Constant(value=None)), For(target=Name(id='fn', ctx=Store()), iter=Name(id='fns', ctx=Load()), body=[Try(body=[Assign(targets=[Name(id='metadata_filename', ctx=Store())], value=Call(func=Attribute(value=Name(id='posixpath', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='info_dir', ctx=Load()), Name(id='fn', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='open', ctx=Load()), args=[Name(id='metadata_filename', ctx=Load())], keywords=[]), optional_vars=Name(id='bf', ctx=Store()))], body=[Assign(targets=[Name(id='wf', ctx=Store())], value=Call(func=Name(id='wrapper', ctx=Load()), args=[Name(id='bf', ctx=Load())], keywords=[])), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Name(id='Metadata', ctx=Load()), args=[], keywords=[keyword(arg='fileobj', value=Name(id='wf', ctx=Load()))])), If(test=Name(id='result', ctx=Load()), body=[Break()], orelse=[])])], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='result', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='Invalid wheel, because metadata is missing: looked in %s'), op=Mod(), right=Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[Name(id='fns', ctx=Load())], keywords=[]))], keywords=[]))], orelse=[])]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[Name(id='cached_property', ctx=Load())]), FunctionDef(name='get_wheel_metadata', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='zf')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='name_ver', ctx=Store())], value=BinOp(left=Constant(value='%s-%s'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='version', ctx=Load())], ctx=Load()))), Assign(targets=[Name(id='info_dir', ctx=Store())], value=BinOp(left=Constant(value='%s.dist-info'), op=Mod(), right=Name(id='name_ver', ctx=Load()))), Assign(targets=[Name(id='metadata_filename', ctx=Store())], value=Call(func=Attribute(value=Name(id='posixpath', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='info_dir', ctx=Load()), Constant(value='WHEEL')], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='open', ctx=Load()), args=[Name(id='metadata_filename', ctx=Load())], keywords=[]), optional_vars=Name(id='bf', ctx=Store()))], body=[Assign(targets=[Name(id='wf', ctx=Store())], value=Call(func=Call(func=Attribute(value=Name(id='codecs', ctx=Load()), attr='getreader', ctx=Load()), args=[Constant(value='utf-8')], keywords=[]), args=[Name(id='bf', ctx=Load())], keywords=[])), Assign(targets=[Name(id='message', ctx=Store())], value=Call(func=Name(id='message_from_file', ctx=Load()), args=[Name(id='wf', ctx=Load())], keywords=[]))]), Return(value=Call(func=Name(id='dict', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='info', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='pathname', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='dirname', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='ZipFile', ctx=Load()), args=[Name(id='pathname', ctx=Load()), Constant(value='r')], keywords=[]), optional_vars=Name(id='zf', ctx=Store()))], body=[Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_wheel_metadata', ctx=Load()), args=[Name(id='zf', ctx=Load())], keywords=[]))]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[Name(id='cached_property', ctx=Load())]), FunctionDef(name='process_shebang', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='SHEBANG_RE', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[])), If(test=Name(id='m', ctx=Load()), body=[Assign(targets=[Name(id='end', ctx=Store())], value=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='end', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='shebang', ctx=Store()), Name(id='data_after_shebang', ctx=Store())], ctx=Store())], value=Tuple(elts=[Subscript(value=Name(id='data', ctx=Load()), slice=Slice(upper=Name(id='end', ctx=Load())), ctx=Load()), Subscript(value=Name(id='data', ctx=Load()), slice=Slice(lower=Name(id='end', ctx=Load())), ctx=Load())], ctx=Load())), If(test=Compare(left=Constant(value=b'pythonw'), ops=[In()], comparators=[Call(func=Attribute(value=Name(id='shebang', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])]), body=[Assign(targets=[Name(id='shebang_python', ctx=Store())], value=Name(id='SHEBANG_PYTHONW', ctx=Load()))], orelse=[Assign(targets=[Name(id='shebang_python', ctx=Store())], value=Name(id='SHEBANG_PYTHON', ctx=Load()))]), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='SHEBANG_DETAIL_RE', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='shebang', ctx=Load())], keywords=[])), If(test=Name(id='m', ctx=Load()), body=[Assign(targets=[Name(id='args', ctx=Store())], value=BinOp(left=Constant(value=b' '), op=Add(), right=Subscript(value=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='groups', ctx=Load()), args=[], keywords=[]), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())))], orelse=[Assign(targets=[Name(id='args', ctx=Store())], value=Constant(value=b''))]), Assign(targets=[Name(id='shebang', ctx=Store())], value=BinOp(left=Name(id='shebang_python', ctx=Load()), op=Add(), right=Name(id='args', ctx=Load()))), Assign(targets=[Name(id='data', ctx=Store())], value=BinOp(left=Name(id='shebang', ctx=Load()), op=Add(), right=Name(id='data_after_shebang', ctx=Load())))], orelse=[Assign(targets=[Name(id='cr', ctx=Store())], value=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='find', ctx=Load()), args=[Constant(value=b'\r')], keywords=[])), Assign(targets=[Name(id='lf', ctx=Store())], value=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='find', ctx=Load()), args=[Constant(value=b'\n')], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='cr', ctx=Load()), ops=[Lt()], comparators=[Constant(value=0)]), Compare(left=Name(id='cr', ctx=Load()), ops=[Gt()], comparators=[Name(id='lf', ctx=Load())])]), body=[Assign(targets=[Name(id='term', ctx=Store())], value=Constant(value=b'\n'))], orelse=[If(test=Compare(left=Subscript(value=Name(id='data', ctx=Load()), slice=Slice(lower=Name(id='cr', ctx=Load()), upper=BinOp(left=Name(id='cr', ctx=Load()), op=Add(), right=Constant(value=2))), ctx=Load()), ops=[Eq()], comparators=[Constant(value=b'\r\n')]), body=[Assign(targets=[Name(id='term', ctx=Store())], value=Constant(value=b'\r\n'))], orelse=[Assign(targets=[Name(id='term', ctx=Store())], value=Constant(value=b'\r'))])]), Assign(targets=[Name(id='data', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='SHEBANG_PYTHON', ctx=Load()), op=Add(), right=Name(id='term', ctx=Load())), op=Add(), right=Name(id='data', ctx=Load())))]), Return(value=Name(id='data', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_hash', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data'), arg(arg='hash_kind')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='hash_kind', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='hash_kind', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='hash_kind', ctx=Load()))], orelse=[]), Try(body=[Assign(targets=[Name(id='hasher', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='hashlib', ctx=Load()), Name(id='hash_kind', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[Raise(exc=Call(func=Name(id='DistlibException', ctx=Load()), args=[BinOp(left=Constant(value='Unsupported hash algorithm: %r'), op=Mod(), right=Name(id='hash_kind', ctx=Load()))], keywords=[]))])], orelse=[], finalbody=[]), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='hasher', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]), attr='digest', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='base64', ctx=Load()), attr='urlsafe_b64encode', ctx=Load()), args=[Name(id='result', ctx=Load())], keywords=[]), attr='rstrip', ctx=Load()), args=[Constant(value=b'=')], keywords=[]), attr='decode', ctx=Load()), args=[Constant(value='ascii')], keywords=[])), Return(value=Tuple(elts=[Name(id='hash_kind', ctx=Load()), Name(id='result', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='write_record', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='records'), arg(arg='record_path'), arg(arg='archive_record_path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='records', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Name(id='records', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='records', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='archive_record_path', ctx=Load()), Constant(value=''), Constant(value='')], ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='CSVWriter', ctx=Load()), args=[Name(id='record_path', ctx=Load())], keywords=[]), optional_vars=Name(id='writer', ctx=Store()))], body=[For(target=Name(id='row', ctx=Store()), iter=Name(id='records', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='writer', ctx=Load()), attr='writerow', ctx=Load()), args=[Name(id='row', ctx=Load())], keywords=[]))], orelse=[])])], decorator_list=[]), FunctionDef(name='write_records', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='info'), arg(arg='libdir'), arg(arg='archive_paths')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='records', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='distinfo', ctx=Store()), Name(id='info_dir', ctx=Store())], ctx=Store())], value=Name(id='info', ctx=Load())), Assign(targets=[Name(id='hasher', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='hashlib', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='hash_kind', ctx=Load())], keywords=[])), For(target=Tuple(elts=[Name(id='ap', ctx=Store()), Name(id='p', ctx=Store())], ctx=Store()), iter=Name(id='archive_paths', ctx=Load()), body=[With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='p', ctx=Load()), Constant(value='rb')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]))]), Assign(targets=[Name(id='digest', ctx=Store())], value=BinOp(left=Constant(value='%s=%s'), op=Mod(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_hash', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='size', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='getsize', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='records', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='ap', ctx=Load()), Name(id='digest', ctx=Load()), Name(id='size', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='distinfo', ctx=Load()), Constant(value='RECORD')], keywords=[])), Assign(targets=[Name(id='ap', ctx=Store())], value=Call(func=Name(id='to_posix', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='info_dir', ctx=Load()), Constant(value='RECORD')], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='write_record', ctx=Load()), args=[Name(id='records', ctx=Load()), Name(id='p', ctx=Load()), Name(id='ap', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='archive_paths', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='ap', ctx=Load()), Name(id='p', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='build_zip', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='pathname'), arg(arg='archive_paths')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Name(id='ZipFile', ctx=Load()), args=[Name(id='pathname', ctx=Load()), Constant(value='w'), Attribute(value=Name(id='zipfile', ctx=Load()), attr='ZIP_DEFLATED', ctx=Load())], keywords=[]), optional_vars=Name(id='zf', ctx=Store()))], body=[For(target=Tuple(elts=[Name(id='ap', ctx=Store()), Name(id='p', ctx=Store())], ctx=Store()), iter=Name(id='archive_paths', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Wrote %s to %s in wheel'), Name(id='p', ctx=Load()), Name(id='ap', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='p', ctx=Load()), Name(id='ap', ctx=Load())], keywords=[]))], orelse=[])])], decorator_list=[]), FunctionDef(name='build', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='paths'), arg(arg='tags'), arg(arg='wheel_version')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[Expr(value=Constant(value='\n        Build a wheel from files in specified paths, and use any specified tags\n        when determining the name of the wheel.\n        ')), If(test=Compare(left=Name(id='tags', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='tags', ctx=Store())], value=Dict(keys=[], values=[]))], orelse=[]), Assign(targets=[Name(id='libkey', ctx=Store())], value=Subscript(value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='filter', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='o')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Compare(left=Name(id='o', ctx=Load()), ops=[In()], comparators=[Name(id='paths', ctx=Load())])), Tuple(elts=[Constant(value='purelib'), Constant(value='platlib')], ctx=Load())], keywords=[])], keywords=[]), slice=Constant(value=0), ctx=Load())), If(test=Compare(left=Name(id='libkey', ctx=Load()), ops=[Eq()], comparators=[Constant(value='platlib')]), body=[Assign(targets=[Name(id='is_pure', ctx=Store())], value=Constant(value='false')), Assign(targets=[Name(id='default_pyver', ctx=Store())], value=List(elts=[Name(id='IMPVER', ctx=Load())], ctx=Load())), Assign(targets=[Name(id='default_abi', ctx=Store())], value=List(elts=[Name(id='ABI', ctx=Load())], ctx=Load())), Assign(targets=[Name(id='default_arch', ctx=Store())], value=List(elts=[Name(id='ARCH', ctx=Load())], ctx=Load()))], orelse=[Assign(targets=[Name(id='is_pure', ctx=Store())], value=Constant(value='true')), Assign(targets=[Name(id='default_pyver', ctx=Store())], value=List(elts=[Name(id='PYVER', ctx=Load())], ctx=Load())), Assign(targets=[Name(id='default_abi', ctx=Store())], value=List(elts=[Constant(value='none')], ctx=Load())), Assign(targets=[Name(id='default_arch', ctx=Store())], value=List(elts=[Constant(value='any')], ctx=Load()))]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='pyver', ctx=Store())], value=Call(func=Attribute(value=Name(id='tags', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='pyver'), Name(id='default_pyver', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='abi', ctx=Store())], value=Call(func=Attribute(value=Name(id='tags', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='abi'), Name(id='default_abi', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='arch', ctx=Store())], value=Call(func=Attribute(value=Name(id='tags', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='arch'), Name(id='default_arch', ctx=Load())], keywords=[])), Assign(targets=[Name(id='libdir', ctx=Store())], value=Subscript(value=Name(id='paths', ctx=Load()), slice=Name(id='libkey', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='name_ver', ctx=Store())], value=BinOp(left=Constant(value='%s-%s'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='version', ctx=Load())], ctx=Load()))), Assign(targets=[Name(id='data_dir', ctx=Store())], value=BinOp(left=Constant(value='%s.data'), op=Mod(), right=Name(id='name_ver', ctx=Load()))), Assign(targets=[Name(id='info_dir', ctx=Store())], value=BinOp(left=Constant(value='%s.dist-info'), op=Mod(), right=Name(id='name_ver', ctx=Load()))), Assign(targets=[Name(id='archive_paths', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='key', ctx=Store()), iter=Tuple(elts=[Constant(value='data'), Constant(value='headers'), Constant(value='scripts')], ctx=Load()), body=[If(test=Compare(left=Name(id='key', ctx=Load()), ops=[NotIn()], comparators=[Name(id='paths', ctx=Load())]), body=[Continue()], orelse=[]), Assign(targets=[Name(id='path', ctx=Store())], value=Subscript(value=Name(id='paths', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Load())), If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]), body=[For(target=Tuple(elts=[Name(id='root', ctx=Store()), Name(id='dirs', ctx=Store()), Name(id='files', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='walk', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]), body=[For(target=Name(id='fn', ctx=Store()), iter=Name(id='files', ctx=Load()), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Name(id='fsdecode', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Name(id='fn', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='rp', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='relpath', ctx=Load()), args=[Name(id='p', ctx=Load()), Name(id='path', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ap', ctx=Store())], value=Call(func=Name(id='to_posix', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='data_dir', ctx=Load()), Name(id='key', ctx=Load()), Name(id='rp', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='archive_paths', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='ap', ctx=Load()), Name(id='p', ctx=Load())], ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='key', ctx=Load()), ops=[Eq()], comparators=[Constant(value='scripts')]), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.exe')], keywords=[]))]), body=[With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='p', ctx=Load()), Constant(value='rb')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]))]), Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='process_shebang', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='p', ctx=Load()), Constant(value='wb')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))])], orelse=[])], orelse=[])], orelse=[])], orelse=[])], orelse=[]), Assign(targets=[Name(id='path', ctx=Store())], value=Name(id='libdir', ctx=Load())), Assign(targets=[Name(id='distinfo', ctx=Store())], value=Constant(value=None)), For(target=Tuple(elts=[Name(id='root', ctx=Store()), Name(id='dirs', ctx=Store()), Name(id='files', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='walk', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]), body=[If(test=Compare(left=Name(id='root', ctx=Load()), ops=[Eq()], comparators=[Name(id='path', ctx=Load())]), body=[For(target=Tuple(elts=[Name(id='i', ctx=Store()), Name(id='dn', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='dirs', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='dn', ctx=Store())], value=Call(func=Name(id='fsdecode', ctx=Load()), args=[Name(id='dn', ctx=Load())], keywords=[])), If(test=Call(func=Attribute(value=Name(id='dn', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.dist-info')], keywords=[]), body=[Assign(targets=[Name(id='distinfo', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Name(id='dn', ctx=Load())], keywords=[])), Delete(targets=[Subscript(value=Name(id='dirs', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Del())]), Break()], orelse=[])], orelse=[]), Assert(test=Name(id='distinfo', ctx=Load()), msg=Constant(value='.dist-info directory expected, not found'))], orelse=[]), For(target=Name(id='fn', ctx=Store()), iter=Name(id='files', ctx=Load()), body=[If(test=Call(func=Attribute(value=Call(func=Name(id='fsdecode', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[]), attr='endswith', ctx=Load()), args=[Tuple(elts=[Constant(value='.pyc'), Constant(value='.pyo')], ctx=Load())], keywords=[]), body=[Continue()], orelse=[]), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Name(id='fn', ctx=Load())], keywords=[])), Assign(targets=[Name(id='rp', ctx=Store())], value=Call(func=Name(id='to_posix', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='relpath', ctx=Load()), args=[Name(id='p', ctx=Load()), Name(id='path', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='archive_paths', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='rp', ctx=Load()), Name(id='p', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='files', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='distinfo', ctx=Load())], keywords=[])), For(target=Name(id='fn', ctx=Store()), iter=Name(id='files', ctx=Load()), body=[If(test=Compare(left=Name(id='fn', ctx=Load()), ops=[NotIn()], comparators=[Tuple(elts=[Constant(value='RECORD'), Constant(value='INSTALLER'), Constant(value='SHARED'), Constant(value='WHEEL')], ctx=Load())]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Name(id='fsdecode', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='distinfo', ctx=Load()), Name(id='fn', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='ap', ctx=Store())], value=Call(func=Name(id='to_posix', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='info_dir', ctx=Load()), Name(id='fn', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='archive_paths', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='ap', ctx=Load()), Name(id='p', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='wheel_metadata', ctx=Store())], value=List(elts=[BinOp(left=Constant(value='Wheel-Version: %d.%d'), op=Mod(), right=BoolOp(op=Or(), values=[Name(id='wheel_version', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='wheel_version', ctx=Load())])), BinOp(left=Constant(value='Generator: distlib %s'), op=Mod(), right=Name(id='__version__', ctx=Load())), BinOp(left=Constant(value='Root-Is-Purelib: %s'), op=Mod(), right=Name(id='is_pure', ctx=Load()))], ctx=Load())), For(target=Tuple(elts=[Name(id='pyver', ctx=Store()), Name(id='abi', ctx=Store()), Name(id='arch', ctx=Store())], ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='tags', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='wheel_metadata', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Constant(value='Tag: %s-%s-%s'), op=Mod(), right=Tuple(elts=[Name(id='pyver', ctx=Load()), Name(id='abi', ctx=Load()), Name(id='arch', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='distinfo', ctx=Load()), Constant(value='WHEEL')], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='p', ctx=Load()), Constant(value='w')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='write', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='\n'), attr='join', ctx=Load()), args=[Name(id='wheel_metadata', ctx=Load())], keywords=[])], keywords=[]))]), Assign(targets=[Name(id='ap', ctx=Store())], value=Call(func=Name(id='to_posix', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='info_dir', ctx=Load()), Constant(value='WHEEL')], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='archive_paths', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='ap', ctx=Load()), Name(id='p', ctx=Load())], ctx=Load())], keywords=[])), FunctionDef(name='sorter', args=arguments(posonlyargs=[], args=[arg(arg='t')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='ap', ctx=Store())], value=Subscript(value=Name(id='t', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='n', ctx=Store())], value=Call(func=Attribute(value=Name(id='ap', ctx=Load()), attr='count', ctx=Load()), args=[Constant(value='/')], keywords=[])), If(test=Compare(left=Constant(value='.dist-info'), ops=[In()], comparators=[Name(id='ap', ctx=Load())]), body=[AugAssign(target=Name(id='n', ctx=Store()), op=Add(), value=Constant(value=10000))], orelse=[]), Return(value=Tuple(elts=[Name(id='n', ctx=Load()), Name(id='ap', ctx=Load())], ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='archive_paths', ctx=Store())], value=Call(func=Name(id='sorted', ctx=Load()), args=[Name(id='archive_paths', ctx=Load())], keywords=[keyword(arg='key', value=Name(id='sorter', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='write_records', ctx=Load()), args=[Tuple(elts=[Name(id='distinfo', ctx=Load()), Name(id='info_dir', ctx=Load())], ctx=Load()), Name(id='libdir', ctx=Load()), Name(id='archive_paths', ctx=Load())], keywords=[])), Assign(targets=[Name(id='pathname', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='dirname', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='build_zip', ctx=Load()), args=[Name(id='pathname', ctx=Load()), Name(id='archive_paths', ctx=Load())], keywords=[])), Return(value=Name(id='pathname', ctx=Load()))], decorator_list=[]), FunctionDef(name='skip_entry', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='arcname')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Determine whether an archive entry should be skipped when verifying\n        or installing.\n        ')), Return(value=Call(func=Attribute(value=Name(id='arcname', ctx=Load()), attr='endswith', ctx=Load()), args=[Tuple(elts=[Constant(value='/'), Constant(value='/RECORD.jws')], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='install', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='paths'), arg(arg='maker')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Constant(value='\n        Install a wheel to the specified paths. If kwarg ``warner`` is\n        specified, it should be a callable, which will be called with two\n        tuples indicating the wheel version of this software and the wheel\n        version in the file, if there is a discrepancy in the versions.\n        This can be used to issue any warnings to raise any exceptions.\n        If kwarg ``lib_only`` is True, only the purelib/platlib files are\n        installed, and the headers, scripts, data and dist-info metadata are\n        not written. If kwarg ``bytecode_hashed_invalidation`` is True, written\n        bytecode will try to use file-hash based invalidation (PEP-552) on\n        supported interpreter versions (CPython 2.7+).\n\n        The return value is a :class:`InstalledDistribution` instance unless\n        ``options.lib_only`` is True, in which case the return value is ``None``.\n        ')), Assign(targets=[Name(id='dry_run', ctx=Store())], value=Attribute(value=Name(id='maker', ctx=Load()), attr='dry_run', ctx=Load())), Assign(targets=[Name(id='warner', ctx=Store())], value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='warner')], keywords=[])), Assign(targets=[Name(id='lib_only', ctx=Store())], value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='lib_only'), Constant(value=False)], keywords=[])), Assign(targets=[Name(id='bc_hashed_invalidation', ctx=Store())], value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='bytecode_hashed_invalidation'), Constant(value=False)], keywords=[])), Assign(targets=[Name(id='pathname', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='dirname', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load())], keywords=[])), Assign(targets=[Name(id='name_ver', ctx=Store())], value=BinOp(left=Constant(value='%s-%s'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='version', ctx=Load())], ctx=Load()))), Assign(targets=[Name(id='data_dir', ctx=Store())], value=BinOp(left=Constant(value='%s.data'), op=Mod(), right=Name(id='name_ver', ctx=Load()))), Assign(targets=[Name(id='info_dir', ctx=Store())], value=BinOp(left=Constant(value='%s.dist-info'), op=Mod(), right=Name(id='name_ver', ctx=Load()))), Assign(targets=[Name(id='metadata_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='posixpath', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='info_dir', ctx=Load()), Name(id='LEGACY_METADATA_FILENAME', ctx=Load())], keywords=[])), Assign(targets=[Name(id='wheel_metadata_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='posixpath', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='info_dir', ctx=Load()), Constant(value='WHEEL')], keywords=[])), Assign(targets=[Name(id='record_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='posixpath', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='info_dir', ctx=Load()), Constant(value='RECORD')], keywords=[])), Assign(targets=[Name(id='wrapper', ctx=Store())], value=Call(func=Attribute(value=Name(id='codecs', ctx=Load()), attr='getreader', ctx=Load()), args=[Constant(value='utf-8')], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='ZipFile', ctx=Load()), args=[Name(id='pathname', ctx=Load()), Constant(value='r')], keywords=[]), optional_vars=Name(id='zf', ctx=Store()))], body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='open', ctx=Load()), args=[Name(id='wheel_metadata_name', ctx=Load())], keywords=[]), optional_vars=Name(id='bwf', ctx=Store()))], body=[Assign(targets=[Name(id='wf', ctx=Store())], value=Call(func=Name(id='wrapper', ctx=Load()), args=[Name(id='bwf', ctx=Load())], keywords=[])), Assign(targets=[Name(id='message', ctx=Store())], value=Call(func=Name(id='message_from_file', ctx=Load()), args=[Name(id='wf', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='wv', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='message', ctx=Load()), slice=Constant(value='Wheel-Version'), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.'), Constant(value=1)], keywords=[])), Assign(targets=[Name(id='file_version', ctx=Store())], value=Call(func=Name(id='tuple', ctx=Load()), args=[ListComp(elt=Call(func=Name(id='int', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Name(id='wv', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='file_version', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='wheel_version', ctx=Load())]), Name(id='warner', ctx=Load())]), body=[Expr(value=Call(func=Name(id='warner', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='wheel_version', ctx=Load()), Name(id='file_version', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Subscript(value=Name(id='message', ctx=Load()), slice=Constant(value='Root-Is-Purelib'), ctx=Load()), ops=[Eq()], comparators=[Constant(value='true')]), body=[Assign(targets=[Name(id='libdir', ctx=Store())], value=Subscript(value=Name(id='paths', ctx=Load()), slice=Constant(value='purelib'), ctx=Load()))], orelse=[Assign(targets=[Name(id='libdir', ctx=Store())], value=Subscript(value=Name(id='paths', ctx=Load()), slice=Constant(value='platlib'), ctx=Load()))]), Assign(targets=[Name(id='records', ctx=Store())], value=Dict(keys=[], values=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='open', ctx=Load()), args=[Name(id='record_name', ctx=Load())], keywords=[]), optional_vars=Name(id='bf', ctx=Store()))], body=[With(items=[withitem(context_expr=Call(func=Name(id='CSVReader', ctx=Load()), args=[], keywords=[keyword(arg='stream', value=Name(id='bf', ctx=Load()))]), optional_vars=Name(id='reader', ctx=Store()))], body=[For(target=Name(id='row', ctx=Store()), iter=Name(id='reader', ctx=Load()), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Subscript(value=Name(id='records', ctx=Load()), slice=Name(id='p', ctx=Load()), ctx=Store())], value=Name(id='row', ctx=Load()))], orelse=[])])]), Assign(targets=[Name(id='data_pfx', ctx=Store())], value=Call(func=Attribute(value=Name(id='posixpath', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='data_dir', ctx=Load()), Constant(value='')], keywords=[])), Assign(targets=[Name(id='info_pfx', ctx=Store())], value=Call(func=Attribute(value=Name(id='posixpath', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='info_dir', ctx=Load()), Constant(value='')], keywords=[])), Assign(targets=[Name(id='script_pfx', ctx=Store())], value=Call(func=Attribute(value=Name(id='posixpath', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='data_dir', ctx=Load()), Constant(value='scripts'), Constant(value='')], keywords=[])), Assign(targets=[Name(id='fileop', ctx=Store())], value=Call(func=Name(id='FileOperator', ctx=Load()), args=[], keywords=[keyword(arg='dry_run', value=Name(id='dry_run', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='fileop', ctx=Load()), attr='record', ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='bc', ctx=Store())], value=UnaryOp(op=Not(), operand=Attribute(value=Name(id='sys', ctx=Load()), attr='dont_write_bytecode', ctx=Load()))), Assign(targets=[Name(id='outfiles', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='workdir', ctx=Store())], value=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='mkdtemp', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='maker', ctx=Load()), attr='source_dir', ctx=Store())], value=Name(id='workdir', ctx=Load())), Assign(targets=[Attribute(value=Name(id='maker', ctx=Load()), attr='target_dir', ctx=Store())], value=Constant(value=None)), Try(body=[For(target=Name(id='zinfo', ctx=Store()), iter=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='infolist', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='arcname', ctx=Store())], value=Attribute(value=Name(id='zinfo', ctx=Load()), attr='filename', ctx=Load())), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='arcname', ctx=Load()), Name(id='text_type', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='u_arcname', ctx=Store())], value=Name(id='arcname', ctx=Load()))], orelse=[Assign(targets=[Name(id='u_arcname', ctx=Store())], value=Call(func=Attribute(value=Name(id='arcname', ctx=Load()), attr='decode', ctx=Load()), args=[Constant(value='utf-8')], keywords=[]))]), If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='skip_entry', ctx=Load()), args=[Name(id='u_arcname', ctx=Load())], keywords=[]), body=[Continue()], orelse=[]), Assign(targets=[Name(id='row', ctx=Store())], value=Subscript(value=Name(id='records', ctx=Load()), slice=Name(id='u_arcname', ctx=Load()), ctx=Load())), If(test=BoolOp(op=And(), values=[Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=2), ctx=Load()), Compare(left=Call(func=Name(id='str', ctx=Load()), args=[Attribute(value=Name(id='zinfo', ctx=Load()), attr='file_size', ctx=Load())], keywords=[]), ops=[NotEq()], comparators=[Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=2), ctx=Load())])]), body=[Raise(exc=Call(func=Name(id='DistlibException', ctx=Load()), args=[BinOp(left=Constant(value='size mismatch for %s'), op=Mod(), right=Name(id='u_arcname', ctx=Load()))], keywords=[]))], orelse=[]), If(test=Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=1), ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='kind', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=1), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='='), Constant(value=1)], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='open', ctx=Load()), args=[Name(id='arcname', ctx=Load())], keywords=[]), optional_vars=Name(id='bf', ctx=Store()))], body=[Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Attribute(value=Name(id='bf', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]))]), Assign(targets=[Tuple(elts=[Name(id='_', ctx=Store()), Name(id='digest', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_hash', ctx=Load()), args=[Name(id='data', ctx=Load()), Name(id='kind', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='digest', ctx=Load()), ops=[NotEq()], comparators=[Name(id='value', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='DistlibException', ctx=Load()), args=[BinOp(left=Constant(value='digest mismatch for %s'), op=Mod(), right=Name(id='arcname', ctx=Load()))], keywords=[]))], orelse=[])], orelse=[]), If(test=BoolOp(op=And(), values=[Name(id='lib_only', ctx=Load()), Call(func=Attribute(value=Name(id='u_arcname', ctx=Load()), attr='startswith', ctx=Load()), args=[Tuple(elts=[Name(id='info_pfx', ctx=Load()), Name(id='data_pfx', ctx=Load())], ctx=Load())], keywords=[])]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='lib_only: skipping %s'), Name(id='u_arcname', ctx=Load())], keywords=[])), Continue()], orelse=[]), Assign(targets=[Name(id='is_script', ctx=Store())], value=BoolOp(op=And(), values=[Call(func=Attribute(value=Name(id='u_arcname', ctx=Load()), attr='startswith', ctx=Load()), args=[Name(id='script_pfx', ctx=Load())], keywords=[]), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='u_arcname', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.exe')], keywords=[]))])), If(test=Call(func=Attribute(value=Name(id='u_arcname', ctx=Load()), attr='startswith', ctx=Load()), args=[Name(id='data_pfx', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='_', ctx=Store()), Name(id='where', ctx=Store()), Name(id='rp', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='u_arcname', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='/'), Constant(value=2)], keywords=[])), Assign(targets=[Name(id='outfile', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Subscript(value=Name(id='paths', ctx=Load()), slice=Name(id='where', ctx=Load()), ctx=Load()), Call(func=Name(id='convert_path', ctx=Load()), args=[Name(id='rp', ctx=Load())], keywords=[])], keywords=[]))], orelse=[If(test=Compare(left=Name(id='u_arcname', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Name(id='wheel_metadata_name', ctx=Load()), Name(id='record_name', ctx=Load())], ctx=Load())]), body=[Continue()], orelse=[]), Assign(targets=[Name(id='outfile', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='libdir', ctx=Load()), Call(func=Name(id='convert_path', ctx=Load()), args=[Name(id='u_arcname', ctx=Load())], keywords=[])], keywords=[]))]), If(test=UnaryOp(op=Not(), operand=Name(id='is_script', ctx=Load())), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='open', ctx=Load()), args=[Name(id='arcname', ctx=Load())], keywords=[]), optional_vars=Name(id='bf', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='fileop', ctx=Load()), attr='copy_stream', ctx=Load()), args=[Name(id='bf', ctx=Load()), Name(id='outfile', ctx=Load())], keywords=[]))]), If(test=Compare(left=Attribute(value=Name(id='os', ctx=Load()), attr='name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='posix')]), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='chmod', ctx=Load()), args=[Name(id='outfile', ctx=Load()), BinOp(left=BinOp(left=Attribute(value=Name(id='zinfo', ctx=Load()), attr='external_attr', ctx=Load()), op=RShift(), right=Constant(value=16)), op=BitAnd(), right=Constant(value=511))], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='outfiles', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='outfile', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='dry_run', ctx=Load())), Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=1), ctx=Load())]), body=[With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='outfile', ctx=Load()), Constant(value='rb')], keywords=[]), optional_vars=Name(id='bf', ctx=Store()))], body=[Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Attribute(value=Name(id='bf', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='_', ctx=Store()), Name(id='newdigest', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_hash', ctx=Load()), args=[Name(id='data', ctx=Load()), Name(id='kind', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='newdigest', ctx=Load()), ops=[NotEq()], comparators=[Name(id='digest', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='DistlibException', ctx=Load()), args=[BinOp(left=Constant(value='digest mismatch on write for %s'), op=Mod(), right=Name(id='outfile', ctx=Load()))], keywords=[]))], orelse=[])])], orelse=[]), If(test=BoolOp(op=And(), values=[Name(id='bc', ctx=Load()), Call(func=Attribute(value=Name(id='outfile', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.py')], keywords=[])]), body=[Try(body=[Assign(targets=[Name(id='pyc', ctx=Store())], value=Call(func=Attribute(value=Name(id='fileop', ctx=Load()), attr='byte_compile', ctx=Load()), args=[Name(id='outfile', ctx=Load())], keywords=[keyword(arg='hashed_invalidation', value=Name(id='bc_hashed_invalidation', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='outfiles', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='pyc', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[Constant(value='Byte-compilation failed')], keywords=[keyword(arg='exc_info', value=Constant(value=True))]))])], orelse=[], finalbody=[])], orelse=[])], orelse=[Assign(targets=[Name(id='fn', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Call(func=Name(id='convert_path', ctx=Load()), args=[Name(id='arcname', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='workname', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='workdir', ctx=Load()), Name(id='fn', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='open', ctx=Load()), args=[Name(id='arcname', ctx=Load())], keywords=[]), optional_vars=Name(id='bf', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='fileop', ctx=Load()), attr='copy_stream', ctx=Load()), args=[Name(id='bf', ctx=Load()), Name(id='workname', ctx=Load())], keywords=[]))]), Assign(targets=[Tuple(elts=[Name(id='dn', ctx=Store()), Name(id='fn', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='split', ctx=Load()), args=[Name(id='outfile', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='maker', ctx=Load()), attr='target_dir', ctx=Store())], value=Name(id='dn', ctx=Load())), Assign(targets=[Name(id='filenames', ctx=Store())], value=Call(func=Attribute(value=Name(id='maker', ctx=Load()), attr='make', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='fileop', ctx=Load()), attr='set_executable_mode', ctx=Load()), args=[Name(id='filenames', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='outfiles', ctx=Load()), attr='extend', ctx=Load()), args=[Name(id='filenames', ctx=Load())], keywords=[]))])], orelse=[]), If(test=Name(id='lib_only', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='lib_only: returning None')], keywords=[])), Assign(targets=[Name(id='dist', ctx=Store())], value=Constant(value=None))], orelse=[Assign(targets=[Name(id='commands', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='file_version', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='info', ctx=Load()), slice=Constant(value='Wheel-Version'), ctx=Load())), If(test=Compare(left=Name(id='file_version', ctx=Load()), ops=[Eq()], comparators=[Constant(value='1.0')]), body=[Assign(targets=[Name(id='ep', ctx=Store())], value=Call(func=Attribute(value=Name(id='posixpath', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='info_dir', ctx=Load()), Constant(value='entry_points.txt')], keywords=[])), Try(body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='open', ctx=Load()), args=[Name(id='ep', ctx=Load())], keywords=[]), optional_vars=Name(id='bwf', ctx=Store()))], body=[Assign(targets=[Name(id='epdata', ctx=Store())], value=Call(func=Name(id='read_exports', ctx=Load()), args=[Name(id='bwf', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='commands', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Name(id='key', ctx=Store()), iter=Tuple(elts=[Constant(value='console'), Constant(value='gui')], ctx=Load()), body=[Assign(targets=[Name(id='k', ctx=Store())], value=BinOp(left=Constant(value='%s_scripts'), op=Mod(), right=Name(id='key', ctx=Load()))), If(test=Compare(left=Name(id='k', ctx=Load()), ops=[In()], comparators=[Name(id='epdata', ctx=Load())]), body=[Assign(targets=[Subscript(value=Name(id='commands', ctx=Load()), slice=BinOp(left=Constant(value='wrap_%s'), op=Mod(), right=Name(id='key', ctx=Load())), ctx=Store()), Name(id='d', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Name(id='v', ctx=Store()), iter=Call(func=Attribute(value=Subscript(value=Name(id='epdata', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Load()), attr='values', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='s', ctx=Store())], value=BinOp(left=Constant(value='%s:%s'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='v', ctx=Load()), attr='prefix', ctx=Load()), Attribute(value=Name(id='v', ctx=Load()), attr='suffix', ctx=Load())], ctx=Load()))), If(test=Attribute(value=Name(id='v', ctx=Load()), attr='flags', ctx=Load()), body=[AugAssign(target=Name(id='s', ctx=Store()), op=Add(), value=BinOp(left=Constant(value=' [%s]'), op=Mod(), right=Call(func=Attribute(value=Constant(value=','), attr='join', ctx=Load()), args=[Attribute(value=Name(id='v', ctx=Load()), attr='flags', ctx=Load())], keywords=[])))], orelse=[]), Assign(targets=[Subscript(value=Name(id='d', ctx=Load()), slice=Attribute(value=Name(id='v', ctx=Load()), attr='name', ctx=Load()), ctx=Store())], value=Name(id='s', ctx=Load()))], orelse=[])], orelse=[])], orelse=[])], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[Constant(value='Unable to read legacy script metadata, so cannot generate scripts')], keywords=[]))])], orelse=[], finalbody=[])], orelse=[Try(body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='open', ctx=Load()), args=[Name(id='metadata_name', ctx=Load())], keywords=[]), optional_vars=Name(id='bwf', ctx=Store()))], body=[Assign(targets=[Name(id='wf', ctx=Store())], value=Call(func=Name(id='wrapper', ctx=Load()), args=[Name(id='bwf', ctx=Load())], keywords=[])), Assign(targets=[Name(id='commands', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='load', ctx=Load()), args=[Name(id='wf', ctx=Load())], keywords=[]), attr='get', ctx=Load()), args=[Constant(value='extensions')], keywords=[])), If(test=Name(id='commands', ctx=Load()), body=[Assign(targets=[Name(id='commands', ctx=Store())], value=Call(func=Attribute(value=Name(id='commands', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='python.commands')], keywords=[]))], orelse=[])])], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[Constant(value='Unable to read JSON metadata, so cannot generate scripts')], keywords=[]))])], orelse=[], finalbody=[])]), If(test=Name(id='commands', ctx=Load()), body=[Assign(targets=[Name(id='console_scripts', ctx=Store())], value=Call(func=Attribute(value=Name(id='commands', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='wrap_console'), Dict(keys=[], values=[])], keywords=[])), Assign(targets=[Name(id='gui_scripts', ctx=Store())], value=Call(func=Attribute(value=Name(id='commands', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='wrap_gui'), Dict(keys=[], values=[])], keywords=[])), If(test=BoolOp(op=Or(), values=[Name(id='console_scripts', ctx=Load()), Name(id='gui_scripts', ctx=Load())]), body=[Assign(targets=[Name(id='script_dir', ctx=Store())], value=Call(func=Attribute(value=Name(id='paths', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='scripts'), Constant(value='')], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[Name(id='script_dir', ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Valid script path not specified')], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='maker', ctx=Load()), attr='target_dir', ctx=Store())], value=Name(id='script_dir', ctx=Load())), For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='console_scripts', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='script', ctx=Store())], value=BinOp(left=Constant(value='%s = %s'), op=Mod(), right=Tuple(elts=[Name(id='k', ctx=Load()), Name(id='v', ctx=Load())], ctx=Load()))), Assign(targets=[Name(id='filenames', ctx=Store())], value=Call(func=Attribute(value=Name(id='maker', ctx=Load()), attr='make', ctx=Load()), args=[Name(id='script', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='fileop', ctx=Load()), attr='set_executable_mode', ctx=Load()), args=[Name(id='filenames', ctx=Load())], keywords=[]))], orelse=[]), If(test=Name(id='gui_scripts', ctx=Load()), body=[Assign(targets=[Name(id='options', ctx=Store())], value=Dict(keys=[Constant(value='gui')], values=[Constant(value=True)])), For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='gui_scripts', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='script', ctx=Store())], value=BinOp(left=Constant(value='%s = %s'), op=Mod(), right=Tuple(elts=[Name(id='k', ctx=Load()), Name(id='v', ctx=Load())], ctx=Load()))), Assign(targets=[Name(id='filenames', ctx=Store())], value=Call(func=Attribute(value=Name(id='maker', ctx=Load()), attr='make', ctx=Load()), args=[Name(id='script', ctx=Load()), Name(id='options', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='fileop', ctx=Load()), attr='set_executable_mode', ctx=Load()), args=[Name(id='filenames', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], orelse=[]), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='libdir', ctx=Load()), Name(id='info_dir', ctx=Load())], keywords=[])), Assign(targets=[Name(id='dist', ctx=Store())], value=Call(func=Name(id='InstalledDistribution', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Assign(targets=[Name(id='paths', ctx=Store())], value=Call(func=Name(id='dict', ctx=Load()), args=[Name(id='paths', ctx=Load())], keywords=[])), Delete(targets=[Subscript(value=Name(id='paths', ctx=Load()), slice=Constant(value='purelib'), ctx=Del())]), Delete(targets=[Subscript(value=Name(id='paths', ctx=Load()), slice=Constant(value='platlib'), ctx=Del())]), Assign(targets=[Subscript(value=Name(id='paths', ctx=Load()), slice=Constant(value='lib'), ctx=Store())], value=Name(id='libdir', ctx=Load())), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='dist', ctx=Load()), attr='write_shared_locations', ctx=Load()), args=[Name(id='paths', ctx=Load()), Name(id='dry_run', ctx=Load())], keywords=[])), If(test=Name(id='p', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='outfiles', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='dist', ctx=Load()), attr='write_installed_files', ctx=Load()), args=[Name(id='outfiles', ctx=Load()), Subscript(value=Name(id='paths', ctx=Load()), slice=Constant(value='prefix'), ctx=Load()), Name(id='dry_run', ctx=Load())], keywords=[]))]), Return(value=Name(id='dist', ctx=Load()))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='exception', ctx=Load()), args=[Constant(value='installation failed.')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='fileop', ctx=Load()), attr='rollback', ctx=Load()), args=[], keywords=[])), Raise()])], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='shutil', ctx=Load()), attr='rmtree', ctx=Load()), args=[Name(id='workdir', ctx=Load())], keywords=[]))])])], decorator_list=[]), FunctionDef(name='_get_dylib_cache', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Global(names=['cache']), If(test=Compare(left=Name(id='cache', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='base', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Call(func=Name(id='get_cache_base', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='str', ctx=Load()), args=[Constant(value='dylib-cache')], keywords=[]), BinOp(left=Constant(value='%s.%s'), op=Mod(), right=Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), slice=Slice(upper=Constant(value=2)), ctx=Load()))], keywords=[])), Assign(targets=[Name(id='cache', ctx=Store())], value=Call(func=Name(id='Cache', ctx=Load()), args=[Name(id='base', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='cache', ctx=Load()))], decorator_list=[]), FunctionDef(name='_get_extensions', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='pathname', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='dirname', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load())], keywords=[])), Assign(targets=[Name(id='name_ver', ctx=Store())], value=BinOp(left=Constant(value='%s-%s'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='version', ctx=Load())], ctx=Load()))), Assign(targets=[Name(id='info_dir', ctx=Store())], value=BinOp(left=Constant(value='%s.dist-info'), op=Mod(), right=Name(id='name_ver', ctx=Load()))), Assign(targets=[Name(id='arcname', ctx=Store())], value=Call(func=Attribute(value=Name(id='posixpath', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='info_dir', ctx=Load()), Constant(value='EXTENSIONS')], keywords=[])), Assign(targets=[Name(id='wrapper', ctx=Store())], value=Call(func=Attribute(value=Name(id='codecs', ctx=Load()), attr='getreader', ctx=Load()), args=[Constant(value='utf-8')], keywords=[])), Assign(targets=[Name(id='result', ctx=Store())], value=List(elts=[], ctx=Load())), With(items=[withitem(context_expr=Call(func=Name(id='ZipFile', ctx=Load()), args=[Name(id='pathname', ctx=Load()), Constant(value='r')], keywords=[]), optional_vars=Name(id='zf', ctx=Store()))], body=[Try(body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='open', ctx=Load()), args=[Name(id='arcname', ctx=Load())], keywords=[]), optional_vars=Name(id='bf', ctx=Store()))], body=[Assign(targets=[Name(id='wf', ctx=Store())], value=Call(func=Name(id='wrapper', ctx=Load()), args=[Name(id='bf', ctx=Load())], keywords=[])), Assign(targets=[Name(id='extensions', ctx=Store())], value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='load', ctx=Load()), args=[Name(id='wf', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cache', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_dylib_cache', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='prefix', ctx=Store())], value=Call(func=Attribute(value=Name(id='cache', ctx=Load()), attr='prefix_to_dir', ctx=Load()), args=[Name(id='pathname', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cache_base', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='cache', ctx=Load()), attr='base', ctx=Load()), Name(id='prefix', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[Name(id='cache_base', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load()), args=[Name(id='cache_base', ctx=Load())], keywords=[]))], orelse=[]), For(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='relpath', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='extensions', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='dest', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='cache_base', ctx=Load()), Call(func=Name(id='convert_path', ctx=Load()), args=[Name(id='relpath', ctx=Load())], keywords=[])], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='dest', ctx=Load())], keywords=[])), body=[Assign(targets=[Name(id='extract', ctx=Store())], value=Constant(value=True))], orelse=[Assign(targets=[Name(id='file_time', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='stat', ctx=Load()), args=[Name(id='dest', ctx=Load())], keywords=[]), attr='st_mtime', ctx=Load())), Assign(targets=[Name(id='file_time', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), attr='fromtimestamp', ctx=Load()), args=[Name(id='file_time', ctx=Load())], keywords=[])), Assign(targets=[Name(id='info', ctx=Store())], value=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='getinfo', ctx=Load()), args=[Name(id='relpath', ctx=Load())], keywords=[])), Assign(targets=[Name(id='wheel_time', ctx=Store())], value=Call(func=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), args=[Starred(value=Attribute(value=Name(id='info', ctx=Load()), attr='date_time', ctx=Load()), ctx=Load())], keywords=[])), Assign(targets=[Name(id='extract', ctx=Store())], value=Compare(left=Name(id='wheel_time', ctx=Load()), ops=[Gt()], comparators=[Name(id='file_time', ctx=Load())]))]), If(test=Name(id='extract', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='extract', ctx=Load()), args=[Name(id='relpath', ctx=Load()), Name(id='cache_base', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='name', ctx=Load()), Name(id='dest', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[])])], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[]), FunctionDef(name='is_compatible', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Determine if a wheel is compatible with the running system.\n        ')), Return(value=Call(func=Name(id='is_compatible', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='is_mountable', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Determine if a wheel is asserted as mountable by its metadata.\n        ')), Return(value=Constant(value=True))], decorator_list=[]), FunctionDef(name='mount', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='append')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Assign(targets=[Name(id='pathname', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='abspath', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='dirname', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load())], keywords=[])], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_compatible', ctx=Load()), args=[], keywords=[])), body=[Assign(targets=[Name(id='msg', ctx=Store())], value=BinOp(left=Constant(value='Wheel %s not compatible with this Python.'), op=Mod(), right=Name(id='pathname', ctx=Load()))), Raise(exc=Call(func=Name(id='DistlibException', ctx=Load()), args=[Name(id='msg', ctx=Load())], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_mountable', ctx=Load()), args=[], keywords=[])), body=[Assign(targets=[Name(id='msg', ctx=Store())], value=BinOp(left=Constant(value='Wheel %s is marked as not mountable.'), op=Mod(), right=Name(id='pathname', ctx=Load()))), Raise(exc=Call(func=Name(id='DistlibException', ctx=Load()), args=[Name(id='msg', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='pathname', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='sys', ctx=Load()), attr='path', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='%s already in path'), Name(id='pathname', ctx=Load())], keywords=[]))], orelse=[If(test=Name(id='append', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='path', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='pathname', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='path', ctx=Load()), attr='insert', ctx=Load()), args=[Constant(value=0), Name(id='pathname', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='extensions', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_extensions', ctx=Load()), args=[], keywords=[])), If(test=Name(id='extensions', ctx=Load()), body=[If(test=Compare(left=Name(id='_hook', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='sys', ctx=Load()), attr='meta_path', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='meta_path', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='_hook', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='_hook', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='pathname', ctx=Load()), Name(id='extensions', ctx=Load())], keywords=[]))], orelse=[])])], decorator_list=[]), FunctionDef(name='unmount', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='pathname', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='abspath', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='dirname', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load())], keywords=[])], keywords=[])), If(test=Compare(left=Name(id='pathname', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='sys', ctx=Load()), attr='path', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='%s not in path'), Name(id='pathname', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='path', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='pathname', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='pathname', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='_hook', ctx=Load()), attr='impure_wheels', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='_hook', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='pathname', ctx=Load())], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='_hook', ctx=Load()), attr='impure_wheels', ctx=Load())), body=[If(test=Compare(left=Name(id='_hook', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='sys', ctx=Load()), attr='meta_path', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='meta_path', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='_hook', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])])], decorator_list=[]), FunctionDef(name='verify', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='pathname', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='dirname', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load())], keywords=[])), Assign(targets=[Name(id='name_ver', ctx=Store())], value=BinOp(left=Constant(value='%s-%s'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='version', ctx=Load())], ctx=Load()))), Assign(targets=[Name(id='data_dir', ctx=Store())], value=BinOp(left=Constant(value='%s.data'), op=Mod(), right=Name(id='name_ver', ctx=Load()))), Assign(targets=[Name(id='info_dir', ctx=Store())], value=BinOp(left=Constant(value='%s.dist-info'), op=Mod(), right=Name(id='name_ver', ctx=Load()))), Assign(targets=[Name(id='metadata_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='posixpath', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='info_dir', ctx=Load()), Name(id='LEGACY_METADATA_FILENAME', ctx=Load())], keywords=[])), Assign(targets=[Name(id='wheel_metadata_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='posixpath', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='info_dir', ctx=Load()), Constant(value='WHEEL')], keywords=[])), Assign(targets=[Name(id='record_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='posixpath', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='info_dir', ctx=Load()), Constant(value='RECORD')], keywords=[])), Assign(targets=[Name(id='wrapper', ctx=Store())], value=Call(func=Attribute(value=Name(id='codecs', ctx=Load()), attr='getreader', ctx=Load()), args=[Constant(value='utf-8')], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='ZipFile', ctx=Load()), args=[Name(id='pathname', ctx=Load()), Constant(value='r')], keywords=[]), optional_vars=Name(id='zf', ctx=Store()))], body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='open', ctx=Load()), args=[Name(id='wheel_metadata_name', ctx=Load())], keywords=[]), optional_vars=Name(id='bwf', ctx=Store()))], body=[Assign(targets=[Name(id='wf', ctx=Store())], value=Call(func=Name(id='wrapper', ctx=Load()), args=[Name(id='bwf', ctx=Load())], keywords=[])), Assign(targets=[Name(id='message', ctx=Store())], value=Call(func=Name(id='message_from_file', ctx=Load()), args=[Name(id='wf', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='wv', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='message', ctx=Load()), slice=Constant(value='Wheel-Version'), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.'), Constant(value=1)], keywords=[])), Assign(targets=[Name(id='file_version', ctx=Store())], value=Call(func=Name(id='tuple', ctx=Load()), args=[ListComp(elt=Call(func=Name(id='int', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Name(id='wv', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), Assign(targets=[Name(id='records', ctx=Store())], value=Dict(keys=[], values=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='open', ctx=Load()), args=[Name(id='record_name', ctx=Load())], keywords=[]), optional_vars=Name(id='bf', ctx=Store()))], body=[With(items=[withitem(context_expr=Call(func=Name(id='CSVReader', ctx=Load()), args=[], keywords=[keyword(arg='stream', value=Name(id='bf', ctx=Load()))]), optional_vars=Name(id='reader', ctx=Store()))], body=[For(target=Name(id='row', ctx=Store()), iter=Name(id='reader', ctx=Load()), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Subscript(value=Name(id='records', ctx=Load()), slice=Name(id='p', ctx=Load()), ctx=Store())], value=Name(id='row', ctx=Load()))], orelse=[])])]), For(target=Name(id='zinfo', ctx=Store()), iter=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='infolist', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='arcname', ctx=Store())], value=Attribute(value=Name(id='zinfo', ctx=Load()), attr='filename', ctx=Load())), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='arcname', ctx=Load()), Name(id='text_type', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='u_arcname', ctx=Store())], value=Name(id='arcname', ctx=Load()))], orelse=[Assign(targets=[Name(id='u_arcname', ctx=Store())], value=Call(func=Attribute(value=Name(id='arcname', ctx=Load()), attr='decode', ctx=Load()), args=[Constant(value='utf-8')], keywords=[]))]), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='u_arcname', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='/')], keywords=[])), If(test=Compare(left=Constant(value='..'), ops=[In()], comparators=[Name(id='p', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='DistlibException', ctx=Load()), args=[BinOp(left=Constant(value='invalid entry in wheel: %r'), op=Mod(), right=Name(id='u_arcname', ctx=Load()))], keywords=[]))], orelse=[]), If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='skip_entry', ctx=Load()), args=[Name(id='u_arcname', ctx=Load())], keywords=[]), body=[Continue()], orelse=[]), Assign(targets=[Name(id='row', ctx=Store())], value=Subscript(value=Name(id='records', ctx=Load()), slice=Name(id='u_arcname', ctx=Load()), ctx=Load())), If(test=BoolOp(op=And(), values=[Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=2), ctx=Load()), Compare(left=Call(func=Name(id='str', ctx=Load()), args=[Attribute(value=Name(id='zinfo', ctx=Load()), attr='file_size', ctx=Load())], keywords=[]), ops=[NotEq()], comparators=[Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=2), ctx=Load())])]), body=[Raise(exc=Call(func=Name(id='DistlibException', ctx=Load()), args=[BinOp(left=Constant(value='size mismatch for %s'), op=Mod(), right=Name(id='u_arcname', ctx=Load()))], keywords=[]))], orelse=[]), If(test=Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=1), ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='kind', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=1), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='='), Constant(value=1)], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='open', ctx=Load()), args=[Name(id='arcname', ctx=Load())], keywords=[]), optional_vars=Name(id='bf', ctx=Store()))], body=[Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Attribute(value=Name(id='bf', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]))]), Assign(targets=[Tuple(elts=[Name(id='_', ctx=Store()), Name(id='digest', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_hash', ctx=Load()), args=[Name(id='data', ctx=Load()), Name(id='kind', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='digest', ctx=Load()), ops=[NotEq()], comparators=[Name(id='value', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='DistlibException', ctx=Load()), args=[BinOp(left=Constant(value='digest mismatch for %s'), op=Mod(), right=Name(id='arcname', ctx=Load()))], keywords=[]))], orelse=[])], orelse=[])], orelse=[])])], decorator_list=[]), FunctionDef(name='update', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='modifier'), arg(arg='dest_dir')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='\n        Update the contents of a wheel in a generic way. The modifier should\n        be a callable which expects a dictionary argument: its keys are\n        archive-entry paths, and its values are absolute filesystem paths\n        where the contents the corresponding archive entries can be found. The\n        modifier is free to change the contents of the files pointed to, add\n        new entries and remove entries, before returning. This method will\n        extract the entire contents of the wheel to a temporary location, call\n        the modifier, and then use the passed (and possibly updated)\n        dictionary to write a new wheel. If ``dest_dir`` is specified, the new\n        wheel is written there -- otherwise, the original wheel is overwritten.\n\n        The modifier should return True if it updated the wheel, else False.\n        This method returns the same value the modifier returns.\n        ')), FunctionDef(name='get_version', args=arguments(posonlyargs=[], args=[arg(arg='path_map'), arg(arg='info_dir')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='version', ctx=Store()), Name(id='path', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='key', ctx=Store())], value=BinOp(left=Constant(value='%s/%s'), op=Mod(), right=Tuple(elts=[Name(id='info_dir', ctx=Load()), Name(id='LEGACY_METADATA_FILENAME', ctx=Load())], ctx=Load()))), If(test=Compare(left=Name(id='key', ctx=Load()), ops=[NotIn()], comparators=[Name(id='path_map', ctx=Load())]), body=[Assign(targets=[Name(id='key', ctx=Store())], value=BinOp(left=Constant(value='%s/PKG-INFO'), op=Mod(), right=Name(id='info_dir', ctx=Load())))], orelse=[]), If(test=Compare(left=Name(id='key', ctx=Load()), ops=[In()], comparators=[Name(id='path_map', ctx=Load())]), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Subscript(value=Name(id='path_map', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='version', ctx=Store())], value=Attribute(value=Call(func=Name(id='Metadata', ctx=Load()), args=[], keywords=[keyword(arg='path', value=Name(id='path', ctx=Load()))]), attr='version', ctx=Load()))], orelse=[]), Return(value=Tuple(elts=[Name(id='version', ctx=Load()), Name(id='path', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='update_version', args=arguments(posonlyargs=[], args=[arg(arg='version'), arg(arg='path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='updated', ctx=Store())], value=Constant(value=None)), Try(body=[Assign(targets=[Name(id='v', ctx=Store())], value=Call(func=Name(id='NormalizedVersion', ctx=Load()), args=[Name(id='version', ctx=Load())], keywords=[])), Assign(targets=[Name(id='i', ctx=Store())], value=Call(func=Attribute(value=Name(id='version', ctx=Load()), attr='find', ctx=Load()), args=[Constant(value='-')], keywords=[])), If(test=Compare(left=Name(id='i', ctx=Load()), ops=[Lt()], comparators=[Constant(value=0)]), body=[Assign(targets=[Name(id='updated', ctx=Store())], value=BinOp(left=Constant(value='%s+1'), op=Mod(), right=Name(id='version', ctx=Load())))], orelse=[Assign(targets=[Name(id='parts', ctx=Store())], value=ListComp(elt=Call(func=Name(id='int', ctx=Load()), args=[Name(id='s', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='s', ctx=Store()), iter=Call(func=Attribute(value=Subscript(value=Name(id='version', ctx=Load()), slice=Slice(lower=BinOp(left=Name(id='i', ctx=Load()), op=Add(), right=Constant(value=1))), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[]), ifs=[], is_async=0)])), AugAssign(target=Subscript(value=Name(id='parts', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Store()), op=Add(), value=Constant(value=1)), Assign(targets=[Name(id='updated', ctx=Store())], value=BinOp(left=Constant(value='%s+%s'), op=Mod(), right=Tuple(elts=[Subscript(value=Name(id='version', ctx=Load()), slice=Slice(upper=Name(id='i', ctx=Load())), ctx=Load()), Call(func=Attribute(value=Constant(value='.'), attr='join', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='str', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Name(id='parts', ctx=Load()), ifs=[], is_async=0)])], keywords=[])], ctx=Load())))])], handlers=[ExceptHandler(type=Name(id='UnsupportedVersionError', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Cannot update non-compliant (PEP-440) version %r'), Name(id='version', ctx=Load())], keywords=[]))])], orelse=[], finalbody=[]), If(test=Name(id='updated', ctx=Load()), body=[Assign(targets=[Name(id='md', ctx=Store())], value=Call(func=Name(id='Metadata', ctx=Load()), args=[], keywords=[keyword(arg='path', value=Name(id='path', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='md', ctx=Load()), attr='version', ctx=Store())], value=Name(id='updated', ctx=Load())), Assign(targets=[Name(id='legacy', ctx=Store())], value=Call(func=Attribute(value=Name(id='path', ctx=Load()), attr='endswith', ctx=Load()), args=[Name(id='LEGACY_METADATA_FILENAME', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='md', ctx=Load()), attr='write', ctx=Load()), args=[], keywords=[keyword(arg='path', value=Name(id='path', ctx=Load())), keyword(arg='legacy', value=Name(id='legacy', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Version updated from %r to %r'), Name(id='version', ctx=Load()), Name(id='updated', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), Assign(targets=[Name(id='pathname', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='dirname', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load())], keywords=[])), Assign(targets=[Name(id='name_ver', ctx=Store())], value=BinOp(left=Constant(value='%s-%s'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='version', ctx=Load())], ctx=Load()))), Assign(targets=[Name(id='info_dir', ctx=Store())], value=BinOp(left=Constant(value='%s.dist-info'), op=Mod(), right=Name(id='name_ver', ctx=Load()))), Assign(targets=[Name(id='record_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='posixpath', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='info_dir', ctx=Load()), Constant(value='RECORD')], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='tempdir', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='workdir', ctx=Store()))], body=[With(items=[withitem(context_expr=Call(func=Name(id='ZipFile', ctx=Load()), args=[Name(id='pathname', ctx=Load()), Constant(value='r')], keywords=[]), optional_vars=Name(id='zf', ctx=Store()))], body=[Assign(targets=[Name(id='path_map', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Name(id='zinfo', ctx=Store()), iter=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='infolist', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='arcname', ctx=Store())], value=Attribute(value=Name(id='zinfo', ctx=Load()), attr='filename', ctx=Load())), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='arcname', ctx=Load()), Name(id='text_type', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='u_arcname', ctx=Store())], value=Name(id='arcname', ctx=Load()))], orelse=[Assign(targets=[Name(id='u_arcname', ctx=Store())], value=Call(func=Attribute(value=Name(id='arcname', ctx=Load()), attr='decode', ctx=Load()), args=[Constant(value='utf-8')], keywords=[]))]), If(test=Compare(left=Name(id='u_arcname', ctx=Load()), ops=[Eq()], comparators=[Name(id='record_name', ctx=Load())]), body=[Continue()], orelse=[]), If(test=Compare(left=Constant(value='..'), ops=[In()], comparators=[Name(id='u_arcname', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='DistlibException', ctx=Load()), args=[BinOp(left=Constant(value='invalid entry in wheel: %r'), op=Mod(), right=Name(id='u_arcname', ctx=Load()))], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='extract', ctx=Load()), args=[Name(id='zinfo', ctx=Load()), Name(id='workdir', ctx=Load())], keywords=[])), Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='workdir', ctx=Load()), Call(func=Name(id='convert_path', ctx=Load()), args=[Name(id='u_arcname', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Subscript(value=Name(id='path_map', ctx=Load()), slice=Name(id='u_arcname', ctx=Load()), ctx=Store())], value=Name(id='path', ctx=Load()))], orelse=[])]), Assign(targets=[Tuple(elts=[Name(id='original_version', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Name(id='get_version', ctx=Load()), args=[Name(id='path_map', ctx=Load()), Name(id='info_dir', ctx=Load())], keywords=[])), Assign(targets=[Name(id='modified', ctx=Store())], value=Call(func=Name(id='modifier', ctx=Load()), args=[Name(id='path_map', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), If(test=Name(id='modified', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='current_version', ctx=Store()), Name(id='path', ctx=Store())], ctx=Store())], value=Call(func=Name(id='get_version', ctx=Load()), args=[Name(id='path_map', ctx=Load()), Name(id='info_dir', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Name(id='current_version', ctx=Load()), Compare(left=Name(id='current_version', ctx=Load()), ops=[Eq()], comparators=[Name(id='original_version', ctx=Load())])]), body=[Expr(value=Call(func=Name(id='update_version', ctx=Load()), args=[Name(id='current_version', ctx=Load()), Name(id='path', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='dest_dir', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Tuple(elts=[Name(id='fd', ctx=Store()), Name(id='newpath', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='mkstemp', ctx=Load()), args=[], keywords=[keyword(arg='suffix', value=Constant(value='.whl')), keyword(arg='prefix', value=Constant(value='wheel-update-')), keyword(arg='dir', value=Name(id='workdir', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='close', ctx=Load()), args=[Name(id='fd', ctx=Load())], keywords=[]))], orelse=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[Name(id='dest_dir', ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='DistlibException', ctx=Load()), args=[BinOp(left=Constant(value='Not a directory: %r'), op=Mod(), right=Name(id='dest_dir', ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='newpath', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dest_dir', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='archive_paths', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='path_map', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='distinfo', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='workdir', ctx=Load()), Name(id='info_dir', ctx=Load())], keywords=[])), Assign(targets=[Name(id='info', ctx=Store())], value=Tuple(elts=[Name(id='distinfo', ctx=Load()), Name(id='info_dir', ctx=Load())], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='write_records', ctx=Load()), args=[Name(id='info', ctx=Load()), Name(id='workdir', ctx=Load()), Name(id='archive_paths', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='build_zip', ctx=Load()), args=[Name(id='newpath', ctx=Load()), Name(id='archive_paths', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='dest_dir', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='shutil', ctx=Load()), attr='copyfile', ctx=Load()), args=[Name(id='newpath', ctx=Load()), Name(id='pathname', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])]), Return(value=Name(id='modified', ctx=Load()))], decorator_list=[])], decorator_list=[]), FunctionDef(name='_get_glibc_version', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Import(names=[alias(name='platform')]), Assign(targets=[Name(id='ver', ctx=Store())], value=Call(func=Attribute(value=Name(id='platform', ctx=Load()), attr='libc_ver', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='result', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=Compare(left=Subscript(value=Name(id='ver', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[Eq()], comparators=[Constant(value='glibc')]), body=[For(target=Name(id='s', ctx=Store()), iter=Call(func=Attribute(value=Subscript(value=Name(id='ver', ctx=Load()), slice=Constant(value=1), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[IfExp(test=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='isdigit', ctx=Load()), args=[], keywords=[]), body=Call(func=Name(id='int', ctx=Load()), args=[Name(id='s', ctx=Load())], keywords=[]), orelse=Constant(value=0))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Name(id='tuple', ctx=Load()), args=[Name(id='result', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[]), FunctionDef(name='compatible_tags', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Return (pyver, abi, arch) tuples compatible with this Python.\n    ')), Assign(targets=[Name(id='versions', ctx=Store())], value=List(elts=[Name(id='VER_SUFFIX', ctx=Load())], ctx=Load())), Assign(targets=[Name(id='major', ctx=Store())], value=Subscript(value=Name(id='VER_SUFFIX', ctx=Load()), slice=Constant(value=0), ctx=Load())), For(target=Name(id='minor', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[BinOp(left=Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), slice=Constant(value=1), ctx=Load()), op=Sub(), right=Constant(value=1)), UnaryOp(op=USub(), operand=Constant(value=1)), UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='versions', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[List(elts=[Name(id='major', ctx=Load()), Call(func=Name(id='str', ctx=Load()), args=[Name(id='minor', ctx=Load())], keywords=[])], ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='abis', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='suffix', ctx=Store()), iter=Call(func=Name(id='_get_suffixes', ctx=Load()), args=[], keywords=[]), body=[If(test=Call(func=Attribute(value=Name(id='suffix', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='.abi')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='abis', ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='suffix', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.'), Constant(value=2)], keywords=[]), slice=Constant(value=1), ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='abis', ctx=Load()), attr='sort', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='ABI', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='none')]), body=[Expr(value=Call(func=Attribute(value=Name(id='abis', ctx=Load()), attr='insert', ctx=Load()), args=[Constant(value=0), Name(id='ABI', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='abis', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='none')], keywords=[])), Assign(targets=[Name(id='result', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='arches', ctx=Store())], value=List(elts=[Name(id='ARCH', ctx=Load())], ctx=Load())), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), ops=[Eq()], comparators=[Constant(value='darwin')]), body=[Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(\\w+)_(\\d+)_(\\d+)_(\\w+)$'), Name(id='ARCH', ctx=Load())], keywords=[])), If(test=Name(id='m', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='name', ctx=Store()), Name(id='major', ctx=Store()), Name(id='minor', ctx=Store()), Name(id='arch', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='groups', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='minor', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Name(id='minor', ctx=Load())], keywords=[])), Assign(targets=[Name(id='matches', ctx=Store())], value=List(elts=[Name(id='arch', ctx=Load())], ctx=Load())), If(test=Compare(left=Name(id='arch', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='i386'), Constant(value='ppc')], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='matches', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='fat')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='arch', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='i386'), Constant(value='ppc'), Constant(value='x86_64')], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='matches', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='fat3')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='arch', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='ppc64'), Constant(value='x86_64')], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='matches', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='fat64')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='arch', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='i386'), Constant(value='x86_64')], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='matches', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='intel')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='arch', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='i386'), Constant(value='x86_64'), Constant(value='intel'), Constant(value='ppc'), Constant(value='ppc64')], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='matches', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='universal')], keywords=[]))], orelse=[]), While(test=Compare(left=Name(id='minor', ctx=Load()), ops=[GtE()], comparators=[Constant(value=0)]), body=[For(target=Name(id='match', ctx=Store()), iter=Name(id='matches', ctx=Load()), body=[Assign(targets=[Name(id='s', ctx=Store())], value=BinOp(left=Constant(value='%s_%s_%s_%s'), op=Mod(), right=Tuple(elts=[Name(id='name', ctx=Load()), Name(id='major', ctx=Load()), Name(id='minor', ctx=Load()), Name(id='match', ctx=Load())], ctx=Load()))), If(test=Compare(left=Name(id='s', ctx=Load()), ops=[NotEq()], comparators=[Name(id='ARCH', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='arches', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='s', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), AugAssign(target=Name(id='minor', ctx=Store()), op=Sub(), value=Constant(value=1))], orelse=[])], orelse=[])], orelse=[]), For(target=Name(id='abi', ctx=Store()), iter=Name(id='abis', ctx=Load()), body=[For(target=Name(id='arch', ctx=Store()), iter=Name(id='arches', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Tuple(elts=[Name(id='IMP_PREFIX', ctx=Load()), Subscript(value=Name(id='versions', ctx=Load()), slice=Constant(value=0), ctx=Load())], ctx=Load())], keywords=[]), Name(id='abi', ctx=Load()), Name(id='arch', ctx=Load())], ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='abi', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='none')]), Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='linux')], keywords=[])]), body=[Assign(targets=[Name(id='arch', ctx=Store())], value=Call(func=Attribute(value=Name(id='arch', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='linux_'), Constant(value='')], keywords=[])), Assign(targets=[Name(id='parts', ctx=Store())], value=Call(func=Name(id='_get_glibc_version', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='parts', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=2)]), body=[If(test=Compare(left=Name(id='parts', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=2), Constant(value=5)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Tuple(elts=[Name(id='IMP_PREFIX', ctx=Load()), Subscript(value=Name(id='versions', ctx=Load()), slice=Constant(value=0), ctx=Load())], ctx=Load())], keywords=[]), Name(id='abi', ctx=Load()), BinOp(left=Constant(value='manylinux1_%s'), op=Mod(), right=Name(id='arch', ctx=Load()))], ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='parts', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=2), Constant(value=12)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Tuple(elts=[Name(id='IMP_PREFIX', ctx=Load()), Subscript(value=Name(id='versions', ctx=Load()), slice=Constant(value=0), ctx=Load())], ctx=Load())], keywords=[]), Name(id='abi', ctx=Load()), BinOp(left=Constant(value='manylinux2010_%s'), op=Mod(), right=Name(id='arch', ctx=Load()))], ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='parts', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=2), Constant(value=17)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Tuple(elts=[Name(id='IMP_PREFIX', ctx=Load()), Subscript(value=Name(id='versions', ctx=Load()), slice=Constant(value=0), ctx=Load())], ctx=Load())], keywords=[]), Name(id='abi', ctx=Load()), BinOp(left=Constant(value='manylinux2014_%s'), op=Mod(), right=Name(id='arch', ctx=Load()))], ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Tuple(elts=[Name(id='IMP_PREFIX', ctx=Load()), Subscript(value=Name(id='versions', ctx=Load()), slice=Constant(value=0), ctx=Load())], ctx=Load())], keywords=[]), Name(id='abi', ctx=Load()), BinOp(left=Constant(value='manylinux_%s_%s_%s'), op=Mod(), right=Tuple(elts=[Subscript(value=Name(id='parts', ctx=Load()), slice=Constant(value=0), ctx=Load()), Subscript(value=Name(id='parts', ctx=Load()), slice=Constant(value=1), ctx=Load()), Name(id='arch', ctx=Load())], ctx=Load()))], ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], orelse=[]), For(target=Tuple(elts=[Name(id='i', ctx=Store()), Name(id='version', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='versions', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Tuple(elts=[Name(id='IMP_PREFIX', ctx=Load()), Name(id='version', ctx=Load())], ctx=Load())], keywords=[]), Constant(value='none'), Constant(value='any')], ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='i', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Tuple(elts=[Name(id='IMP_PREFIX', ctx=Load()), Subscript(value=Name(id='version', ctx=Load()), slice=Constant(value=0), ctx=Load())], ctx=Load())], keywords=[]), Constant(value='none'), Constant(value='any')], ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), For(target=Tuple(elts=[Name(id='i', ctx=Store()), Name(id='version', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='versions', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Tuple(elts=[Constant(value='py'), Name(id='version', ctx=Load())], ctx=Load())], keywords=[]), Constant(value='none'), Constant(value='any')], ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='i', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Tuple(elts=[Constant(value='py'), Subscript(value=Name(id='version', ctx=Load()), slice=Constant(value=0), ctx=Load())], ctx=Load())], keywords=[]), Constant(value='none'), Constant(value='any')], ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Return(value=Call(func=Name(id='set', ctx=Load()), args=[Name(id='result', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='COMPATIBLE_TAGS', ctx=Store())], value=Call(func=Name(id='compatible_tags', ctx=Load()), args=[], keywords=[])), Delete(targets=[Name(id='compatible_tags', ctx=Del())]), FunctionDef(name='is_compatible', args=arguments(posonlyargs=[], args=[arg(arg='wheel'), arg(arg='tags')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='wheel', ctx=Load()), Name(id='Wheel', ctx=Load())], keywords=[])), body=[Assign(targets=[Name(id='wheel', ctx=Store())], value=Call(func=Name(id='Wheel', ctx=Load()), args=[Name(id='wheel', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='result', ctx=Store())], value=Constant(value=False)), If(test=Compare(left=Name(id='tags', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='tags', ctx=Store())], value=Name(id='COMPATIBLE_TAGS', ctx=Load()))], orelse=[]), For(target=Tuple(elts=[Name(id='ver', ctx=Store()), Name(id='abi', ctx=Store()), Name(id='arch', ctx=Store())], ctx=Store()), iter=Name(id='tags', ctx=Load()), body=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='ver', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='wheel', ctx=Load()), attr='pyver', ctx=Load())]), Compare(left=Name(id='abi', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='wheel', ctx=Load()), attr='abi', ctx=Load())]), Compare(left=Name(id='arch', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='wheel', ctx=Load()), attr='arch', ctx=Load())])]), body=[Assign(targets=[Name(id='result', ctx=Store())], value=Constant(value=True)), Break()], orelse=[])], orelse=[]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[])], type_ignores=[])