Module(body=[Import(names=[alias(name='contextlib')]), Import(names=[alias(name='ctypes')]), Import(names=[alias(name='platform')]), Import(names=[alias(name='ssl')]), Import(names=[alias(name='typing')]), ImportFrom(module='ctypes', names=[alias(name='CDLL'), alias(name='POINTER'), alias(name='c_bool'), alias(name='c_char_p'), alias(name='c_int32'), alias(name='c_long'), alias(name='c_uint32'), alias(name='c_ulong'), alias(name='c_void_p')], level=0), ImportFrom(module='ctypes.util', names=[alias(name='find_library')], level=0), ImportFrom(module='_ssl_constants', names=[alias(name='_set_ssl_context_verify_mode')], level=1), Assign(targets=[Name(id='_mac_version', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='platform', ctx=Load()), attr='mac_ver', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='_mac_version_info', ctx=Store())], value=Call(func=Name(id='tuple', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Name(id='int', ctx=Load()), Call(func=Attribute(value=Name(id='_mac_version', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[])], keywords=[])], keywords=[])), If(test=Compare(left=Name(id='_mac_version_info', ctx=Load()), ops=[Lt()], comparators=[Tuple(elts=[Constant(value=10), Constant(value=8)], ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ImportError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Only OS X 10.8 and newer are supported, not '), FormattedValue(value=Subscript(value=Name(id='_mac_version_info', ctx=Load()), slice=Constant(value=0), ctx=Load()), conversion=-1), Constant(value='.'), FormattedValue(value=Subscript(value=Name(id='_mac_version_info', ctx=Load()), slice=Constant(value=1), ctx=Load()), conversion=-1)])], keywords=[]))], orelse=[]), FunctionDef(name='_load_cdll', args=arguments(posonlyargs=[], args=[arg(arg='name', annotation=Name(id='str', ctx=Load())), arg(arg='macos10_16_path', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Loads a CDLL by name, falling back to known path on 10.16+')), Try(body=[AnnAssign(target=Name(id='path', ctx=Store()), annotation=BinOp(left=Name(id='str', ctx=Load()), op=BitOr(), right=Constant(value=None)), simple=1), If(test=Compare(left=Name(id='_mac_version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=10), Constant(value=16)], ctx=Load())]), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Name(id='macos10_16_path', ctx=Load()))], orelse=[Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Name(id='find_library', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[]))]), If(test=UnaryOp(op=Not(), operand=Name(id='path', ctx=Load())), body=[Raise(exc=Name(id='OSError', ctx=Load()))], orelse=[]), Return(value=Call(func=Name(id='CDLL', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[keyword(arg='use_errno', value=Constant(value=True))]))], handlers=[ExceptHandler(type=Name(id='OSError', ctx=Load()), body=[Raise(exc=Call(func=Name(id='ImportError', ctx=Load()), args=[JoinedStr(values=[Constant(value='The library '), FormattedValue(value=Name(id='name', ctx=Load()), conversion=-1), Constant(value=' failed to load')])], keywords=[]), cause=Constant(value=None))])], orelse=[], finalbody=[])], decorator_list=[], returns=Name(id='CDLL', ctx=Load())), Assign(targets=[Name(id='Security', ctx=Store())], value=Call(func=Name(id='_load_cdll', ctx=Load()), args=[Constant(value='Security'), Constant(value='/System/Library/Frameworks/Security.framework/Security')], keywords=[])), Assign(targets=[Name(id='CoreFoundation', ctx=Store())], value=Call(func=Name(id='_load_cdll', ctx=Load()), args=[Constant(value='CoreFoundation'), Constant(value='/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation')], keywords=[])), Assign(targets=[Name(id='Boolean', ctx=Store())], value=Name(id='c_bool', ctx=Load())), Assign(targets=[Name(id='CFIndex', ctx=Store())], value=Name(id='c_long', ctx=Load())), Assign(targets=[Name(id='CFStringEncoding', ctx=Store())], value=Name(id='c_uint32', ctx=Load())), Assign(targets=[Name(id='CFData', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='CFString', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='CFArray', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='CFMutableArray', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='CFError', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='CFType', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='CFTypeID', ctx=Store())], value=Name(id='c_ulong', ctx=Load())), Assign(targets=[Name(id='CFTypeRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='CFType', ctx=Load())], keywords=[])), Assign(targets=[Name(id='CFAllocatorRef', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='OSStatus', ctx=Store())], value=Name(id='c_int32', ctx=Load())), Assign(targets=[Name(id='CFErrorRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='CFError', ctx=Load())], keywords=[])), Assign(targets=[Name(id='CFDataRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='CFData', ctx=Load())], keywords=[])), Assign(targets=[Name(id='CFStringRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='CFString', ctx=Load())], keywords=[])), Assign(targets=[Name(id='CFArrayRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='CFArray', ctx=Load())], keywords=[])), Assign(targets=[Name(id='CFMutableArrayRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='CFMutableArray', ctx=Load())], keywords=[])), Assign(targets=[Name(id='CFArrayCallBacks', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='CFOptionFlags', ctx=Store())], value=Name(id='c_uint32', ctx=Load())), Assign(targets=[Name(id='SecCertificateRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='c_void_p', ctx=Load())], keywords=[])), Assign(targets=[Name(id='SecPolicyRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='c_void_p', ctx=Load())], keywords=[])), Assign(targets=[Name(id='SecTrustRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='c_void_p', ctx=Load())], keywords=[])), Assign(targets=[Name(id='SecTrustResultType', ctx=Store())], value=Name(id='c_uint32', ctx=Load())), Assign(targets=[Name(id='SecTrustOptionFlags', ctx=Store())], value=Name(id='c_uint32', ctx=Load())), Try(body=[Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecCertificateCreateWithData', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFAllocatorRef', ctx=Load()), Name(id='CFDataRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecCertificateCreateWithData', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='SecCertificateRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecCertificateCopyData', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SecCertificateRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecCertificateCopyData', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFDataRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecCopyErrorMessageString', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='OSStatus', ctx=Load()), Name(id='c_void_p', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecCopyErrorMessageString', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFStringRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustSetAnchorCertificates', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SecTrustRef', ctx=Load()), Name(id='CFArrayRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustSetAnchorCertificates', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustSetAnchorCertificatesOnly', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SecTrustRef', ctx=Load()), Name(id='Boolean', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustSetAnchorCertificatesOnly', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustEvaluate', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SecTrustRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='SecTrustResultType', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustEvaluate', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecPolicyCreateRevocation', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFOptionFlags', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecPolicyCreateRevocation', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='SecPolicyRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecPolicyCreateSSL', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='Boolean', ctx=Load()), Name(id='CFStringRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecPolicyCreateSSL', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='SecPolicyRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustCreateWithCertificates', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFTypeRef', ctx=Load()), Name(id='CFTypeRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='SecTrustRef', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustCreateWithCertificates', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustGetTrustResult', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SecTrustRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='SecTrustResultType', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustGetTrustResult', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustRef', ctx=Store())], value=Name(id='SecTrustRef', ctx=Load())), Assign(targets=[Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustResultType', ctx=Store())], value=Name(id='SecTrustResultType', ctx=Load())), Assign(targets=[Attribute(value=Name(id='Security', ctx=Load()), attr='OSStatus', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Name(id='kSecRevocationUseAnyAvailableMethod', ctx=Store())], value=Constant(value=3)), Assign(targets=[Name(id='kSecRevocationRequirePositiveResponse', ctx=Store())], value=Constant(value=8)), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFRelease', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFTypeRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFRelease', ctx=Load()), attr='restype', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFGetTypeID', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFTypeRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFGetTypeID', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFTypeID', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFStringCreateWithCString', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFAllocatorRef', ctx=Load()), Name(id='c_char_p', ctx=Load()), Name(id='CFStringEncoding', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFStringCreateWithCString', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFStringRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFStringGetCStringPtr', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFStringRef', ctx=Load()), Name(id='CFStringEncoding', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFStringGetCStringPtr', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='c_char_p', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFStringGetCString', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFStringRef', ctx=Load()), Name(id='c_char_p', ctx=Load()), Name(id='CFIndex', ctx=Load()), Name(id='CFStringEncoding', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFStringGetCString', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='c_bool', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFDataCreate', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFAllocatorRef', ctx=Load()), Name(id='c_char_p', ctx=Load()), Name(id='CFIndex', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFDataCreate', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFDataRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFDataGetLength', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFDataRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFDataGetLength', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFIndex', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFDataGetBytePtr', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFDataRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFDataGetBytePtr', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayCreate', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFAllocatorRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='CFTypeRef', ctx=Load())], keywords=[]), Name(id='CFIndex', ctx=Load()), Name(id='CFArrayCallBacks', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayCreate', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFArrayRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayCreateMutable', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFAllocatorRef', ctx=Load()), Name(id='CFIndex', ctx=Load()), Name(id='CFArrayCallBacks', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayCreateMutable', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFMutableArrayRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayAppendValue', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFMutableArrayRef', ctx=Load()), Name(id='c_void_p', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayAppendValue', ctx=Load()), attr='restype', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayGetCount', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFArrayRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayGetCount', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFIndex', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayGetValueAtIndex', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFArrayRef', ctx=Load()), Name(id='CFIndex', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayGetValueAtIndex', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFErrorGetCode', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFErrorRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFErrorGetCode', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFIndex', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFErrorCopyDescription', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFErrorRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFErrorCopyDescription', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFStringRef', ctx=Load())), Assign(targets=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='kCFAllocatorDefault', ctx=Store())], value=Call(func=Attribute(value=Name(id='CFAllocatorRef', ctx=Load()), attr='in_dll', ctx=Load()), args=[Name(id='CoreFoundation', ctx=Load()), Constant(value='kCFAllocatorDefault')], keywords=[])), Assign(targets=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='kCFTypeArrayCallBacks', ctx=Store())], value=Call(func=Attribute(value=Name(id='c_void_p', ctx=Load()), attr='in_dll', ctx=Load()), args=[Name(id='CoreFoundation', ctx=Load()), Constant(value='kCFTypeArrayCallBacks')], keywords=[])), Assign(targets=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFTypeRef', ctx=Store())], value=Name(id='CFTypeRef', ctx=Load())), Assign(targets=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayRef', ctx=Store())], value=Name(id='CFArrayRef', ctx=Load())), Assign(targets=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFStringRef', ctx=Store())], value=Name(id='CFStringRef', ctx=Load())), Assign(targets=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFErrorRef', ctx=Store())], value=Name(id='CFErrorRef', ctx=Load()))], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[Raise(exc=Call(func=Name(id='ImportError', ctx=Load()), args=[Constant(value='Error initializing ctypes')], keywords=[]), cause=Constant(value=None))])], orelse=[], finalbody=[]), FunctionDef(name='_handle_osstatus', args=arguments(posonlyargs=[], args=[arg(arg='result', annotation=Name(id='OSStatus', ctx=Load())), arg(arg='_', annotation=Attribute(value=Name(id='typing', ctx=Load()), attr='Any', ctx=Load())), arg(arg='args', annotation=Attribute(value=Name(id='typing', ctx=Load()), attr='Any', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Raises an error if the OSStatus value is non-zero.\n    ')), If(test=Compare(left=Call(func=Name(id='int', ctx=Load()), args=[Name(id='result', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=0)]), body=[Return(value=Name(id='args', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='error_message_cfstring', ctx=Store())], value=Constant(value=None)), Try(body=[Assign(targets=[Name(id='error_message_cfstring', ctx=Store())], value=Call(func=Attribute(value=Name(id='Security', ctx=Load()), attr='SecCopyErrorMessageString', ctx=Load()), args=[Name(id='result', ctx=Load()), Constant(value=None)], keywords=[])), Assign(targets=[Name(id='error_message_cfstring_c_void_p', ctx=Store())], value=Call(func=Attribute(value=Name(id='ctypes', ctx=Load()), attr='cast', ctx=Load()), args=[Name(id='error_message_cfstring', ctx=Load()), Call(func=Attribute(value=Name(id='ctypes', ctx=Load()), attr='POINTER', ctx=Load()), args=[Attribute(value=Name(id='ctypes', ctx=Load()), attr='c_void_p', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='message', ctx=Store())], value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFStringGetCStringPtr', ctx=Load()), args=[Name(id='error_message_cfstring_c_void_p', ctx=Load()), Attribute(value=Name(id='CFConst', ctx=Load()), attr='kCFStringEncodingUTF8', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='message', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='buffer', ctx=Store())], value=Call(func=Attribute(value=Name(id='ctypes', ctx=Load()), attr='create_string_buffer', ctx=Load()), args=[Constant(value=1024)], keywords=[])), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFStringGetCString', ctx=Load()), args=[Name(id='error_message_cfstring_c_void_p', ctx=Load()), Name(id='buffer', ctx=Load()), Constant(value=1024), Attribute(value=Name(id='CFConst', ctx=Load()), attr='kCFStringEncodingUTF8', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='result', ctx=Load())), body=[Raise(exc=Call(func=Name(id='OSError', ctx=Load()), args=[Constant(value='Error copying C string from CFStringRef')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='message', ctx=Store())], value=Attribute(value=Name(id='buffer', ctx=Load()), attr='value', ctx=Load()))], orelse=[])], handlers=[], orelse=[], finalbody=[If(test=Compare(left=Name(id='error_message_cfstring', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFRelease', ctx=Load()), args=[Name(id='error_message_cfstring', ctx=Load())], keywords=[]))], orelse=[])]), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='message', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Name(id='message', ctx=Load()), ops=[Eq()], comparators=[Constant(value='')])]), body=[Assign(targets=[Name(id='message', ctx=Store())], value=JoinedStr(values=[Constant(value='SecureTransport operation returned a non-zero OSStatus: '), FormattedValue(value=Name(id='result', ctx=Load()), conversion=-1)]))], orelse=[]), Raise(exc=Call(func=Attribute(value=Name(id='ssl', ctx=Load()), attr='SSLError', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[]))], decorator_list=[], returns=Attribute(value=Name(id='typing', ctx=Load()), attr='Any', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustCreateWithCertificates', ctx=Load()), attr='errcheck', ctx=Store())], value=Name(id='_handle_osstatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustSetAnchorCertificates', ctx=Load()), attr='errcheck', ctx=Store())], value=Name(id='_handle_osstatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustGetTrustResult', ctx=Load()), attr='errcheck', ctx=Store())], value=Name(id='_handle_osstatus', ctx=Load())), ClassDef(name='CFConst', bases=[], keywords=[], body=[Expr(value=Constant(value='CoreFoundation constants')), Assign(targets=[Name(id='kCFStringEncodingUTF8', ctx=Store())], value=Call(func=Name(id='CFStringEncoding', ctx=Load()), args=[Constant(value=134217984)], keywords=[])), Assign(targets=[Name(id='errSecIncompleteCertRevocationCheck', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=67635))), Assign(targets=[Name(id='errSecHostNameMismatch', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=67602))), Assign(targets=[Name(id='errSecCertificateExpired', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=67818))), Assign(targets=[Name(id='errSecNotTrusted', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=67843)))], decorator_list=[]), FunctionDef(name='_bytes_to_cf_data_ref', args=arguments(posonlyargs=[], args=[arg(arg='value', annotation=Name(id='bytes', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFDataCreate', ctx=Load()), args=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='kCFAllocatorDefault', ctx=Load()), Name(id='value', ctx=Load()), Call(func=Name(id='len', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[], returns=Name(id='CFDataRef', ctx=Load())), FunctionDef(name='_bytes_to_cf_string', args=arguments(posonlyargs=[], args=[arg(arg='value', annotation=Name(id='bytes', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Given a Python binary data, create a CFString.\n    The string must be CFReleased by the caller.\n    ')), Assign(targets=[Name(id='c_str', ctx=Store())], value=Call(func=Attribute(value=Name(id='ctypes', ctx=Load()), attr='c_char_p', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cf_str', ctx=Store())], value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFStringCreateWithCString', ctx=Load()), args=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='kCFAllocatorDefault', ctx=Load()), Name(id='c_str', ctx=Load()), Attribute(value=Name(id='CFConst', ctx=Load()), attr='kCFStringEncodingUTF8', ctx=Load())], keywords=[])), Return(value=Name(id='cf_str', ctx=Load()))], decorator_list=[], returns=Name(id='CFString', ctx=Load())), FunctionDef(name='_cf_string_ref_to_str', args=arguments(posonlyargs=[], args=[arg(arg='cf_string_ref', annotation=Name(id='CFStringRef', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Creates a Unicode string from a CFString object. Used entirely for error\n    reporting.\n    Yes, it annoys me quite a lot that this function is this complex.\n    ')), Assign(targets=[Name(id='string', ctx=Store())], value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFStringGetCStringPtr', ctx=Load()), args=[Name(id='cf_string_ref', ctx=Load()), Attribute(value=Name(id='CFConst', ctx=Load()), attr='kCFStringEncodingUTF8', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='string', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='buffer', ctx=Store())], value=Call(func=Attribute(value=Name(id='ctypes', ctx=Load()), attr='create_string_buffer', ctx=Load()), args=[Constant(value=1024)], keywords=[])), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFStringGetCString', ctx=Load()), args=[Name(id='cf_string_ref', ctx=Load()), Name(id='buffer', ctx=Load()), Constant(value=1024), Attribute(value=Name(id='CFConst', ctx=Load()), attr='kCFStringEncodingUTF8', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='result', ctx=Load())), body=[Raise(exc=Call(func=Name(id='OSError', ctx=Load()), args=[Constant(value='Error copying C string from CFStringRef')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='string', ctx=Store())], value=Attribute(value=Name(id='buffer', ctx=Load()), attr='value', ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='string', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='string', ctx=Store())], value=Call(func=Attribute(value=Name(id='string', ctx=Load()), attr='decode', ctx=Load()), args=[Constant(value='utf-8')], keywords=[]))], orelse=[]), Return(value=Name(id='string', ctx=Load()))], decorator_list=[], returns=BinOp(left=Name(id='str', ctx=Load()), op=BitOr(), right=Constant(value=None))), FunctionDef(name='_der_certs_to_cf_cert_array', args=arguments(posonlyargs=[], args=[arg(arg='certs', annotation=Subscript(value=Name(id='list', ctx=Load()), slice=Name(id='bytes', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Builds a CFArray of SecCertificateRefs from a list of DER-encoded certificates.\n    Responsibility of the caller to call CoreFoundation.CFRelease on the CFArray.\n    ')), Assign(targets=[Name(id='cf_array', ctx=Store())], value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayCreateMutable', ctx=Load()), args=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='kCFAllocatorDefault', ctx=Load()), Constant(value=0), Call(func=Attribute(value=Name(id='ctypes', ctx=Load()), attr='byref', ctx=Load()), args=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='kCFTypeArrayCallBacks', ctx=Load())], keywords=[])], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='cf_array', ctx=Load())), body=[Raise(exc=Call(func=Name(id='MemoryError', ctx=Load()), args=[Constant(value='Unable to allocate memory!')], keywords=[]))], orelse=[]), For(target=Name(id='cert_data', ctx=Store()), iter=Name(id='certs', ctx=Load()), body=[Assign(targets=[Name(id='cf_data', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='sec_cert_ref', ctx=Store())], value=Constant(value=None)), Try(body=[Assign(targets=[Name(id='cf_data', ctx=Store())], value=Call(func=Name(id='_bytes_to_cf_data_ref', ctx=Load()), args=[Name(id='cert_data', ctx=Load())], keywords=[])), Assign(targets=[Name(id='sec_cert_ref', ctx=Store())], value=Call(func=Attribute(value=Name(id='Security', ctx=Load()), attr='SecCertificateCreateWithData', ctx=Load()), args=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='kCFAllocatorDefault', ctx=Load()), Name(id='cf_data', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayAppendValue', ctx=Load()), args=[Name(id='cf_array', ctx=Load()), Name(id='sec_cert_ref', ctx=Load())], keywords=[]))], handlers=[], orelse=[], finalbody=[If(test=Name(id='cf_data', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFRelease', ctx=Load()), args=[Name(id='cf_data', ctx=Load())], keywords=[]))], orelse=[]), If(test=Name(id='sec_cert_ref', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFRelease', ctx=Load()), args=[Name(id='sec_cert_ref', ctx=Load())], keywords=[]))], orelse=[])])], orelse=[]), Return(value=Name(id='cf_array', ctx=Load()))], decorator_list=[], returns=Name(id='CFMutableArrayRef', ctx=Load())), FunctionDef(name='_configure_context', args=arguments(posonlyargs=[], args=[arg(arg='ctx', annotation=Attribute(value=Name(id='ssl', ctx=Load()), attr='SSLContext', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='check_hostname', ctx=Store())], value=Attribute(value=Name(id='ctx', ctx=Load()), attr='check_hostname', ctx=Load())), Assign(targets=[Name(id='verify_mode', ctx=Store())], value=Attribute(value=Name(id='ctx', ctx=Load()), attr='verify_mode', ctx=Load())), Assign(targets=[Attribute(value=Name(id='ctx', ctx=Load()), attr='check_hostname', ctx=Store())], value=Constant(value=False)), Expr(value=Call(func=Name(id='_set_ssl_context_verify_mode', ctx=Load()), args=[Name(id='ctx', ctx=Load()), Attribute(value=Name(id='ssl', ctx=Load()), attr='CERT_NONE', ctx=Load())], keywords=[])), Try(body=[Expr(value=Yield())], handlers=[], orelse=[], finalbody=[Assign(targets=[Attribute(value=Name(id='ctx', ctx=Load()), attr='check_hostname', ctx=Store())], value=Name(id='check_hostname', ctx=Load())), Expr(value=Call(func=Name(id='_set_ssl_context_verify_mode', ctx=Load()), args=[Name(id='ctx', ctx=Load()), Name(id='verify_mode', ctx=Load())], keywords=[]))])], decorator_list=[Attribute(value=Name(id='contextlib', ctx=Load()), attr='contextmanager', ctx=Load())], returns=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Iterator', ctx=Load()), slice=Constant(value=None), ctx=Load())), FunctionDef(name='_verify_peercerts_impl', args=arguments(posonlyargs=[], args=[arg(arg='ssl_context', annotation=Attribute(value=Name(id='ssl', ctx=Load()), attr='SSLContext', ctx=Load())), arg(arg='cert_chain', annotation=Subscript(value=Name(id='list', ctx=Load()), slice=Name(id='bytes', ctx=Load()), ctx=Load())), arg(arg='server_hostname', annotation=BinOp(left=Name(id='str', ctx=Load()), op=BitOr(), right=Constant(value=None)))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='certs', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='policies', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='trust', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='cf_error', ctx=Store())], value=Constant(value=None)), Try(body=[If(test=Compare(left=Name(id='server_hostname', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='cf_str_hostname', ctx=Store())], value=Constant(value=None)), Try(body=[Assign(targets=[Name(id='cf_str_hostname', ctx=Store())], value=Call(func=Name(id='_bytes_to_cf_string', ctx=Load()), args=[Call(func=Attribute(value=Name(id='server_hostname', ctx=Load()), attr='encode', ctx=Load()), args=[Constant(value='ascii')], keywords=[])], keywords=[])), Assign(targets=[Name(id='ssl_policy', ctx=Store())], value=Call(func=Attribute(value=Name(id='Security', ctx=Load()), attr='SecPolicyCreateSSL', ctx=Load()), args=[Constant(value=True), Name(id='cf_str_hostname', ctx=Load())], keywords=[]))], handlers=[], orelse=[], finalbody=[If(test=Name(id='cf_str_hostname', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFRelease', ctx=Load()), args=[Name(id='cf_str_hostname', ctx=Load())], keywords=[]))], orelse=[])])], orelse=[Assign(targets=[Name(id='ssl_policy', ctx=Store())], value=Call(func=Attribute(value=Name(id='Security', ctx=Load()), attr='SecPolicyCreateSSL', ctx=Load()), args=[Constant(value=True), Constant(value=None)], keywords=[]))]), Assign(targets=[Name(id='policies', ctx=Store())], value=Name(id='ssl_policy', ctx=Load())), If(test=BinOp(left=Attribute(value=Name(id='ssl_context', ctx=Load()), attr='verify_flags', ctx=Load()), op=BitAnd(), right=Attribute(value=Name(id='ssl', ctx=Load()), attr='VERIFY_CRL_CHECK_CHAIN', ctx=Load())), body=[Assign(targets=[Name(id='policies', ctx=Store())], value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayCreateMutable', ctx=Load()), args=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='kCFAllocatorDefault', ctx=Load()), Constant(value=0), Call(func=Attribute(value=Name(id='ctypes', ctx=Load()), attr='byref', ctx=Load()), args=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='kCFTypeArrayCallBacks', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayAppendValue', ctx=Load()), args=[Name(id='policies', ctx=Load()), Name(id='ssl_policy', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFRelease', ctx=Load()), args=[Name(id='ssl_policy', ctx=Load())], keywords=[])), Assign(targets=[Name(id='revocation_policy', ctx=Store())], value=Call(func=Attribute(value=Name(id='Security', ctx=Load()), attr='SecPolicyCreateRevocation', ctx=Load()), args=[BinOp(left=Name(id='kSecRevocationUseAnyAvailableMethod', ctx=Load()), op=BitOr(), right=Name(id='kSecRevocationRequirePositiveResponse', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayAppendValue', ctx=Load()), args=[Name(id='policies', ctx=Load()), Name(id='revocation_policy', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFRelease', ctx=Load()), args=[Name(id='revocation_policy', ctx=Load())], keywords=[]))], orelse=[If(test=BinOp(left=Attribute(value=Name(id='ssl_context', ctx=Load()), attr='verify_flags', ctx=Load()), op=BitAnd(), right=Attribute(value=Name(id='ssl', ctx=Load()), attr='VERIFY_CRL_CHECK_LEAF', ctx=Load())), body=[Raise(exc=Call(func=Name(id='NotImplementedError', ctx=Load()), args=[Constant(value='VERIFY_CRL_CHECK_LEAF not implemented for macOS')], keywords=[]))], orelse=[])]), Assign(targets=[Name(id='certs', ctx=Store())], value=Constant(value=None)), Try(body=[Assign(targets=[Name(id='certs', ctx=Store())], value=Call(func=Name(id='_der_certs_to_cf_cert_array', ctx=Load()), args=[Name(id='cert_chain', ctx=Load())], keywords=[])), Assign(targets=[Name(id='trust', ctx=Store())], value=Call(func=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustRef', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustCreateWithCertificates', ctx=Load()), args=[Name(id='certs', ctx=Load()), Name(id='policies', ctx=Load()), Call(func=Attribute(value=Name(id='ctypes', ctx=Load()), attr='byref', ctx=Load()), args=[Name(id='trust', ctx=Load())], keywords=[])], keywords=[]))], handlers=[], orelse=[], finalbody=[If(test=Name(id='certs', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFRelease', ctx=Load()), args=[Name(id='certs', ctx=Load())], keywords=[]))], orelse=[])]), AnnAssign(target=Name(id='ctx_ca_certs_der', ctx=Store()), annotation=BinOp(left=Subscript(value=Name(id='list', ctx=Load()), slice=Name(id='bytes', ctx=Load()), ctx=Load()), op=BitOr(), right=Constant(value=None)), value=Call(func=Attribute(value=Name(id='ssl_context', ctx=Load()), attr='get_ca_certs', ctx=Load()), args=[], keywords=[keyword(arg='binary_form', value=Constant(value=True))]), simple=1), If(test=Name(id='ctx_ca_certs_der', ctx=Load()), body=[Assign(targets=[Name(id='ctx_ca_certs', ctx=Store())], value=Constant(value=None)), Try(body=[Assign(targets=[Name(id='ctx_ca_certs', ctx=Store())], value=Call(func=Name(id='_der_certs_to_cf_cert_array', ctx=Load()), args=[Name(id='cert_chain', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustSetAnchorCertificates', ctx=Load()), args=[Name(id='trust', ctx=Load()), Name(id='ctx_ca_certs', ctx=Load())], keywords=[]))], handlers=[], orelse=[], finalbody=[If(test=Name(id='ctx_ca_certs', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFRelease', ctx=Load()), args=[Name(id='ctx_ca_certs', ctx=Load())], keywords=[]))], orelse=[])])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustSetAnchorCertificates', ctx=Load()), args=[Name(id='trust', ctx=Load()), Constant(value=None)], keywords=[]))]), Assign(targets=[Name(id='cf_error', ctx=Store())], value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFErrorRef', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='sec_trust_eval_result', ctx=Store())], value=Call(func=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustEvaluateWithError', ctx=Load()), args=[Name(id='trust', ctx=Load()), Call(func=Attribute(value=Name(id='ctypes', ctx=Load()), attr='byref', ctx=Load()), args=[Name(id='cf_error', ctx=Load())], keywords=[])], keywords=[])), If(test=Compare(left=Name(id='sec_trust_eval_result', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)]), body=[Assign(targets=[Name(id='is_trusted', ctx=Store())], value=Constant(value=True))], orelse=[If(test=Compare(left=Name(id='sec_trust_eval_result', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Assign(targets=[Name(id='is_trusted', ctx=Store())], value=Constant(value=False))], orelse=[Raise(exc=Call(func=Attribute(value=Name(id='ssl', ctx=Load()), attr='SSLError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Unknown result from Security.SecTrustEvaluateWithError: '), FormattedValue(value=Name(id='sec_trust_eval_result', ctx=Load()), conversion=114)])], keywords=[]))])]), Assign(targets=[Name(id='cf_error_code', ctx=Store())], value=Constant(value=0)), If(test=UnaryOp(op=Not(), operand=Name(id='is_trusted', ctx=Load())), body=[Assign(targets=[Name(id='cf_error_code', ctx=Store())], value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFErrorGetCode', ctx=Load()), args=[Name(id='cf_error', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='ssl_context', ctx=Load()), attr='verify_mode', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='ssl', ctx=Load()), attr='CERT_REQUIRED', ctx=Load())]), BoolOp(op=Or(), values=[Compare(left=Name(id='cf_error_code', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='CFConst', ctx=Load()), attr='errSecNotTrusted', ctx=Load())]), Compare(left=Name(id='cf_error_code', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='CFConst', ctx=Load()), attr='errSecCertificateExpired', ctx=Load())])])]), body=[Assign(targets=[Name(id='is_trusted', ctx=Store())], value=Constant(value=True))], orelse=[If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='ssl_context', ctx=Load()), attr='check_hostname', ctx=Load())), Compare(left=Name(id='cf_error_code', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='CFConst', ctx=Load()), attr='errSecHostNameMismatch', ctx=Load())])]), body=[Assign(targets=[Name(id='is_trusted', ctx=Store())], value=Constant(value=True))], orelse=[])])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='is_trusted', ctx=Load())), body=[Assign(targets=[Name(id='cf_error_string_ref', ctx=Store())], value=Constant(value=None)), Try(body=[Assign(targets=[Name(id='cf_error_string_ref', ctx=Store())], value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFErrorCopyDescription', ctx=Load()), args=[Name(id='cf_error', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cf_error_message', ctx=Store())], value=BoolOp(op=Or(), values=[Call(func=Name(id='_cf_string_ref_to_str', ctx=Load()), args=[Name(id='cf_error_string_ref', ctx=Load())], keywords=[]), Constant(value='Certificate verification failed')])), Assign(targets=[Name(id='sec_trust_result_type', ctx=Store())], value=Call(func=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustResultType', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustGetTrustResult', ctx=Load()), args=[Name(id='trust', ctx=Load()), Call(func=Attribute(value=Name(id='ctypes', ctx=Load()), attr='byref', ctx=Load()), args=[Name(id='sec_trust_result_type', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='err', ctx=Store())], value=Call(func=Attribute(value=Name(id='ssl', ctx=Load()), attr='SSLCertVerificationError', ctx=Load()), args=[Name(id='cf_error_message', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='err', ctx=Load()), attr='verify_message', ctx=Store())], value=Name(id='cf_error_message', ctx=Load())), Assign(targets=[Attribute(value=Name(id='err', ctx=Load()), attr='verify_code', ctx=Store())], value=Name(id='cf_error_code', ctx=Load())), Raise(exc=Name(id='err', ctx=Load()))], handlers=[], orelse=[], finalbody=[If(test=Name(id='cf_error_string_ref', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFRelease', ctx=Load()), args=[Name(id='cf_error_string_ref', ctx=Load())], keywords=[]))], orelse=[])])], orelse=[])], handlers=[], orelse=[], finalbody=[If(test=Name(id='policies', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFRelease', ctx=Load()), args=[Name(id='policies', ctx=Load())], keywords=[]))], orelse=[]), If(test=Name(id='trust', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFRelease', ctx=Load()), args=[Name(id='trust', ctx=Load())], keywords=[]))], orelse=[])])], decorator_list=[], returns=Constant(value=None))], type_ignores=[])