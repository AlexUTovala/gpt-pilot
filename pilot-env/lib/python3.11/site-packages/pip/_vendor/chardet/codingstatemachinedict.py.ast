Module(body=[ImportFrom(module='typing', names=[alias(name='TYPE_CHECKING'), alias(name='Tuple')], level=0), If(test=Name(id='TYPE_CHECKING', ctx=Load()), body=[ImportFrom(module='typing', names=[alias(name='TypedDict')], level=0), ClassDef(name='CodingStateMachineDict', bases=[Name(id='TypedDict', ctx=Load())], keywords=[keyword(arg='total', value=Constant(value=False))], body=[AnnAssign(target=Name(id='class_table', ctx=Store()), annotation=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='int', ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load()), simple=1), AnnAssign(target=Name(id='class_factor', ctx=Store()), annotation=Name(id='int', ctx=Load()), simple=1), AnnAssign(target=Name(id='state_table', ctx=Store()), annotation=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='int', ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load()), simple=1), AnnAssign(target=Name(id='char_len_table', ctx=Store()), annotation=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='int', ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load()), simple=1), AnnAssign(target=Name(id='name', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1), AnnAssign(target=Name(id='language', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1)], decorator_list=[])], orelse=[Assign(targets=[Name(id='CodingStateMachineDict', ctx=Store())], value=Name(id='dict', ctx=Load()))])], type_ignores=[])