Module(body=[Expr(value=Constant(value='\nAll of the Enums that are used throughout the chardet package.\n\n:author: Dan Blanchard (dan.blanchard@gmail.com)\n')), ImportFrom(module='enum', names=[alias(name='Enum'), alias(name='Flag')], level=0), ClassDef(name='InputState', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    This enum represents the different states a universal detector can be in.\n    ')), Assign(targets=[Name(id='PURE_ASCII', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='ESC_ASCII', ctx=Store())], value=Constant(value=1)), Assign(targets=[Name(id='HIGH_BYTE', ctx=Store())], value=Constant(value=2))], decorator_list=[]), ClassDef(name='LanguageFilter', bases=[Name(id='Flag', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    This enum represents the different language filters we can apply to a\n    ``UniversalDetector``.\n    ')), Assign(targets=[Name(id='NONE', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='CHINESE_SIMPLIFIED', ctx=Store())], value=Constant(value=1)), Assign(targets=[Name(id='CHINESE_TRADITIONAL', ctx=Store())], value=Constant(value=2)), Assign(targets=[Name(id='JAPANESE', ctx=Store())], value=Constant(value=4)), Assign(targets=[Name(id='KOREAN', ctx=Store())], value=Constant(value=8)), Assign(targets=[Name(id='NON_CJK', ctx=Store())], value=Constant(value=16)), Assign(targets=[Name(id='ALL', ctx=Store())], value=Constant(value=31)), Assign(targets=[Name(id='CHINESE', ctx=Store())], value=BinOp(left=Name(id='CHINESE_SIMPLIFIED', ctx=Load()), op=BitOr(), right=Name(id='CHINESE_TRADITIONAL', ctx=Load()))), Assign(targets=[Name(id='CJK', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='CHINESE', ctx=Load()), op=BitOr(), right=Name(id='JAPANESE', ctx=Load())), op=BitOr(), right=Name(id='KOREAN', ctx=Load())))], decorator_list=[]), ClassDef(name='ProbingState', bases=[Name(id='Enum', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    This enum represents the different states a prober can be in.\n    ')), Assign(targets=[Name(id='DETECTING', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='FOUND_IT', ctx=Store())], value=Constant(value=1)), Assign(targets=[Name(id='NOT_ME', ctx=Store())], value=Constant(value=2))], decorator_list=[]), ClassDef(name='MachineState', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    This enum represents the different states a state machine can be in.\n    ')), Assign(targets=[Name(id='START', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='ERROR', ctx=Store())], value=Constant(value=1)), Assign(targets=[Name(id='ITS_ME', ctx=Store())], value=Constant(value=2))], decorator_list=[]), ClassDef(name='SequenceLikelihood', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    This enum represents the likelihood of a character following the previous one.\n    ')), Assign(targets=[Name(id='NEGATIVE', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='UNLIKELY', ctx=Store())], value=Constant(value=1)), Assign(targets=[Name(id='LIKELY', ctx=Store())], value=Constant(value=2)), Assign(targets=[Name(id='POSITIVE', ctx=Store())], value=Constant(value=3)), FunctionDef(name='get_num_categories', args=arguments(posonlyargs=[], args=[arg(arg='cls')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=':returns: The number of likelihood categories in the enum.')), Return(value=Constant(value=4))], decorator_list=[Name(id='classmethod', ctx=Load())], returns=Name(id='int', ctx=Load()))], decorator_list=[]), ClassDef(name='CharacterCategory', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    This enum represents the different categories language models for\n    ``SingleByteCharsetProber`` put characters into.\n\n    Anything less than CONTROL is considered a letter.\n    ')), Assign(targets=[Name(id='UNDEFINED', ctx=Store())], value=Constant(value=255)), Assign(targets=[Name(id='LINE_BREAK', ctx=Store())], value=Constant(value=254)), Assign(targets=[Name(id='SYMBOL', ctx=Store())], value=Constant(value=253)), Assign(targets=[Name(id='DIGIT', ctx=Store())], value=Constant(value=252)), Assign(targets=[Name(id='CONTROL', ctx=Store())], value=Constant(value=251))], decorator_list=[])], type_ignores=[])