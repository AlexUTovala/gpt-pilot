Module(body=[ImportFrom(module='typing', names=[alias(name='List'), alias(name='Union')], level=0), ImportFrom(module='charsetprober', names=[alias(name='CharSetProber')], level=1), ImportFrom(module='enums', names=[alias(name='ProbingState')], level=1), Assign(targets=[Name(id='FREQ_CAT_NUM', ctx=Store())], value=Constant(value=4)), Assign(targets=[Name(id='UDF', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='OTH', ctx=Store())], value=Constant(value=1)), Assign(targets=[Name(id='ASC', ctx=Store())], value=Constant(value=2)), Assign(targets=[Name(id='ASS', ctx=Store())], value=Constant(value=3)), Assign(targets=[Name(id='ACV', ctx=Store())], value=Constant(value=4)), Assign(targets=[Name(id='ACO', ctx=Store())], value=Constant(value=5)), Assign(targets=[Name(id='ASV', ctx=Store())], value=Constant(value=6)), Assign(targets=[Name(id='ASO', ctx=Store())], value=Constant(value=7)), Assign(targets=[Name(id='ODD', ctx=Store())], value=Constant(value=8)), Assign(targets=[Name(id='CLASS_NUM', ctx=Store())], value=Constant(value=9)), Assign(targets=[Name(id='MacRoman_CharToClass', ctx=Store())], value=Tuple(elts=[Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='ASC', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='ASS', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACO', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACO', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASO', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASO', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='ASO', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='ODD', ctx=Load()), Name(id='ODD', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='ODD', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='ODD', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='ODD', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ODD', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='OTH', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ODD', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ACV', ctx=Load()), Name(id='ASV', ctx=Load()), Name(id='ODD', ctx=Load()), Name(id='ODD', ctx=Load()), Name(id='ODD', ctx=Load()), Name(id='ODD', ctx=Load()), Name(id='ODD', ctx=Load()), Name(id='ODD', ctx=Load()), Name(id='ODD', ctx=Load()), Name(id='ODD', ctx=Load()), Name(id='ODD', ctx=Load()), Name(id='ODD', ctx=Load())], ctx=Load())), Assign(targets=[Name(id='MacRomanClassModel', ctx=Store())], value=Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=3), Constant(value=3), Constant(value=3), Constant(value=3), Constant(value=3), Constant(value=3), Constant(value=3), Constant(value=1), Constant(value=0), Constant(value=3), Constant(value=3), Constant(value=3), Constant(value=3), Constant(value=3), Constant(value=3), Constant(value=3), Constant(value=1), Constant(value=0), Constant(value=3), Constant(value=3), Constant(value=3), Constant(value=1), Constant(value=1), Constant(value=3), Constant(value=3), Constant(value=1), Constant(value=0), Constant(value=3), Constant(value=3), Constant(value=3), Constant(value=1), Constant(value=2), Constant(value=1), Constant(value=2), Constant(value=1), Constant(value=0), Constant(value=3), Constant(value=3), Constant(value=3), Constant(value=3), Constant(value=3), Constant(value=3), Constant(value=3), Constant(value=1), Constant(value=0), Constant(value=3), Constant(value=1), Constant(value=3), Constant(value=1), Constant(value=1), Constant(value=1), Constant(value=3), Constant(value=1), Constant(value=0), Constant(value=3), Constant(value=1), Constant(value=3), Constant(value=1), Constant(value=1), Constant(value=3), Constant(value=3), Constant(value=1), Constant(value=0), Constant(value=1), Constant(value=1), Constant(value=1), Constant(value=1), Constant(value=1), Constant(value=1), Constant(value=1), Constant(value=1)], ctx=Load())), ClassDef(name='MacRomanProber', bases=[Name(id='CharSetProber', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_last_char_class', ctx=Store())], value=Name(id='OTH', ctx=Load())), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_freq_counter', ctx=Store()), annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='int', ctx=Load()), ctx=Load()), value=List(elts=[], ctx=Load()), simple=0), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='reset', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_last_char_class', ctx=Store())], value=Name(id='OTH', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_freq_counter', ctx=Store())], value=BinOp(left=List(elts=[Constant(value=0)], ctx=Load()), op=Mult(), right=Name(id='FREQ_CAT_NUM', ctx=Load()))), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_freq_counter', ctx=Load()), slice=Constant(value=2), ctx=Store())], value=Constant(value=10)), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='reset', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='charset_name', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value='MacRoman'))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='language', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=''))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='feed', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='byte_str', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='bytes', ctx=Load()), Name(id='bytearray', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='byte_str', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='remove_xml_tags', ctx=Load()), args=[Name(id='byte_str', ctx=Load())], keywords=[])), For(target=Name(id='c', ctx=Store()), iter=Name(id='byte_str', ctx=Load()), body=[Assign(targets=[Name(id='char_class', ctx=Store())], value=Subscript(value=Name(id='MacRoman_CharToClass', ctx=Load()), slice=Name(id='c', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='freq', ctx=Store())], value=Subscript(value=Name(id='MacRomanClassModel', ctx=Load()), slice=BinOp(left=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='_last_char_class', ctx=Load()), op=Mult(), right=Name(id='CLASS_NUM', ctx=Load())), op=Add(), right=Name(id='char_class', ctx=Load())), ctx=Load())), If(test=Compare(left=Name(id='freq', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Store())], value=Attribute(value=Name(id='ProbingState', ctx=Load()), attr='NOT_ME', ctx=Load())), Break()], orelse=[]), AugAssign(target=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_freq_counter', ctx=Load()), slice=Name(id='freq', ctx=Load()), ctx=Store()), op=Add(), value=Constant(value=1)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_last_char_class', ctx=Store())], value=Name(id='char_class', ctx=Load()))], orelse=[]), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Load()))], decorator_list=[], returns=Name(id='ProbingState', ctx=Load())), FunctionDef(name='get_confidence', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='ProbingState', ctx=Load()), attr='NOT_ME', ctx=Load())]), body=[Return(value=Constant(value=0.01))], orelse=[]), Assign(targets=[Name(id='total', ctx=Store())], value=Call(func=Name(id='sum', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_freq_counter', ctx=Load())], keywords=[])), Assign(targets=[Name(id='confidence', ctx=Store())], value=IfExp(test=Compare(left=Name(id='total', ctx=Load()), ops=[Lt()], comparators=[Constant(value=0.01)]), body=Constant(value=0.0), orelse=BinOp(left=BinOp(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_freq_counter', ctx=Load()), slice=Constant(value=3), ctx=Load()), op=Sub(), right=BinOp(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_freq_counter', ctx=Load()), slice=Constant(value=1), ctx=Load()), op=Mult(), right=Constant(value=20.0))), op=Div(), right=Name(id='total', ctx=Load())))), Assign(targets=[Name(id='confidence', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Name(id='confidence', ctx=Load()), Constant(value=0.0)], keywords=[])), AugAssign(target=Name(id='confidence', ctx=Store()), op=Mult(), value=Constant(value=0.73)), Return(value=Name(id='confidence', ctx=Load()))], decorator_list=[], returns=Name(id='float', ctx=Load()))], decorator_list=[])], type_ignores=[])