Module(body=[ImportFrom(module='typing', names=[alias(name='Tuple'), alias(name='Union')], level=0), ImportFrom(module='big5freq', names=[alias(name='BIG5_CHAR_TO_FREQ_ORDER'), alias(name='BIG5_TABLE_SIZE'), alias(name='BIG5_TYPICAL_DISTRIBUTION_RATIO')], level=1), ImportFrom(module='euckrfreq', names=[alias(name='EUCKR_CHAR_TO_FREQ_ORDER'), alias(name='EUCKR_TABLE_SIZE'), alias(name='EUCKR_TYPICAL_DISTRIBUTION_RATIO')], level=1), ImportFrom(module='euctwfreq', names=[alias(name='EUCTW_CHAR_TO_FREQ_ORDER'), alias(name='EUCTW_TABLE_SIZE'), alias(name='EUCTW_TYPICAL_DISTRIBUTION_RATIO')], level=1), ImportFrom(module='gb2312freq', names=[alias(name='GB2312_CHAR_TO_FREQ_ORDER'), alias(name='GB2312_TABLE_SIZE'), alias(name='GB2312_TYPICAL_DISTRIBUTION_RATIO')], level=1), ImportFrom(module='jisfreq', names=[alias(name='JIS_CHAR_TO_FREQ_ORDER'), alias(name='JIS_TABLE_SIZE'), alias(name='JIS_TYPICAL_DISTRIBUTION_RATIO')], level=1), ImportFrom(module='johabfreq', names=[alias(name='JOHAB_TO_EUCKR_ORDER_TABLE')], level=1), ClassDef(name='CharDistributionAnalysis', bases=[], keywords=[], body=[Assign(targets=[Name(id='ENOUGH_DATA_THRESHOLD', ctx=Store())], value=Constant(value=1024)), Assign(targets=[Name(id='SURE_YES', ctx=Store())], value=Constant(value=0.99)), Assign(targets=[Name(id='SURE_NO', ctx=Store())], value=Constant(value=0.01)), Assign(targets=[Name(id='MINIMUM_DATA_THRESHOLD', ctx=Store())], value=Constant(value=3)), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_char_to_freq_order', ctx=Store()), annotation=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='int', ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load()), value=Call(func=Name(id='tuple', ctx=Load()), args=[], keywords=[]), simple=0), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_table_size', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='typical_distribution_ratio', ctx=Store())], value=Constant(value=0.0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_done', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_total_chars', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_freq_chars', ctx=Store())], value=Constant(value=0)), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='reset', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='reset analyser, clear any state')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_done', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_total_chars', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_freq_chars', ctx=Store())], value=Constant(value=0))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='feed', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='char', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='bytes', ctx=Load()), Name(id='bytearray', ctx=Load())], ctx=Load()), ctx=Load())), arg(arg='char_len', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='feed a character with known length')), If(test=Compare(left=Name(id='char_len', ctx=Load()), ops=[Eq()], comparators=[Constant(value=2)]), body=[Assign(targets=[Name(id='order', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_order', ctx=Load()), args=[Name(id='char', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='order', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=1)))]), If(test=Compare(left=Name(id='order', ctx=Load()), ops=[GtE()], comparators=[Constant(value=0)]), body=[AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_total_chars', ctx=Store()), op=Add(), value=Constant(value=1)), If(test=Compare(left=Name(id='order', ctx=Load()), ops=[Lt()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_table_size', ctx=Load())]), body=[If(test=Compare(left=Constant(value=512), ops=[Gt()], comparators=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_char_to_freq_order', ctx=Load()), slice=Name(id='order', ctx=Load()), ctx=Load())]), body=[AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_freq_chars', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[])], orelse=[])], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='get_confidence', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='return confidence based on existing data')), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_total_chars', ctx=Load()), ops=[LtE()], comparators=[Constant(value=0)]), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_freq_chars', ctx=Load()), ops=[LtE()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='MINIMUM_DATA_THRESHOLD', ctx=Load())])]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='SURE_NO', ctx=Load()))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_total_chars', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_freq_chars', ctx=Load())]), body=[Assign(targets=[Name(id='r', ctx=Store())], value=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='_freq_chars', ctx=Load()), op=Div(), right=BinOp(left=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='_total_chars', ctx=Load()), op=Sub(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_freq_chars', ctx=Load())), op=Mult(), right=Attribute(value=Name(id='self', ctx=Load()), attr='typical_distribution_ratio', ctx=Load())))), If(test=Compare(left=Name(id='r', ctx=Load()), ops=[Lt()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='SURE_YES', ctx=Load())]), body=[Return(value=Name(id='r', ctx=Load()))], orelse=[])], orelse=[]), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='SURE_YES', ctx=Load()))], decorator_list=[], returns=Name(id='float', ctx=Load())), FunctionDef(name='got_enough_data', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_total_chars', ctx=Load()), ops=[Gt()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='ENOUGH_DATA_THRESHOLD', ctx=Load())]))], decorator_list=[], returns=Name(id='bool', ctx=Load())), FunctionDef(name='get_order', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='_', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='bytes', ctx=Load()), Name(id='bytearray', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=UnaryOp(op=USub(), operand=Constant(value=1)))], decorator_list=[], returns=Name(id='int', ctx=Load()))], decorator_list=[]), ClassDef(name='EUCTWDistributionAnalysis', bases=[Name(id='CharDistributionAnalysis', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_char_to_freq_order', ctx=Store())], value=Name(id='EUCTW_CHAR_TO_FREQ_ORDER', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_table_size', ctx=Store())], value=Name(id='EUCTW_TABLE_SIZE', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='typical_distribution_ratio', ctx=Store())], value=Name(id='EUCTW_TYPICAL_DISTRIBUTION_RATIO', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='get_order', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='byte_str', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='bytes', ctx=Load()), Name(id='bytearray', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='first_char', ctx=Store())], value=Subscript(value=Name(id='byte_str', ctx=Load()), slice=Constant(value=0), ctx=Load())), If(test=Compare(left=Name(id='first_char', ctx=Load()), ops=[GtE()], comparators=[Constant(value=196)]), body=[Return(value=BinOp(left=BinOp(left=BinOp(left=Constant(value=94), op=Mult(), right=BinOp(left=Name(id='first_char', ctx=Load()), op=Sub(), right=Constant(value=196))), op=Add(), right=Subscript(value=Name(id='byte_str', ctx=Load()), slice=Constant(value=1), ctx=Load())), op=Sub(), right=Constant(value=161)))], orelse=[]), Return(value=UnaryOp(op=USub(), operand=Constant(value=1)))], decorator_list=[], returns=Name(id='int', ctx=Load()))], decorator_list=[]), ClassDef(name='EUCKRDistributionAnalysis', bases=[Name(id='CharDistributionAnalysis', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_char_to_freq_order', ctx=Store())], value=Name(id='EUCKR_CHAR_TO_FREQ_ORDER', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_table_size', ctx=Store())], value=Name(id='EUCKR_TABLE_SIZE', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='typical_distribution_ratio', ctx=Store())], value=Name(id='EUCKR_TYPICAL_DISTRIBUTION_RATIO', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='get_order', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='byte_str', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='bytes', ctx=Load()), Name(id='bytearray', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='first_char', ctx=Store())], value=Subscript(value=Name(id='byte_str', ctx=Load()), slice=Constant(value=0), ctx=Load())), If(test=Compare(left=Name(id='first_char', ctx=Load()), ops=[GtE()], comparators=[Constant(value=176)]), body=[Return(value=BinOp(left=BinOp(left=BinOp(left=Constant(value=94), op=Mult(), right=BinOp(left=Name(id='first_char', ctx=Load()), op=Sub(), right=Constant(value=176))), op=Add(), right=Subscript(value=Name(id='byte_str', ctx=Load()), slice=Constant(value=1), ctx=Load())), op=Sub(), right=Constant(value=161)))], orelse=[]), Return(value=UnaryOp(op=USub(), operand=Constant(value=1)))], decorator_list=[], returns=Name(id='int', ctx=Load()))], decorator_list=[]), ClassDef(name='JOHABDistributionAnalysis', bases=[Name(id='CharDistributionAnalysis', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_char_to_freq_order', ctx=Store())], value=Name(id='EUCKR_CHAR_TO_FREQ_ORDER', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_table_size', ctx=Store())], value=Name(id='EUCKR_TABLE_SIZE', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='typical_distribution_ratio', ctx=Store())], value=Name(id='EUCKR_TYPICAL_DISTRIBUTION_RATIO', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='get_order', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='byte_str', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='bytes', ctx=Load()), Name(id='bytearray', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='first_char', ctx=Store())], value=Subscript(value=Name(id='byte_str', ctx=Load()), slice=Constant(value=0), ctx=Load())), If(test=Compare(left=Constant(value=136), ops=[LtE(), Lt()], comparators=[Name(id='first_char', ctx=Load()), Constant(value=212)]), body=[Assign(targets=[Name(id='code', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='first_char', ctx=Load()), op=Mult(), right=Constant(value=256)), op=Add(), right=Subscript(value=Name(id='byte_str', ctx=Load()), slice=Constant(value=1), ctx=Load()))), Return(value=Call(func=Attribute(value=Name(id='JOHAB_TO_EUCKR_ORDER_TABLE', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='code', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]))], orelse=[]), Return(value=UnaryOp(op=USub(), operand=Constant(value=1)))], decorator_list=[], returns=Name(id='int', ctx=Load()))], decorator_list=[]), ClassDef(name='GB2312DistributionAnalysis', bases=[Name(id='CharDistributionAnalysis', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_char_to_freq_order', ctx=Store())], value=Name(id='GB2312_CHAR_TO_FREQ_ORDER', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_table_size', ctx=Store())], value=Name(id='GB2312_TABLE_SIZE', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='typical_distribution_ratio', ctx=Store())], value=Name(id='GB2312_TYPICAL_DISTRIBUTION_RATIO', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='get_order', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='byte_str', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='bytes', ctx=Load()), Name(id='bytearray', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='first_char', ctx=Store()), Name(id='second_char', ctx=Store())], ctx=Store())], value=Tuple(elts=[Subscript(value=Name(id='byte_str', ctx=Load()), slice=Constant(value=0), ctx=Load()), Subscript(value=Name(id='byte_str', ctx=Load()), slice=Constant(value=1), ctx=Load())], ctx=Load())), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='first_char', ctx=Load()), ops=[GtE()], comparators=[Constant(value=176)]), Compare(left=Name(id='second_char', ctx=Load()), ops=[GtE()], comparators=[Constant(value=161)])]), body=[Return(value=BinOp(left=BinOp(left=BinOp(left=Constant(value=94), op=Mult(), right=BinOp(left=Name(id='first_char', ctx=Load()), op=Sub(), right=Constant(value=176))), op=Add(), right=Name(id='second_char', ctx=Load())), op=Sub(), right=Constant(value=161)))], orelse=[]), Return(value=UnaryOp(op=USub(), operand=Constant(value=1)))], decorator_list=[], returns=Name(id='int', ctx=Load()))], decorator_list=[]), ClassDef(name='Big5DistributionAnalysis', bases=[Name(id='CharDistributionAnalysis', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_char_to_freq_order', ctx=Store())], value=Name(id='BIG5_CHAR_TO_FREQ_ORDER', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_table_size', ctx=Store())], value=Name(id='BIG5_TABLE_SIZE', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='typical_distribution_ratio', ctx=Store())], value=Name(id='BIG5_TYPICAL_DISTRIBUTION_RATIO', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='get_order', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='byte_str', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='bytes', ctx=Load()), Name(id='bytearray', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='first_char', ctx=Store()), Name(id='second_char', ctx=Store())], ctx=Store())], value=Tuple(elts=[Subscript(value=Name(id='byte_str', ctx=Load()), slice=Constant(value=0), ctx=Load()), Subscript(value=Name(id='byte_str', ctx=Load()), slice=Constant(value=1), ctx=Load())], ctx=Load())), If(test=Compare(left=Name(id='first_char', ctx=Load()), ops=[GtE()], comparators=[Constant(value=164)]), body=[If(test=Compare(left=Name(id='second_char', ctx=Load()), ops=[GtE()], comparators=[Constant(value=161)]), body=[Return(value=BinOp(left=BinOp(left=BinOp(left=BinOp(left=Constant(value=157), op=Mult(), right=BinOp(left=Name(id='first_char', ctx=Load()), op=Sub(), right=Constant(value=164))), op=Add(), right=Name(id='second_char', ctx=Load())), op=Sub(), right=Constant(value=161)), op=Add(), right=Constant(value=63)))], orelse=[]), Return(value=BinOp(left=BinOp(left=BinOp(left=Constant(value=157), op=Mult(), right=BinOp(left=Name(id='first_char', ctx=Load()), op=Sub(), right=Constant(value=164))), op=Add(), right=Name(id='second_char', ctx=Load())), op=Sub(), right=Constant(value=64)))], orelse=[]), Return(value=UnaryOp(op=USub(), operand=Constant(value=1)))], decorator_list=[], returns=Name(id='int', ctx=Load()))], decorator_list=[]), ClassDef(name='SJISDistributionAnalysis', bases=[Name(id='CharDistributionAnalysis', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_char_to_freq_order', ctx=Store())], value=Name(id='JIS_CHAR_TO_FREQ_ORDER', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_table_size', ctx=Store())], value=Name(id='JIS_TABLE_SIZE', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='typical_distribution_ratio', ctx=Store())], value=Name(id='JIS_TYPICAL_DISTRIBUTION_RATIO', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='get_order', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='byte_str', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='bytes', ctx=Load()), Name(id='bytearray', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='first_char', ctx=Store()), Name(id='second_char', ctx=Store())], ctx=Store())], value=Tuple(elts=[Subscript(value=Name(id='byte_str', ctx=Load()), slice=Constant(value=0), ctx=Load()), Subscript(value=Name(id='byte_str', ctx=Load()), slice=Constant(value=1), ctx=Load())], ctx=Load())), If(test=Compare(left=Constant(value=129), ops=[LtE(), LtE()], comparators=[Name(id='first_char', ctx=Load()), Constant(value=159)]), body=[Assign(targets=[Name(id='order', ctx=Store())], value=BinOp(left=Constant(value=188), op=Mult(), right=BinOp(left=Name(id='first_char', ctx=Load()), op=Sub(), right=Constant(value=129))))], orelse=[If(test=Compare(left=Constant(value=224), ops=[LtE(), LtE()], comparators=[Name(id='first_char', ctx=Load()), Constant(value=239)]), body=[Assign(targets=[Name(id='order', ctx=Store())], value=BinOp(left=Constant(value=188), op=Mult(), right=BinOp(left=BinOp(left=Name(id='first_char', ctx=Load()), op=Sub(), right=Constant(value=224)), op=Add(), right=Constant(value=31))))], orelse=[Return(value=UnaryOp(op=USub(), operand=Constant(value=1)))])]), Assign(targets=[Name(id='order', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='order', ctx=Load()), op=Add(), right=Name(id='second_char', ctx=Load())), op=Sub(), right=Constant(value=64))), If(test=Compare(left=Name(id='second_char', ctx=Load()), ops=[Gt()], comparators=[Constant(value=127)]), body=[Assign(targets=[Name(id='order', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=1)))], orelse=[]), Return(value=Name(id='order', ctx=Load()))], decorator_list=[], returns=Name(id='int', ctx=Load()))], decorator_list=[]), ClassDef(name='EUCJPDistributionAnalysis', bases=[Name(id='CharDistributionAnalysis', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_char_to_freq_order', ctx=Store())], value=Name(id='JIS_CHAR_TO_FREQ_ORDER', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_table_size', ctx=Store())], value=Name(id='JIS_TABLE_SIZE', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='typical_distribution_ratio', ctx=Store())], value=Name(id='JIS_TYPICAL_DISTRIBUTION_RATIO', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='get_order', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='byte_str', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='bytes', ctx=Load()), Name(id='bytearray', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='char', ctx=Store())], value=Subscript(value=Name(id='byte_str', ctx=Load()), slice=Constant(value=0), ctx=Load())), If(test=Compare(left=Name(id='char', ctx=Load()), ops=[GtE()], comparators=[Constant(value=160)]), body=[Return(value=BinOp(left=BinOp(left=BinOp(left=Constant(value=94), op=Mult(), right=BinOp(left=Name(id='char', ctx=Load()), op=Sub(), right=Constant(value=161))), op=Add(), right=Subscript(value=Name(id='byte_str', ctx=Load()), slice=Constant(value=1), ctx=Load())), op=Sub(), right=Constant(value=161)))], orelse=[]), Return(value=UnaryOp(op=USub(), operand=Constant(value=1)))], decorator_list=[], returns=Name(id='int', ctx=Load()))], decorator_list=[])], type_ignores=[])