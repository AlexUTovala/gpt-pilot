Module(body=[Expr(value=Constant(value='\nbackports.weakref_finalize\n~~~~~~~~~~~~~~~~~~\n\nBackports the Python 3 ``weakref.finalize`` method.\n')), ImportFrom(module='__future__', names=[alias(name='absolute_import')], level=0), Import(names=[alias(name='itertools')]), Import(names=[alias(name='sys')]), ImportFrom(module='weakref', names=[alias(name='ref')], level=0), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='weakref_finalize')], ctx=Load())), ClassDef(name='weakref_finalize', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Class for finalization of weakrefable objects\n    finalize(obj, func, *args, **kwargs) returns a callable finalizer\n    object which will be called when obj is garbage collected. The\n    first time the finalizer is called it evaluates func(*arg, **kwargs)\n    and returns the result. After this the finalizer is dead, and\n    calling it just returns None.\n    When the program exits any remaining finalizers for which the\n    atexit attribute is true will be run in reverse order of creation.\n    By default atexit is true.\n    ')), Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[], ctx=Load())), Assign(targets=[Name(id='_registry', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='_shutdown', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='_index_iter', ctx=Store())], value=Call(func=Attribute(value=Name(id='itertools', ctx=Load()), attr='count', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='_dirty', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='_registered_with_atexit', ctx=Store())], value=Constant(value=False)), ClassDef(name='_Info', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[Constant(value='weakref'), Constant(value='func'), Constant(value='args'), Constant(value='kwargs'), Constant(value='atexit'), Constant(value='index')], ctx=Load()))], decorator_list=[]), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='obj'), arg(arg='func')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_registered_with_atexit', ctx=Load())), body=[Import(names=[alias(name='atexit')]), Expr(value=Call(func=Attribute(value=Name(id='atexit', ctx=Load()), attr='register', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_exitfunc', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='weakref_finalize', ctx=Load()), attr='_registered_with_atexit', ctx=Store())], value=Constant(value=True))], orelse=[]), Assign(targets=[Name(id='info', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_Info', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='info', ctx=Load()), attr='weakref', ctx=Store())], value=Call(func=Name(id='ref', ctx=Load()), args=[Name(id='obj', ctx=Load()), Name(id='self', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='info', ctx=Load()), attr='func', ctx=Store())], value=Name(id='func', ctx=Load())), Assign(targets=[Attribute(value=Name(id='info', ctx=Load()), attr='args', ctx=Store())], value=Name(id='args', ctx=Load())), Assign(targets=[Attribute(value=Name(id='info', ctx=Load()), attr='kwargs', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='kwargs', ctx=Load()), Constant(value=None)])), Assign(targets=[Attribute(value=Name(id='info', ctx=Load()), attr='atexit', ctx=Store())], value=Constant(value=True)), Assign(targets=[Attribute(value=Name(id='info', ctx=Load()), attr='index', ctx=Store())], value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_index_iter', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_registry', ctx=Load()), slice=Name(id='self', ctx=Load()), ctx=Store())], value=Name(id='info', ctx=Load())), Assign(targets=[Attribute(value=Name(id='weakref_finalize', ctx=Load()), attr='_dirty', ctx=Store())], value=Constant(value=True))], decorator_list=[]), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='_')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='If alive then mark as dead and return func(*args, **kwargs);\n        otherwise return None')), Assign(targets=[Name(id='info', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_registry', ctx=Load()), attr='pop', ctx=Load()), args=[Name(id='self', ctx=Load()), Constant(value=None)], keywords=[])), If(test=BoolOp(op=And(), values=[Name(id='info', ctx=Load()), UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_shutdown', ctx=Load()))]), body=[Return(value=Call(func=Attribute(value=Name(id='info', ctx=Load()), attr='func', ctx=Load()), args=[Starred(value=Attribute(value=Name(id='info', ctx=Load()), attr='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=BoolOp(op=Or(), values=[Attribute(value=Name(id='info', ctx=Load()), attr='kwargs', ctx=Load()), Dict(keys=[], values=[])]))]))], orelse=[])], decorator_list=[]), FunctionDef(name='detach', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='If alive then mark as dead and return (obj, func, args, kwargs);\n        otherwise return None')), Assign(targets=[Name(id='info', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_registry', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Assign(targets=[Name(id='obj', ctx=Store())], value=BoolOp(op=And(), values=[Name(id='info', ctx=Load()), Call(func=Attribute(value=Name(id='info', ctx=Load()), attr='weakref', ctx=Load()), args=[], keywords=[])])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='obj', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_registry', ctx=Load()), attr='pop', ctx=Load()), args=[Name(id='self', ctx=Load()), Constant(value=None)], keywords=[])]), body=[Return(value=Tuple(elts=[Name(id='obj', ctx=Load()), Attribute(value=Name(id='info', ctx=Load()), attr='func', ctx=Load()), Attribute(value=Name(id='info', ctx=Load()), attr='args', ctx=Load()), BoolOp(op=Or(), values=[Attribute(value=Name(id='info', ctx=Load()), attr='kwargs', ctx=Load()), Dict(keys=[], values=[])])], ctx=Load()))], orelse=[])], decorator_list=[]), FunctionDef(name='peek', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='If alive then return (obj, func, args, kwargs);\n        otherwise return None')), Assign(targets=[Name(id='info', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_registry', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Assign(targets=[Name(id='obj', ctx=Store())], value=BoolOp(op=And(), values=[Name(id='info', ctx=Load()), Call(func=Attribute(value=Name(id='info', ctx=Load()), attr='weakref', ctx=Load()), args=[], keywords=[])])), If(test=Compare(left=Name(id='obj', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Tuple(elts=[Name(id='obj', ctx=Load()), Attribute(value=Name(id='info', ctx=Load()), attr='func', ctx=Load()), Attribute(value=Name(id='info', ctx=Load()), attr='args', ctx=Load()), BoolOp(op=Or(), values=[Attribute(value=Name(id='info', ctx=Load()), attr='kwargs', ctx=Load()), Dict(keys=[], values=[])])], ctx=Load()))], orelse=[])], decorator_list=[]), FunctionDef(name='alive', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Whether finalizer is alive')), Return(value=Compare(left=Name(id='self', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_registry', ctx=Load())]))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='atexit', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Whether finalizer should be called at exit')), Assign(targets=[Name(id='info', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_registry', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Return(value=BoolOp(op=And(), values=[Call(func=Name(id='bool', ctx=Load()), args=[Name(id='info', ctx=Load())], keywords=[]), Attribute(value=Name(id='info', ctx=Load()), attr='atexit', ctx=Load())]))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='atexit', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='info', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_registry', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), If(test=Name(id='info', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='info', ctx=Load()), attr='atexit', ctx=Store())], value=Call(func=Name(id='bool', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[Attribute(value=Name(id='atexit', ctx=Load()), attr='setter', ctx=Load())]), FunctionDef(name='__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='info', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_registry', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Assign(targets=[Name(id='obj', ctx=Store())], value=BoolOp(op=And(), values=[Name(id='info', ctx=Load()), Call(func=Attribute(value=Name(id='info', ctx=Load()), attr='weakref', ctx=Load()), args=[], keywords=[])])), If(test=Compare(left=Name(id='obj', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return(value=BinOp(left=Constant(value='<%s object at %#x; dead>'), op=Mod(), right=Tuple(elts=[Attribute(value=Call(func=Name(id='type', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), attr='__name__', ctx=Load()), Call(func=Name(id='id', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])], ctx=Load())))], orelse=[Return(value=BinOp(left=Constant(value='<%s object at %#x; for %r at %#x>'), op=Mod(), right=Tuple(elts=[Attribute(value=Call(func=Name(id='type', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), attr='__name__', ctx=Load()), Call(func=Name(id='id', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), Attribute(value=Call(func=Name(id='type', ctx=Load()), args=[Name(id='obj', ctx=Load())], keywords=[]), attr='__name__', ctx=Load()), Call(func=Name(id='id', ctx=Load()), args=[Name(id='obj', ctx=Load())], keywords=[])], ctx=Load())))])], decorator_list=[]), FunctionDef(name='_select_for_exit', args=arguments(posonlyargs=[], args=[arg(arg='cls')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='L', ctx=Store())], value=ListComp(elt=Tuple(elts=[Name(id='f', ctx=Load()), Name(id='i', ctx=Load())], ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='f', ctx=Store()), Name(id='i', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_registry', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), ifs=[Attribute(value=Name(id='i', ctx=Load()), attr='atexit', ctx=Load())], is_async=0)])), Expr(value=Call(func=Attribute(value=Name(id='L', ctx=Load()), attr='sort', ctx=Load()), args=[], keywords=[keyword(arg='key', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='item')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Attribute(value=Subscript(value=Name(id='item', ctx=Load()), slice=Constant(value=1), ctx=Load()), attr='index', ctx=Load())))])), Return(value=ListComp(elt=Name(id='f', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='f', ctx=Store()), Name(id='i', ctx=Store())], ctx=Store()), iter=Name(id='L', ctx=Load()), ifs=[], is_async=0)]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='_exitfunc', args=arguments(posonlyargs=[], args=[arg(arg='cls')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='reenable_gc', ctx=Store())], value=Constant(value=False)), Try(body=[If(test=Attribute(value=Name(id='cls', ctx=Load()), attr='_registry', ctx=Load()), body=[Import(names=[alias(name='gc')]), If(test=Call(func=Attribute(value=Name(id='gc', ctx=Load()), attr='isenabled', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='reenable_gc', ctx=Store())], value=Constant(value=True)), Expr(value=Call(func=Attribute(value=Name(id='gc', ctx=Load()), attr='disable', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='pending', ctx=Store())], value=Constant(value=None)), While(test=Constant(value=True), body=[If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='pending', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Attribute(value=Name(id='weakref_finalize', ctx=Load()), attr='_dirty', ctx=Load())]), body=[Assign(targets=[Name(id='pending', ctx=Store())], value=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='_select_for_exit', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='weakref_finalize', ctx=Load()), attr='_dirty', ctx=Store())], value=Constant(value=False))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='pending', ctx=Load())), body=[Break()], orelse=[]), Assign(targets=[Name(id='f', ctx=Store())], value=Call(func=Attribute(value=Name(id='pending', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[])), Try(body=[Expr(value=Call(func=Name(id='f', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='sys', ctx=Load()), attr='excepthook', ctx=Load()), args=[Starred(value=Call(func=Attribute(value=Name(id='sys', ctx=Load()), attr='exc_info', ctx=Load()), args=[], keywords=[]), ctx=Load())], keywords=[]))])], orelse=[], finalbody=[]), Assert(test=Compare(left=Name(id='f', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='cls', ctx=Load()), attr='_registry', ctx=Load())]))], orelse=[])], orelse=[])], handlers=[], orelse=[], finalbody=[Assign(targets=[Attribute(value=Name(id='weakref_finalize', ctx=Load()), attr='_shutdown', ctx=Store())], value=Constant(value=True)), If(test=Name(id='reenable_gc', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='gc', ctx=Load()), attr='enable', ctx=Load()), args=[], keywords=[]))], orelse=[])])], decorator_list=[Name(id='classmethod', ctx=Load())])], decorator_list=[])], type_ignores=[])