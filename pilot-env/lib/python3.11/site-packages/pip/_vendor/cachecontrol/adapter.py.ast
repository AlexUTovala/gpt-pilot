Module(body=[ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), Import(names=[alias(name='functools')]), Import(names=[alias(name='types')]), Import(names=[alias(name='zlib')]), ImportFrom(module='typing', names=[alias(name='TYPE_CHECKING'), alias(name='Any'), alias(name='Collection'), alias(name='Mapping')], level=0), ImportFrom(module='pip._vendor.requests.adapters', names=[alias(name='HTTPAdapter')], level=0), ImportFrom(module='pip._vendor.cachecontrol.cache', names=[alias(name='DictCache')], level=0), ImportFrom(module='pip._vendor.cachecontrol.controller', names=[alias(name='PERMANENT_REDIRECT_STATUSES'), alias(name='CacheController')], level=0), ImportFrom(module='pip._vendor.cachecontrol.filewrapper', names=[alias(name='CallbackFileWrapper')], level=0), If(test=Name(id='TYPE_CHECKING', ctx=Load()), body=[ImportFrom(module='pip._vendor.requests', names=[alias(name='PreparedRequest'), alias(name='Response')], level=0), ImportFrom(module='pip._vendor.urllib3', names=[alias(name='HTTPResponse')], level=0), ImportFrom(module='pip._vendor.cachecontrol.cache', names=[alias(name='BaseCache')], level=0), ImportFrom(module='pip._vendor.cachecontrol.heuristics', names=[alias(name='BaseHeuristic')], level=0), ImportFrom(module='pip._vendor.cachecontrol.serialize', names=[alias(name='Serializer')], level=0)], orelse=[]), ClassDef(name='CacheControlAdapter', bases=[Name(id='HTTPAdapter', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='invalidating_methods', ctx=Store())], value=Set(elts=[Constant(value='PUT'), Constant(value='PATCH'), Constant(value='DELETE')])), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cache', annotation=BinOp(left=Name(id='BaseCache', ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='cache_etags', annotation=Name(id='bool', ctx=Load())), arg(arg='controller_class', annotation=BinOp(left=Subscript(value=Name(id='type', ctx=Load()), slice=Name(id='CacheController', ctx=Load()), ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='serializer', annotation=BinOp(left=Name(id='Serializer', ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='heuristic', annotation=BinOp(left=Name(id='BaseHeuristic', ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='cacheable_methods', annotation=BinOp(left=Subscript(value=Name(id='Collection', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), op=BitOr(), right=Constant(value=None)))], vararg=arg(arg='args', annotation=Name(id='Any', ctx=Load())), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kw', annotation=Name(id='Any', ctx=Load())), defaults=[Constant(value=None), Constant(value=True), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='cache', ctx=Store())], value=IfExp(test=Compare(left=Name(id='cache', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=Call(func=Name(id='DictCache', ctx=Load()), args=[], keywords=[]), orelse=Name(id='cache', ctx=Load()))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='heuristic', ctx=Store())], value=Name(id='heuristic', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='cacheable_methods', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='cacheable_methods', ctx=Load()), Tuple(elts=[Constant(value='GET')], ctx=Load())])), Assign(targets=[Name(id='controller_factory', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='controller_class', ctx=Load()), Name(id='CacheController', ctx=Load())])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='controller', ctx=Store())], value=Call(func=Name(id='controller_factory', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='cache', ctx=Load())], keywords=[keyword(arg='cache_etags', value=Name(id='cache_etags', ctx=Load())), keyword(arg='serializer', value=Name(id='serializer', ctx=Load()))]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='send', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='request', annotation=Name(id='PreparedRequest', ctx=Load())), arg(arg='stream', annotation=Name(id='bool', ctx=Load())), arg(arg='timeout', annotation=BinOp(left=BinOp(left=BinOp(left=Constant(value=None), op=BitOr(), right=Name(id='float', ctx=Load())), op=BitOr(), right=Subscript(value=Name(id='tuple', ctx=Load()), slice=Tuple(elts=[Name(id='float', ctx=Load()), Name(id='float', ctx=Load())], ctx=Load()), ctx=Load())), op=BitOr(), right=Subscript(value=Name(id='tuple', ctx=Load()), slice=Tuple(elts=[Name(id='float', ctx=Load()), Constant(value=None)], ctx=Load()), ctx=Load()))), arg(arg='verify', annotation=BinOp(left=Name(id='bool', ctx=Load()), op=BitOr(), right=Name(id='str', ctx=Load()))), arg(arg='cert', annotation=BinOp(left=BinOp(left=BinOp(left=Constant(value=None), op=BitOr(), right=Name(id='bytes', ctx=Load())), op=BitOr(), right=Name(id='str', ctx=Load())), op=BitOr(), right=Subscript(value=Name(id='tuple', ctx=Load()), slice=Tuple(elts=[BinOp(left=Name(id='bytes', ctx=Load()), op=BitOr(), right=Name(id='str', ctx=Load())), BinOp(left=Name(id='bytes', ctx=Load()), op=BitOr(), right=Name(id='str', ctx=Load()))], ctx=Load()), ctx=Load()))), arg(arg='proxies', annotation=BinOp(left=Subscript(value=Name(id='Mapping', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='cacheable_methods', annotation=BinOp(left=Subscript(value=Name(id='Collection', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), op=BitOr(), right=Constant(value=None)))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=None), Constant(value=True), Constant(value=None), Constant(value=None), Constant(value=None)]), body=[Expr(value=Constant(value='\n        Send a request. Use the request information to see if it\n        exists in the cache and cache the response if we need to and can.\n        ')), Assign(targets=[Name(id='cacheable', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='cacheable_methods', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='cacheable_methods', ctx=Load())])), If(test=Compare(left=Attribute(value=Name(id='request', ctx=Load()), attr='method', ctx=Load()), ops=[In()], comparators=[Name(id='cacheable', ctx=Load())]), body=[Try(body=[Assign(targets=[Name(id='cached_response', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='controller', ctx=Load()), attr='cached_request', ctx=Load()), args=[Name(id='request', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='zlib', ctx=Load()), attr='error', ctx=Load()), body=[Assign(targets=[Name(id='cached_response', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[]), If(test=Name(id='cached_response', ctx=Load()), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='build_response', ctx=Load()), args=[Name(id='request', ctx=Load()), Name(id='cached_response', ctx=Load())], keywords=[keyword(arg='from_cache', value=Constant(value=True))]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='request', ctx=Load()), attr='headers', ctx=Load()), attr='update', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='controller', ctx=Load()), attr='conditional_headers', ctx=Load()), args=[Name(id='request', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='resp', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='send', ctx=Load()), args=[Name(id='request', ctx=Load()), Name(id='stream', ctx=Load()), Name(id='timeout', ctx=Load()), Name(id='verify', ctx=Load()), Name(id='cert', ctx=Load()), Name(id='proxies', ctx=Load())], keywords=[])), Return(value=Name(id='resp', ctx=Load()))], decorator_list=[], returns=Name(id='Response', ctx=Load())), FunctionDef(name='build_response', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='request', annotation=Name(id='PreparedRequest', ctx=Load())), arg(arg='response', annotation=Name(id='HTTPResponse', ctx=Load())), arg(arg='from_cache', annotation=Name(id='bool', ctx=Load())), arg(arg='cacheable_methods', annotation=BinOp(left=Subscript(value=Name(id='Collection', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), op=BitOr(), right=Constant(value=None)))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=None)]), body=[Expr(value=Constant(value='\n        Build a response by making a request or using the cache.\n\n        This will end up calling send and returning a potentially\n        cached response\n        ')), Assign(targets=[Name(id='cacheable', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='cacheable_methods', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='cacheable_methods', ctx=Load())])), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='from_cache', ctx=Load())), Compare(left=Attribute(value=Name(id='request', ctx=Load()), attr='method', ctx=Load()), ops=[In()], comparators=[Name(id='cacheable', ctx=Load())])]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='heuristic', ctx=Load()), body=[Assign(targets=[Name(id='response', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='heuristic', ctx=Load()), attr='apply', ctx=Load()), args=[Name(id='response', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='response', ctx=Load()), attr='status', ctx=Load()), ops=[Eq()], comparators=[Constant(value=304)]), body=[Assign(targets=[Name(id='cached_response', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='controller', ctx=Load()), attr='update_cached_response', ctx=Load()), args=[Name(id='request', ctx=Load()), Name(id='response', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='cached_response', ctx=Load()), ops=[IsNot()], comparators=[Name(id='response', ctx=Load())]), body=[Assign(targets=[Name(id='from_cache', ctx=Store())], value=Constant(value=True))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='response', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[keyword(arg='decode_content', value=Constant(value=False))])), Expr(value=Call(func=Attribute(value=Name(id='response', ctx=Load()), attr='release_conn', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='response', ctx=Store())], value=Name(id='cached_response', ctx=Load()))], orelse=[If(test=Compare(left=Call(func=Name(id='int', ctx=Load()), args=[Attribute(value=Name(id='response', ctx=Load()), attr='status', ctx=Load())], keywords=[]), ops=[In()], comparators=[Name(id='PERMANENT_REDIRECT_STATUSES', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='controller', ctx=Load()), attr='cache_response', ctx=Load()), args=[Name(id='request', ctx=Load()), Name(id='response', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Attribute(value=Name(id='response', ctx=Load()), attr='_fp', ctx=Store())], value=Call(func=Name(id='CallbackFileWrapper', ctx=Load()), args=[Attribute(value=Name(id='response', ctx=Load()), attr='_fp', ctx=Load()), Call(func=Attribute(value=Name(id='functools', ctx=Load()), attr='partial', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='controller', ctx=Load()), attr='cache_response', ctx=Load()), Name(id='request', ctx=Load()), Name(id='response', ctx=Load())], keywords=[])], keywords=[])), If(test=Attribute(value=Name(id='response', ctx=Load()), attr='chunked', ctx=Load()), body=[Assign(targets=[Name(id='super_update_chunk_length', ctx=Store())], value=Attribute(value=Name(id='response', ctx=Load()), attr='_update_chunk_length', ctx=Load())), FunctionDef(name='_update_chunk_length', args=arguments(posonlyargs=[], args=[arg(arg='self', annotation=Name(id='HTTPResponse', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Name(id='super_update_chunk_length', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='chunk_left', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_fp', ctx=Load()), attr='_close', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[], returns=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='response', ctx=Load()), attr='_update_chunk_length', ctx=Store())], value=Call(func=Attribute(value=Name(id='types', ctx=Load()), attr='MethodType', ctx=Load()), args=[Name(id='_update_chunk_length', ctx=Load()), Name(id='response', ctx=Load())], keywords=[]))], orelse=[])])])], orelse=[]), AnnAssign(target=Name(id='resp', ctx=Store()), annotation=Name(id='Response', ctx=Load()), value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='build_response', ctx=Load()), args=[Name(id='request', ctx=Load()), Name(id='response', ctx=Load())], keywords=[]), simple=1), If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='request', ctx=Load()), attr='method', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='invalidating_methods', ctx=Load())]), Attribute(value=Name(id='resp', ctx=Load()), attr='ok', ctx=Load())]), body=[Assert(test=Compare(left=Attribute(value=Name(id='request', ctx=Load()), attr='url', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])), Assign(targets=[Name(id='cache_url', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='controller', ctx=Load()), attr='cache_url', ctx=Load()), args=[Attribute(value=Name(id='request', ctx=Load()), attr='url', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cache', ctx=Load()), attr='delete', ctx=Load()), args=[Name(id='cache_url', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='resp', ctx=Load()), attr='from_cache', ctx=Store())], value=Name(id='from_cache', ctx=Load())), Return(value=Name(id='resp', ctx=Load()))], decorator_list=[], returns=Name(id='Response', ctx=Load())), FunctionDef(name='close', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cache', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='close', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None))], decorator_list=[])], type_ignores=[])