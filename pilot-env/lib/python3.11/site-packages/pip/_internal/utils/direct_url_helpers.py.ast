Module(body=[ImportFrom(module='typing', names=[alias(name='Optional')], level=0), ImportFrom(module='pip._internal.models.direct_url', names=[alias(name='ArchiveInfo'), alias(name='DirectUrl'), alias(name='DirInfo'), alias(name='VcsInfo')], level=0), ImportFrom(module='pip._internal.models.link', names=[alias(name='Link')], level=0), ImportFrom(module='pip._internal.utils.urls', names=[alias(name='path_to_url')], level=0), ImportFrom(module='pip._internal.vcs', names=[alias(name='vcs')], level=0), FunctionDef(name='direct_url_as_pep440_direct_reference', args=arguments(posonlyargs=[], args=[arg(arg='direct_url', annotation=Name(id='DirectUrl', ctx=Load())), arg(arg='name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Convert a DirectUrl to a pip requirement string.')), Expr(value=Call(func=Attribute(value=Name(id='direct_url', ctx=Load()), attr='validate', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='requirement', ctx=Store())], value=BinOp(left=Name(id='name', ctx=Load()), op=Add(), right=Constant(value=' @ '))), Assign(targets=[Name(id='fragments', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='direct_url', ctx=Load()), attr='info', ctx=Load()), Name(id='VcsInfo', ctx=Load())], keywords=[]), body=[AugAssign(target=Name(id='requirement', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Constant(value='{}+{}@{}'), attr='format', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='direct_url', ctx=Load()), attr='info', ctx=Load()), attr='vcs', ctx=Load()), Attribute(value=Name(id='direct_url', ctx=Load()), attr='url', ctx=Load()), Attribute(value=Attribute(value=Name(id='direct_url', ctx=Load()), attr='info', ctx=Load()), attr='commit_id', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='direct_url', ctx=Load()), attr='info', ctx=Load()), Name(id='ArchiveInfo', ctx=Load())], keywords=[]), body=[AugAssign(target=Name(id='requirement', ctx=Store()), op=Add(), value=Attribute(value=Name(id='direct_url', ctx=Load()), attr='url', ctx=Load())), If(test=Attribute(value=Attribute(value=Name(id='direct_url', ctx=Load()), attr='info', ctx=Load()), attr='hash', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='fragments', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='direct_url', ctx=Load()), attr='info', ctx=Load()), attr='hash', ctx=Load())], keywords=[]))], orelse=[])], orelse=[Assert(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='direct_url', ctx=Load()), attr='info', ctx=Load()), Name(id='DirInfo', ctx=Load())], keywords=[])), AugAssign(target=Name(id='requirement', ctx=Store()), op=Add(), value=Attribute(value=Name(id='direct_url', ctx=Load()), attr='url', ctx=Load()))])]), If(test=Attribute(value=Name(id='direct_url', ctx=Load()), attr='subdirectory', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='fragments', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Constant(value='subdirectory='), op=Add(), right=Attribute(value=Name(id='direct_url', ctx=Load()), attr='subdirectory', ctx=Load()))], keywords=[]))], orelse=[]), If(test=Name(id='fragments', ctx=Load()), body=[AugAssign(target=Name(id='requirement', ctx=Store()), op=Add(), value=BinOp(left=Constant(value='#'), op=Add(), right=Call(func=Attribute(value=Constant(value='&'), attr='join', ctx=Load()), args=[Name(id='fragments', ctx=Load())], keywords=[])))], orelse=[]), Return(value=Name(id='requirement', ctx=Load()))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='direct_url_for_editable', args=arguments(posonlyargs=[], args=[arg(arg='source_dir', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='DirectUrl', ctx=Load()), args=[], keywords=[keyword(arg='url', value=Call(func=Name(id='path_to_url', ctx=Load()), args=[Name(id='source_dir', ctx=Load())], keywords=[])), keyword(arg='info', value=Call(func=Name(id='DirInfo', ctx=Load()), args=[], keywords=[keyword(arg='editable', value=Constant(value=True))]))]))], decorator_list=[], returns=Name(id='DirectUrl', ctx=Load())), FunctionDef(name='direct_url_from_link', args=arguments(posonlyargs=[], args=[arg(arg='link', annotation=Name(id='Link', ctx=Load())), arg(arg='source_dir', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='link_is_in_wheel_cache', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=False)]), body=[If(test=Attribute(value=Name(id='link', ctx=Load()), attr='is_vcs', ctx=Load()), body=[Assign(targets=[Name(id='vcs_backend', ctx=Store())], value=Call(func=Attribute(value=Name(id='vcs', ctx=Load()), attr='get_backend_for_scheme', ctx=Load()), args=[Attribute(value=Name(id='link', ctx=Load()), attr='scheme', ctx=Load())], keywords=[])), Assert(test=Name(id='vcs_backend', ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='url', ctx=Store()), Name(id='requested_revision', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='vcs_backend', ctx=Load()), attr='get_url_rev_and_auth', ctx=Load()), args=[Attribute(value=Name(id='link', ctx=Load()), attr='url_without_fragment', ctx=Load())], keywords=[])), If(test=Name(id='link_is_in_wheel_cache', ctx=Load()), body=[Assert(test=Name(id='requested_revision', ctx=Load())), Assign(targets=[Name(id='commit_id', ctx=Store())], value=Name(id='requested_revision', ctx=Load()))], orelse=[Assert(test=Name(id='source_dir', ctx=Load())), Assign(targets=[Name(id='commit_id', ctx=Store())], value=Call(func=Attribute(value=Name(id='vcs_backend', ctx=Load()), attr='get_revision', ctx=Load()), args=[Name(id='source_dir', ctx=Load())], keywords=[]))]), Return(value=Call(func=Name(id='DirectUrl', ctx=Load()), args=[], keywords=[keyword(arg='url', value=Name(id='url', ctx=Load())), keyword(arg='info', value=Call(func=Name(id='VcsInfo', ctx=Load()), args=[], keywords=[keyword(arg='vcs', value=Attribute(value=Name(id='vcs_backend', ctx=Load()), attr='name', ctx=Load())), keyword(arg='commit_id', value=Name(id='commit_id', ctx=Load())), keyword(arg='requested_revision', value=Name(id='requested_revision', ctx=Load()))])), keyword(arg='subdirectory', value=Attribute(value=Name(id='link', ctx=Load()), attr='subdirectory_fragment', ctx=Load()))]))], orelse=[If(test=Call(func=Attribute(value=Name(id='link', ctx=Load()), attr='is_existing_dir', ctx=Load()), args=[], keywords=[]), body=[Return(value=Call(func=Name(id='DirectUrl', ctx=Load()), args=[], keywords=[keyword(arg='url', value=Attribute(value=Name(id='link', ctx=Load()), attr='url_without_fragment', ctx=Load())), keyword(arg='info', value=Call(func=Name(id='DirInfo', ctx=Load()), args=[], keywords=[])), keyword(arg='subdirectory', value=Attribute(value=Name(id='link', ctx=Load()), attr='subdirectory_fragment', ctx=Load()))]))], orelse=[Assign(targets=[Name(id='hash', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='hash_name', ctx=Store())], value=Attribute(value=Name(id='link', ctx=Load()), attr='hash_name', ctx=Load())), If(test=Name(id='hash_name', ctx=Load()), body=[Assign(targets=[Name(id='hash', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='hash_name', ctx=Load()), conversion=-1), Constant(value='='), FormattedValue(value=Attribute(value=Name(id='link', ctx=Load()), attr='hash', ctx=Load()), conversion=-1)]))], orelse=[]), Return(value=Call(func=Name(id='DirectUrl', ctx=Load()), args=[], keywords=[keyword(arg='url', value=Attribute(value=Name(id='link', ctx=Load()), attr='url_without_fragment', ctx=Load())), keyword(arg='info', value=Call(func=Name(id='ArchiveInfo', ctx=Load()), args=[], keywords=[keyword(arg='hash', value=Name(id='hash', ctx=Load()))])), keyword(arg='subdirectory', value=Attribute(value=Name(id='link', ctx=Load()), attr='subdirectory_fragment', ctx=Load()))]))])])], decorator_list=[], returns=Name(id='DirectUrl', ctx=Load()))], type_ignores=[])