Module(body=[Import(names=[alias(name='codecs')]), Import(names=[alias(name='locale')]), Import(names=[alias(name='re')]), Import(names=[alias(name='sys')]), ImportFrom(module='typing', names=[alias(name='List'), alias(name='Tuple')], level=0), AnnAssign(target=Name(id='BOMS', ctx=Store()), annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='bytes', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load()), ctx=Load()), value=List(elts=[Tuple(elts=[Attribute(value=Name(id='codecs', ctx=Load()), attr='BOM_UTF8', ctx=Load()), Constant(value='utf-8')], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='codecs', ctx=Load()), attr='BOM_UTF16', ctx=Load()), Constant(value='utf-16')], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='codecs', ctx=Load()), attr='BOM_UTF16_BE', ctx=Load()), Constant(value='utf-16-be')], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='codecs', ctx=Load()), attr='BOM_UTF16_LE', ctx=Load()), Constant(value='utf-16-le')], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='codecs', ctx=Load()), attr='BOM_UTF32', ctx=Load()), Constant(value='utf-32')], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='codecs', ctx=Load()), attr='BOM_UTF32_BE', ctx=Load()), Constant(value='utf-32-be')], ctx=Load()), Tuple(elts=[Attribute(value=Name(id='codecs', ctx=Load()), attr='BOM_UTF32_LE', ctx=Load()), Constant(value='utf-32-le')], ctx=Load())], ctx=Load()), simple=1), Assign(targets=[Name(id='ENCODING_RE', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value=b'coding[:=]\\s*([-\\w.]+)')], keywords=[])), FunctionDef(name='auto_decode', args=arguments(posonlyargs=[], args=[arg(arg='data', annotation=Name(id='bytes', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Check a bytes string for a BOM to correctly detect the encoding\n\n    Fallback to locale.getpreferredencoding(False) like open() on Python3')), For(target=Tuple(elts=[Name(id='bom', ctx=Store()), Name(id='encoding', ctx=Store())], ctx=Store()), iter=Name(id='BOMS', ctx=Load()), body=[If(test=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='startswith', ctx=Load()), args=[Name(id='bom', ctx=Load())], keywords=[]), body=[Return(value=Call(func=Attribute(value=Subscript(value=Name(id='data', ctx=Load()), slice=Slice(lower=Call(func=Name(id='len', ctx=Load()), args=[Name(id='bom', ctx=Load())], keywords=[])), ctx=Load()), attr='decode', ctx=Load()), args=[Name(id='encoding', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), For(target=Name(id='line', ctx=Store()), iter=Subscript(value=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=b'\n')], keywords=[]), slice=Slice(upper=Constant(value=2)), ctx=Load()), body=[If(test=BoolOp(op=And(), values=[Compare(left=Subscript(value=Name(id='line', ctx=Load()), slice=Slice(lower=Constant(value=0), upper=Constant(value=1)), ctx=Load()), ops=[Eq()], comparators=[Constant(value=b'#')]), Call(func=Attribute(value=Name(id='ENCODING_RE', ctx=Load()), attr='search', ctx=Load()), args=[Name(id='line', ctx=Load())], keywords=[])]), body=[Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Attribute(value=Name(id='ENCODING_RE', ctx=Load()), attr='search', ctx=Load()), args=[Name(id='line', ctx=Load())], keywords=[])), Assert(test=Compare(left=Name(id='result', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])), Assign(targets=[Name(id='encoding', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='groups', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load()), attr='decode', ctx=Load()), args=[Constant(value='ascii')], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='decode', ctx=Load()), args=[Name(id='encoding', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='decode', ctx=Load()), args=[BoolOp(op=Or(), values=[Call(func=Attribute(value=Name(id='locale', ctx=Load()), attr='getpreferredencoding', ctx=Load()), args=[Constant(value=False)], keywords=[]), Call(func=Attribute(value=Name(id='sys', ctx=Load()), attr='getdefaultencoding', ctx=Load()), args=[], keywords=[])])], keywords=[]))], decorator_list=[], returns=Name(id='str', ctx=Load()))], type_ignores=[])