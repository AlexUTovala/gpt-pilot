Module(body=[Expr(value=Constant(value='\nThis code wraps the vendored appdirs module to so the return values are\ncompatible for the current pip code base.\n\nThe intention is to rewrite current usages gradually, keeping the tests pass,\nand eventually drop this after all usages are changed.\n')), Import(names=[alias(name='os')]), Import(names=[alias(name='sys')]), ImportFrom(module='typing', names=[alias(name='List')], level=0), ImportFrom(module='pip._vendor', names=[alias(name='platformdirs', asname='_appdirs')], level=0), FunctionDef(name='user_cache_dir', args=arguments(posonlyargs=[], args=[arg(arg='appname', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='_appdirs', ctx=Load()), attr='user_cache_dir', ctx=Load()), args=[Name(id='appname', ctx=Load())], keywords=[keyword(arg='appauthor', value=Constant(value=False))]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='_macos_user_config_dir', args=arguments(posonlyargs=[], args=[arg(arg='appname', annotation=Name(id='str', ctx=Load())), arg(arg='roaming', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Name(id='_appdirs', ctx=Load()), attr='user_data_dir', ctx=Load()), args=[Name(id='appname', ctx=Load())], keywords=[keyword(arg='appauthor', value=Constant(value=False)), keyword(arg='roaming', value=Name(id='roaming', ctx=Load()))])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]), body=[Return(value=Name(id='path', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='linux_like_path', ctx=Store())], value=Constant(value='~/.config/')), If(test=Name(id='appname', ctx=Load()), body=[Assign(targets=[Name(id='linux_like_path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='linux_like_path', ctx=Load()), Name(id='appname', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='expanduser', ctx=Load()), args=[Name(id='linux_like_path', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='user_config_dir', args=arguments(posonlyargs=[], args=[arg(arg='appname', annotation=Name(id='str', ctx=Load())), arg(arg='roaming', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), ops=[Eq()], comparators=[Constant(value='darwin')]), body=[Return(value=Call(func=Name(id='_macos_user_config_dir', ctx=Load()), args=[Name(id='appname', ctx=Load()), Name(id='roaming', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='_appdirs', ctx=Load()), attr='user_config_dir', ctx=Load()), args=[Name(id='appname', ctx=Load())], keywords=[keyword(arg='appauthor', value=Constant(value=False)), keyword(arg='roaming', value=Name(id='roaming', ctx=Load()))]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='site_config_dirs', args=arguments(posonlyargs=[], args=[arg(arg='appname', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), ops=[Eq()], comparators=[Constant(value='darwin')]), body=[Return(value=List(elts=[Call(func=Attribute(value=Name(id='_appdirs', ctx=Load()), attr='site_data_dir', ctx=Load()), args=[Name(id='appname', ctx=Load())], keywords=[keyword(arg='appauthor', value=Constant(value=False)), keyword(arg='multipath', value=Constant(value=True))])], ctx=Load()))], orelse=[]), Assign(targets=[Name(id='dirval', ctx=Store())], value=Call(func=Attribute(value=Name(id='_appdirs', ctx=Load()), attr='site_config_dir', ctx=Load()), args=[Name(id='appname', ctx=Load())], keywords=[keyword(arg='appauthor', value=Constant(value=False)), keyword(arg='multipath', value=Constant(value=True))])), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), ops=[Eq()], comparators=[Constant(value='win32')]), body=[Return(value=List(elts=[Name(id='dirval', ctx=Load())], ctx=Load()))], orelse=[]), Return(value=BinOp(left=Call(func=Attribute(value=Name(id='dirval', ctx=Load()), attr='split', ctx=Load()), args=[Attribute(value=Name(id='os', ctx=Load()), attr='pathsep', ctx=Load())], keywords=[]), op=Add(), right=List(elts=[Constant(value='/etc')], ctx=Load())))], decorator_list=[], returns=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], type_ignores=[])