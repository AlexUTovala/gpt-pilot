Module(body=[Expr(value=Constant(value='Stuff that differs in different Python versions and platform\ndistributions.')), Import(names=[alias(name='logging')]), Import(names=[alias(name='os')]), Import(names=[alias(name='sys')]), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='get_path_uid'), Constant(value='stdlib_pkgs'), Constant(value='WINDOWS')], ctx=Load())), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Name(id='__name__', ctx=Load())], keywords=[])), FunctionDef(name='has_tls', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Import(names=[alias(name='_ssl')]), Return(value=Constant(value=True))], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[]), ImportFrom(module='pip._vendor.urllib3.util', names=[alias(name='IS_PYOPENSSL')], level=0), Return(value=Name(id='IS_PYOPENSSL', ctx=Load()))], decorator_list=[], returns=Name(id='bool', ctx=Load())), FunctionDef(name='get_path_uid', args=arguments(posonlyargs=[], args=[arg(arg='path', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n    Return path's uid.\n\n    Does not follow symlinks:\n        https://github.com/pypa/pip/pull/935#discussion_r5307003\n\n    Placed this function in compat due to differences on AIX and\n    Jython, that should eventually go away.\n\n    :raises OSError: When path is a symlink or can't be read.\n    ")), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='os', ctx=Load()), Constant(value='O_NOFOLLOW')], keywords=[]), body=[Assign(targets=[Name(id='fd', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='open', ctx=Load()), args=[Name(id='path', ctx=Load()), BinOp(left=Attribute(value=Name(id='os', ctx=Load()), attr='O_RDONLY', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='os', ctx=Load()), attr='O_NOFOLLOW', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='file_uid', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='fstat', ctx=Load()), args=[Name(id='fd', ctx=Load())], keywords=[]), attr='st_uid', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='close', ctx=Load()), args=[Name(id='fd', ctx=Load())], keywords=[]))], orelse=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='islink', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[])), body=[Assign(targets=[Name(id='file_uid', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='stat', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]), attr='st_uid', ctx=Load()))], orelse=[Raise(exc=Call(func=Name(id='OSError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='path', ctx=Load()), conversion=-1), Constant(value=' is a symlink; Will not return uid for symlinks')])], keywords=[]))])]), Return(value=Name(id='file_uid', ctx=Load()))], decorator_list=[], returns=Name(id='int', ctx=Load())), Assign(targets=[Name(id='stdlib_pkgs', ctx=Store())], value=Set(elts=[Constant(value='python'), Constant(value='wsgiref'), Constant(value='argparse')])), Assign(targets=[Name(id='WINDOWS', ctx=Store())], value=BoolOp(op=Or(), values=[Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='win')], keywords=[]), BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), ops=[Eq()], comparators=[Constant(value='cli')]), Compare(left=Attribute(value=Name(id='os', ctx=Load()), attr='name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='nt')])])]))], type_ignores=[])