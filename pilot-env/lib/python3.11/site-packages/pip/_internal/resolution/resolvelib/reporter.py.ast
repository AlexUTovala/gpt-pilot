Module(body=[ImportFrom(module='collections', names=[alias(name='defaultdict')], level=0), ImportFrom(module='logging', names=[alias(name='getLogger')], level=0), ImportFrom(module='typing', names=[alias(name='Any'), alias(name='DefaultDict')], level=0), ImportFrom(module='pip._vendor.resolvelib.reporters', names=[alias(name='BaseReporter')], level=0), ImportFrom(module='base', names=[alias(name='Candidate'), alias(name='Requirement')], level=1), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Name(id='getLogger', ctx=Load()), args=[Name(id='__name__', ctx=Load())], keywords=[])), ClassDef(name='PipReporter', bases=[Name(id='BaseReporter', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='reject_count_by_package', ctx=Store()), annotation=Subscript(value=Name(id='DefaultDict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='int', ctx=Load())], ctx=Load()), ctx=Load()), value=Call(func=Name(id='defaultdict', ctx=Load()), args=[Name(id='int', ctx=Load())], keywords=[]), simple=0), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_messages_at_reject_count', ctx=Store())], value=Dict(keys=[Constant(value=1), Constant(value=8), Constant(value=13)], values=[Constant(value='pip is looking at multiple versions of {package_name} to determine which version is compatible with other requirements. This could take a while.'), Constant(value='pip is still looking at multiple versions of {package_name} to determine which version is compatible with other requirements. This could take a while.'), Constant(value='This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.')]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='rejecting_candidate', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='criterion', annotation=Name(id='Any', ctx=Load())), arg(arg='candidate', annotation=Name(id='Candidate', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[AugAssign(target=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='reject_count_by_package', ctx=Load()), slice=Attribute(value=Name(id='candidate', ctx=Load()), attr='name', ctx=Load()), ctx=Store()), op=Add(), value=Constant(value=1)), Assign(targets=[Name(id='count', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='reject_count_by_package', ctx=Load()), slice=Attribute(value=Name(id='candidate', ctx=Load()), attr='name', ctx=Load()), ctx=Load())), If(test=Compare(left=Name(id='count', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_messages_at_reject_count', ctx=Load())]), body=[Return()], orelse=[]), Assign(targets=[Name(id='message', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_messages_at_reject_count', ctx=Load()), slice=Name(id='count', ctx=Load()), ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='INFO: %s'), Call(func=Attribute(value=Name(id='message', ctx=Load()), attr='format', ctx=Load()), args=[], keywords=[keyword(arg='package_name', value=Attribute(value=Name(id='candidate', ctx=Load()), attr='name', ctx=Load()))])], keywords=[])), Assign(targets=[Name(id='msg', ctx=Store())], value=Constant(value='Will try a different candidate, due to conflict:')), For(target=Name(id='req_info', ctx=Store()), iter=Attribute(value=Name(id='criterion', ctx=Load()), attr='information', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='req', ctx=Store()), Name(id='parent', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='req_info', ctx=Load()), attr='requirement', ctx=Load()), Attribute(value=Name(id='req_info', ctx=Load()), attr='parent', ctx=Load())], ctx=Load())), AugAssign(target=Name(id='msg', ctx=Store()), op=Add(), value=Constant(value='\n    ')), If(test=Name(id='parent', ctx=Load()), body=[AugAssign(target=Name(id='msg', ctx=Store()), op=Add(), value=JoinedStr(values=[FormattedValue(value=Attribute(value=Name(id='parent', ctx=Load()), attr='name', ctx=Load()), conversion=-1), Constant(value=' '), FormattedValue(value=Attribute(value=Name(id='parent', ctx=Load()), attr='version', ctx=Load()), conversion=-1), Constant(value=' depends on ')]))], orelse=[AugAssign(target=Name(id='msg', ctx=Store()), op=Add(), value=Constant(value='The user requested '))]), AugAssign(target=Name(id='msg', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Name(id='req', ctx=Load()), attr='format_for_error', ctx=Load()), args=[], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Name(id='msg', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None))], decorator_list=[]), ClassDef(name='PipDebuggingReporter', bases=[Name(id='BaseReporter', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='A reporter that does an info log for every event it sees.')), FunctionDef(name='starting', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Reporter.starting()')], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='starting_round', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='index', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Reporter.starting_round(%r)'), Name(id='index', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='ending_round', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='index', annotation=Name(id='int', ctx=Load())), arg(arg='state', annotation=Name(id='Any', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Reporter.ending_round(%r, state)'), Name(id='index', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='ending', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='state', annotation=Name(id='Any', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Reporter.ending(%r)'), Name(id='state', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='adding_requirement', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='requirement', annotation=Name(id='Requirement', ctx=Load())), arg(arg='parent', annotation=Name(id='Candidate', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Reporter.adding_requirement(%r, %r)'), Name(id='requirement', ctx=Load()), Name(id='parent', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='rejecting_candidate', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='criterion', annotation=Name(id='Any', ctx=Load())), arg(arg='candidate', annotation=Name(id='Candidate', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Reporter.rejecting_candidate(%r, %r)'), Name(id='criterion', ctx=Load()), Name(id='candidate', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='pinning', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='candidate', annotation=Name(id='Candidate', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Reporter.pinning(%r)'), Name(id='candidate', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None))], decorator_list=[])], type_ignores=[])