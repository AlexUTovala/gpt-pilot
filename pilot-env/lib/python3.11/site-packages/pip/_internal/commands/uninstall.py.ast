Module(body=[Import(names=[alias(name='logging')]), ImportFrom(module='optparse', names=[alias(name='Values')], level=0), ImportFrom(module='typing', names=[alias(name='List')], level=0), ImportFrom(module='pip._vendor.packaging.utils', names=[alias(name='canonicalize_name')], level=0), ImportFrom(module='pip._internal.cli', names=[alias(name='cmdoptions')], level=0), ImportFrom(module='pip._internal.cli.base_command', names=[alias(name='Command')], level=0), ImportFrom(module='pip._internal.cli.req_command', names=[alias(name='SessionCommandMixin'), alias(name='warn_if_run_as_root')], level=0), ImportFrom(module='pip._internal.cli.status_codes', names=[alias(name='SUCCESS')], level=0), ImportFrom(module='pip._internal.exceptions', names=[alias(name='InstallationError')], level=0), ImportFrom(module='pip._internal.req', names=[alias(name='parse_requirements')], level=0), ImportFrom(module='pip._internal.req.constructors', names=[alias(name='install_req_from_line'), alias(name='install_req_from_parsed_requirement')], level=0), ImportFrom(module='pip._internal.utils.misc', names=[alias(name='check_externally_managed'), alias(name='protect_pip_from_modification_on_windows')], level=0), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Name(id='__name__', ctx=Load())], keywords=[])), ClassDef(name='UninstallCommand', bases=[Name(id='Command', ctx=Load()), Name(id='SessionCommandMixin', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    Uninstall packages.\n\n    pip is able to uninstall most installed packages. Known exceptions are:\n\n    - Pure distutils packages installed with ``python setup.py install``, which\n      leave behind no metadata to determine what files were installed.\n    - Script wrappers installed by ``python setup.py develop``.\n    ')), Assign(targets=[Name(id='usage', ctx=Store())], value=Constant(value='\n      %prog [options] <package> ...\n      %prog [options] -r <requirements file> ...')), FunctionDef(name='add_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cmd_opts', ctx=Load()), attr='add_option', ctx=Load()), args=[Constant(value='-r'), Constant(value='--requirement')], keywords=[keyword(arg='dest', value=Constant(value='requirements')), keyword(arg='action', value=Constant(value='append')), keyword(arg='default', value=List(elts=[], ctx=Load())), keyword(arg='metavar', value=Constant(value='file')), keyword(arg='help', value=Constant(value='Uninstall all the packages listed in the given requirements file.  This option can be used multiple times.'))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cmd_opts', ctx=Load()), attr='add_option', ctx=Load()), args=[Constant(value='-y'), Constant(value='--yes')], keywords=[keyword(arg='dest', value=Constant(value='yes')), keyword(arg='action', value=Constant(value='store_true')), keyword(arg='help', value=Constant(value="Don't ask for confirmation of uninstall deletions."))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cmd_opts', ctx=Load()), attr='add_option', ctx=Load()), args=[Call(func=Attribute(value=Name(id='cmdoptions', ctx=Load()), attr='root_user_action', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cmd_opts', ctx=Load()), attr='add_option', ctx=Load()), args=[Call(func=Attribute(value=Name(id='cmdoptions', ctx=Load()), attr='override_externally_managed', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='parser', ctx=Load()), attr='insert_option_group', ctx=Load()), args=[Constant(value=0), Attribute(value=Name(id='self', ctx=Load()), attr='cmd_opts', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='options', annotation=Name(id='Values', ctx=Load())), arg(arg='args', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='session', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_default_session', ctx=Load()), args=[Name(id='options', ctx=Load())], keywords=[])), Assign(targets=[Name(id='reqs_to_uninstall', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Name(id='name', ctx=Store()), iter=Name(id='args', ctx=Load()), body=[Assign(targets=[Name(id='req', ctx=Store())], value=Call(func=Name(id='install_req_from_line', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[keyword(arg='isolated', value=Attribute(value=Name(id='options', ctx=Load()), attr='isolated_mode', ctx=Load()))])), If(test=Attribute(value=Name(id='req', ctx=Load()), attr='name', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='reqs_to_uninstall', ctx=Load()), slice=Call(func=Name(id='canonicalize_name', ctx=Load()), args=[Attribute(value=Name(id='req', ctx=Load()), attr='name', ctx=Load())], keywords=[]), ctx=Store())], value=Name(id='req', ctx=Load()))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[Constant(value='Invalid requirement: %r ignored - the uninstall command expects named requirements.'), Name(id='name', ctx=Load())], keywords=[]))])], orelse=[]), For(target=Name(id='filename', ctx=Store()), iter=Attribute(value=Name(id='options', ctx=Load()), attr='requirements', ctx=Load()), body=[For(target=Name(id='parsed_req', ctx=Store()), iter=Call(func=Name(id='parse_requirements', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[keyword(arg='options', value=Name(id='options', ctx=Load())), keyword(arg='session', value=Name(id='session', ctx=Load()))]), body=[Assign(targets=[Name(id='req', ctx=Store())], value=Call(func=Name(id='install_req_from_parsed_requirement', ctx=Load()), args=[Name(id='parsed_req', ctx=Load())], keywords=[keyword(arg='isolated', value=Attribute(value=Name(id='options', ctx=Load()), attr='isolated_mode', ctx=Load()))])), If(test=Attribute(value=Name(id='req', ctx=Load()), attr='name', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='reqs_to_uninstall', ctx=Load()), slice=Call(func=Name(id='canonicalize_name', ctx=Load()), args=[Attribute(value=Name(id='req', ctx=Load()), attr='name', ctx=Load())], keywords=[]), ctx=Store())], value=Name(id='req', ctx=Load()))], orelse=[])], orelse=[])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='reqs_to_uninstall', ctx=Load())), body=[Raise(exc=Call(func=Name(id='InstallationError', ctx=Load()), args=[JoinedStr(values=[Constant(value='You must give at least one requirement to '), FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), conversion=-1), Constant(value=' (see "pip help '), FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), conversion=-1), Constant(value='")')])], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='options', ctx=Load()), attr='override_externally_managed', ctx=Load())), body=[Expr(value=Call(func=Name(id='check_externally_managed', ctx=Load()), args=[], keywords=[]))], orelse=[]), Expr(value=Call(func=Name(id='protect_pip_from_modification_on_windows', ctx=Load()), args=[], keywords=[keyword(arg='modifying_pip', value=Compare(left=Constant(value='pip'), ops=[In()], comparators=[Name(id='reqs_to_uninstall', ctx=Load())]))])), For(target=Name(id='req', ctx=Store()), iter=Call(func=Attribute(value=Name(id='reqs_to_uninstall', ctx=Load()), attr='values', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='uninstall_pathset', ctx=Store())], value=Call(func=Attribute(value=Name(id='req', ctx=Load()), attr='uninstall', ctx=Load()), args=[], keywords=[keyword(arg='auto_confirm', value=Attribute(value=Name(id='options', ctx=Load()), attr='yes', ctx=Load())), keyword(arg='verbose', value=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='verbosity', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]))])), If(test=Name(id='uninstall_pathset', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='uninstall_pathset', ctx=Load()), attr='commit', ctx=Load()), args=[], keywords=[]))], orelse=[])], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='options', ctx=Load()), attr='root_user_action', ctx=Load()), ops=[Eq()], comparators=[Constant(value='warn')]), body=[Expr(value=Call(func=Name(id='warn_if_run_as_root', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Name(id='SUCCESS', ctx=Load()))], decorator_list=[], returns=Name(id='int', ctx=Load()))], decorator_list=[])], type_ignores=[])