Module(body=[Import(names=[alias(name='os')]), Import(names=[alias(name='textwrap')]), ImportFrom(module='optparse', names=[alias(name='Values')], level=0), ImportFrom(module='typing', names=[alias(name='Any'), alias(name='List')], level=0), ImportFrom(module='pip._internal.cli.base_command', names=[alias(name='Command')], level=0), ImportFrom(module='pip._internal.cli.status_codes', names=[alias(name='ERROR'), alias(name='SUCCESS')], level=0), ImportFrom(module='pip._internal.exceptions', names=[alias(name='CommandError'), alias(name='PipError')], level=0), ImportFrom(module='pip._internal.utils', names=[alias(name='filesystem')], level=0), ImportFrom(module='pip._internal.utils.logging', names=[alias(name='getLogger')], level=0), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Name(id='getLogger', ctx=Load()), args=[Name(id='__name__', ctx=Load())], keywords=[])), ClassDef(name='CacheCommand', bases=[Name(id='Command', ctx=Load())], keywords=[], body=[Expr(value=Constant(value="\n    Inspect and manage pip's wheel cache.\n\n    Subcommands:\n\n    - dir: Show the cache directory.\n    - info: Show information about the cache.\n    - list: List filenames of packages stored in the cache.\n    - remove: Remove one or more package from the cache.\n    - purge: Remove all items from the cache.\n\n    ``<pattern>`` can be a glob expression or a package name.\n    ")), Assign(targets=[Name(id='ignore_require_venv', ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='usage', ctx=Store())], value=Constant(value='\n        %prog dir\n        %prog info\n        %prog list [<pattern>] [--format=[human, abspath]]\n        %prog remove <pattern>\n        %prog purge\n    ')), FunctionDef(name='add_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cmd_opts', ctx=Load()), attr='add_option', ctx=Load()), args=[Constant(value='--format')], keywords=[keyword(arg='action', value=Constant(value='store')), keyword(arg='dest', value=Constant(value='list_format')), keyword(arg='default', value=Constant(value='human')), keyword(arg='choices', value=Tuple(elts=[Constant(value='human'), Constant(value='abspath')], ctx=Load())), keyword(arg='help', value=Constant(value='Select the output format among: human (default) or abspath'))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='parser', ctx=Load()), attr='insert_option_group', ctx=Load()), args=[Constant(value=0), Attribute(value=Name(id='self', ctx=Load()), attr='cmd_opts', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='options', annotation=Name(id='Values', ctx=Load())), arg(arg='args', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='handlers', ctx=Store())], value=Dict(keys=[Constant(value='dir'), Constant(value='info'), Constant(value='list'), Constant(value='remove'), Constant(value='purge')], values=[Attribute(value=Name(id='self', ctx=Load()), attr='get_cache_dir', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='get_cache_info', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='list_cache_items', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='remove_cache_items', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='purge_cache', ctx=Load())])), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='options', ctx=Load()), attr='cache_dir', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load()), args=[Constant(value='pip cache commands can not function since cache is disabled.')], keywords=[])), Return(value=Name(id='ERROR', ctx=Load()))], orelse=[]), If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Name(id='args', ctx=Load())), Compare(left=Subscript(value=Name(id='args', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[NotIn()], comparators=[Name(id='handlers', ctx=Load())])]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load()), args=[Constant(value='Need an action (%s) to perform.'), Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[Call(func=Name(id='sorted', ctx=Load()), args=[Name(id='handlers', ctx=Load())], keywords=[])], keywords=[])], keywords=[])), Return(value=Name(id='ERROR', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='action', ctx=Store())], value=Subscript(value=Name(id='args', ctx=Load()), slice=Constant(value=0), ctx=Load())), Try(body=[Expr(value=Call(func=Subscript(value=Name(id='handlers', ctx=Load()), slice=Name(id='action', ctx=Load()), ctx=Load()), args=[Name(id='options', ctx=Load()), Subscript(value=Name(id='args', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='PipError', ctx=Load()), name='e', body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='e', ctx=Load()), attr='args', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[])), Return(value=Name(id='ERROR', ctx=Load()))])], orelse=[], finalbody=[]), Return(value=Name(id='SUCCESS', ctx=Load()))], decorator_list=[], returns=Name(id='int', ctx=Load())), FunctionDef(name='get_cache_dir', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='options', annotation=Name(id='Values', ctx=Load())), arg(arg='args', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='Any', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Name(id='args', ctx=Load()), body=[Raise(exc=Call(func=Name(id='CommandError', ctx=Load()), args=[Constant(value='Too many arguments')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Attribute(value=Name(id='options', ctx=Load()), attr='cache_dir', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='get_cache_info', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='options', annotation=Name(id='Values', ctx=Load())), arg(arg='args', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='Any', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Name(id='args', ctx=Load()), body=[Raise(exc=Call(func=Name(id='CommandError', ctx=Load()), args=[Constant(value='Too many arguments')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='num_http_files', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_find_http_files', ctx=Load()), args=[Name(id='options', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='num_packages', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_find_wheels', ctx=Load()), args=[Name(id='options', ctx=Load()), Constant(value='*')], keywords=[])], keywords=[])), Assign(targets=[Name(id='http_cache_location', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_cache_dir', ctx=Load()), args=[Name(id='options', ctx=Load()), Constant(value='http-v2')], keywords=[])), Assign(targets=[Name(id='old_http_cache_location', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_cache_dir', ctx=Load()), args=[Name(id='options', ctx=Load()), Constant(value='http')], keywords=[])), Assign(targets=[Name(id='wheels_cache_location', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_cache_dir', ctx=Load()), args=[Name(id='options', ctx=Load()), Constant(value='wheels')], keywords=[])), Assign(targets=[Name(id='http_cache_size', ctx=Store())], value=Call(func=Attribute(value=Name(id='filesystem', ctx=Load()), attr='format_size', ctx=Load()), args=[BinOp(left=Call(func=Attribute(value=Name(id='filesystem', ctx=Load()), attr='directory_size', ctx=Load()), args=[Name(id='http_cache_location', ctx=Load())], keywords=[]), op=Add(), right=Call(func=Attribute(value=Name(id='filesystem', ctx=Load()), attr='directory_size', ctx=Load()), args=[Name(id='old_http_cache_location', ctx=Load())], keywords=[]))], keywords=[])), Assign(targets=[Name(id='wheels_cache_size', ctx=Store())], value=Call(func=Attribute(value=Name(id='filesystem', ctx=Load()), attr='format_directory_size', ctx=Load()), args=[Name(id='wheels_cache_location', ctx=Load())], keywords=[])), Assign(targets=[Name(id='message', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='textwrap', ctx=Load()), attr='dedent', ctx=Load()), args=[Constant(value='\n                    Package index page cache location (pip v23.3+): {http_cache_location}\n                    Package index page cache location (older pips): {old_http_cache_location}\n                    Package index page cache size: {http_cache_size}\n                    Number of HTTP files: {num_http_files}\n                    Locally built wheels location: {wheels_cache_location}\n                    Locally built wheels size: {wheels_cache_size}\n                    Number of locally built wheels: {package_count}\n                ')], keywords=[]), attr='format', ctx=Load()), args=[], keywords=[keyword(arg='http_cache_location', value=Name(id='http_cache_location', ctx=Load())), keyword(arg='old_http_cache_location', value=Name(id='old_http_cache_location', ctx=Load())), keyword(arg='http_cache_size', value=Name(id='http_cache_size', ctx=Load())), keyword(arg='num_http_files', value=Name(id='num_http_files', ctx=Load())), keyword(arg='wheels_cache_location', value=Name(id='wheels_cache_location', ctx=Load())), keyword(arg='package_count', value=Name(id='num_packages', ctx=Load())), keyword(arg='wheels_cache_size', value=Name(id='wheels_cache_size', ctx=Load()))]), attr='strip', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='list_cache_items', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='options', annotation=Name(id='Values', ctx=Load())), arg(arg='args', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='Any', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=1)]), body=[Raise(exc=Call(func=Name(id='CommandError', ctx=Load()), args=[Constant(value='Too many arguments')], keywords=[]))], orelse=[]), If(test=Name(id='args', ctx=Load()), body=[Assign(targets=[Name(id='pattern', ctx=Store())], value=Subscript(value=Name(id='args', ctx=Load()), slice=Constant(value=0), ctx=Load()))], orelse=[Assign(targets=[Name(id='pattern', ctx=Store())], value=Constant(value='*'))]), Assign(targets=[Name(id='files', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_find_wheels', ctx=Load()), args=[Name(id='options', ctx=Load()), Name(id='pattern', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='options', ctx=Load()), attr='list_format', ctx=Load()), ops=[Eq()], comparators=[Constant(value='human')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='format_for_human', ctx=Load()), args=[Name(id='files', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='format_for_abspath', ctx=Load()), args=[Name(id='files', ctx=Load())], keywords=[]))])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='format_for_human', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='files', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Name(id='files', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='No locally built wheels cached.')], keywords=[])), Return()], orelse=[]), Assign(targets=[Name(id='results', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='filename', ctx=Store()), iter=Name(id='files', ctx=Load()), body=[Assign(targets=[Name(id='wheel', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])), Assign(targets=[Name(id='size', ctx=Store())], value=Call(func=Attribute(value=Name(id='filesystem', ctx=Load()), attr='format_file_size', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='results', ctx=Load()), attr='append', ctx=Load()), args=[JoinedStr(values=[Constant(value=' - '), FormattedValue(value=Name(id='wheel', ctx=Load()), conversion=-1), Constant(value=' ('), FormattedValue(value=Name(id='size', ctx=Load()), conversion=-1), Constant(value=')')])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Cache contents:\n')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='\n'), attr='join', ctx=Load()), args=[Call(func=Name(id='sorted', ctx=Load()), args=[Name(id='results', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='format_for_abspath', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='files', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Name(id='files', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='\n'), attr='join', ctx=Load()), args=[Call(func=Name(id='sorted', ctx=Load()), args=[Name(id='files', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='remove_cache_items', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='options', annotation=Name(id='Values', ctx=Load())), arg(arg='args', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='Any', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=1)]), body=[Raise(exc=Call(func=Name(id='CommandError', ctx=Load()), args=[Constant(value='Too many arguments')], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='args', ctx=Load())), body=[Raise(exc=Call(func=Name(id='CommandError', ctx=Load()), args=[Constant(value='Please provide a pattern')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='files', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_find_wheels', ctx=Load()), args=[Name(id='options', ctx=Load()), Subscript(value=Name(id='args', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[])), Assign(targets=[Name(id='no_matching_msg', ctx=Store())], value=Constant(value='No matching packages')), If(test=Compare(left=Subscript(value=Name(id='args', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[Eq()], comparators=[Constant(value='*')]), body=[AugAssign(target=Name(id='files', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_find_http_files', ctx=Load()), args=[Name(id='options', ctx=Load())], keywords=[]))], orelse=[AugAssign(target=Name(id='no_matching_msg', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Constant(value=' for pattern "{}"'), attr='format', ctx=Load()), args=[Subscript(value=Name(id='args', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[]))]), If(test=UnaryOp(op=Not(), operand=Name(id='files', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[Name(id='no_matching_msg', ctx=Load())], keywords=[]))], orelse=[]), For(target=Name(id='filename', ctx=Store()), iter=Name(id='files', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='unlink', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='verbose', ctx=Load()), args=[Constant(value='Removed %s'), Name(id='filename', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Files removed: %s'), Call(func=Name(id='len', ctx=Load()), args=[Name(id='files', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='purge_cache', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='options', annotation=Name(id='Values', ctx=Load())), arg(arg='args', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='Any', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Name(id='args', ctx=Load()), body=[Raise(exc=Call(func=Name(id='CommandError', ctx=Load()), args=[Constant(value='Too many arguments')], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='remove_cache_items', ctx=Load()), args=[Name(id='options', ctx=Load()), List(elts=[Constant(value='*')], ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_cache_dir', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='options', annotation=Name(id='Values', ctx=Load())), arg(arg='subdir', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='options', ctx=Load()), attr='cache_dir', ctx=Load()), Name(id='subdir', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='_find_http_files', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='options', annotation=Name(id='Values', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='old_http_dir', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_cache_dir', ctx=Load()), args=[Name(id='options', ctx=Load()), Constant(value='http')], keywords=[])), Assign(targets=[Name(id='new_http_dir', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_cache_dir', ctx=Load()), args=[Name(id='options', ctx=Load()), Constant(value='http-v2')], keywords=[])), Return(value=BinOp(left=Call(func=Attribute(value=Name(id='filesystem', ctx=Load()), attr='find_files', ctx=Load()), args=[Name(id='old_http_dir', ctx=Load()), Constant(value='*')], keywords=[]), op=Add(), right=Call(func=Attribute(value=Name(id='filesystem', ctx=Load()), attr='find_files', ctx=Load()), args=[Name(id='new_http_dir', ctx=Load()), Constant(value='*')], keywords=[])))], decorator_list=[], returns=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='_find_wheels', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='options', annotation=Name(id='Values', ctx=Load())), arg(arg='pattern', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='wheel_dir', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_cache_dir', ctx=Load()), args=[Name(id='options', ctx=Load()), Constant(value='wheels')], keywords=[])), Assign(targets=[Name(id='pattern', ctx=Store())], value=BinOp(left=Name(id='pattern', ctx=Load()), op=Add(), right=IfExp(test=Compare(left=Constant(value='-'), ops=[In()], comparators=[Name(id='pattern', ctx=Load())]), body=Constant(value='*.whl'), orelse=Constant(value='-*.whl')))), Return(value=Call(func=Attribute(value=Name(id='filesystem', ctx=Load()), attr='find_files', ctx=Load()), args=[Name(id='wheel_dir', ctx=Load()), Name(id='pattern', ctx=Load())], keywords=[]))], decorator_list=[], returns=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], decorator_list=[])], type_ignores=[])