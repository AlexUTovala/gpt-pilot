Module(body=[Import(names=[alias(name='logging')]), Import(names=[alias(name='os')]), ImportFrom(module='typing', names=[alias(name='Optional')], level=0), ImportFrom(module='pip._vendor.pyproject_hooks', names=[alias(name='BuildBackendHookCaller'), alias(name='HookMissing')], level=0), ImportFrom(module='pip._internal.utils.subprocess', names=[alias(name='runner_with_spinner_message')], level=0), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Name(id='__name__', ctx=Load())], keywords=[])), FunctionDef(name='build_wheel_editable', args=arguments(posonlyargs=[], args=[arg(arg='name', annotation=Name(id='str', ctx=Load())), arg(arg='backend', annotation=Name(id='BuildBackendHookCaller', ctx=Load())), arg(arg='metadata_directory', annotation=Name(id='str', ctx=Load())), arg(arg='tempd', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Build one InstallRequirement using the PEP 660 build process.\n\n    Returns path to wheel if successfully built. Otherwise, returns None.\n    ')), Assert(test=Compare(left=Name(id='metadata_directory', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Destination directory: %s'), Name(id='tempd', ctx=Load())], keywords=[])), Assign(targets=[Name(id='runner', ctx=Store())], value=Call(func=Name(id='runner_with_spinner_message', ctx=Load()), args=[JoinedStr(values=[Constant(value='Building editable for '), FormattedValue(value=Name(id='name', ctx=Load()), conversion=-1), Constant(value=' (pyproject.toml)')])], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='backend', ctx=Load()), attr='subprocess_runner', ctx=Load()), args=[Name(id='runner', ctx=Load())], keywords=[]))], body=[Try(body=[Assign(targets=[Name(id='wheel_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='backend', ctx=Load()), attr='build_editable', ctx=Load()), args=[Name(id='tempd', ctx=Load())], keywords=[keyword(arg='metadata_directory', value=Name(id='metadata_directory', ctx=Load()))]))], handlers=[ExceptHandler(type=Name(id='HookMissing', ctx=Load()), name='e', body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load()), args=[Constant(value='Cannot build editable %s because the build backend does not have the %s hook'), Name(id='name', ctx=Load()), Name(id='e', ctx=Load())], keywords=[])), Return(value=Constant(value=None))])], orelse=[], finalbody=[])])], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load()), args=[Constant(value='Failed building editable for %s'), Name(id='name', ctx=Load())], keywords=[])), Return(value=Constant(value=None))])], orelse=[], finalbody=[]), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='tempd', ctx=Load()), Name(id='wheel_name', ctx=Load())], keywords=[]))], decorator_list=[], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], type_ignores=[])