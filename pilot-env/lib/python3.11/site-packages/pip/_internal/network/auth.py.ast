Module(body=[Expr(value=Constant(value='Network Authentication Helpers\n\nContains interface (MultiDomainBasicAuth) and associated glue code for\nproviding credentials in the context of network requests.\n')), Import(names=[alias(name='logging')]), Import(names=[alias(name='os')]), Import(names=[alias(name='shutil')]), Import(names=[alias(name='subprocess')]), Import(names=[alias(name='sysconfig')]), Import(names=[alias(name='typing')]), Import(names=[alias(name='urllib.parse')]), ImportFrom(module='abc', names=[alias(name='ABC'), alias(name='abstractmethod')], level=0), ImportFrom(module='functools', names=[alias(name='lru_cache')], level=0), ImportFrom(module='os.path', names=[alias(name='commonprefix')], level=0), ImportFrom(module='pathlib', names=[alias(name='Path')], level=0), ImportFrom(module='typing', names=[alias(name='Any'), alias(name='Dict'), alias(name='List'), alias(name='NamedTuple'), alias(name='Optional'), alias(name='Tuple')], level=0), ImportFrom(module='pip._vendor.requests.auth', names=[alias(name='AuthBase'), alias(name='HTTPBasicAuth')], level=0), ImportFrom(module='pip._vendor.requests.models', names=[alias(name='Request'), alias(name='Response')], level=0), ImportFrom(module='pip._vendor.requests.utils', names=[alias(name='get_netrc_auth')], level=0), ImportFrom(module='pip._internal.utils.logging', names=[alias(name='getLogger')], level=0), ImportFrom(module='pip._internal.utils.misc', names=[alias(name='ask'), alias(name='ask_input'), alias(name='ask_password'), alias(name='remove_auth_from_url'), alias(name='split_auth_netloc_from_url')], level=0), ImportFrom(module='pip._internal.vcs.versioncontrol', names=[alias(name='AuthInfo')], level=0), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Name(id='getLogger', ctx=Load()), args=[Name(id='__name__', ctx=Load())], keywords=[])), Assign(targets=[Name(id='KEYRING_DISABLED', ctx=Store())], value=Constant(value=False)), ClassDef(name='Credentials', bases=[Name(id='NamedTuple', ctx=Load())], keywords=[], body=[AnnAssign(target=Name(id='url', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1), AnnAssign(target=Name(id='username', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1), AnnAssign(target=Name(id='password', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1)], decorator_list=[]), ClassDef(name='KeyRingBaseProvider', bases=[Name(id='ABC', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Keyring base provider interface')), AnnAssign(target=Name(id='has_keyring', ctx=Store()), annotation=Name(id='bool', ctx=Load()), simple=1), FunctionDef(name='get_auth_info', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url', annotation=Name(id='str', ctx=Load())), arg(arg='username', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=Ellipsis))], decorator_list=[Name(id='abstractmethod', ctx=Load())], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='AuthInfo', ctx=Load()), ctx=Load())), FunctionDef(name='save_auth_info', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url', annotation=Name(id='str', ctx=Load())), arg(arg='username', annotation=Name(id='str', ctx=Load())), arg(arg='password', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=Ellipsis))], decorator_list=[Name(id='abstractmethod', ctx=Load())], returns=Constant(value=None))], decorator_list=[]), ClassDef(name='KeyRingNullProvider', bases=[Name(id='KeyRingBaseProvider', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Keyring null provider')), Assign(targets=[Name(id='has_keyring', ctx=Store())], value=Constant(value=False)), FunctionDef(name='get_auth_info', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url', annotation=Name(id='str', ctx=Load())), arg(arg='username', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=None))], decorator_list=[], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='AuthInfo', ctx=Load()), ctx=Load())), FunctionDef(name='save_auth_info', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url', annotation=Name(id='str', ctx=Load())), arg(arg='username', annotation=Name(id='str', ctx=Load())), arg(arg='password', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=None))], decorator_list=[], returns=Constant(value=None))], decorator_list=[]), ClassDef(name='KeyRingPythonProvider', bases=[Name(id='KeyRingBaseProvider', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Keyring interface which uses locally imported `keyring`')), Assign(targets=[Name(id='has_keyring', ctx=Store())], value=Constant(value=True)), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Import(names=[alias(name='keyring')]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='keyring', ctx=Store())], value=Name(id='keyring', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='get_auth_info', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url', annotation=Name(id='str', ctx=Load())), arg(arg='username', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='keyring', ctx=Load()), Constant(value='get_credential')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Getting credentials from keyring for %s'), Name(id='url', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cred', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='keyring', ctx=Load()), attr='get_credential', ctx=Load()), args=[Name(id='url', ctx=Load()), Name(id='username', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='cred', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Tuple(elts=[Attribute(value=Name(id='cred', ctx=Load()), attr='username', ctx=Load()), Attribute(value=Name(id='cred', ctx=Load()), attr='password', ctx=Load())], ctx=Load()))], orelse=[]), Return(value=Constant(value=None))], orelse=[]), If(test=Compare(left=Name(id='username', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Getting password from keyring for %s'), Name(id='url', ctx=Load())], keywords=[])), Assign(targets=[Name(id='password', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='keyring', ctx=Load()), attr='get_password', ctx=Load()), args=[Name(id='url', ctx=Load()), Name(id='username', ctx=Load())], keywords=[])), If(test=Name(id='password', ctx=Load()), body=[Return(value=Tuple(elts=[Name(id='username', ctx=Load()), Name(id='password', ctx=Load())], ctx=Load()))], orelse=[])], orelse=[]), Return(value=Constant(value=None))], decorator_list=[], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='AuthInfo', ctx=Load()), ctx=Load())), FunctionDef(name='save_auth_info', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url', annotation=Name(id='str', ctx=Load())), arg(arg='username', annotation=Name(id='str', ctx=Load())), arg(arg='password', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='keyring', ctx=Load()), attr='set_password', ctx=Load()), args=[Name(id='url', ctx=Load()), Name(id='username', ctx=Load()), Name(id='password', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None))], decorator_list=[]), ClassDef(name='KeyRingCliProvider', bases=[Name(id='KeyRingBaseProvider', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Provider which uses `keyring` cli\n\n    Instead of calling the keyring package installed alongside pip\n    we call keyring on the command line which will enable pip to\n    use which ever installation of keyring is available first in\n    PATH.\n    ')), Assign(targets=[Name(id='has_keyring', ctx=Store())], value=Constant(value=True)), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cmd', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='keyring', ctx=Store())], value=Name(id='cmd', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='get_auth_info', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url', annotation=Name(id='str', ctx=Load())), arg(arg='username', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='username', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='password', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_password', ctx=Load()), args=[Name(id='url', ctx=Load()), Name(id='username', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='password', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Tuple(elts=[Name(id='username', ctx=Load()), Name(id='password', ctx=Load())], ctx=Load()))], orelse=[])], orelse=[]), Return(value=Constant(value=None))], decorator_list=[], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='AuthInfo', ctx=Load()), ctx=Load())), FunctionDef(name='save_auth_info', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url', annotation=Name(id='str', ctx=Load())), arg(arg='username', annotation=Name(id='str', ctx=Load())), arg(arg='password', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_password', ctx=Load()), args=[Name(id='url', ctx=Load()), Name(id='username', ctx=Load()), Name(id='password', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_get_password', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='service_name', annotation=Name(id='str', ctx=Load())), arg(arg='username', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Mirror the implementation of keyring.get_password using cli')), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='keyring', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return(value=Constant(value=None))], orelse=[]), Assign(targets=[Name(id='cmd', ctx=Store())], value=List(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='keyring', ctx=Load()), Constant(value='get'), Name(id='service_name', ctx=Load()), Name(id='username', ctx=Load())], ctx=Load())), Assign(targets=[Name(id='env', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='env', ctx=Load()), slice=Constant(value='PYTHONIOENCODING'), ctx=Store())], value=Constant(value='utf-8')), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='subprocess', ctx=Load()), attr='run', ctx=Load()), args=[Name(id='cmd', ctx=Load())], keywords=[keyword(arg='stdin', value=Attribute(value=Name(id='subprocess', ctx=Load()), attr='DEVNULL', ctx=Load())), keyword(arg='stdout', value=Attribute(value=Name(id='subprocess', ctx=Load()), attr='PIPE', ctx=Load())), keyword(arg='env', value=Name(id='env', ctx=Load()))])), If(test=Attribute(value=Name(id='res', ctx=Load()), attr='returncode', ctx=Load()), body=[Return(value=Constant(value=None))], orelse=[]), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='res', ctx=Load()), attr='stdout', ctx=Load()), attr='decode', ctx=Load()), args=[Constant(value='utf-8')], keywords=[]), attr='strip', ctx=Load()), args=[Attribute(value=Name(id='os', ctx=Load()), attr='linesep', ctx=Load())], keywords=[]))], decorator_list=[], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='_set_password', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='service_name', annotation=Name(id='str', ctx=Load())), arg(arg='username', annotation=Name(id='str', ctx=Load())), arg(arg='password', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Mirror the implementation of keyring.set_password using cli')), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='keyring', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return(value=Constant(value=None))], orelse=[]), Assign(targets=[Name(id='env', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='env', ctx=Load()), slice=Constant(value='PYTHONIOENCODING'), ctx=Store())], value=Constant(value='utf-8')), Expr(value=Call(func=Attribute(value=Name(id='subprocess', ctx=Load()), attr='run', ctx=Load()), args=[List(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='keyring', ctx=Load()), Constant(value='set'), Name(id='service_name', ctx=Load()), Name(id='username', ctx=Load())], ctx=Load())], keywords=[keyword(arg='input', value=Call(func=Attribute(value=JoinedStr(values=[FormattedValue(value=Name(id='password', ctx=Load()), conversion=-1), FormattedValue(value=Attribute(value=Name(id='os', ctx=Load()), attr='linesep', ctx=Load()), conversion=-1)]), attr='encode', ctx=Load()), args=[Constant(value='utf-8')], keywords=[])), keyword(arg='env', value=Name(id='env', ctx=Load())), keyword(arg='check', value=Constant(value=True))])), Return(value=Constant(value=None))], decorator_list=[], returns=Constant(value=None))], decorator_list=[]), FunctionDef(name='get_keyring_provider', args=arguments(posonlyargs=[], args=[arg(arg='provider', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='verbose', ctx=Load()), args=[Constant(value='Keyring provider requested: %s'), Name(id='provider', ctx=Load())], keywords=[])), If(test=Name(id='KEYRING_DISABLED', ctx=Load()), body=[Assign(targets=[Name(id='provider', ctx=Store())], value=Constant(value='disabled'))], orelse=[]), If(test=Compare(left=Name(id='provider', ctx=Load()), ops=[In()], comparators=[List(elts=[Constant(value='import'), Constant(value='auto')], ctx=Load())]), body=[Try(body=[Assign(targets=[Name(id='impl', ctx=Store())], value=Call(func=Name(id='KeyRingPythonProvider', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='verbose', ctx=Load()), args=[Constant(value='Keyring provider set: import')], keywords=[])), Return(value=Name(id='impl', ctx=Load()))], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Pass()]), ExceptHandler(type=Name(id='Exception', ctx=Load()), name='exc', body=[Assign(targets=[Name(id='msg', ctx=Store())], value=Constant(value='Installed copy of keyring fails with exception %s')), If(test=Compare(left=Name(id='provider', ctx=Load()), ops=[Eq()], comparators=[Constant(value='auto')]), body=[Assign(targets=[Name(id='msg', ctx=Store())], value=BinOp(left=Name(id='msg', ctx=Load()), op=Add(), right=Constant(value=', trying to find a keyring executable as a fallback')))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[Name(id='msg', ctx=Load()), Name(id='exc', ctx=Load())], keywords=[keyword(arg='exc_info', value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='isEnabledFor', ctx=Load()), args=[Attribute(value=Name(id='logging', ctx=Load()), attr='DEBUG', ctx=Load())], keywords=[]))]))])], orelse=[], finalbody=[])], orelse=[]), If(test=Compare(left=Name(id='provider', ctx=Load()), ops=[In()], comparators=[List(elts=[Constant(value='subprocess'), Constant(value='auto')], ctx=Load())]), body=[Assign(targets=[Name(id='cli', ctx=Store())], value=Call(func=Attribute(value=Name(id='shutil', ctx=Load()), attr='which', ctx=Load()), args=[Constant(value='keyring')], keywords=[])), If(test=BoolOp(op=And(), values=[Name(id='cli', ctx=Load()), Call(func=Attribute(value=Name(id='cli', ctx=Load()), attr='startswith', ctx=Load()), args=[Call(func=Attribute(value=Name(id='sysconfig', ctx=Load()), attr='get_path', ctx=Load()), args=[Constant(value='scripts')], keywords=[])], keywords=[])]), body=[FunctionDef(name='PATH_as_shutil_which_determines_it', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='PATH'), Constant(value=None)], keywords=[])), If(test=Compare(left=Name(id='path', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Try(body=[Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='confstr', ctx=Load()), args=[Constant(value='CS_PATH')], keywords=[]))], handlers=[ExceptHandler(type=Tuple(elts=[Name(id='AttributeError', ctx=Load()), Name(id='ValueError', ctx=Load())], ctx=Load()), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Attribute(value=Name(id='os', ctx=Load()), attr='defpath', ctx=Load()))])], orelse=[], finalbody=[])], orelse=[]), Return(value=Name(id='path', ctx=Load()))], decorator_list=[Attribute(value=Name(id='typing', ctx=Load()), attr='no_type_check', ctx=Load())], returns=Name(id='str', ctx=Load())), Assign(targets=[Name(id='scripts', ctx=Store())], value=Call(func=Name(id='Path', ctx=Load()), args=[Call(func=Attribute(value=Name(id='sysconfig', ctx=Load()), attr='get_path', ctx=Load()), args=[Constant(value='scripts')], keywords=[])], keywords=[])), Assign(targets=[Name(id='paths', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='path', ctx=Store()), iter=Call(func=Attribute(value=Call(func=Name(id='PATH_as_shutil_which_determines_it', ctx=Load()), args=[], keywords=[]), attr='split', ctx=Load()), args=[Attribute(value=Name(id='os', ctx=Load()), attr='pathsep', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[])), Try(body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='samefile', ctx=Load()), args=[Name(id='scripts', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='paths', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))], orelse=[])], handlers=[ExceptHandler(type=Name(id='FileNotFoundError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], orelse=[]), Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='pathsep', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='paths', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cli', ctx=Store())], value=Call(func=Attribute(value=Name(id='shutil', ctx=Load()), attr='which', ctx=Load()), args=[Constant(value='keyring')], keywords=[keyword(arg='path', value=Name(id='path', ctx=Load()))]))], orelse=[]), If(test=Name(id='cli', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='verbose', ctx=Load()), args=[Constant(value='Keyring provider set: subprocess with executable %s'), Name(id='cli', ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='KeyRingCliProvider', ctx=Load()), args=[Name(id='cli', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='verbose', ctx=Load()), args=[Constant(value='Keyring provider set: disabled')], keywords=[])), Return(value=Call(func=Name(id='KeyRingNullProvider', ctx=Load()), args=[], keywords=[]))], decorator_list=[Call(func=Name(id='lru_cache', ctx=Load()), args=[], keywords=[keyword(arg='maxsize', value=Constant(value=None))])], returns=Name(id='KeyRingBaseProvider', ctx=Load())), ClassDef(name='MultiDomainBasicAuth', bases=[Name(id='AuthBase', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='prompting', annotation=Name(id='bool', ctx=Load())), arg(arg='index_urls', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), ctx=Load())), arg(arg='keyring_provider', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True), Constant(value=None), Constant(value='auto')]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='prompting', ctx=Store())], value=Name(id='prompting', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='index_urls', ctx=Store())], value=Name(id='index_urls', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='keyring_provider', ctx=Store())], value=Name(id='keyring_provider', ctx=Load())), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='passwords', ctx=Store()), annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='AuthInfo', ctx=Load())], ctx=Load()), ctx=Load()), value=Dict(keys=[], values=[]), simple=0), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_credentials_to_save', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='Credentials', ctx=Load()), ctx=Load()), value=Constant(value=None), simple=0)], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='keyring_provider', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='get_keyring_provider', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_keyring_provider', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='KeyRingBaseProvider', ctx=Load())), FunctionDef(name='keyring_provider', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='provider', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_keyring_provider', ctx=Store())], value=Name(id='provider', ctx=Load()))], decorator_list=[Attribute(value=Name(id='keyring_provider', ctx=Load()), attr='setter', ctx=Load())], returns=Constant(value=None)), FunctionDef(name='use_keyring', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='prompting', ctx=Load()), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_keyring_provider', ctx=Load()), ops=[NotIn()], comparators=[List(elts=[Constant(value='auto'), Constant(value='disabled')], ctx=Load())])]))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='_get_keyring_auth', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='username', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Return the tuple auth for a given url from keyring.')), If(test=UnaryOp(op=Not(), operand=Name(id='url', ctx=Load())), body=[Return(value=Constant(value=None))], orelse=[]), Try(body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='keyring_provider', ctx=Load()), attr='get_auth_info', ctx=Load()), args=[Name(id='url', ctx=Load()), Name(id='username', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='exc', body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[Constant(value='Keyring is skipped due to an exception: %s'), Call(func=Name(id='str', ctx=Load()), args=[Name(id='exc', ctx=Load())], keywords=[])], keywords=[])), Global(names=['KEYRING_DISABLED']), Assign(targets=[Name(id='KEYRING_DISABLED', ctx=Store())], value=Constant(value=True)), Expr(value=Call(func=Attribute(value=Name(id='get_keyring_provider', ctx=Load()), attr='cache_clear', ctx=Load()), args=[], keywords=[])), Return(value=Constant(value=None))])], orelse=[], finalbody=[])], decorator_list=[], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='AuthInfo', ctx=Load()), ctx=Load())), FunctionDef(name='_get_index_url', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Return the original index URL matching the requested URL.\n\n        Cached or dynamically generated credentials may work against\n        the original index URL rather than just the netloc.\n\n        The provided url should have had its username and password\n        removed already. If the original index url had credentials then\n        they will be included in the return value.\n\n        Returns None if no matching index was found, or if --no-index\n        was specified by the user.\n        ')), If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Name(id='url', ctx=Load())), UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='index_urls', ctx=Load()))]), body=[Return(value=Constant(value=None))], orelse=[]), Assign(targets=[Name(id='url', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Call(func=Name(id='remove_auth_from_url', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[]), attr='rstrip', ctx=Load()), args=[Constant(value='/')], keywords=[]), op=Add(), right=Constant(value='/'))), Assign(targets=[Name(id='parsed_url', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urlsplit', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), Assign(targets=[Name(id='candidates', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='index', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='index_urls', ctx=Load()), body=[Assign(targets=[Name(id='index', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='index', ctx=Load()), attr='rstrip', ctx=Load()), args=[Constant(value='/')], keywords=[]), op=Add(), right=Constant(value='/'))), Assign(targets=[Name(id='parsed_index', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urlsplit', ctx=Load()), args=[Call(func=Name(id='remove_auth_from_url', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[])], keywords=[])), If(test=Compare(left=Name(id='parsed_url', ctx=Load()), ops=[Eq()], comparators=[Name(id='parsed_index', ctx=Load())]), body=[Return(value=Name(id='index', ctx=Load()))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='parsed_url', ctx=Load()), attr='netloc', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='parsed_index', ctx=Load()), attr='netloc', ctx=Load())]), body=[Continue()], orelse=[]), Assign(targets=[Name(id='candidate', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urlsplit', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='candidates', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='candidate', ctx=Load())], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='candidates', ctx=Load())), body=[Return(value=Constant(value=None))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='candidates', ctx=Load()), attr='sort', ctx=Load()), args=[], keywords=[keyword(arg='reverse', value=Constant(value=True)), keyword(arg='key', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='candidate')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Call(func=Name(id='commonprefix', ctx=Load()), args=[List(elts=[Attribute(value=Name(id='parsed_url', ctx=Load()), attr='path', ctx=Load()), Attribute(value=Name(id='candidate', ctx=Load()), attr='path', ctx=Load())], ctx=Load())], keywords=[]), attr='rfind', ctx=Load()), args=[Constant(value='/')], keywords=[])))])), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urlunsplit', ctx=Load()), args=[Subscript(value=Name(id='candidates', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[]))], decorator_list=[], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='_get_new_credentials', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='original_url', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[arg(arg='allow_netrc', annotation=Name(id='bool', ctx=Load())), arg(arg='allow_keyring', annotation=Name(id='bool', ctx=Load()))], kw_defaults=[Constant(value=True), Constant(value=False)], defaults=[]), body=[Expr(value=Constant(value='Find and return credentials for the specified URL.')), Assign(targets=[Tuple(elts=[Name(id='url', ctx=Store()), Name(id='netloc', ctx=Store()), Name(id='url_user_password', ctx=Store())], ctx=Store())], value=Call(func=Name(id='split_auth_netloc_from_url', ctx=Load()), args=[Name(id='original_url', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='username', ctx=Store()), Name(id='password', ctx=Store())], ctx=Store())], value=Name(id='url_user_password', ctx=Load())), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='username', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Name(id='password', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Found credentials in url for %s'), Name(id='netloc', ctx=Load())], keywords=[])), Return(value=Name(id='url_user_password', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='index_url', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_index_url', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), If(test=Name(id='index_url', ctx=Load()), body=[Assign(targets=[Name(id='index_info', ctx=Store())], value=Call(func=Name(id='split_auth_netloc_from_url', ctx=Load()), args=[Name(id='index_url', ctx=Load())], keywords=[])), If(test=Name(id='index_info', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='index_url', ctx=Store()), Name(id='_', ctx=Store()), Name(id='index_url_user_password', ctx=Store())], ctx=Store())], value=Name(id='index_info', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Found index url %s'), Name(id='index_url', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), If(test=BoolOp(op=And(), values=[Name(id='index_url', ctx=Load()), Compare(left=Subscript(value=Name(id='index_url_user_password', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Assign(targets=[Tuple(elts=[Name(id='username', ctx=Store()), Name(id='password', ctx=Store())], ctx=Store())], value=Name(id='index_url_user_password', ctx=Load())), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='username', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Name(id='password', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Found credentials in index url for %s'), Name(id='netloc', ctx=Load())], keywords=[])), Return(value=Name(id='index_url_user_password', ctx=Load()))], orelse=[])], orelse=[]), If(test=Name(id='allow_netrc', ctx=Load()), body=[Assign(targets=[Name(id='netrc_auth', ctx=Store())], value=Call(func=Name(id='get_netrc_auth', ctx=Load()), args=[Name(id='original_url', ctx=Load())], keywords=[])), If(test=Name(id='netrc_auth', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Found credentials in netrc for %s'), Name(id='netloc', ctx=Load())], keywords=[])), Return(value=Name(id='netrc_auth', ctx=Load()))], orelse=[])], orelse=[]), If(test=Name(id='allow_keyring', ctx=Load()), body=[Assign(targets=[Name(id='kr_auth', ctx=Store())], value=BoolOp(op=Or(), values=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_keyring_auth', ctx=Load()), args=[Name(id='index_url', ctx=Load()), Name(id='username', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_keyring_auth', ctx=Load()), args=[Name(id='netloc', ctx=Load()), Name(id='username', ctx=Load())], keywords=[])])), If(test=Name(id='kr_auth', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Found credentials in keyring for %s'), Name(id='netloc', ctx=Load())], keywords=[])), Return(value=Name(id='kr_auth', ctx=Load()))], orelse=[])], orelse=[]), Return(value=Tuple(elts=[Name(id='username', ctx=Load()), Name(id='password', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Name(id='AuthInfo', ctx=Load())), FunctionDef(name='_get_url_and_credentials', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='original_url', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Return the credentials to use for the provided URL.\n\n        If allowed, netrc and keyring may be used to obtain the\n        correct credentials.\n\n        Returns (url_without_credentials, username, password). Note\n        that even if the original URL contains credentials, this\n        function may return a different username and password.\n        ')), Assign(targets=[Tuple(elts=[Name(id='url', ctx=Store()), Name(id='netloc', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Name(id='split_auth_netloc_from_url', ctx=Load()), args=[Name(id='original_url', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='username', ctx=Store()), Name(id='password', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_new_credentials', ctx=Load()), args=[Name(id='original_url', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[BoolOp(op=Or(), values=[Compare(left=Name(id='username', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Name(id='password', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])]), Compare(left=Name(id='netloc', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='passwords', ctx=Load())])]), body=[Assign(targets=[Tuple(elts=[Name(id='un', ctx=Store()), Name(id='pw', ctx=Store())], ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='passwords', ctx=Load()), slice=Name(id='netloc', ctx=Load()), ctx=Load())), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='username', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Name(id='username', ctx=Load()), ops=[Eq()], comparators=[Name(id='un', ctx=Load())])]), body=[Assign(targets=[Tuple(elts=[Name(id='username', ctx=Store()), Name(id='password', ctx=Store())], ctx=Store())], value=Tuple(elts=[Name(id='un', ctx=Load()), Name(id='pw', ctx=Load())], ctx=Load()))], orelse=[])], orelse=[]), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='username', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Name(id='password', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Assign(targets=[Name(id='username', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='username', ctx=Load()), Constant(value='')])), Assign(targets=[Name(id='password', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='password', ctx=Load()), Constant(value='')])), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='passwords', ctx=Load()), slice=Name(id='netloc', ctx=Load()), ctx=Store())], value=Tuple(elts=[Name(id='username', ctx=Load()), Name(id='password', ctx=Load())], ctx=Load()))], orelse=[]), Assert(test=BoolOp(op=Or(), values=[BoolOp(op=And(), values=[Compare(left=Name(id='username', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Name(id='password', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), BoolOp(op=And(), values=[Compare(left=Name(id='username', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Name(id='password', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])])]), msg=JoinedStr(values=[Constant(value='Could not load credentials from url: '), FormattedValue(value=Name(id='original_url', ctx=Load()), conversion=-1)])), Return(value=Tuple(elts=[Name(id='url', ctx=Load()), Name(id='username', ctx=Load()), Name(id='password', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='req', annotation=Name(id='Request', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='url', ctx=Store()), Name(id='username', ctx=Store()), Name(id='password', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_url_and_credentials', ctx=Load()), args=[Attribute(value=Name(id='req', ctx=Load()), attr='url', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='req', ctx=Load()), attr='url', ctx=Store())], value=Name(id='url', ctx=Load())), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='username', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Name(id='password', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Assign(targets=[Name(id='req', ctx=Store())], value=Call(func=Call(func=Name(id='HTTPBasicAuth', ctx=Load()), args=[Name(id='username', ctx=Load()), Name(id='password', ctx=Load())], keywords=[]), args=[Name(id='req', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='req', ctx=Load()), attr='register_hook', ctx=Load()), args=[Constant(value='response'), Attribute(value=Name(id='self', ctx=Load()), attr='handle_401', ctx=Load())], keywords=[])), Return(value=Name(id='req', ctx=Load()))], decorator_list=[], returns=Name(id='Request', ctx=Load())), FunctionDef(name='_prompt_for_password', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='netloc', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='username', ctx=Store())], value=IfExp(test=Attribute(value=Name(id='self', ctx=Load()), attr='prompting', ctx=Load()), body=Call(func=Name(id='ask_input', ctx=Load()), args=[JoinedStr(values=[Constant(value='User for '), FormattedValue(value=Name(id='netloc', ctx=Load()), conversion=-1), Constant(value=': ')])], keywords=[]), orelse=Constant(value=None))), If(test=UnaryOp(op=Not(), operand=Name(id='username', ctx=Load())), body=[Return(value=Tuple(elts=[Constant(value=None), Constant(value=None), Constant(value=False)], ctx=Load()))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='use_keyring', ctx=Load()), body=[Assign(targets=[Name(id='auth', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_keyring_auth', ctx=Load()), args=[Name(id='netloc', ctx=Load()), Name(id='username', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Name(id='auth', ctx=Load()), Compare(left=Subscript(value=Name(id='auth', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Subscript(value=Name(id='auth', ctx=Load()), slice=Constant(value=1), ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Return(value=Tuple(elts=[Subscript(value=Name(id='auth', ctx=Load()), slice=Constant(value=0), ctx=Load()), Subscript(value=Name(id='auth', ctx=Load()), slice=Constant(value=1), ctx=Load()), Constant(value=False)], ctx=Load()))], orelse=[])], orelse=[]), Assign(targets=[Name(id='password', ctx=Store())], value=Call(func=Name(id='ask_password', ctx=Load()), args=[Constant(value='Password: ')], keywords=[])), Return(value=Tuple(elts=[Name(id='username', ctx=Load()), Name(id='password', ctx=Load()), Constant(value=True)], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), Name(id='bool', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='_should_save_password_to_keyring', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='prompting', ctx=Load())), UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='use_keyring', ctx=Load())), UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='keyring_provider', ctx=Load()), attr='has_keyring', ctx=Load()))]), body=[Return(value=Constant(value=False))], orelse=[]), Return(value=Compare(left=Call(func=Name(id='ask', ctx=Load()), args=[Constant(value='Save credentials to keyring [y/N]: '), List(elts=[Constant(value='y'), Constant(value='n')], ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value='y')]))], decorator_list=[], returns=Name(id='bool', ctx=Load())), FunctionDef(name='handle_401', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resp', annotation=Name(id='Response', ctx=Load()))], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs', annotation=Name(id='Any', ctx=Load())), defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='resp', ctx=Load()), attr='status_code', ctx=Load()), ops=[NotEq()], comparators=[Constant(value=401)]), body=[Return(value=Name(id='resp', ctx=Load()))], orelse=[]), Assign(targets=[Tuple(elts=[Name(id='username', ctx=Store()), Name(id='password', ctx=Store())], ctx=Store())], value=Tuple(elts=[Constant(value=None), Constant(value=None)], ctx=Load())), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='use_keyring', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='username', ctx=Store()), Name(id='password', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_new_credentials', ctx=Load()), args=[Attribute(value=Name(id='resp', ctx=Load()), attr='url', ctx=Load())], keywords=[keyword(arg='allow_netrc', value=Constant(value=False)), keyword(arg='allow_keyring', value=Constant(value=True))]))], orelse=[]), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='prompting', ctx=Load())), UnaryOp(op=Not(), operand=Name(id='username', ctx=Load())), UnaryOp(op=Not(), operand=Name(id='password', ctx=Load()))]), body=[Return(value=Name(id='resp', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='parsed', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urlparse', ctx=Load()), args=[Attribute(value=Name(id='resp', ctx=Load()), attr='url', ctx=Load())], keywords=[])), Assign(targets=[Name(id='save', ctx=Store())], value=Constant(value=False)), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='username', ctx=Load())), UnaryOp(op=Not(), operand=Name(id='password', ctx=Load()))]), body=[Assign(targets=[Tuple(elts=[Name(id='username', ctx=Store()), Name(id='password', ctx=Store()), Name(id='save', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_prompt_for_password', ctx=Load()), args=[Attribute(value=Name(id='parsed', ctx=Load()), attr='netloc', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_credentials_to_save', ctx=Store())], value=Constant(value=None)), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='username', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Name(id='password', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='passwords', ctx=Load()), slice=Attribute(value=Name(id='parsed', ctx=Load()), attr='netloc', ctx=Load()), ctx=Store())], value=Tuple(elts=[Name(id='username', ctx=Load()), Name(id='password', ctx=Load())], ctx=Load())), If(test=BoolOp(op=And(), values=[Name(id='save', ctx=Load()), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_should_save_password_to_keyring', ctx=Load()), args=[], keywords=[])]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_credentials_to_save', ctx=Store())], value=Call(func=Name(id='Credentials', ctx=Load()), args=[], keywords=[keyword(arg='url', value=Attribute(value=Name(id='parsed', ctx=Load()), attr='netloc', ctx=Load())), keyword(arg='username', value=Name(id='username', ctx=Load())), keyword(arg='password', value=Name(id='password', ctx=Load()))]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='_', ctx=Store())], value=Attribute(value=Name(id='resp', ctx=Load()), attr='content', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='raw', ctx=Load()), attr='release_conn', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='req', ctx=Store())], value=Call(func=Call(func=Name(id='HTTPBasicAuth', ctx=Load()), args=[BoolOp(op=Or(), values=[Name(id='username', ctx=Load()), Constant(value='')]), BoolOp(op=Or(), values=[Name(id='password', ctx=Load()), Constant(value='')])], keywords=[]), args=[Attribute(value=Name(id='resp', ctx=Load()), attr='request', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='req', ctx=Load()), attr='register_hook', ctx=Load()), args=[Constant(value='response'), Attribute(value=Name(id='self', ctx=Load()), attr='warn_on_401', ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_credentials_to_save', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='req', ctx=Load()), attr='register_hook', ctx=Load()), args=[Constant(value='response'), Attribute(value=Name(id='self', ctx=Load()), attr='save_credentials', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='new_resp', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='connection', ctx=Load()), attr='send', ctx=Load()), args=[Name(id='req', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='new_resp', ctx=Load()), attr='history', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='resp', ctx=Load())], keywords=[])), Return(value=Name(id='new_resp', ctx=Load()))], decorator_list=[], returns=Name(id='Response', ctx=Load())), FunctionDef(name='warn_on_401', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resp', annotation=Name(id='Response', ctx=Load()))], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs', annotation=Name(id='Any', ctx=Load())), defaults=[]), body=[Expr(value=Constant(value='Response callback to warn about incorrect credentials.')), If(test=Compare(left=Attribute(value=Name(id='resp', ctx=Load()), attr='status_code', ctx=Load()), ops=[Eq()], comparators=[Constant(value=401)]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[Constant(value='401 Error, Credentials not correct for %s'), Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='request', ctx=Load()), attr='url', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='save_credentials', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resp', annotation=Name(id='Response', ctx=Load()))], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs', annotation=Name(id='Any', ctx=Load())), defaults=[]), body=[Expr(value=Constant(value='Response callback to save credentials on success.')), Assert(test=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='keyring_provider', ctx=Load()), attr='has_keyring', ctx=Load()), msg=Constant(value='should never reach here without keyring')), Assign(targets=[Name(id='creds', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_credentials_to_save', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_credentials_to_save', ctx=Store())], value=Constant(value=None)), If(test=BoolOp(op=And(), values=[Name(id='creds', ctx=Load()), Compare(left=Attribute(value=Name(id='resp', ctx=Load()), attr='status_code', ctx=Load()), ops=[Lt()], comparators=[Constant(value=400)])]), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Saving credentials to keyring')], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='keyring_provider', ctx=Load()), attr='save_auth_info', ctx=Load()), args=[Attribute(value=Name(id='creds', ctx=Load()), attr='url', ctx=Load()), Attribute(value=Name(id='creds', ctx=Load()), attr='username', ctx=Load()), Attribute(value=Name(id='creds', ctx=Load()), attr='password', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='exception', ctx=Load()), args=[Constant(value='Failed to save credentials')], keywords=[]))])], orelse=[], finalbody=[])], orelse=[])], decorator_list=[], returns=Constant(value=None))], decorator_list=[])], type_ignores=[])