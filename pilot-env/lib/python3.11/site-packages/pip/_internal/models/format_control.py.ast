Module(body=[ImportFrom(module='typing', names=[alias(name='FrozenSet'), alias(name='Optional'), alias(name='Set')], level=0), ImportFrom(module='pip._vendor.packaging.utils', names=[alias(name='canonicalize_name')], level=0), ImportFrom(module='pip._internal.exceptions', names=[alias(name='CommandError')], level=0), ClassDef(name='FormatControl', bases=[], keywords=[], body=[Expr(value=Constant(value='Helper for managing formats from which a package can be installed.')), Assign(targets=[Name(id='__slots__', ctx=Store())], value=List(elts=[Constant(value='no_binary'), Constant(value='only_binary')], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='no_binary', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), ctx=Load())), arg(arg='only_binary', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[If(test=Compare(left=Name(id='no_binary', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='no_binary', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='only_binary', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='only_binary', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='no_binary', ctx=Store())], value=Name(id='no_binary', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='only_binary', ctx=Store())], value=Name(id='only_binary', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__eq__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='other', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='__class__', ctx=Load())], keywords=[])), body=[Return(value=Name(id='NotImplemented', ctx=Load()))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='__slots__', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='other', ctx=Load()), attr='__slots__', ctx=Load())]), body=[Return(value=Constant(value=False))], orelse=[]), Return(value=Call(func=Name(id='all', ctx=Load()), args=[GeneratorExp(elt=Compare(left=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='k', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='other', ctx=Load()), Name(id='k', ctx=Load())], keywords=[])]), generators=[comprehension(target=Name(id='k', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='__slots__', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], decorator_list=[], returns=Name(id='bool', ctx=Load())), FunctionDef(name='__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Constant(value='{}({}, {})'), attr='format', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__class__', ctx=Load()), attr='__name__', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='no_binary', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='only_binary', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='handle_mutual_excludes', args=arguments(posonlyargs=[], args=[arg(arg='value', annotation=Name(id='str', ctx=Load())), arg(arg='target', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='other', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='-')], keywords=[]), body=[Raise(exc=Call(func=Name(id='CommandError', ctx=Load()), args=[Constant(value='--no-binary / --only-binary option requires 1 argument.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='new', ctx=Store())], value=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=',')], keywords=[])), While(test=Compare(left=Constant(value=':all:'), ops=[In()], comparators=[Name(id='new', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='other', ctx=Load()), attr='clear', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='clear', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='add', ctx=Load()), args=[Constant(value=':all:')], keywords=[])), Delete(targets=[Subscript(value=Name(id='new', ctx=Load()), slice=Slice(upper=BinOp(left=Call(func=Attribute(value=Name(id='new', ctx=Load()), attr='index', ctx=Load()), args=[Constant(value=':all:')], keywords=[]), op=Add(), right=Constant(value=1))), ctx=Del())]), If(test=Compare(left=Constant(value=':none:'), ops=[NotIn()], comparators=[Name(id='new', ctx=Load())]), body=[Return()], orelse=[])], orelse=[]), For(target=Name(id='name', ctx=Store()), iter=Name(id='new', ctx=Load()), body=[If(test=Compare(left=Name(id='name', ctx=Load()), ops=[Eq()], comparators=[Constant(value=':none:')]), body=[Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='clear', ctx=Load()), args=[], keywords=[])), Continue()], orelse=[]), Assign(targets=[Name(id='name', ctx=Store())], value=Call(func=Name(id='canonicalize_name', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='other', ctx=Load()), attr='discard', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[Name(id='staticmethod', ctx=Load())], returns=Constant(value=None)), FunctionDef(name='get_allowed_formats', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='canonical_name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='result', ctx=Store())], value=Set(elts=[Constant(value='binary'), Constant(value='source')])), If(test=Compare(left=Name(id='canonical_name', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='only_binary', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='discard', ctx=Load()), args=[Constant(value='source')], keywords=[]))], orelse=[If(test=Compare(left=Name(id='canonical_name', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='no_binary', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='discard', ctx=Load()), args=[Constant(value='binary')], keywords=[]))], orelse=[If(test=Compare(left=Constant(value=':all:'), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='only_binary', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='discard', ctx=Load()), args=[Constant(value='source')], keywords=[]))], orelse=[If(test=Compare(left=Constant(value=':all:'), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='no_binary', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='discard', ctx=Load()), args=[Constant(value='binary')], keywords=[]))], orelse=[])])])]), Return(value=Call(func=Name(id='frozenset', ctx=Load()), args=[Name(id='result', ctx=Load())], keywords=[]))], decorator_list=[], returns=Subscript(value=Name(id='FrozenSet', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='disallow_binaries', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='handle_mutual_excludes', ctx=Load()), args=[Constant(value=':all:'), Attribute(value=Name(id='self', ctx=Load()), attr='no_binary', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='only_binary', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None))], decorator_list=[])], type_ignores=[])