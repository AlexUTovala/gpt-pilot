Module(body=[ImportFrom(module='pip._internal.distributions.base', names=[alias(name='AbstractDistribution')], level=0), ImportFrom(module='pip._internal.distributions.sdist', names=[alias(name='SourceDistribution')], level=0), ImportFrom(module='pip._internal.distributions.wheel', names=[alias(name='WheelDistribution')], level=0), ImportFrom(module='pip._internal.req.req_install', names=[alias(name='InstallRequirement')], level=0), FunctionDef(name='make_distribution_for_install_requirement', args=arguments(posonlyargs=[], args=[arg(arg='install_req', annotation=Name(id='InstallRequirement', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Returns a Distribution for the given InstallRequirement')), If(test=Attribute(value=Name(id='install_req', ctx=Load()), attr='editable', ctx=Load()), body=[Return(value=Call(func=Name(id='SourceDistribution', ctx=Load()), args=[Name(id='install_req', ctx=Load())], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='install_req', ctx=Load()), attr='is_wheel', ctx=Load()), body=[Return(value=Call(func=Name(id='WheelDistribution', ctx=Load()), args=[Name(id='install_req', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='SourceDistribution', ctx=Load()), args=[Name(id='install_req', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='AbstractDistribution', ctx=Load()))], type_ignores=[])