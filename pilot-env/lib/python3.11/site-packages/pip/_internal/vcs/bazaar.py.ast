Module(body=[Import(names=[alias(name='logging')]), ImportFrom(module='typing', names=[alias(name='List'), alias(name='Optional'), alias(name='Tuple')], level=0), ImportFrom(module='pip._internal.utils.misc', names=[alias(name='HiddenText'), alias(name='display_path')], level=0), ImportFrom(module='pip._internal.utils.subprocess', names=[alias(name='make_command')], level=0), ImportFrom(module='pip._internal.utils.urls', names=[alias(name='path_to_url')], level=0), ImportFrom(module='pip._internal.vcs.versioncontrol', names=[alias(name='AuthInfo'), alias(name='RemoteNotFoundError'), alias(name='RevOptions'), alias(name='VersionControl'), alias(name='vcs')], level=0), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Name(id='__name__', ctx=Load())], keywords=[])), ClassDef(name='Bazaar', bases=[Name(id='VersionControl', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='name', ctx=Store())], value=Constant(value='bzr')), Assign(targets=[Name(id='dirname', ctx=Store())], value=Constant(value='.bzr')), Assign(targets=[Name(id='repo_name', ctx=Store())], value=Constant(value='branch')), Assign(targets=[Name(id='schemes', ctx=Store())], value=Tuple(elts=[Constant(value='bzr+http'), Constant(value='bzr+https'), Constant(value='bzr+ssh'), Constant(value='bzr+sftp'), Constant(value='bzr+ftp'), Constant(value='bzr+lp'), Constant(value='bzr+file')], ctx=Load())), FunctionDef(name='get_base_rev_args', args=arguments(posonlyargs=[], args=[arg(arg='rev', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=List(elts=[Constant(value='-r'), Name(id='rev', ctx=Load())], ctx=Load()))], decorator_list=[Name(id='staticmethod', ctx=Load())], returns=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='fetch_new', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dest', annotation=Name(id='str', ctx=Load())), arg(arg='url', annotation=Name(id='HiddenText', ctx=Load())), arg(arg='rev_options', annotation=Name(id='RevOptions', ctx=Load())), arg(arg='verbosity', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='rev_display', ctx=Store())], value=Call(func=Attribute(value=Name(id='rev_options', ctx=Load()), attr='to_display', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Checking out %s%s to %s'), Name(id='url', ctx=Load()), Name(id='rev_display', ctx=Load()), Call(func=Name(id='display_path', ctx=Load()), args=[Name(id='dest', ctx=Load())], keywords=[])], keywords=[])), If(test=Compare(left=Name(id='verbosity', ctx=Load()), ops=[LtE()], comparators=[Constant(value=0)]), body=[Assign(targets=[Name(id='flag', ctx=Store())], value=Constant(value='--quiet'))], orelse=[If(test=Compare(left=Name(id='verbosity', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)]), body=[Assign(targets=[Name(id='flag', ctx=Store())], value=Constant(value=''))], orelse=[Assign(targets=[Name(id='flag', ctx=Store())], value=JoinedStr(values=[Constant(value='-'), FormattedValue(value=BinOp(left=Constant(value='v'), op=Mult(), right=Name(id='verbosity', ctx=Load())), conversion=-1)]))])]), Assign(targets=[Name(id='cmd_args', ctx=Store())], value=Call(func=Name(id='make_command', ctx=Load()), args=[Constant(value='checkout'), Constant(value='--lightweight'), Name(id='flag', ctx=Load()), Call(func=Attribute(value=Name(id='rev_options', ctx=Load()), attr='to_args', ctx=Load()), args=[], keywords=[]), Name(id='url', ctx=Load()), Name(id='dest', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_command', ctx=Load()), args=[Name(id='cmd_args', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='switch', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dest', annotation=Name(id='str', ctx=Load())), arg(arg='url', annotation=Name(id='HiddenText', ctx=Load())), arg(arg='rev_options', annotation=Name(id='RevOptions', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_command', ctx=Load()), args=[Call(func=Name(id='make_command', ctx=Load()), args=[Constant(value='switch'), Name(id='url', ctx=Load())], keywords=[])], keywords=[keyword(arg='cwd', value=Name(id='dest', ctx=Load()))]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='update', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dest', annotation=Name(id='str', ctx=Load())), arg(arg='url', annotation=Name(id='HiddenText', ctx=Load())), arg(arg='rev_options', annotation=Name(id='RevOptions', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='output', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_command', ctx=Load()), args=[Call(func=Name(id='make_command', ctx=Load()), args=[Constant(value='info')], keywords=[])], keywords=[keyword(arg='show_stdout', value=Constant(value=False)), keyword(arg='stdout_only', value=Constant(value=True)), keyword(arg='cwd', value=Name(id='dest', ctx=Load()))])), If(test=Call(func=Attribute(value=Name(id='output', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='Standalone ')], keywords=[]), body=[Assign(targets=[Name(id='cmd_args', ctx=Store())], value=Call(func=Name(id='make_command', ctx=Load()), args=[Constant(value='bind'), Constant(value='-q'), Name(id='url', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_command', ctx=Load()), args=[Name(id='cmd_args', ctx=Load())], keywords=[keyword(arg='cwd', value=Name(id='dest', ctx=Load()))]))], orelse=[]), Assign(targets=[Name(id='cmd_args', ctx=Store())], value=Call(func=Name(id='make_command', ctx=Load()), args=[Constant(value='update'), Constant(value='-q'), Call(func=Attribute(value=Name(id='rev_options', ctx=Load()), attr='to_args', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_command', ctx=Load()), args=[Name(id='cmd_args', ctx=Load())], keywords=[keyword(arg='cwd', value=Name(id='dest', ctx=Load()))]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='get_url_rev_and_auth', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='url', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='url', ctx=Store()), Name(id='rev', ctx=Store()), Name(id='user_pass', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='get_url_rev_and_auth', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), If(test=Call(func=Attribute(value=Name(id='url', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='ssh://')], keywords=[]), body=[Assign(targets=[Name(id='url', ctx=Store())], value=BinOp(left=Constant(value='bzr+'), op=Add(), right=Name(id='url', ctx=Load())))], orelse=[]), Return(value=Tuple(elts=[Name(id='url', ctx=Load()), Name(id='rev', ctx=Load()), Name(id='user_pass', ctx=Load())], ctx=Load()))], decorator_list=[Name(id='classmethod', ctx=Load())], returns=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), Name(id='AuthInfo', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='get_remote_url', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='location', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='urls', ctx=Store())], value=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='run_command', ctx=Load()), args=[List(elts=[Constant(value='info')], ctx=Load())], keywords=[keyword(arg='show_stdout', value=Constant(value=False)), keyword(arg='stdout_only', value=Constant(value=True)), keyword(arg='cwd', value=Name(id='location', ctx=Load()))])), For(target=Name(id='line', ctx=Store()), iter=Call(func=Attribute(value=Name(id='urls', ctx=Load()), attr='splitlines', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='line', ctx=Store())], value=Call(func=Attribute(value=Name(id='line', ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[])), For(target=Name(id='x', ctx=Store()), iter=Tuple(elts=[Constant(value='checkout of branch: '), Constant(value='parent branch: ')], ctx=Load()), body=[If(test=Call(func=Attribute(value=Name(id='line', ctx=Load()), attr='startswith', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='repo', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='line', ctx=Load()), attr='split', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[]), slice=Constant(value=1), ctx=Load())), If(test=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='_is_local_repository', ctx=Load()), args=[Name(id='repo', ctx=Load())], keywords=[]), body=[Return(value=Call(func=Name(id='path_to_url', ctx=Load()), args=[Name(id='repo', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='repo', ctx=Load()))], orelse=[])], orelse=[])], orelse=[]), Raise(exc=Name(id='RemoteNotFoundError', ctx=Load()))], decorator_list=[Name(id='classmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='get_revision', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='location', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='revision', ctx=Store())], value=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='run_command', ctx=Load()), args=[List(elts=[Constant(value='revno')], ctx=Load())], keywords=[keyword(arg='show_stdout', value=Constant(value=False)), keyword(arg='stdout_only', value=Constant(value=True)), keyword(arg='cwd', value=Name(id='location', ctx=Load()))])), Return(value=Subscript(value=Call(func=Attribute(value=Name(id='revision', ctx=Load()), attr='splitlines', ctx=Load()), args=[], keywords=[]), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()))], decorator_list=[Name(id='classmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='is_commit_id_equal', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='dest', annotation=Name(id='str', ctx=Load())), arg(arg='name', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="Always assume the versions don't match")), Return(value=Constant(value=False))], decorator_list=[Name(id='classmethod', ctx=Load())], returns=Name(id='bool', ctx=Load()))], decorator_list=[]), Expr(value=Call(func=Attribute(value=Name(id='vcs', ctx=Load()), attr='register', ctx=Load()), args=[Name(id='Bazaar', ctx=Load())], keywords=[]))], type_ignores=[])