Module(body=[Expr(value=Constant(value='Logic that powers autocompletion installed by ``pip completion``.\n')), Import(names=[alias(name='optparse')]), Import(names=[alias(name='os')]), Import(names=[alias(name='sys')]), ImportFrom(module='itertools', names=[alias(name='chain')], level=0), ImportFrom(module='typing', names=[alias(name='Any'), alias(name='Iterable'), alias(name='List'), alias(name='Optional')], level=0), ImportFrom(module='pip._internal.cli.main_parser', names=[alias(name='create_main_parser')], level=0), ImportFrom(module='pip._internal.commands', names=[alias(name='commands_dict'), alias(name='create_command')], level=0), ImportFrom(module='pip._internal.metadata', names=[alias(name='get_default_environment')], level=0), FunctionDef(name='autocomplete', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Entry Point for completion of main and subcommand options.')), If(test=Compare(left=Constant(value='PIP_AUTO_COMPLETE'), ops=[NotIn()], comparators=[Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load())]), body=[Return()], orelse=[]), Assign(targets=[Name(id='cwords', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), slice=Constant(value='COMP_WORDS'), ctx=Load()), attr='split', ctx=Load()), args=[], keywords=[]), slice=Slice(lower=Constant(value=1)), ctx=Load())), Assign(targets=[Name(id='cword', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), slice=Constant(value='COMP_CWORD'), ctx=Load())], keywords=[])), Try(body=[Assign(targets=[Name(id='current', ctx=Store())], value=Subscript(value=Name(id='cwords', ctx=Load()), slice=BinOp(left=Name(id='cword', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='IndexError', ctx=Load()), body=[Assign(targets=[Name(id='current', ctx=Store())], value=Constant(value=''))])], orelse=[], finalbody=[]), Assign(targets=[Name(id='parser', ctx=Store())], value=Call(func=Name(id='create_main_parser', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='subcommands', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Name(id='commands_dict', ctx=Load())], keywords=[])), Assign(targets=[Name(id='options', ctx=Store())], value=List(elts=[], ctx=Load())), AnnAssign(target=Name(id='subcommand_name', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), value=Constant(value=None), simple=1), For(target=Name(id='word', ctx=Store()), iter=Name(id='cwords', ctx=Load()), body=[If(test=Compare(left=Name(id='word', ctx=Load()), ops=[In()], comparators=[Name(id='subcommands', ctx=Load())]), body=[Assign(targets=[Name(id='subcommand_name', ctx=Store())], value=Name(id='word', ctx=Load())), Break()], orelse=[])], orelse=[]), If(test=Compare(left=Name(id='subcommand_name', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='subcommand_name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='help')]), body=[Expr(value=Call(func=Attribute(value=Name(id='sys', ctx=Load()), attr='exit', ctx=Load()), args=[Constant(value=1)], keywords=[]))], orelse=[]), Assign(targets=[Name(id='should_list_installed', ctx=Store())], value=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='current', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='-')], keywords=[])), Compare(left=Name(id='subcommand_name', ctx=Load()), ops=[In()], comparators=[List(elts=[Constant(value='show'), Constant(value='uninstall')], ctx=Load())])])), If(test=Name(id='should_list_installed', ctx=Load()), body=[Assign(targets=[Name(id='env', ctx=Store())], value=Call(func=Name(id='get_default_environment', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='lc', ctx=Store())], value=Call(func=Attribute(value=Name(id='current', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='installed', ctx=Store())], value=ListComp(elt=Attribute(value=Name(id='dist', ctx=Load()), attr='canonical_name', ctx=Load()), generators=[comprehension(target=Name(id='dist', ctx=Store()), iter=Call(func=Attribute(value=Name(id='env', ctx=Load()), attr='iter_installed_distributions', ctx=Load()), args=[], keywords=[keyword(arg='local_only', value=Constant(value=True))]), ifs=[BoolOp(op=And(), values=[Call(func=Attribute(value=Attribute(value=Name(id='dist', ctx=Load()), attr='canonical_name', ctx=Load()), attr='startswith', ctx=Load()), args=[Name(id='lc', ctx=Load())], keywords=[]), Compare(left=Attribute(value=Name(id='dist', ctx=Load()), attr='canonical_name', ctx=Load()), ops=[NotIn()], comparators=[Subscript(value=Name(id='cwords', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load())])])], is_async=0)])), If(test=Name(id='installed', ctx=Load()), body=[For(target=Name(id='dist', ctx=Store()), iter=Name(id='installed', ctx=Load()), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Name(id='dist', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='sys', ctx=Load()), attr='exit', ctx=Load()), args=[Constant(value=1)], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='should_list_installables', ctx=Store())], value=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='current', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='-')], keywords=[])), Compare(left=Name(id='subcommand_name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='install')])])), If(test=Name(id='should_list_installables', ctx=Load()), body=[For(target=Name(id='path', ctx=Store()), iter=Call(func=Name(id='auto_complete_paths', ctx=Load()), args=[Name(id='current', ctx=Load()), Constant(value='path')], keywords=[]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='sys', ctx=Load()), attr='exit', ctx=Load()), args=[Constant(value=1)], keywords=[]))], orelse=[]), Assign(targets=[Name(id='subcommand', ctx=Store())], value=Call(func=Name(id='create_command', ctx=Load()), args=[Name(id='subcommand_name', ctx=Load())], keywords=[])), For(target=Name(id='opt', ctx=Store()), iter=Attribute(value=Attribute(value=Name(id='subcommand', ctx=Load()), attr='parser', ctx=Load()), attr='option_list_all', ctx=Load()), body=[If(test=Compare(left=Attribute(value=Name(id='opt', ctx=Load()), attr='help', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='optparse', ctx=Load()), attr='SUPPRESS_HELP', ctx=Load())]), body=[AugAssign(target=Name(id='options', ctx=Store()), op=Add(), value=ListComp(elt=Tuple(elts=[Name(id='opt_str', ctx=Load()), Attribute(value=Name(id='opt', ctx=Load()), attr='nargs', ctx=Load())], ctx=Load()), generators=[comprehension(target=Name(id='opt_str', ctx=Store()), iter=BinOp(left=Attribute(value=Name(id='opt', ctx=Load()), attr='_long_opts', ctx=Load()), op=Add(), right=Attribute(value=Name(id='opt', ctx=Load()), attr='_short_opts', ctx=Load())), ifs=[], is_async=0)]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='prev_opts', ctx=Store())], value=ListComp(elt=Subscript(value=Call(func=Attribute(value=Name(id='x', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='=')], keywords=[]), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Subscript(value=Name(id='cwords', ctx=Load()), slice=Slice(lower=Constant(value=1), upper=BinOp(left=Name(id='cword', ctx=Load()), op=Sub(), right=Constant(value=1))), ctx=Load()), ifs=[], is_async=0)])), Assign(targets=[Name(id='options', ctx=Store())], value=ListComp(elt=Tuple(elts=[Name(id='x', ctx=Load()), Name(id='v', ctx=Load())], ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='x', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Name(id='options', ctx=Load()), ifs=[Compare(left=Name(id='x', ctx=Load()), ops=[NotIn()], comparators=[Name(id='prev_opts', ctx=Load())])], is_async=0)])), Assign(targets=[Name(id='options', ctx=Store())], value=ListComp(elt=Tuple(elts=[Name(id='k', ctx=Load()), Name(id='v', ctx=Load())], ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Name(id='options', ctx=Load()), ifs=[Call(func=Attribute(value=Name(id='k', ctx=Load()), attr='startswith', ctx=Load()), args=[Name(id='current', ctx=Load())], keywords=[])], is_async=0)])), Assign(targets=[Name(id='completion_type', ctx=Store())], value=Call(func=Name(id='get_path_completion_type', ctx=Load()), args=[Name(id='cwords', ctx=Load()), Name(id='cword', ctx=Load()), Attribute(value=Attribute(value=Name(id='subcommand', ctx=Load()), attr='parser', ctx=Load()), attr='option_list_all', ctx=Load())], keywords=[])), If(test=Name(id='completion_type', ctx=Load()), body=[Assign(targets=[Name(id='paths', ctx=Store())], value=Call(func=Name(id='auto_complete_paths', ctx=Load()), args=[Name(id='current', ctx=Load()), Name(id='completion_type', ctx=Load())], keywords=[])), Assign(targets=[Name(id='options', ctx=Store())], value=ListComp(elt=Tuple(elts=[Name(id='path', ctx=Load()), Constant(value=0)], ctx=Load()), generators=[comprehension(target=Name(id='path', ctx=Store()), iter=Name(id='paths', ctx=Load()), ifs=[], is_async=0)]))], orelse=[]), For(target=Name(id='option', ctx=Store()), iter=Name(id='options', ctx=Load()), body=[Assign(targets=[Name(id='opt_label', ctx=Store())], value=Subscript(value=Name(id='option', ctx=Load()), slice=Constant(value=0), ctx=Load())), If(test=BoolOp(op=And(), values=[Subscript(value=Name(id='option', ctx=Load()), slice=Constant(value=1), ctx=Load()), Compare(left=Subscript(value=Subscript(value=Name(id='option', ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Slice(upper=Constant(value=2)), ctx=Load()), ops=[Eq()], comparators=[Constant(value='--')])]), body=[AugAssign(target=Name(id='opt_label', ctx=Store()), op=Add(), value=Constant(value='='))], orelse=[]), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Name(id='opt_label', ctx=Load())], keywords=[]))], orelse=[])], orelse=[Assign(targets=[Name(id='opts', ctx=Store())], value=ListComp(elt=Attribute(value=Name(id='i', ctx=Load()), attr='option_list', ctx=Load()), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Attribute(value=Name(id='parser', ctx=Load()), attr='option_groups', ctx=Load()), ifs=[], is_async=0)])), Expr(value=Call(func=Attribute(value=Name(id='opts', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='parser', ctx=Load()), attr='option_list', ctx=Load())], keywords=[])), Assign(targets=[Name(id='flattened_opts', ctx=Store())], value=Call(func=Attribute(value=Name(id='chain', ctx=Load()), attr='from_iterable', ctx=Load()), args=[Name(id='opts', ctx=Load())], keywords=[])), If(test=Call(func=Attribute(value=Name(id='current', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='-')], keywords=[]), body=[For(target=Name(id='opt', ctx=Store()), iter=Name(id='flattened_opts', ctx=Load()), body=[If(test=Compare(left=Attribute(value=Name(id='opt', ctx=Load()), attr='help', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='optparse', ctx=Load()), attr='SUPPRESS_HELP', ctx=Load())]), body=[AugAssign(target=Name(id='subcommands', ctx=Store()), op=Add(), value=BinOp(left=Attribute(value=Name(id='opt', ctx=Load()), attr='_long_opts', ctx=Load()), op=Add(), right=Attribute(value=Name(id='opt', ctx=Load()), attr='_short_opts', ctx=Load())))], orelse=[])], orelse=[])], orelse=[Assign(targets=[Name(id='completion_type', ctx=Store())], value=Call(func=Name(id='get_path_completion_type', ctx=Load()), args=[Name(id='cwords', ctx=Load()), Name(id='cword', ctx=Load()), Name(id='flattened_opts', ctx=Load())], keywords=[])), If(test=Name(id='completion_type', ctx=Load()), body=[Assign(targets=[Name(id='subcommands', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='auto_complete_paths', ctx=Load()), args=[Name(id='current', ctx=Load()), Name(id='completion_type', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])]), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=' '), attr='join', ctx=Load()), args=[ListComp(elt=Name(id='x', ctx=Load()), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Name(id='subcommands', ctx=Load()), ifs=[Call(func=Attribute(value=Name(id='x', ctx=Load()), attr='startswith', ctx=Load()), args=[Name(id='current', ctx=Load())], keywords=[])], is_async=0)])], keywords=[])], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='sys', ctx=Load()), attr='exit', ctx=Load()), args=[Constant(value=1)], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='get_path_completion_type', args=arguments(posonlyargs=[], args=[arg(arg='cwords', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='cword', annotation=Name(id='int', ctx=Load())), arg(arg='opts', annotation=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='Any', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get the type of path completion (``file``, ``dir``, ``path`` or None)\n\n    :param cwords: same as the environmental variable ``COMP_WORDS``\n    :param cword: same as the environmental variable ``COMP_CWORD``\n    :param opts: The available options to check\n    :return: path completion type (``file``, ``dir``, ``path`` or None)\n    ')), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='cword', ctx=Load()), ops=[Lt()], comparators=[Constant(value=2)]), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Subscript(value=Name(id='cwords', ctx=Load()), slice=BinOp(left=Name(id='cword', ctx=Load()), op=Sub(), right=Constant(value=2)), ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='-')], keywords=[]))]), body=[Return(value=Constant(value=None))], orelse=[]), For(target=Name(id='opt', ctx=Store()), iter=Name(id='opts', ctx=Load()), body=[If(test=Compare(left=Attribute(value=Name(id='opt', ctx=Load()), attr='help', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='optparse', ctx=Load()), attr='SUPPRESS_HELP', ctx=Load())]), body=[Continue()], orelse=[]), For(target=Name(id='o', ctx=Store()), iter=Call(func=Attribute(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='opt', ctx=Load())], keywords=[]), attr='split', ctx=Load()), args=[Constant(value='/')], keywords=[]), body=[If(test=Compare(left=Subscript(value=Call(func=Attribute(value=Subscript(value=Name(id='cwords', ctx=Load()), slice=BinOp(left=Name(id='cword', ctx=Load()), op=Sub(), right=Constant(value=2)), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='=')], keywords=[]), slice=Constant(value=0), ctx=Load()), ops=[Eq()], comparators=[Name(id='o', ctx=Load())]), body=[If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='opt', ctx=Load()), attr='metavar', ctx=Load())), Call(func=Name(id='any', ctx=Load()), args=[GeneratorExp(elt=Compare(left=Name(id='x', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='path'), Constant(value='file'), Constant(value='dir')], ctx=Load())]), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='opt', ctx=Load()), attr='metavar', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='/')], keywords=[]), ifs=[], is_async=0)])], keywords=[])]), body=[Return(value=Attribute(value=Name(id='opt', ctx=Load()), attr='metavar', ctx=Load()))], orelse=[])], orelse=[])], orelse=[])], orelse=[]), Return(value=Constant(value=None))], decorator_list=[], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='auto_complete_paths', args=arguments(posonlyargs=[], args=[arg(arg='current', annotation=Name(id='str', ctx=Load())), arg(arg='completion_type', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='If ``completion_type`` is ``file`` or ``path``, list all regular files\n    and directories starting with ``current``; otherwise only list directories\n    starting with ``current``.\n\n    :param current: The word to be completed\n    :param completion_type: path completion type(``file``, ``path`` or ``dir``)\n    :return: A generator of regular files and/or directories\n    ')), Assign(targets=[Tuple(elts=[Name(id='directory', ctx=Store()), Name(id='filename', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='split', ctx=Load()), args=[Name(id='current', ctx=Load())], keywords=[])), Assign(targets=[Name(id='current_path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='abspath', ctx=Load()), args=[Name(id='directory', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='access', ctx=Load()), args=[Name(id='current_path', ctx=Load()), Attribute(value=Name(id='os', ctx=Load()), attr='R_OK', ctx=Load())], keywords=[])), body=[Return()], orelse=[]), Assign(targets=[Name(id='filename', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normcase', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])), Assign(targets=[Name(id='file_list', ctx=Store())], value=GeneratorExp(elt=Name(id='x', ctx=Load()), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='current_path', ctx=Load())], keywords=[]), ifs=[Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normcase', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[]), attr='startswith', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])], is_async=0)])), For(target=Name(id='f', ctx=Store()), iter=Name(id='file_list', ctx=Load()), body=[Assign(targets=[Name(id='opt', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='current_path', ctx=Load()), Name(id='f', ctx=Load())], keywords=[])), Assign(targets=[Name(id='comp_file', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normcase', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='directory', ctx=Load()), Name(id='f', ctx=Load())], keywords=[])], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='completion_type', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='dir')]), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isfile', ctx=Load()), args=[Name(id='opt', ctx=Load())], keywords=[])]), body=[Expr(value=Yield(value=Name(id='comp_file', ctx=Load())))], orelse=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[Name(id='opt', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='comp_file', ctx=Load()), Constant(value='')], keywords=[])))], orelse=[])])], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], type_ignores=[])