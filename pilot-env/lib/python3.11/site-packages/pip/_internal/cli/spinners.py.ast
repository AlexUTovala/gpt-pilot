Module(body=[Import(names=[alias(name='contextlib')]), Import(names=[alias(name='itertools')]), Import(names=[alias(name='logging')]), Import(names=[alias(name='sys')]), Import(names=[alias(name='time')]), ImportFrom(module='typing', names=[alias(name='IO'), alias(name='Generator'), alias(name='Optional')], level=0), ImportFrom(module='pip._internal.utils.compat', names=[alias(name='WINDOWS')], level=0), ImportFrom(module='pip._internal.utils.logging', names=[alias(name='get_indentation')], level=0), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Name(id='__name__', ctx=Load())], keywords=[])), ClassDef(name='SpinnerInterface', bases=[], keywords=[], body=[FunctionDef(name='spin', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Call(func=Name(id='NotImplementedError', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='finish', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='final_status', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Call(func=Name(id='NotImplementedError', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None))], decorator_list=[]), ClassDef(name='InteractiveSpinner', bases=[Name(id='SpinnerInterface', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='message', annotation=Name(id='str', ctx=Load())), arg(arg='file', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='IO', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), ctx=Load())), arg(arg='spin_chars', annotation=Name(id='str', ctx=Load())), arg(arg='min_update_interval_seconds', annotation=Name(id='float', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value='-\\|/'), Constant(value=0.125)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_message', ctx=Store())], value=Name(id='message', ctx=Load())), If(test=Compare(left=Name(id='file', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='file', ctx=Store())], value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_file', ctx=Store())], value=Name(id='file', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_rate_limiter', ctx=Store())], value=Call(func=Name(id='RateLimiter', ctx=Load()), args=[Name(id='min_update_interval_seconds', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_finished', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_spin_cycle', ctx=Store())], value=Call(func=Attribute(value=Name(id='itertools', ctx=Load()), attr='cycle', ctx=Load()), args=[Name(id='spin_chars', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_file', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=Constant(value=' '), op=Mult(), right=Call(func=Name(id='get_indentation', ctx=Load()), args=[], keywords=[])), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_message', ctx=Load())), op=Add(), right=Constant(value=' ... '))], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_width', ctx=Store())], value=Constant(value=0))], decorator_list=[]), FunctionDef(name='_write', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='status', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_finished', ctx=Load()))), Assign(targets=[Name(id='backup', ctx=Store())], value=BinOp(left=Constant(value='\x08'), op=Mult(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_width', ctx=Load()))), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_file', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='backup', ctx=Load()), op=Add(), right=BinOp(left=Constant(value=' '), op=Mult(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_width', ctx=Load()))), op=Add(), right=Name(id='backup', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_file', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='status', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_width', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Name(id='status', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_file', ctx=Load()), attr='flush', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_rate_limiter', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='spin', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_finished', ctx=Load()), body=[Return()], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_rate_limiter', ctx=Load()), attr='ready', ctx=Load()), args=[], keywords=[])), body=[Return()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_write', ctx=Load()), args=[Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_spin_cycle', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='finish', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='final_status', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_finished', ctx=Load()), body=[Return()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_write', ctx=Load()), args=[Name(id='final_status', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_file', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='\n')], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_file', ctx=Load()), attr='flush', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_finished', ctx=Store())], value=Constant(value=True))], decorator_list=[], returns=Constant(value=None))], decorator_list=[]), ClassDef(name='NonInteractiveSpinner', bases=[Name(id='SpinnerInterface', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='message', annotation=Name(id='str', ctx=Load())), arg(arg='min_update_interval_seconds', annotation=Name(id='float', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=60.0)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_message', ctx=Store())], value=Name(id='message', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_finished', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_rate_limiter', ctx=Store())], value=Call(func=Name(id='RateLimiter', ctx=Load()), args=[Name(id='min_update_interval_seconds', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_update', ctx=Load()), args=[Constant(value='started')], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_update', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='status', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_finished', ctx=Load()))), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_rate_limiter', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='%s: %s'), Attribute(value=Name(id='self', ctx=Load()), attr='_message', ctx=Load()), Name(id='status', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='spin', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_finished', ctx=Load()), body=[Return()], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_rate_limiter', ctx=Load()), attr='ready', ctx=Load()), args=[], keywords=[])), body=[Return()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_update', ctx=Load()), args=[Constant(value='still running...')], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='finish', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='final_status', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_finished', ctx=Load()), body=[Return()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_update', ctx=Load()), args=[JoinedStr(values=[Constant(value="finished with status '"), FormattedValue(value=Name(id='final_status', ctx=Load()), conversion=-1), Constant(value="'")])], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_finished', ctx=Store())], value=Constant(value=True))], decorator_list=[], returns=Constant(value=None))], decorator_list=[]), ClassDef(name='RateLimiter', bases=[], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='min_update_interval_seconds', annotation=Name(id='float', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_min_update_interval_seconds', ctx=Store())], value=Name(id='min_update_interval_seconds', ctx=Load())), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_last_update', ctx=Store()), annotation=Name(id='float', ctx=Load()), value=Constant(value=0), simple=0)], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='ready', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='now', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='delta', ctx=Store())], value=BinOp(left=Name(id='now', ctx=Load()), op=Sub(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_last_update', ctx=Load()))), Return(value=Compare(left=Name(id='delta', ctx=Load()), ops=[GtE()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_min_update_interval_seconds', ctx=Load())]))], decorator_list=[], returns=Name(id='bool', ctx=Load())), FunctionDef(name='reset', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_last_update', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None))], decorator_list=[]), FunctionDef(name='open_spinner', args=arguments(posonlyargs=[], args=[arg(arg='message', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='isatty', ctx=Load()), args=[], keywords=[]), Compare(left=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='getEffectiveLevel', ctx=Load()), args=[], keywords=[]), ops=[LtE()], comparators=[Attribute(value=Name(id='logging', ctx=Load()), attr='INFO', ctx=Load())])]), body=[AnnAssign(target=Name(id='spinner', ctx=Store()), annotation=Name(id='SpinnerInterface', ctx=Load()), value=Call(func=Name(id='InteractiveSpinner', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[]), simple=1)], orelse=[Assign(targets=[Name(id='spinner', ctx=Store())], value=Call(func=Name(id='NonInteractiveSpinner', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[]))]), Try(body=[With(items=[withitem(context_expr=Call(func=Name(id='hidden_cursor', ctx=Load()), args=[Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load())], keywords=[]))], body=[Expr(value=Yield(value=Name(id='spinner', ctx=Load())))])], handlers=[ExceptHandler(type=Name(id='KeyboardInterrupt', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='spinner', ctx=Load()), attr='finish', ctx=Load()), args=[Constant(value='canceled')], keywords=[])), Raise()]), ExceptHandler(type=Name(id='Exception', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='spinner', ctx=Load()), attr='finish', ctx=Load()), args=[Constant(value='error')], keywords=[])), Raise()])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='spinner', ctx=Load()), attr='finish', ctx=Load()), args=[Constant(value='done')], keywords=[]))], finalbody=[])], decorator_list=[Attribute(value=Name(id='contextlib', ctx=Load()), attr='contextmanager', ctx=Load())], returns=Subscript(value=Name(id='Generator', ctx=Load()), slice=Tuple(elts=[Name(id='SpinnerInterface', ctx=Load()), Constant(value=None), Constant(value=None)], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='HIDE_CURSOR', ctx=Store())], value=Constant(value='\x1b[?25l')), Assign(targets=[Name(id='SHOW_CURSOR', ctx=Store())], value=Constant(value='\x1b[?25h')), FunctionDef(name='hidden_cursor', args=arguments(posonlyargs=[], args=[arg(arg='file', annotation=Subscript(value=Name(id='IO', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Name(id='WINDOWS', ctx=Load()), body=[Expr(value=Yield())], orelse=[If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='file', ctx=Load()), attr='isatty', ctx=Load()), args=[], keywords=[])), Compare(left=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='getEffectiveLevel', ctx=Load()), args=[], keywords=[]), ops=[Gt()], comparators=[Attribute(value=Name(id='logging', ctx=Load()), attr='INFO', ctx=Load())])]), body=[Expr(value=Yield())], orelse=[Expr(value=Call(func=Attribute(value=Name(id='file', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='HIDE_CURSOR', ctx=Load())], keywords=[])), Try(body=[Expr(value=Yield())], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='file', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='SHOW_CURSOR', ctx=Load())], keywords=[]))])])])], decorator_list=[Attribute(value=Name(id='contextlib', ctx=Load()), attr='contextmanager', ctx=Load())], returns=Subscript(value=Name(id='Generator', ctx=Load()), slice=Tuple(elts=[Constant(value=None), Constant(value=None), Constant(value=None)], ctx=Load()), ctx=Load()))], type_ignores=[])