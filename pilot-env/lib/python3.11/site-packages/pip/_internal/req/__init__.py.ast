Module(body=[Import(names=[alias(name='collections')]), Import(names=[alias(name='logging')]), ImportFrom(module='typing', names=[alias(name='Generator'), alias(name='List'), alias(name='Optional'), alias(name='Sequence'), alias(name='Tuple')], level=0), ImportFrom(module='pip._internal.utils.logging', names=[alias(name='indent_log')], level=0), ImportFrom(module='req_file', names=[alias(name='parse_requirements')], level=1), ImportFrom(module='req_install', names=[alias(name='InstallRequirement')], level=1), ImportFrom(module='req_set', names=[alias(name='RequirementSet')], level=1), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='RequirementSet'), Constant(value='InstallRequirement'), Constant(value='parse_requirements'), Constant(value='install_given_reqs')], ctx=Load())), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Name(id='__name__', ctx=Load())], keywords=[])), ClassDef(name='InstallationResult', bases=[], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store())], value=Name(id='name', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=JoinedStr(values=[Constant(value='InstallationResult(name='), FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), conversion=114), Constant(value=')')]))], decorator_list=[], returns=Name(id='str', ctx=Load()))], decorator_list=[]), FunctionDef(name='_validate_requirements', args=arguments(posonlyargs=[], args=[arg(arg='requirements', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='InstallRequirement', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='req', ctx=Store()), iter=Name(id='requirements', ctx=Load()), body=[Assert(test=Attribute(value=Name(id='req', ctx=Load()), attr='name', ctx=Load()), msg=JoinedStr(values=[Constant(value='invalid to-be-installed requirement: '), FormattedValue(value=Name(id='req', ctx=Load()), conversion=-1)])), Expr(value=Yield(value=Tuple(elts=[Attribute(value=Name(id='req', ctx=Load()), attr='name', ctx=Load()), Name(id='req', ctx=Load())], ctx=Load())))], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Generator', ctx=Load()), slice=Tuple(elts=[Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='InstallRequirement', ctx=Load())], ctx=Load()), ctx=Load()), Constant(value=None), Constant(value=None)], ctx=Load()), ctx=Load())), FunctionDef(name='install_given_reqs', args=arguments(posonlyargs=[], args=[arg(arg='requirements', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='InstallRequirement', ctx=Load()), ctx=Load())), arg(arg='global_options', annotation=Subscript(value=Name(id='Sequence', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='root', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='home', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='prefix', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='warn_script_location', annotation=Name(id='bool', ctx=Load())), arg(arg='use_user_site', annotation=Name(id='bool', ctx=Load())), arg(arg='pycompile', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Install everything in the given list.\n\n    (to be called after having downloaded and unpacked the packages)\n    ')), Assign(targets=[Name(id='to_install', ctx=Store())], value=Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='OrderedDict', ctx=Load()), args=[Call(func=Name(id='_validate_requirements', ctx=Load()), args=[Name(id='requirements', ctx=Load())], keywords=[])], keywords=[])), If(test=Name(id='to_install', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Installing collected packages: %s'), Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='to_install', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='installed', ctx=Store())], value=List(elts=[], ctx=Load())), With(items=[withitem(context_expr=Call(func=Name(id='indent_log', ctx=Load()), args=[], keywords=[]))], body=[For(target=Tuple(elts=[Name(id='req_name', ctx=Store()), Name(id='requirement', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='to_install', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Attribute(value=Name(id='requirement', ctx=Load()), attr='should_reinstall', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Attempting uninstall: %s'), Name(id='req_name', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='indent_log', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='uninstalled_pathset', ctx=Store())], value=Call(func=Attribute(value=Name(id='requirement', ctx=Load()), attr='uninstall', ctx=Load()), args=[], keywords=[keyword(arg='auto_confirm', value=Constant(value=True))]))])], orelse=[Assign(targets=[Name(id='uninstalled_pathset', ctx=Store())], value=Constant(value=None))]), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='requirement', ctx=Load()), attr='install', ctx=Load()), args=[Name(id='global_options', ctx=Load())], keywords=[keyword(arg='root', value=Name(id='root', ctx=Load())), keyword(arg='home', value=Name(id='home', ctx=Load())), keyword(arg='prefix', value=Name(id='prefix', ctx=Load())), keyword(arg='warn_script_location', value=Name(id='warn_script_location', ctx=Load())), keyword(arg='use_user_site', value=Name(id='use_user_site', ctx=Load())), keyword(arg='pycompile', value=Name(id='pycompile', ctx=Load()))]))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), body=[If(test=BoolOp(op=And(), values=[Name(id='uninstalled_pathset', ctx=Load()), UnaryOp(op=Not(), operand=Attribute(value=Name(id='requirement', ctx=Load()), attr='install_succeeded', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Name(id='uninstalled_pathset', ctx=Load()), attr='rollback', ctx=Load()), args=[], keywords=[]))], orelse=[]), Raise()])], orelse=[If(test=BoolOp(op=And(), values=[Name(id='uninstalled_pathset', ctx=Load()), Attribute(value=Name(id='requirement', ctx=Load()), attr='install_succeeded', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='uninstalled_pathset', ctx=Load()), attr='commit', ctx=Load()), args=[], keywords=[]))], orelse=[])], finalbody=[]), Expr(value=Call(func=Attribute(value=Name(id='installed', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='InstallationResult', ctx=Load()), args=[Name(id='req_name', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])]), Return(value=Name(id='installed', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='InstallationResult', ctx=Load()), ctx=Load()))], type_ignores=[])