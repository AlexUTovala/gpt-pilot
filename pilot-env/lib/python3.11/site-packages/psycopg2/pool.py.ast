Module(body=[Expr(value=Constant(value='Connection pooling for psycopg2\n\nThis module implements thread-safe (and not) connection pools.\n')), Import(names=[alias(name='psycopg2')]), ImportFrom(module='psycopg2', names=[alias(name='extensions', asname='_ext')], level=0), ClassDef(name='PoolError', bases=[Attribute(value=Name(id='psycopg2', ctx=Load()), attr='Error', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='AbstractConnectionPool', bases=[], keywords=[], body=[Expr(value=Constant(value='Generic key-based pooling code.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='minconn'), arg(arg='maxconn')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Constant(value="Initialize the connection pool.\n\n        New 'minconn' connections are created immediately calling 'connfunc'\n        with given parameters. The connection pool will support a maximum of\n        about 'maxconn' connections.\n        ")), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='minconn', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Name(id='minconn', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='maxconn', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Name(id='maxconn', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='closed', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_args', ctx=Store())], value=Name(id='args', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_kwargs', ctx=Store())], value=Name(id='kwargs', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_pool', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_used', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_rused', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_keys', ctx=Store())], value=Constant(value=0)), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='minconn', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_connect', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='_connect', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value="Create a new connection and assign it to 'key' if not None.")), Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Name(id='psycopg2', ctx=Load()), attr='connect', ctx=Load()), args=[Starred(value=Attribute(value=Name(id='self', ctx=Load()), attr='_args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Attribute(value=Name(id='self', ctx=Load()), attr='_kwargs', ctx=Load()))])), If(test=Compare(left=Name(id='key', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_used', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store())], value=Name(id='conn', ctx=Load())), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_rused', ctx=Load()), slice=Call(func=Name(id='id', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]), ctx=Store())], value=Name(id='key', ctx=Load()))], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_pool', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]))]), Return(value=Name(id='conn', ctx=Load()))], decorator_list=[]), FunctionDef(name='_getkey', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Return a new unique key.')), AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_keys', ctx=Store()), op=Add(), value=Constant(value=1)), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_keys', ctx=Load()))], decorator_list=[]), FunctionDef(name='_getconn', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value="Get a free connection and assign it to 'key' if not None.")), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='closed', ctx=Load()), body=[Raise(exc=Call(func=Name(id='PoolError', ctx=Load()), args=[Constant(value='connection pool is closed')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='key', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='key', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_getkey', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='key', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_used', ctx=Load())]), body=[Return(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_used', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Load()))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_pool', ctx=Load()), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_used', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store()), Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_pool', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_rused', ctx=Load()), slice=Call(func=Name(id='id', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]), ctx=Store())], value=Name(id='key', ctx=Load())), Return(value=Name(id='conn', ctx=Load()))], orelse=[If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_used', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='maxconn', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='PoolError', ctx=Load()), args=[Constant(value='connection pool exhausted')], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_connect', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='_putconn', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn'), arg(arg='key'), arg(arg='close')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=False)]), body=[Expr(value=Constant(value='Put away a connection.')), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='closed', ctx=Load()), body=[Raise(exc=Call(func=Name(id='PoolError', ctx=Load()), args=[Constant(value='connection pool is closed')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='key', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='key', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_rused', ctx=Load()), attr='get', ctx=Load()), args=[Call(func=Name(id='id', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[])], keywords=[])), If(test=Compare(left=Name(id='key', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='PoolError', ctx=Load()), args=[Constant(value='trying to put unkeyed connection')], keywords=[]))], orelse=[])], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_pool', ctx=Load())], keywords=[]), ops=[Lt()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='minconn', ctx=Load())]), UnaryOp(op=Not(), operand=Name(id='close', ctx=Load()))]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='conn', ctx=Load()), attr='closed', ctx=Load())), body=[Assign(targets=[Name(id='status', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='conn', ctx=Load()), attr='info', ctx=Load()), attr='transaction_status', ctx=Load())), If(test=Compare(left=Name(id='status', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='_ext', ctx=Load()), attr='TRANSACTION_STATUS_UNKNOWN', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=Compare(left=Name(id='status', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='_ext', ctx=Load()), attr='TRANSACTION_STATUS_IDLE', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='rollback', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_pool', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_pool', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]))])])], orelse=[])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))]), If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='closed', ctx=Load())), Compare(left=Name(id='key', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_used', ctx=Load())])]), body=[Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_used', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Del())]), Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_rused', ctx=Load()), slice=Call(func=Name(id='id', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]), ctx=Del())])], orelse=[])], decorator_list=[]), FunctionDef(name='_closeall', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Close all connections.\n\n        Note that this can lead to some code fail badly when trying to use\n        an already closed connection. If you call .closeall() make sure\n        your code can deal with it.\n        ')), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='closed', ctx=Load()), body=[Raise(exc=Call(func=Name(id='PoolError', ctx=Load()), args=[Constant(value='connection pool is closed')], keywords=[]))], orelse=[]), For(target=Name(id='conn', ctx=Store()), iter=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='_pool', ctx=Load()), op=Add(), right=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_used', ctx=Load()), attr='values', ctx=Load()), args=[], keywords=[])], keywords=[])), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='closed', ctx=Store())], value=Constant(value=True))], decorator_list=[])], decorator_list=[]), ClassDef(name='SimpleConnectionPool', bases=[Name(id='AbstractConnectionPool', ctx=Load())], keywords=[], body=[Expr(value=Constant(value="A connection pool that can't be shared across different threads.")), Assign(targets=[Name(id='getconn', ctx=Store())], value=Attribute(value=Name(id='AbstractConnectionPool', ctx=Load()), attr='_getconn', ctx=Load())), Assign(targets=[Name(id='putconn', ctx=Store())], value=Attribute(value=Name(id='AbstractConnectionPool', ctx=Load()), attr='_putconn', ctx=Load())), Assign(targets=[Name(id='closeall', ctx=Store())], value=Attribute(value=Name(id='AbstractConnectionPool', ctx=Load()), attr='_closeall', ctx=Load()))], decorator_list=[]), ClassDef(name='ThreadedConnectionPool', bases=[Name(id='AbstractConnectionPool', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='A connection pool that works with the threading module.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='minconn'), arg(arg='maxconn')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Constant(value='Initialize the threading lock.')), Import(names=[alias(name='threading')]), Expr(value=Call(func=Attribute(value=Name(id='AbstractConnectionPool', ctx=Load()), attr='__init__', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='minconn', ctx=Load()), Name(id='maxconn', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Store())], value=Call(func=Attribute(value=Name(id='threading', ctx=Load()), attr='Lock', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='getconn', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value="Get a free connection and assign it to 'key' if not None.")), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()), attr='acquire', ctx=Load()), args=[], keywords=[])), Try(body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_getconn', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[]))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()), attr='release', ctx=Load()), args=[], keywords=[]))])], decorator_list=[]), FunctionDef(name='putconn', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn'), arg(arg='key'), arg(arg='close')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None), Constant(value=False)]), body=[Expr(value=Constant(value='Put away an unused connection.')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()), attr='acquire', ctx=Load()), args=[], keywords=[])), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_putconn', ctx=Load()), args=[Name(id='conn', ctx=Load()), Name(id='key', ctx=Load()), Name(id='close', ctx=Load())], keywords=[]))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()), attr='release', ctx=Load()), args=[], keywords=[]))])], decorator_list=[]), FunctionDef(name='closeall', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Close all connections (even the one currently in use.)')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()), attr='acquire', ctx=Load()), args=[], keywords=[])), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_closeall', ctx=Load()), args=[], keywords=[]))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()), attr='release', ctx=Load()), args=[], keywords=[]))])], decorator_list=[])], decorator_list=[])], type_ignores=[])