Module(body=[ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), Import(names=[alias(name='functools')]), Import(names=[alias(name='importlib')]), Import(names=[alias(name='pkgutil')]), Import(names=[alias(name='threading')]), ImportFrom(module='typing', names=[alias(name='Any'), alias(name='Callable'), alias(name='Optional'), alias(name='Sequence')], level=0), Import(names=[alias(name='tiktoken_ext')]), ImportFrom(module='tiktoken.core', names=[alias(name='Encoding')], level=0), Assign(targets=[Name(id='_lock', ctx=Store())], value=Call(func=Attribute(value=Name(id='threading', ctx=Load()), attr='RLock', ctx=Load()), args=[], keywords=[])), AnnAssign(target=Name(id='ENCODINGS', ctx=Store()), annotation=Subscript(value=Name(id='dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='Encoding', ctx=Load())], ctx=Load()), ctx=Load()), value=Dict(keys=[], values=[]), simple=1), AnnAssign(target=Name(id='ENCODING_CONSTRUCTORS', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[], ctx=Load()), Subscript(value=Name(id='dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='Any', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()), ctx=Load()), value=Constant(value=None), simple=1), FunctionDef(name='_available_plugin_modules', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='mods', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='plugin_mods', ctx=Store())], value=Call(func=Attribute(value=Name(id='pkgutil', ctx=Load()), attr='iter_modules', ctx=Load()), args=[Attribute(value=Name(id='tiktoken_ext', ctx=Load()), attr='__path__', ctx=Load()), BinOp(left=Attribute(value=Name(id='tiktoken_ext', ctx=Load()), attr='__name__', ctx=Load()), op=Add(), right=Constant(value='.'))], keywords=[])), For(target=Tuple(elts=[Name(id='_', ctx=Store()), Name(id='mod_name', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store()), iter=Name(id='plugin_mods', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='mods', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='mod_name', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='mods', ctx=Load()))], decorator_list=[Call(func=Attribute(value=Name(id='functools', ctx=Load()), attr='lru_cache', ctx=Load()), args=[], keywords=[])], returns=Subscript(value=Name(id='Sequence', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='_find_constructors', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Global(names=['ENCODING_CONSTRUCTORS']), With(items=[withitem(context_expr=Name(id='_lock', ctx=Load()))], body=[If(test=Compare(left=Name(id='ENCODING_CONSTRUCTORS', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return()], orelse=[]), Assign(targets=[Name(id='ENCODING_CONSTRUCTORS', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Name(id='mod_name', ctx=Store()), iter=Call(func=Name(id='_available_plugin_modules', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='mod', ctx=Store())], value=Call(func=Attribute(value=Name(id='importlib', ctx=Load()), attr='import_module', ctx=Load()), args=[Name(id='mod_name', ctx=Load())], keywords=[])), Try(body=[Assign(targets=[Name(id='constructors', ctx=Store())], value=Attribute(value=Name(id='mod', ctx=Load()), attr='ENCODING_CONSTRUCTORS', ctx=Load()))], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='tiktoken plugin '), FormattedValue(value=Name(id='mod_name', ctx=Load()), conversion=-1), Constant(value=' does not define ENCODING_CONSTRUCTORS')])], keywords=[]), cause=Name(id='e', ctx=Load()))])], orelse=[], finalbody=[]), For(target=Tuple(elts=[Name(id='enc_name', ctx=Store()), Name(id='constructor', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='constructors', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Compare(left=Name(id='enc_name', ctx=Load()), ops=[In()], comparators=[Name(id='ENCODING_CONSTRUCTORS', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Duplicate encoding name '), FormattedValue(value=Name(id='enc_name', ctx=Load()), conversion=-1), Constant(value=' in tiktoken plugin '), FormattedValue(value=Name(id='mod_name', ctx=Load()), conversion=-1)])], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Name(id='ENCODING_CONSTRUCTORS', ctx=Load()), slice=Name(id='enc_name', ctx=Load()), ctx=Store())], value=Name(id='constructor', ctx=Load()))], orelse=[])], orelse=[])])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='get_encoding', args=arguments(posonlyargs=[], args=[arg(arg='encoding_name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='encoding_name', ctx=Load()), ops=[In()], comparators=[Name(id='ENCODINGS', ctx=Load())]), body=[Return(value=Subscript(value=Name(id='ENCODINGS', ctx=Load()), slice=Name(id='encoding_name', ctx=Load()), ctx=Load()))], orelse=[]), With(items=[withitem(context_expr=Name(id='_lock', ctx=Load()))], body=[If(test=Compare(left=Name(id='encoding_name', ctx=Load()), ops=[In()], comparators=[Name(id='ENCODINGS', ctx=Load())]), body=[Return(value=Subscript(value=Name(id='ENCODINGS', ctx=Load()), slice=Name(id='encoding_name', ctx=Load()), ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='ENCODING_CONSTRUCTORS', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='_find_constructors', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Name(id='ENCODING_CONSTRUCTORS', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]))], orelse=[]), If(test=Compare(left=Name(id='encoding_name', ctx=Load()), ops=[NotIn()], comparators=[Name(id='ENCODING_CONSTRUCTORS', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Unknown encoding '), FormattedValue(value=Name(id='encoding_name', ctx=Load()), conversion=-1), Constant(value='. Plugins found: '), FormattedValue(value=Call(func=Name(id='_available_plugin_modules', ctx=Load()), args=[], keywords=[]), conversion=-1)])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='constructor', ctx=Store())], value=Subscript(value=Name(id='ENCODING_CONSTRUCTORS', ctx=Load()), slice=Name(id='encoding_name', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='enc', ctx=Store())], value=Call(func=Name(id='Encoding', ctx=Load()), args=[], keywords=[keyword(value=Call(func=Name(id='constructor', ctx=Load()), args=[], keywords=[]))])), Assign(targets=[Subscript(value=Name(id='ENCODINGS', ctx=Load()), slice=Name(id='encoding_name', ctx=Load()), ctx=Store())], value=Name(id='enc', ctx=Load())), Return(value=Name(id='enc', ctx=Load()))])], decorator_list=[], returns=Name(id='Encoding', ctx=Load())), FunctionDef(name='list_encoding_names', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Name(id='_lock', ctx=Load()))], body=[If(test=Compare(left=Name(id='ENCODING_CONSTRUCTORS', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='_find_constructors', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Name(id='ENCODING_CONSTRUCTORS', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]))], orelse=[]), Return(value=Call(func=Name(id='list', ctx=Load()), args=[Name(id='ENCODING_CONSTRUCTORS', ctx=Load())], keywords=[]))])], decorator_list=[], returns=Subscript(value=Name(id='list', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], type_ignores=[])