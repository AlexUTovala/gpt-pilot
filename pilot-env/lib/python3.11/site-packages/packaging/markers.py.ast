Module(body=[Import(names=[alias(name='operator')]), Import(names=[alias(name='os')]), Import(names=[alias(name='platform')]), Import(names=[alias(name='sys')]), ImportFrom(module='typing', names=[alias(name='Any'), alias(name='Callable'), alias(name='Dict'), alias(name='List'), alias(name='Optional'), alias(name='Tuple'), alias(name='Union')], level=0), ImportFrom(module='_parser', names=[alias(name='MarkerAtom'), alias(name='MarkerList'), alias(name='Op'), alias(name='Value'), alias(name='Variable'), alias(name='parse_marker', asname='_parse_marker')], level=1), ImportFrom(module='_tokenizer', names=[alias(name='ParserSyntaxError')], level=1), ImportFrom(module='specifiers', names=[alias(name='InvalidSpecifier'), alias(name='Specifier')], level=1), ImportFrom(module='utils', names=[alias(name='canonicalize_name')], level=1), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='InvalidMarker'), Constant(value='UndefinedComparison'), Constant(value='UndefinedEnvironmentName'), Constant(value='Marker'), Constant(value='default_environment')], ctx=Load())), Assign(targets=[Name(id='Operator', ctx=Store())], value=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='str', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), Name(id='bool', ctx=Load())], ctx=Load()), ctx=Load())), ClassDef(name='InvalidMarker', bases=[Name(id='ValueError', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    An invalid marker was found, users should refer to PEP 508.\n    '))], decorator_list=[]), ClassDef(name='UndefinedComparison', bases=[Name(id='ValueError', ctx=Load())], keywords=[], body=[Expr(value=Constant(value="\n    An invalid operation was attempted on a value that doesn't support it.\n    "))], decorator_list=[]), ClassDef(name='UndefinedEnvironmentName', bases=[Name(id='ValueError', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    A name was attempted to be used that does not exist inside of the\n    environment.\n    '))], decorator_list=[]), FunctionDef(name='_normalize_extra_values', args=arguments(posonlyargs=[], args=[arg(arg='results', annotation=Name(id='Any', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Normalize extra values.\n    ')), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Name(id='results', ctx=Load()), slice=Constant(value=0), ctx=Load()), Name(id='tuple', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='lhs', ctx=Store()), Name(id='op', ctx=Store()), Name(id='rhs', ctx=Store())], ctx=Store())], value=Subscript(value=Name(id='results', ctx=Load()), slice=Constant(value=0), ctx=Load())), If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='lhs', ctx=Load()), Name(id='Variable', ctx=Load())], keywords=[]), Compare(left=Attribute(value=Name(id='lhs', ctx=Load()), attr='value', ctx=Load()), ops=[Eq()], comparators=[Constant(value='extra')])]), body=[Assign(targets=[Name(id='normalized_extra', ctx=Store())], value=Call(func=Name(id='canonicalize_name', ctx=Load()), args=[Attribute(value=Name(id='rhs', ctx=Load()), attr='value', ctx=Load())], keywords=[])), Assign(targets=[Name(id='rhs', ctx=Store())], value=Call(func=Name(id='Value', ctx=Load()), args=[Name(id='normalized_extra', ctx=Load())], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='rhs', ctx=Load()), Name(id='Variable', ctx=Load())], keywords=[]), Compare(left=Attribute(value=Name(id='rhs', ctx=Load()), attr='value', ctx=Load()), ops=[Eq()], comparators=[Constant(value='extra')])]), body=[Assign(targets=[Name(id='normalized_extra', ctx=Store())], value=Call(func=Name(id='canonicalize_name', ctx=Load()), args=[Attribute(value=Name(id='lhs', ctx=Load()), attr='value', ctx=Load())], keywords=[])), Assign(targets=[Name(id='lhs', ctx=Store())], value=Call(func=Name(id='Value', ctx=Load()), args=[Name(id='normalized_extra', ctx=Load())], keywords=[]))], orelse=[])]), Assign(targets=[Subscript(value=Name(id='results', ctx=Load()), slice=Constant(value=0), ctx=Store())], value=Tuple(elts=[Name(id='lhs', ctx=Load()), Name(id='op', ctx=Load()), Name(id='rhs', ctx=Load())], ctx=Load()))], orelse=[]), Return(value=Name(id='results', ctx=Load()))], decorator_list=[], returns=Name(id='Any', ctx=Load())), FunctionDef(name='_format_marker', args=arguments(posonlyargs=[], args=[arg(arg='marker', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), Name(id='MarkerAtom', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load())), arg(arg='first', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='bool', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assert(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='marker', ctx=Load()), Tuple(elts=[Name(id='list', ctx=Load()), Name(id='tuple', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='marker', ctx=Load()), Name(id='list', ctx=Load())], keywords=[]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='marker', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Name(id='marker', ctx=Load()), slice=Constant(value=0), ctx=Load()), Tuple(elts=[Name(id='list', ctx=Load()), Name(id='tuple', ctx=Load())], ctx=Load())], keywords=[])]), body=[Return(value=Call(func=Name(id='_format_marker', ctx=Load()), args=[Subscript(value=Name(id='marker', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[]))], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='marker', ctx=Load()), Name(id='list', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='inner', ctx=Store())], value=GeneratorExp(elt=Call(func=Name(id='_format_marker', ctx=Load()), args=[Name(id='m', ctx=Load())], keywords=[keyword(arg='first', value=Constant(value=False))]), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Name(id='marker', ctx=Load()), ifs=[], is_async=0)])), If(test=Name(id='first', ctx=Load()), body=[Return(value=Call(func=Attribute(value=Constant(value=' '), attr='join', ctx=Load()), args=[Name(id='inner', ctx=Load())], keywords=[]))], orelse=[Return(value=BinOp(left=BinOp(left=Constant(value='('), op=Add(), right=Call(func=Attribute(value=Constant(value=' '), attr='join', ctx=Load()), args=[Name(id='inner', ctx=Load())], keywords=[])), op=Add(), right=Constant(value=')')))])], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='marker', ctx=Load()), Name(id='tuple', ctx=Load())], keywords=[]), body=[Return(value=Call(func=Attribute(value=Constant(value=' '), attr='join', ctx=Load()), args=[ListComp(elt=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='serialize', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Name(id='marker', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], orelse=[Return(value=Name(id='marker', ctx=Load()))])])], decorator_list=[], returns=Name(id='str', ctx=Load())), AnnAssign(target=Name(id='_operators', ctx=Store()), annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='Operator', ctx=Load())], ctx=Load()), ctx=Load()), value=Dict(keys=[Constant(value='in'), Constant(value='not in'), Constant(value='<'), Constant(value='<='), Constant(value='=='), Constant(value='!='), Constant(value='>='), Constant(value='>')], values=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='lhs'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Compare(left=Name(id='lhs', ctx=Load()), ops=[In()], comparators=[Name(id='rhs', ctx=Load())])), Lambda(args=arguments(posonlyargs=[], args=[arg(arg='lhs'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Compare(left=Name(id='lhs', ctx=Load()), ops=[NotIn()], comparators=[Name(id='rhs', ctx=Load())])), Attribute(value=Name(id='operator', ctx=Load()), attr='lt', ctx=Load()), Attribute(value=Name(id='operator', ctx=Load()), attr='le', ctx=Load()), Attribute(value=Name(id='operator', ctx=Load()), attr='eq', ctx=Load()), Attribute(value=Name(id='operator', ctx=Load()), attr='ne', ctx=Load()), Attribute(value=Name(id='operator', ctx=Load()), attr='ge', ctx=Load()), Attribute(value=Name(id='operator', ctx=Load()), attr='gt', ctx=Load())]), simple=1), FunctionDef(name='_eval_op', args=arguments(posonlyargs=[], args=[arg(arg='lhs', annotation=Name(id='str', ctx=Load())), arg(arg='op', annotation=Name(id='Op', ctx=Load())), arg(arg='rhs', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Assign(targets=[Name(id='spec', ctx=Store())], value=Call(func=Name(id='Specifier', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[List(elts=[Call(func=Attribute(value=Name(id='op', ctx=Load()), attr='serialize', ctx=Load()), args=[], keywords=[]), Name(id='rhs', ctx=Load())], ctx=Load())], keywords=[])], keywords=[]))], handlers=[ExceptHandler(type=Name(id='InvalidSpecifier', ctx=Load()), body=[Pass()])], orelse=[Return(value=Call(func=Attribute(value=Name(id='spec', ctx=Load()), attr='contains', ctx=Load()), args=[Name(id='lhs', ctx=Load())], keywords=[keyword(arg='prereleases', value=Constant(value=True))]))], finalbody=[]), AnnAssign(target=Name(id='oper', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='Operator', ctx=Load()), ctx=Load()), value=Call(func=Attribute(value=Name(id='_operators', ctx=Load()), attr='get', ctx=Load()), args=[Call(func=Attribute(value=Name(id='op', ctx=Load()), attr='serialize', ctx=Load()), args=[], keywords=[])], keywords=[]), simple=1), If(test=Compare(left=Name(id='oper', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='UndefinedComparison', ctx=Load()), args=[JoinedStr(values=[Constant(value='Undefined '), FormattedValue(value=Name(id='op', ctx=Load()), conversion=114), Constant(value=' on '), FormattedValue(value=Name(id='lhs', ctx=Load()), conversion=114), Constant(value=' and '), FormattedValue(value=Name(id='rhs', ctx=Load()), conversion=114), Constant(value='.')])], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='oper', ctx=Load()), args=[Name(id='lhs', ctx=Load()), Name(id='rhs', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='bool', ctx=Load())), FunctionDef(name='_normalize', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='values', annotation=Name(id='str', ctx=Load())), kwonlyargs=[arg(arg='key', annotation=Name(id='str', ctx=Load()))], kw_defaults=[None], defaults=[]), body=[If(test=Compare(left=Name(id='key', ctx=Load()), ops=[Eq()], comparators=[Constant(value='extra')]), body=[Return(value=Call(func=Name(id='tuple', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='canonicalize_name', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='v', ctx=Store()), iter=Name(id='values', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], orelse=[]), Return(value=Name(id='values', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load())), FunctionDef(name='_evaluate_markers', args=arguments(posonlyargs=[], args=[arg(arg='markers', annotation=Name(id='MarkerList', ctx=Load())), arg(arg='environment', annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[AnnAssign(target=Name(id='groups', ctx=Store()), annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='bool', ctx=Load()), ctx=Load()), ctx=Load()), value=List(elts=[List(elts=[], ctx=Load())], ctx=Load()), simple=1), For(target=Name(id='marker', ctx=Store()), iter=Name(id='markers', ctx=Load()), body=[Assert(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='marker', ctx=Load()), Tuple(elts=[Name(id='list', ctx=Load()), Name(id='tuple', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load())], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='marker', ctx=Load()), Name(id='list', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Subscript(value=Name(id='groups', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='_evaluate_markers', ctx=Load()), args=[Name(id='marker', ctx=Load()), Name(id='environment', ctx=Load())], keywords=[])], keywords=[]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='marker', ctx=Load()), Name(id='tuple', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='lhs', ctx=Store()), Name(id='op', ctx=Store()), Name(id='rhs', ctx=Store())], ctx=Store())], value=Name(id='marker', ctx=Load())), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='lhs', ctx=Load()), Name(id='Variable', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='environment_key', ctx=Store())], value=Attribute(value=Name(id='lhs', ctx=Load()), attr='value', ctx=Load())), Assign(targets=[Name(id='lhs_value', ctx=Store())], value=Subscript(value=Name(id='environment', ctx=Load()), slice=Name(id='environment_key', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='rhs_value', ctx=Store())], value=Attribute(value=Name(id='rhs', ctx=Load()), attr='value', ctx=Load()))], orelse=[Assign(targets=[Name(id='lhs_value', ctx=Store())], value=Attribute(value=Name(id='lhs', ctx=Load()), attr='value', ctx=Load())), Assign(targets=[Name(id='environment_key', ctx=Store())], value=Attribute(value=Name(id='rhs', ctx=Load()), attr='value', ctx=Load())), Assign(targets=[Name(id='rhs_value', ctx=Store())], value=Subscript(value=Name(id='environment', ctx=Load()), slice=Name(id='environment_key', ctx=Load()), ctx=Load()))]), Assign(targets=[Tuple(elts=[Name(id='lhs_value', ctx=Store()), Name(id='rhs_value', ctx=Store())], ctx=Store())], value=Call(func=Name(id='_normalize', ctx=Load()), args=[Name(id='lhs_value', ctx=Load()), Name(id='rhs_value', ctx=Load())], keywords=[keyword(arg='key', value=Name(id='environment_key', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Subscript(value=Name(id='groups', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='_eval_op', ctx=Load()), args=[Name(id='lhs_value', ctx=Load()), Name(id='op', ctx=Load()), Name(id='rhs_value', ctx=Load())], keywords=[])], keywords=[]))], orelse=[Assert(test=Compare(left=Name(id='marker', ctx=Load()), ops=[In()], comparators=[List(elts=[Constant(value='and'), Constant(value='or')], ctx=Load())])), If(test=Compare(left=Name(id='marker', ctx=Load()), ops=[Eq()], comparators=[Constant(value='or')]), body=[Expr(value=Call(func=Attribute(value=Name(id='groups', ctx=Load()), attr='append', ctx=Load()), args=[List(elts=[], ctx=Load())], keywords=[]))], orelse=[])])])], orelse=[]), Return(value=Call(func=Name(id='any', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='all', ctx=Load()), args=[Name(id='item', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='item', ctx=Store()), iter=Name(id='groups', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], decorator_list=[], returns=Name(id='bool', ctx=Load())), FunctionDef(name='format_full_version', args=arguments(posonlyargs=[], args=[arg(arg='info', annotation=Constant(value='sys._version_info'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='version', ctx=Store())], value=Call(func=Attribute(value=Constant(value='{0.major}.{0.minor}.{0.micro}'), attr='format', ctx=Load()), args=[Name(id='info', ctx=Load())], keywords=[])), Assign(targets=[Name(id='kind', ctx=Store())], value=Attribute(value=Name(id='info', ctx=Load()), attr='releaselevel', ctx=Load())), If(test=Compare(left=Name(id='kind', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='final')]), body=[AugAssign(target=Name(id='version', ctx=Store()), op=Add(), value=BinOp(left=Subscript(value=Name(id='kind', ctx=Load()), slice=Constant(value=0), ctx=Load()), op=Add(), right=Call(func=Name(id='str', ctx=Load()), args=[Attribute(value=Name(id='info', ctx=Load()), attr='serial', ctx=Load())], keywords=[])))], orelse=[]), Return(value=Name(id='version', ctx=Load()))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='default_environment', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='iver', ctx=Store())], value=Call(func=Name(id='format_full_version', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='implementation', ctx=Load()), attr='version', ctx=Load())], keywords=[])), Assign(targets=[Name(id='implementation_name', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='implementation', ctx=Load()), attr='name', ctx=Load())), Return(value=Dict(keys=[Constant(value='implementation_name'), Constant(value='implementation_version'), Constant(value='os_name'), Constant(value='platform_machine'), Constant(value='platform_release'), Constant(value='platform_system'), Constant(value='platform_version'), Constant(value='python_full_version'), Constant(value='platform_python_implementation'), Constant(value='python_version'), Constant(value='sys_platform')], values=[Name(id='implementation_name', ctx=Load()), Name(id='iver', ctx=Load()), Attribute(value=Name(id='os', ctx=Load()), attr='name', ctx=Load()), Call(func=Attribute(value=Name(id='platform', ctx=Load()), attr='machine', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='platform', ctx=Load()), attr='release', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='platform', ctx=Load()), attr='system', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='platform', ctx=Load()), attr='version', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='platform', ctx=Load()), attr='python_version', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='platform', ctx=Load()), attr='python_implementation', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Constant(value='.'), attr='join', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='platform', ctx=Load()), attr='python_version_tuple', ctx=Load()), args=[], keywords=[]), slice=Slice(upper=Constant(value=2)), ctx=Load())], keywords=[]), Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load())]))], decorator_list=[], returns=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load())), ClassDef(name='Marker', bases=[], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='marker', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_markers', ctx=Store())], value=Call(func=Name(id='_normalize_extra_values', ctx=Load()), args=[Call(func=Name(id='_parse_marker', ctx=Load()), args=[Name(id='marker', ctx=Load())], keywords=[])], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ParserSyntaxError', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='InvalidMarker', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[])], keywords=[]), cause=Name(id='e', ctx=Load()))])], orelse=[], finalbody=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__str__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='_format_marker', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_markers', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=JoinedStr(values=[Constant(value="<Marker('"), FormattedValue(value=Name(id='self', ctx=Load()), conversion=-1), Constant(value="')>")]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='__hash__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='hash', ctx=Load()), args=[Tuple(elts=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__class__', ctx=Load()), attr='__name__', ctx=Load()), Call(func=Name(id='str', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])], ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='int', ctx=Load())), FunctionDef(name='__eq__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other', annotation=Name(id='Any', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='other', ctx=Load()), Name(id='Marker', ctx=Load())], keywords=[])), body=[Return(value=Name(id='NotImplemented', ctx=Load()))], orelse=[]), Return(value=Compare(left=Call(func=Name(id='str', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='other', ctx=Load())], keywords=[])]))], decorator_list=[], returns=Name(id='bool', ctx=Load())), FunctionDef(name='evaluate', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='environment', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='Evaluate a marker.\n\n        Return the boolean from evaluating the given marker against the\n        environment. environment is an optional argument to override all or\n        part of the determined environment.\n\n        The environment is determined from the current Python process.\n        ')), Assign(targets=[Name(id='current_environment', ctx=Store())], value=Call(func=Name(id='default_environment', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='current_environment', ctx=Load()), slice=Constant(value='extra'), ctx=Store())], value=Constant(value='')), If(test=Compare(left=Name(id='environment', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='current_environment', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='environment', ctx=Load())], keywords=[])), If(test=Compare(left=Subscript(value=Name(id='current_environment', ctx=Load()), slice=Constant(value='extra'), ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='current_environment', ctx=Load()), slice=Constant(value='extra'), ctx=Store())], value=Constant(value=''))], orelse=[])], orelse=[]), Return(value=Call(func=Name(id='_evaluate_markers', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_markers', ctx=Load()), Name(id='current_environment', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], decorator_list=[])], type_ignores=[])