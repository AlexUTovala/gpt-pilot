Module(body=[Import(names=[alias(name='collections')]), Import(names=[alias(name='pathlib')]), Import(names=[alias(name='operator')]), ImportFrom(names=[alias(name='abc')], level=1), ImportFrom(module='_itertools', names=[alias(name='unique_everseen')], level=1), ImportFrom(module='_compat', names=[alias(name='ZipPath')], level=1), FunctionDef(name='remove_duplicates', args=arguments(posonlyargs=[], args=[arg(arg='items')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='iter', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='collections', ctx=Load()), attr='OrderedDict', ctx=Load()), attr='fromkeys', ctx=Load()), args=[Name(id='items', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), ClassDef(name='FileReader', bases=[Attribute(value=Name(id='abc', ctx=Load()), attr='TraversableResources', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='loader')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='path', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='pathlib', ctx=Load()), attr='Path', ctx=Load()), args=[Attribute(value=Name(id='loader', ctx=Load()), attr='path', ctx=Load())], keywords=[]), attr='parent', ctx=Load()))], decorator_list=[]), FunctionDef(name='resource_path', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Return the file system path to prevent\n        `resources.path()` from creating a temporary\n        copy.\n        ')), Return(value=Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='path', ctx=Load()), attr='joinpath', ctx=Load()), args=[Name(id='resource', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='files', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='path', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='ZipReader', bases=[Attribute(value=Name(id='abc', ctx=Load()), attr='TraversableResources', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='loader'), arg(arg='module')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='_', ctx=Store()), Name(id='_', ctx=Store()), Name(id='name', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='module', ctx=Load()), attr='rpartition', ctx=Load()), args=[Constant(value='.')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Store())], value=BinOp(left=BinOp(left=Call(func=Attribute(value=Attribute(value=Name(id='loader', ctx=Load()), attr='prefix', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='\\'), Constant(value='/')], keywords=[]), op=Add(), right=Name(id='name', ctx=Load())), op=Add(), right=Constant(value='/'))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='archive', ctx=Store())], value=Attribute(value=Name(id='loader', ctx=Load()), attr='archive', ctx=Load()))], decorator_list=[]), FunctionDef(name='open_resource', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='open_resource', ctx=Load()), args=[Name(id='resource', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), name='exc', body=[Raise(exc=Call(func=Name(id='FileNotFoundError', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='exc', ctx=Load()), attr='args', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[]), FunctionDef(name='is_resource', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='target', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='files', ctx=Load()), args=[], keywords=[]), attr='joinpath', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[])), Return(value=BoolOp(op=And(), values=[Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='is_file', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='exists', ctx=Load()), args=[], keywords=[])]))], decorator_list=[]), FunctionDef(name='files', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='ZipPath', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='archive', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='MultiplexedPath', bases=[Attribute(value=Name(id='abc', ctx=Load()), attr='Traversable', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    Given a series of Traversable objects, implement a merged\n    version of the interface across all objects. Useful for\n    namespace packages which may be multihomed at a single\n    name.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='paths'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_paths', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Attribute(value=Name(id='pathlib', ctx=Load()), attr='Path', ctx=Load()), Call(func=Name(id='remove_duplicates', ctx=Load()), args=[Name(id='paths', ctx=Load())], keywords=[])], keywords=[])], keywords=[])), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_paths', ctx=Load())), body=[Assign(targets=[Name(id='message', ctx=Store())], value=Constant(value='MultiplexedPath must contain at least one path')), Raise(exc=Call(func=Name(id='FileNotFoundError', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='all', ctx=Load()), args=[GeneratorExp(elt=Call(func=Attribute(value=Name(id='path', ctx=Load()), attr='is_dir', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='path', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_paths', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), body=[Raise(exc=Call(func=Name(id='NotADirectoryError', ctx=Load()), args=[Constant(value='MultiplexedPath only supports directories')], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='iterdir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='files', ctx=Store())], value=GeneratorExp(elt=Name(id='file', ctx=Load()), generators=[comprehension(target=Name(id='path', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_paths', ctx=Load()), ifs=[], is_async=0), comprehension(target=Name(id='file', ctx=Store()), iter=Call(func=Attribute(value=Name(id='path', ctx=Load()), attr='iterdir', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])), Return(value=Call(func=Name(id='unique_everseen', ctx=Load()), args=[Name(id='files', ctx=Load())], keywords=[keyword(arg='key', value=Call(func=Attribute(value=Name(id='operator', ctx=Load()), attr='attrgetter', ctx=Load()), args=[Constant(value='name')], keywords=[]))]))], decorator_list=[]), FunctionDef(name='read_bytes', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Call(func=Name(id='FileNotFoundError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='self', ctx=Load()), conversion=-1), Constant(value=' is not a file')])], keywords=[]))], decorator_list=[]), FunctionDef(name='read_text', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Raise(exc=Call(func=Name(id='FileNotFoundError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='self', ctx=Load()), conversion=-1), Constant(value=' is not a file')])], keywords=[]))], decorator_list=[]), FunctionDef(name='is_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=True))], decorator_list=[]), FunctionDef(name='is_file', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=False))], decorator_list=[]), FunctionDef(name='joinpath', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='descendants'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='joinpath', ctx=Load()), args=[Starred(value=Name(id='descendants', ctx=Load()), ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='abc', ctx=Load()), attr='TraversalError', ctx=Load()), body=[Return(value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_paths', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='joinpath', ctx=Load()), args=[Starred(value=Name(id='descendants', ctx=Load()), ctx=Load())], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[]), FunctionDef(name='open', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Raise(exc=Call(func=Name(id='FileNotFoundError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='self', ctx=Load()), conversion=-1), Constant(value=' is not a file')])], keywords=[]))], decorator_list=[]), FunctionDef(name='name', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_paths', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='name', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='paths', ctx=Store())], value=Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[GeneratorExp(elt=JoinedStr(values=[Constant(value="'"), FormattedValue(value=Name(id='path', ctx=Load()), conversion=-1), Constant(value="'")]), generators=[comprehension(target=Name(id='path', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_paths', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), Return(value=JoinedStr(values=[Constant(value='MultiplexedPath('), FormattedValue(value=Name(id='paths', ctx=Load()), conversion=-1), Constant(value=')')]))], decorator_list=[])], decorator_list=[]), ClassDef(name='NamespaceReader', bases=[Attribute(value=Name(id='abc', ctx=Load()), attr='TraversableResources', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='namespace_path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Constant(value='NamespacePath'), ops=[NotIn()], comparators=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='namespace_path', ctx=Load())], keywords=[])]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Invalid path')], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='path', ctx=Store())], value=Call(func=Name(id='MultiplexedPath', ctx=Load()), args=[Starred(value=Call(func=Name(id='list', ctx=Load()), args=[Name(id='namespace_path', ctx=Load())], keywords=[]), ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='resource_path', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Return the file system path to prevent\n        `resources.path()` from creating a temporary\n        copy.\n        ')), Return(value=Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='path', ctx=Load()), attr='joinpath', ctx=Load()), args=[Name(id='resource', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='files', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='path', ctx=Load()))], decorator_list=[])], decorator_list=[])], type_ignores=[])