Module(body=[Expr(value=Constant(value="\nCharset-Normalizer\n~~~~~~~~~~~~~~\nThe Real First Universal Charset Detector.\nA library that helps you read text from an unknown charset encoding.\nMotivated by chardet, This package is trying to resolve the issue by taking a new approach.\nAll IANA character set names for which the Python core library provides codecs are supported.\n\nBasic usage:\n   >>> from charset_normalizer import from_bytes\n   >>> results = from_bytes('Bсеки човек има право на образование. Oбразованието!'.encode('utf_8'))\n   >>> best_guess = results.best()\n   >>> str(best_guess)\n   'Bсеки човек има право на образование. Oбразованието!'\n\nOthers methods and usages are available - see the full documentation\nat <https://github.com/Ousret/charset_normalizer>.\n:copyright: (c) 2021 by Ahmed TAHRI\n:license: MIT, see LICENSE for more details.\n")), Import(names=[alias(name='logging')]), ImportFrom(module='api', names=[alias(name='from_bytes'), alias(name='from_fp'), alias(name='from_path'), alias(name='is_binary')], level=1), ImportFrom(module='legacy', names=[alias(name='detect')], level=1), ImportFrom(module='models', names=[alias(name='CharsetMatch'), alias(name='CharsetMatches')], level=1), ImportFrom(module='utils', names=[alias(name='set_logging_handler')], level=1), ImportFrom(module='version', names=[alias(name='VERSION'), alias(name='__version__')], level=1), Assign(targets=[Name(id='__all__', ctx=Store())], value=Tuple(elts=[Constant(value='from_fp'), Constant(value='from_path'), Constant(value='from_bytes'), Constant(value='is_binary'), Constant(value='detect'), Constant(value='CharsetMatch'), Constant(value='CharsetMatches'), Constant(value='__version__'), Constant(value='VERSION'), Constant(value='set_logging_handler')], ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Constant(value='charset_normalizer')], keywords=[]), attr='addHandler', ctx=Load()), args=[Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='NullHandler', ctx=Load()), args=[], keywords=[])], keywords=[]))], type_ignores=[])