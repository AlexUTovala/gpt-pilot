Module(body=[Expr(value=Constant(value='\nyaspin.yaspin\n~~~~~~~~~~~~~\n\nA lightweight terminal spinner.\n')), Import(names=[alias(name='contextlib')]), Import(names=[alias(name='functools')]), Import(names=[alias(name='itertools')]), Import(names=[alias(name='signal')]), Import(names=[alias(name='sys')]), Import(names=[alias(name='threading')]), Import(names=[alias(name='time')]), Import(names=[alias(name='warnings')]), ImportFrom(module='datetime', names=[alias(name='timedelta')], level=0), ImportFrom(module='typing', names=[alias(name='List'), alias(name='Set'), alias(name='Union')], level=0), ImportFrom(module='termcolor', names=[alias(name='colored')], level=0), ImportFrom(module='base_spinner', names=[alias(name='Spinner'), alias(name='default_spinner')], level=1), ImportFrom(module='constants', names=[alias(name='COLOR_ATTRS'), alias(name='COLOR_MAP'), alias(name='SPINNER_ATTRS')], level=1), ImportFrom(module='helpers', names=[alias(name='to_unicode')], level=1), ClassDef(name='Yaspin', bases=[], keywords=[], body=[Expr(value=Constant(value='Implements a context manager that spawns a thread\n    to write spinner frames into a tty (stdout) during\n    context execution.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='spinner'), arg(arg='text'), arg(arg='color'), arg(arg='on_color'), arg(arg='attrs'), arg(arg='reversal'), arg(arg='side'), arg(arg='sigmap'), arg(arg='timer')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=''), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=False), Constant(value='left'), Constant(value=None), Constant(value=False)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_spinner', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_spinner', ctx=Load()), args=[Name(id='spinner', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_frames', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_frames', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_spinner', ctx=Load()), Name(id='reversal', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_interval', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_interval', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_spinner', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cycle', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_cycle', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_frames', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_color', ctx=Store())], value=IfExp(test=Name(id='color', ctx=Load()), body=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_color', ctx=Load()), args=[Name(id='color', ctx=Load())], keywords=[]), orelse=Name(id='color', ctx=Load()))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_on_color', ctx=Store())], value=IfExp(test=Name(id='on_color', ctx=Load()), body=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_on_color', ctx=Load()), args=[Name(id='on_color', ctx=Load())], keywords=[]), orelse=Name(id='on_color', ctx=Load()))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_attrs', ctx=Store())], value=IfExp(test=Name(id='attrs', ctx=Load()), body=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_attrs', ctx=Load()), args=[Name(id='attrs', ctx=Load())], keywords=[]), orelse=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[]))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_color_func', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_compose_color_func', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_text', ctx=Store())], value=Name(id='text', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_side', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_side', ctx=Load()), args=[Name(id='side', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_reversal', ctx=Store())], value=Name(id='reversal', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_timer', ctx=Store())], value=Name(id='timer', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_start_time', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_stop_time', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_stop_spin', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_hide_spin', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_spin_thread', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_last_frame', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_stdout_lock', ctx=Store())], value=Call(func=Attribute(value=Name(id='threading', ctx=Load()), attr='Lock', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_hidden_level', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cur_line_len', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_sigmap', ctx=Store())], value=IfExp(test=Name(id='sigmap', ctx=Load()), body=Name(id='sigmap', ctx=Load()), orelse=Dict(keys=[], values=[]))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_dfl_sigmap', ctx=Store())], value=Dict(keys=[], values=[]))], decorator_list=[]), FunctionDef(name='__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=JoinedStr(values=[Constant(value='<Yaspin frames='), FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='_frames', ctx=Load()), conversion=115), Constant(value='>')]))], decorator_list=[]), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load()), args=[], keywords=[])), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exc_type'), arg(arg='exc_val'), arg(arg='traceback')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_spin_thread', ctx=Load()), attr='is_alive', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='stop', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Constant(value=False))], decorator_list=[]), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='inner', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[With(items=[withitem(context_expr=Name(id='self', ctx=Load()))], body=[Return(value=Call(func=Name(id='fn', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))])], decorator_list=[Call(func=Attribute(value=Name(id='functools', ctx=Load()), attr='wraps', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[])]), Return(value=Name(id='inner', ctx=Load()))], decorator_list=[]), FunctionDef(name='__getattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='name', ctx=Load()), ops=[In()], comparators=[Name(id='SPINNER_ATTRS', ctx=Load())]), body=[ImportFrom(module='spinners', names=[alias(name='Spinners')], level=1), Assign(targets=[Name(id='sp', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='Spinners', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='spinner', ctx=Store())], value=Name(id='sp', ctx=Load()))], orelse=[If(test=Compare(left=Name(id='name', ctx=Load()), ops=[In()], comparators=[Name(id='COLOR_ATTRS', ctx=Load())]), body=[Assign(targets=[Name(id='attr_type', ctx=Store())], value=Subscript(value=Name(id='COLOR_MAP', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Load())), If(test=Compare(left=Name(id='attr_type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='attrs')]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='attrs', ctx=Store())], value=List(elts=[Name(id='name', ctx=Load())], ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='attr_type', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='color'), Constant(value='on_color')], ctx=Load())]), body=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='attr_type', ctx=Load()), Name(id='name', ctx=Load())], keywords=[]))], orelse=[])], orelse=[If(test=Compare(left=Name(id='name', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='left'), Constant(value='right')], ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='side', ctx=Store())], value=Name(id='name', ctx=Load()))], orelse=[Raise(exc=Call(func=Name(id='AttributeError', ctx=Load()), args=[JoinedStr(values=[Constant(value="'"), FormattedValue(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__class__', ctx=Load()), attr='__name__', ctx=Load()), conversion=-1), Constant(value="' object has no attribute: '"), FormattedValue(value=Name(id='name', ctx=Load()), conversion=-1), Constant(value="'")])], keywords=[]))])])]), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='spinner', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_spinner', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='spinner', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='sp')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_spinner', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_spinner', ctx=Load()), args=[Name(id='sp', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_frames', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_frames', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_spinner', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_reversal', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_interval', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_interval', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_spinner', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cycle', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_cycle', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_frames', ctx=Load())], keywords=[]))], decorator_list=[Attribute(value=Name(id='spinner', ctx=Load()), attr='setter', ctx=Load())]), FunctionDef(name='text', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_text', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='text', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='txt')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_text', ctx=Store())], value=Name(id='txt', ctx=Load()))], decorator_list=[Attribute(value=Name(id='text', ctx=Load()), attr='setter', ctx=Load())]), FunctionDef(name='color', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_color', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='color', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_color', ctx=Store())], value=IfExp(test=Name(id='value', ctx=Load()), body=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_color', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), orelse=Name(id='value', ctx=Load()))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_color_func', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_compose_color_func', ctx=Load()), args=[], keywords=[]))], decorator_list=[Attribute(value=Name(id='color', ctx=Load()), attr='setter', ctx=Load())]), FunctionDef(name='on_color', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_on_color', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='on_color', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_on_color', ctx=Store())], value=IfExp(test=Name(id='value', ctx=Load()), body=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_on_color', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), orelse=Name(id='value', ctx=Load()))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_color_func', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_compose_color_func', ctx=Load()), args=[], keywords=[]))], decorator_list=[Attribute(value=Name(id='on_color', ctx=Load()), attr='setter', ctx=Load())]), FunctionDef(name='attrs', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='list', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_attrs', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='attrs', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='new_attrs', ctx=Store())], value=IfExp(test=Name(id='value', ctx=Load()), body=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_attrs', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), orelse=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[]))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_attrs', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_attrs', ctx=Load()), attr='union', ctx=Load()), args=[Name(id='new_attrs', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_color_func', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_compose_color_func', ctx=Load()), args=[], keywords=[]))], decorator_list=[Attribute(value=Name(id='attrs', ctx=Load()), attr='setter', ctx=Load())]), FunctionDef(name='side', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_side', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='side', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_side', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_side', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[Attribute(value=Name(id='side', ctx=Load()), attr='setter', ctx=Load())]), FunctionDef(name='reversal', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_reversal', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='reversal', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_reversal', ctx=Store())], value=Name(id='value', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_frames', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_frames', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_spinner', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_reversal', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cycle', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_cycle', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_frames', ctx=Load())], keywords=[]))], decorator_list=[Attribute(value=Name(id='reversal', ctx=Load()), attr='setter', ctx=Load())]), FunctionDef(name='elapsed_time', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_start_time', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return(value=Constant(value=0))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_stop_time', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return(value=BinOp(left=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), op=Sub(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_start_time', ctx=Load())))], orelse=[]), Return(value=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='_stop_time', ctx=Load()), op=Sub(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_start_time', ctx=Load())))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='start', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_sigmap', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_register_signal_handlers', ctx=Load()), args=[], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_hide_cursor', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_start_time', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_stop_time', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_stop_spin', ctx=Store())], value=Call(func=Attribute(value=Name(id='threading', ctx=Load()), attr='Event', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_hide_spin', ctx=Store())], value=Call(func=Attribute(value=Name(id='threading', ctx=Load()), attr='Event', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_spin_thread', ctx=Store())], value=Call(func=Attribute(value=Name(id='threading', ctx=Load()), attr='Thread', ctx=Load()), args=[], keywords=[keyword(arg='target', value=Attribute(value=Name(id='self', ctx=Load()), attr='_spin', ctx=Load()))])), Try(body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_spin_thread', ctx=Load()), attr='start', ctx=Load()), args=[], keywords=[]))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_show_cursor', ctx=Load()), args=[], keywords=[]))])], decorator_list=[]), FunctionDef(name='stop', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_stop_time', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_dfl_sigmap', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_reset_signal_handlers', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_spin_thread', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_stop_spin', ctx=Load()), attr='set', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_spin_thread', ctx=Load()), attr='join', ctx=Load()), args=[], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_clear_line', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_show_cursor', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='hide', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Hide the spinner to allow for custom writing to the terminal.')), Assign(targets=[Name(id='thr_is_alive', ctx=Store())], value=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_spin_thread', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_spin_thread', ctx=Load()), attr='is_alive', ctx=Load()), args=[], keywords=[])])), If(test=BoolOp(op=And(), values=[Name(id='thr_is_alive', ctx=Load()), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_hide_spin', ctx=Load()), attr='is_set', ctx=Load()), args=[], keywords=[]))]), body=[With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_stdout_lock', ctx=Load()))], body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_hide_spin', ctx=Load()), attr='set', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_clear_line', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='flush', ctx=Load()), args=[], keywords=[]))])], orelse=[])], decorator_list=[]), FunctionDef(name='hidden', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Hide the spinner within a block, can be nested')), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_hidden_level', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='hide', ctx=Load()), args=[], keywords=[]))], orelse=[]), AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_hidden_level', ctx=Store()), op=Add(), value=Constant(value=1)), Try(body=[Expr(value=Yield())], handlers=[], orelse=[], finalbody=[AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_hidden_level', ctx=Store()), op=Sub(), value=Constant(value=1)), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_hidden_level', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='show', ctx=Load()), args=[], keywords=[]))], orelse=[])])], decorator_list=[Attribute(value=Name(id='contextlib', ctx=Load()), attr='contextmanager', ctx=Load())]), FunctionDef(name='show', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Show the hidden spinner.')), Assign(targets=[Name(id='thr_is_alive', ctx=Store())], value=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_spin_thread', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_spin_thread', ctx=Load()), attr='is_alive', ctx=Load()), args=[], keywords=[])])), If(test=BoolOp(op=And(), values=[Name(id='thr_is_alive', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_hide_spin', ctx=Load()), attr='is_set', ctx=Load()), args=[], keywords=[])]), body=[With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_stdout_lock', ctx=Load()))], body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_hide_spin', ctx=Load()), attr='clear', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_clear_line', ctx=Load()), args=[], keywords=[]))])], orelse=[])], decorator_list=[]), FunctionDef(name='write', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='text')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Write text in the terminal without breaking the spinner.')), With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_stdout_lock', ctx=Load()))], body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_clear_line', ctx=Load()), args=[], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='text', ctx=Load()), Tuple(elts=[Name(id='str', ctx=Load()), Name(id='bytes', ctx=Load())], ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='_text', ctx=Store())], value=Call(func=Name(id='to_unicode', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='_text', ctx=Store())], value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[]))]), Assert(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='_text', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='write', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='_text', ctx=Load()), conversion=-1), Constant(value='\n')])], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cur_line_len', ctx=Store())], value=Constant(value=0))])], decorator_list=[]), FunctionDef(name='ok', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='text')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='OK')]), body=[Expr(value=Constant(value='Set Ok (success) finalizer to a spinner.')), Assign(targets=[Name(id='_text', ctx=Store())], value=IfExp(test=Name(id='text', ctx=Load()), body=Name(id='text', ctx=Load()), orelse=Constant(value='OK'))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_freeze', ctx=Load()), args=[Name(id='_text', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='fail', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='text')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='FAIL')]), body=[Expr(value=Constant(value='Set fail finalizer to a spinner.')), Assign(targets=[Name(id='_text', ctx=Store())], value=IfExp(test=Name(id='text', ctx=Load()), body=Name(id='text', ctx=Load()), orelse=Constant(value='FAIL'))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_freeze', ctx=Load()), args=[Name(id='_text', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_warn_color_disabled', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='warnings', ctx=Load()), attr='warn', ctx=Load()), args=[Constant(value='color, on_color and attrs are not supported when running in jupyter')], keywords=[keyword(arg='stacklevel', value=Constant(value=3))]))], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='_freeze', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='final_text')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="Stop spinner, compose last frame and 'freeze' it.")), Assign(targets=[Name(id='text', ctx=Store())], value=Call(func=Name(id='to_unicode', ctx=Load()), args=[Name(id='final_text', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_last_frame', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_compose_out', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[keyword(arg='mode', value=Constant(value='last'))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='stop', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_stdout_lock', ctx=Load()))], body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='write', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_last_frame', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cur_line_len', ctx=Store())], value=Constant(value=0))])], decorator_list=[]), FunctionDef(name='_spin', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[While(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_stop_spin', ctx=Load()), attr='is_set', ctx=Load()), args=[], keywords=[])), body=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_hide_spin', ctx=Load()), attr='is_set', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='sleep', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_interval', ctx=Load())], keywords=[])), Continue()], orelse=[]), Assign(targets=[Name(id='spin_phase', ctx=Store())], value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_cycle', ctx=Load())], keywords=[])), Assign(targets=[Name(id='out', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_compose_out', ctx=Load()), args=[Name(id='spin_phase', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_stdout_lock', ctx=Load()))], body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_clear_line', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='out', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='flush', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cur_line_len', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_cur_line_len', ctx=Load()), Call(func=Name(id='len', ctx=Load()), args=[Name(id='out', ctx=Load())], keywords=[])], keywords=[]))]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_stop_spin', ctx=Load()), attr='wait', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_interval', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='_compose_color_func', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_jupyter', ctx=Load()), args=[], keywords=[]), body=[Return(value=Constant(value=None))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='functools', ctx=Load()), attr='partial', ctx=Load()), args=[Name(id='colored', ctx=Load())], keywords=[keyword(arg='color', value=Attribute(value=Name(id='self', ctx=Load()), attr='_color', ctx=Load())), keyword(arg='on_color', value=Attribute(value=Name(id='self', ctx=Load()), attr='_on_color', ctx=Load())), keyword(arg='attrs', value=Call(func=Name(id='list', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_attrs', ctx=Load())], keywords=[]))]))], decorator_list=[]), FunctionDef(name='_compose_out', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='frame'), arg(arg='mode')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assert(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='frame', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), Assign(targets=[Name(id='text', ctx=Store())], value=Call(func=Name(id='str', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_text', ctx=Load())], keywords=[])), Assert(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='text', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_color_func', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='frame', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_color_func', ctx=Load()), args=[Name(id='frame', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_side', ctx=Load()), ops=[Eq()], comparators=[Constant(value='right')]), body=[Assign(targets=[Tuple(elts=[Name(id='frame', ctx=Store()), Name(id='text', ctx=Store())], ctx=Store())], value=Tuple(elts=[Name(id='text', ctx=Load()), Name(id='frame', ctx=Load())], ctx=Load()))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_timer', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='sec', ctx=Store()), Name(id='fsec', ctx=Store())], ctx=Store())], value=Call(func=Name(id='divmod', ctx=Load()), args=[Call(func=Name(id='round', ctx=Load()), args=[BinOp(left=Constant(value=100), op=Mult(), right=Attribute(value=Name(id='self', ctx=Load()), attr='elapsed_time', ctx=Load()))], keywords=[]), Constant(value=100)], keywords=[])), AugAssign(target=Name(id='text', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Constant(value=' ({}.{:02.0f})'), attr='format', ctx=Load()), args=[Call(func=Name(id='timedelta', ctx=Load()), args=[], keywords=[keyword(arg='seconds', value=Name(id='sec', ctx=Load()))]), Name(id='fsec', ctx=Load())], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='mode', ctx=Load())), body=[Assign(targets=[Name(id='out', ctx=Store())], value=JoinedStr(values=[Constant(value='\r'), FormattedValue(value=Name(id='frame', ctx=Load()), conversion=-1), Constant(value=' '), FormattedValue(value=Name(id='text', ctx=Load()), conversion=-1)]))], orelse=[Assign(targets=[Name(id='out', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='frame', ctx=Load()), conversion=-1), Constant(value=' '), FormattedValue(value=Name(id='text', ctx=Load()), conversion=-1), Constant(value='\n')]))]), Assert(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='out', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), Return(value=Name(id='out', ctx=Load()))], decorator_list=[]), FunctionDef(name='_register_signal_handlers', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='signal', ctx=Load()), attr='SIGKILL', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_sigmap', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Trying to set handler for SIGKILL signal. SIGKILL cannot be caught or ignored in POSIX systems.')], keywords=[]))], orelse=[]), For(target=Tuple(elts=[Name(id='sig', ctx=Store()), Name(id='sig_handler', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_sigmap', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='dfl_handler', ctx=Store())], value=Call(func=Attribute(value=Name(id='signal', ctx=Load()), attr='getsignal', ctx=Load()), args=[Name(id='sig', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dfl_sigmap', ctx=Load()), slice=Name(id='sig', ctx=Load()), ctx=Store())], value=Name(id='dfl_handler', ctx=Load())), If(test=Call(func=Name(id='callable', ctx=Load()), args=[Name(id='sig_handler', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='sig_handler', ctx=Store())], value=Call(func=Attribute(value=Name(id='functools', ctx=Load()), attr='partial', ctx=Load()), args=[Name(id='sig_handler', ctx=Load())], keywords=[keyword(arg='spinner', value=Name(id='self', ctx=Load()))]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='signal', ctx=Load()), attr='signal', ctx=Load()), args=[Name(id='sig', ctx=Load()), Name(id='sig_handler', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='_reset_signal_handlers', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Tuple(elts=[Name(id='sig', ctx=Store()), Name(id='sig_handler', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dfl_sigmap', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='signal', ctx=Load()), attr='signal', ctx=Load()), args=[Name(id='sig', ctx=Load()), Name(id='sig_handler', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='is_jupyter', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='isatty', ctx=Load()), args=[], keywords=[])))], decorator_list=[Name(id='staticmethod', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='_set_color', args=arguments(posonlyargs=[], args=[arg(arg='value', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Name(id='Yaspin', ctx=Load()), attr='is_jupyter', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='Yaspin', ctx=Load()), attr='_warn_color_disabled', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='available_values', ctx=Store())], value=ListComp(elt=Name(id='k', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='COLOR_MAP', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), ifs=[Compare(left=Name(id='v', ctx=Load()), ops=[Eq()], comparators=[Constant(value='color')])], is_async=0)])), If(test=Compare(left=Name(id='value', ctx=Load()), ops=[NotIn()], comparators=[Name(id='available_values', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value="'{0}': unsupported color value. Use one of the: {1}"), attr='format', ctx=Load()), args=[Name(id='value', ctx=Load()), Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[Name(id='available_values', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[Name(id='staticmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='_set_on_color', args=arguments(posonlyargs=[], args=[arg(arg='value', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Name(id='Yaspin', ctx=Load()), attr='is_jupyter', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='Yaspin', ctx=Load()), attr='_warn_color_disabled', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='available_values', ctx=Store())], value=ListComp(elt=Name(id='k', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='COLOR_MAP', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), ifs=[Compare(left=Name(id='v', ctx=Load()), ops=[Eq()], comparators=[Constant(value='on_color')])], is_async=0)])), If(test=Compare(left=Name(id='value', ctx=Load()), ops=[NotIn()], comparators=[Name(id='available_values', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value="'{0}': unsupported on_color value. Use one of the: {1}"), attr='format', ctx=Load()), args=[Name(id='value', ctx=Load()), Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[Name(id='available_values', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[Name(id='staticmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='_set_attrs', args=arguments(posonlyargs=[], args=[arg(arg='attrs', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Name(id='Yaspin', ctx=Load()), attr='is_jupyter', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='Yaspin', ctx=Load()), attr='_warn_color_disabled', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='available_values', ctx=Store())], value=ListComp(elt=Name(id='k', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='COLOR_MAP', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), ifs=[Compare(left=Name(id='v', ctx=Load()), ops=[Eq()], comparators=[Constant(value='attrs')])], is_async=0)])), For(target=Name(id='attr', ctx=Store()), iter=Name(id='attrs', ctx=Load()), body=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[NotIn()], comparators=[Name(id='available_values', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value="'{0}': unsupported attribute value. Use one of the: {1}"), attr='format', ctx=Load()), args=[Name(id='attr', ctx=Load()), Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[Name(id='available_values', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[])], orelse=[]), Return(value=Call(func=Name(id='set', ctx=Load()), args=[Name(id='attrs', ctx=Load())], keywords=[]))], decorator_list=[Name(id='staticmethod', ctx=Load())], returns=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='_set_spinner', args=arguments(posonlyargs=[], args=[arg(arg='spinner')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='spinner', ctx=Load()), Constant(value='frames')], keywords=[]), Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='spinner', ctx=Load()), Constant(value='interval')], keywords=[])]), body=[If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='spinner', ctx=Load()), attr='frames', ctx=Load())), UnaryOp(op=Not(), operand=Attribute(value=Name(id='spinner', ctx=Load()), attr='interval', ctx=Load()))]), body=[Assign(targets=[Name(id='sp', ctx=Store())], value=Name(id='default_spinner', ctx=Load()))], orelse=[Assign(targets=[Name(id='sp', ctx=Store())], value=Name(id='spinner', ctx=Load()))])], orelse=[Assign(targets=[Name(id='sp', ctx=Store())], value=Name(id='default_spinner', ctx=Load()))]), Return(value=Name(id='sp', ctx=Load()))], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='_set_side', args=arguments(posonlyargs=[], args=[arg(arg='side', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='side', ctx=Load()), ops=[NotIn()], comparators=[Tuple(elts=[Constant(value='left'), Constant(value='right')], ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value="'{0}': unsupported side value. Use either 'left' or 'right'.")], keywords=[]))], orelse=[]), Return(value=Name(id='side', ctx=Load()))], decorator_list=[Name(id='staticmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='_set_frames', args=arguments(posonlyargs=[], args=[arg(arg='spinner', annotation=Name(id='Spinner', ctx=Load())), arg(arg='reversal', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='uframes', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='uframes_seq', ctx=Store())], value=Constant(value=None)), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='spinner', ctx=Load()), attr='frames', ctx=Load()), Name(id='str', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='uframes', ctx=Store())], value=Attribute(value=Name(id='spinner', ctx=Load()), attr='frames', ctx=Load()))], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='spinner', ctx=Load()), attr='frames', ctx=Load()), Tuple(elts=[Name(id='list', ctx=Load()), Name(id='tuple', ctx=Load())], ctx=Load())], keywords=[]), body=[If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='spinner', ctx=Load()), attr='frames', ctx=Load()), Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='spinner', ctx=Load()), attr='frames', ctx=Load()), slice=Constant(value=0), ctx=Load()), Name(id='bytes', ctx=Load())], keywords=[])]), body=[Assign(targets=[Name(id='uframes_seq', ctx=Store())], value=ListComp(elt=Call(func=Name(id='to_unicode', ctx=Load()), args=[Name(id='frame', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='frame', ctx=Store()), iter=Attribute(value=Name(id='spinner', ctx=Load()), attr='frames', ctx=Load()), ifs=[], is_async=0)]))], orelse=[Assign(targets=[Name(id='uframes_seq', ctx=Store())], value=Attribute(value=Name(id='spinner', ctx=Load()), attr='frames', ctx=Load()))])], orelse=[]), Assign(targets=[Name(id='_frames', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='uframes', ctx=Load()), Name(id='uframes_seq', ctx=Load())])), If(test=UnaryOp(op=Not(), operand=Name(id='_frames', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='spinner', ctx=Load()), conversion=114), Constant(value=': no frames found in spinner')])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='frames', ctx=Store())], value=IfExp(test=Name(id='reversal', ctx=Load()), body=Subscript(value=Name(id='_frames', ctx=Load()), slice=Slice(step=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()), orelse=Name(id='_frames', ctx=Load()))), Return(value=Name(id='frames', ctx=Load()))], decorator_list=[Name(id='staticmethod', ctx=Load())], returns=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='List', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='_set_interval', args=arguments(posonlyargs=[], args=[arg(arg='spinner')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BinOp(left=Attribute(value=Name(id='spinner', ctx=Load()), attr='interval', ctx=Load()), op=Mult(), right=Constant(value=0.001)))], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='_set_cycle', args=arguments(posonlyargs=[], args=[arg(arg='frames')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='itertools', ctx=Load()), attr='cycle', ctx=Load()), args=[Name(id='frames', ctx=Load())], keywords=[]))], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='_hide_cursor', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='isatty', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='\x1b[?25l')], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='flush', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='_show_cursor', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='isatty', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='\x1b[?25h')], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='flush', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='_clear_line', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='isatty', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='\r\x1b[K')], keywords=[]))], orelse=[Assign(targets=[Name(id='fill', ctx=Store())], value=BinOp(left=Constant(value=' '), op=Mult(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_cur_line_len', ctx=Load()))), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='write', ctx=Load()), args=[JoinedStr(values=[Constant(value='\r'), FormattedValue(value=Name(id='fill', ctx=Load()), conversion=-1), Constant(value='\r')])], keywords=[]))])], decorator_list=[])], decorator_list=[])], type_ignores=[])