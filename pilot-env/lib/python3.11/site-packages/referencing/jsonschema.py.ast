Module(body=[Expr(value=Constant(value='\nReferencing implementations for JSON Schema specs (historic & current).\n')), ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), ImportFrom(module='collections.abc', names=[alias(name='Sequence'), alias(name='Set')], level=0), ImportFrom(module='typing', names=[alias(name='Any'), alias(name='Iterable'), alias(name='Union')], level=0), ImportFrom(module='referencing', names=[alias(name='Anchor'), alias(name='Registry'), alias(name='Resource'), alias(name='Specification'), alias(name='exceptions')], level=0), ImportFrom(module='referencing._attrs', names=[alias(name='frozen')], level=0), ImportFrom(module='referencing._core', names=[alias(name='_UNSET')], level=0), ImportFrom(module='referencing._core', names=[alias(name='_Unset')], level=0), ImportFrom(module='referencing._core', names=[alias(name='Resolved', asname='_Resolved'), alias(name='Resolver', asname='_Resolver')], level=0), ImportFrom(module='referencing.typing', names=[alias(name='URI'), alias(name='Anchor', asname='AnchorType'), alias(name='Mapping')], level=0), Assign(targets=[Name(id='ObjectSchema', ctx=Store())], value=Subscript(value=Name(id='Mapping', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='Any', ctx=Load())], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='Schema', ctx=Store())], value=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='bool', ctx=Load()), Name(id='ObjectSchema', ctx=Load())], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='SchemaRegistry', ctx=Store())], value=Subscript(value=Name(id='Registry', ctx=Load()), slice=Name(id='Schema', ctx=Load()), ctx=Load())), AnnAssign(target=Name(id='EMPTY_REGISTRY', ctx=Store()), annotation=Name(id='SchemaRegistry', ctx=Load()), value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), simple=1), ClassDef(name='UnknownDialect', bases=[Name(id='Exception', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    A dialect identifier was found for a dialect unknown by this library.\n\n    If it\'s a custom ("unofficial") dialect, be sure you\'ve registered it.\n    ')), AnnAssign(target=Name(id='uri', ctx=Store()), annotation=Name(id='URI', ctx=Load()), simple=1)], decorator_list=[Name(id='frozen', ctx=Load())]), FunctionDef(name='_dollar_id', args=arguments(posonlyargs=[], args=[arg(arg='contents', annotation=Name(id='Schema', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='contents', ctx=Load()), Name(id='bool', ctx=Load())], keywords=[]), body=[Return()], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='contents', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='$id')], keywords=[]))], decorator_list=[], returns=BinOp(left=Name(id='URI', ctx=Load()), op=BitOr(), right=Constant(value=None))), FunctionDef(name='_legacy_dollar_id', args=arguments(posonlyargs=[], args=[arg(arg='contents', annotation=Name(id='Schema', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=Or(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='contents', ctx=Load()), Name(id='bool', ctx=Load())], keywords=[]), Compare(left=Constant(value='$ref'), ops=[In()], comparators=[Name(id='contents', ctx=Load())])]), body=[Return()], orelse=[]), Assign(targets=[Name(id='id', ctx=Store())], value=Call(func=Attribute(value=Name(id='contents', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='$id')], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='id', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='id', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='#')], keywords=[]))]), body=[Return(value=Name(id='id', ctx=Load()))], orelse=[])], decorator_list=[], returns=BinOp(left=Name(id='URI', ctx=Load()), op=BitOr(), right=Constant(value=None))), FunctionDef(name='_legacy_id', args=arguments(posonlyargs=[], args=[arg(arg='contents', annotation=Name(id='ObjectSchema', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Constant(value='$ref'), ops=[In()], comparators=[Name(id='contents', ctx=Load())]), body=[Return()], orelse=[]), Assign(targets=[Name(id='id', ctx=Store())], value=Call(func=Attribute(value=Name(id='contents', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='id')], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='id', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='id', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='#')], keywords=[]))]), body=[Return(value=Name(id='id', ctx=Load()))], orelse=[])], decorator_list=[], returns=BinOp(left=Name(id='URI', ctx=Load()), op=BitOr(), right=Constant(value=None))), FunctionDef(name='_anchor', args=arguments(posonlyargs=[], args=[arg(arg='specification', annotation=Subscript(value=Name(id='Specification', ctx=Load()), slice=Name(id='Schema', ctx=Load()), ctx=Load())), arg(arg='contents', annotation=Name(id='Schema', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='contents', ctx=Load()), Name(id='bool', ctx=Load())], keywords=[]), body=[Return()], orelse=[]), Assign(targets=[Name(id='anchor', ctx=Store())], value=Call(func=Attribute(value=Name(id='contents', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='$anchor')], keywords=[])), If(test=Compare(left=Name(id='anchor', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Yield(value=Call(func=Name(id='Anchor', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Name(id='anchor', ctx=Load())), keyword(arg='resource', value=Call(func=Attribute(value=Name(id='specification', ctx=Load()), attr='create_resource', ctx=Load()), args=[Name(id='contents', ctx=Load())], keywords=[]))])))], orelse=[]), Assign(targets=[Name(id='dynamic_anchor', ctx=Store())], value=Call(func=Attribute(value=Name(id='contents', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='$dynamicAnchor')], keywords=[])), If(test=Compare(left=Name(id='dynamic_anchor', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Yield(value=Call(func=Name(id='DynamicAnchor', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Name(id='dynamic_anchor', ctx=Load())), keyword(arg='resource', value=Call(func=Attribute(value=Name(id='specification', ctx=Load()), attr='create_resource', ctx=Load()), args=[Name(id='contents', ctx=Load())], keywords=[]))])))], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Subscript(value=Name(id='AnchorType', ctx=Load()), slice=Name(id='Schema', ctx=Load()), ctx=Load()), ctx=Load())), FunctionDef(name='_anchor_2019', args=arguments(posonlyargs=[], args=[arg(arg='specification', annotation=Subscript(value=Name(id='Specification', ctx=Load()), slice=Name(id='Schema', ctx=Load()), ctx=Load())), arg(arg='contents', annotation=Name(id='Schema', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='contents', ctx=Load()), Name(id='bool', ctx=Load())], keywords=[]), body=[Return(value=List(elts=[], ctx=Load()))], orelse=[]), Assign(targets=[Name(id='anchor', ctx=Store())], value=Call(func=Attribute(value=Name(id='contents', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='$anchor')], keywords=[])), If(test=Compare(left=Name(id='anchor', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return(value=List(elts=[], ctx=Load()))], orelse=[]), Return(value=List(elts=[Call(func=Name(id='Anchor', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Name(id='anchor', ctx=Load())), keyword(arg='resource', value=Call(func=Attribute(value=Name(id='specification', ctx=Load()), attr='create_resource', ctx=Load()), args=[Name(id='contents', ctx=Load())], keywords=[]))])], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Subscript(value=Name(id='Anchor', ctx=Load()), slice=Name(id='Schema', ctx=Load()), ctx=Load()), ctx=Load())), FunctionDef(name='_legacy_anchor_in_dollar_id', args=arguments(posonlyargs=[], args=[arg(arg='specification', annotation=Subscript(value=Name(id='Specification', ctx=Load()), slice=Name(id='Schema', ctx=Load()), ctx=Load())), arg(arg='contents', annotation=Name(id='Schema', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='contents', ctx=Load()), Name(id='bool', ctx=Load())], keywords=[]), body=[Return(value=List(elts=[], ctx=Load()))], orelse=[]), Assign(targets=[Name(id='id', ctx=Store())], value=Call(func=Attribute(value=Name(id='contents', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='$id'), Constant(value='')], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='id', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='#')], keywords=[])), body=[Return(value=List(elts=[], ctx=Load()))], orelse=[]), Return(value=List(elts=[Call(func=Name(id='Anchor', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Subscript(value=Name(id='id', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load())), keyword(arg='resource', value=Call(func=Attribute(value=Name(id='specification', ctx=Load()), attr='create_resource', ctx=Load()), args=[Name(id='contents', ctx=Load())], keywords=[]))])], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Subscript(value=Name(id='Anchor', ctx=Load()), slice=Name(id='Schema', ctx=Load()), ctx=Load()), ctx=Load())), FunctionDef(name='_legacy_anchor_in_id', args=arguments(posonlyargs=[], args=[arg(arg='specification', annotation=Subscript(value=Name(id='Specification', ctx=Load()), slice=Name(id='ObjectSchema', ctx=Load()), ctx=Load())), arg(arg='contents', annotation=Name(id='ObjectSchema', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='id', ctx=Store())], value=Call(func=Attribute(value=Name(id='contents', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='id'), Constant(value='')], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='id', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='#')], keywords=[])), body=[Return(value=List(elts=[], ctx=Load()))], orelse=[]), Return(value=List(elts=[Call(func=Name(id='Anchor', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Subscript(value=Name(id='id', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load())), keyword(arg='resource', value=Call(func=Attribute(value=Name(id='specification', ctx=Load()), attr='create_resource', ctx=Load()), args=[Name(id='contents', ctx=Load())], keywords=[]))])], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Subscript(value=Name(id='Anchor', ctx=Load()), slice=Name(id='ObjectSchema', ctx=Load()), ctx=Load()), ctx=Load())), FunctionDef(name='_subresources_of', args=arguments(posonlyargs=[], args=[arg(arg='in_value', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='in_subvalues', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='in_subarray', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[])]), body=[Expr(value=Constant(value="\n    Create a callable returning JSON Schema specification-style subschemas.\n\n    Relies on specifying the set of keywords containing subschemas in their\n    values, in a subobject's values, or in a subarray.\n    ")), FunctionDef(name='subresources_of', args=arguments(posonlyargs=[], args=[arg(arg='contents', annotation=Name(id='Schema', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='contents', ctx=Load()), Name(id='bool', ctx=Load())], keywords=[]), body=[Return()], orelse=[]), For(target=Name(id='each', ctx=Store()), iter=Name(id='in_value', ctx=Load()), body=[If(test=Compare(left=Name(id='each', ctx=Load()), ops=[In()], comparators=[Name(id='contents', ctx=Load())]), body=[Expr(value=Yield(value=Subscript(value=Name(id='contents', ctx=Load()), slice=Name(id='each', ctx=Load()), ctx=Load())))], orelse=[])], orelse=[]), For(target=Name(id='each', ctx=Store()), iter=Name(id='in_subarray', ctx=Load()), body=[If(test=Compare(left=Name(id='each', ctx=Load()), ops=[In()], comparators=[Name(id='contents', ctx=Load())]), body=[Expr(value=YieldFrom(value=Subscript(value=Name(id='contents', ctx=Load()), slice=Name(id='each', ctx=Load()), ctx=Load())))], orelse=[])], orelse=[]), For(target=Name(id='each', ctx=Store()), iter=Name(id='in_subvalues', ctx=Load()), body=[If(test=Compare(left=Name(id='each', ctx=Load()), ops=[In()], comparators=[Name(id='contents', ctx=Load())]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Subscript(value=Name(id='contents', ctx=Load()), slice=Name(id='each', ctx=Load()), ctx=Load()), attr='values', ctx=Load()), args=[], keywords=[])))], orelse=[])], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='ObjectSchema', ctx=Load()), ctx=Load())), Return(value=Name(id='subresources_of', ctx=Load()))], decorator_list=[]), FunctionDef(name='_subresources_of_with_crazy_items', args=arguments(posonlyargs=[], args=[arg(arg='in_value', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='in_subvalues', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='in_subarray', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[])]), body=[Expr(value=Constant(value='\n    Specifically handle older drafts where there are some funky keywords.\n    ')), FunctionDef(name='subresources_of', args=arguments(posonlyargs=[], args=[arg(arg='contents', annotation=Name(id='Schema', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='contents', ctx=Load()), Name(id='bool', ctx=Load())], keywords=[]), body=[Return()], orelse=[]), For(target=Name(id='each', ctx=Store()), iter=Name(id='in_value', ctx=Load()), body=[If(test=Compare(left=Name(id='each', ctx=Load()), ops=[In()], comparators=[Name(id='contents', ctx=Load())]), body=[Expr(value=Yield(value=Subscript(value=Name(id='contents', ctx=Load()), slice=Name(id='each', ctx=Load()), ctx=Load())))], orelse=[])], orelse=[]), For(target=Name(id='each', ctx=Store()), iter=Name(id='in_subarray', ctx=Load()), body=[If(test=Compare(left=Name(id='each', ctx=Load()), ops=[In()], comparators=[Name(id='contents', ctx=Load())]), body=[Expr(value=YieldFrom(value=Subscript(value=Name(id='contents', ctx=Load()), slice=Name(id='each', ctx=Load()), ctx=Load())))], orelse=[])], orelse=[]), For(target=Name(id='each', ctx=Store()), iter=Name(id='in_subvalues', ctx=Load()), body=[If(test=Compare(left=Name(id='each', ctx=Load()), ops=[In()], comparators=[Name(id='contents', ctx=Load())]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Subscript(value=Name(id='contents', ctx=Load()), slice=Name(id='each', ctx=Load()), ctx=Load()), attr='values', ctx=Load()), args=[], keywords=[])))], orelse=[])], orelse=[]), Assign(targets=[Name(id='items', ctx=Store())], value=Call(func=Attribute(value=Name(id='contents', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='items')], keywords=[])), If(test=Compare(left=Name(id='items', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='items', ctx=Load()), Name(id='Sequence', ctx=Load())], keywords=[]), body=[Expr(value=YieldFrom(value=Name(id='items', ctx=Load())))], orelse=[Expr(value=Yield(value=Name(id='items', ctx=Load())))])], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='ObjectSchema', ctx=Load()), ctx=Load())), Return(value=Name(id='subresources_of', ctx=Load()))], decorator_list=[]), FunctionDef(name='_subresources_of_with_crazy_items_dependencies', args=arguments(posonlyargs=[], args=[arg(arg='in_value', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='in_subvalues', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='in_subarray', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[])]), body=[Expr(value=Constant(value='\n    Specifically handle older drafts where there are some funky keywords.\n    ')), FunctionDef(name='subresources_of', args=arguments(posonlyargs=[], args=[arg(arg='contents', annotation=Name(id='Schema', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='contents', ctx=Load()), Name(id='bool', ctx=Load())], keywords=[]), body=[Return()], orelse=[]), For(target=Name(id='each', ctx=Store()), iter=Name(id='in_value', ctx=Load()), body=[If(test=Compare(left=Name(id='each', ctx=Load()), ops=[In()], comparators=[Name(id='contents', ctx=Load())]), body=[Expr(value=Yield(value=Subscript(value=Name(id='contents', ctx=Load()), slice=Name(id='each', ctx=Load()), ctx=Load())))], orelse=[])], orelse=[]), For(target=Name(id='each', ctx=Store()), iter=Name(id='in_subarray', ctx=Load()), body=[If(test=Compare(left=Name(id='each', ctx=Load()), ops=[In()], comparators=[Name(id='contents', ctx=Load())]), body=[Expr(value=YieldFrom(value=Subscript(value=Name(id='contents', ctx=Load()), slice=Name(id='each', ctx=Load()), ctx=Load())))], orelse=[])], orelse=[]), For(target=Name(id='each', ctx=Store()), iter=Name(id='in_subvalues', ctx=Load()), body=[If(test=Compare(left=Name(id='each', ctx=Load()), ops=[In()], comparators=[Name(id='contents', ctx=Load())]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Subscript(value=Name(id='contents', ctx=Load()), slice=Name(id='each', ctx=Load()), ctx=Load()), attr='values', ctx=Load()), args=[], keywords=[])))], orelse=[])], orelse=[]), Assign(targets=[Name(id='items', ctx=Store())], value=Call(func=Attribute(value=Name(id='contents', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='items')], keywords=[])), If(test=Compare(left=Name(id='items', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='items', ctx=Load()), Name(id='Sequence', ctx=Load())], keywords=[]), body=[Expr(value=YieldFrom(value=Name(id='items', ctx=Load())))], orelse=[Expr(value=Yield(value=Name(id='items', ctx=Load())))])], orelse=[]), Assign(targets=[Name(id='dependencies', ctx=Store())], value=Call(func=Attribute(value=Name(id='contents', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='dependencies')], keywords=[])), If(test=Compare(left=Name(id='dependencies', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='values', ctx=Store())], value=Call(func=Name(id='iter', ctx=Load()), args=[Call(func=Attribute(value=Name(id='dependencies', ctx=Load()), attr='values', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='values', ctx=Load()), Constant(value=None)], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='Mapping', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Name(id='value', ctx=Load()))), Expr(value=YieldFrom(value=Name(id='values', ctx=Load())))], orelse=[])], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='ObjectSchema', ctx=Load()), ctx=Load())), Return(value=Name(id='subresources_of', ctx=Load()))], decorator_list=[]), FunctionDef(name='_subresources_of_with_crazy_aP_items_dependencies', args=arguments(posonlyargs=[], args=[arg(arg='in_value', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='in_subvalues', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='in_subarray', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[])]), body=[Expr(value=Constant(value='\n    Specifically handle even older drafts where there are some funky keywords.\n    ')), FunctionDef(name='subresources_of', args=arguments(posonlyargs=[], args=[arg(arg='contents', annotation=Name(id='ObjectSchema', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='each', ctx=Store()), iter=Name(id='in_value', ctx=Load()), body=[If(test=Compare(left=Name(id='each', ctx=Load()), ops=[In()], comparators=[Name(id='contents', ctx=Load())]), body=[Expr(value=Yield(value=Subscript(value=Name(id='contents', ctx=Load()), slice=Name(id='each', ctx=Load()), ctx=Load())))], orelse=[])], orelse=[]), For(target=Name(id='each', ctx=Store()), iter=Name(id='in_subarray', ctx=Load()), body=[If(test=Compare(left=Name(id='each', ctx=Load()), ops=[In()], comparators=[Name(id='contents', ctx=Load())]), body=[Expr(value=YieldFrom(value=Subscript(value=Name(id='contents', ctx=Load()), slice=Name(id='each', ctx=Load()), ctx=Load())))], orelse=[])], orelse=[]), For(target=Name(id='each', ctx=Store()), iter=Name(id='in_subvalues', ctx=Load()), body=[If(test=Compare(left=Name(id='each', ctx=Load()), ops=[In()], comparators=[Name(id='contents', ctx=Load())]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Subscript(value=Name(id='contents', ctx=Load()), slice=Name(id='each', ctx=Load()), ctx=Load()), attr='values', ctx=Load()), args=[], keywords=[])))], orelse=[])], orelse=[]), Assign(targets=[Name(id='items', ctx=Store())], value=Call(func=Attribute(value=Name(id='contents', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='items')], keywords=[])), If(test=Compare(left=Name(id='items', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='items', ctx=Load()), Name(id='Sequence', ctx=Load())], keywords=[]), body=[Expr(value=YieldFrom(value=Name(id='items', ctx=Load())))], orelse=[Expr(value=Yield(value=Name(id='items', ctx=Load())))])], orelse=[]), Assign(targets=[Name(id='dependencies', ctx=Store())], value=Call(func=Attribute(value=Name(id='contents', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='dependencies')], keywords=[])), If(test=Compare(left=Name(id='dependencies', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='values', ctx=Store())], value=Call(func=Name(id='iter', ctx=Load()), args=[Call(func=Attribute(value=Name(id='dependencies', ctx=Load()), attr='values', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='values', ctx=Load()), Constant(value=None)], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='Mapping', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Name(id='value', ctx=Load()))), Expr(value=YieldFrom(value=Name(id='values', ctx=Load())))], orelse=[])], orelse=[]), For(target=Name(id='each', ctx=Store()), iter=Tuple(elts=[Constant(value='additionalItems'), Constant(value='additionalProperties')], ctx=Load()), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='contents', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='each', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='Mapping', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Name(id='value', ctx=Load())))], orelse=[])], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='ObjectSchema', ctx=Load()), ctx=Load())), Return(value=Name(id='subresources_of', ctx=Load()))], decorator_list=[]), FunctionDef(name='_maybe_in_subresource', args=arguments(posonlyargs=[], args=[arg(arg='in_value', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='in_subvalues', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='in_subarray', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[])]), body=[Assign(targets=[Name(id='in_child', ctx=Store())], value=BinOp(left=Name(id='in_subvalues', ctx=Load()), op=BitOr(), right=Name(id='in_subarray', ctx=Load()))), FunctionDef(name='maybe_in_subresource', args=arguments(posonlyargs=[], args=[arg(arg='segments', annotation=Subscript(value=Name(id='Sequence', ctx=Load()), slice=BinOp(left=Name(id='int', ctx=Load()), op=BitOr(), right=Name(id='str', ctx=Load())), ctx=Load())), arg(arg='resolver', annotation=Subscript(value=Name(id='_Resolver', ctx=Load()), slice=Name(id='Any', ctx=Load()), ctx=Load())), arg(arg='subresource', annotation=Subscript(value=Name(id='Resource', ctx=Load()), slice=Name(id='Any', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='_segments', ctx=Store())], value=Call(func=Name(id='iter', ctx=Load()), args=[Name(id='segments', ctx=Load())], keywords=[])), For(target=Name(id='segment', ctx=Store()), iter=Name(id='_segments', ctx=Load()), body=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='segment', ctx=Load()), ops=[NotIn()], comparators=[Name(id='in_value', ctx=Load())]), BoolOp(op=Or(), values=[Compare(left=Name(id='segment', ctx=Load()), ops=[NotIn()], comparators=[Name(id='in_child', ctx=Load())]), Compare(left=Call(func=Name(id='next', ctx=Load()), args=[Name(id='_segments', ctx=Load()), Constant(value=None)], keywords=[]), ops=[Is()], comparators=[Constant(value=None)])])]), body=[Return(value=Name(id='resolver', ctx=Load()))], orelse=[])], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='in_subresource', ctx=Load()), args=[Name(id='subresource', ctx=Load())], keywords=[]))], decorator_list=[], returns=Subscript(value=Name(id='_Resolver', ctx=Load()), slice=Name(id='Any', ctx=Load()), ctx=Load())), Return(value=Name(id='maybe_in_subresource', ctx=Load()))], decorator_list=[]), FunctionDef(name='_maybe_in_subresource_crazy_items', args=arguments(posonlyargs=[], args=[arg(arg='in_value', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='in_subvalues', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='in_subarray', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[])]), body=[Assign(targets=[Name(id='in_child', ctx=Store())], value=BinOp(left=Name(id='in_subvalues', ctx=Load()), op=BitOr(), right=Name(id='in_subarray', ctx=Load()))), FunctionDef(name='maybe_in_subresource', args=arguments(posonlyargs=[], args=[arg(arg='segments', annotation=Subscript(value=Name(id='Sequence', ctx=Load()), slice=BinOp(left=Name(id='int', ctx=Load()), op=BitOr(), right=Name(id='str', ctx=Load())), ctx=Load())), arg(arg='resolver', annotation=Subscript(value=Name(id='_Resolver', ctx=Load()), slice=Name(id='Any', ctx=Load()), ctx=Load())), arg(arg='subresource', annotation=Subscript(value=Name(id='Resource', ctx=Load()), slice=Name(id='Any', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='_segments', ctx=Store())], value=Call(func=Name(id='iter', ctx=Load()), args=[Name(id='segments', ctx=Load())], keywords=[])), For(target=Name(id='segment', ctx=Store()), iter=Name(id='_segments', ctx=Load()), body=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='segment', ctx=Load()), ops=[Eq()], comparators=[Constant(value='items')]), Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='subresource', ctx=Load()), attr='contents', ctx=Load()), Name(id='Mapping', ctx=Load())], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='in_subresource', ctx=Load()), args=[Name(id='subresource', ctx=Load())], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='segment', ctx=Load()), ops=[NotIn()], comparators=[Name(id='in_value', ctx=Load())]), BoolOp(op=Or(), values=[Compare(left=Name(id='segment', ctx=Load()), ops=[NotIn()], comparators=[Name(id='in_child', ctx=Load())]), Compare(left=Call(func=Name(id='next', ctx=Load()), args=[Name(id='_segments', ctx=Load()), Constant(value=None)], keywords=[]), ops=[Is()], comparators=[Constant(value=None)])])]), body=[Return(value=Name(id='resolver', ctx=Load()))], orelse=[])], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='in_subresource', ctx=Load()), args=[Name(id='subresource', ctx=Load())], keywords=[]))], decorator_list=[], returns=Subscript(value=Name(id='_Resolver', ctx=Load()), slice=Name(id='Any', ctx=Load()), ctx=Load())), Return(value=Name(id='maybe_in_subresource', ctx=Load()))], decorator_list=[]), FunctionDef(name='_maybe_in_subresource_crazy_items_dependencies', args=arguments(posonlyargs=[], args=[arg(arg='in_value', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='in_subvalues', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='in_subarray', annotation=Subscript(value=Name(id='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='frozenset', ctx=Load()), args=[], keywords=[])]), body=[Assign(targets=[Name(id='in_child', ctx=Store())], value=BinOp(left=Name(id='in_subvalues', ctx=Load()), op=BitOr(), right=Name(id='in_subarray', ctx=Load()))), FunctionDef(name='maybe_in_subresource', args=arguments(posonlyargs=[], args=[arg(arg='segments', annotation=Subscript(value=Name(id='Sequence', ctx=Load()), slice=BinOp(left=Name(id='int', ctx=Load()), op=BitOr(), right=Name(id='str', ctx=Load())), ctx=Load())), arg(arg='resolver', annotation=Subscript(value=Name(id='_Resolver', ctx=Load()), slice=Name(id='Any', ctx=Load()), ctx=Load())), arg(arg='subresource', annotation=Subscript(value=Name(id='Resource', ctx=Load()), slice=Name(id='Any', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='_segments', ctx=Store())], value=Call(func=Name(id='iter', ctx=Load()), args=[Name(id='segments', ctx=Load())], keywords=[])), For(target=Name(id='segment', ctx=Store()), iter=Name(id='_segments', ctx=Load()), body=[If(test=BoolOp(op=And(), values=[BoolOp(op=Or(), values=[Compare(left=Name(id='segment', ctx=Load()), ops=[Eq()], comparators=[Constant(value='items')]), Compare(left=Name(id='segment', ctx=Load()), ops=[Eq()], comparators=[Constant(value='dependencies')])]), Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='subresource', ctx=Load()), attr='contents', ctx=Load()), Name(id='Mapping', ctx=Load())], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='in_subresource', ctx=Load()), args=[Name(id='subresource', ctx=Load())], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='segment', ctx=Load()), ops=[NotIn()], comparators=[Name(id='in_value', ctx=Load())]), BoolOp(op=Or(), values=[Compare(left=Name(id='segment', ctx=Load()), ops=[NotIn()], comparators=[Name(id='in_child', ctx=Load())]), Compare(left=Call(func=Name(id='next', ctx=Load()), args=[Name(id='_segments', ctx=Load()), Constant(value=None)], keywords=[]), ops=[Is()], comparators=[Constant(value=None)])])]), body=[Return(value=Name(id='resolver', ctx=Load()))], orelse=[])], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='in_subresource', ctx=Load()), args=[Name(id='subresource', ctx=Load())], keywords=[]))], decorator_list=[], returns=Subscript(value=Name(id='_Resolver', ctx=Load()), slice=Name(id='Any', ctx=Load()), ctx=Load())), Return(value=Name(id='maybe_in_subresource', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='DRAFT202012', ctx=Store())], value=Call(func=Name(id='Specification', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='draft2020-12')), keyword(arg='id_of', value=Name(id='_dollar_id', ctx=Load())), keyword(arg='subresources_of', value=Call(func=Name(id='_subresources_of', ctx=Load()), args=[], keywords=[keyword(arg='in_value', value=Set(elts=[Constant(value='additionalProperties'), Constant(value='contains'), Constant(value='contentSchema'), Constant(value='else'), Constant(value='if'), Constant(value='items'), Constant(value='not'), Constant(value='propertyNames'), Constant(value='then'), Constant(value='unevaluatedItems'), Constant(value='unevaluatedProperties')])), keyword(arg='in_subarray', value=Set(elts=[Constant(value='allOf'), Constant(value='anyOf'), Constant(value='oneOf'), Constant(value='prefixItems')])), keyword(arg='in_subvalues', value=Set(elts=[Constant(value='$defs'), Constant(value='dependentSchemas'), Constant(value='patternProperties'), Constant(value='properties')]))])), keyword(arg='anchors_in', value=Name(id='_anchor', ctx=Load())), keyword(arg='maybe_in_subresource', value=Call(func=Name(id='_maybe_in_subresource', ctx=Load()), args=[], keywords=[keyword(arg='in_value', value=Set(elts=[Constant(value='additionalProperties'), Constant(value='contains'), Constant(value='contentSchema'), Constant(value='else'), Constant(value='if'), Constant(value='items'), Constant(value='not'), Constant(value='propertyNames'), Constant(value='then'), Constant(value='unevaluatedItems'), Constant(value='unevaluatedProperties')])), keyword(arg='in_subarray', value=Set(elts=[Constant(value='allOf'), Constant(value='anyOf'), Constant(value='oneOf'), Constant(value='prefixItems')])), keyword(arg='in_subvalues', value=Set(elts=[Constant(value='$defs'), Constant(value='dependentSchemas'), Constant(value='patternProperties'), Constant(value='properties')]))]))])), Assign(targets=[Name(id='DRAFT201909', ctx=Store())], value=Call(func=Name(id='Specification', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='draft2019-09')), keyword(arg='id_of', value=Name(id='_dollar_id', ctx=Load())), keyword(arg='subresources_of', value=Call(func=Name(id='_subresources_of_with_crazy_items', ctx=Load()), args=[], keywords=[keyword(arg='in_value', value=Set(elts=[Constant(value='additionalItems'), Constant(value='additionalProperties'), Constant(value='contains'), Constant(value='contentSchema'), Constant(value='else'), Constant(value='if'), Constant(value='not'), Constant(value='propertyNames'), Constant(value='then'), Constant(value='unevaluatedItems'), Constant(value='unevaluatedProperties')])), keyword(arg='in_subarray', value=Set(elts=[Constant(value='allOf'), Constant(value='anyOf'), Constant(value='oneOf')])), keyword(arg='in_subvalues', value=Set(elts=[Constant(value='$defs'), Constant(value='dependentSchemas'), Constant(value='patternProperties'), Constant(value='properties')]))])), keyword(arg='anchors_in', value=Name(id='_anchor_2019', ctx=Load())), keyword(arg='maybe_in_subresource', value=Call(func=Name(id='_maybe_in_subresource_crazy_items', ctx=Load()), args=[], keywords=[keyword(arg='in_value', value=Set(elts=[Constant(value='additionalItems'), Constant(value='additionalProperties'), Constant(value='contains'), Constant(value='contentSchema'), Constant(value='else'), Constant(value='if'), Constant(value='not'), Constant(value='propertyNames'), Constant(value='then'), Constant(value='unevaluatedItems'), Constant(value='unevaluatedProperties')])), keyword(arg='in_subarray', value=Set(elts=[Constant(value='allOf'), Constant(value='anyOf'), Constant(value='oneOf')])), keyword(arg='in_subvalues', value=Set(elts=[Constant(value='$defs'), Constant(value='dependentSchemas'), Constant(value='patternProperties'), Constant(value='properties')]))]))])), Assign(targets=[Name(id='DRAFT7', ctx=Store())], value=Call(func=Name(id='Specification', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='draft-07')), keyword(arg='id_of', value=Name(id='_legacy_dollar_id', ctx=Load())), keyword(arg='subresources_of', value=Call(func=Name(id='_subresources_of_with_crazy_items_dependencies', ctx=Load()), args=[], keywords=[keyword(arg='in_value', value=Set(elts=[Constant(value='additionalItems'), Constant(value='additionalProperties'), Constant(value='contains'), Constant(value='else'), Constant(value='if'), Constant(value='not'), Constant(value='propertyNames'), Constant(value='then')])), keyword(arg='in_subarray', value=Set(elts=[Constant(value='allOf'), Constant(value='anyOf'), Constant(value='oneOf')])), keyword(arg='in_subvalues', value=Set(elts=[Constant(value='definitions'), Constant(value='patternProperties'), Constant(value='properties')]))])), keyword(arg='anchors_in', value=Name(id='_legacy_anchor_in_dollar_id', ctx=Load())), keyword(arg='maybe_in_subresource', value=Call(func=Name(id='_maybe_in_subresource_crazy_items_dependencies', ctx=Load()), args=[], keywords=[keyword(arg='in_value', value=Set(elts=[Constant(value='additionalItems'), Constant(value='additionalProperties'), Constant(value='contains'), Constant(value='else'), Constant(value='if'), Constant(value='not'), Constant(value='propertyNames'), Constant(value='then')])), keyword(arg='in_subarray', value=Set(elts=[Constant(value='allOf'), Constant(value='anyOf'), Constant(value='oneOf')])), keyword(arg='in_subvalues', value=Set(elts=[Constant(value='definitions'), Constant(value='patternProperties'), Constant(value='properties')]))]))])), Assign(targets=[Name(id='DRAFT6', ctx=Store())], value=Call(func=Name(id='Specification', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='draft-06')), keyword(arg='id_of', value=Name(id='_legacy_dollar_id', ctx=Load())), keyword(arg='subresources_of', value=Call(func=Name(id='_subresources_of_with_crazy_items_dependencies', ctx=Load()), args=[], keywords=[keyword(arg='in_value', value=Set(elts=[Constant(value='additionalItems'), Constant(value='additionalProperties'), Constant(value='contains'), Constant(value='not'), Constant(value='propertyNames')])), keyword(arg='in_subarray', value=Set(elts=[Constant(value='allOf'), Constant(value='anyOf'), Constant(value='oneOf')])), keyword(arg='in_subvalues', value=Set(elts=[Constant(value='definitions'), Constant(value='patternProperties'), Constant(value='properties')]))])), keyword(arg='anchors_in', value=Name(id='_legacy_anchor_in_dollar_id', ctx=Load())), keyword(arg='maybe_in_subresource', value=Call(func=Name(id='_maybe_in_subresource_crazy_items_dependencies', ctx=Load()), args=[], keywords=[keyword(arg='in_value', value=Set(elts=[Constant(value='additionalItems'), Constant(value='additionalProperties'), Constant(value='contains'), Constant(value='not'), Constant(value='propertyNames')])), keyword(arg='in_subarray', value=Set(elts=[Constant(value='allOf'), Constant(value='anyOf'), Constant(value='oneOf')])), keyword(arg='in_subvalues', value=Set(elts=[Constant(value='definitions'), Constant(value='patternProperties'), Constant(value='properties')]))]))])), Assign(targets=[Name(id='DRAFT4', ctx=Store())], value=Call(func=Name(id='Specification', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='draft-04')), keyword(arg='id_of', value=Name(id='_legacy_id', ctx=Load())), keyword(arg='subresources_of', value=Call(func=Name(id='_subresources_of_with_crazy_aP_items_dependencies', ctx=Load()), args=[], keywords=[keyword(arg='in_value', value=Set(elts=[Constant(value='not')])), keyword(arg='in_subarray', value=Set(elts=[Constant(value='allOf'), Constant(value='anyOf'), Constant(value='oneOf')])), keyword(arg='in_subvalues', value=Set(elts=[Constant(value='definitions'), Constant(value='patternProperties'), Constant(value='properties')]))])), keyword(arg='anchors_in', value=Name(id='_legacy_anchor_in_id', ctx=Load())), keyword(arg='maybe_in_subresource', value=Call(func=Name(id='_maybe_in_subresource_crazy_items_dependencies', ctx=Load()), args=[], keywords=[keyword(arg='in_value', value=Set(elts=[Constant(value='additionalItems'), Constant(value='additionalProperties'), Constant(value='not')])), keyword(arg='in_subarray', value=Set(elts=[Constant(value='allOf'), Constant(value='anyOf'), Constant(value='oneOf')])), keyword(arg='in_subvalues', value=Set(elts=[Constant(value='definitions'), Constant(value='patternProperties'), Constant(value='properties')]))]))])), Assign(targets=[Name(id='DRAFT3', ctx=Store())], value=Call(func=Name(id='Specification', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='draft-03')), keyword(arg='id_of', value=Name(id='_legacy_id', ctx=Load())), keyword(arg='subresources_of', value=Call(func=Name(id='_subresources_of_with_crazy_aP_items_dependencies', ctx=Load()), args=[], keywords=[keyword(arg='in_subarray', value=Set(elts=[Constant(value='extends')])), keyword(arg='in_subvalues', value=Set(elts=[Constant(value='definitions'), Constant(value='patternProperties'), Constant(value='properties')]))])), keyword(arg='anchors_in', value=Name(id='_legacy_anchor_in_id', ctx=Load())), keyword(arg='maybe_in_subresource', value=Call(func=Name(id='_maybe_in_subresource_crazy_items_dependencies', ctx=Load()), args=[], keywords=[keyword(arg='in_value', value=Set(elts=[Constant(value='additionalItems'), Constant(value='additionalProperties')])), keyword(arg='in_subarray', value=Set(elts=[Constant(value='extends')])), keyword(arg='in_subvalues', value=Set(elts=[Constant(value='definitions'), Constant(value='patternProperties'), Constant(value='properties')]))]))])), AnnAssign(target=Name(id='_SPECIFICATIONS', ctx=Store()), annotation=Subscript(value=Name(id='Registry', ctx=Load()), slice=Subscript(value=Name(id='Specification', ctx=Load()), slice=Name(id='Schema', ctx=Load()), ctx=Load()), ctx=Load()), value=Call(func=Name(id='Registry', ctx=Load()), args=[DictComp(key=Name(id='dialect_id', ctx=Load()), value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[Name(id='specification', ctx=Load())], keywords=[]), generators=[comprehension(target=Tuple(elts=[Name(id='dialect_id', ctx=Store()), Name(id='specification', ctx=Store())], ctx=Store()), iter=List(elts=[Tuple(elts=[Constant(value='https://json-schema.org/draft/2020-12/schema'), Name(id='DRAFT202012', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='https://json-schema.org/draft/2019-09/schema'), Name(id='DRAFT201909', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://json-schema.org/draft-07/schema'), Name(id='DRAFT7', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://json-schema.org/draft-06/schema'), Name(id='DRAFT6', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://json-schema.org/draft-04/schema'), Name(id='DRAFT4', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://json-schema.org/draft-03/schema'), Name(id='DRAFT3', ctx=Load())], ctx=Load())], ctx=Load()), ifs=[], is_async=0)])], keywords=[]), simple=1), FunctionDef(name='specification_with', args=arguments(posonlyargs=[], args=[arg(arg='dialect_id', annotation=Name(id='URI', ctx=Load())), arg(arg='default', annotation=BinOp(left=Subscript(value=Name(id='Specification', ctx=Load()), slice=Name(id='Any', ctx=Load()), ctx=Load()), op=BitOr(), right=Name(id='_Unset', ctx=Load())))], kwonlyargs=[], kw_defaults=[], defaults=[Name(id='_UNSET', ctx=Load())]), body=[Expr(value=Constant(value="\n    Retrieve the `Specification` with the given dialect identifier.\n\n    Raises:\n\n        `UnknownDialect`\n\n            if the given ``dialect_id`` isn't known\n    ")), Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='_SPECIFICATIONS', ctx=Load()), attr='get', ctx=Load()), args=[Call(func=Attribute(value=Name(id='dialect_id', ctx=Load()), attr='rstrip', ctx=Load()), args=[Constant(value='#')], keywords=[])], keywords=[])), If(test=Compare(left=Name(id='resource', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Attribute(value=Name(id='resource', ctx=Load()), attr='contents', ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='default', ctx=Load()), ops=[Is()], comparators=[Name(id='_UNSET', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='UnknownDialect', ctx=Load()), args=[Name(id='dialect_id', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='default', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Specification', ctx=Load()), slice=Name(id='Any', ctx=Load()), ctx=Load())), ClassDef(name='DynamicAnchor', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    Dynamic anchors, introduced in draft 2020.\n    ')), AnnAssign(target=Name(id='name', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1), AnnAssign(target=Name(id='resource', ctx=Store()), annotation=Subscript(value=Name(id='Resource', ctx=Load()), slice=Name(id='Schema', ctx=Load()), ctx=Load()), simple=1), FunctionDef(name='resolve', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resolver', annotation=Subscript(value=Name(id='_Resolver', ctx=Load()), slice=Name(id='Schema', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Resolve this anchor dynamically.\n        ')), Assign(targets=[Name(id='last', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='resource', ctx=Load())), For(target=Tuple(elts=[Name(id='uri', ctx=Store()), Name(id='registry', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='dynamic_scope', ctx=Load()), args=[], keywords=[]), body=[Try(body=[Assign(targets=[Name(id='anchor', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='anchor', ctx=Load()), args=[Name(id='uri', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], keywords=[]), attr='value', ctx=Load()))], handlers=[ExceptHandler(type=Attribute(value=Name(id='exceptions', ctx=Load()), attr='NoSuchAnchor', ctx=Load()), body=[Continue()])], orelse=[], finalbody=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='anchor', ctx=Load()), Name(id='DynamicAnchor', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='last', ctx=Store())], value=Attribute(value=Name(id='anchor', ctx=Load()), attr='resource', ctx=Load()))], orelse=[])], orelse=[]), Return(value=Call(func=Name(id='_Resolved', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Attribute(value=Name(id='last', ctx=Load()), attr='contents', ctx=Load())), keyword(arg='resolver', value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='in_subresource', ctx=Load()), args=[Name(id='last', ctx=Load())], keywords=[]))]))], decorator_list=[], returns=Subscript(value=Name(id='_Resolved', ctx=Load()), slice=Name(id='Schema', ctx=Load()), ctx=Load()))], decorator_list=[Name(id='frozen', ctx=Load())]), FunctionDef(name='lookup_recursive_ref', args=arguments(posonlyargs=[], args=[arg(arg='resolver', annotation=Subscript(value=Name(id='_Resolver', ctx=Load()), slice=Name(id='Schema', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Recursive references (via recursive anchors), present only in draft 2019.\n\n    As per the 2019 specification (§ 8.2.4.2.1), only the ``#`` recursive\n    reference is supported (and is therefore assumed to be the relevant\n    reference).\n    ')), Assign(targets=[Name(id='resolved', ctx=Store())], value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='#')], keywords=[])), If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='resolved', ctx=Load()), attr='contents', ctx=Load()), Name(id='Mapping', ctx=Load())], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='resolved', ctx=Load()), attr='contents', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='$recursiveAnchor')], keywords=[])]), body=[For(target=Tuple(elts=[Name(id='uri', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='dynamic_scope', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='next_resolved', ctx=Store())], value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Name(id='uri', ctx=Load())], keywords=[])), If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='next_resolved', ctx=Load()), attr='contents', ctx=Load()), Name(id='Mapping', ctx=Load())], keywords=[])), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='next_resolved', ctx=Load()), attr='contents', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='$recursiveAnchor')], keywords=[]))]), body=[Break()], orelse=[]), Assign(targets=[Name(id='resolved', ctx=Store())], value=Name(id='next_resolved', ctx=Load()))], orelse=[])], orelse=[]), Return(value=Name(id='resolved', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='_Resolved', ctx=Load()), slice=Name(id='Schema', ctx=Load()), ctx=Load()))], type_ignores=[])