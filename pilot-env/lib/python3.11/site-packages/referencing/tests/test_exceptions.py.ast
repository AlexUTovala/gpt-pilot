Module(body=[Import(names=[alias(name='itertools')]), Import(names=[alias(name='pytest')]), ImportFrom(module='referencing', names=[alias(name='Resource'), alias(name='exceptions')], level=0), FunctionDef(name='pairs', args=arguments(posonlyargs=[], args=[arg(arg='choices')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='itertools', ctx=Load()), attr='combinations', ctx=Load()), args=[Name(id='choices', ctx=Load()), Constant(value=2)], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='TRUE', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[Constant(value=True)], keywords=[])), Assign(targets=[Name(id='thunks', ctx=Store())], value=Tuple(elts=[Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='exceptions', ctx=Load()), attr='CannotDetermineSpecification', ctx=Load()), args=[Name(id='TRUE', ctx=Load())], keywords=[])), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='exceptions', ctx=Load()), attr='NoSuchResource', ctx=Load()), args=[Constant(value='urn:example:foo')], keywords=[])), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='exceptions', ctx=Load()), attr='NoInternalID', ctx=Load()), args=[Name(id='TRUE', ctx=Load())], keywords=[])), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='exceptions', ctx=Load()), attr='InvalidAnchor', ctx=Load()), args=[], keywords=[keyword(arg='resource', value=Name(id='TRUE', ctx=Load())), keyword(arg='anchor', value=Constant(value='foo')), keyword(arg='ref', value=Constant(value='a#b'))])), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='exceptions', ctx=Load()), attr='NoSuchAnchor', ctx=Load()), args=[], keywords=[keyword(arg='resource', value=Name(id='TRUE', ctx=Load())), keyword(arg='anchor', value=Constant(value='foo')), keyword(arg='ref', value=Constant(value='a#b'))])), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='exceptions', ctx=Load()), attr='PointerToNowhere', ctx=Load()), args=[], keywords=[keyword(arg='resource', value=Name(id='TRUE', ctx=Load())), keyword(arg='ref', value=Constant(value='urn:example:foo'))])), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='exceptions', ctx=Load()), attr='Unresolvable', ctx=Load()), args=[Constant(value='urn:example:foo')], keywords=[])), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='exceptions', ctx=Load()), attr='Unretrievable', ctx=Load()), args=[Constant(value='urn:example:foo')], keywords=[]))], ctx=Load())), FunctionDef(name='test_eq_incompatible_types', args=arguments(posonlyargs=[], args=[arg(arg='one'), arg(arg='two')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=Compare(left=Name(id='one', ctx=Load()), ops=[NotEq()], comparators=[Name(id='two', ctx=Load())]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='one, two'), Call(func=Name(id='pairs', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='each', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='each', ctx=Store()), iter=Name(id='thunks', ctx=Load()), ifs=[], is_async=0)])], keywords=[])], keywords=[])]), FunctionDef(name='test_hash', args=arguments(posonlyargs=[], args=[arg(arg='thunk')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=Compare(left=Call(func=Name(id='thunk', ctx=Load()), args=[], keywords=[]), ops=[In()], comparators=[Set(elts=[Call(func=Name(id='thunk', ctx=Load()), args=[], keywords=[])])]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='thunk'), Name(id='thunks', ctx=Load())], keywords=[])])], type_ignores=[])