Module(body=[ImportFrom(module='rpds', names=[alias(name='HashTrieMap')], level=0), Import(names=[alias(name='pytest')]), ImportFrom(module='referencing', names=[alias(name='Anchor'), alias(name='Registry'), alias(name='Resource'), alias(name='Specification'), alias(name='exceptions')], level=0), ImportFrom(module='referencing.jsonschema', names=[alias(name='DRAFT202012')], level=0), Assign(targets=[Name(id='ID_AND_CHILDREN', ctx=Store())], value=Call(func=Name(id='Specification', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='id-and-children')), keyword(arg='id_of', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='contents')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='contents', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='ID')], keywords=[]))), keyword(arg='subresources_of', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='contents')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='contents', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='children'), List(elts=[], ctx=Load())], keywords=[]))), keyword(arg='anchors_in', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='specification'), arg(arg='contents')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=ListComp(elt=Call(func=Name(id='Anchor', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Name(id='name', ctx=Load())), keyword(arg='resource', value=Call(func=Attribute(value=Name(id='specification', ctx=Load()), attr='create_resource', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Name(id='each', ctx=Load()))]))]), generators=[comprehension(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='each', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='contents', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='anchors'), Dict(keys=[], values=[])], keywords=[]), attr='items', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))), keyword(arg='maybe_in_subresource', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='segments'), arg(arg='resolver'), arg(arg='subresource')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=IfExp(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='segments', ctx=Load())], keywords=[]), op=Mod(), right=Constant(value=2))), Call(func=Name(id='all', ctx=Load()), args=[GeneratorExp(elt=Compare(left=Name(id='each', ctx=Load()), ops=[Eq()], comparators=[Constant(value='children')]), generators=[comprehension(target=Name(id='each', ctx=Store()), iter=Subscript(value=Name(id='segments', ctx=Load()), slice=Slice(step=Constant(value=2)), ctx=Load()), ifs=[], is_async=0)])], keywords=[])]), body=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='in_subresource', ctx=Load()), args=[Name(id='subresource', ctx=Load())], keywords=[]), orelse=Name(id='resolver', ctx=Load()))))])), FunctionDef(name='blow_up', args=arguments(posonlyargs=[], args=[arg(arg='uri')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    A retriever suitable for use in tests which expect it never to be used.\n    ')), Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='This retrieve function expects to never be called!')], keywords=[]))], decorator_list=[]), ClassDef(name='TestRegistry', bases=[], keywords=[], body=[FunctionDef(name='test_with_resource', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Adding a resource to the registry then allows re-retrieving it.\n        ')), Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')]))])), Assign(targets=[Name(id='uri', ctx=Store())], value=Constant(value='urn:example')), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[], keywords=[keyword(arg='uri', value=Name(id='uri', ctx=Load())), keyword(arg='resource', value=Name(id='resource', ctx=Load()))])), Assert(test=Compare(left=Subscript(value=Name(id='registry', ctx=Load()), slice=Name(id='uri', ctx=Load()), ctx=Load()), ops=[Is()], comparators=[Name(id='resource', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_with_resources', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Adding multiple resources to the registry is like adding each one.\n        ')), Assign(targets=[Name(id='one', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[], values=[]))])), Assign(targets=[Name(id='two', ctx=Store())], value=Call(func=Name(id='Resource', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])), keyword(arg='specification', value=Name(id='ID_AND_CHILDREN', ctx=Load()))])), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resources', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='http://example.com/1'), Name(id='one', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://example.com/foo/bar'), Name(id='two', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[])), Assert(test=Compare(left=Name(id='registry', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[], keywords=[keyword(arg='uri', value=Constant(value='http://example.com/1')), keyword(arg='resource', value=Name(id='one', ctx=Load()))]), attr='with_resource', ctx=Load()), args=[], keywords=[keyword(arg='uri', value=Constant(value='http://example.com/foo/bar')), keyword(arg='resource', value=Name(id='two', ctx=Load()))])]))], decorator_list=[]), FunctionDef(name='test_matmul_resource', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='uri', ctx=Store())], value=Constant(value='urn:example:resource')), Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='ID'), Constant(value='foo')], values=[Name(id='uri', ctx=Load()), Constant(value=12)])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=BinOp(left=Name(id='resource', ctx=Load()), op=MatMult(), right=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]))), Assert(test=Compare(left=Name(id='registry', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[Name(id='uri', ctx=Load()), Name(id='resource', ctx=Load())], keywords=[])]))], decorator_list=[]), FunctionDef(name='test_matmul_many_resources', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='one_uri', ctx=Store())], value=Constant(value='urn:example:one')), Assign(targets=[Name(id='one', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='ID'), Constant(value='foo')], values=[Name(id='one_uri', ctx=Load()), Constant(value=12)])], keywords=[])), Assign(targets=[Name(id='two_uri', ctx=Store())], value=Constant(value='urn:example:two')), Assign(targets=[Name(id='two', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='ID'), Constant(value='foo')], values=[Name(id='two_uri', ctx=Load()), Constant(value=12)])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=BinOp(left=List(elts=[Name(id='one', ctx=Load()), Name(id='two', ctx=Load())], ctx=Load()), op=MatMult(), right=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]))), Assert(test=Compare(left=Name(id='registry', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resources', ctx=Load()), args=[List(elts=[Tuple(elts=[Name(id='one_uri', ctx=Load()), Name(id='one', ctx=Load())], ctx=Load()), Tuple(elts=[Name(id='two_uri', ctx=Load()), Name(id='two', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[])]))], decorator_list=[]), FunctionDef(name='test_matmul_resource_without_id', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')]))])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='NoInternalID', ctx=Load())], keywords=[]), optional_vars=Name(id='e', ctx=Store()))], body=[Expr(value=BinOp(left=Name(id='resource', ctx=Load()), op=MatMult(), right=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[])))]), Assert(test=Compare(left=Attribute(value=Name(id='e', ctx=Load()), attr='value', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Name(id='exceptions', ctx=Load()), attr='NoInternalID', ctx=Load()), args=[], keywords=[keyword(arg='resource', value=Name(id='resource', ctx=Load()))])]))], decorator_list=[]), FunctionDef(name='test_with_contents_from_json_schema', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='uri', ctx=Store())], value=Constant(value='urn:example')), Assign(targets=[Name(id='schema', ctx=Store())], value=Dict(keys=[Constant(value='$schema')], values=[Constant(value='https://json-schema.org/draft/2020-12/schema')])), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_contents', ctx=Load()), args=[List(elts=[Tuple(elts=[Name(id='uri', ctx=Load()), Name(id='schema', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='expected', ctx=Store())], value=Call(func=Name(id='Resource', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Name(id='schema', ctx=Load())), keyword(arg='specification', value=Name(id='DRAFT202012', ctx=Load()))])), Assert(test=Compare(left=Subscript(value=Name(id='registry', ctx=Load()), slice=Name(id='uri', ctx=Load()), ctx=Load()), ops=[Eq()], comparators=[Name(id='expected', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_with_contents_and_default_specification', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='uri', ctx=Store())], value=Constant(value='urn:example')), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_contents', ctx=Load()), args=[List(elts=[Tuple(elts=[Name(id='uri', ctx=Load()), Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], ctx=Load())], ctx=Load())], keywords=[keyword(arg='default_specification', value=Attribute(value=Name(id='Specification', ctx=Load()), attr='OPAQUE', ctx=Load()))])), Assert(test=Compare(left=Subscript(value=Name(id='registry', ctx=Load()), slice=Name(id='uri', ctx=Load()), ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])]))], decorator_list=[]), FunctionDef(name='test_len', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='total', ctx=Store())], value=Constant(value=5)), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_contents', ctx=Load()), args=[ListComp(elt=Tuple(elts=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], ctx=Load()), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='total', ctx=Load())], keywords=[]), ifs=[], is_async=0)])], keywords=[keyword(arg='default_specification', value=Attribute(value=Name(id='Specification', ctx=Load()), attr='OPAQUE', ctx=Load()))])), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='registry', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Name(id='total', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_bool_empty', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=UnaryOp(op=Not(), operand=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[])))], decorator_list=[]), FunctionDef(name='test_bool_not_empty', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_contents', ctx=Load()), args=[ListComp(elt=Tuple(elts=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], ctx=Load()), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=3)], keywords=[]), ifs=[], is_async=0)])], keywords=[keyword(arg='default_specification', value=Attribute(value=Name(id='Specification', ctx=Load()), attr='OPAQUE', ctx=Load()))])), Assert(test=Name(id='registry', ctx=Load()))], decorator_list=[]), FunctionDef(name='test_iter', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_contents', ctx=Load()), args=[ListComp(elt=Tuple(elts=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], ctx=Load()), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=8)], keywords=[]), ifs=[], is_async=0)])], keywords=[keyword(arg='default_specification', value=Attribute(value=Name(id='Specification', ctx=Load()), attr='OPAQUE', ctx=Load()))])), Assert(test=Compare(left=Call(func=Name(id='set', ctx=Load()), args=[Name(id='registry', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[SetComp(elt=Call(func=Name(id='str', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=8)], keywords=[]), ifs=[], is_async=0)])]))], decorator_list=[]), FunctionDef(name='test_crawl_still_has_top_level_resource', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])), Assign(targets=[Name(id='uri', ctx=Store())], value=Constant(value='urn:example')), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[Dict(keys=[Name(id='uri', ctx=Load())], values=[Name(id='resource', ctx=Load())])], keywords=[]), attr='crawl', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Subscript(value=Name(id='registry', ctx=Load()), slice=Name(id='uri', ctx=Load()), ctx=Load()), ops=[Is()], comparators=[Name(id='resource', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_crawl_finds_a_subresource', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='child_id', ctx=Store())], value=Constant(value='urn:child')), Assign(targets=[Name(id='root', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='ID'), Constant(value='children')], values=[Constant(value='urn:root'), List(elts=[Dict(keys=[Constant(value='ID'), Constant(value='foo')], values=[Name(id='child_id', ctx=Load()), Constant(value=12)])], ctx=Load())])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=BinOp(left=Name(id='root', ctx=Load()), op=MatMult(), right=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]))), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='LookupError', ctx=Load())], keywords=[]))], body=[Expr(value=Subscript(value=Name(id='registry', ctx=Load()), slice=Name(id='child_id', ctx=Load()), ctx=Load()))]), Assign(targets=[Name(id='expected', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='ID'), Constant(value='foo')], values=[Name(id='child_id', ctx=Load()), Constant(value=12)])], keywords=[])), Assert(test=Compare(left=Subscript(value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='crawl', ctx=Load()), args=[], keywords=[]), slice=Name(id='child_id', ctx=Load()), ctx=Load()), ops=[Eq()], comparators=[Name(id='expected', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_crawl_finds_anchors_with_id', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='ID'), Constant(value='anchors')], values=[Constant(value='urn:bar'), Dict(keys=[Constant(value='foo')], values=[Constant(value=12)])])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=BinOp(left=Name(id='resource', ctx=Load()), op=MatMult(), right=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]))), Assert(test=Compare(left=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='crawl', ctx=Load()), args=[], keywords=[]), attr='anchor', ctx=Load()), args=[Call(func=Attribute(value=Name(id='resource', ctx=Load()), attr='id', ctx=Load()), args=[], keywords=[]), Constant(value='foo')], keywords=[]), attr='value', ctx=Load()), ops=[Eq()], comparators=[Call(func=Name(id='Anchor', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='foo')), keyword(arg='resource', value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Constant(value=12)], keywords=[]))])]))], decorator_list=[]), FunctionDef(name='test_crawl_finds_anchors_no_id', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='anchors')], values=[Dict(keys=[Constant(value='foo')], values=[Constant(value=12)])])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[Constant(value='urn:root'), Name(id='resource', ctx=Load())], keywords=[])), Assert(test=Compare(left=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='crawl', ctx=Load()), args=[], keywords=[]), attr='anchor', ctx=Load()), args=[Constant(value='urn:root'), Constant(value='foo')], keywords=[]), attr='value', ctx=Load()), ops=[Eq()], comparators=[Call(func=Name(id='Anchor', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='foo')), keyword(arg='resource', value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Constant(value=12)], keywords=[]))])]))], decorator_list=[]), FunctionDef(name='test_contents', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])), Assign(targets=[Name(id='uri', ctx=Store())], value=Constant(value='urn:example')), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[Name(id='uri', ctx=Load()), Name(id='resource', ctx=Load())], keywords=[])), Assert(test=Compare(left=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='contents', ctx=Load()), args=[Name(id='uri', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])]))], decorator_list=[]), FunctionDef(name='test_getitem_strips_empty_fragments', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='uri', ctx=Store())], value=Constant(value='http://example.com/')), Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='ID')], values=[BinOp(left=Name(id='uri', ctx=Load()), op=Add(), right=Constant(value='#'))])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=BinOp(left=Name(id='resource', ctx=Load()), op=MatMult(), right=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]))), Assert(test=Compare(left=Subscript(value=Name(id='registry', ctx=Load()), slice=Name(id='uri', ctx=Load()), ctx=Load()), ops=[Eq(), Eq()], comparators=[Subscript(value=Name(id='registry', ctx=Load()), slice=BinOp(left=Name(id='uri', ctx=Load()), op=Add(), right=Constant(value='#')), ctx=Load()), Name(id='resource', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_contents_strips_empty_fragments', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='uri', ctx=Store())], value=Constant(value='http://example.com/')), Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='ID')], values=[BinOp(left=Name(id='uri', ctx=Load()), op=Add(), right=Constant(value='#'))])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=BinOp(left=Name(id='resource', ctx=Load()), op=MatMult(), right=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]))), Assert(test=Compare(left=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='contents', ctx=Load()), args=[Name(id='uri', ctx=Load())], keywords=[]), ops=[Eq(), Eq()], comparators=[Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='contents', ctx=Load()), args=[BinOp(left=Name(id='uri', ctx=Load()), op=Add(), right=Constant(value='#'))], keywords=[]), Dict(keys=[Constant(value='ID')], values=[BinOp(left=Name(id='uri', ctx=Load()), op=Add(), right=Constant(value='#'))])]))], decorator_list=[]), FunctionDef(name='test_crawled_anchor', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='anchors')], values=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[Constant(value='urn:example'), Name(id='resource', ctx=Load())], keywords=[])), Assign(targets=[Name(id='retrieved', ctx=Store())], value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='anchor', ctx=Load()), args=[Constant(value='urn:example'), Constant(value='foo')], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='retrieved', ctx=Load()), attr='value', ctx=Load()), ops=[Eq()], comparators=[Call(func=Name(id='Anchor', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='foo')), keyword(arg='resource', value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Constant(value='bar')], keywords=[]))])])), Assert(test=Compare(left=Attribute(value=Name(id='retrieved', ctx=Load()), attr='registry', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='crawl', ctx=Load()), args=[], keywords=[])]))], decorator_list=[]), FunctionDef(name='test_anchor_in_nonexistent_resource', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='NoSuchResource', ctx=Load())], keywords=[]), optional_vars=Name(id='e', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='anchor', ctx=Load()), args=[Constant(value='urn:example'), Constant(value='foo')], keywords=[]))]), Assert(test=Compare(left=Attribute(value=Name(id='e', ctx=Load()), attr='value', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Name(id='exceptions', ctx=Load()), attr='NoSuchResource', ctx=Load()), args=[], keywords=[keyword(arg='ref', value=Constant(value='urn:example'))])]))], decorator_list=[]), FunctionDef(name='test_init', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='one', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[], values=[]))])), Assign(targets=[Name(id='two', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Name(id='Registry', ctx=Load()), args=[Dict(keys=[Constant(value='http://example.com/1'), Constant(value='http://example.com/foo/bar')], values=[Name(id='one', ctx=Load()), Name(id='two', ctx=Load())])], keywords=[])), Assert(test=Compare(left=Name(id='registry', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resources', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='http://example.com/1'), Name(id='one', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://example.com/foo/bar'), Name(id='two', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[]), attr='crawl', ctx=Load()), args=[], keywords=[])]))], decorator_list=[]), FunctionDef(name='test_dict_conversion', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Passing a `dict` to `Registry` gets converted to a `HashTrieMap`.\n\n        So continuing to use the registry works.\n        ')), Assign(targets=[Name(id='one', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[], values=[]))])), Assign(targets=[Name(id='two', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[Dict(keys=[Constant(value='http://example.com/1')], values=[Name(id='one', ctx=Load())])], keywords=[]), attr='with_resource', ctx=Load()), args=[Constant(value='http://example.com/foo/bar'), Name(id='two', ctx=Load())], keywords=[])), Assert(test=Compare(left=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='crawl', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resources', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='http://example.com/1'), Name(id='one', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://example.com/foo/bar'), Name(id='two', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[]), attr='crawl', ctx=Load()), args=[], keywords=[])]))], decorator_list=[]), FunctionDef(name='test_no_such_resource', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='NoSuchResource', ctx=Load())], keywords=[]), optional_vars=Name(id='e', ctx=Store()))], body=[Expr(value=Subscript(value=Name(id='registry', ctx=Load()), slice=Constant(value='urn:bigboom'), ctx=Load()))]), Assert(test=Compare(left=Attribute(value=Name(id='e', ctx=Load()), attr='value', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Name(id='exceptions', ctx=Load()), attr='NoSuchResource', ctx=Load()), args=[], keywords=[keyword(arg='ref', value=Constant(value='urn:bigboom'))])]))], decorator_list=[]), FunctionDef(name='test_combine', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='one', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[], values=[]))])), Assign(targets=[Name(id='two', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])), Assign(targets=[Name(id='three', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='baz')], values=[Constant(value='quux')])], keywords=[])), Assign(targets=[Name(id='four', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='anchors')], values=[Dict(keys=[Constant(value='foo')], values=[Constant(value=12)])])], keywords=[])), Assign(targets=[Name(id='first', ctx=Store())], value=Call(func=Name(id='Registry', ctx=Load()), args=[Dict(keys=[Constant(value='http://example.com/1')], values=[Name(id='one', ctx=Load())])], keywords=[])), Assign(targets=[Name(id='second', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[Constant(value='http://example.com/foo/bar'), Name(id='two', ctx=Load())], keywords=[])), Assign(targets=[Name(id='third', ctx=Store())], value=Call(func=Name(id='Registry', ctx=Load()), args=[Dict(keys=[Constant(value='http://example.com/1'), Constant(value='http://example.com/baz')], values=[Name(id='one', ctx=Load()), Name(id='three', ctx=Load())])], keywords=[])), Assign(targets=[Name(id='fourth', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[Constant(value='http://example.com/foo/quux'), Name(id='four', ctx=Load())], keywords=[]), attr='crawl', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Call(func=Attribute(value=Name(id='first', ctx=Load()), attr='combine', ctx=Load()), args=[Name(id='second', ctx=Load()), Name(id='third', ctx=Load()), Name(id='fourth', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='http://example.com/1'), Name(id='one', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://example.com/baz'), Name(id='three', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://example.com/foo/quux'), Name(id='four', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[keyword(arg='anchors', value=Call(func=Name(id='HashTrieMap', ctx=Load()), args=[Dict(keys=[Tuple(elts=[Constant(value='http://example.com/foo/quux'), Constant(value='foo')], ctx=Load())], values=[Call(func=Name(id='Anchor', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='foo')), keyword(arg='resource', value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Constant(value=12)], keywords=[]))])])], keywords=[]))]), attr='with_resource', ctx=Load()), args=[Constant(value='http://example.com/foo/bar'), Name(id='two', ctx=Load())], keywords=[])]))], decorator_list=[]), FunctionDef(name='test_combine_self', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Combining a registry with itself short-circuits.\n\n        This is a performance optimization -- otherwise we do lots more work\n        (in jsonschema this seems to correspond to making the test suite take\n         *3x* longer).\n        ')), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Name(id='Registry', ctx=Load()), args=[Dict(keys=[Constant(value='urn:foo')], values=[Constant(value='bar')])], keywords=[])), Assert(test=Compare(left=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='combine', ctx=Load()), args=[Name(id='registry', ctx=Load())], keywords=[]), ops=[Is()], comparators=[Name(id='registry', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_combine_with_uncrawled_resources', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='one', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[], values=[]))])), Assign(targets=[Name(id='two', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])), Assign(targets=[Name(id='three', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='baz')], values=[Constant(value='quux')])], keywords=[])), Assign(targets=[Name(id='first', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[Constant(value='http://example.com/1'), Name(id='one', ctx=Load())], keywords=[])), Assign(targets=[Name(id='second', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[Constant(value='http://example.com/foo/bar'), Name(id='two', ctx=Load())], keywords=[])), Assign(targets=[Name(id='third', ctx=Store())], value=Call(func=Name(id='Registry', ctx=Load()), args=[Dict(keys=[Constant(value='http://example.com/1'), Constant(value='http://example.com/baz')], values=[Name(id='one', ctx=Load()), Name(id='three', ctx=Load())])], keywords=[])), Assign(targets=[Name(id='expected', ctx=Store())], value=Call(func=Name(id='Registry', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='http://example.com/1'), Name(id='one', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://example.com/foo/bar'), Name(id='two', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://example.com/baz'), Name(id='three', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='combined', ctx=Store())], value=Call(func=Attribute(value=Name(id='first', ctx=Load()), attr='combine', ctx=Load()), args=[Name(id='second', ctx=Load()), Name(id='third', ctx=Load())], keywords=[])), Assert(test=Compare(left=Name(id='combined', ctx=Load()), ops=[NotEq()], comparators=[Name(id='expected', ctx=Load())])), Assert(test=Compare(left=Call(func=Attribute(value=Name(id='combined', ctx=Load()), attr='crawl', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Name(id='expected', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_combine_with_single_retrieve', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='one', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[], values=[]))])), Assign(targets=[Name(id='two', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])), Assign(targets=[Name(id='three', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='baz')], values=[Constant(value='quux')])], keywords=[])), FunctionDef(name='retrieve', args=arguments(posonlyargs=[], args=[arg(arg='uri')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[]), Assign(targets=[Name(id='first', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[Constant(value='http://example.com/1'), Name(id='one', ctx=Load())], keywords=[])), Assign(targets=[Name(id='second', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[keyword(arg='retrieve', value=Name(id='retrieve', ctx=Load()))]), attr='with_resource', ctx=Load()), args=[Constant(value='http://example.com/2'), Name(id='two', ctx=Load())], keywords=[])), Assign(targets=[Name(id='third', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[Constant(value='http://example.com/3'), Name(id='three', ctx=Load())], keywords=[])), Assert(test=Compare(left=Call(func=Attribute(value=Name(id='first', ctx=Load()), attr='combine', ctx=Load()), args=[Name(id='second', ctx=Load()), Name(id='third', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[keyword(arg='retrieve', value=Name(id='retrieve', ctx=Load()))]), attr='with_resources', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='http://example.com/1'), Name(id='one', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://example.com/2'), Name(id='two', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://example.com/3'), Name(id='three', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[])])), Assert(test=Compare(left=Call(func=Attribute(value=Name(id='second', ctx=Load()), attr='combine', ctx=Load()), args=[Name(id='first', ctx=Load()), Name(id='third', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[keyword(arg='retrieve', value=Name(id='retrieve', ctx=Load()))]), attr='with_resources', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='http://example.com/1'), Name(id='one', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://example.com/2'), Name(id='two', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://example.com/3'), Name(id='three', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[])]))], decorator_list=[]), FunctionDef(name='test_combine_with_common_retrieve', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='one', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[], values=[]))])), Assign(targets=[Name(id='two', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])), Assign(targets=[Name(id='three', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='baz')], values=[Constant(value='quux')])], keywords=[])), FunctionDef(name='retrieve', args=arguments(posonlyargs=[], args=[arg(arg='uri')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[]), Assign(targets=[Name(id='first', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[keyword(arg='retrieve', value=Name(id='retrieve', ctx=Load()))]), attr='with_resource', ctx=Load()), args=[Constant(value='http://example.com/1'), Name(id='one', ctx=Load())], keywords=[])), Assign(targets=[Name(id='second', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[keyword(arg='retrieve', value=Name(id='retrieve', ctx=Load()))]), attr='with_resource', ctx=Load()), args=[Constant(value='http://example.com/2'), Name(id='two', ctx=Load())], keywords=[])), Assign(targets=[Name(id='third', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[keyword(arg='retrieve', value=Name(id='retrieve', ctx=Load()))]), attr='with_resource', ctx=Load()), args=[Constant(value='http://example.com/3'), Name(id='three', ctx=Load())], keywords=[])), Assert(test=Compare(left=Call(func=Attribute(value=Name(id='first', ctx=Load()), attr='combine', ctx=Load()), args=[Name(id='second', ctx=Load()), Name(id='third', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[keyword(arg='retrieve', value=Name(id='retrieve', ctx=Load()))]), attr='with_resources', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='http://example.com/1'), Name(id='one', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://example.com/2'), Name(id='two', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://example.com/3'), Name(id='three', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[])])), Assert(test=Compare(left=Call(func=Attribute(value=Name(id='second', ctx=Load()), attr='combine', ctx=Load()), args=[Name(id='first', ctx=Load()), Name(id='third', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[keyword(arg='retrieve', value=Name(id='retrieve', ctx=Load()))]), attr='with_resources', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='http://example.com/1'), Name(id='one', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://example.com/2'), Name(id='two', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://example.com/3'), Name(id='three', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[])]))], decorator_list=[]), FunctionDef(name='test_combine_conflicting_retrieve', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='one', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[], values=[]))])), Assign(targets=[Name(id='two', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])), Assign(targets=[Name(id='three', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='baz')], values=[Constant(value='quux')])], keywords=[])), FunctionDef(name='foo_retrieve', args=arguments(posonlyargs=[], args=[arg(arg='uri')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[]), FunctionDef(name='bar_retrieve', args=arguments(posonlyargs=[], args=[arg(arg='uri')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[]), Assign(targets=[Name(id='first', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[keyword(arg='retrieve', value=Name(id='foo_retrieve', ctx=Load()))]), attr='with_resource', ctx=Load()), args=[Constant(value='http://example.com/1'), Name(id='one', ctx=Load())], keywords=[])), Assign(targets=[Name(id='second', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[Constant(value='http://example.com/2'), Name(id='two', ctx=Load())], keywords=[])), Assign(targets=[Name(id='third', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[keyword(arg='retrieve', value=Name(id='bar_retrieve', ctx=Load()))]), attr='with_resource', ctx=Load()), args=[Constant(value='http://example.com/3'), Name(id='three', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='Exception', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='conflict.*retriev'))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='first', ctx=Load()), attr='combine', ctx=Load()), args=[Name(id='second', ctx=Load()), Name(id='third', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_remove', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='one', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[], values=[]))])), Assign(targets=[Name(id='two', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Name(id='Registry', ctx=Load()), args=[Dict(keys=[Constant(value='urn:foo'), Constant(value='urn:bar')], values=[Name(id='one', ctx=Load()), Name(id='two', ctx=Load())])], keywords=[])), Assert(test=Compare(left=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='remove', ctx=Load()), args=[Constant(value='urn:foo')], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='Registry', ctx=Load()), args=[Dict(keys=[Constant(value='urn:bar')], values=[Name(id='two', ctx=Load())])], keywords=[])]))], decorator_list=[]), FunctionDef(name='test_remove_uncrawled', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='one', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[], values=[]))])), Assign(targets=[Name(id='two', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resources', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='urn:foo'), Name(id='one', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='urn:bar'), Name(id='two', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[])), Assert(test=Compare(left=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='remove', ctx=Load()), args=[Constant(value='urn:foo')], keywords=[]), ops=[Eq()], comparators=[Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[Constant(value='urn:bar'), Name(id='two', ctx=Load())], keywords=[])]))], decorator_list=[]), FunctionDef(name='test_remove_with_anchors', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='one', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[], values=[]))])), Assign(targets=[Name(id='two', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='anchors')], values=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resources', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='urn:foo'), Name(id='one', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='urn:bar'), Name(id='two', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[]), attr='crawl', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='remove', ctx=Load()), args=[Constant(value='urn:bar')], keywords=[]), ops=[Eq()], comparators=[Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[Constant(value='urn:foo'), Name(id='one', ctx=Load())], keywords=[]), attr='crawl', ctx=Load()), args=[], keywords=[])]))], decorator_list=[]), FunctionDef(name='test_remove_nonexistent_uri', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='NoSuchResource', ctx=Load())], keywords=[]), optional_vars=Name(id='e', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='remove', ctx=Load()), args=[Constant(value='urn:doesNotExist')], keywords=[]))]), Assert(test=Compare(left=Attribute(value=Name(id='e', ctx=Load()), attr='value', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Name(id='exceptions', ctx=Load()), attr='NoSuchResource', ctx=Load()), args=[], keywords=[keyword(arg='ref', value=Constant(value='urn:doesNotExist'))])]))], decorator_list=[]), FunctionDef(name='test_retrieve', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='foo', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[keyword(arg='retrieve', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='uri')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Name(id='foo', ctx=Load())))])), Assert(test=Compare(left=Attribute(value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='get_or_retrieve', ctx=Load()), args=[Constant(value='urn:example')], keywords=[]), attr='value', ctx=Load()), ops=[Eq()], comparators=[Name(id='foo', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_retrieve_arbitrary_exception', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='foo', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])), FunctionDef(name='retrieve', args=arguments(posonlyargs=[], args=[arg(arg='uri')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='uri', ctx=Load()), ops=[Eq()], comparators=[Constant(value='urn:succeed')]), body=[Return(value=Name(id='foo', ctx=Load()))], orelse=[]), Raise(exc=Call(func=Name(id='Exception', ctx=Load()), args=[Constant(value='Oh no!')], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[keyword(arg='retrieve', value=Name(id='retrieve', ctx=Load()))])), Assert(test=Compare(left=Attribute(value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='get_or_retrieve', ctx=Load()), args=[Constant(value='urn:succeed')], keywords=[]), attr='value', ctx=Load()), ops=[Eq()], comparators=[Name(id='foo', ctx=Load())])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='Unretrievable', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='get_or_retrieve', ctx=Load()), args=[Constant(value='urn:uhoh')], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_retrieve_no_such_resource', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='foo', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])), FunctionDef(name='retrieve', args=arguments(posonlyargs=[], args=[arg(arg='uri')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='uri', ctx=Load()), ops=[Eq()], comparators=[Constant(value='urn:succeed')]), body=[Return(value=Name(id='foo', ctx=Load()))], orelse=[]), Raise(exc=Call(func=Attribute(value=Name(id='exceptions', ctx=Load()), attr='NoSuchResource', ctx=Load()), args=[], keywords=[keyword(arg='ref', value=Name(id='uri', ctx=Load()))]))], decorator_list=[]), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[keyword(arg='retrieve', value=Name(id='retrieve', ctx=Load()))])), Assert(test=Compare(left=Attribute(value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='get_or_retrieve', ctx=Load()), args=[Constant(value='urn:succeed')], keywords=[]), attr='value', ctx=Load()), ops=[Eq()], comparators=[Name(id='foo', ctx=Load())])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='NoSuchResource', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='get_or_retrieve', ctx=Load()), args=[Constant(value='urn:uhoh')], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_retrieve_cannot_determine_specification', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='retrieve', args=arguments(posonlyargs=[], args=[arg(arg='uri')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='from_contents', ctx=Load()), args=[Dict(keys=[], values=[])], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[keyword(arg='retrieve', value=Name(id='retrieve', ctx=Load()))])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='CannotDetermineSpecification', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='get_or_retrieve', ctx=Load()), args=[Constant(value='urn:uhoh')], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_retrieve_already_available_resource', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='foo', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Name(id='Registry', ctx=Load()), args=[Dict(keys=[Constant(value='urn:example')], values=[Name(id='foo', ctx=Load())])], keywords=[keyword(arg='retrieve', value=Name(id='blow_up', ctx=Load()))])), Assert(test=Compare(left=Subscript(value=Name(id='registry', ctx=Load()), slice=Constant(value='urn:example'), ctx=Load()), ops=[Eq()], comparators=[Name(id='foo', ctx=Load())])), Assert(test=Compare(left=Attribute(value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='get_or_retrieve', ctx=Load()), args=[Constant(value='urn:example')], keywords=[]), attr='value', ctx=Load()), ops=[Eq()], comparators=[Name(id='foo', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_retrieve_first_checks_crawlable_resource', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='child', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='ID'), Constant(value='foo')], values=[Constant(value='urn:child'), Constant(value=12)])], keywords=[])), Assign(targets=[Name(id='root', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='children')], values=[List(elts=[Attribute(value=Name(id='child', ctx=Load()), attr='contents', ctx=Load())], ctx=Load())])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[keyword(arg='retrieve', value=Name(id='blow_up', ctx=Load()))]), attr='with_resource', ctx=Load()), args=[Constant(value='urn:root'), Name(id='root', ctx=Load())], keywords=[])), Assert(test=Compare(left=Subscript(value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='crawl', ctx=Load()), args=[], keywords=[]), slice=Constant(value='urn:child'), ctx=Load()), ops=[Eq()], comparators=[Name(id='child', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_resolver', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='one', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[], values=[]))])), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Name(id='Registry', ctx=Load()), args=[Dict(keys=[Constant(value='http://example.com')], values=[Name(id='one', ctx=Load())])], keywords=[])), Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='resolver', ctx=Load()), args=[], keywords=[keyword(arg='base_uri', value=Constant(value='http://example.com'))])), Assert(test=Compare(left=Attribute(value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='#')], keywords=[]), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Dict(keys=[], values=[])]))], decorator_list=[]), FunctionDef(name='test_resolver_with_root_identified', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='root', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='ID')], values=[Constant(value='http://example.com')])], keywords=[])), Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='resolver_with_root', ctx=Load()), args=[Name(id='root', ctx=Load())], keywords=[])), Assert(test=Compare(left=Attribute(value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='http://example.com')], keywords=[]), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='root', ctx=Load()), attr='contents', ctx=Load())])), Assert(test=Compare(left=Attribute(value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='#')], keywords=[]), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='root', ctx=Load()), attr='contents', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_resolver_with_root_unidentified', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='root', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[], values=[]))])), Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='resolver_with_root', ctx=Load()), args=[Name(id='root', ctx=Load())], keywords=[])), Assert(test=Compare(left=Attribute(value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='#')], keywords=[]), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='root', ctx=Load()), attr='contents', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_repr', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='one', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[], values=[]))])), Assign(targets=[Name(id='two', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resources', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='http://example.com/1'), Name(id='one', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://example.com/foo/bar'), Name(id='two', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='repr', ctx=Load()), args=[Name(id='registry', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value='<Registry (2 uncrawled resources)>')])), Assert(test=Compare(left=Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='crawl', ctx=Load()), args=[], keywords=[])], keywords=[]), ops=[Eq()], comparators=[Constant(value='<Registry (2 resources)>')]))], decorator_list=[]), FunctionDef(name='test_repr_mixed_crawled', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='one', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[], values=[]))])), Assign(targets=[Name(id='two', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[Dict(keys=[Constant(value='http://example.com/1')], values=[Name(id='one', ctx=Load())])], keywords=[]), attr='crawl', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[], keywords=[keyword(arg='uri', value=Constant(value='http://example.com/foo/bar')), keyword(arg='resource', value=Name(id='two', ctx=Load()))])), Assert(test=Compare(left=Call(func=Name(id='repr', ctx=Load()), args=[Name(id='registry', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value='<Registry (2 resources, 1 uncrawled)>')]))], decorator_list=[]), FunctionDef(name='test_repr_one_resource', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[], keywords=[keyword(arg='uri', value=Constant(value='http://example.com/1')), keyword(arg='resource', value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[], values=[]))]))])), Assert(test=Compare(left=Call(func=Name(id='repr', ctx=Load()), args=[Name(id='registry', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value='<Registry (1 uncrawled resource)>')]))], decorator_list=[]), FunctionDef(name='test_repr_empty', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=Compare(left=Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[])], keywords=[]), ops=[Eq()], comparators=[Constant(value='<Registry (0 resources)>')]))], decorator_list=[])], decorator_list=[]), ClassDef(name='TestResource', bases=[], keywords=[], body=[FunctionDef(name='test_from_contents_from_json_schema', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='schema', ctx=Store())], value=Dict(keys=[Constant(value='$schema')], values=[Constant(value='https://json-schema.org/draft/2020-12/schema')])), Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='from_contents', ctx=Load()), args=[Name(id='schema', ctx=Load())], keywords=[])), Assert(test=Compare(left=Name(id='resource', ctx=Load()), ops=[Eq()], comparators=[Call(func=Name(id='Resource', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Name(id='schema', ctx=Load())), keyword(arg='specification', value=Name(id='DRAFT202012', ctx=Load()))])]))], decorator_list=[]), FunctionDef(name='test_from_contents_with_no_discernible_information', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Creating a resource with no discernible way to see what\n        specification it belongs to (e.g. no ``$schema`` keyword for JSON\n        Schema) raises an error.\n        ')), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='CannotDetermineSpecification', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='from_contents', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_from_contents_with_no_discernible_information_and_default', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='from_contents', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[keyword(arg='default_specification', value=Attribute(value=Name(id='Specification', ctx=Load()), attr='OPAQUE', ctx=Load()))])), Assert(test=Compare(left=Name(id='resource', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')]))])]))], decorator_list=[]), FunctionDef(name='test_from_contents_unneeded_default', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='schema', ctx=Store())], value=Dict(keys=[Constant(value='$schema')], values=[Constant(value='https://json-schema.org/draft/2020-12/schema')])), Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='from_contents', ctx=Load()), args=[Name(id='schema', ctx=Load())], keywords=[keyword(arg='default_specification', value=Attribute(value=Name(id='Specification', ctx=Load()), attr='OPAQUE', ctx=Load()))])), Assert(test=Compare(left=Name(id='resource', ctx=Load()), ops=[Eq()], comparators=[Call(func=Name(id='Resource', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Name(id='schema', ctx=Load())), keyword(arg='specification', value=Name(id='DRAFT202012', ctx=Load()))])]))], decorator_list=[]), FunctionDef(name='test_non_mapping_from_contents', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='from_contents', ctx=Load()), args=[Constant(value=True)], keywords=[keyword(arg='default_specification', value=Name(id='ID_AND_CHILDREN', ctx=Load()))])), Assert(test=Compare(left=Name(id='resource', ctx=Load()), ops=[Eq()], comparators=[Call(func=Name(id='Resource', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Constant(value=True)), keyword(arg='specification', value=Name(id='ID_AND_CHILDREN', ctx=Load()))])]))], decorator_list=[]), FunctionDef(name='test_from_contents_with_fallback', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='from_contents', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[keyword(arg='default_specification', value=Attribute(value=Name(id='Specification', ctx=Load()), attr='OPAQUE', ctx=Load()))])), Assert(test=Compare(left=Name(id='resource', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')]))])]))], decorator_list=[]), FunctionDef(name='test_id_delegates_to_specification', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='specification', ctx=Store())], value=Call(func=Name(id='Specification', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='')), keyword(arg='id_of', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='contents')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Constant(value='urn:fixedID'))), keyword(arg='subresources_of', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='contents')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=List(elts=[], ctx=Load()))), keyword(arg='anchors_in', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='specification'), arg(arg='contents')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=List(elts=[], ctx=Load()))), keyword(arg='maybe_in_subresource', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='segments'), arg(arg='resolver'), arg(arg='subresource')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Name(id='resolver', ctx=Load())))])), Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Name(id='Resource', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[Constant(value='foo')], values=[Constant(value='baz')])), keyword(arg='specification', value=Name(id='specification', ctx=Load()))])), Assert(test=Compare(left=Call(func=Attribute(value=Name(id='resource', ctx=Load()), attr='id', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value='urn:fixedID')]))], decorator_list=[]), FunctionDef(name='test_id_strips_empty_fragment', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='uri', ctx=Store())], value=Constant(value='http://example.com/')), Assign(targets=[Name(id='root', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='ID')], values=[BinOp(left=Name(id='uri', ctx=Load()), op=Add(), right=Constant(value='#'))])], keywords=[])), Assert(test=Compare(left=Call(func=Attribute(value=Name(id='root', ctx=Load()), attr='id', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Name(id='uri', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_subresources_delegates_to_specification', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='children')], values=[List(elts=[Dict(keys=[], values=[]), Constant(value=12)], ctx=Load())])], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='resource', ctx=Load()), attr='subresources', ctx=Load()), args=[], keywords=[])], keywords=[]), ops=[Eq()], comparators=[ListComp(elt=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Name(id='each', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='each', ctx=Store()), iter=List(elts=[Dict(keys=[], values=[]), Constant(value=12)], ctx=Load()), ifs=[], is_async=0)])]))], decorator_list=[]), FunctionDef(name='test_subresource_with_different_specification', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='schema', ctx=Store())], value=Dict(keys=[Constant(value='$schema')], values=[Constant(value='https://json-schema.org/draft/2020-12/schema')])), Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='children')], values=[List(elts=[Name(id='schema', ctx=Load())], ctx=Load())])], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='resource', ctx=Load()), attr='subresources', ctx=Load()), args=[], keywords=[])], keywords=[]), ops=[Eq()], comparators=[List(elts=[Call(func=Attribute(value=Name(id='DRAFT202012', ctx=Load()), attr='create_resource', ctx=Load()), args=[Name(id='schema', ctx=Load())], keywords=[])], ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_anchors_delegates_to_specification', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='anchors')], values=[Dict(keys=[Constant(value='foo'), Constant(value='bar'), Constant(value='baz')], values=[Dict(keys=[], values=[]), Constant(value=1), Constant(value='')])])], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='resource', ctx=Load()), attr='anchors', ctx=Load()), args=[], keywords=[])], keywords=[]), ops=[Eq()], comparators=[List(elts=[Call(func=Name(id='Anchor', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='foo')), keyword(arg='resource', value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[], values=[])], keywords=[]))]), Call(func=Name(id='Anchor', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='bar')), keyword(arg='resource', value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Constant(value=1)], keywords=[]))]), Call(func=Name(id='Anchor', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='baz')), keyword(arg='resource', value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Constant(value='')], keywords=[]))])], ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_pointer_to_mapping', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[Constant(value='foo')], values=[Constant(value='baz')]))])), Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='resolver', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Attribute(value=Call(func=Attribute(value=Name(id='resource', ctx=Load()), attr='pointer', ctx=Load()), args=[Constant(value='/foo')], keywords=[keyword(arg='resolver', value=Name(id='resolver', ctx=Load()))]), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Constant(value='baz')]))], decorator_list=[]), FunctionDef(name='test_pointer_to_array', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[Constant(value='foo')], values=[Dict(keys=[Constant(value='bar')], values=[List(elts=[Constant(value=3)], ctx=Load())])]))])), Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='resolver', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Attribute(value=Call(func=Attribute(value=Name(id='resource', ctx=Load()), attr='pointer', ctx=Load()), args=[Constant(value='/foo/bar/0')], keywords=[keyword(arg='resolver', value=Name(id='resolver', ctx=Load()))]), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Constant(value=3)]))], decorator_list=[]), FunctionDef(name='test_opaque', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='contents', ctx=Store())], value=Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])), Assert(test=Compare(left=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[Name(id='contents', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='Resource', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Name(id='contents', ctx=Load())), keyword(arg='specification', value=Attribute(value=Name(id='Specification', ctx=Load()), attr='OPAQUE', ctx=Load()))])]))], decorator_list=[])], decorator_list=[]), ClassDef(name='TestResolver', bases=[], keywords=[], body=[FunctionDef(name='test_lookup_exact_uri', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[Constant(value='foo')], values=[Constant(value='baz')]))])), Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[Dict(keys=[Constant(value='http://example.com/1')], values=[Name(id='resource', ctx=Load())])], keywords=[]), attr='resolver', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='resolved', ctx=Store())], value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='http://example.com/1')], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='resolved', ctx=Load()), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='resource', ctx=Load()), attr='contents', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_lookup_subresource', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='root', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='ID'), Constant(value='children')], values=[Constant(value='http://example.com/'), List(elts=[Dict(keys=[Constant(value='ID'), Constant(value='foo')], values=[Constant(value='http://example.com/a'), Constant(value=12)])], ctx=Load())])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=BinOp(left=Name(id='root', ctx=Load()), op=MatMult(), right=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]))), Assign(targets=[Name(id='resolved', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='resolver', ctx=Load()), args=[], keywords=[]), attr='lookup', ctx=Load()), args=[Constant(value='http://example.com/a')], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='resolved', ctx=Load()), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Dict(keys=[Constant(value='ID'), Constant(value='foo')], values=[Constant(value='http://example.com/a'), Constant(value=12)])]))], decorator_list=[]), FunctionDef(name='test_lookup_anchor_with_id', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='root', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='ID'), Constant(value='anchors')], values=[Constant(value='http://example.com/'), Dict(keys=[Constant(value='foo')], values=[Constant(value=12)])])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=BinOp(left=Name(id='root', ctx=Load()), op=MatMult(), right=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]))), Assign(targets=[Name(id='resolved', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='resolver', ctx=Load()), args=[], keywords=[]), attr='lookup', ctx=Load()), args=[Constant(value='http://example.com/#foo')], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='resolved', ctx=Load()), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Constant(value=12)]))], decorator_list=[]), FunctionDef(name='test_lookup_anchor_without_id', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='root', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='anchors')], values=[Dict(keys=[Constant(value='foo')], values=[Constant(value=12)])])], keywords=[])), Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[Constant(value='urn:example'), Name(id='root', ctx=Load())], keywords=[]), attr='resolver', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='resolved', ctx=Store())], value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='urn:example#foo')], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='resolved', ctx=Load()), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Constant(value=12)]))], decorator_list=[]), FunctionDef(name='test_lookup_unknown_reference', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='resolver', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='ref', ctx=Store())], value=Constant(value='http://example.com/does/not/exist')), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='Unresolvable', ctx=Load())], keywords=[]), optional_vars=Name(id='e', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Name(id='ref', ctx=Load())], keywords=[]))]), Assert(test=Compare(left=Attribute(value=Name(id='e', ctx=Load()), attr='value', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Name(id='exceptions', ctx=Load()), attr='Unresolvable', ctx=Load()), args=[], keywords=[keyword(arg='ref', value=Name(id='ref', ctx=Load()))])]))], decorator_list=[]), FunctionDef(name='test_lookup_non_existent_pointer', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Dict(keys=[], values=[])])], keywords=[])), Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[Dict(keys=[Constant(value='http://example.com/1')], values=[Name(id='resource', ctx=Load())])], keywords=[]), attr='resolver', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='ref', ctx=Store())], value=Constant(value='http://example.com/1#/foo/bar')), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='Unresolvable', ctx=Load())], keywords=[]), optional_vars=Name(id='e', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Name(id='ref', ctx=Load())], keywords=[]))]), Assert(test=Compare(left=Attribute(value=Name(id='e', ctx=Load()), attr='value', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Name(id='exceptions', ctx=Load()), attr='PointerToNowhere', ctx=Load()), args=[], keywords=[keyword(arg='ref', value=Constant(value='/foo/bar')), keyword(arg='resource', value=Name(id='resource', ctx=Load()))])])), Assert(test=Compare(left=Call(func=Name(id='str', ctx=Load()), args=[Attribute(value=Name(id='e', ctx=Load()), attr='value', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value="'/foo/bar' does not exist within {'foo': {}}")]))], decorator_list=[]), FunctionDef(name='test_lookup_non_existent_pointer_to_array_index', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[List(elts=[Constant(value=1), Constant(value=2), Constant(value=4), Constant(value=8)], ctx=Load())], keywords=[])), Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[Dict(keys=[Constant(value='http://example.com/1')], values=[Name(id='resource', ctx=Load())])], keywords=[]), attr='resolver', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='ref', ctx=Store())], value=Constant(value='http://example.com/1#/10')), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='Unresolvable', ctx=Load())], keywords=[]), optional_vars=Name(id='e', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Name(id='ref', ctx=Load())], keywords=[]))]), Assert(test=Compare(left=Attribute(value=Name(id='e', ctx=Load()), attr='value', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Name(id='exceptions', ctx=Load()), attr='PointerToNowhere', ctx=Load()), args=[], keywords=[keyword(arg='ref', value=Constant(value='/10')), keyword(arg='resource', value=Name(id='resource', ctx=Load()))])]))], decorator_list=[]), FunctionDef(name='test_lookup_pointer_to_empty_string', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='resolver_with_root', ctx=Load()), args=[Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[Dict(keys=[Constant(value='')], values=[Dict(keys=[], values=[])])], keywords=[])], keywords=[])), Assert(test=Compare(left=Attribute(value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='#/')], keywords=[]), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Dict(keys=[], values=[])]))], decorator_list=[]), FunctionDef(name='test_lookup_non_existent_pointer_to_empty_string', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Dict(keys=[], values=[])])], keywords=[])), Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='resolver_with_root', ctx=Load()), args=[Name(id='resource', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='Unresolvable', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value="^'/' does not exist within {'foo': {}}.*'#'"))]), optional_vars=Name(id='e', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='#/')], keywords=[]))]), Assert(test=Compare(left=Attribute(value=Name(id='e', ctx=Load()), attr='value', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Name(id='exceptions', ctx=Load()), attr='PointerToNowhere', ctx=Load()), args=[], keywords=[keyword(arg='ref', value=Constant(value='/')), keyword(arg='resource', value=Name(id='resource', ctx=Load()))])]))], decorator_list=[]), FunctionDef(name='test_lookup_non_existent_anchor', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='root', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='anchors')], values=[Dict(keys=[], values=[])])], keywords=[])), Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[Constant(value='urn:example'), Name(id='root', ctx=Load())], keywords=[]), attr='resolver', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='resolved', ctx=Store())], value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='urn:example')], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='resolved', ctx=Load()), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='root', ctx=Load()), attr='contents', ctx=Load())])), Assign(targets=[Name(id='ref', ctx=Store())], value=Constant(value='urn:example#noSuchAnchor')), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='Unresolvable', ctx=Load())], keywords=[]), optional_vars=Name(id='e', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Name(id='ref', ctx=Load())], keywords=[]))]), Assert(test=Compare(left=Constant(value="'noSuchAnchor' does not exist"), ops=[In()], comparators=[Call(func=Name(id='str', ctx=Load()), args=[Attribute(value=Name(id='e', ctx=Load()), attr='value', ctx=Load())], keywords=[])])), Assert(test=Compare(left=Attribute(value=Name(id='e', ctx=Load()), attr='value', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Name(id='exceptions', ctx=Load()), attr='NoSuchAnchor', ctx=Load()), args=[], keywords=[keyword(arg='ref', value=Constant(value='urn:example')), keyword(arg='resource', value=Name(id='root', ctx=Load())), keyword(arg='anchor', value=Constant(value='noSuchAnchor'))])]))], decorator_list=[]), FunctionDef(name='test_lookup_invalid_JSON_pointerish_anchor', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='resolver_with_root', ctx=Load()), args=[Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='ID'), Constant(value='foo')], values=[Constant(value='http://example.com/'), Dict(keys=[Constant(value='bar')], values=[Constant(value=12)])])], keywords=[])], keywords=[])), Assign(targets=[Name(id='valid', ctx=Store())], value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='#/foo/bar')], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='valid', ctx=Load()), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Constant(value=12)])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='InvalidAnchor', ctx=Load())], keywords=[]), optional_vars=Name(id='e', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='#foo/bar')], keywords=[]))]), Assert(test=Compare(left=Constant(value=" '#/foo/bar'"), ops=[In()], comparators=[Call(func=Name(id='str', ctx=Load()), args=[Attribute(value=Name(id='e', ctx=Load()), attr='value', ctx=Load())], keywords=[])]))], decorator_list=[]), FunctionDef(name='test_lookup_retrieved_resource', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[Constant(value='foo')], values=[Constant(value='baz')]))])), Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[keyword(arg='retrieve', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='uri')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Name(id='resource', ctx=Load())))]), attr='resolver', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='resolved', ctx=Store())], value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='http://example.com/')], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='resolved', ctx=Load()), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='resource', ctx=Load()), attr='contents', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_lookup_failed_retrieved_resource', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Unretrievable exceptions are also wrapped in Unresolvable.\n        ')), Assign(targets=[Name(id='uri', ctx=Store())], value=Constant(value='http://example.com/')), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[keyword(arg='retrieve', value=Name(id='blow_up', ctx=Load()))])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='Unretrievable', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='get_or_retrieve', ctx=Load()), args=[Name(id='uri', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='resolver', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='Unresolvable', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Name(id='uri', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_repeated_lookup_from_retrieved_resource', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        A (custom-)retrieved resource is added to the registry returned by\n        looking it up.\n        ')), Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[Constant(value='foo')], values=[Constant(value='baz')]))])), Assign(targets=[Name(id='once', ctx=Store())], value=List(elts=[Name(id='resource', ctx=Load())], ctx=Load())), FunctionDef(name='retrieve', args=arguments(posonlyargs=[], args=[arg(arg='uri')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='once', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[keyword(arg='retrieve', value=Name(id='retrieve', ctx=Load()))]), attr='resolver', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='resolved', ctx=Store())], value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='http://example.com/')], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='resolved', ctx=Load()), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='resource', ctx=Load()), attr='contents', ctx=Load())])), Assign(targets=[Name(id='resolved', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='resolved', ctx=Load()), attr='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='http://example.com/')], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='resolved', ctx=Load()), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='resource', ctx=Load()), attr='contents', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_repeated_anchor_lookup_from_retrieved_resource', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='Resource', ctx=Load()), attr='opaque', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[Constant(value='foo')], values=[Constant(value='baz')]))])), Assign(targets=[Name(id='once', ctx=Store())], value=List(elts=[Name(id='resource', ctx=Load())], ctx=Load())), FunctionDef(name='retrieve', args=arguments(posonlyargs=[], args=[arg(arg='uri')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='once', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[keyword(arg='retrieve', value=Name(id='retrieve', ctx=Load()))]), attr='resolver', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='resolved', ctx=Store())], value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='http://example.com/')], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='resolved', ctx=Load()), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='resource', ctx=Load()), attr='contents', ctx=Load())])), Assign(targets=[Name(id='resolved', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='resolved', ctx=Load()), attr='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='#')], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='resolved', ctx=Load()), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='resource', ctx=Load()), attr='contents', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_in_subresource', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='root', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='ID'), Constant(value='children')], values=[Constant(value='http://example.com/'), List(elts=[Dict(keys=[Constant(value='ID'), Constant(value='children')], values=[Constant(value='child/'), List(elts=[Dict(keys=[Constant(value='ID')], values=[Constant(value='grandchild')])], ctx=Load())])], ctx=Load())])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=BinOp(left=Name(id='root', ctx=Load()), op=MatMult(), right=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]))), Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='resolver', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='first', ctx=Store())], value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='http://example.com/')], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='first', ctx=Load()), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='root', ctx=Load()), attr='contents', ctx=Load())])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='Unresolvable', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='first', ctx=Load()), attr='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='grandchild')], keywords=[]))]), Assign(targets=[Name(id='sub', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='first', ctx=Load()), attr='resolver', ctx=Load()), attr='in_subresource', ctx=Load()), args=[Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Subscript(value=Subscript(value=Attribute(value=Name(id='first', ctx=Load()), attr='contents', ctx=Load()), slice=Constant(value='children'), ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='second', ctx=Store())], value=Call(func=Attribute(value=Name(id='sub', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='grandchild')], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='second', ctx=Load()), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Dict(keys=[Constant(value='ID')], values=[Constant(value='grandchild')])]))], decorator_list=[]), FunctionDef(name='test_in_pointer_subresource', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='root', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='ID'), Constant(value='children')], values=[Constant(value='http://example.com/'), List(elts=[Dict(keys=[Constant(value='ID'), Constant(value='children')], values=[Constant(value='child/'), List(elts=[Dict(keys=[Constant(value='ID')], values=[Constant(value='grandchild')])], ctx=Load())])], ctx=Load())])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=BinOp(left=Name(id='root', ctx=Load()), op=MatMult(), right=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]))), Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='resolver', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='first', ctx=Store())], value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='http://example.com/')], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='first', ctx=Load()), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='root', ctx=Load()), attr='contents', ctx=Load())])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='Unresolvable', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='first', ctx=Load()), attr='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='grandchild')], keywords=[]))]), Assign(targets=[Name(id='second', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='first', ctx=Load()), attr='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='#/children/0')], keywords=[])), Assign(targets=[Name(id='third', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='second', ctx=Load()), attr='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='grandchild')], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='third', ctx=Load()), attr='contents', ctx=Load()), ops=[Eq()], comparators=[Dict(keys=[Constant(value='ID')], values=[Constant(value='grandchild')])]))], decorator_list=[]), FunctionDef(name='test_dynamic_scope', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='one', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='ID'), Constant(value='children')], values=[Constant(value='http://example.com/'), List(elts=[Dict(keys=[Constant(value='ID'), Constant(value='children')], values=[Constant(value='child/'), List(elts=[Dict(keys=[Constant(value='ID')], values=[Constant(value='grandchild')])], ctx=Load())])], ctx=Load())])], keywords=[])), Assign(targets=[Name(id='two', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[Constant(value='ID'), Constant(value='children')], values=[Constant(value='http://example.com/two'), List(elts=[Dict(keys=[Constant(value='ID')], values=[Constant(value='two-child/')])], ctx=Load())])], keywords=[])), Assign(targets=[Name(id='registry', ctx=Store())], value=BinOp(left=List(elts=[Name(id='one', ctx=Load()), Name(id='two', ctx=Load())], ctx=Load()), op=MatMult(), right=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]))), Assign(targets=[Name(id='resolver', ctx=Store())], value=Call(func=Attribute(value=Name(id='registry', ctx=Load()), attr='resolver', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='first', ctx=Store())], value=Call(func=Attribute(value=Name(id='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='http://example.com/')], keywords=[])), Assign(targets=[Name(id='second', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='first', ctx=Load()), attr='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='#/children/0')], keywords=[])), Assign(targets=[Name(id='third', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='second', ctx=Load()), attr='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='grandchild')], keywords=[])), Assign(targets=[Name(id='fourth', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='third', ctx=Load()), attr='resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Constant(value='http://example.com/two')], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='fourth', ctx=Load()), attr='resolver', ctx=Load()), attr='dynamic_scope', ctx=Load()), args=[], keywords=[])], keywords=[]), ops=[Eq()], comparators=[List(elts=[Tuple(elts=[Constant(value='http://example.com/child/grandchild'), Attribute(value=Attribute(value=Name(id='fourth', ctx=Load()), attr='resolver', ctx=Load()), attr='_registry', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://example.com/child/'), Attribute(value=Attribute(value=Name(id='fourth', ctx=Load()), attr='resolver', ctx=Load()), attr='_registry', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://example.com/'), Attribute(value=Attribute(value=Name(id='fourth', ctx=Load()), attr='resolver', ctx=Load()), attr='_registry', ctx=Load())], ctx=Load())], ctx=Load())])), Assert(test=Compare(left=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='third', ctx=Load()), attr='resolver', ctx=Load()), attr='dynamic_scope', ctx=Load()), args=[], keywords=[])], keywords=[]), ops=[Eq()], comparators=[List(elts=[Tuple(elts=[Constant(value='http://example.com/child/'), Attribute(value=Attribute(value=Name(id='third', ctx=Load()), attr='resolver', ctx=Load()), attr='_registry', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='http://example.com/'), Attribute(value=Attribute(value=Name(id='third', ctx=Load()), attr='resolver', ctx=Load()), attr='_registry', ctx=Load())], ctx=Load())], ctx=Load())])), Assert(test=Compare(left=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='second', ctx=Load()), attr='resolver', ctx=Load()), attr='dynamic_scope', ctx=Load()), args=[], keywords=[])], keywords=[]), ops=[Eq()], comparators=[List(elts=[Tuple(elts=[Constant(value='http://example.com/'), Attribute(value=Attribute(value=Name(id='second', ctx=Load()), attr='resolver', ctx=Load()), attr='_registry', ctx=Load())], ctx=Load())], ctx=Load())])), Assert(test=Compare(left=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='first', ctx=Load()), attr='resolver', ctx=Load()), attr='dynamic_scope', ctx=Load()), args=[], keywords=[])], keywords=[]), ops=[Eq()], comparators=[List(elts=[], ctx=Load())]))], decorator_list=[])], decorator_list=[]), ClassDef(name='TestSpecification', bases=[], keywords=[], body=[FunctionDef(name='test_create_resource', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='specification', ctx=Store())], value=Call(func=Name(id='Specification', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='')), keyword(arg='id_of', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='contents')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Constant(value='urn:fixedID'))), keyword(arg='subresources_of', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='contents')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=List(elts=[], ctx=Load()))), keyword(arg='anchors_in', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='specification'), arg(arg='contents')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=List(elts=[], ctx=Load()))), keyword(arg='maybe_in_subresource', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='segments'), arg(arg='resolver'), arg(arg='subresource')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Name(id='resolver', ctx=Load())))])), Assign(targets=[Name(id='resource', ctx=Store())], value=Call(func=Attribute(value=Name(id='specification', ctx=Load()), attr='create_resource', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[Constant(value='foo')], values=[Constant(value='baz')]))])), Assert(test=Compare(left=Name(id='resource', ctx=Load()), ops=[Eq()], comparators=[Call(func=Name(id='Resource', ctx=Load()), args=[], keywords=[keyword(arg='contents', value=Dict(keys=[Constant(value='foo')], values=[Constant(value='baz')])), keyword(arg='specification', value=Name(id='specification', ctx=Load()))])])), Assert(test=Compare(left=Call(func=Attribute(value=Name(id='resource', ctx=Load()), attr='id', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value='urn:fixedID')]))], decorator_list=[]), FunctionDef(name='test_detect_from_json_schema', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='schema', ctx=Store())], value=Dict(keys=[Constant(value='$schema')], values=[Constant(value='https://json-schema.org/draft/2020-12/schema')])), Assign(targets=[Name(id='specification', ctx=Store())], value=Call(func=Attribute(value=Name(id='Specification', ctx=Load()), attr='detect', ctx=Load()), args=[Name(id='schema', ctx=Load())], keywords=[])), Assert(test=Compare(left=Name(id='specification', ctx=Load()), ops=[Eq()], comparators=[Name(id='DRAFT202012', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_detect_with_no_discernible_information', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='CannotDetermineSpecification', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='Specification', ctx=Load()), attr='detect', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_detect_with_no_discernible_information_and_default', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='specification', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='Specification', ctx=Load()), attr='OPAQUE', ctx=Load()), attr='detect', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])), Assert(test=Compare(left=Name(id='specification', ctx=Load()), ops=[Is()], comparators=[Attribute(value=Name(id='Specification', ctx=Load()), attr='OPAQUE', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_detect_unneeded_default', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='schema', ctx=Store())], value=Dict(keys=[Constant(value='$schema')], values=[Constant(value='https://json-schema.org/draft/2020-12/schema')])), Assign(targets=[Name(id='specification', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='Specification', ctx=Load()), attr='OPAQUE', ctx=Load()), attr='detect', ctx=Load()), args=[Name(id='schema', ctx=Load())], keywords=[])), Assert(test=Compare(left=Name(id='specification', ctx=Load()), ops=[Eq()], comparators=[Name(id='DRAFT202012', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_non_mapping_detect', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Attribute(value=Name(id='exceptions', ctx=Load()), attr='CannotDetermineSpecification', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='Specification', ctx=Load()), attr='detect', ctx=Load()), args=[Constant(value=True)], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_non_mapping_detect_with_default', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='specification', ctx=Store())], value=Call(func=Attribute(value=Name(id='ID_AND_CHILDREN', ctx=Load()), attr='detect', ctx=Load()), args=[Constant(value=True)], keywords=[])), Assert(test=Compare(left=Name(id='specification', ctx=Load()), ops=[Is()], comparators=[Name(id='ID_AND_CHILDREN', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_detect_with_fallback', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='specification', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='Specification', ctx=Load()), attr='OPAQUE', ctx=Load()), attr='detect', ctx=Load()), args=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')])], keywords=[])), Assert(test=Compare(left=Name(id='specification', ctx=Load()), ops=[Is()], comparators=[Attribute(value=Name(id='Specification', ctx=Load()), attr='OPAQUE', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_repr', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=Compare(left=Call(func=Name(id='repr', ctx=Load()), args=[Name(id='ID_AND_CHILDREN', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value="<Specification name='id-and-children'>")]))], decorator_list=[])], decorator_list=[]), ClassDef(name='TestOpaqueSpecification', bases=[], keywords=[], body=[Assign(targets=[Name(id='THINGS', ctx=Store())], value=List(elts=[Dict(keys=[Constant(value='foo')], values=[Constant(value='bar')]), Constant(value=True), Constant(value=37), Constant(value='foo'), Call(func=Name(id='object', ctx=Load()), args=[], keywords=[])], ctx=Load())), FunctionDef(name='test_no_id', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='thing')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        An arbitrary thing has no ID.\n        ')), Assert(test=Compare(left=Call(func=Attribute(value=Attribute(value=Name(id='Specification', ctx=Load()), attr='OPAQUE', ctx=Load()), attr='id_of', ctx=Load()), args=[Name(id='thing', ctx=Load())], keywords=[]), ops=[Is()], comparators=[Constant(value=None)]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='thing'), Name(id='THINGS', ctx=Load())], keywords=[])]), FunctionDef(name='test_no_subresources', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='thing')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        An arbitrary thing has no subresources.\n        ')), Assert(test=Compare(left=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='Specification', ctx=Load()), attr='OPAQUE', ctx=Load()), attr='subresources_of', ctx=Load()), args=[Name(id='thing', ctx=Load())], keywords=[])], keywords=[]), ops=[Eq()], comparators=[List(elts=[], ctx=Load())]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='thing'), Name(id='THINGS', ctx=Load())], keywords=[])]), FunctionDef(name='test_no_anchors', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='thing')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        An arbitrary thing has no anchors.\n        ')), Assert(test=Compare(left=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='Specification', ctx=Load()), attr='OPAQUE', ctx=Load()), attr='anchors_in', ctx=Load()), args=[Name(id='thing', ctx=Load())], keywords=[])], keywords=[]), ops=[Eq()], comparators=[List(elts=[], ctx=Load())]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='thing'), Name(id='THINGS', ctx=Load())], keywords=[])])], decorator_list=[]), FunctionDef(name='test_nonsubclassable', args=arguments(posonlyargs=[], args=[arg(arg='cls')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='Exception', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='(?i)subclassing'))]))], body=[ClassDef(name='Boom', bases=[Name(id='cls', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[])])], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='cls'), List(elts=[Name(id='Anchor', ctx=Load()), Name(id='Registry', ctx=Load()), Name(id='Resource', ctx=Load()), Name(id='Specification', ctx=Load()), Attribute(value=Name(id='exceptions', ctx=Load()), attr='PointerToNowhere', ctx=Load())], ctx=Load())], keywords=[])])], type_ignores=[])