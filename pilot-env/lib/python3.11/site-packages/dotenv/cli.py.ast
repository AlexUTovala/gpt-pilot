Module(body=[Import(names=[alias(name='json')]), Import(names=[alias(name='os')]), Import(names=[alias(name='shlex')]), Import(names=[alias(name='sys')]), ImportFrom(module='contextlib', names=[alias(name='contextmanager')], level=0), ImportFrom(module='subprocess', names=[alias(name='Popen')], level=0), ImportFrom(module='typing', names=[alias(name='Any'), alias(name='Dict'), alias(name='IO'), alias(name='Iterator'), alias(name='List')], level=0), Try(body=[Import(names=[alias(name='click')])], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stderr', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='It seems python-dotenv is not installed with cli option. \nRun pip install "python-dotenv[cli]" to fix this.')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='sys', ctx=Load()), attr='exit', ctx=Load()), args=[Constant(value=1)], keywords=[]))])], orelse=[], finalbody=[]), ImportFrom(module='main', names=[alias(name='dotenv_values'), alias(name='set_key'), alias(name='unset_key')], level=1), ImportFrom(module='version', names=[alias(name='__version__')], level=1), FunctionDef(name='enumerate_env', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Return a path for the ${pwd}/.env file.\n\n    If pwd does not exist, return None.\n    ')), Try(body=[Assign(targets=[Name(id='cwd', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Name(id='FileNotFoundError', ctx=Load()), body=[Return(value=Constant(value=None))])], orelse=[], finalbody=[]), Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='cwd', ctx=Load()), Constant(value='.env')], keywords=[])), Return(value=Name(id='path', ctx=Load()))], decorator_list=[]), FunctionDef(name='cli', args=arguments(posonlyargs=[], args=[arg(arg='ctx', annotation=Attribute(value=Name(id='click', ctx=Load()), attr='Context', ctx=Load())), arg(arg='file', annotation=Name(id='Any', ctx=Load())), arg(arg='quote', annotation=Name(id='Any', ctx=Load())), arg(arg='export', annotation=Name(id='Any', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='This script is used to set, get or unset values from a .env file.')), Assign(targets=[Attribute(value=Name(id='ctx', ctx=Load()), attr='obj', ctx=Store())], value=Dict(keys=[Constant(value='QUOTE'), Constant(value='EXPORT'), Constant(value='FILE')], values=[Name(id='quote', ctx=Load()), Name(id='export', ctx=Load()), Name(id='file', ctx=Load())]))], decorator_list=[Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='group', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='option', ctx=Load()), args=[Constant(value='-f'), Constant(value='--file')], keywords=[keyword(arg='default', value=Call(func=Name(id='enumerate_env', ctx=Load()), args=[], keywords=[])), keyword(arg='type', value=Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='Path', ctx=Load()), args=[], keywords=[keyword(arg='file_okay', value=Constant(value=True))])), keyword(arg='help', value=Constant(value='Location of the .env file, defaults to .env file in current working directory.'))]), Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='option', ctx=Load()), args=[Constant(value='-q'), Constant(value='--quote')], keywords=[keyword(arg='default', value=Constant(value='always')), keyword(arg='type', value=Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='Choice', ctx=Load()), args=[List(elts=[Constant(value='always'), Constant(value='never'), Constant(value='auto')], ctx=Load())], keywords=[])), keyword(arg='help', value=Constant(value='Whether to quote or not the variable values. Default mode is always. This does not affect parsing.'))]), Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='option', ctx=Load()), args=[Constant(value='-e'), Constant(value='--export')], keywords=[keyword(arg='default', value=Constant(value=False)), keyword(arg='type', value=Attribute(value=Name(id='click', ctx=Load()), attr='BOOL', ctx=Load())), keyword(arg='help', value=Constant(value='Whether to write the dot file as an executable bash script.'))]), Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='version_option', ctx=Load()), args=[], keywords=[keyword(arg='version', value=Name(id='__version__', ctx=Load()))]), Attribute(value=Name(id='click', ctx=Load()), attr='pass_context', ctx=Load())], returns=Constant(value=None)), FunctionDef(name='stream_file', args=arguments(posonlyargs=[], args=[arg(arg='path', annotation=Attribute(value=Name(id='os', ctx=Load()), attr='PathLike', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Open a file and yield the corresponding (decoded) stream.\n\n    Exits with error code 2 if the file cannot be opened.\n    ')), Try(body=[With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]), optional_vars=Name(id='stream', ctx=Store()))], body=[Expr(value=Yield(value=Name(id='stream', ctx=Load())))])], handlers=[ExceptHandler(type=Name(id='OSError', ctx=Load()), name='exc', body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[JoinedStr(values=[Constant(value='Error opening env file: '), FormattedValue(value=Name(id='exc', ctx=Load()), conversion=-1)])], keywords=[keyword(arg='file', value=Attribute(value=Name(id='sys', ctx=Load()), attr='stderr', ctx=Load()))])), Expr(value=Call(func=Name(id='exit', ctx=Load()), args=[Constant(value=2)], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[Name(id='contextmanager', ctx=Load())], returns=Subscript(value=Name(id='Iterator', ctx=Load()), slice=Subscript(value=Name(id='IO', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), ctx=Load())), FunctionDef(name='list', args=arguments(posonlyargs=[], args=[arg(arg='ctx', annotation=Attribute(value=Name(id='click', ctx=Load()), attr='Context', ctx=Load())), arg(arg='format', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Display all the stored key/value.')), Assign(targets=[Name(id='file', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='obj', ctx=Load()), slice=Constant(value='FILE'), ctx=Load())), With(items=[withitem(context_expr=Call(func=Name(id='stream_file', ctx=Load()), args=[Name(id='file', ctx=Load())], keywords=[]), optional_vars=Name(id='stream', ctx=Store()))], body=[Assign(targets=[Name(id='values', ctx=Store())], value=Call(func=Name(id='dotenv_values', ctx=Load()), args=[], keywords=[keyword(arg='stream', value=Name(id='stream', ctx=Load()))]))]), If(test=Compare(left=Name(id='format', ctx=Load()), ops=[Eq()], comparators=[Constant(value='json')]), body=[Expr(value=Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='echo', ctx=Load()), args=[Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='dumps', ctx=Load()), args=[Name(id='values', ctx=Load())], keywords=[keyword(arg='indent', value=Constant(value=2)), keyword(arg='sort_keys', value=Constant(value=True))])], keywords=[]))], orelse=[Assign(targets=[Name(id='prefix', ctx=Store())], value=IfExp(test=Compare(left=Name(id='format', ctx=Load()), ops=[Eq()], comparators=[Constant(value='export')]), body=Constant(value='export '), orelse=Constant(value=''))), For(target=Name(id='k', ctx=Store()), iter=Call(func=Name(id='sorted', ctx=Load()), args=[Name(id='values', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='v', ctx=Store())], value=Subscript(value=Name(id='values', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Load())), If(test=Compare(left=Name(id='v', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='format', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='export'), Constant(value='shell')], ctx=Load())]), body=[Assign(targets=[Name(id='v', ctx=Store())], value=Call(func=Attribute(value=Name(id='shlex', ctx=Load()), attr='quote', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='echo', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='prefix', ctx=Load()), conversion=-1), FormattedValue(value=Name(id='k', ctx=Load()), conversion=-1), Constant(value='='), FormattedValue(value=Name(id='v', ctx=Load()), conversion=-1)])], keywords=[]))], orelse=[])], orelse=[])])], decorator_list=[Call(func=Attribute(value=Name(id='cli', ctx=Load()), attr='command', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='click', ctx=Load()), attr='pass_context', ctx=Load()), Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='option', ctx=Load()), args=[Constant(value='--format')], keywords=[keyword(arg='default', value=Constant(value='simple')), keyword(arg='type', value=Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='Choice', ctx=Load()), args=[List(elts=[Constant(value='simple'), Constant(value='json'), Constant(value='shell'), Constant(value='export')], ctx=Load())], keywords=[])), keyword(arg='help', value=Constant(value='The format in which to display the list. Default format is simple, which displays name=value without quotes.'))])], returns=Constant(value=None)), FunctionDef(name='set', args=arguments(posonlyargs=[], args=[arg(arg='ctx', annotation=Attribute(value=Name(id='click', ctx=Load()), attr='Context', ctx=Load())), arg(arg='key', annotation=Name(id='Any', ctx=Load())), arg(arg='value', annotation=Name(id='Any', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Store the given key/value.')), Assign(targets=[Name(id='file', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='obj', ctx=Load()), slice=Constant(value='FILE'), ctx=Load())), Assign(targets=[Name(id='quote', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='obj', ctx=Load()), slice=Constant(value='QUOTE'), ctx=Load())), Assign(targets=[Name(id='export', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='obj', ctx=Load()), slice=Constant(value='EXPORT'), ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='success', ctx=Store()), Name(id='key', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store())], value=Call(func=Name(id='set_key', ctx=Load()), args=[Name(id='file', ctx=Load()), Name(id='key', ctx=Load()), Name(id='value', ctx=Load()), Name(id='quote', ctx=Load()), Name(id='export', ctx=Load())], keywords=[])), If(test=Name(id='success', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='echo', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='key', ctx=Load()), conversion=-1), Constant(value='='), FormattedValue(value=Name(id='value', ctx=Load()), conversion=-1)])], keywords=[]))], orelse=[Expr(value=Call(func=Name(id='exit', ctx=Load()), args=[Constant(value=1)], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='cli', ctx=Load()), attr='command', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='click', ctx=Load()), attr='pass_context', ctx=Load()), Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='argument', ctx=Load()), args=[Constant(value='key')], keywords=[keyword(arg='required', value=Constant(value=True))]), Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='argument', ctx=Load()), args=[Constant(value='value')], keywords=[keyword(arg='required', value=Constant(value=True))])], returns=Constant(value=None)), FunctionDef(name='get', args=arguments(posonlyargs=[], args=[arg(arg='ctx', annotation=Attribute(value=Name(id='click', ctx=Load()), attr='Context', ctx=Load())), arg(arg='key', annotation=Name(id='Any', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Retrieve the value for the given key.')), Assign(targets=[Name(id='file', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='obj', ctx=Load()), slice=Constant(value='FILE'), ctx=Load())), With(items=[withitem(context_expr=Call(func=Name(id='stream_file', ctx=Load()), args=[Name(id='file', ctx=Load())], keywords=[]), optional_vars=Name(id='stream', ctx=Store()))], body=[Assign(targets=[Name(id='values', ctx=Store())], value=Call(func=Name(id='dotenv_values', ctx=Load()), args=[], keywords=[keyword(arg='stream', value=Name(id='stream', ctx=Load()))]))]), Assign(targets=[Name(id='stored_value', ctx=Store())], value=Call(func=Attribute(value=Name(id='values', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[])), If(test=Name(id='stored_value', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='echo', ctx=Load()), args=[Name(id='stored_value', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Name(id='exit', ctx=Load()), args=[Constant(value=1)], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='cli', ctx=Load()), attr='command', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='click', ctx=Load()), attr='pass_context', ctx=Load()), Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='argument', ctx=Load()), args=[Constant(value='key')], keywords=[keyword(arg='required', value=Constant(value=True))])], returns=Constant(value=None)), FunctionDef(name='unset', args=arguments(posonlyargs=[], args=[arg(arg='ctx', annotation=Attribute(value=Name(id='click', ctx=Load()), attr='Context', ctx=Load())), arg(arg='key', annotation=Name(id='Any', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Removes the given key.')), Assign(targets=[Name(id='file', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='obj', ctx=Load()), slice=Constant(value='FILE'), ctx=Load())), Assign(targets=[Name(id='quote', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='obj', ctx=Load()), slice=Constant(value='QUOTE'), ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='success', ctx=Store()), Name(id='key', ctx=Store())], ctx=Store())], value=Call(func=Name(id='unset_key', ctx=Load()), args=[Name(id='file', ctx=Load()), Name(id='key', ctx=Load()), Name(id='quote', ctx=Load())], keywords=[])), If(test=Name(id='success', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='echo', ctx=Load()), args=[JoinedStr(values=[Constant(value='Successfully removed '), FormattedValue(value=Name(id='key', ctx=Load()), conversion=-1)])], keywords=[]))], orelse=[Expr(value=Call(func=Name(id='exit', ctx=Load()), args=[Constant(value=1)], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='cli', ctx=Load()), attr='command', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='click', ctx=Load()), attr='pass_context', ctx=Load()), Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='argument', ctx=Load()), args=[Constant(value='key')], keywords=[keyword(arg='required', value=Constant(value=True))])], returns=Constant(value=None)), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='ctx', annotation=Attribute(value=Name(id='click', ctx=Load()), attr='Context', ctx=Load())), arg(arg='override', annotation=Name(id='bool', ctx=Load())), arg(arg='commandline', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Run command with environment variables present.')), Assign(targets=[Name(id='file', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='obj', ctx=Load()), slice=Constant(value='FILE'), ctx=Load())), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isfile', ctx=Load()), args=[Name(id='file', ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='BadParameter', ctx=Load()), args=[JoinedStr(values=[Constant(value='Invalid value for \'-f\' "'), FormattedValue(value=Name(id='file', ctx=Load()), conversion=-1), Constant(value='" does not exist.')])], keywords=[keyword(arg='ctx', value=Name(id='ctx', ctx=Load()))]))], orelse=[]), Assign(targets=[Name(id='dotenv_as_dict', ctx=Store())], value=DictComp(key=Name(id='k', ctx=Load()), value=Name(id='v', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Call(func=Name(id='dotenv_values', ctx=Load()), args=[Name(id='file', ctx=Load())], keywords=[]), attr='items', ctx=Load()), args=[], keywords=[]), ifs=[BoolOp(op=And(), values=[Compare(left=Name(id='v', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), BoolOp(op=Or(), values=[Name(id='override', ctx=Load()), Compare(left=Name(id='k', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load())])])])], is_async=0)])), If(test=UnaryOp(op=Not(), operand=Name(id='commandline', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='echo', ctx=Load()), args=[Constant(value='No command given.')], keywords=[])), Expr(value=Call(func=Name(id='exit', ctx=Load()), args=[Constant(value=1)], keywords=[]))], orelse=[]), Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Name(id='run_command', ctx=Load()), args=[Name(id='commandline', ctx=Load()), Name(id='dotenv_as_dict', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='exit', ctx=Load()), args=[Name(id='ret', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='cli', ctx=Load()), attr='command', ctx=Load()), args=[], keywords=[keyword(arg='context_settings', value=Dict(keys=[Constant(value='ignore_unknown_options')], values=[Constant(value=True)]))]), Attribute(value=Name(id='click', ctx=Load()), attr='pass_context', ctx=Load()), Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='option', ctx=Load()), args=[Constant(value='--override/--no-override')], keywords=[keyword(arg='default', value=Constant(value=True)), keyword(arg='help', value=Constant(value='Override variables from the environment file with those from the .env file.'))]), Call(func=Attribute(value=Name(id='click', ctx=Load()), attr='argument', ctx=Load()), args=[Constant(value='commandline')], keywords=[keyword(arg='nargs', value=UnaryOp(op=USub(), operand=Constant(value=1))), keyword(arg='type', value=Attribute(value=Name(id='click', ctx=Load()), attr='UNPROCESSED', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='run_command', args=arguments(posonlyargs=[], args=[arg(arg='command', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='env', annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="Run command in sub process.\n\n    Runs the command in a sub process with the variables from `env`\n    added in the current environment variables.\n\n    Parameters\n    ----------\n    command: List[str]\n        The command and it's parameters\n    env: Dict\n        The additional environment variables\n\n    Returns\n    -------\n    int\n        The return code of the command\n\n    ")), Assign(targets=[Name(id='cmd_env', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='cmd_env', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='env', ctx=Load())], keywords=[])), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Name(id='Popen', ctx=Load()), args=[Name(id='command', ctx=Load())], keywords=[keyword(arg='universal_newlines', value=Constant(value=True)), keyword(arg='bufsize', value=Constant(value=0)), keyword(arg='shell', value=Constant(value=False)), keyword(arg='env', value=Name(id='cmd_env', ctx=Load()))])), Assign(targets=[Tuple(elts=[Name(id='_', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='communicate', ctx=Load()), args=[], keywords=[])), Return(value=Attribute(value=Name(id='p', ctx=Load()), attr='returncode', ctx=Load()))], decorator_list=[], returns=Name(id='int', ctx=Load()))], type_ignores=[])