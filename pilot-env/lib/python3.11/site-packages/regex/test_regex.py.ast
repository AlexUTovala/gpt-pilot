Module(body=[ImportFrom(module='weakref', names=[alias(name='proxy')], level=0), Import(names=[alias(name='copy')]), Import(names=[alias(name='pickle')]), Import(names=[alias(name='regex')]), Import(names=[alias(name='string')]), Import(names=[alias(name='sys')]), Import(names=[alias(name='unittest')]), ClassDef(name='StrSubclass', bases=[Name(id='str', ctx=Load())], keywords=[], body=[FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='index')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='StrSubclass', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__getitem__', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='BytesSubclass', bases=[Name(id='bytes', ctx=Load())], keywords=[], body=[FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='index')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='BytesSubclass', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__getitem__', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='RegexTests', bases=[Attribute(value=Name(id='unittest', ctx=Load()), attr='TestCase', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='PATTERN_CLASS', ctx=Store())], value=Constant(value="<class '_regex.Pattern'>")), Assign(targets=[Name(id='FLAGS_WITH_COMPILED_PAT', ctx=Store())], value=Constant(value='cannot process flags argument with a compiled pattern')), Assign(targets=[Name(id='INVALID_GROUP_REF', ctx=Store())], value=Constant(value='invalid group reference')), Assign(targets=[Name(id='MISSING_GT', ctx=Store())], value=Constant(value='missing >')), Assign(targets=[Name(id='BAD_GROUP_NAME', ctx=Store())], value=Constant(value='bad character in group name')), Assign(targets=[Name(id='MISSING_GROUP_NAME', ctx=Store())], value=Constant(value='missing group name')), Assign(targets=[Name(id='MISSING_LT', ctx=Store())], value=Constant(value='missing <')), Assign(targets=[Name(id='UNKNOWN_GROUP_I', ctx=Store())], value=Constant(value='unknown group')), Assign(targets=[Name(id='UNKNOWN_GROUP', ctx=Store())], value=Constant(value='unknown group')), Assign(targets=[Name(id='BAD_ESCAPE', ctx=Store())], value=Constant(value='bad escape \\(end of pattern\\)')), Assign(targets=[Name(id='BAD_OCTAL_ESCAPE', ctx=Store())], value=Constant(value='bad escape \\\\')), Assign(targets=[Name(id='BAD_SET', ctx=Store())], value=Constant(value='unterminated character set')), Assign(targets=[Name(id='STR_PAT_ON_BYTES', ctx=Store())], value=Constant(value='cannot use a string pattern on a bytes-like object')), Assign(targets=[Name(id='BYTES_PAT_ON_STR', ctx=Store())], value=Constant(value='cannot use a bytes pattern on a string-like object')), Assign(targets=[Name(id='STR_PAT_BYTES_TEMPL', ctx=Store())], value=Constant(value='expected str instance, bytes found')), Assign(targets=[Name(id='BYTES_PAT_STR_TEMPL', ctx=Store())], value=Constant(value='expected a bytes-like object, str found')), Assign(targets=[Name(id='BYTES_PAT_UNI_FLAG', ctx=Store())], value=Constant(value='cannot use UNICODE flag with a bytes pattern')), Assign(targets=[Name(id='MIXED_FLAGS', ctx=Store())], value=Constant(value='ASCII, LOCALE and UNICODE flags are mutually incompatible')), Assign(targets=[Name(id='MISSING_RPAREN', ctx=Store())], value=Constant(value='missing \\)')), Assign(targets=[Name(id='TRAILING_CHARS', ctx=Store())], value=Constant(value='unbalanced parenthesis')), Assign(targets=[Name(id='BAD_CHAR_RANGE', ctx=Store())], value=Constant(value='bad character range')), Assign(targets=[Name(id='NOTHING_TO_REPEAT', ctx=Store())], value=Constant(value='nothing to repeat')), Assign(targets=[Name(id='MULTIPLE_REPEAT', ctx=Store())], value=Constant(value='multiple repeat')), Assign(targets=[Name(id='OPEN_GROUP', ctx=Store())], value=Constant(value='cannot refer to an open group')), Assign(targets=[Name(id='DUPLICATE_GROUP', ctx=Store())], value=Constant(value='duplicate group')), Assign(targets=[Name(id='CANT_TURN_OFF', ctx=Store())], value=Constant(value='bad inline flags: cannot turn flags off')), Assign(targets=[Name(id='UNDEF_CHAR_NAME', ctx=Store())], value=Constant(value='undefined character name')), FunctionDef(name='assertTypedEqual', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='actual'), arg(arg='expect'), arg(arg='msg')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='actual', ctx=Load()), Name(id='expect', ctx=Load()), Name(id='msg', ctx=Load())], keywords=[])), FunctionDef(name='recurse', args=arguments(posonlyargs=[], args=[arg(arg='actual'), arg(arg='expect')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='expect', ctx=Load()), Tuple(elts=[Name(id='tuple', ctx=Load()), Name(id='list', ctx=Load())], ctx=Load())], keywords=[]), body=[For(target=Tuple(elts=[Name(id='x', ctx=Store()), Name(id='y', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='zip', ctx=Load()), args=[Name(id='actual', ctx=Load()), Name(id='expect', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Name(id='recurse', ctx=Load()), args=[Name(id='x', ctx=Load()), Name(id='y', ctx=Load())], keywords=[]))], orelse=[])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIs', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Name(id='actual', ctx=Load())], keywords=[]), Call(func=Name(id='type', ctx=Load()), args=[Name(id='expect', ctx=Load())], keywords=[]), Name(id='msg', ctx=Load())], keywords=[]))])], decorator_list=[]), Expr(value=Call(func=Name(id='recurse', ctx=Load()), args=[Name(id='actual', ctx=Load()), Name(id='expect', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_weakref', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='s', ctx=Store())], value=Constant(value='QabbbcR')), Assign(targets=[Name(id='x', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='ab+c')], keywords=[])), Assign(targets=[Name(id='y', ctx=Store())], value=Call(func=Name(id='proxy', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[])), If(test=Compare(left=Call(func=Attribute(value=Name(id='x', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='QabbbcR')], keywords=[]), ops=[NotEq()], comparators=[Call(func=Attribute(value=Name(id='y', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='QabbbcR')], keywords=[])]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_search_star_plus', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='a*'), Constant(value='xxx')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0)], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='x*'), Constant(value='axx')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='x+'), Constant(value='axx')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0)], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='x+'), Constant(value='axx')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='x'), Constant(value='aaa')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a*'), Constant(value='xxx')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0)], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a*'), Constant(value='xxx')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='x*'), Constant(value='xxxa')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0)], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='x*'), Constant(value='xxxa')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a+'), Constant(value='xxx')], keywords=[]), Constant(value=None)], keywords=[]))], decorator_list=[]), FunctionDef(name='bump_num', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='matchobj')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='int_value', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='matchobj', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='str', ctx=Load()), args=[BinOp(left=Name(id='int_value', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[]))], decorator_list=[]), FunctionDef(name='test_basic_regex_sub', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?i)b+'), Constant(value='x'), Constant(value='bbbb BBBB')], keywords=[]), Constant(value='x x')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='\\d+'), Attribute(value=Name(id='self', ctx=Load()), attr='bump_num', ctx=Load()), Constant(value='08.2 -2 23x99y')], keywords=[]), Constant(value='9.3 -3 24x100y')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='\\d+'), Attribute(value=Name(id='self', ctx=Load()), attr='bump_num', ctx=Load()), Constant(value='08.2 -2 23x99y'), Constant(value=3)], keywords=[]), Constant(value='9.3 -3 23x99y')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='.'), Lambda(args=arguments(posonlyargs=[], args=[arg(arg='m')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Constant(value='\\n')), Constant(value='x')], keywords=[]), Constant(value='\\n')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='.'), Constant(value='\\n'), Constant(value='x')], keywords=[]), Constant(value='\n')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?P<a>x)'), Constant(value='\\g<a>\\g<a>'), Constant(value='xx')], keywords=[]), Constant(value='xxxx')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?P<a>x)'), Constant(value='\\g<a>\\g<1>'), Constant(value='xx')], keywords=[]), Constant(value='xxxx')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?P<unk>x)'), Constant(value='\\g<unk>\\g<unk>'), Constant(value='xx')], keywords=[]), Constant(value='xxxx')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?P<unk>x)'), Constant(value='\\g<1>\\g<1>'), Constant(value='xx')], keywords=[]), Constant(value='xxxx')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='a'), Constant(value='\\t\\n\\v\\r\\f\\a\\b'), Constant(value='a')], keywords=[]), Constant(value='\t\n\x0b\r\x0c\x07\x08')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='a'), Constant(value='\t\n\x0b\r\x0c\x07'), Constant(value='a')], keywords=[]), Constant(value='\t\n\x0b\r\x0c\x07')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='a'), Constant(value='\t\n\x0b\r\x0c\x07'), Constant(value='a')], keywords=[]), BinOp(left=BinOp(left=BinOp(left=BinOp(left=BinOp(left=Call(func=Name(id='chr', ctx=Load()), args=[Constant(value=9)], keywords=[]), op=Add(), right=Call(func=Name(id='chr', ctx=Load()), args=[Constant(value=10)], keywords=[])), op=Add(), right=Call(func=Name(id='chr', ctx=Load()), args=[Constant(value=11)], keywords=[])), op=Add(), right=Call(func=Name(id='chr', ctx=Load()), args=[Constant(value=13)], keywords=[])), op=Add(), right=Call(func=Name(id='chr', ctx=Load()), args=[Constant(value=12)], keywords=[])), op=Add(), right=Call(func=Name(id='chr', ctx=Load()), args=[Constant(value=7)], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='^\\s*'), Constant(value='X'), Constant(value='test')], keywords=[]), Constant(value='Xtest')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\x0A'), Constant(value='x')], keywords=[]), Constant(value='\n')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\u000A'), Constant(value='x')], keywords=[]), Constant(value='\n')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\U0000000A'), Constant(value='x')], keywords=[]), Constant(value='\n')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\N{LATIN CAPITAL LETTER A}'), Constant(value='x')], keywords=[]), Constant(value='A')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value=b'x'), Constant(value=b'\\x0A'), Constant(value=b'x')], keywords=[]), Constant(value=b'\n')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_449964', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?P<unk>x)'), Constant(value='\\g<1>\\g<1>\\b'), Constant(value='xx')], keywords=[]), Constant(value='xx\x08xx\x08')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_449000', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='\\r\\n'), Constant(value='\\n'), Constant(value='abc\r\ndef\r\n')], keywords=[]), Constant(value='abc\ndef\n')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='\r\n'), Constant(value='\\n'), Constant(value='abc\r\ndef\r\n')], keywords=[]), Constant(value='abc\ndef\n')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='\\r\\n'), Constant(value='\n'), Constant(value='abc\r\ndef\r\n')], keywords=[]), Constant(value='abc\ndef\n')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='\r\n'), Constant(value='\n'), Constant(value='abc\r\ndef\r\n')], keywords=[]), Constant(value='abc\ndef\n')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_1661', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='pattern', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='.')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='FLAGS_WITH_COMPILED_PAT', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='pattern', ctx=Load()), Constant(value='A'), Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load())], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='FLAGS_WITH_COMPILED_PAT', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Name(id='pattern', ctx=Load()), Constant(value='A'), Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load())], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='FLAGS_WITH_COMPILED_PAT', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Name(id='pattern', ctx=Load()), Constant(value='A'), Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load())], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='FLAGS_WITH_COMPILED_PAT', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Name(id='pattern', ctx=Load()), Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load())], keywords=[]))], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_3629', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?P<quote>)(?(quote))')], keywords=[])], keywords=[])], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='PATTERN_CLASS', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_sub_template_numeric_escape', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\0'), Constant(value='x')], keywords=[]), Constant(value='\x00')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\000'), Constant(value='x')], keywords=[]), Constant(value='\x00')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\001'), Constant(value='x')], keywords=[]), Constant(value='\x01')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\008'), Constant(value='x')], keywords=[]), BinOp(left=Constant(value='\x00'), op=Add(), right=Constant(value='8'))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\009'), Constant(value='x')], keywords=[]), BinOp(left=Constant(value='\x00'), op=Add(), right=Constant(value='9'))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\111'), Constant(value='x')], keywords=[]), Constant(value='I')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\117'), Constant(value='x')], keywords=[]), Constant(value='O')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\1111'), Constant(value='x')], keywords=[]), Constant(value='I1')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\1111'), Constant(value='x')], keywords=[]), BinOp(left=Constant(value='I'), op=Add(), right=Constant(value='1'))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\00'), Constant(value='x')], keywords=[]), Constant(value='\x00')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\07'), Constant(value='x')], keywords=[]), Constant(value='\x07')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\08'), Constant(value='x')], keywords=[]), BinOp(left=Constant(value='\x00'), op=Add(), right=Constant(value='8'))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\09'), Constant(value='x')], keywords=[]), BinOp(left=Constant(value='\x00'), op=Add(), right=Constant(value='9'))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\0a'), Constant(value='x')], keywords=[]), BinOp(left=Constant(value='\x00'), op=Add(), right=Constant(value='a'))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\400'), Constant(value='x')], keywords=[]), Constant(value='Ā')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\777'), Constant(value='x')], keywords=[]), Constant(value='ǿ')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value=b'x'), Constant(value=b'\\400'), Constant(value=b'x')], keywords=[]), Constant(value=b'\x00')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value=b'x'), Constant(value=b'\\777'), Constant(value=b'x')], keywords=[]), Constant(value=b'\xff')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='INVALID_GROUP_REF', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\1'), Constant(value='x')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='INVALID_GROUP_REF', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\8'), Constant(value='x')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='INVALID_GROUP_REF', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\9'), Constant(value='x')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='INVALID_GROUP_REF', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\11'), Constant(value='x')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='INVALID_GROUP_REF', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\18'), Constant(value='x')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='INVALID_GROUP_REF', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\1a'), Constant(value='x')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='INVALID_GROUP_REF', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\90'), Constant(value='x')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='INVALID_GROUP_REF', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\99'), Constant(value='x')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='INVALID_GROUP_REF', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\118'), Constant(value='x')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='INVALID_GROUP_REF', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\11a'), Constant(value='x')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='INVALID_GROUP_REF', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\181'), Constant(value='x')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='INVALID_GROUP_REF', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\800'), Constant(value='x')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(((((((((((x)))))))))))'), Constant(value='\\11'), Constant(value='x')], keywords=[]), Constant(value='x')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='((((((((((y))))))))))(.)'), Constant(value='\\118'), Constant(value='xyz')], keywords=[]), Constant(value='xz8')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='((((((((((y))))))))))(.)'), Constant(value='\\11a'), Constant(value='xyz')], keywords=[]), Constant(value='xza')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_qualified_re_sub', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='a'), Constant(value='b'), Constant(value='aaaaa')], keywords=[]), Constant(value='bbbbb')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='a'), Constant(value='b'), Constant(value='aaaaa'), Constant(value=1)], keywords=[]), Constant(value='baaaa')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_114660', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(\\S)\\s+(\\S)'), Constant(value='\\1 \\2'), Constant(value='hello  there')], keywords=[]), Constant(value='hello there')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_462270', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=7), Constant(value=0)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?V0)x*'), Constant(value='-'), Constant(value='abxd')], keywords=[]), Constant(value='-a-b--d-')], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?V0)x*'), Constant(value='-'), Constant(value='abxd')], keywords=[]), Constant(value='-a-b-d-')], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?V1)x*'), Constant(value='-'), Constant(value='abxd')], keywords=[]), Constant(value='-a-b--d-')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x+'), Constant(value='-'), Constant(value='abxd')], keywords=[]), Constant(value='ab-d')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_14462', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='group_name', ctx=Store())], value=Constant(value='ÿ')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[BinOp(left=BinOp(left=Constant(value='(?P<'), op=Add(), right=Name(id='group_name', ctx=Load())), op=Add(), right=Constant(value='>a)')), Constant(value='abc')], keywords=[]), attr='group', ctx=Load()), args=[Name(id='group_name', ctx=Load())], keywords=[]), Constant(value='a')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_symbolic_refs', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='MISSING_GT', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?P<a>x)'), Constant(value='\\g<a'), Constant(value='xx')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='MISSING_GROUP_NAME', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?P<a>x)'), Constant(value='\\g<'), Constant(value='xx')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='MISSING_LT', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?P<a>x)'), Constant(value='\\g'), Constant(value='xx')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_GROUP_NAME', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?P<a>x)'), Constant(value='\\g<a a>'), Constant(value='xx')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_GROUP_NAME', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?P<a>x)'), Constant(value='\\g<1a1>'), Constant(value='xx')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='IndexError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='UNKNOWN_GROUP_I', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?P<a>x)'), Constant(value='\\g<ab>'), Constant(value='xx')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?P<a>x)|(?P<b>y)'), Constant(value='\\g<b>'), Constant(value='xx')], keywords=[]), Constant(value='')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?P<a>x)|(?P<b>y)'), Constant(value='\\2'), Constant(value='xx')], keywords=[]), Constant(value='')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_GROUP_NAME', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?P<a>x)'), Constant(value='\\g<-1>'), Constant(value='xx')], keywords=[]))], keywords=[]))], decorator_list=[]), FunctionDef(name='test_re_subn', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='subn', ctx=Load()), args=[Constant(value='(?i)b+'), Constant(value='x'), Constant(value='bbbb BBBB')], keywords=[]), Tuple(elts=[Constant(value='x x'), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='subn', ctx=Load()), args=[Constant(value='b+'), Constant(value='x'), Constant(value='bbbb BBBB')], keywords=[]), Tuple(elts=[Constant(value='x BBBB'), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='subn', ctx=Load()), args=[Constant(value='b+'), Constant(value='x'), Constant(value='xyz')], keywords=[]), Tuple(elts=[Constant(value='xyz'), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='subn', ctx=Load()), args=[Constant(value='b*'), Constant(value='x'), Constant(value='xyz')], keywords=[]), Tuple(elts=[Constant(value='xxxyxzx'), Constant(value=4)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='subn', ctx=Load()), args=[Constant(value='b*'), Constant(value='x'), Constant(value='xyz'), Constant(value=2)], keywords=[]), Tuple(elts=[Constant(value='xxxyz'), Constant(value=2)], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_re_split', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=':'), Constant(value=':a:b::c')], keywords=[]), List(elts=[Constant(value=''), Constant(value='a'), Constant(value='b'), Constant(value=''), Constant(value='c')], ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=7), Constant(value=0)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=':*'), Constant(value=':a:b::c')], keywords=[]), List(elts=[Constant(value=''), Constant(value=''), Constant(value='a'), Constant(value=''), Constant(value='b'), Constant(value=''), Constant(value='c'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(:*)'), Constant(value=':a:b::c')], keywords=[]), List(elts=[Constant(value=''), Constant(value=':'), Constant(value=''), Constant(value=''), Constant(value='a'), Constant(value=':'), Constant(value=''), Constant(value=''), Constant(value='b'), Constant(value='::'), Constant(value=''), Constant(value=''), Constant(value='c'), Constant(value=''), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?::*)'), Constant(value=':a:b::c')], keywords=[]), List(elts=[Constant(value=''), Constant(value=''), Constant(value='a'), Constant(value=''), Constant(value='b'), Constant(value=''), Constant(value='c'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(:)*'), Constant(value=':a:b::c')], keywords=[]), List(elts=[Constant(value=''), Constant(value=':'), Constant(value=''), Constant(value=None), Constant(value='a'), Constant(value=':'), Constant(value=''), Constant(value=None), Constant(value='b'), Constant(value=':'), Constant(value=''), Constant(value=None), Constant(value='c'), Constant(value=None), Constant(value='')], ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=':*'), Constant(value=':a:b::c')], keywords=[]), List(elts=[Constant(value=''), Constant(value='a'), Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(:*)'), Constant(value=':a:b::c')], keywords=[]), List(elts=[Constant(value=''), Constant(value=':'), Constant(value='a'), Constant(value=':'), Constant(value='b'), Constant(value='::'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?::*)'), Constant(value=':a:b::c')], keywords=[]), List(elts=[Constant(value=''), Constant(value='a'), Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(:)*'), Constant(value=':a:b::c')], keywords=[]), List(elts=[Constant(value=''), Constant(value=':'), Constant(value='a'), Constant(value=':'), Constant(value='b'), Constant(value=':'), Constant(value='c')], ctx=Load())], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='([b:]+)'), Constant(value=':a:b::c')], keywords=[]), List(elts=[Constant(value=''), Constant(value=':'), Constant(value='a'), Constant(value=':b::'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(b)|(:+)'), Constant(value=':a:b::c')], keywords=[]), List(elts=[Constant(value=''), Constant(value=None), Constant(value=':'), Constant(value='a'), Constant(value=None), Constant(value=':'), Constant(value=''), Constant(value='b'), Constant(value=None), Constant(value=''), Constant(value=None), Constant(value='::'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?:b)|(?::+)'), Constant(value=':a:b::c')], keywords=[]), List(elts=[Constant(value=''), Constant(value='a'), Constant(value=''), Constant(value=''), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='x'), Constant(value='xaxbxc')], keywords=[]), List(elts=[Constant(value=''), Constant(value='a'), Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Name(id='m', ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='splititer', ctx=Load()), args=[Constant(value='x'), Constant(value='xaxbxc')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value=''), Constant(value='a'), Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?r)x'), Constant(value='xaxbxc')], keywords=[]), List(elts=[Constant(value='c'), Constant(value='b'), Constant(value='a'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Name(id='m', ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='splititer', ctx=Load()), args=[Constant(value='(?r)x'), Constant(value='xaxbxc')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='c'), Constant(value='b'), Constant(value='a'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(x)|(y)'), Constant(value='xaxbxc')], keywords=[]), List(elts=[Constant(value=''), Constant(value='x'), Constant(value=None), Constant(value='a'), Constant(value='x'), Constant(value=None), Constant(value='b'), Constant(value='x'), Constant(value=None), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Name(id='m', ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='splititer', ctx=Load()), args=[Constant(value='(x)|(y)'), Constant(value='xaxbxc')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value=''), Constant(value='x'), Constant(value=None), Constant(value='a'), Constant(value='x'), Constant(value=None), Constant(value='b'), Constant(value='x'), Constant(value=None), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?r)(x)|(y)'), Constant(value='xaxbxc')], keywords=[]), List(elts=[Constant(value='c'), Constant(value='x'), Constant(value=None), Constant(value='b'), Constant(value='x'), Constant(value=None), Constant(value='a'), Constant(value='x'), Constant(value=None), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Name(id='m', ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='splititer', ctx=Load()), args=[Constant(value='(?r)(x)|(y)'), Constant(value='xaxbxc')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='c'), Constant(value='x'), Constant(value=None), Constant(value='b'), Constant(value='x'), Constant(value=None), Constant(value='a'), Constant(value='x'), Constant(value=None), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?V1)\\b'), Constant(value='a b c')], keywords=[]), List(elts=[Constant(value=''), Constant(value='a'), Constant(value=' '), Constant(value='b'), Constant(value=' '), Constant(value='c'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?V1)\\m'), Constant(value='a b c')], keywords=[]), List(elts=[Constant(value=''), Constant(value='a '), Constant(value='b '), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?V1)\\M'), Constant(value='a b c')], keywords=[]), List(elts=[Constant(value='a'), Constant(value=' b'), Constant(value=' c'), Constant(value='')], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_qualified_re_split', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=':'), Constant(value=':a:b::c'), Constant(value=2)], keywords=[]), List(elts=[Constant(value=''), Constant(value='a'), Constant(value='b::c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=':'), Constant(value='a:b:c:d'), Constant(value=2)], keywords=[]), List(elts=[Constant(value='a'), Constant(value='b'), Constant(value='c:d')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(:)'), Constant(value=':a:b::c'), Constant(value=2)], keywords=[]), List(elts=[Constant(value=''), Constant(value=':'), Constant(value='a'), Constant(value=':'), Constant(value='b::c')], ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=7), Constant(value=0)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(:*)'), Constant(value=':a:b::c'), Constant(value=2)], keywords=[]), List(elts=[Constant(value=''), Constant(value=':'), Constant(value=''), Constant(value=''), Constant(value='a:b::c')], ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(:*)'), Constant(value=':a:b::c'), Constant(value=2)], keywords=[]), List(elts=[Constant(value=''), Constant(value=':'), Constant(value='a'), Constant(value=':'), Constant(value='b::c')], ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_re_findall', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=':+'), Constant(value='abc')], keywords=[]), List(elts=[], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=':+'), Constant(value='a:b::c:::d')], keywords=[]), List(elts=[Constant(value=':'), Constant(value='::'), Constant(value=':::')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(:+)'), Constant(value='a:b::c:::d')], keywords=[]), List(elts=[Constant(value=':'), Constant(value='::'), Constant(value=':::')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(:)(:*)'), Constant(value='a:b::c:::d')], keywords=[]), List(elts=[Tuple(elts=[Constant(value=':'), Constant(value='')], ctx=Load()), Tuple(elts=[Constant(value=':'), Constant(value=':')], ctx=Load()), Tuple(elts=[Constant(value=':'), Constant(value='::')], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\((?P<test>.{0,5}?TEST)\\)'), Constant(value='(MY TEST)')], keywords=[]), List(elts=[Constant(value='MY TEST')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\((?P<test>.{0,3}?TEST)\\)'), Constant(value='(MY TEST)')], keywords=[]), List(elts=[Constant(value='MY TEST')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\((?P<test>.{0,3}?T)\\)'), Constant(value='(MY T)')], keywords=[]), List(elts=[Constant(value='MY T')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[^a]{2}[A-Z]'), Constant(value='\n  S')], keywords=[]), List(elts=[Constant(value='  S')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[^a]{2,3}[A-Z]'), Constant(value='\n  S')], keywords=[]), List(elts=[Constant(value='\n  S')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[^a]{2,3}[A-Z]'), Constant(value='\n   S')], keywords=[]), List(elts=[Constant(value='   S')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='X(Y[^Y]+?){1,2}( |Q)+DEF'), Constant(value='XYABCYPPQ\nQ DEF')], keywords=[]), List(elts=[Tuple(elts=[Constant(value='YPPQ\n'), Constant(value=' ')], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(\\nTest(\\n+.+?){0,2}?)?\\n+End'), Constant(value='\nTest\nxyz\nxyz\nEnd')], keywords=[]), List(elts=[Tuple(elts=[Constant(value='\nTest\nxyz\nxyz'), Constant(value='\nxyz')], ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_117612', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(a|(b))'), Constant(value='aba')], keywords=[]), List(elts=[Tuple(elts=[Constant(value='a'), Constant(value='')], ctx=Load()), Tuple(elts=[Constant(value='b'), Constant(value='b')], ctx=Load()), Tuple(elts=[Constant(value='a'), Constant(value='')], ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_re_match', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a'), Constant(value='a')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)'), Constant(value='a')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='a'), Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)'), Constant(value='a')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)'), Constant(value='a')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)'), Constant(value='a')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=1), Constant(value=1)], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value='a')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='pat', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='((a)|(b))(c)?')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='a'), Constant(value='a'), Constant(value='a'), Constant(value=None), Constant(value=None)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='b')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='b'), Constant(value='b'), Constant(value=None), Constant(value='b'), Constant(value=None)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='ac')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='ac'), Constant(value='a'), Constant(value='a'), Constant(value=None), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='bc')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='bc'), Constant(value='b'), Constant(value=None), Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='bc')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='bc'), Constant(value='b'), Constant(value=None), Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)'), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='group', ctx=Load()), args=[Constant(value=0)], keywords=[]), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='group', ctx=Load()), args=[Constant(value=1)], keywords=[]), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='group', ctx=Load()), args=[Constant(value=1), Constant(value=1)], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value='a')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='pat', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?:(?P<a1>a)|(?P<b2>b))(?P<c3>c)?')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=1), Constant(value=2), Constant(value=3)], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value=None), Constant(value=None)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='b')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value='a1'), Constant(value='b2'), Constant(value='c3')], keywords=[]), Tuple(elts=[Constant(value=None), Constant(value='b'), Constant(value=None)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='ac')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=1), Constant(value='b2'), Constant(value=3)], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value=None), Constant(value='c')], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_re_groupref_exists', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\()?([^()]+)(?(1)\\))$'), Constant(value='(a)')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='(a)'), Constant(value='('), Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\()?([^()]+)(?(1)\\))$'), Constant(value='a')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='a'), Constant(value=None), Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\()?([^()]+)(?(1)\\))$'), Constant(value='a)')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\()?([^()]+)(?(1)\\))$'), Constant(value='(a')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(?:(a)|c)((?(1)b|d))$'), Constant(value='ab')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='ab'), Constant(value='a'), Constant(value='b')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(?:(a)|c)((?(1)b|d))$'), Constant(value='cd')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='cd'), Constant(value=None), Constant(value='d')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(?:(a)|c)((?(1)|d))$'), Constant(value='cd')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='cd'), Constant(value=None), Constant(value='d')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(?:(a)|c)((?(1)|d))$'), Constant(value='a')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='a'), Constant(value='a'), Constant(value='')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?P<g1>a)(?P<g2>b)?((?(g2)c|d))')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='abc')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='abc'), Constant(value='a'), Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='ad')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='ad'), Constant(value='a'), Constant(value=None), Constant(value='d')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='abd')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='ac')], keywords=[]), Constant(value=None)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_re_groupref', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\|)?([^()]+)\\1$'), Constant(value='|a|')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='|a|'), Constant(value='|'), Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\|)?([^()]+)\\1?$'), Constant(value='a')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='a'), Constant(value=None), Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\|)?([^()]+)\\1$'), Constant(value='a|')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\|)?([^()]+)\\1$'), Constant(value='|a')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(?:(a)|c)(\\1)$'), Constant(value='aa')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='aa'), Constant(value='a'), Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(?:(a)|c)(\\1)?$'), Constant(value='c')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='c'), Constant(value=None), Constant(value=None)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?i)(.{1,40}?),(.{1,40}?)(?:;)+(.{1,80}).{1,40}?\\3(\\ |;)+(.{1,80}?)\\1'), Constant(value='TEST, BEST; LEST ; Lest 123 Test, Best')], keywords=[]), List(elts=[Tuple(elts=[Constant(value='TEST'), Constant(value=' BEST'), Constant(value=' LEST'), Constant(value=' '), Constant(value='123 ')], ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_groupdict', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?P<first>first) (?P<second>second)'), Constant(value='first second')], keywords=[]), attr='groupdict', ctx=Load()), args=[], keywords=[]), Dict(keys=[Constant(value='first'), Constant(value='second')], values=[Constant(value='first'), Constant(value='second')])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_expand', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?P<first>first) (?P<second>second)'), Constant(value='first second')], keywords=[]), attr='expand', ctx=Load()), args=[Constant(value='\\2 \\1 \\g<second> \\g<first>')], keywords=[]), Constant(value='second first second first')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_repeat_minmax', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\w){1}$'), Constant(value='abc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\w){1}?$'), Constant(value='abc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\w){1,2}$'), Constant(value='abc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\w){1,2}?$'), Constant(value='abc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\w){3}$'), Constant(value='abc')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='c')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\w){1,3}$'), Constant(value='abc')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='c')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\w){1,4}$'), Constant(value='abc')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='c')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\w){3,4}?$'), Constant(value='abc')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='c')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\w){3}?$'), Constant(value='abc')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='c')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\w){1,3}?$'), Constant(value='abc')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='c')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\w){1,4}?$'), Constant(value='abc')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='c')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(\\w){3,4}?$'), Constant(value='abc')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='c')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^x{1}$'), Constant(value='xxx')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^x{1}?$'), Constant(value='xxx')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^x{1,2}$'), Constant(value='xxx')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^x{1,2}?$'), Constant(value='xxx')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^x{1}'), Constant(value='xxx')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='x')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^x{1}?'), Constant(value='xxx')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='x')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^x{0,1}'), Constant(value='xxx')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='x')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^x{0,1}?'), Constant(value='xxx')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^x{3}$'), Constant(value='xxx')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^x{1,3}$'), Constant(value='xxx')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^x{1,4}$'), Constant(value='xxx')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^x{3,4}?$'), Constant(value='xxx')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^x{3}?$'), Constant(value='xxx')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^x{1,3}?$'), Constant(value='xxx')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^x{1,4}?$'), Constant(value='xxx')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^x{3,4}?$'), Constant(value='xxx')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^x{}$'), Constant(value='xxx')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^x{}$'), Constant(value='x{}')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_getattr', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?i)(a)(b)')], keywords=[]), attr='pattern', ctx=Load()), Constant(value='(?i)(a)(b)')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?i)(a)(b)')], keywords=[]), attr='flags', ctx=Load()), BinOp(left=BinOp(left=Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='regex', ctx=Load()), attr='U', ctx=Load())), op=BitOr(), right=Attribute(value=Name(id='regex', ctx=Load()), attr='DEFAULT_VERSION', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value=b'(?i)(a)(b)')], keywords=[]), attr='flags', ctx=Load()), BinOp(left=BinOp(left=Attribute(value=Name(id='regex', ctx=Load()), attr='A', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load())), op=BitOr(), right=Attribute(value=Name(id='regex', ctx=Load()), attr='DEFAULT_VERSION', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?i)(a)(b)')], keywords=[]), attr='groups', ctx=Load()), Constant(value=2)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?i)(a)(b)')], keywords=[]), attr='groupindex', ctx=Load()), Dict(keys=[], values=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?i)(?P<first>a)(?P<other>b)')], keywords=[]), attr='groupindex', ctx=Load()), Dict(keys=[Constant(value='first'), Constant(value='other')], values=[Constant(value=1), Constant(value=2)])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)'), Constant(value='a')], keywords=[]), attr='pos', ctx=Load()), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)'), Constant(value='a')], keywords=[]), attr='endpos', ctx=Load()), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='b(c)'), Constant(value='abcdef')], keywords=[]), attr='pos', ctx=Load()), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='b(c)'), Constant(value='abcdef')], keywords=[]), attr='endpos', ctx=Load()), Constant(value=6)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='b(c)'), Constant(value='abcdef')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='b(c)'), Constant(value='abcdef')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=1)], keywords=[]), Tuple(elts=[Constant(value=2), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)'), Constant(value='a')], keywords=[]), attr='string', ctx=Load()), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)'), Constant(value='a')], keywords=[]), attr='regs', ctx=Load()), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)'), Constant(value='a')], keywords=[]), attr='re', ctx=Load())], keywords=[])], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='PATTERN_CLASS', ctx=Load())], keywords=[])), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='abc(?P<n>def)')], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='p', ctx=Load()), attr='groupindex', ctx=Load()), slice=Constant(value='n'), ctx=Store())], value=Constant(value=0)), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='p', ctx=Load()), attr='groupindex', ctx=Load()), slice=Constant(value='n'), ctx=Load()), Constant(value=1)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_special_escapes', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\b(b.)\\b'), Constant(value='abcd abc bcd bx')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='bx')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\B(b.)\\B'), Constant(value='abc bcd bc abxd')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='bx')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value=b'\\b(b.)\\b'), Constant(value=b'abcd abc bcd bx'), Attribute(value=Name(id='regex', ctx=Load()), attr='LOCALE', ctx=Load())], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value=b'bx')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value=b'\\B(b.)\\B'), Constant(value=b'abc bcd bc abxd'), Attribute(value=Name(id='regex', ctx=Load()), attr='LOCALE', ctx=Load())], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value=b'bx')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\b(b.)\\b'), Constant(value='abcd abc bcd bx'), Attribute(value=Name(id='regex', ctx=Load()), attr='UNICODE', ctx=Load())], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='bx')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\B(b.)\\B'), Constant(value='abc bcd bc abxd'), Attribute(value=Name(id='regex', ctx=Load()), attr='UNICODE', ctx=Load())], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='bx')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^abc$'), Constant(value='\nabc\n'), Attribute(value=Name(id='regex', ctx=Load()), attr='M', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='abc')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^\\Aabc\\Z$'), Constant(value='abc'), Attribute(value=Name(id='regex', ctx=Load()), attr='M', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='abc')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^\\Aabc\\Z$'), Constant(value='\nabc\n'), Attribute(value=Name(id='regex', ctx=Load()), attr='M', ctx=Load())], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value=b'\\b(b.)\\b'), Constant(value=b'abcd abc bcd bx')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value=b'bx')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value=b'\\B(b.)\\B'), Constant(value=b'abc bcd bc abxd')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value=b'bx')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value=b'^abc$'), Constant(value=b'\nabc\n'), Attribute(value=Name(id='regex', ctx=Load()), attr='M', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value=b'abc')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value=b'^\\Aabc\\Z$'), Constant(value=b'abc'), Attribute(value=Name(id='regex', ctx=Load()), attr='M', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value=b'abc')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value=b'^\\Aabc\\Z$'), Constant(value=b'\nabc\n'), Attribute(value=Name(id='regex', ctx=Load()), attr='M', ctx=Load())], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d\\D\\w\\W\\s\\S'), Constant(value='1aa! a')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='1aa! a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value=b'\\d\\D\\w\\W\\s\\S'), Constant(value=b'1aa! a'), Attribute(value=Name(id='regex', ctx=Load()), attr='LOCALE', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value=b'1aa! a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d\\D\\w\\W\\s\\S'), Constant(value='1aa! a'), Attribute(value=Name(id='regex', ctx=Load()), attr='UNICODE', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='1aa! a')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bigcharset', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='([\\u2222\\u2223])'), Constant(value='∢')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='∢')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='([\\u2222\\u2223])'), Constant(value='∢'), Attribute(value=Name(id='regex', ctx=Load()), attr='UNICODE', ctx=Load())], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='∢')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='.'), Constant(value='eèéêëēěė')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='UNICODE', ctx=Load()))])], keywords=[]), Constant(value='eèéêëēěė')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[e\\xe8\\xe9\\xea\\xeb\\u0113\\u011b\\u0117]'), Constant(value='eèéêëēěė')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='UNICODE', ctx=Load()))])], keywords=[]), Constant(value='eèéêëēěė')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='e|\\xe8|\\xe9|\\xea|\\xeb|\\u0113|\\u011b|\\u0117'), Constant(value='eèéêëēěė')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='UNICODE', ctx=Load()))])], keywords=[]), Constant(value='eèéêëēěė')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_anyall', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a.b'), Constant(value='a\nb'), Attribute(value=Name(id='regex', ctx=Load()), attr='DOTALL', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='a\nb')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a.*b'), Constant(value='a\n\nb'), Attribute(value=Name(id='regex', ctx=Load()), attr='DOTALL', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='a\n\nb')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_non_consuming', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a(?=\\s[^a]))'), Constant(value='a b')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a(?=\\s[^a]*))'), Constant(value='a b')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a(?=\\s[abc]))'), Constant(value='a b')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a(?=\\s[abc]*))'), Constant(value='a bc')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)(?=\\s\\1)'), Constant(value='a a')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)(?=\\s\\1*)'), Constant(value='a aa')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)(?=\\s(abc|a))'), Constant(value='a a')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a(?!\\s[^a]))'), Constant(value='a a')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a(?!\\s[abc]))'), Constant(value='a d')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)(?!\\s\\1)'), Constant(value='a b')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)(?!\\s(abc|a))'), Constant(value='a b')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='a')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_ignore_case', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='abc'), Constant(value='ABC'), Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='ABC')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'abc'), Constant(value=b'ABC'), Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value=b'ABC')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a\\s[^a]*)'), Constant(value='a bb'), Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load())], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='a bb')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a\\s[abc])'), Constant(value='a b'), Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load())], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='a b')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a\\s[abc]*)'), Constant(value='a bb'), Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load())], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='a bb')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='((a)\\s\\2)'), Constant(value='a a'), Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load())], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='a a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='((a)\\s\\2*)'), Constant(value='a aa'), Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load())], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='a aa')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='((a)\\s(abc|a))'), Constant(value='a a'), Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load())], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='a a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='((a)\\s(abc|a)*)'), Constant(value='a aa'), Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load())], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='a aa')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[Z-a]'), Constant(value='_')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?i)[Z-a]'), Constant(value='_')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?i)nao'), Constant(value='nAo')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?i)n\\xE3o'), Constant(value='nÃo')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?i)n\\xE3o'), Constant(value='NÃO')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?i)s'), Constant(value='ſ')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_case_folding', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)ss'), Constant(value='SS')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)SS'), Constant(value='ss')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)SS'), Constant(value='ß')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)\\N{LATIN SMALL LETTER SHARP S}'), Constant(value='SS')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)\\N{LATIN SMALL LIGATURE ST}'), Constant(value='ST')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)ST'), Constant(value='ﬆ')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)ST'), Constant(value='ﬅ')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)SST'), Constant(value='ßt')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)SST'), Constant(value='sﬅ')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)SST'), Constant(value='sﬆ')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)\\N{LATIN SMALL LIGATURE ST}'), Constant(value='SST')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)SST'), Constant(value='sﬆ')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)FFI'), Constant(value='ﬃ')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)FFI'), Constant(value='ﬀi')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)FFI'), Constant(value='fﬁ')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)\\N{LATIN SMALL LIGATURE FFI}'), Constant(value='FFI')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)\\N{LATIN SMALL LIGATURE FF}i'), Constant(value='FFI')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)f\\N{LATIN SMALL LIGATURE FI}'), Constant(value='FFI')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], keywords=[])), Assign(targets=[Name(id='sigma', ctx=Store())], value=Constant(value='Σσς')), For(target=Name(id='ch1', ctx=Store()), iter=Name(id='sigma', ctx=Load()), body=[For(target=Name(id='ch2', ctx=Store()), iter=Name(id='sigma', ctx=Load()), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='(?fi)'), op=Add(), right=Name(id='ch1', ctx=Load())), Name(id='ch2', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[], keywords=[]))], orelse=[])], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?iV1)ff'), Constant(value='ﬀﬁ')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?iV1)ff'), Constant(value='ﬁﬀ')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?iV1)fi'), Constant(value='ﬀﬁ')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?iV1)fi'), Constant(value='ﬁﬀ')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?iV1)fffi'), Constant(value='ﬀﬁ')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?iV1)f\\uFB03'), Constant(value='ﬀﬁ')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?iV1)ff'), Constant(value='ﬀﬁ')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?iV1)fi'), Constant(value='ﬀﬁ')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?iV1)fffi'), Constant(value='ﬀﬁ')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?iV1)f\\uFB03'), Constant(value='ﬀﬁ')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?iV1)f\\uFB01'), Constant(value='ﬀi')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?iV1)f\\uFB01'), Constant(value='ﬀi')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?iV0)\\m(?:word){e<=3}\\M(?<!\\m(?:word){e<=1}\\M)'), Constant(value='word word2 word word3 word word234 word23 word')], keywords=[]), List(elts=[Constant(value='word234'), Constant(value='word23')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?iV1)\\m(?:word){e<=3}\\M(?<!\\m(?:word){e<=1}\\M)'), Constant(value='word word2 word word3 word word234 word23 word')], keywords=[]), List(elts=[Constant(value='word234'), Constant(value='word23')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)a\\N{LATIN SMALL LIGATURE FFI}ne'), Constant(value='  affine  ')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=2), Constant(value=8)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)a(?:\\N{LATIN SMALL LIGATURE FFI}|x)ne'), Constant(value='  affine  ')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=2), Constant(value=8)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)a(?:\\N{LATIN SMALL LIGATURE FFI}|xy)ne'), Constant(value='  affine  ')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=2), Constant(value=8)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)a\\L<options>ne'), Constant(value='affine')], keywords=[keyword(arg='options', value=List(elts=[Constant(value='ﬃ')], ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)a\\L<options>ne'), Constant(value='aﬃne')], keywords=[keyword(arg='options', value=List(elts=[Constant(value='ffi')], ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=4)], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_category', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(\\s)'), Constant(value=' ')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value=' ')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_not_literal', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\s([^a])'), Constant(value=' b')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='b')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\s([^a]*)'), Constant(value=' bb')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='bb')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_search_coverage', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\s(b)'), Constant(value=' b')], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='b')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='a\\s'), Constant(value='a ')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='a ')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_re_escape', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Constant(value='')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[]), Name(id='p', ctx=Load())], keywords=[])), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=0), Constant(value=256)], keywords=[]), body=[AugAssign(target=Name(id='p', ctx=Store()), op=Add(), value=Call(func=Name(id='chr', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Call(func=Name(id='chr', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[])], keywords=[]), Call(func=Name(id='chr', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Call(func=Name(id='chr', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[])], keywords=[]), Call(func=Name(id='chr', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[])], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='pat', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=256)], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_re_escape_byte', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Constant(value=b'')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[]), Name(id='p', ctx=Load())], keywords=[])), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=0), Constant(value=256)], keywords=[]), body=[Assign(targets=[Name(id='b', ctx=Store())], value=Call(func=Name(id='bytes', ctx=Load()), args=[List(elts=[Name(id='i', ctx=Load())], ctx=Load())], keywords=[])), AugAssign(target=Name(id='p', ctx=Store()), op=Add(), value=Name(id='b', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Name(id='b', ctx=Load())], keywords=[]), Name(id='b', ctx=Load())], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Name(id='b', ctx=Load())], keywords=[]), Name(id='b', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='pat', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=256)], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_constants', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='regex', ctx=Load()), attr='IGNORECASE', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='regex', ctx=Load()), attr='L', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='regex', ctx=Load()), attr='LOCALE', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='regex', ctx=Load()), attr='M', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='regex', ctx=Load()), attr='MULTILINE', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='regex', ctx=Load()), attr='S', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='regex', ctx=Load()), attr='DOTALL', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='regex', ctx=Load()), attr='X', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='regex', ctx=Load()), attr='VERBOSE', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_flags', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='flag', ctx=Store()), iter=List(elts=[Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load()), Attribute(value=Name(id='regex', ctx=Load()), attr='M', ctx=Load()), Attribute(value=Name(id='regex', ctx=Load()), attr='X', ctx=Load()), Attribute(value=Name(id='regex', ctx=Load()), attr='S', ctx=Load()), Attribute(value=Name(id='regex', ctx=Load()), attr='L', ctx=Load())], ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='^pattern$'), Name(id='flag', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='PATTERN_CLASS', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_sre_character_literals', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='i', ctx=Store()), iter=List(elts=[Constant(value=0), Constant(value=8), Constant(value=16), Constant(value=32), Constant(value=64), Constant(value=127), Constant(value=128), Constant(value=255)], ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='\\%03o'), op=Mod(), right=Name(id='i', ctx=Load())), Call(func=Name(id='chr', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='\\%03o0'), op=Mod(), right=Name(id='i', ctx=Load())), BinOp(left=Call(func=Name(id='chr', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), op=Add(), right=Constant(value='0'))], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='\\%03o8'), op=Mod(), right=Name(id='i', ctx=Load())), BinOp(left=Call(func=Name(id='chr', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), op=Add(), right=Constant(value='8'))], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='\\x%02x'), op=Mod(), right=Name(id='i', ctx=Load())), Call(func=Name(id='chr', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='\\x%02x0'), op=Mod(), right=Name(id='i', ctx=Load())), BinOp(left=Call(func=Name(id='chr', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), op=Add(), right=Constant(value='0'))], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='\\x%02xz'), op=Mod(), right=Name(id='i', ctx=Load())), BinOp(left=Call(func=Name(id='chr', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), op=Add(), right=Constant(value='z'))], keywords=[])], keywords=[]), Constant(value=True)], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='INVALID_GROUP_REF', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\911'), Constant(value='')], keywords=[]))], keywords=[]))], decorator_list=[]), FunctionDef(name='test_sre_character_class_literals', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='i', ctx=Store()), iter=List(elts=[Constant(value=0), Constant(value=8), Constant(value=16), Constant(value=32), Constant(value=64), Constant(value=127), Constant(value=128), Constant(value=255)], ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='[\\%03o]'), op=Mod(), right=Name(id='i', ctx=Load())), Call(func=Name(id='chr', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='[\\%03o0]'), op=Mod(), right=Name(id='i', ctx=Load())), Call(func=Name(id='chr', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='[\\%03o8]'), op=Mod(), right=Name(id='i', ctx=Load())), Call(func=Name(id='chr', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='[\\x%02x]'), op=Mod(), right=Name(id='i', ctx=Load())), Call(func=Name(id='chr', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='[\\x%02x0]'), op=Mod(), right=Name(id='i', ctx=Load())), Call(func=Name(id='chr', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='[\\x%02xz]'), op=Mod(), right=Name(id='i', ctx=Load())), Call(func=Name(id='chr', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Constant(value=True)], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_OCTAL_ESCAPE', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[\\911]'), Constant(value='')], keywords=[]))], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_113254', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)|(b)'), Constant(value='b')], keywords=[]), attr='start', ctx=Load()), args=[Constant(value=1)], keywords=[]), UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)|(b)'), Constant(value='b')], keywords=[]), attr='end', ctx=Load()), args=[Constant(value=1)], keywords=[]), UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)|(b)'), Constant(value='b')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=1)], keywords=[]), Tuple(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_527371', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)?a'), Constant(value='a')], keywords=[]), attr='lastindex', ctx=Load()), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)(b)?b'), Constant(value='ab')], keywords=[]), attr='lastindex', ctx=Load()), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?P<a>a)(?P<b>b)?b'), Constant(value='ab')], keywords=[]), attr='lastgroup', ctx=Load()), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?P<a>a(b))'), Constant(value='ab')], keywords=[]), attr='lastgroup', ctx=Load()), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='((a))'), Constant(value='a')], keywords=[]), attr='lastindex', ctx=Load()), Constant(value=1)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_545855', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_SET', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='foo[a-')], keywords=[]))], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_418626', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='.*?c'), BinOp(left=BinOp(left=Constant(value=10000), op=Mult(), right=Constant(value='ab')), op=Add(), right=Constant(value='cd'))], keywords=[]), attr='end', ctx=Load()), args=[Constant(value=0)], keywords=[]), Constant(value=20001)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='.*?cd'), BinOp(left=BinOp(left=BinOp(left=BinOp(left=Constant(value=5000), op=Mult(), right=Constant(value='ab')), op=Add(), right=Constant(value='c')), op=Add(), right=BinOp(left=Constant(value=5000), op=Mult(), right=Constant(value='ab'))), op=Add(), right=Constant(value='cde'))], keywords=[]), attr='end', ctx=Load()), args=[Constant(value=0)], keywords=[]), Constant(value=20003)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='.*?cd'), BinOp(left=BinOp(left=Constant(value=20000), op=Mult(), right=Constant(value='abc')), op=Add(), right=Constant(value='de'))], keywords=[]), attr='end', ctx=Load()), args=[Constant(value=0)], keywords=[]), Constant(value=60001)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(a|b)*?c'), BinOp(left=BinOp(left=Constant(value=10000), op=Mult(), right=Constant(value='ab')), op=Add(), right=Constant(value='cd'))], keywords=[]), attr='end', ctx=Load()), args=[Constant(value=0)], keywords=[]), Constant(value=20001)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_612074', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='pat', ctx=Store())], value=BinOp(left=BinOp(left=Constant(value='['), op=Add(), right=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Constant(value='‹')], keywords=[])), op=Add(), right=Constant(value=']'))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[BoolOp(op=And(), values=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Name(id='pat', ctx=Load())], keywords=[]), Constant(value=1)]), Constant(value=1)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_stack_overflow', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(x)*'), BinOp(left=Constant(value=50000), op=Mult(), right=Constant(value='x'))], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='x')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(x)*y'), BinOp(left=BinOp(left=Constant(value=50000), op=Mult(), right=Constant(value='x')), op=Add(), right=Constant(value='y'))], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='x')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(x)*?y'), BinOp(left=BinOp(left=Constant(value=50000), op=Mult(), right=Constant(value='x')), op=Add(), right=Constant(value='y'))], keywords=[]), slice=Constant(value=1), ctx=Load()), Constant(value='x')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_scanner', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='s_ident', args=arguments(posonlyargs=[], args=[arg(arg='scanner'), arg(arg='token')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Name(id='token', ctx=Load()))], decorator_list=[]), FunctionDef(name='s_operator', args=arguments(posonlyargs=[], args=[arg(arg='scanner'), arg(arg='token')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BinOp(left=Constant(value='op%s'), op=Mod(), right=Name(id='token', ctx=Load())))], decorator_list=[]), FunctionDef(name='s_float', args=arguments(posonlyargs=[], args=[arg(arg='scanner'), arg(arg='token')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='float', ctx=Load()), args=[Name(id='token', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='s_int', args=arguments(posonlyargs=[], args=[arg(arg='scanner'), arg(arg='token')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='int', ctx=Load()), args=[Name(id='token', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='scanner', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='Scanner', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='[a-zA-Z_]\\w*'), Name(id='s_ident', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='\\d+\\.\\d*'), Name(id='s_float', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='\\d+'), Name(id='s_int', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='=|\\+|-|\\*|/'), Name(id='s_operator', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='\\s+'), Constant(value=None)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='scanner', ctx=Load()), attr='scanner', ctx=Load()), attr='scanner', ctx=Load()), args=[Constant(value='')], keywords=[]), attr='pattern', ctx=Load())], keywords=[])], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='PATTERN_CLASS', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='scanner', ctx=Load()), attr='scan', ctx=Load()), args=[Constant(value='sum = 3*foo + 312.50 + bar')], keywords=[]), Tuple(elts=[List(elts=[Constant(value='sum'), Constant(value='op='), Constant(value=3), Constant(value='op*'), Constant(value='foo'), Constant(value='op+'), Constant(value=312.5), Constant(value='op+'), Constant(value='bar')], ctx=Load()), Constant(value='')], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_448951', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='op', ctx=Store()), iter=Tuple(elts=[Constant(value=''), Constant(value='?'), Constant(value='*')], ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='((.%s):)?z'), op=Mod(), right=Name(id='op', ctx=Load())), Constant(value='z')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='z'), Constant(value=None), Constant(value=None)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='((.%s):)?z'), op=Mod(), right=Name(id='op', ctx=Load())), Constant(value='a:z')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='a:z'), Constant(value='a:'), Constant(value='a')], ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_bug_725106', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^((a)|b)*'), Constant(value='abc')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='ab'), Constant(value='b'), Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(([ab])|c)*'), Constant(value='abc')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='abc'), Constant(value='c'), Constant(value='b')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^((d)|[ab])*'), Constant(value='abc')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='ab'), Constant(value='b'), Constant(value=None)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^((a)c|[ab])*'), Constant(value='abc')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='ab'), Constant(value='b'), Constant(value=None)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^((a)|b)*?c'), Constant(value='abc')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='abc'), Constant(value='b'), Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(([ab])|c)*?d'), Constant(value='abcd')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='abcd'), Constant(value='c'), Constant(value='b')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^((d)|[ab])*?c'), Constant(value='abc')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='abc'), Constant(value='b'), Constant(value=None)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^((a)c|[ab])*?c'), Constant(value='abc')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='abc'), Constant(value='b'), Constant(value=None)], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_725149', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)(?:(?=(b)*)c)*'), Constant(value='abb')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='a'), Constant(value='a'), Constant(value=None)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)((?!(b)*))*'), Constant(value='abb')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='a'), Constant(value='a'), Constant(value=None), Constant(value=None)], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_764548', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[ClassDef(name='my_unicode', bases=[Name(id='str', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), Assign(targets=[Name(id='pat', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Call(func=Name(id='my_unicode', ctx=Load()), args=[Constant(value='abc')], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='xyz')], keywords=[]), Constant(value=None)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_finditer', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='it', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value=':+'), Constant(value='a:b::c:::d')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='item', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='item', ctx=Store()), iter=Name(id='it', ctx=Load()), ifs=[], is_async=0)]), List(elts=[Constant(value=':'), Constant(value='::'), Constant(value=':::')], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_926075', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='bug_926075')], keywords=[]), ops=[Is()], comparators=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value=b'bug_926075')], keywords=[])]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_bug_931848', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='pattern', ctx=Store())], value=Constant(value='[.。．｡]')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Name(id='pattern', ctx=Load())], keywords=[]), attr='split', ctx=Load()), args=[Constant(value='a.b.c')], keywords=[]), List(elts=[Constant(value='a'), Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_581080', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='it', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='\\s'), Constant(value='a b')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='it', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='StopIteration', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='next', ctx=Load()), args=[Name(id='it', ctx=Load())], keywords=[]))], keywords=[])), Assign(targets=[Name(id='scanner', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='\\s')], keywords=[]), attr='scanner', ctx=Load()), args=[Constant(value='a b')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='scanner', ctx=Load()), attr='search', ctx=Load()), args=[], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='scanner', ctx=Load()), attr='search', ctx=Load()), args=[], keywords=[]), Constant(value=None)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_817234', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='it', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='.*'), Constant(value='asdf')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='it', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=4)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='it', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=4), Constant(value=4)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='StopIteration', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='next', ctx=Load()), args=[Name(id='it', ctx=Load())], keywords=[]))], keywords=[]))], decorator_list=[]), FunctionDef(name='test_empty_array', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Import(names=[alias(name='array')]), For(target=Name(id='typecode', ctx=Store()), iter=Constant(value='bBuhHiIlLfd'), body=[Assign(targets=[Name(id='a', ctx=Store())], value=Call(func=Attribute(value=Name(id='array', ctx=Load()), attr='array', ctx=Load()), args=[Name(id='typecode', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value=b'bla')], keywords=[]), attr='match', ctx=Load()), args=[Name(id='a', ctx=Load())], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value=b'')], keywords=[]), attr='match', ctx=Load()), args=[Name(id='a', ctx=Load())], keywords=[]), slice=Slice(lower=Constant(value=1)), ctx=Load()), Tuple(elts=[], ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_inline_flags', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='upper_char', ctx=Store())], value=Call(func=Name(id='chr', ctx=Load()), args=[Constant(value=7840)], keywords=[])), Assign(targets=[Name(id='lower_char', ctx=Store())], value=Call(func=Name(id='chr', ctx=Load()), args=[Constant(value=7841)], keywords=[])), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Name(id='upper_char', ctx=Load()), BinOp(left=Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='regex', ctx=Load()), attr='U', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='lower_char', ctx=Load())], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Name(id='lower_char', ctx=Load()), BinOp(left=Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='regex', ctx=Load()), attr='U', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='upper_char', ctx=Load())], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[BinOp(left=Constant(value='(?i)'), op=Add(), right=Name(id='upper_char', ctx=Load())), Attribute(value=Name(id='regex', ctx=Load()), attr='U', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='lower_char', ctx=Load())], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[BinOp(left=Constant(value='(?i)'), op=Add(), right=Name(id='lower_char', ctx=Load())), Attribute(value=Name(id='regex', ctx=Load()), attr='U', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='upper_char', ctx=Load())], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[BinOp(left=Constant(value='(?iu)'), op=Add(), right=Name(id='upper_char', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='lower_char', ctx=Load())], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[BinOp(left=Constant(value='(?iu)'), op=Add(), right=Name(id='lower_char', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='upper_char', ctx=Load())], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?i)a'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a(?i)'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?iV1)a'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a(?iV1)'), Constant(value='A')], keywords=[]), Constant(value=None)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_dollar_matches_twice', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='pattern', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='$')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pattern', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='#'), Constant(value='a\nb\n')], keywords=[]), Constant(value='a\nb#\n#')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pattern', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='#'), Constant(value='a\nb\nc')], keywords=[]), Constant(value='a\nb\nc#')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pattern', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='#'), Constant(value='\n')], keywords=[]), Constant(value='#\n#')], keywords=[])), Assign(targets=[Name(id='pattern', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='$'), Attribute(value=Name(id='regex', ctx=Load()), attr='MULTILINE', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pattern', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='#'), Constant(value='a\nb\n')], keywords=[]), Constant(value='a#\nb#\n#')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pattern', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='#'), Constant(value='a\nb\nc')], keywords=[]), Constant(value='a#\nb#\nc#')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pattern', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='#'), Constant(value='\n')], keywords=[]), Constant(value='#\n#')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bytes_str_mixing', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='pat', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='.')], keywords=[])), Assign(targets=[Name(id='bpat', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value=b'.')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='TypeError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='STR_PAT_ON_BYTES', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'b')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='TypeError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BYTES_PAT_ON_STR', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='bpat', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='b')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='TypeError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='STR_PAT_BYTES_TEMPL', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value=b'b'), Constant(value='c')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='TypeError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='STR_PAT_ON_BYTES', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='b'), Constant(value=b'c')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='TypeError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='STR_PAT_ON_BYTES', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value=b'b'), Constant(value=b'c')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='TypeError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BYTES_PAT_ON_STR', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='bpat', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value=b'b'), Constant(value='c')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='TypeError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BYTES_PAT_STR_TEMPL', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='bpat', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='b'), Constant(value=b'c')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='TypeError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BYTES_PAT_ON_STR', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='bpat', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='b'), Constant(value='c')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BYTES_PAT_UNI_FLAG', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value=b'\\w'), Attribute(value=Name(id='regex', ctx=Load()), attr='UNICODE', ctx=Load())], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BYTES_PAT_UNI_FLAG', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value=b'(?u)\\w')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='MIXED_FLAGS', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='\\w'), BinOp(left=Attribute(value=Name(id='regex', ctx=Load()), attr='UNICODE', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='regex', ctx=Load()), attr='ASCII', ctx=Load()))], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='MIXED_FLAGS', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?u)\\w'), Attribute(value=Name(id='regex', ctx=Load()), attr='ASCII', ctx=Load())], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='MIXED_FLAGS', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?a)\\w'), Attribute(value=Name(id='regex', ctx=Load()), attr='UNICODE', ctx=Load())], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='MIXED_FLAGS', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?au)\\w')], keywords=[]))], keywords=[]))], decorator_list=[]), FunctionDef(name='test_ascii_and_unicode_flag', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='flags', ctx=Store()), iter=Tuple(elts=[Constant(value=0), Attribute(value=Name(id='regex', ctx=Load()), attr='UNICODE', ctx=Load())], ctx=Load()), body=[Assign(targets=[Name(id='pat', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='À'), BinOp(left=Name(id='flags', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='regex', ctx=Load()), attr='IGNORECASE', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='à')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Assign(targets=[Name(id='pat', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='\\w'), Name(id='flags', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='à')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[]))], orelse=[]), Assign(targets=[Name(id='pat', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='À'), BinOp(left=Attribute(value=Name(id='regex', ctx=Load()), attr='ASCII', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='regex', ctx=Load()), attr='IGNORECASE', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='à')], keywords=[]), Constant(value=None)], keywords=[])), Assign(targets=[Name(id='pat', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?a)À'), Attribute(value=Name(id='regex', ctx=Load()), attr='IGNORECASE', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='à')], keywords=[]), Constant(value=None)], keywords=[])), Assign(targets=[Name(id='pat', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='\\w'), Attribute(value=Name(id='regex', ctx=Load()), attr='ASCII', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='à')], keywords=[]), Constant(value=None)], keywords=[])), Assign(targets=[Name(id='pat', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?a)\\w')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='à')], keywords=[]), Constant(value=None)], keywords=[])), For(target=Name(id='flags', ctx=Store()), iter=Tuple(elts=[Constant(value=0), Attribute(value=Name(id='regex', ctx=Load()), attr='ASCII', ctx=Load())], ctx=Load()), body=[Assign(targets=[Name(id='pat', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value=b'\xc0'), BinOp(left=Name(id='flags', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='regex', ctx=Load()), attr='IGNORECASE', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'\xe0')], keywords=[]), Constant(value=None)], keywords=[])), Assign(targets=[Name(id='pat', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value=b'\\w')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'\xe0')], keywords=[]), Constant(value=None)], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='MIXED_FLAGS', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?au)\\w')], keywords=[]))], keywords=[]))], decorator_list=[]), FunctionDef(name='test_subscripting_match', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?<a>\\w)'), Constant(value='xy')], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='m', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Constant(value='Failed: expected match but returned None')], keywords=[]))], orelse=[If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Name(id='m', ctx=Load())), Compare(left=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[NotEq()], comparators=[Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='group', ctx=Load()), args=[Constant(value=0)], keywords=[])]), Compare(left=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=1), ctx=Load()), ops=[NotEq()], comparators=[Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='group', ctx=Load()), args=[Constant(value=1)], keywords=[])])]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Constant(value='Failed')], keywords=[]))], orelse=[])]), If(test=UnaryOp(op=Not(), operand=Name(id='m', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Constant(value='Failed: expected match but returned None')], keywords=[]))], orelse=[If(test=Compare(left=Subscript(value=Name(id='m', ctx=Load()), slice=Slice(), ctx=Load()), ops=[NotEq()], comparators=[Tuple(elts=[Constant(value='x'), Constant(value='x')], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Failed: expected "(\'x\', \'x\')" but got {} instead'), attr='format', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Subscript(value=Name(id='m', ctx=Load()), slice=Slice(), ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[])])], decorator_list=[]), FunctionDef(name='test_new_named_groups', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='m0', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?P<a>\\w)'), Constant(value='x')], keywords=[])), Assign(targets=[Name(id='m1', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?<a>\\w)'), Constant(value='x')], keywords=[])), If(test=UnaryOp(op=Not(), operand=BoolOp(op=And(), values=[Name(id='m0', ctx=Load()), Name(id='m1', ctx=Load()), Compare(left=Subscript(value=Name(id='m0', ctx=Load()), slice=Slice(), ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Name(id='m1', ctx=Load()), slice=Slice(), ctx=Load())])])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Constant(value='Failed')], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_properties', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(?ai)\xc0'), Constant(value=b'\xe0')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(?ai)\\xC0'), Constant(value=b'\xe0')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(?a)\\w'), Constant(value=b'\xe0')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\w'), Constant(value='à')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(?L)\\d'), Constant(value=b'0')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(?L)\\s'), Constant(value=b' ')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(?L)\\w'), Constant(value=b'a')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(?L)\\d'), Constant(value=b'?')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(?L)\\s'), Constant(value=b'?')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(?L)\\w'), Constant(value=b'?')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(?L)\\D'), Constant(value=b'0')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(?L)\\S'), Constant(value=b' ')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(?L)\\W'), Constant(value=b'a')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(?L)\\D'), Constant(value=b'?')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(?L)\\S'), Constant(value=b'?')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(?L)\\W'), Constant(value=b'?')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\p{Cyrillic}'), Constant(value='А')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?i)\\p{Cyrillic}'), Constant(value='А')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\p{IsCyrillic}'), Constant(value='А')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\p{Script=Cyrillic}'), Constant(value='А')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\p{InCyrillic}'), Constant(value='А')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\p{Block=Cyrillic}'), Constant(value='А')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[[:Cyrillic:]]'), Constant(value='А')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[[:IsCyrillic:]]'), Constant(value='А')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[[:Script=Cyrillic:]]'), Constant(value='А')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[[:InCyrillic:]]'), Constant(value='А')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[[:Block=Cyrillic:]]'), Constant(value='А')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\P{Cyrillic}'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\P{IsCyrillic}'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\P{Script=Cyrillic}'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\P{InCyrillic}'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\P{Block=Cyrillic}'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\p{^Cyrillic}'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\p{^IsCyrillic}'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\p{^Script=Cyrillic}'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\p{^InCyrillic}'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\p{^Block=Cyrillic}'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[[:^Cyrillic:]]'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[[:^IsCyrillic:]]'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[[:^Script=Cyrillic:]]'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[[:^InCyrillic:]]'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[[:^Block=Cyrillic:]]'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\d'), Constant(value='0')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\s'), Constant(value=' ')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\w'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\d'), Constant(value='?')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\s'), Constant(value='?')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\w'), Constant(value='?')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\D'), Constant(value='0')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\S'), Constant(value=' ')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\W'), Constant(value='A')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\D'), Constant(value='?')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\S'), Constant(value='?')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\W'), Constant(value='?')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\p{L}'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\p{L}'), Constant(value='a')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\p{Lu}'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\p{Ll}'), Constant(value='a')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?i)a'), Constant(value='a')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?i)a'), Constant(value='A')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\w'), Constant(value='0')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\w'), Constant(value='a')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\w'), Constant(value='_')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\X'), Constant(value='à')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\X'), Constant(value='à')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\X'), Constant(value='aààeéé')], keywords=[]), List(elts=[Constant(value='a'), Constant(value='à'), Constant(value='à'), Constant(value='e'), Constant(value='é'), Constant(value='é')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\X{3}'), Constant(value='aààeéé')], keywords=[]), List(elts=[Constant(value='aàà'), Constant(value='eéé')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\X'), Constant(value='\r\r\ńÁ')], keywords=[]), List(elts=[Constant(value='\r'), Constant(value='\r\n'), Constant(value='́'), Constant(value='Á')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\p{Ll}'), Constant(value='a')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Assign(targets=[Name(id='chars_u', ctx=Store())], value=Constant(value='-09AZaz_Γγ')), Assign(targets=[Name(id='chars_b', ctx=Store())], value=Constant(value=b'-09AZaz_')), Assign(targets=[Name(id='word_set', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Ll Lm Lo Lt Lu Mc Me Mn Nd Nl No Pc'), attr='split', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='tests', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='\\w'), Name(id='chars_u', ctx=Load()), Constant(value='09AZaz_Γγ')], ctx=Load()), Tuple(elts=[Constant(value='[[:word:]]'), Name(id='chars_u', ctx=Load()), Constant(value='09AZaz_Γγ')], ctx=Load()), Tuple(elts=[Constant(value='\\W'), Name(id='chars_u', ctx=Load()), Constant(value='-')], ctx=Load()), Tuple(elts=[Constant(value='[[:^word:]]'), Name(id='chars_u', ctx=Load()), Constant(value='-')], ctx=Load()), Tuple(elts=[Constant(value='\\d'), Name(id='chars_u', ctx=Load()), Constant(value='09')], ctx=Load()), Tuple(elts=[Constant(value='[[:digit:]]'), Name(id='chars_u', ctx=Load()), Constant(value='09')], ctx=Load()), Tuple(elts=[Constant(value='\\D'), Name(id='chars_u', ctx=Load()), Constant(value='-AZaz_Γγ')], ctx=Load()), Tuple(elts=[Constant(value='[[:^digit:]]'), Name(id='chars_u', ctx=Load()), Constant(value='-AZaz_Γγ')], ctx=Load()), Tuple(elts=[Constant(value='[[:alpha:]]'), Name(id='chars_u', ctx=Load()), Constant(value='AZazΓγ')], ctx=Load()), Tuple(elts=[Constant(value='[[:^alpha:]]'), Name(id='chars_u', ctx=Load()), Constant(value='-09_')], ctx=Load()), Tuple(elts=[Constant(value='[[:alnum:]]'), Name(id='chars_u', ctx=Load()), Constant(value='09AZazΓγ')], ctx=Load()), Tuple(elts=[Constant(value='[[:^alnum:]]'), Name(id='chars_u', ctx=Load()), Constant(value='-_')], ctx=Load()), Tuple(elts=[Constant(value='[[:xdigit:]]'), Name(id='chars_u', ctx=Load()), Constant(value='09Aa')], ctx=Load()), Tuple(elts=[Constant(value='[[:^xdigit:]]'), Name(id='chars_u', ctx=Load()), Constant(value='-Zz_Γγ')], ctx=Load()), Tuple(elts=[Constant(value='\\p{InBasicLatin}'), Constant(value='aá'), Constant(value='a')], ctx=Load()), Tuple(elts=[Constant(value='\\P{InBasicLatin}'), Constant(value='aá'), Constant(value='á')], ctx=Load()), Tuple(elts=[Constant(value='(?i)\\p{InBasicLatin}'), Constant(value='aá'), Constant(value='a')], ctx=Load()), Tuple(elts=[Constant(value='(?i)\\P{InBasicLatin}'), Constant(value='aá'), Constant(value='á')], ctx=Load()), Tuple(elts=[Constant(value=b'(?L)\\w'), Name(id='chars_b', ctx=Load()), Constant(value=b'09AZaz_')], ctx=Load()), Tuple(elts=[Constant(value=b'(?L)[[:word:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'09AZaz_')], ctx=Load()), Tuple(elts=[Constant(value=b'(?L)\\W'), Name(id='chars_b', ctx=Load()), Constant(value=b'-')], ctx=Load()), Tuple(elts=[Constant(value=b'(?L)[[:^word:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'-')], ctx=Load()), Tuple(elts=[Constant(value=b'(?L)\\d'), Name(id='chars_b', ctx=Load()), Constant(value=b'09')], ctx=Load()), Tuple(elts=[Constant(value=b'(?L)[[:digit:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'09')], ctx=Load()), Tuple(elts=[Constant(value=b'(?L)\\D'), Name(id='chars_b', ctx=Load()), Constant(value=b'-AZaz_')], ctx=Load()), Tuple(elts=[Constant(value=b'(?L)[[:^digit:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'-AZaz_')], ctx=Load()), Tuple(elts=[Constant(value=b'(?L)[[:alpha:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'AZaz')], ctx=Load()), Tuple(elts=[Constant(value=b'(?L)[[:^alpha:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'-09_')], ctx=Load()), Tuple(elts=[Constant(value=b'(?L)[[:alnum:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'09AZaz')], ctx=Load()), Tuple(elts=[Constant(value=b'(?L)[[:^alnum:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'-_')], ctx=Load()), Tuple(elts=[Constant(value=b'(?L)[[:xdigit:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'09Aa')], ctx=Load()), Tuple(elts=[Constant(value=b'(?L)[[:^xdigit:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'-Zz_')], ctx=Load()), Tuple(elts=[Constant(value=b'(?a)\\w'), Name(id='chars_b', ctx=Load()), Constant(value=b'09AZaz_')], ctx=Load()), Tuple(elts=[Constant(value=b'(?a)[[:word:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'09AZaz_')], ctx=Load()), Tuple(elts=[Constant(value=b'(?a)\\W'), Name(id='chars_b', ctx=Load()), Constant(value=b'-')], ctx=Load()), Tuple(elts=[Constant(value=b'(?a)[[:^word:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'-')], ctx=Load()), Tuple(elts=[Constant(value=b'(?a)\\d'), Name(id='chars_b', ctx=Load()), Constant(value=b'09')], ctx=Load()), Tuple(elts=[Constant(value=b'(?a)[[:digit:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'09')], ctx=Load()), Tuple(elts=[Constant(value=b'(?a)\\D'), Name(id='chars_b', ctx=Load()), Constant(value=b'-AZaz_')], ctx=Load()), Tuple(elts=[Constant(value=b'(?a)[[:^digit:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'-AZaz_')], ctx=Load()), Tuple(elts=[Constant(value=b'(?a)[[:alpha:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'AZaz')], ctx=Load()), Tuple(elts=[Constant(value=b'(?a)[[:^alpha:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'-09_')], ctx=Load()), Tuple(elts=[Constant(value=b'(?a)[[:alnum:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'09AZaz')], ctx=Load()), Tuple(elts=[Constant(value=b'(?a)[[:^alnum:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'-_')], ctx=Load()), Tuple(elts=[Constant(value=b'(?a)[[:xdigit:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'09Aa')], ctx=Load()), Tuple(elts=[Constant(value=b'(?a)[[:^xdigit:]]'), Name(id='chars_b', ctx=Load()), Constant(value=b'-Zz_')], ctx=Load())], ctx=Load())), For(target=Tuple(elts=[Name(id='pattern', ctx=Store()), Name(id='chars', ctx=Store()), Name(id='expected', ctx=Store())], ctx=Store()), iter=Name(id='tests', ctx=Load()), body=[Try(body=[If(test=Compare(left=Call(func=Attribute(value=Subscript(value=Name(id='chars', ctx=Load()), slice=Slice(upper=Constant(value=0)), ctx=Load()), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Name(id='pattern', ctx=Load()), Name(id='chars', ctx=Load())], keywords=[])], keywords=[]), ops=[NotEq()], comparators=[Name(id='expected', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Failed: {}'), attr='format', ctx=Load()), args=[Name(id='pattern', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Failed: {} raised {}'), attr='format', ctx=Load()), args=[Name(id='pattern', ctx=Load()), Call(func=Name(id='ascii', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\p{NumericValue=0}'), Constant(value='0')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\p{NumericValue=1/2}'), Constant(value='½')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\p{NumericValue=0.5}'), Constant(value='½')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_word_class', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\w+'), Constant(value=' हिन्दी,')], keywords=[]), List(elts=[Constant(value='हिन्दी')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\W+'), Constant(value=' हिन्दी,')], keywords=[]), List(elts=[Constant(value=' '), Constant(value=',')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?V1)\\b'), Constant(value=' हिन्दी,')], keywords=[]), List(elts=[Constant(value=' '), Constant(value='हिन्दी'), Constant(value=',')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?V1)\\B'), Constant(value=' हिन्दी,')], keywords=[]), List(elts=[Constant(value=''), Constant(value=' ह'), Constant(value='ि'), Constant(value='न'), Constant(value='्'), Constant(value='द'), Constant(value='ी,'), Constant(value='')], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_search_anchor', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\G\\w{2}'), Constant(value='abcd ef')], keywords=[]), List(elts=[Constant(value='ab'), Constant(value='cd')], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_search_reverse', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r).'), Constant(value='abc')], keywords=[]), List(elts=[Constant(value='c'), Constant(value='b'), Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r).'), Constant(value='abc')], keywords=[keyword(arg='overlapped', value=Constant(value=True))]), List(elts=[Constant(value='c'), Constant(value='b'), Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r)..'), Constant(value='abcde')], keywords=[]), List(elts=[Constant(value='de'), Constant(value='bc')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r)..'), Constant(value='abcde')], keywords=[keyword(arg='overlapped', value=Constant(value=True))]), List(elts=[Constant(value='de'), Constant(value='cd'), Constant(value='bc'), Constant(value='ab')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r)(.)(-)(.)'), Constant(value='a-b-c')], keywords=[keyword(arg='overlapped', value=Constant(value=True))]), List(elts=[Tuple(elts=[Constant(value='b'), Constant(value='-'), Constant(value='c')], ctx=Load()), Tuple(elts=[Constant(value='a'), Constant(value='-'), Constant(value='b')], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?r).'), Constant(value='abc')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='c'), Constant(value='b'), Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?r)..'), Constant(value='abcde')], keywords=[keyword(arg='overlapped', value=Constant(value=True))]), ifs=[], is_async=0)]), List(elts=[Constant(value='de'), Constant(value='cd'), Constant(value='bc'), Constant(value='ab')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?r).'), Constant(value='abc')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='c'), Constant(value='b'), Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?r)..'), Constant(value='abcde')], keywords=[keyword(arg='overlapped', value=Constant(value=True))]), ifs=[], is_async=0)]), List(elts=[Constant(value='de'), Constant(value='cd'), Constant(value='bc'), Constant(value='ab')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='^|\\w+'), Constant(value='foo bar')], keywords=[]), List(elts=[Constant(value=''), Constant(value='foo'), Constant(value='bar')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)^|\\w+'), Constant(value='foo bar')], keywords=[]), List(elts=[Constant(value=''), Constant(value='foo'), Constant(value='bar')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r)^|\\w+'), Constant(value='foo bar')], keywords=[]), List(elts=[Constant(value='bar'), Constant(value='foo'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?rV1)^|\\w+'), Constant(value='foo bar')], keywords=[]), List(elts=[Constant(value='bar'), Constant(value='foo'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='^|\\w+'), Constant(value='foo bar')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value=''), Constant(value='foo'), Constant(value='bar')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?V1)^|\\w+'), Constant(value='foo bar')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value=''), Constant(value='foo'), Constant(value='bar')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?r)^|\\w+'), Constant(value='foo bar')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='bar'), Constant(value='foo'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?rV1)^|\\w+'), Constant(value='foo bar')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='bar'), Constant(value='foo'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\G\\w{2}'), Constant(value='abcd ef')], keywords=[]), List(elts=[Constant(value='ab'), Constant(value='cd')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='.{2}(?<=\\G.*)'), Constant(value='abcd')], keywords=[]), List(elts=[Constant(value='ab'), Constant(value='cd')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r)\\G\\w{2}'), Constant(value='abcd ef')], keywords=[]), List(elts=[], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r)\\w{2}\\G'), Constant(value='abcd ef')], keywords=[]), List(elts=[Constant(value='ef')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='q*'), Constant(value='qqwe')], keywords=[]), List(elts=[Constant(value='qq'), Constant(value=''), Constant(value=''), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)q*'), Constant(value='qqwe')], keywords=[]), List(elts=[Constant(value='qq'), Constant(value=''), Constant(value=''), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r)q*'), Constant(value='qqwe')], keywords=[]), List(elts=[Constant(value=''), Constant(value=''), Constant(value='qq'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?rV1)q*'), Constant(value='qqwe')], keywords=[]), List(elts=[Constant(value=''), Constant(value=''), Constant(value='qq'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='.'), Constant(value='abcd')], keywords=[keyword(arg='pos', value=Constant(value=1)), keyword(arg='endpos', value=Constant(value=3))]), List(elts=[Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='.'), Constant(value='abcd')], keywords=[keyword(arg='pos', value=Constant(value=1)), keyword(arg='endpos', value=UnaryOp(op=USub(), operand=Constant(value=1)))]), List(elts=[Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='.'), Constant(value='abcd')], keywords=[keyword(arg='pos', value=Constant(value=1)), keyword(arg='endpos', value=Constant(value=3))]), ifs=[], is_async=0)]), List(elts=[Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='.'), Constant(value='abcd')], keywords=[keyword(arg='pos', value=Constant(value=1)), keyword(arg='endpos', value=UnaryOp(op=USub(), operand=Constant(value=1)))]), ifs=[], is_async=0)]), List(elts=[Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?r).'), Constant(value='abcd')], keywords=[keyword(arg='pos', value=Constant(value=1)), keyword(arg='endpos', value=Constant(value=3))]), ifs=[], is_async=0)]), List(elts=[Constant(value='c'), Constant(value='b')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?r).'), Constant(value='abcd')], keywords=[keyword(arg='pos', value=Constant(value=1)), keyword(arg='endpos', value=UnaryOp(op=USub(), operand=Constant(value=1)))]), ifs=[], is_async=0)]), List(elts=[Constant(value='c'), Constant(value='b')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r).'), Constant(value='abcd')], keywords=[keyword(arg='pos', value=Constant(value=1)), keyword(arg='endpos', value=Constant(value=3))]), List(elts=[Constant(value='c'), Constant(value='b')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r).'), Constant(value='abcd')], keywords=[keyword(arg='pos', value=Constant(value=1)), keyword(arg='endpos', value=UnaryOp(op=USub(), operand=Constant(value=1)))]), List(elts=[Constant(value='c'), Constant(value='b')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[ab]'), Constant(value='aB'), Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load())], keywords=[]), List(elts=[Constant(value='a'), Constant(value='B')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r)[ab]'), Constant(value='aB'), Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load())], keywords=[]), List(elts=[Constant(value='B'), Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r).{2}'), Constant(value='abc')], keywords=[]), List(elts=[Constant(value='bc')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r).{2}'), Constant(value='abc')], keywords=[keyword(arg='overlapped', value=Constant(value=True))]), List(elts=[Constant(value='bc'), Constant(value='ab')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(\\w+) (\\w+)'), Constant(value='first second third fourth fifth')], keywords=[]), List(elts=[Tuple(elts=[Constant(value='first'), Constant(value='second')], ctx=Load()), Tuple(elts=[Constant(value='third'), Constant(value='fourth')], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r)(\\w+) (\\w+)'), Constant(value='first second third fourth fifth')], keywords=[]), List(elts=[Tuple(elts=[Constant(value='fourth'), Constant(value='fifth')], ctx=Load()), Tuple(elts=[Constant(value='second'), Constant(value='third')], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?r).{2}'), Constant(value='abc')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='bc')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?r).{2}'), Constant(value='abc')], keywords=[keyword(arg='overlapped', value=Constant(value=True))]), ifs=[], is_async=0)]), List(elts=[Constant(value='bc'), Constant(value='ab')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(\\w+) (\\w+)'), Constant(value='first second third fourth fifth')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='first second'), Constant(value='third fourth')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?r)(\\w+) (\\w+)'), Constant(value='first second third fourth fifth')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='fourth fifth'), Constant(value='second third')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='abcdef'), Constant(value='abcdef')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)abcdef'), Constant(value='abcdef')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?i)abcdef'), Constant(value='ABCDEF')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?ir)abcdef'), Constant(value='ABCDEF')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(.)'), Constant(value='\\1'), Constant(value='abc')], keywords=[]), Constant(value='abc')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?r)(.)'), Constant(value='\\1'), Constant(value='abc')], keywords=[]), Constant(value='abc')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_atomic', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?>a*)a'), Constant(value='aa')], keywords=[]), Constant(value=None)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_possessive', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='a?a'), Constant(value='a')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='a*a'), Constant(value='aaa')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='a+a'), Constant(value='aaa')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='a{1,3}a'), Constant(value='aaa')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:ab)?ab'), Constant(value='ab')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:ab)*ab'), Constant(value='ababab')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:ab)+ab'), Constant(value='ababab')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:ab){1,3}ab'), Constant(value='ababab')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='a?+a'), Constant(value='a')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='a*+a'), Constant(value='aaa')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='a++a'), Constant(value='aaa')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='a{1,3}+a'), Constant(value='aaa')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:ab)?+ab'), Constant(value='ab')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:ab)*+ab'), Constant(value='ababab')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:ab)++ab'), Constant(value='ababab')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:ab){1,3}+ab'), Constant(value='ababab')], keywords=[]), Constant(value=None)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_zerowidth', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=7), Constant(value=0)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='\\b'), Constant(value='a b')], keywords=[]), List(elts=[Constant(value=''), Constant(value='a'), Constant(value=' '), Constant(value='b'), Constant(value='')], ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='\\b'), Constant(value='a b')], keywords=[]), List(elts=[Constant(value='a b')], ctx=Load())], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?V1)\\b'), Constant(value='a b')], keywords=[]), List(elts=[Constant(value=''), Constant(value='a'), Constant(value=' '), Constant(value='b'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='^|\\w+'), Constant(value='foo bar')], keywords=[]), List(elts=[Constant(value=''), Constant(value='foo'), Constant(value='bar')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='^|\\w+'), Constant(value='foo bar')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value=''), Constant(value='foo'), Constant(value='bar')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r)^|\\w+'), Constant(value='foo bar')], keywords=[]), List(elts=[Constant(value='bar'), Constant(value='foo'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?r)^|\\w+'), Constant(value='foo bar')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='bar'), Constant(value='foo'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)^|\\w+'), Constant(value='foo bar')], keywords=[]), List(elts=[Constant(value=''), Constant(value='foo'), Constant(value='bar')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?V1)^|\\w+'), Constant(value='foo bar')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value=''), Constant(value='foo'), Constant(value='bar')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?rV1)^|\\w+'), Constant(value='foo bar')], keywords=[]), List(elts=[Constant(value='bar'), Constant(value='foo'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?rV1)^|\\w+'), Constant(value='foo bar')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='bar'), Constant(value='foo'), Constant(value='')], ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=7), Constant(value=0)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=''), Constant(value='xaxbxc')], keywords=[]), List(elts=[Constant(value=''), Constant(value='x'), Constant(value='a'), Constant(value='x'), Constant(value='b'), Constant(value='x'), Constant(value='c'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Name(id='m', ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='splititer', ctx=Load()), args=[Constant(value=''), Constant(value='xaxbxc')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value=''), Constant(value='x'), Constant(value='a'), Constant(value='x'), Constant(value='b'), Constant(value='x'), Constant(value='c'), Constant(value='')], ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=''), Constant(value='xaxbxc')], keywords=[]), List(elts=[Constant(value='xaxbxc')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Name(id='m', ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='splititer', ctx=Load()), args=[Constant(value=''), Constant(value='xaxbxc')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='xaxbxc')], ctx=Load())], keywords=[]))]), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=7), Constant(value=0)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?r)'), Constant(value='xaxbxc')], keywords=[]), List(elts=[Constant(value=''), Constant(value='c'), Constant(value='x'), Constant(value='b'), Constant(value='x'), Constant(value='a'), Constant(value='x'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Name(id='m', ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='splititer', ctx=Load()), args=[Constant(value='(?r)'), Constant(value='xaxbxc')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value=''), Constant(value='c'), Constant(value='x'), Constant(value='b'), Constant(value='x'), Constant(value='a'), Constant(value='x'), Constant(value='')], ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?r)'), Constant(value='xaxbxc')], keywords=[]), List(elts=[Constant(value='xaxbxc')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Name(id='m', ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='splititer', ctx=Load()), args=[Constant(value='(?r)'), Constant(value='xaxbxc')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='xaxbxc')], ctx=Load())], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?V1)'), Constant(value='xaxbxc')], keywords=[]), List(elts=[Constant(value=''), Constant(value='x'), Constant(value='a'), Constant(value='x'), Constant(value='b'), Constant(value='x'), Constant(value='c'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Name(id='m', ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='splititer', ctx=Load()), args=[Constant(value='(?V1)'), Constant(value='xaxbxc')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value=''), Constant(value='x'), Constant(value='a'), Constant(value='x'), Constant(value='b'), Constant(value='x'), Constant(value='c'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?rV1)'), Constant(value='xaxbxc')], keywords=[]), List(elts=[Constant(value=''), Constant(value='c'), Constant(value='x'), Constant(value='b'), Constant(value='x'), Constant(value='a'), Constant(value='x'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Name(id='m', ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='splititer', ctx=Load()), args=[Constant(value='(?rV1)'), Constant(value='xaxbxc')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value=''), Constant(value='c'), Constant(value='x'), Constant(value='b'), Constant(value='x'), Constant(value='a'), Constant(value='x'), Constant(value='')], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_scoped_and_inline_flags', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?i)Ab'), Constant(value='ab')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?i:A)b'), Constant(value='ab')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='A(?i)b'), Constant(value='ab')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='A(?iV1)b'), Constant(value='ab')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='CANT_TURN_OFF', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?V0-i)Ab'), Constant(value='ab')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load()))]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?V0)Ab'), Constant(value='ab')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?V1)Ab'), Constant(value='ab')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?V1-i)Ab'), Constant(value='ab')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load()))]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?-i:A)b'), Constant(value='ab')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load()))]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='A(?V1-i)b'), Constant(value='ab')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_repeated_repeats', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:a+)+'), Constant(value='aaa')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:(?:ab)+c)+'), Constant(value='abcabc')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:a+){2,}'), Constant(value='aaa')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_lookbehind', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='123(?<=a\\d+)'), Constant(value='a123')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=4)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='123(?<=a\\d+)'), Constant(value='b123')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='123(?<!a\\d+)'), Constant(value='a123')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='123(?<!a\\d+)'), Constant(value='b123')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=4)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)b(?<=b)(c)'), Constant(value='abc')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)b(?<=c)(c)'), Constant(value='abc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)b(?=c)(c)'), Constant(value='abc')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)b(?=b)(c)'), Constant(value='abc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:(a)|(x))b(?<=(?(2)x|c))c'), Constant(value='abc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:(a)|(x))b(?<=(?(2)b|x))c'), Constant(value='abc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:(a)|(x))b(?<=(?(2)x|b))c'), Constant(value='abc')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:(a)|(x))b(?<=(?(1)c|x))c'), Constant(value='abc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:(a)|(x))b(?<=(?(1)b|x))c'), Constant(value='abc')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:(a)|(x))b(?=(?(2)x|c))c'), Constant(value='abc')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:(a)|(x))b(?=(?(2)c|x))c'), Constant(value='abc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:(a)|(x))b(?=(?(2)x|c))c'), Constant(value='abc')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:(a)|(x))b(?=(?(1)b|x))c'), Constant(value='abc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:(a)|(x))b(?=(?(1)c|x))c'), Constant(value='abc')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)b(?<=(?(2)x|c))(c)'), Constant(value='abc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)b(?<=(?(2)b|x))(c)'), Constant(value='abc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)b(?<=(?(1)c|x))(c)'), Constant(value='abc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)b(?<=(?(1)b|x))(c)'), Constant(value='abc')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)b(?=(?(2)x|c))(c)'), Constant(value='abc')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)b(?=(?(2)b|x))(c)'), Constant(value='abc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)b(?=(?(1)c|x))(c)'), Constant(value='abc')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(a)\\2(b)')], keywords=[])], keywords=[])], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='PATTERN_CLASS', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_unmatched_in_sub', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=7), Constant(value=0)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?V0)(x)?(y)?'), Constant(value='\\2-\\1'), Constant(value='xy')], keywords=[]), Constant(value='y-x-')], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?V0)(x)?(y)?'), Constant(value='\\2-\\1'), Constant(value='xy')], keywords=[]), Constant(value='y-x')], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?V1)(x)?(y)?'), Constant(value='\\2-\\1'), Constant(value='xy')], keywords=[]), Constant(value='y-x-')], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=7), Constant(value=0)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?V0)(x)?(y)?'), Constant(value='\\2-\\1'), Constant(value='x')], keywords=[]), Constant(value='-x-')], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?V0)(x)?(y)?'), Constant(value='\\2-\\1'), Constant(value='x')], keywords=[]), Constant(value='-x')], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?V1)(x)?(y)?'), Constant(value='\\2-\\1'), Constant(value='x')], keywords=[]), Constant(value='-x-')], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=7), Constant(value=0)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?V0)(x)?(y)?'), Constant(value='\\2-\\1'), Constant(value='y')], keywords=[]), Constant(value='y--')], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?V0)(x)?(y)?'), Constant(value='\\2-\\1'), Constant(value='y')], keywords=[]), Constant(value='y-')], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?V1)(x)?(y)?'), Constant(value='\\2-\\1'), Constant(value='y')], keywords=[]), Constant(value='y--')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_bug_10328', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='pat', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?mV0)(?P<trailing_ws>[ \\t]+\\r*$)|(?P<no_final_newline>(?<=[^\\n])\\Z)')], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=7), Constant(value=0)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='subn', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='m')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=BinOp(left=BinOp(left=Constant(value='<'), op=Add(), right=Attribute(value=Name(id='m', ctx=Load()), attr='lastgroup', ctx=Load())), op=Add(), right=Constant(value='>'))), Constant(value='foobar ')], keywords=[]), Tuple(elts=[Constant(value='foobar<trailing_ws><no_final_newline>'), Constant(value=2)], ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='subn', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='m')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=BinOp(left=BinOp(left=Constant(value='<'), op=Add(), right=Attribute(value=Name(id='m', ctx=Load()), attr='lastgroup', ctx=Load())), op=Add(), right=Constant(value='>'))), Constant(value='foobar ')], keywords=[]), Tuple(elts=[Constant(value='foobar<trailing_ws>'), Constant(value=1)], ctx=Load())], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='group', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='foobar ')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value=' '), Constant(value='')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='pat', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?mV1)(?P<trailing_ws>[ \\t]+\\r*$)|(?P<no_final_newline>(?<=[^\\n])\\Z)')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='subn', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='m')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=BinOp(left=BinOp(left=Constant(value='<'), op=Add(), right=Attribute(value=Name(id='m', ctx=Load()), attr='lastgroup', ctx=Load())), op=Add(), right=Constant(value='>'))), Constant(value='foobar ')], keywords=[]), Tuple(elts=[Constant(value='foobar<trailing_ws><no_final_newline>'), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='group', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='foobar ')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value=' '), Constant(value='')], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_overlapped', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='..'), Constant(value='abcde')], keywords=[]), List(elts=[Constant(value='ab'), Constant(value='cd')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='..'), Constant(value='abcde')], keywords=[keyword(arg='overlapped', value=Constant(value=True))]), List(elts=[Constant(value='ab'), Constant(value='bc'), Constant(value='cd'), Constant(value='de')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r)..'), Constant(value='abcde')], keywords=[]), List(elts=[Constant(value='de'), Constant(value='bc')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r)..'), Constant(value='abcde')], keywords=[keyword(arg='overlapped', value=Constant(value=True))]), List(elts=[Constant(value='de'), Constant(value='cd'), Constant(value='bc'), Constant(value='ab')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(.)(-)(.)'), Constant(value='a-b-c')], keywords=[keyword(arg='overlapped', value=Constant(value=True))]), List(elts=[Tuple(elts=[Constant(value='a'), Constant(value='-'), Constant(value='b')], ctx=Load()), Tuple(elts=[Constant(value='b'), Constant(value='-'), Constant(value='c')], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='..'), Constant(value='abcde')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='ab'), Constant(value='cd')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='..'), Constant(value='abcde')], keywords=[keyword(arg='overlapped', value=Constant(value=True))]), ifs=[], is_async=0)]), List(elts=[Constant(value='ab'), Constant(value='bc'), Constant(value='cd'), Constant(value='de')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?r)..'), Constant(value='abcde')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='de'), Constant(value='bc')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Subscript(value=Name(id='m', ctx=Load()), slice=Constant(value=0), ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?r)..'), Constant(value='abcde')], keywords=[keyword(arg='overlapped', value=Constant(value=True))]), ifs=[], is_async=0)]), List(elts=[Constant(value='de'), Constant(value='cd'), Constant(value='bc'), Constant(value='ab')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='groups', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(.)(-)(.)'), Constant(value='a-b-c')], keywords=[keyword(arg='overlapped', value=Constant(value=True))]), ifs=[], is_async=0)]), List(elts=[Tuple(elts=[Constant(value='a'), Constant(value='-'), Constant(value='b')], ctx=Load()), Tuple(elts=[Constant(value='b'), Constant(value='-'), Constant(value='c')], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='groups', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?r)(.)(-)(.)'), Constant(value='a-b-c')], keywords=[keyword(arg='overlapped', value=Constant(value=True))]), ifs=[], is_async=0)]), List(elts=[Tuple(elts=[Constant(value='b'), Constant(value='-'), Constant(value='c')], ctx=Load()), Tuple(elts=[Constant(value='a'), Constant(value='-'), Constant(value='b')], ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_splititer', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=','), Constant(value='a,b,,c,')], keywords=[]), List(elts=[Constant(value='a'), Constant(value='b'), Constant(value=''), Constant(value='c'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Name(id='m', ctx=Load()), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='splititer', ctx=Load()), args=[Constant(value=','), Constant(value='a,b,,c,')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='a'), Constant(value='b'), Constant(value=''), Constant(value='c'), Constant(value='')], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_grapheme', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\X'), Constant(value='à')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\X'), Constant(value='à')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\X'), Constant(value='aààeéé')], keywords=[]), List(elts=[Constant(value='a'), Constant(value='à'), Constant(value='à'), Constant(value='e'), Constant(value='é'), Constant(value='é')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\X{3}'), Constant(value='aààeéé')], keywords=[]), List(elts=[Constant(value='aàà'), Constant(value='eéé')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\X'), Constant(value='\r\r\ńÁ')], keywords=[]), List(elts=[Constant(value='\r'), Constant(value='\r\n'), Constant(value='́'), Constant(value='Á')], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_word_boundary', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='text', ctx=Store())], value=Constant(value='The quick ("brown") fox can\'t jump 32.3 feet, right?')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?V1)\\b'), Name(id='text', ctx=Load())], keywords=[]), List(elts=[Constant(value=''), Constant(value='The'), Constant(value=' '), Constant(value='quick'), Constant(value=' ("'), Constant(value='brown'), Constant(value='") '), Constant(value='fox'), Constant(value=' '), Constant(value='can'), Constant(value="'"), Constant(value='t'), Constant(value=' '), Constant(value='jump'), Constant(value=' '), Constant(value='32'), Constant(value='.'), Constant(value='3'), Constant(value=' '), Constant(value='feet'), Constant(value=', '), Constant(value='right'), Constant(value='?')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?V1w)\\b'), Name(id='text', ctx=Load())], keywords=[]), List(elts=[Constant(value=''), Constant(value='The'), Constant(value=' '), Constant(value='quick'), Constant(value=' '), Constant(value='('), Constant(value='"'), Constant(value='brown'), Constant(value='"'), Constant(value=')'), Constant(value=' '), Constant(value='fox'), Constant(value=' '), Constant(value="can't"), Constant(value=' '), Constant(value='jump'), Constant(value=' '), Constant(value='32.3'), Constant(value=' '), Constant(value='feet'), Constant(value=','), Constant(value=' '), Constant(value='right'), Constant(value='?'), Constant(value='')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='text', ctx=Store())], value=Constant(value='The  fox')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?V1)\\b'), Name(id='text', ctx=Load())], keywords=[]), List(elts=[Constant(value=''), Constant(value='The'), Constant(value='  '), Constant(value='fox'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?V1w)\\b'), Name(id='text', ctx=Load())], keywords=[]), List(elts=[Constant(value=''), Constant(value='The'), Constant(value='  '), Constant(value='fox'), Constant(value='')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='text', ctx=Store())], value=Constant(value="can't aujourd'hui l'objectif")), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?V1)\\b'), Name(id='text', ctx=Load())], keywords=[]), List(elts=[Constant(value=''), Constant(value='can'), Constant(value="'"), Constant(value='t'), Constant(value=' '), Constant(value='aujourd'), Constant(value="'"), Constant(value='hui'), Constant(value=' '), Constant(value='l'), Constant(value="'"), Constant(value='objectif'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(?V1w)\\b'), Name(id='text', ctx=Load())], keywords=[]), List(elts=[Constant(value=''), Constant(value="can't"), Constant(value=' '), Constant(value="aujourd'hui"), Constant(value=' '), Constant(value="l'objectif"), Constant(value='')], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_line_boundary', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='.+'), Constant(value='Line 1\nLine 2\n')], keywords=[]), List(elts=[Constant(value='Line 1'), Constant(value='Line 2')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='.+'), Constant(value='Line 1\rLine 2\r')], keywords=[]), List(elts=[Constant(value='Line 1\rLine 2\r')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='.+'), Constant(value='Line 1\r\nLine 2\r\n')], keywords=[]), List(elts=[Constant(value='Line 1\r'), Constant(value='Line 2\r')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?w).+'), Constant(value='Line 1\nLine 2\n')], keywords=[]), List(elts=[Constant(value='Line 1'), Constant(value='Line 2')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?w).+'), Constant(value='Line 1\rLine 2\r')], keywords=[]), List(elts=[Constant(value='Line 1'), Constant(value='Line 2')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?w).+'), Constant(value='Line 1\r\nLine 2\r\n')], keywords=[]), List(elts=[Constant(value='Line 1'), Constant(value='Line 2')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^abc'), Constant(value='abc')], keywords=[]), attr='start', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^abc'), Constant(value='\nabc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^abc'), Constant(value='\rabc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?w)^abc'), Constant(value='abc')], keywords=[]), attr='start', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?w)^abc'), Constant(value='\nabc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?w)^abc'), Constant(value='\rabc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='abc$'), Constant(value='abc')], keywords=[]), attr='start', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='abc$'), Constant(value='abc\n')], keywords=[]), attr='start', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='abc$'), Constant(value='abc\r')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?w)abc$'), Constant(value='abc')], keywords=[]), attr='start', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?w)abc$'), Constant(value='abc\n')], keywords=[]), attr='start', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?w)abc$'), Constant(value='abc\r')], keywords=[]), attr='start', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?m)^abc'), Constant(value='abc')], keywords=[]), attr='start', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?m)^abc'), Constant(value='\nabc')], keywords=[]), attr='start', ctx=Load()), args=[], keywords=[]), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?m)^abc'), Constant(value='\rabc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?mw)^abc'), Constant(value='abc')], keywords=[]), attr='start', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?mw)^abc'), Constant(value='\nabc')], keywords=[]), attr='start', ctx=Load()), args=[], keywords=[]), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?mw)^abc'), Constant(value='\rabc')], keywords=[]), attr='start', ctx=Load()), args=[], keywords=[]), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?m)abc$'), Constant(value='abc')], keywords=[]), attr='start', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?m)abc$'), Constant(value='abc\n')], keywords=[]), attr='start', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?m)abc$'), Constant(value='abc\r')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?mw)abc$'), Constant(value='abc')], keywords=[]), attr='start', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?mw)abc$'), Constant(value='abc\n')], keywords=[]), attr='start', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?mw)abc$'), Constant(value='abc\r')], keywords=[]), attr='start', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_branch_reset', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:(a)|(b))(c)'), Constant(value='ac')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value=None), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:(a)|(b))(c)'), Constant(value='bc')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=None), Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:(?<a>a)|(?<b>b))(?<c>c)'), Constant(value='ac')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value=None), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:(?<a>a)|(?<b>b))(?<c>c)'), Constant(value='bc')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=None), Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?<a>a)(?:(?<b>b)|(?<c>c))(?<d>d)'), Constant(value='abd')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value='b'), Constant(value=None), Constant(value='d')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?<a>a)(?:(?<b>b)|(?<c>c))(?<d>d)'), Constant(value='acd')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value=None), Constant(value='c'), Constant(value='d')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)(?:(b)|(c))(d)'), Constant(value='abd')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value='b'), Constant(value=None), Constant(value='d')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)(?:(b)|(c))(d)'), Constant(value='acd')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value=None), Constant(value='c'), Constant(value='d')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)(?|(b)|(b))(d)'), Constant(value='abd')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value='b'), Constant(value='d')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?|(?<a>a)|(?<b>b))(c)'), Constant(value='ac')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value=None), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?|(?<a>a)|(?<b>b))(c)'), Constant(value='bc')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=None), Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?|(?<a>a)|(?<a>b))(c)'), Constant(value='ac')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?|(?<a>a)|(?<a>b))(c)'), Constant(value='bc')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?|(?<a>a)(?<b>b)|(?<b>c)(?<a>d))(e)'), Constant(value='abe')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value='b'), Constant(value='e')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?|(?<a>a)(?<b>b)|(?<b>c)(?<a>d))(e)'), Constant(value='cde')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='d'), Constant(value='c'), Constant(value='e')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?|(?<a>a)(?<b>b)|(?<b>c)(d))(e)'), Constant(value='abe')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value='b'), Constant(value='e')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?|(?<a>a)(?<b>b)|(?<b>c)(d))(e)'), Constant(value='cde')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='d'), Constant(value='c'), Constant(value='e')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?|(?<a>a)(?<b>b)|(c)(d))(e)'), Constant(value='abe')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value='b'), Constant(value='e')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?|(?<a>a)(?<b>b)|(c)(d))(e)'), Constant(value='cde')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='c'), Constant(value='d'), Constant(value='e')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?|(?<a>a)(?<b>b)|(c)(?<a>d))(e)'), Constant(value='abe')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value='b'), Constant(value='e')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?|(?<a>a)(?<b>b)|(c)(?<a>d))(e)'), Constant(value='abe')], keywords=[]), attr='capturesdict', ctx=Load()), args=[], keywords=[]), Dict(keys=[Constant(value='a'), Constant(value='b')], values=[List(elts=[Constant(value='a')], ctx=Load()), List(elts=[Constant(value='b')], ctx=Load())])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?|(?<a>a)(?<b>b)|(c)(?<a>d))(e)'), Constant(value='cde')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='d'), Constant(value=None), Constant(value='e')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?|(?<a>a)(?<b>b)|(c)(?<a>d))(e)'), Constant(value='cde')], keywords=[]), attr='capturesdict', ctx=Load()), args=[], keywords=[]), Dict(keys=[Constant(value='a'), Constant(value='b')], values=[List(elts=[Constant(value='c'), Constant(value='d')], ctx=Load()), List(elts=[], ctx=Load())])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_set', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[a]'), Constant(value='a')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?i)[a]'), Constant(value='A')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[a-b]'), Constant(value='a')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?i)[a-b]'), Constant(value='A')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?V0)([][])'), Constant(value='-'), Constant(value='a[b]c')], keywords=[]), Constant(value='a-b-c')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[\\p{Alpha}]'), Constant(value='a0')], keywords=[]), List(elts=[Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?i)[\\p{Alpha}]'), Constant(value='A0')], keywords=[]), List(elts=[Constant(value='A')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[a\\p{Alpha}]'), Constant(value='ab0')], keywords=[]), List(elts=[Constant(value='a'), Constant(value='b')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[a\\P{Alpha}]'), Constant(value='ab0')], keywords=[]), List(elts=[Constant(value='a'), Constant(value='0')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?i)[a\\p{Alpha}]'), Constant(value='ab0')], keywords=[]), List(elts=[Constant(value='a'), Constant(value='b')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?i)[a\\P{Alpha}]'), Constant(value='ab0')], keywords=[]), List(elts=[Constant(value='a'), Constant(value='0')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[a-b\\p{Alpha}]'), Constant(value='abC0')], keywords=[]), List(elts=[Constant(value='a'), Constant(value='b'), Constant(value='C')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?i)[a-b\\p{Alpha}]'), Constant(value='AbC0')], keywords=[]), List(elts=[Constant(value='A'), Constant(value='b'), Constant(value='C')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[\\p{Alpha}]'), Constant(value='a0')], keywords=[]), List(elts=[Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[\\P{Alpha}]'), Constant(value='a0')], keywords=[]), List(elts=[Constant(value='0')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[^\\p{Alpha}]'), Constant(value='a0')], keywords=[]), List(elts=[Constant(value='0')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[^\\P{Alpha}]'), Constant(value='a0')], keywords=[]), List(elts=[Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[^\\d-h]'), Constant(value='a^b12c-h')], keywords=[])], keywords=[]), Constant(value='a^bc')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[^\\dh]'), Constant(value='a^b12c-h')], keywords=[])], keywords=[]), Constant(value='a^bc-')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[^h\\s\\db]'), Constant(value='a^b 12c-h')], keywords=[])], keywords=[]), Constant(value='a^c-')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[^b\\w]'), Constant(value='a b')], keywords=[])], keywords=[]), Constant(value=' ')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[^b\\S]'), Constant(value='a b')], keywords=[])], keywords=[]), Constant(value=' ')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[^8\\d]'), Constant(value='a 1b2')], keywords=[])], keywords=[]), Constant(value='a b')], keywords=[])), Assign(targets=[Name(id='all_chars', ctx=Store())], value=Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='chr', ctx=Load()), args=[Name(id='c', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='c', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=256)], keywords=[]), ifs=[], is_async=0)])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\p{ASCII}'), Name(id='all_chars', ctx=Load())], keywords=[])], keywords=[]), Constant(value=128)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\p{Letter}'), Name(id='all_chars', ctx=Load())], keywords=[])], keywords=[]), Constant(value=117)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\p{Digit}'), Name(id='all_chars', ctx=Load())], keywords=[])], keywords=[]), Constant(value=10)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)[\\p{ASCII}&&\\p{Letter}]'), Name(id='all_chars', ctx=Load())], keywords=[])], keywords=[]), Constant(value=52)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)[\\p{ASCII}&&\\p{Alnum}&&\\p{Letter}]'), Name(id='all_chars', ctx=Load())], keywords=[])], keywords=[]), Constant(value=52)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)[\\p{ASCII}&&\\p{Alnum}&&\\p{Digit}]'), Name(id='all_chars', ctx=Load())], keywords=[])], keywords=[]), Constant(value=10)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)[\\p{ASCII}&&\\p{Cc}]'), Name(id='all_chars', ctx=Load())], keywords=[])], keywords=[]), Constant(value=33)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)[\\p{ASCII}&&\\p{Graph}]'), Name(id='all_chars', ctx=Load())], keywords=[])], keywords=[]), Constant(value=94)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)[\\p{ASCII}--\\p{Cc}]'), Name(id='all_chars', ctx=Load())], keywords=[])], keywords=[]), Constant(value=95)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[\\p{Letter}\\p{Digit}]'), Name(id='all_chars', ctx=Load())], keywords=[])], keywords=[]), Constant(value=127)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)[\\p{Letter}||\\p{Digit}]'), Name(id='all_chars', ctx=Load())], keywords=[])], keywords=[]), Constant(value=127)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\p{HexDigit}'), Name(id='all_chars', ctx=Load())], keywords=[])], keywords=[]), Constant(value=22)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)[\\p{HexDigit}~~\\p{Digit}]'), Name(id='all_chars', ctx=Load())], keywords=[])], keywords=[]), Constant(value=12)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)[\\p{Digit}~~\\p{HexDigit}]'), Name(id='all_chars', ctx=Load())], keywords=[])], keywords=[]), Constant(value=12)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?V0)([][-])')], keywords=[])], keywords=[])], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='PATTERN_CLASS', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)[[a-z]--[aei]]'), Constant(value='abc')], keywords=[]), List(elts=[Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?iV1)[[a-z]--[aei]]'), Constant(value='abc')], keywords=[]), List(elts=[Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)[\\w--a]'), Constant(value='abc')], keywords=[]), List(elts=[Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?iV1)[\\w--a]'), Constant(value='abc')], keywords=[]), List(elts=[Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_various', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='tests', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='(?P<foo_123'), Constant(value=''), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='MISSING_GT', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?P<1>a)'), Constant(value=''), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_GROUP_NAME', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?P<!>a)'), Constant(value=''), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_GROUP_NAME', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?P<foo!>a)'), Constant(value=''), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_GROUP_NAME', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?P<foo_123>a)(?P=foo_123'), Constant(value='aa'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='MISSING_RPAREN', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?P<foo_123>a)(?P=1)'), Constant(value='aa'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?P<foo_123>a)(?P=0)'), Constant(value='aa'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_GROUP_NAME', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?P<foo_123>a)(?P=-1)'), Constant(value='aa'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_GROUP_NAME', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?P<foo_123>a)(?P=!)'), Constant(value='aa'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_GROUP_NAME', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?P<foo_123>a)(?P=foo_124)'), Constant(value='aa'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='UNKNOWN_GROUP', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?P<foo_123>a)'), Constant(value='a'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?P<foo_123>a)(?P=foo_123)'), Constant(value='aa'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?<foo_123>a)\\g<foo_123'), Constant(value='aa'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?<foo_123>a)\\g<1>'), Constant(value='aa'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?<foo_123>a)\\g<!>'), Constant(value='aa'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?<foo_123>a)\\g<foo_124>'), Constant(value='aa'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='UNKNOWN_GROUP', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?<foo_123>a)'), Constant(value='a'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?<foo_123>a)\\g<foo_123>'), Constant(value='aa'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\1'), Constant(value='a'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='INVALID_GROUP_REF', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='[\\1]'), Constant(value='\x01'), Constant(value='0'), Constant(value="'\\x01'")], ctx=Load()), Tuple(elts=[Constant(value='\\09'), BinOp(left=Call(func=Name(id='chr', ctx=Load()), args=[Constant(value=0)], keywords=[]), op=Add(), right=Constant(value='9')), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[BinOp(left=Call(func=Name(id='chr', ctx=Load()), args=[Constant(value=0)], keywords=[]), op=Add(), right=Constant(value='9'))], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\141'), Constant(value='a'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)\\119'), Constant(value='abcdefghijklk9'), Constant(value='0,11'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abcdefghijklk9'), Constant(value='k')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\0'), Constant(value='\x00'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='\x00')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='[\\0a]'), Constant(value='\x00'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='\x00')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='[a\\0]'), Constant(value='\x00'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='\x00')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='[^a\\0]'), Constant(value='\x00'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\a[\\b]\\f\\n\\r\\t\\v'), Constant(value='\x07\x08\x0c\n\r\t\x0b'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='\x07\x08\x0c\n\r\t\x0b')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='[\\a][\\b][\\f][\\n][\\r][\\t][\\v]'), Constant(value='\x07\x08\x0c\n\r\t\x0b'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='\x07\x08\x0c\n\r\t\x0b')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\xff'), Constant(value='ÿ'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Name(id='chr', ctx=Load()), args=[Constant(value=255)], keywords=[])], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\x00ffffffffffffff'), Constant(value='ÿ'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\x00f'), Constant(value='\x0f'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\x00fe'), Constant(value='þ'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\x00ff'), Constant(value='ÿ'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\t\\n\\v\\r\\f\\a\\g'), Constant(value='\t\n\x0b\r\x0c\x07g'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='\t\n\x0b\r\x0c\x07g')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\t\n\x0b\r\x0c\x07\\g'), Constant(value='\t\n\x0b\r\x0c\x07g'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='\t\n\x0b\r\x0c\x07g')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\t\\n\\v\\r\\f\\a'), Constant(value='\t\n\x0b\r\x0c\x07'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=BinOp(left=BinOp(left=Call(func=Name(id='chr', ctx=Load()), args=[Constant(value=9)], keywords=[]), op=Add(), right=Call(func=Name(id='chr', ctx=Load()), args=[Constant(value=10)], keywords=[])), op=Add(), right=Call(func=Name(id='chr', ctx=Load()), args=[Constant(value=11)], keywords=[])), op=Add(), right=Call(func=Name(id='chr', ctx=Load()), args=[Constant(value=13)], keywords=[])), op=Add(), right=Call(func=Name(id='chr', ctx=Load()), args=[Constant(value=12)], keywords=[])), op=Add(), right=Call(func=Name(id='chr', ctx=Load()), args=[Constant(value=7)], keywords=[]))], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='[\\t][\\n][\\v][\\r][\\f][\\b]'), Constant(value='\t\n\x0b\r\x0c\x08'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='\t\n\x0b\r\x0c\x08')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^\\w+=(\\\\[\\000-\\277]|[^\\n\\\\])*'), Constant(value='SRC=eval.c g.c blah blah blah \\\\\n\tapes.c'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='SRC=eval.c g.c blah blah blah \\\\')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a.b'), Constant(value='acb'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='acb')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a.b'), Constant(value='a\nb'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a.*b'), Constant(value='acc\nccb'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a.{4,5}b'), Constant(value='acc\nccb'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a.b'), Constant(value='a\rb'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a\rb')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a.b(?s)'), Constant(value='a\nb'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a\nb')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a.b(?sV1)'), Constant(value='a\nb'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?s)a.b'), Constant(value='a\nb'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a\nb')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a.*(?s)b'), Constant(value='acc\nccb'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='acc\nccb')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a.*(?sV1)b'), Constant(value='acc\nccb'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?s)a.*b'), Constant(value='acc\nccb'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='acc\nccb')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?s)a.{4,5}b'), Constant(value='acc\nccb'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='acc\nccb')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value=')'), Constant(value=''), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='TRAILING_CHARS', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value=''), Constant(value=''), Constant(value='0'), Constant(value="''")], ctx=Load()), Tuple(elts=[Constant(value='abc'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='abc'), Constant(value='xbc'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='abc'), Constant(value='axc'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='abc'), Constant(value='abx'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='abc'), Constant(value='xabcy'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='abc'), Constant(value='ababc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab*c'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab*bc'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab*bc'), Constant(value='abbc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abbc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab*bc'), Constant(value='abbbbc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abbbbc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab+bc'), Constant(value='abbc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abbc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab+bc'), Constant(value='abc'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab+bc'), Constant(value='abq'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab+bc'), Constant(value='abbbbc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abbbbc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab?bc'), Constant(value='abbc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abbc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab?bc'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab?bc'), Constant(value='abbbbc'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab?c'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^abc$'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^abc$'), Constant(value='abcc'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^abc'), Constant(value='abcc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^abc$'), Constant(value='aabc'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='abc$'), Constant(value='aabc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='$'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a.c'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a.c'), Constant(value='axc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='axc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a.*c'), Constant(value='axyzc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='axyzc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a.*c'), Constant(value='axyzd'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[bc]d'), Constant(value='abc'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[bc]d'), Constant(value='abd'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abd')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[b-d]e'), Constant(value='abd'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[b-d]e'), Constant(value='ace'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ace')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[b-d]'), Constant(value='aac'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ac')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[-b]'), Constant(value='a-'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a-')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[\\-b]'), Constant(value='a-'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a-')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[b-]'), Constant(value='a-'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a-')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[]b'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_SET', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='a['), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_SET', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='a\\'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_ESCAPE', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='abc)'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='TRAILING_CHARS', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(abc'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='MISSING_RPAREN', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='a]'), Constant(value='a]'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a]')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[]]b'), Constant(value='a]b'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a]b')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[]]b'), Constant(value='a]b'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a]b')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[^bc]d'), Constant(value='aed'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='aed')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[^bc]d'), Constant(value='abd'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[^-b]c'), Constant(value='adc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='adc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[^-b]c'), Constant(value='a-c'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[^]b]c'), Constant(value='a]c'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[^]b]c'), Constant(value='adc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='adc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\ba\\b'), Constant(value='a-'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\ba\\b'), Constant(value='-a'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\ba\\b'), Constant(value='-a-'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\by\\b'), Constant(value='xy'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\by\\b'), Constant(value='yz'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\by\\b'), Constant(value='xyz'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='x\\b'), Constant(value='xyz'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='x\\B'), Constant(value='xyz'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='x')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\Bz'), Constant(value='xyz'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='z')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='z\\B'), Constant(value='xyz'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\Bx'), Constant(value='xyz'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\Ba\\B'), Constant(value='a-'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\Ba\\B'), Constant(value='-a'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\Ba\\B'), Constant(value='-a-'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\By\\B'), Constant(value='xy'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\By\\B'), Constant(value='yz'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\By\\b'), Constant(value='xy'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='y')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\by\\B'), Constant(value='yz'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='y')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\By\\B'), Constant(value='xyz'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='y')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab|cd'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ab')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab|cd'), Constant(value='abcd'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ab')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='()ef'), Constant(value='def'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ef'), Constant(value='')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='$b'), Constant(value='b'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a\\(b'), Constant(value='a(b'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='a(b')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a\\(*b'), Constant(value='ab'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ab')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a\\(*b'), Constant(value='a((b'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a((b')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a\\\\b'), Constant(value='a\\b'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a\\b')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='((a))'), Constant(value='abc'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='a'), Constant(value='a'), Constant(value='a')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a)b(c)'), Constant(value='abc'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abc'), Constant(value='a'), Constant(value='c')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a+b+c'), Constant(value='aabbabc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a+|b)*'), Constant(value='ab'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ab'), Constant(value='b')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a+|b)+'), Constant(value='ab'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ab'), Constant(value='b')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a+|b)?'), Constant(value='ab'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='a'), Constant(value='a')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value=')('), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='TRAILING_CHARS', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='[^ab]*'), Constant(value='cde'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='cde')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='abc'), Constant(value=''), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a*'), Constant(value=''), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a|b|c|d|e'), Constant(value='e'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='e')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a|b|c|d|e)f'), Constant(value='ef'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ef'), Constant(value='e')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='abcd*efg'), Constant(value='abcdefg'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abcdefg')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab*'), Constant(value='xabyabbbz'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ab')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab*'), Constant(value='xayabbbz'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(ab|cd)e'), Constant(value='abcde'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='cde'), Constant(value='cd')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='[abhgefdc]ij'), Constant(value='hij'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='hij')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^(ab|cd)e'), Constant(value='abcde'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(abc|)ef'), Constant(value='abcdef'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ef'), Constant(value='')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a|b)c*d'), Constant(value='abcd'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='bcd'), Constant(value='b')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(ab|ab*)bc'), Constant(value='abc'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abc'), Constant(value='a')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a([bc]*)c*'), Constant(value='abc'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abc'), Constant(value='bc')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a([bc]*)(c*d)'), Constant(value='abcd'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abcd'), Constant(value='bc'), Constant(value='d')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a([bc]+)(c*d)'), Constant(value='abcd'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abcd'), Constant(value='bc'), Constant(value='d')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a([bc]*)(c+d)'), Constant(value='abcd'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abcd'), Constant(value='b'), Constant(value='cd')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[bcd]*dcdcde'), Constant(value='adcdcde'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='adcdcde')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[bcd]+dcdcde'), Constant(value='adcdcde'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(ab|a)b*c'), Constant(value='abc'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abc'), Constant(value='ab')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='((a)(b)c)(d)'), Constant(value='abcd'), Constant(value='1,2,3,4'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abc'), Constant(value='a'), Constant(value='b'), Constant(value='d')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='[a-zA-Z_][a-zA-Z0-9_]*'), Constant(value='alpha'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='alpha')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^a(bc+|b[eh])g|.h$'), Constant(value='abh'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='bh'), Constant(value=None)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(bc+d$|ef*g.|h?i(j|k))'), Constant(value='effgz'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='effgz'), Constant(value='effgz'), Constant(value=None)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(bc+d$|ef*g.|h?i(j|k))'), Constant(value='ij'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ij'), Constant(value='ij'), Constant(value='j')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(bc+d$|ef*g.|h?i(j|k))'), Constant(value='effg'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(bc+d$|ef*g.|h?i(j|k))'), Constant(value='bcdd'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(bc+d$|ef*g.|h?i(j|k))'), Constant(value='reffgz'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='effgz'), Constant(value='effgz'), Constant(value=None)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(((((((((a)))))))))'), Constant(value='a'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='multiple words of text'), Constant(value='uh-uh'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='multiple words'), Constant(value='multiple words, yeah'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='multiple words')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(.*)c(.*)'), Constant(value='abcde'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abcde'), Constant(value='ab'), Constant(value='de')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\((.*), (.*)\\)'), Constant(value='(a, b)'), Constant(value='2,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='b'), Constant(value='a')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='[k]'), Constant(value='ab'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[-]?c'), Constant(value='ac'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ac')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(abc)\\1'), Constant(value='abcabc'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='([a-c]*)\\1'), Constant(value='abcabc'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^(.+)?B'), Constant(value='AB'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='A')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a+).\\1$'), Constant(value='aaaaa'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='aaaaa'), Constant(value='aa')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^(a+).\\1$'), Constant(value='aaaa'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(abc)\\1'), Constant(value='abcabc'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abcabc'), Constant(value='abc')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='([a-c]+)\\1'), Constant(value='abcabc'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abcabc'), Constant(value='abc')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a)\\1'), Constant(value='aa'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='aa'), Constant(value='a')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a+)\\1'), Constant(value='aa'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='aa'), Constant(value='a')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a+)+\\1'), Constant(value='aa'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='aa'), Constant(value='a')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a).+\\1'), Constant(value='aba'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='aba'), Constant(value='a')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a)ba*\\1'), Constant(value='aba'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='aba'), Constant(value='a')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(aa|a)a\\1$'), Constant(value='aaa'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='aaa'), Constant(value='a')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a|aa)a\\1$'), Constant(value='aaa'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='aaa'), Constant(value='a')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a+)a\\1$'), Constant(value='aaa'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='aaa'), Constant(value='a')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='([abc]*)\\1'), Constant(value='abcabc'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abcabc'), Constant(value='abc')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a)(b)c|ab'), Constant(value='ab'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ab'), Constant(value=None), Constant(value=None)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a)+x'), Constant(value='aaax'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='aaax'), Constant(value='a')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='([ac])+x'), Constant(value='aacx'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='aacx'), Constant(value='c')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='([^/]*/)*sub1/'), Constant(value='d:msgs/tdir/sub1/trial/away.cpp'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='d:msgs/tdir/sub1/'), Constant(value='tdir/')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='([^.]*)\\.([^:]*):[T ]+(.*)'), Constant(value='track1.title:TBlah blah blah'), Constant(value='0,1,2,3'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='track1.title:TBlah blah blah'), Constant(value='track1'), Constant(value='title'), Constant(value='Blah blah blah')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='([^N]*N)+'), Constant(value='abNNxyzN'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abNNxyzN'), Constant(value='xyzN')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='([^N]*N)+'), Constant(value='abNNxyz'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abNN'), Constant(value='N')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='([abc]*)x'), Constant(value='abcx'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abcx'), Constant(value='abc')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='([abc]*)x'), Constant(value='abc'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='([xyz]*)x'), Constant(value='abcx'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='x'), Constant(value='')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a)+b|aac'), Constant(value='aac'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='aac'), Constant(value=None)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?P<i d>aaa)a'), Constant(value='aaaa'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_GROUP_NAME', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?P<id>aaa)a'), Constant(value='aaaa'), Constant(value='0,id'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='aaaa'), Constant(value='aaa')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?P<id>aa)(?P=id)'), Constant(value='aaaa'), Constant(value='0,id'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='aaaa'), Constant(value='aa')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?P<id>aa)(?P=xd)'), Constant(value='aaaa'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='UNKNOWN_GROUP', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='\\g'), Constant(value='g'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='g')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\g<1>'), Constant(value='g'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='INVALID_GROUP_REF', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(.)\\g<1>'), Constant(value='gg'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='gg')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(.)\\g<1>'), Constant(value='gg'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='gg'), Constant(value='g')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\N'), Constant(value='N'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='N')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\N{LATIN SMALL LETTER A}'), Constant(value='a'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\p'), Constant(value='p'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='p')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\p{Ll}'), Constant(value='a'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\P'), Constant(value='P'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='P')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\P{Lu}'), Constant(value='p'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='p')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='abc'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='abc'), Constant(value='xbc'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='abc'), Constant(value='axc'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='abc'), Constant(value='abx'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='abc'), Constant(value='xabcy'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='abc'), Constant(value='ababc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab*c'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab*bc'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab*bc'), Constant(value='abbc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abbc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab*bc'), Constant(value='abbbbc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abbbbc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab{0,}bc'), Constant(value='abbbbc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abbbbc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab+bc'), Constant(value='abbc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abbc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab+bc'), Constant(value='abc'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab+bc'), Constant(value='abq'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab{1,}bc'), Constant(value='abq'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab+bc'), Constant(value='abbbbc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abbbbc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab{1,}bc'), Constant(value='abbbbc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abbbbc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab{1,3}bc'), Constant(value='abbbbc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abbbbc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab{3,4}bc'), Constant(value='abbbbc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abbbbc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab{4,5}bc'), Constant(value='abbbbc'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab?bc'), Constant(value='abbc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abbc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab?bc'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab{0,1}bc'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab?bc'), Constant(value='abbbbc'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab?c'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab{0,1}c'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^abc$'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^abc$'), Constant(value='abcc'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^abc'), Constant(value='abcc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^abc$'), Constant(value='aabc'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='abc$'), Constant(value='aabc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='$'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a.c'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a.c'), Constant(value='axc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='axc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a.*c'), Constant(value='axyzc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='axyzc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a.*c'), Constant(value='axyzd'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[bc]d'), Constant(value='abc'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[bc]d'), Constant(value='abd'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abd')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[b-d]e'), Constant(value='abd'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[b-d]e'), Constant(value='ace'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ace')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[b-d]'), Constant(value='aac'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ac')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[-b]'), Constant(value='a-'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a-')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[b-]'), Constant(value='a-'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a-')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[b-a]'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_CHAR_RANGE', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='a[]b'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_SET', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='a['), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_SET', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='a]'), Constant(value='a]'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a]')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[]]b'), Constant(value='a]b'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a]b')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[^bc]d'), Constant(value='aed'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='aed')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[^bc]d'), Constant(value='abd'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[^-b]c'), Constant(value='adc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='adc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[^-b]c'), Constant(value='a-c'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[^]b]c'), Constant(value='a]c'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[^]b]c'), Constant(value='adc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='adc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab|cd'), Constant(value='abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ab')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab|cd'), Constant(value='abcd'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ab')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='()ef'), Constant(value='def'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ef'), Constant(value='')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='*a'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='NOTHING_TO_REPEAT', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(*)b'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='NOTHING_TO_REPEAT', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='$b'), Constant(value='b'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a\\'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_ESCAPE', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='a\\(b'), Constant(value='a(b'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='a(b')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a\\(*b'), Constant(value='ab'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ab')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a\\(*b'), Constant(value='a((b'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a((b')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a\\\\b'), Constant(value='a\\b'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a\\b')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='abc)'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='TRAILING_CHARS', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(abc'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='MISSING_RPAREN', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='((a))'), Constant(value='abc'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='a'), Constant(value='a'), Constant(value='a')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a)b(c)'), Constant(value='abc'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abc'), Constant(value='a'), Constant(value='c')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a+b+c'), Constant(value='aabbabc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a{1,}b{1,}c'), Constant(value='aabbabc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a**'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='MULTIPLE_REPEAT', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='a.+?c'), Constant(value='abcabc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a+|b)*'), Constant(value='ab'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ab'), Constant(value='b')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a+|b){0,}'), Constant(value='ab'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ab'), Constant(value='b')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a+|b)+'), Constant(value='ab'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ab'), Constant(value='b')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a+|b){1,}'), Constant(value='ab'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ab'), Constant(value='b')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a+|b)?'), Constant(value='ab'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='a'), Constant(value='a')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a+|b){0,1}'), Constant(value='ab'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='a'), Constant(value='a')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value=')('), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='TRAILING_CHARS', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='[^ab]*'), Constant(value='cde'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='cde')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='abc'), Constant(value=''), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a*'), Constant(value=''), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='([abc])*d'), Constant(value='abbbcd'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abbbcd'), Constant(value='c')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='([abc])*bcd'), Constant(value='abcd'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abcd'), Constant(value='a')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a|b|c|d|e'), Constant(value='e'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='e')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a|b|c|d|e)f'), Constant(value='ef'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ef'), Constant(value='e')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='abcd*efg'), Constant(value='abcdefg'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abcdefg')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab*'), Constant(value='xabyabbbz'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ab')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='ab*'), Constant(value='xayabbbz'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(ab|cd)e'), Constant(value='abcde'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='cde'), Constant(value='cd')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='[abhgefdc]ij'), Constant(value='hij'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='hij')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^(ab|cd)e'), Constant(value='abcde'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(abc|)ef'), Constant(value='abcdef'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ef'), Constant(value='')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(a|b)c*d'), Constant(value='abcd'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='bcd'), Constant(value='b')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(ab|ab*)bc'), Constant(value='abc'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abc'), Constant(value='a')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a([bc]*)c*'), Constant(value='abc'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abc'), Constant(value='bc')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a([bc]*)(c*d)'), Constant(value='abcd'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abcd'), Constant(value='bc'), Constant(value='d')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a([bc]+)(c*d)'), Constant(value='abcd'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abcd'), Constant(value='bc'), Constant(value='d')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a([bc]*)(c+d)'), Constant(value='abcd'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abcd'), Constant(value='b'), Constant(value='cd')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[bcd]*dcdcde'), Constant(value='adcdcde'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='adcdcde')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[bcd]+dcdcde'), Constant(value='adcdcde'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(ab|a)b*c'), Constant(value='abc'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abc'), Constant(value='ab')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='((a)(b)c)(d)'), Constant(value='abcd'), Constant(value='1,2,3,4'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abc'), Constant(value='a'), Constant(value='b'), Constant(value='d')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='[a-zA-Z_][a-zA-Z0-9_]*'), Constant(value='alpha'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='alpha')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^a(bc+|b[eh])g|.h$'), Constant(value='abh'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='bh'), Constant(value=None)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(bc+d$|ef*g.|h?i(j|k))'), Constant(value='effgz'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='effgz'), Constant(value='effgz'), Constant(value=None)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(bc+d$|ef*g.|h?i(j|k))'), Constant(value='ij'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ij'), Constant(value='ij'), Constant(value='j')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(bc+d$|ef*g.|h?i(j|k))'), Constant(value='effg'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(bc+d$|ef*g.|h?i(j|k))'), Constant(value='bcdd'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(bc+d$|ef*g.|h?i(j|k))'), Constant(value='reffgz'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='effgz'), Constant(value='effgz'), Constant(value=None)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='((((((((((a))))))))))'), Constant(value='a'), Constant(value='10'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='((((((((((a))))))))))\\10'), Constant(value='aa'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='aa')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='((((((((((a))))))))))\\41'), Constant(value=''), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='INVALID_GROUP_REF', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?i)((((((((((a))))))))))\\41'), Constant(value=''), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='INVALID_GROUP_REF', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(((((((((a)))))))))'), Constant(value='a'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='multiple words of text'), Constant(value='uh-uh'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='multiple words'), Constant(value='multiple words, yeah'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='multiple words')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(.*)c(.*)'), Constant(value='abcde'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='abcde'), Constant(value='ab'), Constant(value='de')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\((.*), (.*)\\)'), Constant(value='(a, b)'), Constant(value='2,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='b'), Constant(value='a')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='[k]'), Constant(value='ab'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[-]?c'), Constant(value='ac'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ac')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(abc)\\1'), Constant(value='abcabc'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='([a-c]*)\\1'), Constant(value='abcabc'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)abc'), Constant(value='ABC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)abc'), Constant(value='XBC'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)abc'), Constant(value='AXC'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)abc'), Constant(value='ABX'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)abc'), Constant(value='XABCY'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)abc'), Constant(value='ABABC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab*c'), Constant(value='ABC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab*bc'), Constant(value='ABC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab*bc'), Constant(value='ABBC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABBC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab*?bc'), Constant(value='ABBBBC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABBBBC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab{0,}?bc'), Constant(value='ABBBBC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABBBBC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab+?bc'), Constant(value='ABBC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABBC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab+bc'), Constant(value='ABC'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab+bc'), Constant(value='ABQ'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab{1,}bc'), Constant(value='ABQ'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab+bc'), Constant(value='ABBBBC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABBBBC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab{1,}?bc'), Constant(value='ABBBBC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABBBBC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab{1,3}?bc'), Constant(value='ABBBBC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABBBBC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab{3,4}?bc'), Constant(value='ABBBBC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABBBBC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab{4,5}?bc'), Constant(value='ABBBBC'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab??bc'), Constant(value='ABBC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABBC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab??bc'), Constant(value='ABC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab{0,1}?bc'), Constant(value='ABC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab??bc'), Constant(value='ABBBBC'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab??c'), Constant(value='ABC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab{0,1}?c'), Constant(value='ABC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)^abc$'), Constant(value='ABC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)^abc$'), Constant(value='ABCC'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)^abc'), Constant(value='ABCC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)^abc$'), Constant(value='AABC'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)abc$'), Constant(value='AABC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)^'), Constant(value='ABC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)$'), Constant(value='ABC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a.c'), Constant(value='ABC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a.c'), Constant(value='AXC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='AXC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a.*?c'), Constant(value='AXYZC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='AXYZC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a.*c'), Constant(value='AXYZD'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a[bc]d'), Constant(value='ABC'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a[bc]d'), Constant(value='ABD'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABD')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a[b-d]e'), Constant(value='ABD'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a[b-d]e'), Constant(value='ACE'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ACE')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a[b-d]'), Constant(value='AAC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='AC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a[-b]'), Constant(value='A-'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='A-')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a[b-]'), Constant(value='A-'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='A-')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a[b-a]'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_CHAR_RANGE', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?i)a[]b'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_SET', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?i)a['), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_SET', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?i)a]'), Constant(value='A]'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='A]')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a[]]b'), Constant(value='A]B'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='A]B')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a[^bc]d'), Constant(value='AED'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='AED')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a[^bc]d'), Constant(value='ABD'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a[^-b]c'), Constant(value='ADC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ADC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a[^-b]c'), Constant(value='A-C'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a[^]b]c'), Constant(value='A]C'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a[^]b]c'), Constant(value='ADC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ADC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab|cd'), Constant(value='ABC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='AB')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab|cd'), Constant(value='ABCD'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='AB')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)()ef'), Constant(value='DEF'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='EF'), Constant(value='')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)*a'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='NOTHING_TO_REPEAT', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?i)(*)b'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='NOTHING_TO_REPEAT', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?i)$b'), Constant(value='B'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a\\'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_ESCAPE', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?i)a\\(b'), Constant(value='A(B'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='A(B')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a\\(*b'), Constant(value='AB'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='AB')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a\\(*b'), Constant(value='A((B'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='A((B')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a\\\\b'), Constant(value='A\\B'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='A\\B')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)abc)'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='TRAILING_CHARS', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?i)(abc'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='MISSING_RPAREN', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?i)((a))'), Constant(value='ABC'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='A'), Constant(value='A'), Constant(value='A')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(a)b(c)'), Constant(value='ABC'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ABC'), Constant(value='A'), Constant(value='C')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a+b+c'), Constant(value='AABBABC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a{1,}b{1,}c'), Constant(value='AABBABC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a**'), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='MULTIPLE_REPEAT', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?i)a.+?c'), Constant(value='ABCABC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a.*?c'), Constant(value='ABCABC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a.{0,5}?c'), Constant(value='ABCABC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(a+|b)*'), Constant(value='AB'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='AB'), Constant(value='B')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(a+|b){0,}'), Constant(value='AB'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='AB'), Constant(value='B')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(a+|b)+'), Constant(value='AB'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='AB'), Constant(value='B')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(a+|b){1,}'), Constant(value='AB'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='AB'), Constant(value='B')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(a+|b)?'), Constant(value='AB'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='A'), Constant(value='A')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(a+|b){0,1}'), Constant(value='AB'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='A'), Constant(value='A')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(a+|b){0,1}?'), Constant(value='AB'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value=''), Constant(value=None)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i))('), Constant(value='-'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='TRAILING_CHARS', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='(?i)[^ab]*'), Constant(value='CDE'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='CDE')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)abc'), Constant(value=''), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a*'), Constant(value=''), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)([abc])*d'), Constant(value='ABBBCD'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ABBBCD'), Constant(value='C')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)([abc])*bcd'), Constant(value='ABCD'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ABCD'), Constant(value='A')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a|b|c|d|e'), Constant(value='E'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='E')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(a|b|c|d|e)f'), Constant(value='EF'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='EF'), Constant(value='E')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)abcd*efg'), Constant(value='ABCDEFG'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABCDEFG')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab*'), Constant(value='XABYABBBZ'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='AB')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)ab*'), Constant(value='XAYABBBZ'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='A')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(ab|cd)e'), Constant(value='ABCDE'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='CDE'), Constant(value='CD')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)[abhgefdc]ij'), Constant(value='HIJ'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='HIJ')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)^(ab|cd)e'), Constant(value='ABCDE'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(abc|)ef'), Constant(value='ABCDEF'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='EF'), Constant(value='')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(a|b)c*d'), Constant(value='ABCD'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='BCD'), Constant(value='B')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(ab|ab*)bc'), Constant(value='ABC'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ABC'), Constant(value='A')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a([bc]*)c*'), Constant(value='ABC'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ABC'), Constant(value='BC')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a([bc]*)(c*d)'), Constant(value='ABCD'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ABCD'), Constant(value='BC'), Constant(value='D')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a([bc]+)(c*d)'), Constant(value='ABCD'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ABCD'), Constant(value='BC'), Constant(value='D')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a([bc]*)(c+d)'), Constant(value='ABCD'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ABCD'), Constant(value='B'), Constant(value='CD')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a[bcd]*dcdcde'), Constant(value='ADCDCDE'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ADCDCDE')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a[bcd]+dcdcde'), Constant(value='ADCDCDE'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(ab|a)b*c'), Constant(value='ABC'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ABC'), Constant(value='AB')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)((a)(b)c)(d)'), Constant(value='ABCD'), Constant(value='1,2,3,4'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ABC'), Constant(value='A'), Constant(value='B'), Constant(value='D')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)[a-zA-Z_][a-zA-Z0-9_]*'), Constant(value='ALPHA'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ALPHA')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)^a(bc+|b[eh])g|.h$'), Constant(value='ABH'), Constant(value='0,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='BH'), Constant(value=None)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(bc+d$|ef*g.|h?i(j|k))'), Constant(value='EFFGZ'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='EFFGZ'), Constant(value='EFFGZ'), Constant(value=None)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(bc+d$|ef*g.|h?i(j|k))'), Constant(value='IJ'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='IJ'), Constant(value='IJ'), Constant(value='J')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(bc+d$|ef*g.|h?i(j|k))'), Constant(value='EFFG'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(bc+d$|ef*g.|h?i(j|k))'), Constant(value='BCDD'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(bc+d$|ef*g.|h?i(j|k))'), Constant(value='REFFGZ'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='EFFGZ'), Constant(value='EFFGZ'), Constant(value=None)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)((((((((((a))))))))))'), Constant(value='A'), Constant(value='10'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='A')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)((((((((((a))))))))))\\10'), Constant(value='AA'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='AA')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(((((((((a)))))))))'), Constant(value='A'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='A')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(?:(?:(?:(?:(?:(?:(?:(?:(?:(a))))))))))'), Constant(value='A'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='A')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(?:(?:(?:(?:(?:(?:(?:(?:(?:(a|b|c))))))))))'), Constant(value='C'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='C')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)multiple words of text'), Constant(value='UH-UH'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)multiple words'), Constant(value='MULTIPLE WORDS, YEAH'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='MULTIPLE WORDS')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(.*)c(.*)'), Constant(value='ABCDE'), Constant(value='0,1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ABCDE'), Constant(value='AB'), Constant(value='DE')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)\\((.*), (.*)\\)'), Constant(value='(A, B)'), Constant(value='2,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='B'), Constant(value='A')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)[k]'), Constant(value='AB'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)a[-]?c'), Constant(value='AC'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='AC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)(abc)\\1'), Constant(value='ABCABC'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)([a-c]*)\\1'), Constant(value='ABCABC'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ABC')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a(?!b).'), Constant(value='abad'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ad')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a(?=d).'), Constant(value='abad'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ad')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a(?=c|d).'), Constant(value='abad'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ad')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a(?:b|c|d)(.)'), Constant(value='ace'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='e')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a(?:b|c|d)*(.)'), Constant(value='ace'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='e')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a(?:b|c|d)+?(.)'), Constant(value='ace'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='e')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a(?:b|(c|e){1,2}?|d)+?(.)'), Constant(value='ace'), Constant(value='1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='c'), Constant(value='e')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?<!-):(.*?)(?<!-):'), Constant(value='a:bc-:de:f'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='bc-:de')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?<!\\\\):(.*?)(?<!\\\\):'), Constant(value='a:bc\\:de:f'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='bc\\:de')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value="(?<!\\?)'(.*?)(?<!\\?)'"), Constant(value="a'bc?'de'f"), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value="bc?'de")], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='w(?# comment'), Constant(value='w'), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='MISSING_RPAREN', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='w(?# comment 1)xy(?# comment 2)z'), Constant(value='wxyz'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='wxyz')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='w(?i)'), Constant(value='W'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='W')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='w(?iV1)'), Constant(value='W'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='w(?i)'), Constant(value='w'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='w')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='w(?iV1)'), Constant(value='w'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='w')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)w'), Constant(value='W'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='W')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?iV1)w'), Constant(value='W'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='W')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?x)w# comment 1\nx y\n# comment 2\nz'), Constant(value='wxyz'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='wxyz')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^abc'), Constant(value='jkl\nabc\nxyz'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?m)^abc'), Constant(value='jkl\nabc\nxyz'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?m)abc$'), Constant(value='jkl\nxyzabc\n123'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a.b'), Constant(value='a\nb'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?s)a.b'), Constant(value='a\nb'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a\nb')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\w+'), Constant(value='--ab_cd0123--'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ab_cd0123')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='[\\w]+'), Constant(value='--ab_cd0123--'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='ab_cd0123')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\D+'), Constant(value='1234abc5678'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='[\\D]+'), Constant(value='1234abc5678'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='[\\da-fA-F]+'), Constant(value='123abc'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='123abc')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='([\\s]*)([\\S]*)([\\s]*)'), Constant(value=' testing!1972'), Constant(value='3,2,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value=''), Constant(value='testing!1972'), Constant(value=' ')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(\\s*)(\\S*)(\\s*)'), Constant(value=' testing!1972'), Constant(value='3,2,1'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value=''), Constant(value='testing!1972'), Constant(value=' ')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(([a-z]+):)?([a-z]+)$'), Constant(value='smil'), Constant(value='1,2,3'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value=None), Constant(value=None), Constant(value='smil')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='((.)\\1+)'), Constant(value=''), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='OPEN_GROUP', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='.*d'), Constant(value='abc\nabd'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='abd')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='('), Constant(value=''), Constant(value=''), Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='MISSING_RPAREN', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='[\\41]'), Constant(value='!'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='!')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(x?)?'), Constant(value='x'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='x')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value=' (?x)foo '), Constant(value='foo'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='foo')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value=' (?V1x)foo '), Constant(value='foo'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?x) foo '), Constant(value='foo'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='foo')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?V1x) foo '), Constant(value='foo'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='foo')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?x)foo '), Constant(value='foo'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='foo')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?V1x)foo '), Constant(value='foo'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='foo')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?<!abc)(d.f)'), Constant(value='abcdefdof'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='dof')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='[\\w-]+'), Constant(value='laser_beam'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='laser_beam')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='.*?\\S *:'), Constant(value='xx:'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='xx:')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[ ]*?\\ (\\d+).*'), Constant(value='a   10'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a   10')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[ ]*?\\ (\\d+).*'), Constant(value='a    10'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a    10')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?ms).*?x\\s*\\Z(.*)'), Constant(value='xx\nx\n'), Constant(value='1'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)M+'), Constant(value='MMM'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='MMM')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)m+'), Constant(value='MMM'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='MMM')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)[M]+'), Constant(value='MMM'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='MMM')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='(?i)[m]+'), Constant(value='MMM'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='MMM')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='"(?:\\\\"|[^"])*?"'), Constant(value='"\\""'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='"\\""')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^.*?$'), Constant(value='one\ntwo\nthree\n'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='a[^>]*?b'), Constant(value='a>b'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^a*?$'), Constant(value='foo'), Constant(value=''), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^((a)c)?(ab)$'), Constant(value='ab'), Constant(value='1,2,3'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value=None), Constant(value=None), Constant(value='ab')], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^([ab]*?)(?=(b)?)c'), Constant(value='abc'), Constant(value='1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ab'), Constant(value=None)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^([ab]*?)(?!(b))c'), Constant(value='abc'), Constant(value='1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ab'), Constant(value=None)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='^([ab]*?)(?<!(a))c'), Constant(value='abc'), Constant(value='1,2'), Call(func=Name(id='ascii', ctx=Load()), args=[Tuple(elts=[Constant(value='ab'), Constant(value=None)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\b.\\b'), Constant(value='a'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='a')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\b.\\b'), Constant(value='Ä'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='Ä')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='\\w'), Constant(value='Ä'), Constant(value='0'), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='Ä')], keywords=[])], ctx=Load())], ctx=Load())), For(target=Name(id='t', ctx=Store()), iter=Name(id='tests', ctx=Load()), body=[Assign(targets=[Name(id='excval', ctx=Store())], value=Constant(value=None)), Try(body=[If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='t', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=4)]), body=[Assign(targets=[Tuple(elts=[Name(id='pattern', ctx=Store()), Name(id='string', ctx=Store()), Name(id='groups', ctx=Store()), Name(id='expected', ctx=Store())], ctx=Store())], value=Name(id='t', ctx=Load()))], orelse=[Assign(targets=[Tuple(elts=[Name(id='pattern', ctx=Store()), Name(id='string', ctx=Store()), Name(id='groups', ctx=Store()), Name(id='expected', ctx=Store()), Name(id='excval', ctx=Store())], ctx=Store())], value=Name(id='t', ctx=Load()))])], handlers=[ExceptHandler(type=Name(id='ValueError', ctx=Load()), body=[Assign(targets=[Name(id='fields', ctx=Store())], value=Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[BinOp(left=ListComp(elt=Call(func=Name(id='ascii', ctx=Load()), args=[Name(id='f', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='f', ctx=Store()), iter=Subscript(value=Name(id='t', ctx=Load()), slice=Slice(upper=Constant(value=3)), ctx=Load()), ifs=[], is_async=0)]), op=Add(), right=List(elts=[Constant(value='...')], ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Incorrect number of test fields: ({})'), attr='format', ctx=Load()), args=[Name(id='fields', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[Assign(targets=[Name(id='group_list', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=Name(id='groups', ctx=Load()), body=[For(target=Name(id='group', ctx=Store()), iter=Call(func=Attribute(value=Name(id='groups', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=',')], keywords=[]), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='group_list', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='int', ctx=Load()), args=[Name(id='group', ctx=Load())], keywords=[])], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ValueError', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='group_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='group', ctx=Load())], keywords=[]))])], orelse=[], finalbody=[])], orelse=[])], orelse=[]), If(test=Compare(left=Name(id='excval', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='subTest', ctx=Load()), args=[], keywords=[keyword(arg='pattern', value=Name(id='pattern', ctx=Load())), keyword(arg='string', value=Name(id='string', ctx=Load()))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='expected', ctx=Load()), Name(id='excval', ctx=Load()), Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), Name(id='pattern', ctx=Load()), Name(id='string', ctx=Load())], keywords=[]))])], orelse=[Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Name(id='pattern', ctx=Load()), Name(id='string', ctx=Load())], keywords=[])), If(test=Name(id='m', ctx=Load()), body=[If(test=Name(id='group_list', ctx=Load()), body=[Assign(targets=[Name(id='actual', ctx=Store())], value=Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='group', ctx=Load()), args=[Starred(value=Name(id='group_list', ctx=Load()), ctx=Load())], keywords=[])], keywords=[]))], orelse=[Assign(targets=[Name(id='actual', ctx=Store())], value=Call(func=Name(id='ascii', ctx=Load()), args=[Subscript(value=Name(id='m', ctx=Load()), slice=Slice(), ctx=Load())], keywords=[]))])], orelse=[Assign(targets=[Name(id='actual', ctx=Store())], value=Call(func=Name(id='ascii', ctx=Load()), args=[Name(id='m', ctx=Load())], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='actual', ctx=Load()), Name(id='expected', ctx=Load())], keywords=[]))])], finalbody=[])], orelse=[])], decorator_list=[]), FunctionDef(name='test_replacement', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='test\\?'), Constant(value='result\\?\\.\x07\n'), Constant(value='test?')], keywords=[]), Constant(value='result\\?\\.\x07\n')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(.)'), Constant(value='\\1\\1'), Constant(value='x')], keywords=[]), Constant(value='xx')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(.)'), Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Constant(value='\\1\\1')], keywords=[]), Constant(value='x')], keywords=[]), Constant(value='\\1\\1')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(.)'), Constant(value='\\\\1\\\\1'), Constant(value='x')], keywords=[]), Constant(value='\\1\\1')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(.)'), Lambda(args=arguments(posonlyargs=[], args=[arg(arg='m')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Constant(value='\\1\\1')), Constant(value='x')], keywords=[]), Constant(value='\\1\\1')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_common_prefix', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='all', ctx=Store())], value=BinOp(left=BinOp(left=Attribute(value=Name(id='string', ctx=Load()), attr='ascii_lowercase', ctx=Load()), op=Add(), right=Attribute(value=Name(id='string', ctx=Load()), attr='digits', ctx=Load())), op=Add(), right=Attribute(value=Name(id='string', ctx=Load()), attr='ascii_uppercase', ctx=Load()))), Assign(targets=[Name(id='side', ctx=Store())], value=BinOp(left=Name(id='all', ctx=Load()), op=Mult(), right=Constant(value=4))), Assign(targets=[Name(id='regexp', ctx=Store())], value=BinOp(left=BinOp(left=BinOp(left=BinOp(left=Constant(value='('), op=Add(), right=Name(id='side', ctx=Load())), op=Add(), right=Constant(value='|')), op=Add(), right=Name(id='side', ctx=Load())), op=Add(), right=Constant(value=')'))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Name(id='regexp', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='PATTERN_CLASS', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_captures', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(\\w)+'), Constant(value='abc')], keywords=[]), attr='captures', ctx=Load()), args=[Constant(value=1)], keywords=[]), List(elts=[Constant(value='a'), Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(\\w{3})+'), Constant(value='abcdef')], keywords=[]), attr='captures', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[List(elts=[Constant(value='abcdef')], ctx=Load()), List(elts=[Constant(value='abc'), Constant(value='def')], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(\\d{1,3})(?:\\.(\\d{1,3})){3}$'), Constant(value='192.168.0.1')], keywords=[]), attr='captures', ctx=Load()), args=[Constant(value=1), Constant(value=2)], keywords=[]), Tuple(elts=[List(elts=[Constant(value='192')], ctx=Load()), List(elts=[Constant(value='168'), Constant(value='0'), Constant(value='1')], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^([0-9A-F]{2}){4} ([a-z]\\d){5}$'), Constant(value='3FB52A0C a2c4g3k9d3')], keywords=[]), attr='captures', ctx=Load()), args=[Constant(value=1), Constant(value=2)], keywords=[]), Tuple(elts=[List(elts=[Constant(value='3F'), Constant(value='B5'), Constant(value='2A'), Constant(value='0C')], ctx=Load()), List(elts=[Constant(value='a2'), Constant(value='c4'), Constant(value='g3'), Constant(value='k9'), Constant(value='d3')], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='([a-z]W)([a-z]X)+([a-z]Y)'), Constant(value='aWbXcXdXeXfY')], keywords=[]), attr='captures', ctx=Load()), args=[Constant(value=1), Constant(value=2), Constant(value=3)], keywords=[]), Tuple(elts=[List(elts=[Constant(value='aW')], ctx=Load()), List(elts=[Constant(value='bX'), Constant(value='cX'), Constant(value='dX'), Constant(value='eX')], ctx=Load()), List(elts=[Constant(value='fY')], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='.*?(?=(.)+)b'), Constant(value='ab')], keywords=[]), attr='captures', ctx=Load()), args=[Constant(value=1)], keywords=[]), List(elts=[Constant(value='b')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='.*?(?>(.){0,2})d'), Constant(value='abcd')], keywords=[]), attr='captures', ctx=Load()), args=[Constant(value=1)], keywords=[]), List(elts=[Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(.)+'), Constant(value='a')], keywords=[]), attr='captures', ctx=Load()), args=[Constant(value=1)], keywords=[]), List(elts=[Constant(value='a')], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_guards', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(X.*?Y\\s*){3}(X\\s*)+AB:'), Constant(value='XY\nX Y\nX  Y\nXY\nXX AB:')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1), Constant(value=2)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=3), Constant(value=21)], ctx=Load()), Tuple(elts=[Constant(value=12), Constant(value=15)], ctx=Load()), Tuple(elts=[Constant(value=16), Constant(value=18)], ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(X.*?Y\\s*){3,}(X\\s*)+AB:'), Constant(value='XY\nX Y\nX  Y\nXY\nXX AB:')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1), Constant(value=2)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=21)], ctx=Load()), Tuple(elts=[Constant(value=12), Constant(value=15)], ctx=Load()), Tuple(elts=[Constant(value=16), Constant(value=18)], ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d{4}(\\s*\\w)?\\W*((?!\\d)\\w){2}'), Constant(value='9999XX')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1), Constant(value=2)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load()), Tuple(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load()), Tuple(elts=[Constant(value=5), Constant(value=6)], ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='A\\s*?.*?(\\n+.*?\\s*?){0,2}\\(X'), Constant(value='A\n1\nS\n1 (X')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=10)], ctx=Load()), Tuple(elts=[Constant(value=5), Constant(value=8)], ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='Derde\\s*:'), Constant(value='aaaaaa:\nDerde:')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=8), Constant(value=14)], ctx=Load())], keywords=[])), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='Derde\\s*:'), Constant(value='aaaaa:\nDerde:')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=7), Constant(value=13)], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_turkic', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='pairs', ctx=Store())], value=Constant(value='I=i;I=ı;i=İ')), Assign(targets=[Name(id='all_chars', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='matching', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), For(target=Name(id='pair', ctx=Store()), iter=Call(func=Attribute(value=Name(id='pairs', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=';')], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='ch1', ctx=Store()), Name(id='ch2', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='pair', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='=')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='all_chars', ctx=Load()), attr='update', ctx=Load()), args=[Tuple(elts=[Name(id='ch1', ctx=Load()), Name(id='ch2', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='matching', ctx=Load()), attr='add', ctx=Load()), args=[Tuple(elts=[Name(id='ch1', ctx=Load()), Name(id='ch1', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='matching', ctx=Load()), attr='add', ctx=Load()), args=[Tuple(elts=[Name(id='ch1', ctx=Load()), Name(id='ch2', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='matching', ctx=Load()), attr='add', ctx=Load()), args=[Tuple(elts=[Name(id='ch2', ctx=Load()), Name(id='ch1', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='matching', ctx=Load()), attr='add', ctx=Load()), args=[Tuple(elts=[Name(id='ch2', ctx=Load()), Name(id='ch2', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[]), For(target=Name(id='ch1', ctx=Store()), iter=Name(id='all_chars', ctx=Load()), body=[For(target=Name(id='ch2', ctx=Store()), iter=Name(id='all_chars', ctx=Load()), body=[Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=BinOp(left=Constant(value='(?i)\\A'), op=Add(), right=Name(id='ch1', ctx=Load())), op=Add(), right=Constant(value='\\Z')), Name(id='ch2', ctx=Load())], keywords=[])), If(test=Name(id='m', ctx=Load()), body=[If(test=Compare(left=Tuple(elts=[Name(id='ch1', ctx=Load()), Name(id='ch2', ctx=Load())], ctx=Load()), ops=[NotIn()], comparators=[Name(id='matching', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='{} matching {}'), attr='format', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Name(id='ch1', ctx=Load())], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Name(id='ch2', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[])], orelse=[If(test=Compare(left=Tuple(elts=[Name(id='ch1', ctx=Load()), Name(id='ch2', ctx=Load())], ctx=Load()), ops=[In()], comparators=[Name(id='matching', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='{} not matching {}'), attr='format', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Name(id='ch1', ctx=Load())], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Name(id='ch2', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[])])], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='test_named_lists', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='options', ctx=Store())], value=List(elts=[Constant(value='one'), Constant(value='two'), Constant(value='three')], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='333\\L<bar>444'), Constant(value='333one444')], keywords=[keyword(arg='bar', value=Name(id='options', ctx=Load()))]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='333one444')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?i)333\\L<bar>444'), Constant(value='333TWO444')], keywords=[keyword(arg='bar', value=Name(id='options', ctx=Load()))]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='333TWO444')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='333\\L<bar>444'), Constant(value='333four444')], keywords=[keyword(arg='bar', value=Name(id='options', ctx=Load()))]), Constant(value=None)], keywords=[])), Assign(targets=[Name(id='options', ctx=Store())], value=List(elts=[Constant(value=b'one'), Constant(value=b'two'), Constant(value=b'three')], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'333\\L<bar>444'), Constant(value=b'333one444')], keywords=[keyword(arg='bar', value=Name(id='options', ctx=Load()))]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value=b'333one444')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(?i)333\\L<bar>444'), Constant(value=b'333TWO444')], keywords=[keyword(arg='bar', value=Name(id='options', ctx=Load()))]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value=b'333TWO444')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'333\\L<bar>444'), Constant(value=b'333four444')], keywords=[keyword(arg='bar', value=Name(id='options', ctx=Load()))]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='3\\L<bar>4\\L<bar>+5')], keywords=[keyword(arg='bar', value=List(elts=[Constant(value='one'), Constant(value='two'), Constant(value='three')], ctx=Load()))])], keywords=[])], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='PATTERN_CLASS', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='^\\L<options>'), Constant(value='solid QWERT')], keywords=[keyword(arg='options', value=Call(func=Name(id='set', ctx=Load()), args=[List(elts=[Constant(value='good'), Constant(value='brilliant'), Constant(value='+s\\ol[i}d')], ctx=Load())], keywords=[]))]), List(elts=[], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='^\\L<options>'), Constant(value='+solid QWERT')], keywords=[keyword(arg='options', value=Call(func=Name(id='set', ctx=Load()), args=[List(elts=[Constant(value='good'), Constant(value='brilliant'), Constant(value='+solid')], ctx=Load())], keywords=[]))]), List(elts=[Constant(value='+solid')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='options', ctx=Store())], value=List(elts=[Constant(value='STRASSE')], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?fi)\\L<words>'), Constant(value='straße')], keywords=[keyword(arg='words', value=Name(id='options', ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], keywords=[])), Assign(targets=[Name(id='options', ctx=Store())], value=List(elts=[Constant(value='STRASSE'), Constant(value='stress')], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?fi)\\L<words>'), Constant(value='straße')], keywords=[keyword(arg='words', value=Name(id='options', ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], keywords=[])), Assign(targets=[Name(id='options', ctx=Store())], value=List(elts=[Constant(value='straße')], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?fi)\\L<words>'), Constant(value='STRASSE')], keywords=[keyword(arg='words', value=Name(id='options', ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=7)], ctx=Load())], keywords=[])), Assign(targets=[Name(id='options', ctx=Store())], value=List(elts=[Constant(value='kit')], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?i)\\L<words>'), Constant(value='SKITS')], keywords=[keyword(arg='words', value=Name(id='options', ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=4)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?i)\\L<words>'), Constant(value='SKİTS')], keywords=[keyword(arg='words', value=Name(id='options', ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=4)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)\\b(\\w+) +\\1\\b'), Constant(value=' straße STRASSE ')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=15)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)\\b(\\w+) +\\1\\b'), Constant(value=' STRASSE straße ')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=15)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^\\L<options>$'), Constant(value='')], keywords=[keyword(arg='options', value=List(elts=[], ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_fuzzy', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(fou){s,e<=1}')], keywords=[])], keywords=[])], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='PATTERN_CLASS', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(fuu){s}')], keywords=[])], keywords=[])], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='PATTERN_CLASS', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(fuu){s,e}')], keywords=[])], keywords=[])], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='PATTERN_CLASS', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(anaconda){1i+1d<1,s<=1}')], keywords=[])], keywords=[])], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='PATTERN_CLASS', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(anaconda){1i+1d<1,s<=1,e<=10}')], keywords=[])], keywords=[])], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='PATTERN_CLASS', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(anaconda){s<=1,e<=1,1i+1d<1}')], keywords=[])], keywords=[])], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='PATTERN_CLASS', ctx=Load())], keywords=[])), Assign(targets=[Name(id='text', ctx=Store())], value=Constant(value='molasses anaconda foo bar baz smith anderson ')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(znacnda){s<=1,e<=3,1i+1d<1}'), Name(id='text', ctx=Load())], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(znacnda){s<=1,e<=3,1i+1d<2}'), Name(id='text', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=9), Constant(value=17)], ctx=Load()), Tuple(elts=[Constant(value=9), Constant(value=17)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(ananda){1i+1d<2}'), Name(id='text', ctx=Load())], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:\\bznacnda){e<=2}'), Name(id='text', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='anaconda')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:\\bnacnda){e<=2}'), Name(id='text', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='anaconda')], keywords=[])), Assign(targets=[Name(id='text', ctx=Store())], value=Constant(value='anaconda foo bar baz smith anderson')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(fuu){i<=3,d<=3,e<=5}'), Name(id='text', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=0)], ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=0)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?b)(fuu){i<=3,d<=3,e<=5}'), Name(id='text', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=9), Constant(value=10)], ctx=Load()), Tuple(elts=[Constant(value=9), Constant(value=10)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(fuu){i<=2,d<=2,e<=5}'), Name(id='text', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=7), Constant(value=10)], ctx=Load()), Tuple(elts=[Constant(value=7), Constant(value=10)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?e)(fuu){i<=2,d<=2,e<=5}'), Name(id='text', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=9), Constant(value=10)], ctx=Load()), Tuple(elts=[Constant(value=9), Constant(value=10)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(fuu){i<=3,d<=3,e}'), Name(id='text', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=0)], ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=0)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?b)(fuu){i<=3,d<=3,e}'), Name(id='text', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=9), Constant(value=10)], ctx=Load()), Tuple(elts=[Constant(value=9), Constant(value=10)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(approximate){s<=3,1i+1d<3}')], keywords=[])], keywords=[])], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='PATTERN_CLASS', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(foobar){e}'), Constant(value='xirefoabralfobarxie')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?e)(foobar){e}'), Constant(value='xirefoabralfobarxie')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?b)(foobar){e}'), Constant(value='xirefoabralfobarxie')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=11), Constant(value=16)], ctx=Load()), Tuple(elts=[Constant(value=11), Constant(value=16)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(foobar){e<=2}'), Constant(value='xirefoabrzlfd')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=4), Constant(value=9)], ctx=Load()), Tuple(elts=[Constant(value=4), Constant(value=9)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(foobar){e<=2}'), Constant(value='xirefoabzlfd')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(foobar){i<=2,s<=2,e<=2}'), Constant(value='oobargoobaploowap')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=5), Constant(value=11)], ctx=Load()), Tuple(elts=[Constant(value=5), Constant(value=11)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\b(foobar){e}\\b'), Constant(value='zfoobarz')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=8)], ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=8)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\b(foobar){e}\\b'), Constant(value='boing zfoobarz goobar woop')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?b)\\b(foobar){e}\\b'), Constant(value='boing zfoobarz goobar woop')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=15), Constant(value=21)], ctx=Load()), Tuple(elts=[Constant(value=15), Constant(value=21)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(foobar){e<=1}$'), Constant(value='foobar')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(foobar){e<=1}$'), Constant(value='xfoobar')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=7)], ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=7)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(foobar){e<=1}$'), Constant(value='foobarx')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=7)], ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=7)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(foobar){e<=1}$'), Constant(value='fooxbar')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=7)], ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=7)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(foobar){e<=1}$'), Constant(value='foxbar')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(foobar){e<=1}$'), Constant(value='xoobar')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(foobar){e<=1}$'), Constant(value='foobax')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(foobar){e<=1}$'), Constant(value='oobar')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=5)], ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=5)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(foobar){e<=1}$'), Constant(value='fobar')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=5)], ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=5)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(foobar){e<=1}$'), Constant(value='fooba')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=5)], ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=5)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(foobar){e<=1}$'), Constant(value='xfoobarx')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(foobar){e<=1}$'), Constant(value='foobarxx')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(foobar){e<=1}$'), Constant(value='xxfoobar')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(foobar){e<=1}$'), Constant(value='xfoxbar')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(foobar){e<=1}$'), Constant(value='foxbarx')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(foobar){i<=1,d<=2,s<=3,2d+1s<4}'), Constant(value='3oifaowefbaoraofuiebofasebfaobfaorfeoaro')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=6), Constant(value=13)], ctx=Load()), Tuple(elts=[Constant(value=6), Constant(value=13)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?b)(foobar){i<=1,d<=2,s<=3,2d+1s<4}'), Constant(value='3oifaowefbaoraofuiebofasebfaobfaorfeoaro')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=34), Constant(value=39)], ctx=Load()), Tuple(elts=[Constant(value=34), Constant(value=39)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='foo(bar){e<=1}zap'), Constant(value='foobarzap')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=9)], ctx=Load()), Tuple(elts=[Constant(value=3), Constant(value=6)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='foo(bar){e<=1}zap'), Constant(value='fobarzap')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='foo(bar){e<=1}zap'), Constant(value='foobrzap')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=8)], ctx=Load()), Tuple(elts=[Constant(value=3), Constant(value=5)], ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='text', ctx=Store())], value=Constant(value='www.cnn.com 64.236.16.20\nwww.slashdot.org 66.35.250.150\nFor useful information, use www.slashdot.org\nthis is demo data!\n')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?s)^.*(dot.org){e}.*$'), Name(id='text', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=120)], ctx=Load()), Tuple(elts=[Constant(value=120), Constant(value=120)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?es)^.*(dot.org){e}.*$'), Name(id='text', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=120)], ctx=Load()), Tuple(elts=[Constant(value=93), Constant(value=100)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^.*(dot.org){e}.*$'), Name(id='text', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=119)], ctx=Load()), Tuple(elts=[Constant(value=24), Constant(value=101)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\b\\L<words>{e<=1}\\b'), Constant(value=' book cot dog desk ')], keywords=[keyword(arg='words', value=Call(func=Attribute(value=Constant(value='cat dog'), attr='split', ctx=Load()), args=[], keywords=[]))]), List(elts=[Constant(value='cot'), Constant(value='dog')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\b\\L<words>{e<=1}\\b'), Constant(value=' book dog cot desk ')], keywords=[keyword(arg='words', value=Call(func=Attribute(value=Constant(value='cat dog'), attr='split', ctx=Load()), args=[], keywords=[]))]), List(elts=[Constant(value=' dog'), Constant(value='cot')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?e)\\b\\L<words>{e<=1}\\b'), Constant(value=' book dog cot desk ')], keywords=[keyword(arg='words', value=Call(func=Attribute(value=Constant(value='cat dog'), attr='split', ctx=Load()), args=[], keywords=[]))]), List(elts=[Constant(value='dog'), Constant(value='cot')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r)\\b\\L<words>{e<=1}\\b'), Constant(value=' book cot dog desk ')], keywords=[keyword(arg='words', value=Call(func=Attribute(value=Constant(value='cat dog'), attr='split', ctx=Load()), args=[], keywords=[]))]), List(elts=[Constant(value='dog '), Constant(value='cot')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?er)\\b\\L<words>{e<=1}\\b'), Constant(value=' book cot dog desk ')], keywords=[keyword(arg='words', value=Call(func=Attribute(value=Constant(value='cat dog'), attr='split', ctx=Load()), args=[], keywords=[]))]), List(elts=[Constant(value='dog'), Constant(value='cot')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r)\\b\\L<words>{e<=1}\\b'), Constant(value=' book dog cot desk ')], keywords=[keyword(arg='words', value=Call(func=Attribute(value=Constant(value='cat dog'), attr='split', ctx=Load()), args=[], keywords=[]))]), List(elts=[Constant(value='cot'), Constant(value='dog')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'\\b\\L<words>{e<=1}\\b'), Constant(value=b' book cot dog desk ')], keywords=[keyword(arg='words', value=Call(func=Attribute(value=Constant(value=b'cat dog'), attr='split', ctx=Load()), args=[], keywords=[]))]), List(elts=[Constant(value=b'cot'), Constant(value=b'dog')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'\\b\\L<words>{e<=1}\\b'), Constant(value=b' book dog cot desk ')], keywords=[keyword(arg='words', value=Call(func=Attribute(value=Constant(value=b'cat dog'), attr='split', ctx=Load()), args=[], keywords=[]))]), List(elts=[Constant(value=b' dog'), Constant(value=b'cot')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?e)\\b\\L<words>{e<=1}\\b'), Constant(value=b' book dog cot desk ')], keywords=[keyword(arg='words', value=Call(func=Attribute(value=Constant(value=b'cat dog'), attr='split', ctx=Load()), args=[], keywords=[]))]), List(elts=[Constant(value=b'dog'), Constant(value=b'cot')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?r)\\b\\L<words>{e<=1}\\b'), Constant(value=b' book cot dog desk ')], keywords=[keyword(arg='words', value=Call(func=Attribute(value=Constant(value=b'cat dog'), attr='split', ctx=Load()), args=[], keywords=[]))]), List(elts=[Constant(value=b'dog '), Constant(value=b'cot')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?er)\\b\\L<words>{e<=1}\\b'), Constant(value=b' book cot dog desk ')], keywords=[keyword(arg='words', value=Call(func=Attribute(value=Constant(value=b'cat dog'), attr='split', ctx=Load()), args=[], keywords=[]))]), List(elts=[Constant(value=b'dog'), Constant(value=b'cot')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?r)\\b\\L<words>{e<=1}\\b'), Constant(value=b' book dog cot desk ')], keywords=[keyword(arg='words', value=Call(func=Attribute(value=Constant(value=b'cat dog'), attr='split', ctx=Load()), args=[], keywords=[]))]), List(elts=[Constant(value=b'cot'), Constant(value=b'dog')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(\\w+) (\\1{e<=1})'), Constant(value='foo fou')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='foo'), Constant(value='fou')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)(\\2{e<=1}) (\\w+)'), Constant(value='foo fou')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='foo'), Constant(value='fou')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value=b'(\\w+) (\\1{e<=1})'), Constant(value=b'foo fou')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=b'foo'), Constant(value=b'fou')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?:(?:QR)+){e}'), Constant(value='abcde')], keywords=[]), List(elts=[Constant(value='abcde'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?:Q+){e}'), Constant(value='abc')], keywords=[]), List(elts=[Constant(value='abc'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:service detection){0<e<5}'), Constant(value='servic detection')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=16)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:service detection){0<e<5}'), Constant(value='service detect')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=14)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:service detection){0<e<5}'), Constant(value='service detecti')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=15)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:service detection){0<e<5}'), Constant(value='service detection')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:service detection){0<e<5}'), Constant(value='in service detection')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=20)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?:cats|cat){e<=1}'), Constant(value='cat')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?e)(?:cats|cat){e<=1}'), Constant(value='cat')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?:cat|cats){e<=1}'), Constant(value='cats')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=1), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?e)(?:cat|cats){e<=1}'), Constant(value='cats')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?:cat){e<=1} (?:cat){e<=1}'), Constant(value='cat cot')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?e)(GTTTTCATTCCTCATA){i<=4,d<=4,s<=4,i+d+s<=8}'), Constant(value='ATTATTTATTTTTCATA')], keywords=[]), attr='fuzzy_changes', ctx=Load()), Tuple(elts=[List(elts=[Constant(value=0), Constant(value=6), Constant(value=10), Constant(value=11)], ctx=Load()), List(elts=[Constant(value=3)], ctx=Load()), List(elts=[], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:fo){e<=1}|(?:fo){e<=2}'), Constant(value='FO')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_recursive', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(\\w)(?:(?R)|(\\w?))\\1'), Constant(value='xx')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='xx'), Constant(value='x'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(\\w)(?:(?R)|(\\w?))\\1'), Constant(value='aba')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='aba'), Constant(value='a'), Constant(value='b')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(\\w)(?:(?R)|(\\w?))\\1'), Constant(value='abba')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='abba'), Constant(value='a'), Constant(value=None)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(\\w)(?:(?R)|(\\w?))\\1'), Constant(value='kayak')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='kayak'), Constant(value='k'), Constant(value=None)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(\\w)(?:(?R)|(\\w?))\\1'), Constant(value='paper')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='pap'), Constant(value='p'), Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(\\w)(?:(?R)|(\\w?))\\1'), Constant(value='dontmatchme')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\2(?:(\\w?)|(?R))(\\w)'), Constant(value='xx')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='xx'), Constant(value=''), Constant(value='x')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\2(?:(\\w?)|(?R))(\\w)'), Constant(value='aba')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='aba'), Constant(value='b'), Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\2(?:(\\w?)|(?R))(\\w)'), Constant(value='abba')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='abba'), Constant(value=None), Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\2(?:(\\w?)|(?R))(\\w)'), Constant(value='kayak')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='kayak'), Constant(value=None), Constant(value='k')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\2(?:(\\w?)|(?R))(\\w)'), Constant(value='paper')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='pap'), Constant(value='a'), Constant(value='p')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\2(?:(\\w?)|(?R))(\\w)'), Constant(value='dontmatchme')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\(((?>[^()]+)|(?R))*\\)'), Constant(value='(ab(cd)ef)')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='(ab(cd)ef)'), Constant(value='ef')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\(((?>[^()]+)|(?R))*\\)'), Constant(value='(ab(cd)ef)')], keywords=[]), attr='captures', ctx=Load()), args=[Constant(value=1)], keywords=[]), List(elts=[Constant(value='ab'), Constant(value='cd'), Constant(value='(cd)'), Constant(value='ef')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\(((?R)|(?>[^()]+))*\\)'), Constant(value='(ab(cd)ef)')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='(ab(cd)ef)'), Constant(value='ab')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\(((?R)|(?>[^()]+))*\\)'), Constant(value='(ab(cd)ef)')], keywords=[]), attr='captures', ctx=Load()), args=[Constant(value=1)], keywords=[]), List(elts=[Constant(value='ef'), Constant(value='cd'), Constant(value='(cd)'), Constant(value='ab')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\(([^()]+|(?R))*\\)'), Constant(value='some text (a(b(c)d)e) more text')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='(a(b(c)d)e)'), Constant(value='e')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\(((?R)|[^()]+)*\\)'), Constant(value='some text (a(b(c)d)e) more text')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='(a(b(c)d)e)'), Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(foo(\\(((?:(?>[^()]+)|(?2))*)\\)))'), Constant(value='foo(bar(baz)+baz(bop))')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='foo(bar(baz)+baz(bop))'), Constant(value='foo(bar(baz)+baz(bop))'), Constant(value='(bar(baz)+baz(bop))'), Constant(value='bar(baz)+baz(bop)')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)(foo(\\(((?:(?2)|(?>[^()]+))*)\\)))'), Constant(value='foo(bar(baz)+baz(bop))')], keywords=[]), slice=Slice(), ctx=Load()), Tuple(elts=[Constant(value='foo(bar(baz)+baz(bop))'), Constant(value='foo(bar(baz)+baz(bop))'), Constant(value='(bar(baz)+baz(bop))'), Constant(value='bar(baz)+baz(bop)')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='rgx', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='^\\s*(<\\s*([a-zA-Z:]+)(?:\\s*[a-zA-Z:]*\\s*=\\s*(?:\'[^\']*\'|"[^"]*"))*\\s*(/\\s*)?>(?:[^<>]*|(?1))*(?(3)|<\\s*/\\s*\\2\\s*>))\\s*$')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='rgx', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='<foo><bar></bar></foo>')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='rgx', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='<foo><bar></foo></bar>')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='rgx', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='<foo><bar/></foo>')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='rgx', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='<foo><bar></foo>')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='rgx', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='<foo bar=baz/>')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='rgx', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='<foo bar="baz">')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='rgx', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='<foo bar="baz"/>')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='rgx', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='<    fooo   /  >')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='rgx', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='foo<foo/>')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='rgx', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='<foo>foo</foo>')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='rgx', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='<foo><bar/>foo</foo>')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='rgx', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='<a><b><c></c></b></a>')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_copy', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='r', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Compare(left=Call(func=Attribute(value=Name(id='copy', ctx=Load()), attr='copy', ctx=Load()), args=[Name(id='r', ctx=Load())], keywords=[]), ops=[Is()], comparators=[Name(id='r', ctx=Load())])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Compare(left=Call(func=Attribute(value=Name(id='copy', ctx=Load()), attr='deepcopy', ctx=Load()), args=[Name(id='r', ctx=Load())], keywords=[]), ops=[Is()], comparators=[Name(id='r', ctx=Load())])], keywords=[])), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='r', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Compare(left=Call(func=Attribute(value=Name(id='copy', ctx=Load()), attr='copy', ctx=Load()), args=[Name(id='m', ctx=Load())], keywords=[]), ops=[IsNot()], comparators=[Name(id='m', ctx=Load())])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Compare(left=Call(func=Attribute(value=Name(id='copy', ctx=Load()), attr='deepcopy', ctx=Load()), args=[Name(id='m', ctx=Load())], keywords=[]), ops=[IsNot()], comparators=[Name(id='m', ctx=Load())])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Compare(left=Attribute(value=Name(id='m', ctx=Load()), attr='string', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])], keywords=[])), Assign(targets=[Name(id='m2', ctx=Store())], value=Call(func=Attribute(value=Name(id='copy', ctx=Load()), attr='copy', ctx=Load()), args=[Name(id='m', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='m2', ctx=Load()), attr='detach_string', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Compare(left=Attribute(value=Name(id='m', ctx=Load()), attr='string', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Compare(left=Attribute(value=Name(id='m2', ctx=Load()), attr='string', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])], keywords=[])), Assign(targets=[Name(id='it', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='.'), Constant(value='ab')], keywords=[])), Assign(targets=[Name(id='it2', ctx=Store())], value=Call(func=Attribute(value=Name(id='copy', ctx=Load()), attr='copy', ctx=Load()), args=[Name(id='it', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='it', ctx=Load())], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='it2', ctx=Load())], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='b')], keywords=[])), Assign(targets=[Name(id='it', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='.'), Constant(value='ab')], keywords=[])), Assign(targets=[Name(id='it2', ctx=Store())], value=Call(func=Attribute(value=Name(id='copy', ctx=Load()), attr='deepcopy', ctx=Load()), args=[Name(id='it', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='it', ctx=Load())], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='it2', ctx=Load())], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='b')], keywords=[])), Assign(targets=[Name(id='it', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='splititer', ctx=Load()), args=[Constant(value=' '), Constant(value='a b')], keywords=[])), Assign(targets=[Name(id='it2', ctx=Store())], value=Call(func=Attribute(value=Name(id='copy', ctx=Load()), attr='copy', ctx=Load()), args=[Name(id='it', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='next', ctx=Load()), args=[Name(id='it', ctx=Load())], keywords=[]), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='next', ctx=Load()), args=[Name(id='it2', ctx=Load())], keywords=[]), Constant(value='b')], keywords=[])), Assign(targets=[Name(id='it', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='splititer', ctx=Load()), args=[Constant(value=' '), Constant(value='a b')], keywords=[])), Assign(targets=[Name(id='it2', ctx=Store())], value=Call(func=Attribute(value=Name(id='copy', ctx=Load()), attr='deepcopy', ctx=Load()), args=[Name(id='it', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='next', ctx=Load()), args=[Name(id='it', ctx=Load())], keywords=[]), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='next', ctx=Load()), args=[Name(id='it2', ctx=Load())], keywords=[]), Constant(value='b')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_format', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='subf', ctx=Load()), args=[Constant(value='(\\w+) (\\w+)'), Constant(value='{0} => {2} {1}'), Constant(value='foo bar')], keywords=[]), Constant(value='foo bar => bar foo')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='subf', ctx=Load()), args=[Constant(value='(?<word1>\\w+) (?<word2>\\w+)'), Constant(value='{word2} {word1}'), Constant(value='foo bar')], keywords=[]), Constant(value='bar foo')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='subfn', ctx=Load()), args=[Constant(value='(\\w+) (\\w+)'), Constant(value='{0} => {2} {1}'), Constant(value='foo bar')], keywords=[]), Tuple(elts=[Constant(value='foo bar => bar foo'), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='subfn', ctx=Load()), args=[Constant(value='(?<word1>\\w+) (?<word2>\\w+)'), Constant(value='{word2} {word1}'), Constant(value='foo bar')], keywords=[]), Tuple(elts=[Constant(value='bar foo'), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(\\w+) (\\w+)'), Constant(value='foo bar')], keywords=[]), attr='expandf', ctx=Load()), args=[Constant(value='{0} => {2} {1}')], keywords=[]), Constant(value='foo bar => bar foo')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_fullmatch', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='abc'), Constant(value='abc')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='abc'), Constant(value='abcx')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='abc'), Constant(value='abcx')], keywords=[keyword(arg='endpos', value=Constant(value=3))])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='abc'), Constant(value='xabc')], keywords=[keyword(arg='pos', value=Constant(value=1))])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='abc'), Constant(value='xabcy')], keywords=[keyword(arg='pos', value=Constant(value=1))])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='abc'), Constant(value='xabcy')], keywords=[keyword(arg='pos', value=Constant(value=1)), keyword(arg='endpos', value=Constant(value=4))])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?r)abc'), Constant(value='abc')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?r)abc'), Constant(value='abcx')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?r)abc'), Constant(value='abcx')], keywords=[keyword(arg='endpos', value=Constant(value=3))])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?r)abc'), Constant(value='xabc')], keywords=[keyword(arg='pos', value=Constant(value=1))])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?r)abc'), Constant(value='xabcy')], keywords=[keyword(arg='pos', value=Constant(value=1))])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?r)abc'), Constant(value='xabcy')], keywords=[keyword(arg='pos', value=Constant(value=1)), keyword(arg='endpos', value=Constant(value=4))])], keywords=[]), Constant(value=True)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_issue_18468', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='y'), Constant(value='a'), Constant(value='xyz')], keywords=[]), Constant(value='xaz')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='y'), Call(func=Name(id='StrSubclass', ctx=Load()), args=[Constant(value='a')], keywords=[]), Call(func=Name(id='StrSubclass', ctx=Load()), args=[Constant(value='xyz')], keywords=[])], keywords=[]), Constant(value='xaz')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value=b'y'), Constant(value=b'a'), Constant(value=b'xyz')], keywords=[]), Constant(value=b'xaz')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value=b'y'), Call(func=Name(id='BytesSubclass', ctx=Load()), args=[Constant(value=b'a')], keywords=[]), Call(func=Name(id='BytesSubclass', ctx=Load()), args=[Constant(value=b'xyz')], keywords=[])], keywords=[]), Constant(value=b'xaz')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value=b'y'), Call(func=Name(id='bytearray', ctx=Load()), args=[Constant(value=b'a')], keywords=[]), Call(func=Name(id='bytearray', ctx=Load()), args=[Constant(value=b'xyz')], keywords=[])], keywords=[]), Constant(value=b'xaz')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value=b'y'), Call(func=Name(id='memoryview', ctx=Load()), args=[Constant(value=b'a')], keywords=[]), Call(func=Name(id='memoryview', ctx=Load()), args=[Constant(value=b'xyz')], keywords=[])], keywords=[]), Constant(value=b'xaz')], keywords=[])), For(target=Name(id='string', ctx=Store()), iter=Tuple(elts=[Constant(value=':a:b::c'), Call(func=Name(id='StrSubclass', ctx=Load()), args=[Constant(value=':a:b::c')], keywords=[])], ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=':'), Name(id='string', ctx=Load())], keywords=[]), List(elts=[Constant(value=''), Constant(value='a'), Constant(value='b'), Constant(value=''), Constant(value='c')], ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=7), Constant(value=0)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=':*'), Name(id='string', ctx=Load())], keywords=[]), List(elts=[Constant(value=''), Constant(value=''), Constant(value='a'), Constant(value=''), Constant(value='b'), Constant(value=''), Constant(value='c'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(:*)'), Name(id='string', ctx=Load())], keywords=[]), List(elts=[Constant(value=''), Constant(value=':'), Constant(value=''), Constant(value=''), Constant(value='a'), Constant(value=':'), Constant(value=''), Constant(value=''), Constant(value='b'), Constant(value='::'), Constant(value=''), Constant(value=''), Constant(value='c'), Constant(value=''), Constant(value='')], ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=':*'), Name(id='string', ctx=Load())], keywords=[]), List(elts=[Constant(value=''), Constant(value='a'), Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='(:*)'), Name(id='string', ctx=Load())], keywords=[]), List(elts=[Constant(value=''), Constant(value=':'), Constant(value='a'), Constant(value=':'), Constant(value='b'), Constant(value='::'), Constant(value='c')], ctx=Load())], keywords=[]))])], orelse=[]), For(target=Name(id='string', ctx=Store()), iter=Tuple(elts=[Constant(value=b':a:b::c'), Call(func=Name(id='BytesSubclass', ctx=Load()), args=[Constant(value=b':a:b::c')], keywords=[]), Call(func=Name(id='bytearray', ctx=Load()), args=[Constant(value=b':a:b::c')], keywords=[]), Call(func=Name(id='memoryview', ctx=Load()), args=[Constant(value=b':a:b::c')], keywords=[])], ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=b':'), Name(id='string', ctx=Load())], keywords=[]), List(elts=[Constant(value=b''), Constant(value=b'a'), Constant(value=b'b'), Constant(value=b''), Constant(value=b'c')], ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=7), Constant(value=0)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=b':*'), Name(id='string', ctx=Load())], keywords=[]), List(elts=[Constant(value=b''), Constant(value=b''), Constant(value=b'a'), Constant(value=b''), Constant(value=b'b'), Constant(value=b''), Constant(value=b'c'), Constant(value=b'')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=b'(:*)'), Name(id='string', ctx=Load())], keywords=[]), List(elts=[Constant(value=b''), Constant(value=b':'), Constant(value=b''), Constant(value=b''), Constant(value=b'a'), Constant(value=b':'), Constant(value=b''), Constant(value=b''), Constant(value=b'b'), Constant(value=b'::'), Constant(value=b''), Constant(value=b''), Constant(value=b'c'), Constant(value=b''), Constant(value=b'')], ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=b':*'), Name(id='string', ctx=Load())], keywords=[]), List(elts=[Constant(value=b''), Constant(value=b'a'), Constant(value=b'b'), Constant(value=b'c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=b'(:*)'), Name(id='string', ctx=Load())], keywords=[]), List(elts=[Constant(value=b''), Constant(value=b':'), Constant(value=b'a'), Constant(value=b':'), Constant(value=b'b'), Constant(value=b'::'), Constant(value=b'c')], ctx=Load())], keywords=[]))])], orelse=[]), For(target=Name(id='string', ctx=Store()), iter=Tuple(elts=[Constant(value='a:b::c:::d'), Call(func=Name(id='StrSubclass', ctx=Load()), args=[Constant(value='a:b::c:::d')], keywords=[])], ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=':+'), Name(id='string', ctx=Load())], keywords=[]), List(elts=[Constant(value=':'), Constant(value='::'), Constant(value=':::')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(:+)'), Name(id='string', ctx=Load())], keywords=[]), List(elts=[Constant(value=':'), Constant(value='::'), Constant(value=':::')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(:)(:*)'), Name(id='string', ctx=Load())], keywords=[]), List(elts=[Tuple(elts=[Constant(value=':'), Constant(value='')], ctx=Load()), Tuple(elts=[Constant(value=':'), Constant(value=':')], ctx=Load()), Tuple(elts=[Constant(value=':'), Constant(value='::')], ctx=Load())], ctx=Load())], keywords=[]))], orelse=[]), For(target=Name(id='string', ctx=Store()), iter=Tuple(elts=[Constant(value=b'a:b::c:::d'), Call(func=Name(id='BytesSubclass', ctx=Load()), args=[Constant(value=b'a:b::c:::d')], keywords=[]), Call(func=Name(id='bytearray', ctx=Load()), args=[Constant(value=b'a:b::c:::d')], keywords=[]), Call(func=Name(id='memoryview', ctx=Load()), args=[Constant(value=b'a:b::c:::d')], keywords=[])], ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b':+'), Name(id='string', ctx=Load())], keywords=[]), List(elts=[Constant(value=b':'), Constant(value=b'::'), Constant(value=b':::')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(:+)'), Name(id='string', ctx=Load())], keywords=[]), List(elts=[Constant(value=b':'), Constant(value=b'::'), Constant(value=b':::')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTypedEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(:)(:*)'), Name(id='string', ctx=Load())], keywords=[]), List(elts=[Tuple(elts=[Constant(value=b':'), Constant(value=b'')], ctx=Load()), Tuple(elts=[Constant(value=b':'), Constant(value=b':')], ctx=Load()), Tuple(elts=[Constant(value=b':'), Constant(value=b'::')], ctx=Load())], ctx=Load())], keywords=[]))], orelse=[]), For(target=Name(id='string', ctx=Store()), iter=Tuple(elts=[Constant(value='a'), Call(func=Name(id='StrSubclass', ctx=Load()), args=[Constant(value='a')], keywords=[])], ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a'), Name(id='string', ctx=Load())], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)'), Name(id='string', ctx=Load())], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)'), Name(id='string', ctx=Load())], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0)], keywords=[]), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)'), Name(id='string', ctx=Load())], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=1)], keywords=[]), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(a)'), Name(id='string', ctx=Load())], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=1), Constant(value=1)], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value='a')], ctx=Load())], keywords=[]))], orelse=[]), For(target=Name(id='string', ctx=Store()), iter=Tuple(elts=[Constant(value=b'a'), Call(func=Name(id='BytesSubclass', ctx=Load()), args=[Constant(value=b'a')], keywords=[]), Call(func=Name(id='bytearray', ctx=Load()), args=[Constant(value=b'a')], keywords=[]), Call(func=Name(id='memoryview', ctx=Load()), args=[Constant(value=b'a')], keywords=[])], ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'a'), Name(id='string', ctx=Load())], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(a)'), Name(id='string', ctx=Load())], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=b'a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(a)'), Name(id='string', ctx=Load())], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0)], keywords=[]), Constant(value=b'a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(a)'), Name(id='string', ctx=Load())], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=1)], keywords=[]), Constant(value=b'a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value=b'(a)'), Name(id='string', ctx=Load())], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=1), Constant(value=1)], keywords=[]), Tuple(elts=[Constant(value=b'a'), Constant(value=b'a')], ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_partial', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='ab'), Constant(value='a')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='ab'), Constant(value='a')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='cats'), Constant(value='cat')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='cats'), Constant(value='cat')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='cats'), Constant(value='catch')], keywords=[keyword(arg='partial', value=Constant(value=True))]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='abc\\w{3}'), Constant(value='abcdef')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='abc\\w{3}'), Constant(value='abcdef')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='abc\\w{3}'), Constant(value='abcde')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='abc\\w{3}'), Constant(value='abcde')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=5)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\d{4}$'), Constant(value='1234')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\L<words>'), Constant(value='post')], keywords=[keyword(arg='partial', value=Constant(value=True)), keyword(arg='words', value=List(elts=[Constant(value='post')], ctx=Load()))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\L<words>'), Constant(value='post')], keywords=[keyword(arg='partial', value=Constant(value=True)), keyword(arg='words', value=List(elts=[Constant(value='post')], ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=4)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\L<words>'), Constant(value='pos')], keywords=[keyword(arg='partial', value=Constant(value=True)), keyword(arg='words', value=List(elts=[Constant(value='post')], ctx=Load()))]), attr='partial', ctx=Load()), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\L<words>'), Constant(value='pos')], keywords=[keyword(arg='partial', value=Constant(value=True)), keyword(arg='words', value=List(elts=[Constant(value='post')], ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?fi)\\L<words>'), Constant(value='POST')], keywords=[keyword(arg='partial', value=Constant(value=True)), keyword(arg='words', value=List(elts=[Constant(value='poﬆ')], ctx=Load()))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?fi)\\L<words>'), Constant(value='POST')], keywords=[keyword(arg='partial', value=Constant(value=True)), keyword(arg='words', value=List(elts=[Constant(value='poﬆ')], ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=4)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?fi)\\L<words>'), Constant(value='POS')], keywords=[keyword(arg='partial', value=Constant(value=True)), keyword(arg='words', value=List(elts=[Constant(value='poﬆ')], ctx=Load()))]), attr='partial', ctx=Load()), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?fi)\\L<words>'), Constant(value='POS')], keywords=[keyword(arg='partial', value=Constant(value=True)), keyword(arg='words', value=List(elts=[Constant(value='poﬆ')], ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?fi)\\L<words>'), Constant(value='poﬆ')], keywords=[keyword(arg='partial', value=Constant(value=True)), keyword(arg='words', value=List(elts=[Constant(value='POS')], ctx=Load()))]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[a-z]*4R$'), Constant(value='a')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[a-z]*4R$'), Constant(value='ab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[a-z]*4R$'), Constant(value='ab4')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[a-z]*4R$'), Constant(value='a4')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[a-z]*4R$'), Constant(value='a4R')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[a-z]*4R$'), Constant(value='4a')], keywords=[keyword(arg='partial', value=Constant(value=True))]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='[a-z]*4R$'), Constant(value='a44')], keywords=[keyword(arg='partial', value=Constant(value=True))]), Constant(value=None)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_hg_bugs', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?>b)')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='V1', ctx=Load()))])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='^((?>\\w+)|(?>\\s+))*$')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='V1', ctx=Load()))])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\((?:(?>[^()]+)|(?R))*\\)'), Constant(value='a(bcd(e)f)g(h)')], keywords=[]), List(elts=[Constant(value='(bcd(e)f)'), Constant(value='(h)')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\((?:(?:[^()]+)|(?R))*\\)'), Constant(value='a(bcd(e)f)g(h)')], keywords=[]), List(elts=[Constant(value='(bcd(e)f)'), Constant(value='(h)')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\((?:(?>[^()]+)|(?R))*\\)'), Constant(value='a(b(cd)e)f)g)h')], keywords=[]), List(elts=[Constant(value='(b(cd)e)')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\((?:(?>[^()]+)|(?R))*\\)'), Constant(value='a(bc(d(e)f)gh')], keywords=[]), List(elts=[Constant(value='(d(e)f)')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r)\\((?:(?>[^()]+)|(?R))*\\)'), Constant(value='a(bc(d(e)f)gh')], keywords=[]), List(elts=[Constant(value='(d(e)f)')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='group', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='\\((?:[^()]*+|(?0))*\\)'), Constant(value='a(b(c(de)fg)h')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='(c(de)fg)')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='a(bc)d'), Constant(value='abcd'), BinOp(left=Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='regex', ctx=Load()), attr='V1', ctx=Load()))], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0)], keywords=[]), Constant(value='abcd')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='([\\da-f:]+)$'), Constant(value='E'), BinOp(left=Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='regex', ctx=Load()), attr='V1', ctx=Load()))], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0)], keywords=[]), Constant(value='E')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='([\\da-f:]+)$'), Constant(value='e'), BinOp(left=Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='regex', ctx=Load()), attr='V1', ctx=Load()))], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0)], keywords=[]), Constant(value='e')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(?=ab(de))(abd)(e)'), Constant(value='abde')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='de'), Constant(value='abd'), Constant(value='e')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\ '), Constant(value=' ')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='X', ctx=Load()))])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(a|)\\1{2}b'), Constant(value='b')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Constant(value='b'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(a){0,0}'), Constant(value='abc')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Constant(value=''), Constant(value=None)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?>.*/)b'), Constant(value='a/b')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0)], keywords=[]), Constant(value='a/b')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?V0)((?i)blah)\\s+\\1'), Constant(value='blah BLAH')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Constant(value='blah BLAH'), Constant(value='blah')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?V1)((?i)blah)\\s+\\1'), Constant(value='blah BLAH')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(\\()?[^()]+(?(1)\\)|)'), Constant(value='(abcd')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0)], keywords=[]), Constant(value='abcd')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(a*)*'), Constant(value='a')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=1)], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(a*)*'), Constant(value='aa')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=1)], keywords=[]), Tuple(elts=[Constant(value=2), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(a*)*'), Constant(value='aaa')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=1)], keywords=[]), Tuple(elts=[Constant(value=3), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='a(?#xxx)*'), Constant(value='aaa')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='aaa')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?=abc){3}abc'), Constant(value='abcabcabc')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(?:a(?:(?:))+)+'), Constant(value='a')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(?:a(?:(?:))+)+'), Constant(value='aa')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='a(?x: b c )d'), Constant(value='abcd')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0)], keywords=[]), Constant(value='abcd')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='a#comment\n*'), Constant(value='aaa')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='X', ctx=Load()))]), attr='group', ctx=Load()), args=[Constant(value=0)], keywords=[]), Constant(value='aaa')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?V1)(a(?(1)\\1)){1}'), Constant(value='aaaaaaaaaa')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?V1)(a(?(1)\\1)){2}'), Constant(value='aaaaaaaaaa')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=3)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?V1)(a(?(1)\\1)){3}'), Constant(value='aaaaaaaaaa')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load()), Tuple(elts=[Constant(value=3), Constant(value=6)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?V1)(a(?(1)\\1)){4}'), Constant(value='aaaaaaaaaa')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=10)], ctx=Load()), Tuple(elts=[Constant(value=6), Constant(value=10)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?V1)(a)(?<=b(?1))'), Constant(value='baz')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0)], keywords=[]), Constant(value='a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?fi)\\L<keywords>'), Constant(value='POST, Post, post, poſt, poﬆ, and poﬅ')], keywords=[keyword(arg='keywords', value=List(elts=[Constant(value='post'), Constant(value='pos')], ctx=Load()))]), List(elts=[Constant(value='POST'), Constant(value='Post'), Constant(value='post'), Constant(value='poſt'), Constant(value='poﬆ'), Constant(value='poﬅ')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?fi)pos|post'), Constant(value='POST, Post, post, poſt, poﬆ, and poﬅ')], keywords=[]), List(elts=[Constant(value='POS'), Constant(value='Pos'), Constant(value='pos'), Constant(value='poſ'), Constant(value='poﬆ'), Constant(value='poﬅ')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?fi)post|pos'), Constant(value='POST, Post, post, poſt, poﬆ, and poﬅ')], keywords=[]), List(elts=[Constant(value='POST'), Constant(value='Post'), Constant(value='post'), Constant(value='poſt'), Constant(value='poﬆ'), Constant(value='poﬅ')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?fi)post|another'), Constant(value='POST, Post, post, poſt, poﬆ, and poﬅ')], keywords=[]), List(elts=[Constant(value='POST'), Constant(value='Post'), Constant(value='post'), Constant(value='poſt'), Constant(value='poﬆ'), Constant(value='poﬅ')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?V1)((a)(?1)|(?2))'), Constant(value='a')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0), Constant(value=1), Constant(value=2)], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value='a'), Constant(value=None)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?V1)(\\1xx|){6}'), Constant(value='xx')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load()), Tuple(elts=[Constant(value=2), Constant(value=2)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(a|)+'), Constant(value='a')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(a|)*\\d'), BinOp(left=Constant(value='a'), op=Mult(), right=Constant(value=80))], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^(?:a?b?)*$'), Constant(value='ac')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='UNDEF_CHAR_NAME', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='\\N{1}')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\Z'), Constant(value='a\na\n')], keywords=[]), attr='span', ctx=Load()), args=[Constant(value=0)], keywords=[]), Tuple(elts=[Constant(value=4), Constant(value=4)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(q1|.)*(q2|.)*(x(a|bc)*y){2,}'), Constant(value='xayxay')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0)], keywords=[]), Constant(value='xayxay')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?i)[^a]'), Constant(value='A')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?i)[[:ascii:]]'), Constant(value='K')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='((a|b(?1)c){3,5})'), Constant(value='baaaaca')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0), Constant(value=1), Constant(value=2)], keywords=[]), Tuple(elts=[Constant(value='aaaa'), Constant(value='aaaa'), Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?<=:\\S+ )\\w+'), Constant(value=':9 abc :10 def')], keywords=[]), List(elts=[Constant(value='abc'), Constant(value='def')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?<=:\\S* )\\w+'), Constant(value=':9 abc :10 def')], keywords=[]), List(elts=[Constant(value='abc'), Constant(value='def')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?<=:\\S+? )\\w+'), Constant(value=':9 abc :10 def')], keywords=[]), List(elts=[Constant(value='abc'), Constant(value='def')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?<=:\\S*? )\\w+'), Constant(value=':9 abc :10 def')], keywords=[]), List(elts=[Constant(value='abc'), Constant(value='def')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:fe)?male'), Constant(value='female')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='female')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='group', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(fe)?male: h(?(1)(er)|(is)) (\\w+)'), Constant(value='female: her dog; male: his cat. asdsasda')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='female: her dog'), Constant(value='male: his cat')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?<rec>\\((?:[^()]++|(?&rec))*\\))'), Constant(value='aaa(((1+0)+1)+1)bbb')], keywords=[]), attr='captures', ctx=Load()), args=[Constant(value='rec')], keywords=[]), List(elts=[Constant(value='(1+0)'), Constant(value='((1+0)+1)'), Constant(value='(((1+0)+1)+1)')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='BAD_ESCAPE', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\'), Constant(value='x')], keywords=[]))], keywords=[])), Assign(targets=[Name(id='fz', ctx=Store())], value=Constant(value='(CAGCCTCCCATTTCAGAATATACATCC){1<e<=2}')), Assign(targets=[Name(id='seq', ctx=Store())], value=Constant(value='tcagacgagtgcgttgtaaaacgacggccagtCAGCCTCCCATTCAGAATATACATCCcgacggccagttaaaaacaatgccaaggaggtcatagctgtttcctgccagttaaaaacaatgccaaggaggtcatagctgtttcctgacgcactcgtctgagcgggctggcaagg')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Name(id='fz', ctx=Load()), Name(id='seq', ctx=Load()), Attribute(value=Name(id='regex', ctx=Load()), attr='BESTMATCH', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='tCAGCCTCCCATTCAGAATATACATCC')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='c..+/c'), Constant(value='cA/c\ncAb/c')], keywords=[]), List(elts=[Constant(value='cAb/c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(\\w+)'), Constant(value='[\\1]'), Constant(value='अन्\u200dन ന്\u200d किन'), Attribute(value=Name(id='regex', ctx=Load()), attr='WORD', ctx=Load())], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='[अन्\u200dन] [ന്\u200d] [किन]')], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='.*a.*ba.*aa'), Constant(value='ababba')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?<x>a(?<x>b))'), Constant(value='ab')], keywords=[]), attr='spans', ctx=Load()), args=[Constant(value='x')], keywords=[]), List(elts=[Tuple(elts=[Constant(value=1), Constant(value=2)], ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(-)'), Lambda(args=arguments(posonlyargs=[], args=[arg(arg='m')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='expand', ctx=Load()), args=[Constant(value='x')], keywords=[])), Constant(value='a-b-c')], keywords=[]), Constant(value='axbxc')], keywords=[])), Assign(targets=[Name(id='rx', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='\\bt(est){i<2}')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='V1', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='rx', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='Some text')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='rx', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='Some text')], keywords=[]), List(elts=[], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='MULTIPLE_REPEAT', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='.???')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Constant(value='foo!?')], keywords=[keyword(arg='special_only', value=Constant(value=False))]), Constant(value='foo\\!\\?')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Constant(value='foo!?')], keywords=[keyword(arg='special_only', value=Constant(value=True))]), Constant(value='foo!\\?')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Constant(value='foo!?')], keywords=[]), Constant(value='foo!\\?')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Constant(value=b'foo!?')], keywords=[keyword(arg='special_only', value=Constant(value=False))]), Constant(value=b'foo\\!\\?')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Constant(value=b'foo!?')], keywords=[keyword(arg='special_only', value=Constant(value=True))]), Constant(value=b'foo!\\?')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Constant(value=b'foo!?')], keywords=[]), Constant(value=b'foo!\\?')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^([^z]*(?:WWWi|W))?$'), Constant(value='WWWi')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='WWWi')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^([^z]*(?:WWWi|w))?$'), Constant(value='WWWi')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='WWWi')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^([^z]*?(?:WWWi|W))?$'), Constant(value='WWWi')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='WWWi')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='pat', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='xxx')], keywords=[keyword(arg='flags', value=BinOp(left=Attribute(value=Name(id='regex', ctx=Load()), attr='FULLCASE', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='regex', ctx=Load()), attr='UNICODE', ctx=Load())))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Call(func=Attribute(value=Name(id='x', ctx=Load()), attr='group', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='yxxx')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='xxx')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='yxxx')], keywords=[]), List(elts=[Constant(value='xxx')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='raw', ctx=Store())], value=Constant(value='yxxx')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Call(func=Attribute(value=Name(id='x', ctx=Load()), attr='group', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='finditer', ctx=Load()), args=[Name(id='raw', ctx=Load())], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='xxx')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='findall', ctx=Load()), args=[Name(id='raw', ctx=Load())], keywords=[]), List(elts=[Constant(value='xxx')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='pat', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='xxx')], keywords=[keyword(arg='flags', value=BinOp(left=BinOp(left=Attribute(value=Name(id='regex', ctx=Load()), attr='FULLCASE', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='regex', ctx=Load()), attr='IGNORECASE', ctx=Load())), op=BitOr(), right=Attribute(value=Name(id='regex', ctx=Load()), attr='UNICODE', ctx=Load())))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Call(func=Attribute(value=Name(id='x', ctx=Load()), attr='group', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='yxxx')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='xxx')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='yxxx')], keywords=[]), List(elts=[Constant(value='xxx')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='raw', ctx=Store())], value=Constant(value='yxxx')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Call(func=Attribute(value=Name(id='x', ctx=Load()), attr='group', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='finditer', ctx=Load()), args=[Name(id='raw', ctx=Load())], keywords=[]), ifs=[], is_async=0)]), List(elts=[Constant(value='xxx')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pat', ctx=Load()), attr='findall', ctx=Load()), args=[Name(id='raw', ctx=Load())], keywords=[]), List(elts=[Constant(value='xxx')], ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=7), Constant(value=0)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?V0).*'), Constant(value='x'), Constant(value='test')], keywords=[]), Constant(value='xx')], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?V0).*'), Constant(value='x'), Constant(value='test')], keywords=[]), Constant(value='x')], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?V1).*'), Constant(value='x'), Constant(value='test')], keywords=[]), Constant(value='xx')], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=7), Constant(value=0)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?V0).*?'), Constant(value='|'), Constant(value='test')], keywords=[]), Constant(value='|||||||||')], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?V0).*?'), Constant(value='|'), Constant(value='test')], keywords=[]), Constant(value='|t|e|s|t|')], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?V1).*?'), Constant(value='|'), Constant(value='test')], keywords=[]), Constant(value='|||||||||')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='^(@)\\n(?!.*?@)(.*)'), Constant(value='\\1\\n==========\\n\\2'), Constant(value='@\n')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='DOTALL', ctx=Load()))]), Constant(value='@\n==========\n')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:cats|cat){e<=1}'), Constant(value='caz')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?e)(?:cats|cat){e<=1}'), Constant(value='caz')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?b)(?:cats|cat){e<=1}'), Constant(value='caz')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:cat){e<=1}'), Constant(value='caz')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?e)(?:cat){e<=1}'), Constant(value='caz')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?b)(?:cat){e<=1}'), Constant(value='caz')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:cats){e<=2}'), Constant(value='c ats')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=1), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?e)(?:cats){e<=2}'), Constant(value='c ats')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=1), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?b)(?:cats){e<=2}'), Constant(value='c ats')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=1), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:cats){e<=2}'), Constant(value='c a ts')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=2), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?e)(?:cats){e<=2}'), Constant(value='c a ts')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=2), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?b)(?:cats){e<=2}'), Constant(value='c a ts')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=2), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:cats){e<=1}'), Constant(value='c ats')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=1), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?e)(?:cats){e<=1}'), Constant(value='c ats')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=1), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?b)(?:cats){e<=1}'), Constant(value='c ats')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=1), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\bof ([a-z]+) of \\1\\b'), Constant(value='To make use of one of these modules')], keywords=[]), List(elts=[], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='x'), Constant(value='\\g<0>'), Constant(value='x')], keywords=[]), Constant(value='x')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a'), Constant(value='a'), Attribute(value=Name(id='regex', ctx=Load()), attr='DEBUG', ctx=Load())], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)[[b-e]--cd]'), Constant(value='abcdef')], keywords=[]), List(elts=[Constant(value='b'), Constant(value='e')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)[b-e--cd]'), Constant(value='abcdef')], keywords=[]), List(elts=[Constant(value='b'), Constant(value='e')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)[[bcde]--cd]'), Constant(value='abcdef')], keywords=[]), List(elts=[Constant(value='b'), Constant(value='e')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)[bcde--cd]'), Constant(value='abcdef')], keywords=[]), List(elts=[Constant(value='b'), Constant(value='e')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Constant(value='^unknown property at position 4$'), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='\\p{}')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:()|(?(1)()|z)){2}(?(2)a|z)'), Constant(value='a')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0), Constant(value=1), Constant(value=2)], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value=''), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:()|(?(1)()|z)){0,2}(?(2)a|z)'), Constant(value='a')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0), Constant(value=1), Constant(value=2)], keywords=[]), Tuple(elts=[Constant(value='a'), Constant(value=''), Constant(value='')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='chars', ctx=Store())], value=Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='chr', ctx=Load()), args=[Name(id='c', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='c', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=65536)], keywords=[]), ifs=[], is_async=0)])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[[:alnum:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[\\p{Alpha}\\p{PosixDigit}]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[[:alpha:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\p{Alpha}+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[[:ascii:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[\\p{InBasicLatin}]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[[:blank:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[\\p{gc=Space_Separator}\\t]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[[:cntrl:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\p{gc=Control}+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[[:digit:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[0-9]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[[:graph:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[^\\p{Space}\\p{gc=Control}\\p{gc=Surrogate}\\p{gc=Unassigned}]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[[:lower:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\p{Lower}+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[[:print:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)[\\p{Graph}\\p{Blank}--\\p{Cntrl}]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[[:punct:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?V1)[\\p{gc=Punctuation}\\p{gc=Symbol}--\\p{Alpha}]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[[:space:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\p{Whitespace}+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[[:upper:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\p{Upper}+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[[:word:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[\\p{Alpha}\\p{gc=Mark}\\p{Digit}\\p{gc=Connector_Punctuation}\\p{Join_Control}]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[[:xdigit:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='[0-9A-Fa-f]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Assign(targets=[Name(id='chars', ctx=Store())], value=Call(func=Name(id='bytes', ctx=Load()), args=[Call(func=Name(id='range', ctx=Load()), args=[Constant(value=256)], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[[:alnum:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[\\p{Alpha}\\p{PosixDigit}]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[[:alpha:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)\\p{Alpha}+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[[:ascii:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[\\x00-\\x7F]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[[:blank:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[\\p{gc=Space_Separator}\\t]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[[:cntrl:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)\\p{gc=Control}+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[[:digit:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[0-9]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[[:graph:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[^\\p{Space}\\p{gc=Control}\\p{gc=Surrogate}\\p{gc=Unassigned}]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[[:lower:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)\\p{Lower}+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[[:print:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?aV1)[\\p{Graph}\\p{Blank}--\\p{Cntrl}]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[[:punct:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?aV1)[\\p{gc=Punctuation}\\p{gc=Symbol}--\\p{Alpha}]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[[:space:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)\\p{Whitespace}+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[[:upper:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)\\p{Upper}+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[[:word:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[\\p{Alpha}\\p{gc=Mark}\\p{Digit}\\p{gc=Connector_Punctuation}\\p{Join_Control}]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[[:xdigit:]]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value=b'(?a)[0-9A-Fa-f]+'), Name(id='chars', ctx=Load())], keywords=[])], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='ascii', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\X$'), Constant(value='ab℃')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[])], keywords=[]), Call(func=Name(id='ascii', ctx=Load()), args=[Constant(value='℃')], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='([^L]*)([^R]*R)'), Constant(value='LtR')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=''), Constant(value='LtR')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(.)'), Constant(value='x\\1y'), Constant(value='ab')], keywords=[]), Constant(value='xayxby')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?r)(.)'), Constant(value='x\\1y'), Constant(value='ab')], keywords=[]), Constant(value='xayxby')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='subf', ctx=Load()), args=[Constant(value='(.)'), Constant(value='x{1}y'), Constant(value='ab')], keywords=[]), Constant(value='xayxby')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='subf', ctx=Load()), args=[Constant(value='(?r)(.)'), Constant(value='x{1}y'), Constant(value='ab')], keywords=[]), Constant(value='xayxby')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(a)*abc'), Constant(value='ab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(a)*abc'), Constant(value='ab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='OXRG'), Constant(value='OOGOX')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=3), Constant(value=5)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='.XRG'), Constant(value='OOGOX')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=3), Constant(value=5)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='.{1,3}XRG'), Constant(value='OOGOX')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=5)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='R|R'), Constant(value='R')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(.)(?(1)(?!))'), Constant(value='xy')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(y)?(\\d)(?(1)\\b\\B)'), Constant(value='ax1y2z3b')], keywords=[]), List(elts=[Tuple(elts=[Constant(value=''), Constant(value='1')], ctx=Load()), Tuple(elts=[Constant(value=''), Constant(value='2')], ctx=Load()), Tuple(elts=[Constant(value=''), Constant(value='3')], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(y)?+(\\d)(?(1)\\b\\B)'), Constant(value='ax1y2z3b')], keywords=[]), List(elts=[Tuple(elts=[Constant(value=''), Constant(value='1')], ctx=Load()), Tuple(elts=[Constant(value=''), Constant(value='2')], ctx=Load()), Tuple(elts=[Constant(value=''), Constant(value='3')], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='span', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?i)(?:error){e}'), Constant(value='regex failure')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Tuple(elts=[Constant(value=0), Constant(value=5)], ctx=Load()), Tuple(elts=[Constant(value=5), Constant(value=10)], ctx=Load()), Tuple(elts=[Constant(value=10), Constant(value=13)], ctx=Load()), Tuple(elts=[Constant(value=13), Constant(value=13)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='span', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?fi)(?:error){e}'), Constant(value='regex failure')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Tuple(elts=[Constant(value=0), Constant(value=5)], ctx=Load()), Tuple(elts=[Constant(value=5), Constant(value=10)], ctx=Load()), Tuple(elts=[Constant(value=10), Constant(value=13)], ctx=Load()), Tuple(elts=[Constant(value=13), Constant(value=13)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?p)\\d+(\\w(\\d*)?|[eE]([+-]\\d+))'), Constant(value='10b12')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='10b12')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?p)\\d+(\\w(\\d*)?|[eE]([+-]\\d+))'), Constant(value='10E+12')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='10E+12')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?p)(\\w|ae|oe|ue|ss)'), Constant(value='ae')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='ae')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?p)one(self)?(selfsufficient)?'), Constant(value='oneselfsufficient')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='oneselfsufficient')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(ab\\Kcd)'), Constant(value='abcd')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Constant(value='cd'), Constant(value='abcd')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\w\\w\\K\\w\\w'), Constant(value='abcdefgh')], keywords=[]), List(elts=[Constant(value='cd'), Constant(value='gh')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(\\w\\w\\K\\w\\w)'), Constant(value='abcdefgh')], keywords=[]), List(elts=[Constant(value='abcd'), Constant(value='efgh')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)(ab\\Kcd)'), Constant(value='abcd')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Constant(value='ab'), Constant(value='abcd')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r)\\w\\w\\K\\w\\w'), Constant(value='abcdefgh')], keywords=[]), List(elts=[Constant(value='ef'), Constant(value='ab')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?r)(\\w\\w\\K\\w\\w)'), Constant(value='abcdefgh')], keywords=[]), List(elts=[Constant(value='efgh'), Constant(value='abcd')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?(DEFINE)(?<quant>\\d+)(?<item>\\w+))(?&quant) (?&item)'), Constant(value='5 elephants')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='5 elephants')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?&routine)(?(DEFINE)(?<routine>.))'), Constant(value='a')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value='routine')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?&routine)(?(DEFINE)(?<routine>.))'), Constant(value='a')], keywords=[]), attr='captures', ctx=Load()), args=[Constant(value='routine')], keywords=[]), List(elts=[Constant(value='a')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='12(*FAIL)|3'), Constant(value='123')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='3')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)12(*FAIL)|3'), Constant(value='123')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='3')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d+(*PRUNE)\\d'), Constant(value='123')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d+(?=(*PRUNE))\\d'), Constant(value='123')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='123')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d+(*PRUNE)bcd|[3d]'), Constant(value='123bcd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='123bcd')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d+(*PRUNE)bcd|[3d]'), Constant(value='123zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='d')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d+?(*PRUNE)bcd|[3d]'), Constant(value='123bcd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='3bcd')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d+?(*PRUNE)bcd|[3d]'), Constant(value='123zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='d')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d++(?<=3(*PRUNE))zzd|[4d]$'), Constant(value='123zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='123zzd')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d++(?<=3(*PRUNE))zzd|[4d]$'), Constant(value='124zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='d')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d++(?<=(*PRUNE)3)zzd|[4d]$'), Constant(value='124zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='d')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d++(?<=2(*PRUNE)3)zzd|[3d]$'), Constant(value='124zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='d')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\d(*PRUNE)\\d+'), Constant(value='123')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\d(?<=(*PRUNE))\\d+'), Constant(value='123')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='123')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\d+(*PRUNE)bcd|[3d]'), Constant(value='123bcd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='123bcd')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\d+(*PRUNE)bcd|[3d]'), Constant(value='123zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='d')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\d++(?<=3(*PRUNE))zzd|[4d]$'), Constant(value='123zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='123zzd')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\d++(?<=3(*PRUNE))zzd|[4d]$'), Constant(value='124zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='d')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\d++(?<=(*PRUNE)3)zzd|[4d]$'), Constant(value='124zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='d')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\d++(?<=2(*PRUNE)3)zzd|[3d]$'), Constant(value='124zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='d')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d+(*SKIP)bcd|[3d]'), Constant(value='123bcd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='123bcd')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d+(*SKIP)bcd|[3d]'), Constant(value='123zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='d')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d+?(*SKIP)bcd|[3d]'), Constant(value='123bcd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='3bcd')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d+?(*SKIP)bcd|[3d]'), Constant(value='123zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='d')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d++(?<=3(*SKIP))zzd|[4d]$'), Constant(value='123zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='123zzd')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d++(?<=3(*SKIP))zzd|[4d]$'), Constant(value='124zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='d')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d++(?<=(*SKIP)3)zzd|[4d]$'), Constant(value='124zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='d')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d++(?<=2(*SKIP)3)zzd|[3d]$'), Constant(value='124zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='d')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\d+(*SKIP)bcd|[3d]'), Constant(value='123bcd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='123bcd')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\d+(*SKIP)bcd|[3d]'), Constant(value='123zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='d')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\d++(?<=3(*SKIP))zzd|[4d]$'), Constant(value='123zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='123zzd')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\d++(?<=3(*SKIP))zzd|[4d]$'), Constant(value='124zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='d')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\d++(?<=(*SKIP)3)zzd|[4d]$'), Constant(value='124zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='d')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\d++(?<=2(*SKIP)3)zzd|[3d]$'), Constant(value='124zzd')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='d')], keywords=[])), Assign(targets=[Name(id='text', ctx=Store())], value=Constant(value='June 30, December 31, 2013 2012\nsome words follow:\nmore words and numbers 1,234,567 9,876,542\nmore words and numbers 1,234,567 9,876,542')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?<!\\d)(?>2014|2013 ?2012)'), Name(id='text', ctx=Load())], keywords=[])], keywords=[]), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='1(?>2)'), Constant(value='12')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?V1w)(?=(?=[^A-Z]*+[A-Z])(?=[^a-z]*+[a-z]))(?=\\D*+\\d)(?=\\p{Alphanumeric}*+\\P{Alphanumeric})\\A(?s:.){8,255}+\\Z'), Constant(value='AAaa11!!')], keywords=[]), slice=Constant(value=0), ctx=Load()), Constant(value='AAaa11!!')], keywords=[])), Assign(targets=[Name(id='TEST_REGEX', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?smx)\n(?(DEFINE)\n  (?<subcat>\n   ^,[^,]+,\n   )\n)\n\n# Group 2 is defined on this line\n^,([^,]+),\n\n(?:(?!(?&subcat)[\\r\\n]+(?&subcat)).)+\n')], keywords=[])), Assign(targets=[Name(id='TEST_DATA', ctx=Store())], value=Constant(value='\n,Cat 1,\n,Brand 1,\nsome\nthing\n,Brand 2,\nother\nthings\n,Cat 2,\n,Brand,\nSome\nthing\n')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='span', ctx=Load()), args=[Constant(value=1), Constant(value=2)], keywords=[]), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='TEST_REGEX', ctx=Load()), attr='finditer', ctx=Load()), args=[Name(id='TEST_DATA', ctx=Load())], keywords=[]), ifs=[], is_async=0)]), List(elts=[Tuple(elts=[Tuple(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load()), Tuple(elts=[Constant(value=2), Constant(value=7)], ctx=Load())], ctx=Load()), Tuple(elts=[Tuple(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load()), Tuple(elts=[Constant(value=54), Constant(value=59)], ctx=Load())], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(abcdefgh){e}'), Constant(value='******abcdefghijklmnopqrtuvwxyz'), Attribute(value=Name(id='regex', ctx=Load()), attr='BESTMATCH', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=6), Constant(value=14)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(abcdefghi){e}'), Constant(value='******abcdefghijklmnopqrtuvwxyz'), Attribute(value=Name(id='regex', ctx=Load()), attr='BESTMATCH', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=6), Constant(value=15)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:(?=\\d)\\d+\\b|\\w+)'), Constant(value='123abc')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?(?=\\d)\\d+\\b|\\w+)'), Constant(value='123abc')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?(?<=love\\s)you|(?<=hate\\s)her)'), Constant(value='I love you')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=7), Constant(value=10)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?(?<=love\\s)you|(?<=hate\\s)her)'), Constant(value="I love you but I don't hate her either")], keywords=[]), List(elts=[Constant(value='you'), Constant(value='her')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?p)a*(.*?)'), Constant(value='aaabbb')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Constant(value='aaabbb'), Constant(value='bbb')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?p)a*(.*)'), Constant(value='aaabbb')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[]), Tuple(elts=[Constant(value='aaabbb'), Constant(value='bbb')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?p)a*(.*?)'), Constant(value='\\1'), Constant(value='aaabbb')], keywords=[]), Constant(value='bbb')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(?p)a*(.*)'), Constant(value='\\1'), Constant(value='aaabbb')], keywords=[]), Constant(value='bbb')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?irV0)\\L<kw>'), Constant(value='21')], keywords=[keyword(arg='kw', value=List(elts=[Constant(value='1')], ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?irV1)\\L<kw>'), Constant(value='21')], keywords=[keyword(arg='kw', value=List(elts=[Constant(value='1')], ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='a|b'), Constant(value='111a222')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=3), Constant(value=4)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)a|b'), Constant(value='111a222')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=3), Constant(value=4)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?if)<(CLI)><\\1>'), Constant(value='<cli><cli>')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=10)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?if)<(CLI)><\\1>'), Constant(value='<cli><clI>')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=10)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?ifr)<\\1><(CLI)>'), Constant(value='<cli><clI>')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=10)], ctx=Load())], keywords=[])), Assign(targets=[Name(id='r', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='\\L<options>')], keywords=[keyword(arg='options', value=List(elts=[Constant(value='foo'), Constant(value='bar')], ctx=Load()))])), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='pickle', ctx=Load()), attr='dumps', ctx=Load()), args=[Name(id='r', ctx=Load())], keywords=[])), Assign(targets=[Name(id='r', ctx=Store())], value=Call(func=Attribute(value=Name(id='pickle', ctx=Load()), attr='loads', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='r', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='foo')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(x{6}){e<=1}'), Constant(value='xxxxxx')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='BESTMATCH', ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(x{6}){e<=1}'), Constant(value='xxxxx')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='BESTMATCH', ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=5)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(x{6}){e<=1}'), Constant(value='x')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='BESTMATCH', ctx=Load()))]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)(x{6}){e<=1}'), Constant(value='xxxxxx')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='BESTMATCH', ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=6)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)(x{6}){e<=1}'), Constant(value='xxxxx')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='BESTMATCH', ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=5)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)(x{6}){e<=1}'), Constant(value='x')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='BESTMATCH', ctx=Load()))]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value=b'00000\\0\\00\\^(\\00\\U05000000')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='regex', ctx=Load()), attr='error', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value=b'{e<l')], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='((?0)){e}')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='\x00?(?0){e}')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='((brown)|(lazy)){1<=e<=3} ((dog)|(fox)){1<=e<=3}'), Constant(value='The quick borwn fax jumped over the lzy hog'), Attribute(value=Name(id='regex', ctx=Load()), attr='ENHANCEMATCH', ctx=Load())], keywords=[]), List(elts=[Tuple(elts=[Constant(value='borwn'), Constant(value='borwn'), Constant(value=''), Constant(value='fax'), Constant(value=''), Constant(value='fax')], ctx=Load()), Tuple(elts=[Constant(value='lzy'), Constant(value=''), Constant(value='lzy'), Constant(value='hog'), Constant(value='hog'), Constant(value='')], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\d\\d\\d-\\d\\d-\\d\\d\\d\\d'), Constant(value="My SSN is 999-89-76, but don't tell.")], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=36), Constant(value=36)], ctx=Load())], keywords=[])), Assign(targets=[Name(id='upper_i', ctx=Store())], value=Constant(value='Й')), Assign(targets=[Name(id='lower_i', ctx=Store())], value=Constant(value='й')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='(?ui)'), op=Add(), right=Name(id='upper_i', ctx=Load())), Name(id='lower_i', ctx=Load())], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='(?ui)'), op=Add(), right=Name(id='lower_i', ctx=Load())), Name(id='upper_i', ctx=Load())], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='(?ai)'), op=Add(), right=Name(id='upper_i', ctx=Load())), Name(id='lower_i', ctx=Load())], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='(?ai)'), op=Add(), right=Name(id='lower_i', ctx=Load())), Name(id='upper_i', ctx=Load())], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='(?afi)'), op=Add(), right=Name(id='upper_i', ctx=Load())), Name(id='lower_i', ctx=Load())], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[BinOp(left=Constant(value='(?afi)'), op=Add(), right=Name(id='lower_i', ctx=Load())), Name(id='upper_i', ctx=Load())], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?i)\\L<aa>'), Constant(value='22')], keywords=[keyword(arg='aa', value=List(elts=[Constant(value='121'), Constant(value='22')], ctx=Load()))])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?ri)\\L<aa>'), Constant(value='22')], keywords=[keyword(arg='aa', value=List(elts=[Constant(value='121'), Constant(value='22')], ctx=Load()))])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fi)\\L<aa>'), Constant(value='22')], keywords=[keyword(arg='aa', value=List(elts=[Constant(value='121'), Constant(value='22')], ctx=Load()))])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?fri)\\L<aa>'), Constant(value='22')], keywords=[keyword(arg='aa', value=List(elts=[Constant(value='121'), Constant(value='22')], ctx=Load()))])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)\\1dog..(?<=(\\L<aa>))$'), Constant(value='ccdogcc')], keywords=[keyword(arg='aa', value=List(elts=[Constant(value='bcb'), Constant(value='cc')], ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=7)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?ir)\\1dog..(?<=(\\L<aa>))$'), Constant(value='ccdogcc')], keywords=[keyword(arg='aa', value=List(elts=[Constant(value='bcb'), Constant(value='cc')], ctx=Load()))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=7)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(2)(?:\\1{5}){e<=1}'), Constant(value='3222212')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=7)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(\\d)(?:\\1{5}){e<=1}'), Constant(value='3222212')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=7)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\A(?P<whole>(?>\\((?&whole)\\)|[+\\-]))\\Z'), Constant(value='((-))')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=5)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\A(?P<whole>(?>\\((?&whole)\\)|[+\\-]))\\Z'), Constant(value='((-)+)')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='x.*? (.).*\\1(.*)\\1'), Constant(value='x  |y| z|')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=9)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\.sr (.*?) (.)(.*)\\2(.*)\\2(.*)'), Constant(value='.sr  h |<nw>|<span class="locked">|')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=35)], ctx=Load())], keywords=[])), Assign(targets=[Name(id='a', ctx=Store())], value=Constant(value='"\\xF9\\x80\\xAEqdz\\x95L\\xA7\\x89[\\xFE \\x91)\\xF9]\\xDB\'\\x99\\x09=\\x00\\xFD\\x98\\x22\\xDD\\xF1\\xB6\\xC3 Z\\xB6gv\\xA5x\\x93P\\xE1r\\x14\\x8Cv\\x0C\\xC0w\\x15r\\xFFc%" ')), Assign(targets=[Name(id='py_regex_pattern', ctx=Store())], value=Constant(value='(?P<http_referer>((?>(?<!\\\\)(?>"(?>\\\\.|[^\\\\"]+)+"|""|(?>\'(?>\\\\.|[^\\\\\']+)+\')|\'\'|(?>`(?>\\\\.|[^\\\\`]+)+`)|``)))) (?P<useragent>((?>(?<!\\\\)(?>"(?>\\\\.|[^\\\\"]+)+"|""|(?>\'(?>\\\\.|[^\\\\\']+)+\')|\'\'|(?>`(?>\\\\.|[^\\\\`]+)+`)|``))))')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Name(id='py_regex_pattern', ctx=Load()), Name(id='a', ctx=Load())], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='foo(?<=foo)'), Constant(value='foo')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='foo(?<!foo)'), Constant(value='foo')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='foo(?<=foo|x)'), Constant(value='foo')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='foo(?<!foo|x)'), Constant(value='foo')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?(?=.*\\!.*)(?P<true>.*\\!\\w*\\:.*)|(?P<false>.*))'), Constant(value='!')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='\\w*(ea)\\w*|\\w*e(?!a)\\w*'), Constant(value='easier')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value='ea')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(^1234$){i,d}'), Constant(value='12234'), Attribute(value=Name(id='regex', ctx=Load()), attr='BESTMATCH', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=5)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(^1234$){i,d}'), Constant(value='12234'), Attribute(value=Name(id='regex', ctx=Load()), attr='BESTMATCH', ctx=Load())], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=1), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(^1234$){s,i,d}'), Constant(value='12234'), Attribute(value=Name(id='regex', ctx=Load()), attr='BESTMATCH', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=5)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(^1234$){s,i,d}'), Constant(value='12234'), Attribute(value=Name(id='regex', ctx=Load()), attr='BESTMATCH', ctx=Load())], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=1), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(^123$){s,i,d}'), Constant(value='xxxxxxxx123'), Attribute(value=Name(id='regex', ctx=Load()), attr='BESTMATCH', ctx=Load())], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=11)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(^123$){s,i,d}'), Constant(value='xxxxxxxx123'), Attribute(value=Name(id='regex', ctx=Load()), attr='BESTMATCH', ctx=Load())], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=8), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='a?yz'), Constant(value='xxxxyz')], keywords=[keyword(arg='flags', value=BinOp(left=Attribute(value=Name(id='regex', ctx=Load()), attr='FULLCASE', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='regex', ctx=Load()), attr='IGNORECASE', ctx=Load())))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=4), Constant(value=6)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?:(?![a-d]).)+'), Constant(value='abcdefgh')], keywords=[]), List(elts=[Constant(value='efgh')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?(DEFINE)(?P<mydef>(?:(?![a-d]).)))(?&mydef)+'), Constant(value='abcdefgh')], keywords=[]), List(elts=[Constant(value='efgh')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='((\\w{1,3})(\\.{2,10})){1,3}'), Constant(value='"Erm....yes. T..T...Thank you for that."')], keywords=[]), List(elts=[Tuple(elts=[Constant(value='Erm....'), Constant(value='Erm'), Constant(value='....')], ctx=Load()), Tuple(elts=[Constant(value='T...'), Constant(value='T'), Constant(value='...')], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='((\\w{1,3})(\\.{2,10})){3}'), Constant(value='"Erm....yes. T..T...Thank you for that."')], keywords=[]), List(elts=[], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='((\\w{1,3})(\\.{2,10})){2}'), Constant(value='"Erm....yes. T..T...Thank you for that."')], keywords=[]), List(elts=[Tuple(elts=[Constant(value='T...'), Constant(value='T'), Constant(value='...')], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='((\\w{1,3})(\\.{2,10})){1}'), Constant(value='"Erm....yes. T..T...Thank you for that."')], keywords=[]), List(elts=[Tuple(elts=[Constant(value='Erm....'), Constant(value='Erm'), Constant(value='....')], ctx=Load()), Tuple(elts=[Constant(value='T..'), Constant(value='T'), Constant(value='..')], ctx=Load()), Tuple(elts=[Constant(value='T...'), Constant(value='T'), Constant(value='...')], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:ESTONIA(?!\\w)){e<=1}'), Constant(value='ESTONIAN WORKERS')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='ESTONIAN')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:ESTONIA(?=\\W)){e<=1}'), Constant(value='ESTONIAN WORKERS')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='ESTONIAN')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:(?<!\\w)ESTONIA){e<=1}'), Constant(value='BLUB NESTONIA')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='NESTONIA')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:(?<=\\W)ESTONIA){e<=1}'), Constant(value='BLUB NESTONIA')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='NESTONIA')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)(?:ESTONIA(?!\\w)){e<=1}'), Constant(value='ESTONIAN WORKERS')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='ESTONIAN')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)(?:ESTONIA(?=\\W)){e<=1}'), Constant(value='ESTONIAN WORKERS')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='ESTONIAN')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)(?:(?<!\\w)ESTONIA){e<=1}'), Constant(value='BLUB NESTONIA')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='NESTONIA')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r)(?:(?<=\\W)ESTONIA){e<=1}'), Constant(value='BLUB NESTONIA')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='NESTONIA')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:A.*B.*CDE){e<=2}'), Constant(value='A B CYZ')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='A B CYZ')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:A.*B.*?CDE){e<=2}'), Constant(value='A B CYZ')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='A B CYZ')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:A.*?B.*CDE){e<=2}'), Constant(value='A B CYZ')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='A B CYZ')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:A.*?B.*?CDE){e<=2}'), Constant(value='A B CYZ')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='A B CYZ')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Constant(value=' ,0A[')], keywords=[keyword(arg='special_only', value=Constant(value=False)), keyword(arg='literal_spaces', value=Constant(value=False))]), Constant(value='\\ \\,0A\\[')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Constant(value=' ,0A[')], keywords=[keyword(arg='special_only', value=Constant(value=False)), keyword(arg='literal_spaces', value=Constant(value=True))]), Constant(value=' \\,0A\\[')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Constant(value=' ,0A[')], keywords=[keyword(arg='special_only', value=Constant(value=True)), keyword(arg='literal_spaces', value=Constant(value=False))]), Constant(value='\\ ,0A\\[')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Constant(value=' ,0A[')], keywords=[keyword(arg='special_only', value=Constant(value=True)), keyword(arg='literal_spaces', value=Constant(value=True))]), Constant(value=' ,0A\\[')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='escape', ctx=Load()), args=[Constant(value=' ,0A[')], keywords=[]), Constant(value='\\ ,0A\\[')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?(?=A)A|B)'), Constant(value='A')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?(?=A)A|B)'), Constant(value='B')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?(?=A)A|)'), Constant(value='B')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?(?=X)X|)'), Constant(value='')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?(?=X))'), Constant(value='')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?(DEFINE)(?<func>.))(?&func)'), Constant(value='abc')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=None)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?(DEFINE)(?<func>.))(?&func)'), Constant(value='abc')], keywords=[]), attr='groupdict', ctx=Load()), args=[], keywords=[]), Dict(keys=[Constant(value='func')], values=[Constant(value=None)])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?(DEFINE)(?<func>.))(?&func)'), Constant(value='abc')], keywords=[]), attr='capturesdict', ctx=Load()), args=[], keywords=[]), Dict(keys=[Constant(value='func')], values=[List(elts=[Constant(value='a')], ctx=Load())])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?(DEFINE)(?<func>.))(?=(?&func))'), Constant(value='abc')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=None)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?(DEFINE)(?<func>.))(?=(?&func))'), Constant(value='abc')], keywords=[]), attr='groupdict', ctx=Load()), args=[], keywords=[]), Dict(keys=[Constant(value='func')], values=[Constant(value=None)])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?(DEFINE)(?<func>.))(?=(?&func))'), Constant(value='abc')], keywords=[]), attr='capturesdict', ctx=Load()), args=[], keywords=[]), Dict(keys=[Constant(value='func')], values=[List(elts=[Constant(value='a')], ctx=Load())])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?(DEFINE)(?<func>.)).(?<=(?&func))'), Constant(value='abc')], keywords=[]), attr='groups', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=None)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?(DEFINE)(?<func>.)).(?<=(?&func))'), Constant(value='abc')], keywords=[]), attr='groupdict', ctx=Load()), args=[], keywords=[]), Dict(keys=[Constant(value='func')], values=[Constant(value=None)])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?(DEFINE)(?<func>.)).(?<=(?&func))'), Constant(value='abc')], keywords=[]), attr='capturesdict', ctx=Load()), args=[], keywords=[]), Dict(keys=[Constant(value='func')], values=[List(elts=[Constant(value='a')], ctx=Load())])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='ab(?#comment\\))cd'), Constant(value='abcd')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='[a-z]+ [a-z]*?:'), Constant(value='foo bar')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=7)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?r):[a-z]*? [a-z]+'), Constant(value='foo bar')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=7)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?u)\\p{Script:Beng}'), Constant(value='৯')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?u)\\p{Script:Bengali}'), Constant(value='৯')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?u)\\p{Script_Extensions:Bengali}'), Constant(value='৯')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?u)\\p{Script_Extensions:Beng}'), Constant(value='৯')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?u)\\p{Script_Extensions:Cakm}'), Constant(value='৯')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?u)\\p{Script_Extensions:Sylo}'), Constant(value='৯')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?u)\\p{scx:Latin}'), Constant(value='P')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?u)\\p{scx:Ahom}'), Constant(value='P')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?u)\\p{scx:Common}'), Constant(value='4')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?u)\\p{scx:Caucasian_Albanian}'), Constant(value='4')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?u)\\p{scx:Arabic}'), Constant(value='ت')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?u)\\p{scx:Balinese}'), Constant(value='ت')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?u)\\p{scx:Devanagari}'), Constant(value='ज')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?u)\\p{scx:Batak}'), Constant(value='ज')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?P<x>.)*(?&x)'), Constant(value='abc')], keywords=[]), attr='captures', ctx=Load()), args=[Constant(value='x')], keywords=[]), List(elts=[Constant(value='a'), Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?P<x>.)*(?&x)'), Constant(value='abc')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value='x')], keywords=[]), Constant(value='b')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?P<x>.)(?P<x>.)(?P<x>.)'), Constant(value='abc')], keywords=[]), attr='captures', ctx=Load()), args=[Constant(value='x')], keywords=[]), List(elts=[Constant(value='a'), Constant(value='b'), Constant(value='c')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?P<x>.)(?P<x>.)(?P<x>.)'), Constant(value='abc')], keywords=[]), attr='group', ctx=Load()), args=[Constant(value='x')], keywords=[]), Constant(value='c')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:ab)*'), Constant(value='ab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:ab)*'), Constant(value='abab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:ab)*?'), Constant(value='')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:ab)*+'), Constant(value='ab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:ab)*+'), Constant(value='abab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:ab)+'), Constant(value='ab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:ab)+'), Constant(value='abab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:ab)+?'), Constant(value='ab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:ab)++'), Constant(value='ab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:ab)++'), Constant(value='abab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)(?:ab)*'), Constant(value='ab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)(?:ab)*'), Constant(value='abab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)(?:ab)*?'), Constant(value='')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)(?:ab)*+'), Constant(value='ab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)(?:ab)*+'), Constant(value='abab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)(?:ab)+'), Constant(value='ab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)(?:ab)+'), Constant(value='abab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)(?:ab)+?'), Constant(value='ab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)(?:ab)++'), Constant(value='ab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)(?:ab)++'), Constant(value='abab')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a*'), Constant(value='')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a*?'), Constant(value='')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a*+'), Constant(value='')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a+'), Constant(value='')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a+?'), Constant(value='')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a++'), Constant(value='')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a+'), Constant(value='a')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a+?'), Constant(value='a')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='a++'), Constant(value='a')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)a*'), Constant(value='')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)a*?'), Constant(value='')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)a*+'), Constant(value='')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)a+'), Constant(value='')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)a+?'), Constant(value='')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)a++'), Constant(value='')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)a+'), Constant(value='a')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)a+?'), Constant(value='a')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?r)a++'), Constant(value='a')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value="(?:\\s*\\w+'*)+"), Constant(value='whatever')], keywords=[keyword(arg='partial', value=Constant(value=True))]), attr='partial', ctx=Load()), Constant(value=False)], keywords=[])), Assign(targets=[Name(id='pattern', ctx=Store())], value=Constant(value='(?P<termini5>GGCGTCACACTTTGCTATGCCATAGCAT[AG]TTTATCCATAAGATTAGCGGATCCTACCTGACGCTTTTTATCGCAACTCTCTACTGTTTCTCCATAACAGAACATATTGACTATCCGGTATTACCCGGCATGACAGGAGTAAAA){e<=1}(?P<gene>[ACGT]{1059}){e<=2}(?P<spacer>TAATCGTCTTGTTTGATACACAAGGGTCGCATCTGCGGCCCTTTTGCTTTTTTAAGTTGTAAGGATATGCCATTCTAGA){e<=0}(?P<barcode>[ACGT]{18}){e<=0}(?P<termini3>AGATCGG[CT]AGAGCGTCGTGTAGGGAAAGAGTGTGG){e<=1}')), Assign(targets=[Name(id='text', ctx=Store())], value=Constant(value='GCACGGCGTCACACTTTGCTATGCCATAGCATATTTATCCATAAGATTAGCGGATCCTACCTGACGCTTTTTATCGCAACTCTCTACTGTTTCTCCATAACAGAACATATTGACTATCCGGTATTACCCGGCATGACAGGAGTAAAAATGGCTATCGACGAAAACAAACAGAAAGCGTTGGCGGCAGCACTGGGCCAGATTGAGAAACAATTTGGTAAAGGCTCCATCATGCGCCTGGGTGAAGACCGTTCCATGGATGTGGAAACCATCTCTACCGGTTCGCTTTCACTGGATATCGCGCTTGGGGCAGGTGGTCTGCCGATGGGCCGTATCGTCGAAATCTACGGACCGGAATCTTCCGGTAAAACCACGCTGACGCTGCAGGTGATCGCCGCAGCGCAGCGTGAAGGTAAAACCTGTGCGTTTATCGATGCTGAACACGCGCTGGACCCAATCTACGCACGTAAACTGGGCGTCGATATCGACAACCTGCTGTGCTCCCAGCCGGACACCGGCGAGCAGGCACTGGAAATCTGTGACGCCCTGGCGCGTTCTGGCGCAGTAGACGTTATCGTCGTTGACTCCGTGGCGGCACTGACGCCGAAAGCGGAAATCGAAGGCGAAATCGGCGACTCTCATATGGGCCTTGCGGCACGTATGATGAGCCAGGCGATGCGTAAGCTGGCGGGTAACCTGAAGCAGTCCAACACGCTGCTGATCTTCATCAACCCCATCCGTATGAAAATTGGTGTGATGTTCGGCAACCCGGAAACCACTTACCGGTGGTAACGCGCTGAAATTCTACGCCTCTGTTCGTCTCGACATCCGTTAAATCGGCGCGGTGAAAGAGGGCGAAAACGTGGTGGGTAGCGAAACCCGCGTGAAAGTGGTGAAGAACAAAATCGCTGCGCCGTTTAAACAGGCTGAATTCCAGATCCTCTACGGCGAAGGTATCAACTTCTACCCCGAACTGGTTGACCTGGGCGTAAAAGAGAAGCTGATCGAGAAAGCAGGCGCGTGGTACAGCTACAAAGGTGAGAAGATCGGTCAGGGTAAAGCGAATGCGACTGCCTGGCTGAAATTTAACCCGGAAACCGCGAAAGAGATCGAGTGAAAAGTACGTGAGTTGCTGCTGAGCAACCCGAACTCAACGCCGGATTTCTCTGTAGATGATAGCGAAGGCGTAGCAGAAACTAACGAAGATTTTTAATCGTCTTGTTTGATACACAAGGGTCGCATCTGCGGCCCTTTTGCTTTTTTAAGTTGTAAGGATATGCCATTCTAGACAGTTAACACACCAACAAAGATCGGTAGAGCGTCGTGTAGGGAAAGAGTGTGGTACC')), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Name(id='pattern', ctx=Load()), Name(id='text', ctx=Load())], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='BESTMATCH', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='m', ctx=Load()), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=1), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='m', ctx=Load()), attr='fuzzy_changes', ctx=Load()), Tuple(elts=[List(elts=[], ctx=Load()), List(elts=[Constant(value=1206)], ctx=Load()), List(elts=[], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?e)(dogf(((oo){e<1})|((00){e<1}))d){e<2}'), Constant(value='dogfood')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?e)(dogf(((oo){e<1})|((00){e<1}))d){e<2}'), Constant(value='dogfoot')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\X'), Constant(value='👨\u200d👩\u200d👧\u200d👦')], keywords=[]), List(elts=[Constant(value='👨\u200d👩\u200d👧\u200d👦')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?=a)a'), Constant(value='a')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?!b)a'), Constant(value='a')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='((\\d)*?)*?'), Constant(value='123')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?(DEFINE)(?<mydef>(?<wrong>THIS_SHOULD_NOT_MATCHx?)|(?<right>right))).*(?<=(?&mydef).*)'), Constant(value='x right')], keywords=[]), attr='capturesdict', ctx=Load()), args=[], keywords=[]), Dict(keys=[Constant(value='mydef'), Constant(value='wrong'), Constant(value='right')], values=[List(elts=[Constant(value='right')], ctx=Load()), List(elts=[], ctx=Load()), List(elts=[Constant(value='right')], ctx=Load())])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:cat){e<=1:[u]}'), Constant(value='cut')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:cat){e<=1:u}'), Constant(value='cut')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?be)(AGTGTTCCCCGCGCCAGCGGGGATAAACCG){s<=5,i<=5,d<=5,s+i+d<=10}'), Constant(value='TTCCCCGCGCCAGCGGGGATAAACCG')], keywords=[]), attr='fuzzy_changes', ctx=Load()), Tuple(elts=[List(elts=[], ctx=Load()), List(elts=[], ctx=Load()), List(elts=[Constant(value=0), Constant(value=1), Constant(value=3), Constant(value=5)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:bc){e}'), Constant(value='c')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:bc){e}'), Constant(value='c')], keywords=[]), attr='fuzzy_changes', ctx=Load()), Tuple(elts=[List(elts=[Constant(value=0)], ctx=Load()), List(elts=[], ctx=Load()), List(elts=[Constant(value=1)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?e)(?:bc){e}'), Constant(value='c')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?e)(?:bc){e}'), Constant(value='c')], keywords=[]), attr='fuzzy_changes', ctx=Load()), Tuple(elts=[List(elts=[], ctx=Load()), List(elts=[], ctx=Load()), List(elts=[Constant(value=0)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?b)(?:bc){e}'), Constant(value='c')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?b)(?:bc){e}'), Constant(value='c')], keywords=[]), attr='fuzzy_changes', ctx=Load()), Tuple(elts=[List(elts=[], ctx=Load()), List(elts=[], ctx=Load()), List(elts=[Constant(value=0)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?e)(?:^(\\$ )?\\d{1,3}(,\\d{3})*(\\.\\d{2})$){e}'), Constant(value='$ 10,112.111.12')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=6), Constant(value=0), Constant(value=5)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?e)(?:^(\\$ )?\\d{1,3}(,\\d{3})*(\\.\\d{2})$){s<=1}'), Constant(value='$ 10,112.111.12')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?e)(?:^(\\$ )?\\d{1,3}(,\\d{3})*(\\.\\d{2})$){s<=1,i<=1,d<=1}'), Constant(value='$ 10,112.111.12')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?e)(?:^(\\$ )?\\d{1,3}(,\\d{3})*(\\.\\d{2})$){s<=3}'), Constant(value='$ 10,1a2.111.12')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=2), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?e)(?:^(\\$ )?\\d{1,3}(,\\d{3})*(\\.\\d{2})$){s<=2}'), Constant(value='$ 10,1a2.111.12')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=2), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?e)(?:0?,0(?:,0)?){s<=1,d<=1}'), Constant(value=',0;0')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?e)(?:0??,0(?:,0)?){s<=1,d<=1}'), Constant(value=',0;0')], keywords=[]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='\\b(?e)(?:\\d{6,20}){i<=5:[\\-\\\\\\/]}\\b'), Constant(value='cat dog starting at 00:01132.000. hello world')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?#)')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?x)(?#)')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(\\d+){i<=2:[ab]}'), Constant(value='123X4Y5')], keywords=[]), List(elts=[Constant(value='123'), Constant(value='4'), Constant(value='5')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='(?i)(\\d+){i<=2:[ab]}'), Constant(value='123X4Y5')], keywords=[]), List(elts=[Constant(value='123'), Constant(value='4'), Constant(value='5')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(test){e<=5}$'), Constant(value='terstin')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='B', ctx=Load()))]), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=3), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:(x*)\\1\\1\\1)*x$'), BinOp(left=Constant(value='x'), op=Mult(), right=Constant(value=5))], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?:(x*)\\1{3})*x$'), BinOp(left=Constant(value='x'), op=Mult(), right=Constant(value=5))], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='t(?:es){s<=1:\\d}t'), Constant(value='te5t')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='te5t')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='t(?:es){s<=1:\\d}t'), Constant(value='tezt')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='t(?:es){i<=1:\\d}t'), Constant(value='tes5t')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='tes5t')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='t(?:es){i<=1:\\d}t'), Constant(value='teszt')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='t(?:es){i<=1:\\d}t'), Constant(value='tes5t')], keywords=[]), attr='fuzzy_changes', ctx=Load()), Tuple(elts=[List(elts=[], ctx=Load()), List(elts=[Constant(value=3)], ctx=Load()), List(elts=[], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='t(es){i<=1,0<e<=1}t'), Constant(value='tes5t')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='tes5t')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='t(?:es){i<=1,0<e<=1:\\d}t'), Constant(value='tes5t')], keywords=[]), attr='fuzzy_changes', ctx=Load()), Tuple(elts=[List(elts=[], ctx=Load()), List(elts=[Constant(value=3)], ctx=Load()), List(elts=[], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(\\d+ week|\\d+ days)')], keywords=[]), attr='split', ctx=Load()), args=[Constant(value='7 days')], keywords=[]), List(elts=[Constant(value=''), Constant(value='7 days'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(\\d+ week|\\d+ days)')], keywords=[]), attr='split', ctx=Load()), args=[Constant(value='10 days')], keywords=[]), List(elts=[Constant(value=''), Constant(value='10 days'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='[ ]* Name[ ]*\\* ')], keywords=[]), attr='search', ctx=Load()), args=[Constant(value='  Name *')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='a|\\.*pb\\.py')], keywords=[]), attr='search', ctx=Load()), args=[Constant(value='.geojs')], keywords=[]), Constant(value=None)], keywords=[])), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?<=(?:\\A|\\W|_))(\\d+ decades? ago|\\d+ minutes ago|\\d+ seconds ago|in \\d+ decades?|\\d+ months ago|in \\d+ minutes|\\d+ minute ago|in \\d+ seconds|\\d+ second ago|\\d+ years ago|in \\d+ months|\\d+ month ago|\\d+ weeks ago|\\d+ hours ago|in \\d+ minute|in \\d+ second|in \\d+ years|\\d+ year ago|in \\d+ month|in \\d+ weeks|\\d+ week ago|\\d+ days ago|in \\d+ hours|\\d+ hour ago|in \\d+ year|in \\d+ week|in \\d+ days|\\d+ day ago|in \\d+ hour|\\d+ min ago|\\d+ sec ago|\\d+ yr ago|\\d+ mo ago|\\d+ wk ago|in \\d+ day|\\d+ hr ago|in \\d+ min|in \\d+ sec|in \\d+ yr|in \\d+ mo|in \\d+ wk|in \\d+ hr)(?=(?:\\Z|\\W|_))')], keywords=[keyword(arg='flags', value=BinOp(left=Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='regex', ctx=Load()), attr='V0', ctx=Load())))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='1 month ago')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='1 month ago')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='9 hours 1 minute ago')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='1 minute ago')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='10 months 1 hour ago')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='1 hour ago')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='1 month 10 hours ago')], keywords=[]), attr='group', ctx=Load()), args=[], keywords=[]), Constant(value='10 hours ago')], keywords=[])), Assign(targets=[Name(id='sequence', ctx=Store())], value=Constant(value='TTCAGACGTGTGCTCTTCCGATCTCAATACCGACTCCTCACTGTGTGTCT')), Assign(targets=[Name(id='pattern', ctx=Store())], value=Constant(value='(?P<insert>.*)(?P<anchor>CTTCC){e<=1}(?P<umi>([ACGT]){4,6})(?P<sid>CAATACCGACTCCTCACTGTGT){e<=2}(?P<end>([ACGT]){0,6}$)')), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='pattern', ctx=Load()), Name(id='sequence', ctx=Load())], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='BESTMATCH', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=50)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='groupdict', ctx=Load()), args=[], keywords=[]), Dict(keys=[Constant(value='insert'), Constant(value='anchor'), Constant(value='umi'), Constant(value='sid'), Constant(value='end')], values=[Constant(value='TTCAGACGTGTGCT'), Constant(value='CTTCC'), Constant(value='GATCT'), Constant(value='CAATACCGACTCCTCACTGTGT'), Constant(value='GTCT')])], keywords=[])), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='pattern', ctx=Load()), Name(id='sequence', ctx=Load())], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='ENHANCEMATCH', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=50)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='groupdict', ctx=Load()), args=[], keywords=[]), Dict(keys=[Constant(value='insert'), Constant(value='anchor'), Constant(value='umi'), Constant(value='sid'), Constant(value='end')], values=[Constant(value='TTCAGACGTGTGCT'), Constant(value='CTTCC'), Constant(value='GATCT'), Constant(value='CAATACCGACTCCTCACTGTGT'), Constant(value='GTCT')])], keywords=[])), Assign(targets=[Name(id='pattern', ctx=Store())], value=Constant(value='(?P<insert>.*)(?P<anchor>AACACTGG){e<=1}(?P<umi>([AT][CG]){5}){e<=2}(?P<sid>GTAACCGAAG){e<=2}(?P<end>([ACGT]){0,6}$)')), Assign(targets=[Name(id='sequence', ctx=Store())], value=Constant(value='GGAAAACACTGGTCTCAGTCTCGTAACCGAAGTGGTCG')), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='pattern', ctx=Load()), Name(id='sequence', ctx=Load())], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='BESTMATCH', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='m', ctx=Load()), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='m', ctx=Load()), attr='fuzzy_changes', ctx=Load()), Tuple(elts=[List(elts=[], ctx=Load()), List(elts=[], ctx=Load()), List(elts=[], ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='sequence', ctx=Store())], value=Constant(value='GGAAAACACTGGTCTCAGTCTCGTCCCCGAAGTGGTCG')), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='pattern', ctx=Load()), Name(id='sequence', ctx=Load())], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='BESTMATCH', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='m', ctx=Load()), attr='fuzzy_counts', ctx=Load()), Tuple(elts=[Constant(value=2), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='m', ctx=Load()), attr='fuzzy_changes', ctx=Load()), Tuple(elts=[List(elts=[Constant(value=24), Constant(value=25)], ctx=Load()), List(elts=[], ctx=Load()), List(elts=[], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='(test1)|(test2)'), Constant(value='matched: \\1\\2'), Constant(value='test1')], keywords=[]), Constant(value='matched: test1')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='subf', ctx=Load()), args=[Constant(value='(test1)|(test2)'), Constant(value='matched: {1}{2}'), Constant(value='test1')], keywords=[]), Constant(value='matched: test1')], keywords=[])), Expr(value=Tuple(elts=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(test1)|(test2)'), Constant(value='matched: test1')], keywords=[]), attr='expand', ctx=Load()), args=[Constant(value='matched: \\1\\2')], keywords=[]), Constant(value='matched: test1')], keywords=[])], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(test1)|(test2)'), Constant(value='matched: test1')], keywords=[]), attr='expandf', ctx=Load()), args=[Constant(value='matched: {1}{2}')], keywords=[]), Constant(value='matched: test1')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:\\bha\\b){i:[ ]}'), Constant(value='having')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?:\\bha\\b){i:[ ]}'), Constant(value='having')], keywords=[keyword(arg='flags', value=Attribute(value=Name(id='regex', ctx=Load()), attr='I', ctx=Load()))]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?a:\\w)\\w'), Constant(value='dж')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?a:\\w)(?u:\\w)'), Constant(value='dж')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^\\p{LC}+$'), Constant(value='😺')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^\\p{So}+$'), Constant(value='😺')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(.)+'), Constant(value='abc')], keywords=[]), attr='allcaptures', ctx=Load()), args=[], keywords=[]), Tuple(elts=[List(elts=[Constant(value='abc')], ctx=Load()), List(elts=[Constant(value='a'), Constant(value='b'), Constant(value='c')], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(.)+'), Constant(value='abc')], keywords=[]), attr='allspans', ctx=Load()), args=[], keywords=[]), Tuple(elts=[List(elts=[Tuple(elts=[Constant(value=0), Constant(value=3)], ctx=Load())], ctx=Load()), List(elts=[Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=2)], ctx=Load()), Tuple(elts=[Constant(value=2), Constant(value=3)], ctx=Load())], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='\\p{HorizSpace}+'), Constant(value='\t \xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='\\p{VertSpace}+'), Constant(value='\n\x0b\x0c\r\x85\u2028\u2029')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?(?<=A)|(?(?![^B])C|D))'), Constant(value='A')], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(?(?<=A)|(?(?![^B])C|D))'), Constant(value='A')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='^a?(a?)b?c\\1$'), Constant(value='abca')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=4)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?(?=a).|..)'), Constant(value='ab')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?(?=b).|..)'), Constant(value='ab')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?(?!a).|..)'), Constant(value='ab')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?(?!b).|..)'), Constant(value='ab')], keywords=[]), attr='span', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_fuzzy_ext', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?r)(?:a){e<=1:[a-z]}'), Constant(value='e')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?:a){e<=1:[a-z]}'), Constant(value='e')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?:a){e<=1:[a-z]}'), Constant(value='-')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?r)(?:a){e<=1:[a-z]}'), Constant(value='-')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?:a){e<=1:[a-z]}'), Constant(value='ae')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?r)(?:a){e<=1:[a-z]}'), Constant(value='ae')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?:a){e<=1:[a-z]}'), Constant(value='a-')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?r)(?:a){e<=1:[a-z]}'), Constant(value='a-')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?:ab){e<=1:[a-z]}'), Constant(value='ae')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?r)(?:ab){e<=1:[a-z]}'), Constant(value='ae')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?:ab){e<=1:[a-z]}'), Constant(value='a-')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?r)(?:ab){e<=1:[a-z]}'), Constant(value='a-')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(a)\\1{e<=1:[a-z]}'), Constant(value='ae')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?r)\\1{e<=1:[a-z]}(a)'), Constant(value='ea')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(a)\\1{e<=1:[a-z]}'), Constant(value='a-')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?r)\\1{e<=1:[a-z]}(a)'), Constant(value='-a')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?fiu)(?:\\N{LATIN SMALL LETTER SHARP S}){e<=1:[a-z]}'), Constant(value='ts')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?fiu)(?:\\N{LATIN SMALL LETTER SHARP S}){e<=1:[a-z]}'), Constant(value='st')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?firu)(?:\\N{LATIN SMALL LETTER SHARP S}){e<=1:[a-z]}'), Constant(value='st')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?firu)(?:\\N{LATIN SMALL LETTER SHARP S}){e<=1:[a-z]}'), Constant(value='ts')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?fiu)(?:\\N{LATIN SMALL LETTER SHARP S}){e<=1:[a-z]}'), Constant(value='-s')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?fiu)(?:\\N{LATIN SMALL LETTER SHARP S}){e<=1:[a-z]}'), Constant(value='s-')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?firu)(?:\\N{LATIN SMALL LETTER SHARP S}){e<=1:[a-z]}'), Constant(value='s-')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?firu)(?:\\N{LATIN SMALL LETTER SHARP S}){e<=1:[a-z]}'), Constant(value='-s')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?fiu)(\\N{LATIN SMALL LETTER SHARP S})\\1{e<=1:[a-z]}'), Constant(value='ssst')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?fiu)(\\N{LATIN SMALL LETTER SHARP S})\\1{e<=1:[a-z]}'), Constant(value='ssts')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?firu)\\1{e<=1:[a-z]}(\\N{LATIN SMALL LETTER SHARP S})'), Constant(value='stss')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?firu)\\1{e<=1:[a-z]}(\\N{LATIN SMALL LETTER SHARP S})'), Constant(value='tsss')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?fiu)(\\N{LATIN SMALL LETTER SHARP S})\\1{e<=1:[a-z]}'), Constant(value='ss-s')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?fiu)(\\N{LATIN SMALL LETTER SHARP S})\\1{e<=1:[a-z]}'), Constant(value='sss-')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?firu)(\\N{LATIN SMALL LETTER SHARP S})\\1{e<=1:[a-z]}'), Constant(value='-s')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?firu)(\\N{LATIN SMALL LETTER SHARP S})\\1{e<=1:[a-z]}'), Constant(value='s-')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?fiu)(ss)\\1{e<=1:[a-z]}'), Constant(value='ßts')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?fiu)(ss)\\1{e<=1:[a-z]}'), Constant(value='ßst')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?firu)\\1{e<=1:[a-z]}(ss)'), Constant(value='stß')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?firu)\\1{e<=1:[a-z]}(ss)'), Constant(value='tsß')], keywords=[])], keywords=[]), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?fiu)(ss)\\1{e<=1:[a-z]}'), Constant(value='ß-s')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?fiu)(ss)\\1{e<=1:[a-z]}'), Constant(value='ßs-')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?firu)(ss)\\1{e<=1:[a-z]}'), Constant(value='s-ß')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Constant(value='(?firu)(ss)\\1{e<=1:[a-z]}'), Constant(value='-sß')], keywords=[])], keywords=[]), Constant(value=False)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_subscripted_captures', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?P<x>.)+'), Constant(value='abc')], keywords=[]), attr='expandf', ctx=Load()), args=[Constant(value='{0} {0[0]} {0[-1]}')], keywords=[]), Constant(value='abc abc abc')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?P<x>.)+'), Constant(value='abc')], keywords=[]), attr='expandf', ctx=Load()), args=[Constant(value='{1} {1[0]} {1[1]} {1[2]} {1[-1]} {1[-2]} {1[-3]}')], keywords=[]), Constant(value='c a b c c b a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='(?P<x>.)+'), Constant(value='abc')], keywords=[]), attr='expandf', ctx=Load()), args=[Constant(value='{x} {x[0]} {x[1]} {x[2]} {x[-1]} {x[-2]} {x[-3]}')], keywords=[]), Constant(value='c a b c c b a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='subf', ctx=Load()), args=[Constant(value='(?P<x>.)+'), Constant(value='{0} {0[0]} {0[-1]}'), Constant(value='abc')], keywords=[]), Constant(value='abc abc abc')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='subf', ctx=Load()), args=[Constant(value='(?P<x>.)+'), Constant(value='{1} {1[0]} {1[1]} {1[2]} {1[-1]} {1[-2]} {1[-3]}'), Constant(value='abc')], keywords=[]), Constant(value='c a b c c b a')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='subf', ctx=Load()), args=[Constant(value='(?P<x>.)+'), Constant(value='{x} {x[0]} {x[1]} {x[2]} {x[-1]} {x[-2]} {x[-3]}'), Constant(value='abc')], keywords=[]), Constant(value='c a b c c b a')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_more_zerowidth', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=7), Constant(value=0)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='\\b|:+'), Constant(value='a::bc')], keywords=[]), List(elts=[Constant(value=''), Constant(value='a'), Constant(value=''), Constant(value=''), Constant(value='bc'), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='\\b|:+'), Constant(value='-'), Constant(value='a::bc')], keywords=[]), Constant(value='-a---bc-')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='findall', ctx=Load()), args=[Constant(value='\\b|:+'), Constant(value='a::bc')], keywords=[]), List(elts=[Constant(value=''), Constant(value=''), Constant(value='::'), Constant(value=''), Constant(value='')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='span', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='\\b|:+'), Constant(value='a::bc')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Tuple(elts=[Constant(value=0), Constant(value=0)], ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=3)], ctx=Load()), Tuple(elts=[Constant(value=3), Constant(value=3)], ctx=Load()), Tuple(elts=[Constant(value=5), Constant(value=5)], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[ListComp(elt=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='span', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Call(func=Attribute(value=Name(id='regex', ctx=Load()), attr='finditer', ctx=Load()), args=[Constant(value='(?m)^\\s*?$'), Constant(value='foo\n\n\nbar')], keywords=[]), ifs=[], is_async=0)]), List(elts=[Tuple(elts=[Constant(value=4), Constant(value=4)], ctx=Load()), Tuple(elts=[Constant(value=4), Constant(value=5)], ctx=Load()), Tuple(elts=[Constant(value=5), Constant(value=5)], ctx=Load())], ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[]), FunctionDef(name='test_main', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='main', ctx=Load()), args=[], keywords=[keyword(arg='verbosity', value=Constant(value=2))]))], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Expr(value=Call(func=Name(id='test_main', ctx=Load()), args=[], keywords=[]))], orelse=[])], type_ignores=[])