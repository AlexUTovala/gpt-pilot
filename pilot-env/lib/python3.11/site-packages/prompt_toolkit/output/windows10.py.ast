Module(body=[ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), Import(names=[alias(name='sys')]), Assert(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), ops=[Eq()], comparators=[Constant(value='win32')])), ImportFrom(module='ctypes', names=[alias(name='byref'), alias(name='windll')], level=0), ImportFrom(module='ctypes.wintypes', names=[alias(name='DWORD'), alias(name='HANDLE')], level=0), ImportFrom(module='typing', names=[alias(name='Any'), alias(name='TextIO')], level=0), ImportFrom(module='prompt_toolkit.data_structures', names=[alias(name='Size')], level=0), ImportFrom(module='prompt_toolkit.win32_types', names=[alias(name='STD_OUTPUT_HANDLE')], level=0), ImportFrom(module='base', names=[alias(name='Output')], level=1), ImportFrom(module='color_depth', names=[alias(name='ColorDepth')], level=1), ImportFrom(module='vt100', names=[alias(name='Vt100_Output')], level=1), ImportFrom(module='win32', names=[alias(name='Win32Output')], level=1), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='Windows10_Output')], ctx=Load())), Assign(targets=[Name(id='ENABLE_PROCESSED_INPUT', ctx=Store())], value=Constant(value=1)), Assign(targets=[Name(id='ENABLE_VIRTUAL_TERMINAL_PROCESSING', ctx=Store())], value=Constant(value=4)), ClassDef(name='Windows10_Output', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    Windows 10 output abstraction. This enables and uses vt100 escape sequences.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='stdout', annotation=Name(id='TextIO', ctx=Load())), arg(arg='default_color_depth', annotation=BinOp(left=Name(id='ColorDepth', ctx=Load()), op=BitOr(), right=Constant(value=None)))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='default_color_depth', ctx=Store())], value=Name(id='default_color_depth', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='win32_output', ctx=Store())], value=Call(func=Name(id='Win32Output', ctx=Load()), args=[Name(id='stdout', ctx=Load())], keywords=[keyword(arg='default_color_depth', value=Name(id='default_color_depth', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='vt100_output', ctx=Store())], value=Call(func=Name(id='Vt100_Output', ctx=Load()), args=[Name(id='stdout', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='Size', ctx=Load()), args=[Constant(value=0), Constant(value=0)], keywords=[]))], keywords=[keyword(arg='default_color_depth', value=Name(id='default_color_depth', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_hconsole', ctx=Store())], value=Call(func=Name(id='HANDLE', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='windll', ctx=Load()), attr='kernel32', ctx=Load()), attr='GetStdHandle', ctx=Load()), args=[Name(id='STD_OUTPUT_HANDLE', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='flush', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Write to output stream and flush.\n        ')), Assign(targets=[Name(id='original_mode', ctx=Store())], value=Call(func=Name(id='DWORD', ctx=Load()), args=[Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='windll', ctx=Load()), attr='kernel32', ctx=Load()), attr='GetConsoleMode', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_hconsole', ctx=Load()), Call(func=Name(id='byref', ctx=Load()), args=[Name(id='original_mode', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='windll', ctx=Load()), attr='kernel32', ctx=Load()), attr='SetConsoleMode', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_hconsole', ctx=Load()), Call(func=Name(id='DWORD', ctx=Load()), args=[BinOp(left=Name(id='ENABLE_PROCESSED_INPUT', ctx=Load()), op=BitOr(), right=Name(id='ENABLE_VIRTUAL_TERMINAL_PROCESSING', ctx=Load()))], keywords=[])], keywords=[])), Try(body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vt100_output', ctx=Load()), attr='flush', ctx=Load()), args=[], keywords=[]))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='windll', ctx=Load()), attr='kernel32', ctx=Load()), attr='SetConsoleMode', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_hconsole', ctx=Load()), Name(id='original_mode', ctx=Load())], keywords=[]))])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='responds_to_cpr', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=False))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='__getattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='name', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='get_size'), Constant(value='get_rows_below_cursor_position'), Constant(value='enable_mouse_support'), Constant(value='disable_mouse_support'), Constant(value='scroll_buffer_to_prompt'), Constant(value='get_win32_screen_buffer_info'), Constant(value='enable_bracketed_paste'), Constant(value='disable_bracketed_paste')], ctx=Load())]), body=[Return(value=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='win32_output', ctx=Load()), Name(id='name', ctx=Load())], keywords=[]))], orelse=[Return(value=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='vt100_output', ctx=Load()), Name(id='name', ctx=Load())], keywords=[]))])], decorator_list=[], returns=Name(id='Any', ctx=Load())), FunctionDef(name='get_default_color_depth', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Return the default color depth for a windows terminal.\n\n        Contrary to the Vt100 implementation, this doesn't depend on a $TERM\n        variable.\n        ")), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='default_color_depth', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='default_color_depth', ctx=Load()))], orelse=[]), Return(value=Attribute(value=Name(id='ColorDepth', ctx=Load()), attr='TRUE_COLOR', ctx=Load()))], decorator_list=[], returns=Name(id='ColorDepth', ctx=Load()))], decorator_list=[]), Expr(value=Call(func=Attribute(value=Name(id='Output', ctx=Load()), attr='register', ctx=Load()), args=[Name(id='Windows10_Output', ctx=Load())], keywords=[])), FunctionDef(name='is_win_vt100_enabled', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n    Returns True when we're running Windows and VT100 escape sequences are\n    supported.\n    ")), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='win32')]), body=[Return(value=Constant(value=False))], orelse=[]), Assign(targets=[Name(id='hconsole', ctx=Store())], value=Call(func=Name(id='HANDLE', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='windll', ctx=Load()), attr='kernel32', ctx=Load()), attr='GetStdHandle', ctx=Load()), args=[Name(id='STD_OUTPUT_HANDLE', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='original_mode', ctx=Store())], value=Call(func=Name(id='DWORD', ctx=Load()), args=[Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='windll', ctx=Load()), attr='kernel32', ctx=Load()), attr='GetConsoleMode', ctx=Load()), args=[Name(id='hconsole', ctx=Load()), Call(func=Name(id='byref', ctx=Load()), args=[Name(id='original_mode', ctx=Load())], keywords=[])], keywords=[])), Try(body=[AnnAssign(target=Name(id='result', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Call(func=Attribute(value=Attribute(value=Name(id='windll', ctx=Load()), attr='kernel32', ctx=Load()), attr='SetConsoleMode', ctx=Load()), args=[Name(id='hconsole', ctx=Load()), Call(func=Name(id='DWORD', ctx=Load()), args=[BinOp(left=Name(id='ENABLE_PROCESSED_INPUT', ctx=Load()), op=BitOr(), right=Name(id='ENABLE_VIRTUAL_TERMINAL_PROCESSING', ctx=Load()))], keywords=[])], keywords=[]), simple=1), Return(value=Compare(left=Name(id='result', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)]))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='windll', ctx=Load()), attr='kernel32', ctx=Load()), attr='SetConsoleMode', ctx=Load()), args=[Name(id='hconsole', ctx=Load()), Name(id='original_mode', ctx=Load())], keywords=[]))])], decorator_list=[], returns=Name(id='bool', ctx=Load()))], type_ignores=[])