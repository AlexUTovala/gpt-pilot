Module(body=[ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), ImportFrom(module='typing', names=[alias(name='TextIO')], level=0), ImportFrom(module='prompt_toolkit.cursor_shapes', names=[alias(name='CursorShape')], level=0), ImportFrom(module='prompt_toolkit.data_structures', names=[alias(name='Size')], level=0), ImportFrom(module='prompt_toolkit.styles', names=[alias(name='Attrs')], level=0), ImportFrom(module='base', names=[alias(name='Output')], level=1), ImportFrom(module='color_depth', names=[alias(name='ColorDepth')], level=1), ImportFrom(module='flush_stdout', names=[alias(name='flush_stdout')], level=1), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='PlainTextOutput')], ctx=Load())), ClassDef(name='PlainTextOutput', bases=[Name(id='Output', ctx=Load())], keywords=[], body=[Expr(value=Constant(value="\n    Output that won't include any ANSI escape sequences.\n\n    Useful when stdout is not a terminal. Maybe stdout is redirected to a file.\n    In this case, if `print_formatted_text` is used, for instance, we don't\n    want to include formatting.\n\n    (The code is mostly identical to `Vt100_Output`, but without the\n    formatting.)\n    ")), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='stdout', annotation=Name(id='TextIO', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=Call(func=Name(id='all', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='stdout', ctx=Load()), Name(id='a', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='a', ctx=Store()), iter=Tuple(elts=[Constant(value='write'), Constant(value='flush')], ctx=Load()), ifs=[], is_async=0)])], keywords=[])), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='stdout', ctx=Store()), annotation=Name(id='TextIO', ctx=Load()), value=Name(id='stdout', ctx=Load()), simple=0), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Store()), annotation=Subscript(value=Name(id='list', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), value=List(elts=[], ctx=Load()), simple=0)], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='fileno', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='There is no sensible default for fileno().')), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stdout', ctx=Load()), attr='fileno', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Name(id='int', ctx=Load())), FunctionDef(name='encoding', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value='utf-8'))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='write', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='write_raw', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='set_title', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='title', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='clear_title', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='flush', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Load())), body=[Return()], orelse=[]), Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Store())], value=List(elts=[], ctx=Load())), Expr(value=Call(func=Name(id='flush_stdout', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stdout', ctx=Load()), Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='erase_screen', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='enter_alternate_screen', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='quit_alternate_screen', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='enable_mouse_support', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='disable_mouse_support', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='erase_end_of_line', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='erase_down', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='reset_attributes', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='set_attributes', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='attrs', annotation=Name(id='Attrs', ctx=Load())), arg(arg='color_depth', annotation=Name(id='ColorDepth', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='disable_autowrap', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='enable_autowrap', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='cursor_goto', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='row', annotation=Name(id='int', ctx=Load())), arg(arg='column', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=0), Constant(value=0)]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='cursor_up', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='amount', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='cursor_down', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='amount', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='\n')], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='cursor_forward', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='amount', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Constant(value=' '), op=Mult(), right=Name(id='amount', ctx=Load()))], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='cursor_backward', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='amount', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='hide_cursor', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='show_cursor', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='set_cursor_shape', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor_shape', annotation=Name(id='CursorShape', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='reset_cursor_shape', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='ask_for_cpr', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='bell', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='enable_bracketed_paste', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='disable_bracketed_paste', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='scroll_buffer_to_prompt', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='get_size', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Size', ctx=Load()), args=[], keywords=[keyword(arg='rows', value=Constant(value=40)), keyword(arg='columns', value=Constant(value=80))]))], decorator_list=[], returns=Name(id='Size', ctx=Load())), FunctionDef(name='get_rows_below_cursor_position', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=8))], decorator_list=[], returns=Name(id='int', ctx=Load())), FunctionDef(name='get_default_color_depth', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='ColorDepth', ctx=Load()), attr='DEPTH_1_BIT', ctx=Load()))], decorator_list=[], returns=Name(id='ColorDepth', ctx=Load()))], decorator_list=[])], type_ignores=[])