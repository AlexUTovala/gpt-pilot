Module(body=[ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), Import(names=[alias(name='errno')]), Import(names=[alias(name='os')]), Import(names=[alias(name='sys')]), ImportFrom(module='contextlib', names=[alias(name='contextmanager')], level=0), ImportFrom(module='typing', names=[alias(name='IO'), alias(name='Iterator'), alias(name='TextIO')], level=0), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='flush_stdout')], ctx=Load())), FunctionDef(name='flush_stdout', args=arguments(posonlyargs=[], args=[arg(arg='stdout', annotation=Name(id='TextIO', ctx=Load())), arg(arg='data', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='has_binary_io', ctx=Store())], value=BoolOp(op=And(), values=[Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='stdout', ctx=Load()), Constant(value='encoding')], keywords=[]), Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='stdout', ctx=Load()), Constant(value='buffer')], keywords=[])])), Try(body=[With(items=[withitem(context_expr=Call(func=Name(id='_blocking_io', ctx=Load()), args=[Name(id='stdout', ctx=Load())], keywords=[]))], body=[If(test=Name(id='has_binary_io', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='stdout', ctx=Load()), attr='buffer', ctx=Load()), attr='write', ctx=Load()), args=[Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='encode', ctx=Load()), args=[BoolOp(op=Or(), values=[Attribute(value=Name(id='stdout', ctx=Load()), attr='encoding', ctx=Load()), Constant(value='utf-8')]), Constant(value='replace')], keywords=[])], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='stdout', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='stdout', ctx=Load()), attr='flush', ctx=Load()), args=[], keywords=[]))])], handlers=[ExceptHandler(type=Name(id='OSError', ctx=Load()), name='e', body=[If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='e', ctx=Load()), attr='args', ctx=Load()), Compare(left=Subscript(value=Attribute(value=Name(id='e', ctx=Load()), attr='args', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='errno', ctx=Load()), attr='EINTR', ctx=Load())])]), body=[Pass()], orelse=[If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='e', ctx=Load()), attr='args', ctx=Load()), Compare(left=Subscript(value=Attribute(value=Name(id='e', ctx=Load()), attr='args', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)])]), body=[Pass()], orelse=[Raise()])])])], orelse=[], finalbody=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_blocking_io', args=arguments(posonlyargs=[], args=[arg(arg='io', annotation=Subscript(value=Name(id='IO', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Ensure that the FD for `io` is set to blocking in here.\n    ')), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), ops=[Eq()], comparators=[Constant(value='win32')]), body=[Expr(value=Yield()), Return()], orelse=[]), Try(body=[Assign(targets=[Name(id='fd', ctx=Store())], value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='fileno', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='blocking', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='get_blocking', ctx=Load()), args=[Name(id='fd', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(body=[Assign(targets=[Name(id='blocking', ctx=Store())], value=Constant(value=True))])], orelse=[], finalbody=[]), Try(body=[If(test=UnaryOp(op=Not(), operand=Name(id='blocking', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='set_blocking', ctx=Load()), args=[Name(id='fd', ctx=Load()), Constant(value=True)], keywords=[]))], orelse=[]), Expr(value=Yield())], handlers=[], orelse=[], finalbody=[If(test=UnaryOp(op=Not(), operand=Name(id='blocking', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='set_blocking', ctx=Load()), args=[Name(id='fd', ctx=Load()), Name(id='blocking', ctx=Load())], keywords=[]))], orelse=[])])], decorator_list=[Name(id='contextmanager', ctx=Load())], returns=Subscript(value=Name(id='Iterator', ctx=Load()), slice=Constant(value=None), ctx=Load()))], type_ignores=[])