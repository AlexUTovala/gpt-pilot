Module(body=[ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), Import(names=[alias(name='sys')]), Assert(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), ops=[Eq()], comparators=[Constant(value='win32')])), ImportFrom(module='ctypes', names=[alias(name='pointer')], level=0), ImportFrom(module='utils', names=[alias(name='SPHINX_AUTODOC_RUNNING')], level=2), If(test=UnaryOp(op=Not(), operand=Name(id='SPHINX_AUTODOC_RUNNING', ctx=Load())), body=[ImportFrom(module='ctypes', names=[alias(name='windll')], level=0)], orelse=[]), ImportFrom(module='ctypes.wintypes', names=[alias(name='BOOL'), alias(name='DWORD'), alias(name='HANDLE')], level=0), ImportFrom(module='prompt_toolkit.win32_types', names=[alias(name='SECURITY_ATTRIBUTES')], level=0), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='wait_for_handles'), Constant(value='create_win32_event')], ctx=Load())), Assign(targets=[Name(id='WAIT_TIMEOUT', ctx=Store())], value=Constant(value=258)), Assign(targets=[Name(id='INFINITE', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=1))), FunctionDef(name='wait_for_handles', args=arguments(posonlyargs=[], args=[arg(arg='handles', annotation=Subscript(value=Name(id='list', ctx=Load()), slice=Name(id='HANDLE', ctx=Load()), ctx=Load())), arg(arg='timeout', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Name(id='INFINITE', ctx=Load())]), body=[Expr(value=Constant(value="\n    Waits for multiple handles. (Similar to 'select') Returns the handle which is ready.\n    Returns `None` on timeout.\n    http://msdn.microsoft.com/en-us/library/windows/desktop/ms687025(v=vs.85).aspx\n\n    Note that handles should be a list of `HANDLE` objects, not integers. See\n    this comment in the patch by @quark-zju for the reason why:\n\n        ''' Make sure HANDLE on Windows has a correct size\n\n        Previously, the type of various HANDLEs are native Python integer\n        types. The ctypes library will treat them as 4-byte integer when used\n        in function arguments. On 64-bit Windows, HANDLE is 8-byte and usually\n        a small integer. Depending on whether the extra 4 bytes are zero-ed out\n        or not, things can happen to work, or break. '''\n\n    This function returns either `None` or one of the given `HANDLE` objects.\n    (The return value can be tested with the `is` operator.)\n    ")), Assign(targets=[Name(id='arrtype', ctx=Store())], value=BinOp(left=Name(id='HANDLE', ctx=Load()), op=Mult(), right=Call(func=Name(id='len', ctx=Load()), args=[Name(id='handles', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='handle_array', ctx=Store())], value=Call(func=Name(id='arrtype', ctx=Load()), args=[Starred(value=Name(id='handles', ctx=Load()), ctx=Load())], keywords=[])), AnnAssign(target=Name(id='ret', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Call(func=Attribute(value=Attribute(value=Name(id='windll', ctx=Load()), attr='kernel32', ctx=Load()), attr='WaitForMultipleObjects', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='handle_array', ctx=Load())], keywords=[]), Name(id='handle_array', ctx=Load()), Call(func=Name(id='BOOL', ctx=Load()), args=[Constant(value=False)], keywords=[]), Call(func=Name(id='DWORD', ctx=Load()), args=[Name(id='timeout', ctx=Load())], keywords=[])], keywords=[]), simple=1), If(test=Compare(left=Name(id='ret', ctx=Load()), ops=[Eq()], comparators=[Name(id='WAIT_TIMEOUT', ctx=Load())]), body=[Return(value=Constant(value=None))], orelse=[Return(value=Subscript(value=Name(id='handles', ctx=Load()), slice=Name(id='ret', ctx=Load()), ctx=Load()))])], decorator_list=[], returns=BinOp(left=Name(id='HANDLE', ctx=Load()), op=BitOr(), right=Constant(value=None))), FunctionDef(name='create_win32_event', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Creates a Win32 unnamed Event .\n    http://msdn.microsoft.com/en-us/library/windows/desktop/ms682396(v=vs.85).aspx\n    ')), Return(value=Call(func=Name(id='HANDLE', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='windll', ctx=Load()), attr='kernel32', ctx=Load()), attr='CreateEventA', ctx=Load()), args=[Call(func=Name(id='pointer', ctx=Load()), args=[Call(func=Name(id='SECURITY_ATTRIBUTES', ctx=Load()), args=[], keywords=[])], keywords=[]), Call(func=Name(id='BOOL', ctx=Load()), args=[Constant(value=True)], keywords=[]), Call(func=Name(id='BOOL', ctx=Load()), args=[Constant(value=False)], keywords=[]), Constant(value=None)], keywords=[])], keywords=[]))], decorator_list=[], returns=Name(id='HANDLE', ctx=Load()))], type_ignores=[])