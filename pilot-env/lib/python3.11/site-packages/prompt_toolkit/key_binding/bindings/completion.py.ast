Module(body=[Expr(value=Constant(value='\nKey binding handlers for displaying completions.\n')), ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), Import(names=[alias(name='asyncio')]), Import(names=[alias(name='math')]), ImportFrom(module='typing', names=[alias(name='TYPE_CHECKING')], level=0), ImportFrom(module='prompt_toolkit.application.run_in_terminal', names=[alias(name='in_terminal')], level=0), ImportFrom(module='prompt_toolkit.completion', names=[alias(name='CompleteEvent'), alias(name='Completion'), alias(name='get_common_complete_suffix')], level=0), ImportFrom(module='prompt_toolkit.formatted_text', names=[alias(name='StyleAndTextTuples')], level=0), ImportFrom(module='prompt_toolkit.key_binding.key_bindings', names=[alias(name='KeyBindings')], level=0), ImportFrom(module='prompt_toolkit.key_binding.key_processor', names=[alias(name='KeyPressEvent')], level=0), ImportFrom(module='prompt_toolkit.keys', names=[alias(name='Keys')], level=0), ImportFrom(module='prompt_toolkit.utils', names=[alias(name='get_cwidth')], level=0), If(test=Name(id='TYPE_CHECKING', ctx=Load()), body=[ImportFrom(module='prompt_toolkit.application', names=[alias(name='Application')], level=0), ImportFrom(module='prompt_toolkit.shortcuts', names=[alias(name='PromptSession')], level=0)], orelse=[]), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='generate_completions'), Constant(value='display_completions_like_readline')], ctx=Load())), Assign(targets=[Name(id='E', ctx=Store())], value=Name(id='KeyPressEvent', ctx=Load())), FunctionDef(name='generate_completions', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Tab-completion: where the first tab completes the common suffix and the\n    second tab lists all the completions.\n    ')), Assign(targets=[Name(id='b', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), If(test=Attribute(value=Name(id='b', ctx=Load()), attr='complete_state', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='b', ctx=Load()), attr='complete_next', ctx=Load()), args=[], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='b', ctx=Load()), attr='start_completion', ctx=Load()), args=[], keywords=[keyword(arg='insert_common_part', value=Constant(value=True))]))])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='display_completions_like_readline', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n    Key binding handler for readline-style tab completion.\n    This is meant to be as similar as possible to the way how readline displays\n    completions.\n\n    Generate the completions immediately (blocking) and display them above the\n    prompt in columns.\n\n    Usage::\n\n        # Call this handler when 'Tab' has been pressed.\n        key_bindings.add(Keys.ControlI)(display_completions_like_readline)\n    ")), Assign(targets=[Name(id='b', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), If(test=Compare(left=Attribute(value=Name(id='b', ctx=Load()), attr='completer', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return()], orelse=[]), Assign(targets=[Name(id='complete_event', ctx=Store())], value=Call(func=Name(id='CompleteEvent', ctx=Load()), args=[], keywords=[keyword(arg='completion_requested', value=Constant(value=True))])), Assign(targets=[Name(id='completions', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='completer', ctx=Load()), attr='get_completions', ctx=Load()), args=[Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), Name(id='complete_event', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='common_suffix', ctx=Store())], value=Call(func=Name(id='get_common_complete_suffix', ctx=Load()), args=[Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), Name(id='completions', ctx=Load())], keywords=[])), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='completions', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), body=[Expr(value=Call(func=Attribute(value=Name(id='b', ctx=Load()), attr='delete_before_cursor', ctx=Load()), args=[UnaryOp(op=USub(), operand=Attribute(value=Subscript(value=Name(id='completions', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='start_position', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='b', ctx=Load()), attr='insert_text', ctx=Load()), args=[Attribute(value=Subscript(value=Name(id='completions', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='text', ctx=Load())], keywords=[]))], orelse=[If(test=Name(id='common_suffix', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='b', ctx=Load()), attr='insert_text', ctx=Load()), args=[Name(id='common_suffix', ctx=Load())], keywords=[]))], orelse=[If(test=Name(id='completions', ctx=Load()), body=[Expr(value=Call(func=Name(id='_display_completions_like_readline', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), Name(id='completions', ctx=Load())], keywords=[]))], orelse=[])])])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_display_completions_like_readline', args=arguments(posonlyargs=[], args=[arg(arg='app', annotation=Subscript(value=Name(id='Application', ctx=Load()), slice=Name(id='object', ctx=Load()), ctx=Load())), arg(arg='completions', annotation=Subscript(value=Name(id='list', ctx=Load()), slice=Name(id='Completion', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Display the list of completions in columns above the prompt.\n    This will ask for a confirmation if there are too many completions to fit\n    on a single page and provide a paginator to walk through them.\n    ')), ImportFrom(module='prompt_toolkit.formatted_text', names=[alias(name='to_formatted_text')], level=0), ImportFrom(module='prompt_toolkit.shortcuts.prompt', names=[alias(name='create_confirm_session')], level=0), Assign(targets=[Name(id='term_size', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='output', ctx=Load()), attr='get_size', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='term_width', ctx=Store())], value=Attribute(value=Name(id='term_size', ctx=Load()), attr='columns', ctx=Load())), Assign(targets=[Name(id='term_height', ctx=Store())], value=Attribute(value=Name(id='term_size', ctx=Load()), attr='rows', ctx=Load())), Assign(targets=[Name(id='max_compl_width', ctx=Store())], value=Call(func=Name(id='min', ctx=Load()), args=[Name(id='term_width', ctx=Load()), BinOp(left=Call(func=Name(id='max', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='get_cwidth', ctx=Load()), args=[Attribute(value=Name(id='c', ctx=Load()), attr='display_text', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='c', ctx=Store()), iter=Name(id='completions', ctx=Load()), ifs=[], is_async=0)])], keywords=[]), op=Add(), right=Constant(value=1))], keywords=[])), Assign(targets=[Name(id='column_count', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Constant(value=1), BinOp(left=Name(id='term_width', ctx=Load()), op=FloorDiv(), right=Name(id='max_compl_width', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='completions_per_page', ctx=Store())], value=BinOp(left=Name(id='column_count', ctx=Load()), op=Mult(), right=BinOp(left=Name(id='term_height', ctx=Load()), op=Sub(), right=Constant(value=1)))), Assign(targets=[Name(id='page_count', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='ceil', ctx=Load()), args=[BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='completions', ctx=Load())], keywords=[]), op=Div(), right=Call(func=Name(id='float', ctx=Load()), args=[Name(id='completions_per_page', ctx=Load())], keywords=[]))], keywords=[])], keywords=[])), FunctionDef(name='display', args=arguments(posonlyargs=[], args=[arg(arg='page', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='page_completions', ctx=Store())], value=Subscript(value=Name(id='completions', ctx=Load()), slice=Slice(lower=BinOp(left=Name(id='page', ctx=Load()), op=Mult(), right=Name(id='completions_per_page', ctx=Load())), upper=BinOp(left=BinOp(left=Name(id='page', ctx=Load()), op=Add(), right=Constant(value=1)), op=Mult(), right=Name(id='completions_per_page', ctx=Load()))), ctx=Load())), Assign(targets=[Name(id='page_row_count', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='ceil', ctx=Load()), args=[BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='page_completions', ctx=Load())], keywords=[]), op=Div(), right=Call(func=Name(id='float', ctx=Load()), args=[Name(id='column_count', ctx=Load())], keywords=[]))], keywords=[])], keywords=[])), Assign(targets=[Name(id='page_columns', ctx=Store())], value=ListComp(elt=Subscript(value=Name(id='page_completions', ctx=Load()), slice=Slice(lower=BinOp(left=Name(id='i', ctx=Load()), op=Mult(), right=Name(id='page_row_count', ctx=Load())), upper=BinOp(left=BinOp(left=Name(id='i', ctx=Load()), op=Add(), right=Constant(value=1)), op=Mult(), right=Name(id='page_row_count', ctx=Load()))), ctx=Load()), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='column_count', ctx=Load())], keywords=[]), ifs=[], is_async=0)])), AnnAssign(target=Name(id='result', ctx=Store()), annotation=Name(id='StyleAndTextTuples', ctx=Load()), value=List(elts=[], ctx=Load()), simple=1), For(target=Name(id='r', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='page_row_count', ctx=Load())], keywords=[]), body=[For(target=Name(id='c', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='column_count', ctx=Load())], keywords=[]), body=[Try(body=[Assign(targets=[Name(id='completion', ctx=Store())], value=Subscript(value=Subscript(value=Name(id='page_columns', ctx=Load()), slice=Name(id='c', ctx=Load()), ctx=Load()), slice=Name(id='r', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='style', ctx=Store())], value=BinOp(left=Constant(value='class:readline-like-completions.completion '), op=Add(), right=BoolOp(op=Or(), values=[Attribute(value=Name(id='completion', ctx=Load()), attr='style', ctx=Load()), Constant(value='')]))), Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='extend', ctx=Load()), args=[Call(func=Name(id='to_formatted_text', ctx=Load()), args=[Attribute(value=Name(id='completion', ctx=Load()), attr='display', ctx=Load())], keywords=[keyword(arg='style', value=Name(id='style', ctx=Load()))])], keywords=[])), Assign(targets=[Name(id='padding', ctx=Store())], value=BinOp(left=Name(id='max_compl_width', ctx=Load()), op=Sub(), right=Call(func=Name(id='get_cwidth', ctx=Load()), args=[Attribute(value=Name(id='completion', ctx=Load()), attr='display_text', ctx=Load())], keywords=[]))), Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Attribute(value=Name(id='completion', ctx=Load()), attr='style', ctx=Load()), BinOp(left=Constant(value=' '), op=Mult(), right=Name(id='padding', ctx=Load()))], ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='IndexError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Constant(value=''), Constant(value='\n')], ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='app', ctx=Load()), attr='print_text', ctx=Load()), args=[Call(func=Name(id='to_formatted_text', ctx=Load()), args=[Name(id='result', ctx=Load()), Constant(value='class:readline-like-completions')], keywords=[])], keywords=[]))], decorator_list=[], returns=Constant(value=None)), AsyncFunctionDef(name='run_compl', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Coroutine.')), AsyncWith(items=[withitem(context_expr=Call(func=Name(id='in_terminal', ctx=Load()), args=[], keywords=[keyword(arg='render_cli_done', value=Constant(value=True))]))], body=[If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='completions', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Name(id='completions_per_page', ctx=Load())]), body=[Assign(targets=[Name(id='confirm', ctx=Store())], value=Await(value=Call(func=Attribute(value=Call(func=Name(id='create_confirm_session', ctx=Load()), args=[JoinedStr(values=[Constant(value='Display all '), FormattedValue(value=Call(func=Name(id='len', ctx=Load()), args=[Name(id='completions', ctx=Load())], keywords=[]), conversion=-1), Constant(value=' possibilities?')])], keywords=[]), attr='prompt_async', ctx=Load()), args=[], keywords=[]))), If(test=Name(id='confirm', ctx=Load()), body=[For(target=Name(id='page', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='page_count', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Name(id='display', ctx=Load()), args=[Name(id='page', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='page', ctx=Load()), ops=[NotEq()], comparators=[BinOp(left=Name(id='page_count', ctx=Load()), op=Sub(), right=Constant(value=1))]), body=[Assign(targets=[Name(id='show_more', ctx=Store())], value=Await(value=Call(func=Attribute(value=Call(func=Name(id='_create_more_session', ctx=Load()), args=[Constant(value='--MORE--')], keywords=[]), attr='prompt_async', ctx=Load()), args=[], keywords=[]))), If(test=UnaryOp(op=Not(), operand=Name(id='show_more', ctx=Load())), body=[Return()], orelse=[])], orelse=[])], orelse=[])], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='output', ctx=Load()), attr='flush', ctx=Load()), args=[], keywords=[]))])], orelse=[Expr(value=Call(func=Name(id='display', ctx=Load()), args=[Constant(value=0)], keywords=[]))])])], decorator_list=[], returns=Constant(value=None)), Return(value=Call(func=Attribute(value=Name(id='app', ctx=Load()), attr='create_background_task', ctx=Load()), args=[Call(func=Name(id='run_compl', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[], returns=Subscript(value=Attribute(value=Name(id='asyncio', ctx=Load()), attr='Task', ctx=Load()), slice=Constant(value=None), ctx=Load())), FunctionDef(name='_create_more_session', args=arguments(posonlyargs=[], args=[arg(arg='message', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='--MORE--')]), body=[Expr(value=Constant(value='\n    Create a `PromptSession` object for displaying the "--MORE--".\n    ')), ImportFrom(module='prompt_toolkit.shortcuts', names=[alias(name='PromptSession')], level=0), Assign(targets=[Name(id='bindings', ctx=Store())], value=Call(func=Name(id='KeyBindings', ctx=Load()), args=[], keywords=[])), FunctionDef(name='_yes', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='exit', ctx=Load()), args=[], keywords=[keyword(arg='result', value=Constant(value=True))]))], decorator_list=[Call(func=Attribute(value=Name(id='bindings', ctx=Load()), attr='add', ctx=Load()), args=[Constant(value=' ')], keywords=[]), Call(func=Attribute(value=Name(id='bindings', ctx=Load()), attr='add', ctx=Load()), args=[Constant(value='y')], keywords=[]), Call(func=Attribute(value=Name(id='bindings', ctx=Load()), attr='add', ctx=Load()), args=[Constant(value='Y')], keywords=[]), Call(func=Attribute(value=Name(id='bindings', ctx=Load()), attr='add', ctx=Load()), args=[Attribute(value=Name(id='Keys', ctx=Load()), attr='ControlJ', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='bindings', ctx=Load()), attr='add', ctx=Load()), args=[Attribute(value=Name(id='Keys', ctx=Load()), attr='ControlM', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='bindings', ctx=Load()), attr='add', ctx=Load()), args=[Attribute(value=Name(id='Keys', ctx=Load()), attr='ControlI', ctx=Load())], keywords=[])], returns=Constant(value=None)), FunctionDef(name='_no', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='exit', ctx=Load()), args=[], keywords=[keyword(arg='result', value=Constant(value=False))]))], decorator_list=[Call(func=Attribute(value=Name(id='bindings', ctx=Load()), attr='add', ctx=Load()), args=[Constant(value='n')], keywords=[]), Call(func=Attribute(value=Name(id='bindings', ctx=Load()), attr='add', ctx=Load()), args=[Constant(value='N')], keywords=[]), Call(func=Attribute(value=Name(id='bindings', ctx=Load()), attr='add', ctx=Load()), args=[Constant(value='q')], keywords=[]), Call(func=Attribute(value=Name(id='bindings', ctx=Load()), attr='add', ctx=Load()), args=[Constant(value='Q')], keywords=[]), Call(func=Attribute(value=Name(id='bindings', ctx=Load()), attr='add', ctx=Load()), args=[Attribute(value=Name(id='Keys', ctx=Load()), attr='ControlC', ctx=Load())], keywords=[])], returns=Constant(value=None)), FunctionDef(name='_ignore', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Disable inserting of text.'))], decorator_list=[Call(func=Attribute(value=Name(id='bindings', ctx=Load()), attr='add', ctx=Load()), args=[Attribute(value=Name(id='Keys', ctx=Load()), attr='Any', ctx=Load())], keywords=[])], returns=Constant(value=None)), Return(value=Call(func=Name(id='PromptSession', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[keyword(arg='key_bindings', value=Name(id='bindings', ctx=Load())), keyword(arg='erase_when_done', value=Constant(value=True))]))], decorator_list=[], returns=Subscript(value=Name(id='PromptSession', ctx=Load()), slice=Name(id='bool', ctx=Load()), ctx=Load()))], type_ignores=[])