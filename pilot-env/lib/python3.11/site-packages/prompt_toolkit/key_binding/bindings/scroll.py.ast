Module(body=[Expr(value=Constant(value="\nKey bindings, for scrolling up and down through pages.\n\nThis are separate bindings, because GNU readline doesn't have them, but\nthey are very useful for navigating through long multiline buffers, like in\nVi, Emacs, etc...\n")), ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), ImportFrom(module='prompt_toolkit.key_binding.key_processor', names=[alias(name='KeyPressEvent')], level=0), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='scroll_forward'), Constant(value='scroll_backward'), Constant(value='scroll_half_page_up'), Constant(value='scroll_half_page_down'), Constant(value='scroll_one_line_up'), Constant(value='scroll_one_line_down')], ctx=Load())), Assign(targets=[Name(id='E', ctx=Store())], value=Name(id='KeyPressEvent', ctx=Load())), FunctionDef(name='scroll_forward', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load())), arg(arg='half', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Expr(value=Constant(value='\n    Scroll window down.\n    ')), Assign(targets=[Name(id='w', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='layout', ctx=Load()), attr='current_window', ctx=Load())), Assign(targets=[Name(id='b', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='current_buffer', ctx=Load())), If(test=BoolOp(op=And(), values=[Name(id='w', ctx=Load()), Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load())]), body=[Assign(targets=[Name(id='info', ctx=Store())], value=Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load())), Assign(targets=[Name(id='ui_content', ctx=Store())], value=Attribute(value=Name(id='info', ctx=Load()), attr='ui_content', ctx=Load())), Assign(targets=[Name(id='scroll_height', ctx=Store())], value=Attribute(value=Name(id='info', ctx=Load()), attr='window_height', ctx=Load())), If(test=Name(id='half', ctx=Load()), body=[AugAssign(target=Name(id='scroll_height', ctx=Store()), op=FloorDiv(), value=Constant(value=2))], orelse=[]), Assign(targets=[Name(id='y', ctx=Store())], value=BinOp(left=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='cursor_position_row', ctx=Load()), op=Add(), right=Constant(value=1))), Assign(targets=[Name(id='height', ctx=Store())], value=Constant(value=0)), While(test=Compare(left=Name(id='y', ctx=Load()), ops=[Lt()], comparators=[Attribute(value=Name(id='ui_content', ctx=Load()), attr='line_count', ctx=Load())]), body=[Assign(targets=[Name(id='line_height', ctx=Store())], value=Call(func=Attribute(value=Name(id='info', ctx=Load()), attr='get_height_for_line', ctx=Load()), args=[Name(id='y', ctx=Load())], keywords=[])), If(test=Compare(left=BinOp(left=Name(id='height', ctx=Load()), op=Add(), right=Name(id='line_height', ctx=Load())), ops=[Lt()], comparators=[Name(id='scroll_height', ctx=Load())]), body=[AugAssign(target=Name(id='height', ctx=Store()), op=Add(), value=Name(id='line_height', ctx=Load())), AugAssign(target=Name(id='y', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[Break()])], orelse=[]), Assign(targets=[Attribute(value=Name(id='b', ctx=Load()), attr='cursor_position', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='translate_row_col_to_index', ctx=Load()), args=[Name(id='y', ctx=Load()), Constant(value=0)], keywords=[]))], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='scroll_backward', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load())), arg(arg='half', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Expr(value=Constant(value='\n    Scroll window up.\n    ')), Assign(targets=[Name(id='w', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='layout', ctx=Load()), attr='current_window', ctx=Load())), Assign(targets=[Name(id='b', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='current_buffer', ctx=Load())), If(test=BoolOp(op=And(), values=[Name(id='w', ctx=Load()), Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load())]), body=[Assign(targets=[Name(id='info', ctx=Store())], value=Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load())), Assign(targets=[Name(id='scroll_height', ctx=Store())], value=Attribute(value=Name(id='info', ctx=Load()), attr='window_height', ctx=Load())), If(test=Name(id='half', ctx=Load()), body=[AugAssign(target=Name(id='scroll_height', ctx=Store()), op=FloorDiv(), value=Constant(value=2))], orelse=[]), Assign(targets=[Name(id='y', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Constant(value=0), BinOp(left=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='cursor_position_row', ctx=Load()), op=Sub(), right=Constant(value=1))], keywords=[])), Assign(targets=[Name(id='height', ctx=Store())], value=Constant(value=0)), While(test=Compare(left=Name(id='y', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), body=[Assign(targets=[Name(id='line_height', ctx=Store())], value=Call(func=Attribute(value=Name(id='info', ctx=Load()), attr='get_height_for_line', ctx=Load()), args=[Name(id='y', ctx=Load())], keywords=[])), If(test=Compare(left=BinOp(left=Name(id='height', ctx=Load()), op=Add(), right=Name(id='line_height', ctx=Load())), ops=[Lt()], comparators=[Name(id='scroll_height', ctx=Load())]), body=[AugAssign(target=Name(id='height', ctx=Store()), op=Add(), value=Name(id='line_height', ctx=Load())), AugAssign(target=Name(id='y', ctx=Store()), op=Sub(), value=Constant(value=1))], orelse=[Break()])], orelse=[]), Assign(targets=[Attribute(value=Name(id='b', ctx=Load()), attr='cursor_position', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='translate_row_col_to_index', ctx=Load()), args=[Name(id='y', ctx=Load()), Constant(value=0)], keywords=[]))], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='scroll_half_page_down', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Same as ControlF, but only scroll half a page.\n    ')), Expr(value=Call(func=Name(id='scroll_forward', ctx=Load()), args=[Name(id='event', ctx=Load())], keywords=[keyword(arg='half', value=Constant(value=True))]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='scroll_half_page_up', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Same as ControlB, but only scroll half a page.\n    ')), Expr(value=Call(func=Name(id='scroll_backward', ctx=Load()), args=[Name(id='event', ctx=Load())], keywords=[keyword(arg='half', value=Constant(value=True))]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='scroll_one_line_down', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    scroll_offset += 1\n    ')), Assign(targets=[Name(id='w', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='layout', ctx=Load()), attr='current_window', ctx=Load())), Assign(targets=[Name(id='b', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='current_buffer', ctx=Load())), If(test=Name(id='w', ctx=Load()), body=[If(test=Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load()), body=[Assign(targets=[Name(id='info', ctx=Store())], value=Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load())), If(test=Compare(left=Attribute(value=Name(id='w', ctx=Load()), attr='vertical_scroll', ctx=Load()), ops=[Lt()], comparators=[BinOp(left=Attribute(value=Name(id='info', ctx=Load()), attr='content_height', ctx=Load()), op=Sub(), right=Attribute(value=Name(id='info', ctx=Load()), attr='window_height', ctx=Load()))]), body=[If(test=Compare(left=Attribute(value=Attribute(value=Name(id='info', ctx=Load()), attr='cursor_position', ctx=Load()), attr='y', ctx=Load()), ops=[LtE()], comparators=[Attribute(value=Attribute(value=Name(id='info', ctx=Load()), attr='configured_scroll_offsets', ctx=Load()), attr='top', ctx=Load())]), body=[AugAssign(target=Attribute(value=Name(id='b', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='get_cursor_down_position', ctx=Load()), args=[], keywords=[]))], orelse=[]), AugAssign(target=Attribute(value=Name(id='w', ctx=Load()), attr='vertical_scroll', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[])], orelse=[])], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='scroll_one_line_up', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    scroll_offset -= 1\n    ')), Assign(targets=[Name(id='w', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='layout', ctx=Load()), attr='current_window', ctx=Load())), Assign(targets=[Name(id='b', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='current_buffer', ctx=Load())), If(test=Name(id='w', ctx=Load()), body=[If(test=Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load()), body=[Assign(targets=[Name(id='info', ctx=Store())], value=Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load())), If(test=Compare(left=Attribute(value=Name(id='w', ctx=Load()), attr='vertical_scroll', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), body=[Assign(targets=[Name(id='first_line_height', ctx=Store())], value=Call(func=Attribute(value=Name(id='info', ctx=Load()), attr='get_height_for_line', ctx=Load()), args=[Call(func=Attribute(value=Name(id='info', ctx=Load()), attr='first_visible_line', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='cursor_up', ctx=Store())], value=BinOp(left=Attribute(value=Attribute(value=Name(id='info', ctx=Load()), attr='cursor_position', ctx=Load()), attr='y', ctx=Load()), op=Sub(), right=BinOp(left=BinOp(left=BinOp(left=Attribute(value=Name(id='info', ctx=Load()), attr='window_height', ctx=Load()), op=Sub(), right=Constant(value=1)), op=Sub(), right=Name(id='first_line_height', ctx=Load())), op=Sub(), right=Attribute(value=Attribute(value=Name(id='info', ctx=Load()), attr='configured_scroll_offsets', ctx=Load()), attr='bottom', ctx=Load())))), For(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='max', ctx=Load()), args=[Constant(value=0), Name(id='cursor_up', ctx=Load())], keywords=[])], keywords=[]), body=[AugAssign(target=Attribute(value=Name(id='b', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='get_cursor_up_position', ctx=Load()), args=[], keywords=[]))], orelse=[]), AugAssign(target=Attribute(value=Name(id='w', ctx=Load()), attr='vertical_scroll', ctx=Store()), op=Sub(), value=Constant(value=1))], orelse=[])], orelse=[])], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='scroll_page_down', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Scroll page down. (Prefer the cursor at the top of the page, after scrolling.)\n    ')), Assign(targets=[Name(id='w', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='layout', ctx=Load()), attr='current_window', ctx=Load())), Assign(targets=[Name(id='b', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='current_buffer', ctx=Load())), If(test=BoolOp(op=And(), values=[Name(id='w', ctx=Load()), Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load())]), body=[Assign(targets=[Name(id='line_index', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load()), attr='last_visible_line', ctx=Load()), args=[], keywords=[]), BinOp(left=Attribute(value=Name(id='w', ctx=Load()), attr='vertical_scroll', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[])), Assign(targets=[Attribute(value=Name(id='w', ctx=Load()), attr='vertical_scroll', ctx=Store())], value=Name(id='line_index', ctx=Load())), Assign(targets=[Attribute(value=Name(id='b', ctx=Load()), attr='cursor_position', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='translate_row_col_to_index', ctx=Load()), args=[Name(id='line_index', ctx=Load()), Constant(value=0)], keywords=[])), AugAssign(target=Attribute(value=Name(id='b', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='get_start_of_line_position', ctx=Load()), args=[], keywords=[keyword(arg='after_whitespace', value=Constant(value=True))]))], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='scroll_page_up', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Scroll page up. (Prefer the cursor at the bottom of the page, after scrolling.)\n    ')), Assign(targets=[Name(id='w', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='layout', ctx=Load()), attr='current_window', ctx=Load())), Assign(targets=[Name(id='b', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='current_buffer', ctx=Load())), If(test=BoolOp(op=And(), values=[Name(id='w', ctx=Load()), Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load())]), body=[Assign(targets=[Name(id='line_index', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Constant(value=0), Call(func=Name(id='min', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load()), attr='first_visible_line', ctx=Load()), args=[], keywords=[]), BinOp(left=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='cursor_position_row', ctx=Load()), op=Sub(), right=Constant(value=1))], keywords=[])], keywords=[])), Assign(targets=[Attribute(value=Name(id='b', ctx=Load()), attr='cursor_position', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='translate_row_col_to_index', ctx=Load()), args=[Name(id='line_index', ctx=Load()), Constant(value=0)], keywords=[])), AugAssign(target=Attribute(value=Name(id='b', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='get_start_of_line_position', ctx=Load()), args=[], keywords=[keyword(arg='after_whitespace', value=Constant(value=True))])), Assign(targets=[Attribute(value=Name(id='w', ctx=Load()), attr='vertical_scroll', ctx=Store())], value=Constant(value=0))], orelse=[])], decorator_list=[], returns=Constant(value=None))], type_ignores=[])