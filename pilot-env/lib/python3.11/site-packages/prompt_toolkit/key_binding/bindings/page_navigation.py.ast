Module(body=[Expr(value=Constant(value='\nKey bindings for extra page navigation: bindings for up/down scrolling through\nlong pages, like in Emacs or Vi.\n')), ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), ImportFrom(module='prompt_toolkit.filters', names=[alias(name='buffer_has_focus'), alias(name='emacs_mode'), alias(name='vi_mode')], level=0), ImportFrom(module='prompt_toolkit.key_binding.key_bindings', names=[alias(name='ConditionalKeyBindings'), alias(name='KeyBindings'), alias(name='KeyBindingsBase'), alias(name='merge_key_bindings')], level=0), ImportFrom(module='scroll', names=[alias(name='scroll_backward'), alias(name='scroll_forward'), alias(name='scroll_half_page_down'), alias(name='scroll_half_page_up'), alias(name='scroll_one_line_down'), alias(name='scroll_one_line_up'), alias(name='scroll_page_down'), alias(name='scroll_page_up')], level=1), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='load_page_navigation_bindings'), Constant(value='load_emacs_page_navigation_bindings'), Constant(value='load_vi_page_navigation_bindings')], ctx=Load())), FunctionDef(name='load_page_navigation_bindings', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Load both the Vi and Emacs bindings for page navigation.\n    ')), Return(value=Call(func=Name(id='ConditionalKeyBindings', ctx=Load()), args=[Call(func=Name(id='merge_key_bindings', ctx=Load()), args=[List(elts=[Call(func=Name(id='load_emacs_page_navigation_bindings', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='load_vi_page_navigation_bindings', ctx=Load()), args=[], keywords=[])], ctx=Load())], keywords=[]), Name(id='buffer_has_focus', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='KeyBindingsBase', ctx=Load())), FunctionDef(name='load_emacs_page_navigation_bindings', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n    Key bindings, for scrolling up and down through pages.\n    This are separate bindings, because GNU readline doesn't have them.\n    ")), Assign(targets=[Name(id='key_bindings', ctx=Store())], value=Call(func=Name(id='KeyBindings', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='handle', ctx=Store())], value=Attribute(value=Name(id='key_bindings', ctx=Load()), attr='add', ctx=Load())), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-v')], keywords=[]), args=[Name(id='scroll_page_down', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='pagedown')], keywords=[]), args=[Name(id='scroll_page_down', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='escape'), Constant(value='v')], keywords=[]), args=[Name(id='scroll_page_up', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='pageup')], keywords=[]), args=[Name(id='scroll_page_up', ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='ConditionalKeyBindings', ctx=Load()), args=[Name(id='key_bindings', ctx=Load()), Name(id='emacs_mode', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='KeyBindingsBase', ctx=Load())), FunctionDef(name='load_vi_page_navigation_bindings', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n    Key bindings, for scrolling up and down through pages.\n    This are separate bindings, because GNU readline doesn't have them.\n    ")), Assign(targets=[Name(id='key_bindings', ctx=Store())], value=Call(func=Name(id='KeyBindings', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='handle', ctx=Store())], value=Attribute(value=Name(id='key_bindings', ctx=Load()), attr='add', ctx=Load())), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-f')], keywords=[]), args=[Name(id='scroll_forward', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-b')], keywords=[]), args=[Name(id='scroll_backward', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-d')], keywords=[]), args=[Name(id='scroll_half_page_down', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-u')], keywords=[]), args=[Name(id='scroll_half_page_up', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-e')], keywords=[]), args=[Name(id='scroll_one_line_down', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-y')], keywords=[]), args=[Name(id='scroll_one_line_up', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='pagedown')], keywords=[]), args=[Name(id='scroll_page_down', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='pageup')], keywords=[]), args=[Name(id='scroll_page_up', ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='ConditionalKeyBindings', ctx=Load()), args=[Name(id='key_bindings', ctx=Load()), Name(id='vi_mode', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='KeyBindingsBase', ctx=Load()))], type_ignores=[])