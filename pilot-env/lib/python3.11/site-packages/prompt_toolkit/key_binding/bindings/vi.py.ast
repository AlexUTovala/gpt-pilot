Module(body=[ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), Import(names=[alias(name='codecs')]), Import(names=[alias(name='string')]), ImportFrom(module='enum', names=[alias(name='Enum')], level=0), ImportFrom(module='itertools', names=[alias(name='accumulate')], level=0), ImportFrom(module='typing', names=[alias(name='Callable'), alias(name='Iterable'), alias(name='Tuple'), alias(name='TypeVar')], level=0), ImportFrom(module='prompt_toolkit.application.current', names=[alias(name='get_app')], level=0), ImportFrom(module='prompt_toolkit.buffer', names=[alias(name='Buffer'), alias(name='indent'), alias(name='reshape_text'), alias(name='unindent')], level=0), ImportFrom(module='prompt_toolkit.clipboard', names=[alias(name='ClipboardData')], level=0), ImportFrom(module='prompt_toolkit.document', names=[alias(name='Document')], level=0), ImportFrom(module='prompt_toolkit.filters', names=[alias(name='Always'), alias(name='Condition'), alias(name='Filter'), alias(name='has_arg'), alias(name='is_read_only'), alias(name='is_searching')], level=0), ImportFrom(module='prompt_toolkit.filters.app', names=[alias(name='in_paste_mode'), alias(name='is_multiline'), alias(name='vi_digraph_mode'), alias(name='vi_insert_mode'), alias(name='vi_insert_multiple_mode'), alias(name='vi_mode'), alias(name='vi_navigation_mode'), alias(name='vi_recording_macro'), alias(name='vi_replace_mode'), alias(name='vi_replace_single_mode'), alias(name='vi_search_direction_reversed'), alias(name='vi_selection_mode'), alias(name='vi_waiting_for_text_object_mode')], level=0), ImportFrom(module='prompt_toolkit.input.vt100_parser', names=[alias(name='Vt100Parser')], level=0), ImportFrom(module='prompt_toolkit.key_binding.digraphs', names=[alias(name='DIGRAPHS')], level=0), ImportFrom(module='prompt_toolkit.key_binding.key_processor', names=[alias(name='KeyPress'), alias(name='KeyPressEvent')], level=0), ImportFrom(module='prompt_toolkit.key_binding.vi_state', names=[alias(name='CharacterFind'), alias(name='InputMode')], level=0), ImportFrom(module='prompt_toolkit.keys', names=[alias(name='Keys')], level=0), ImportFrom(module='prompt_toolkit.search', names=[alias(name='SearchDirection')], level=0), ImportFrom(module='prompt_toolkit.selection', names=[alias(name='PasteMode'), alias(name='SelectionState'), alias(name='SelectionType')], level=0), ImportFrom(module='key_bindings', names=[alias(name='ConditionalKeyBindings'), alias(name='KeyBindings'), alias(name='KeyBindingsBase')], level=2), ImportFrom(module='named_commands', names=[alias(name='get_by_name')], level=1), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='load_vi_bindings'), Constant(value='load_vi_search_bindings')], ctx=Load())), Assign(targets=[Name(id='E', ctx=Store())], value=Name(id='KeyPressEvent', ctx=Load())), Assign(targets=[Name(id='ascii_lowercase', ctx=Store())], value=Attribute(value=Name(id='string', ctx=Load()), attr='ascii_lowercase', ctx=Load())), Assign(targets=[Name(id='vi_register_names', ctx=Store())], value=BinOp(left=Name(id='ascii_lowercase', ctx=Load()), op=Add(), right=Constant(value='0123456789'))), ClassDef(name='TextObjectType', bases=[Name(id='Enum', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='EXCLUSIVE', ctx=Store())], value=Constant(value='EXCLUSIVE')), Assign(targets=[Name(id='INCLUSIVE', ctx=Store())], value=Constant(value='INCLUSIVE')), Assign(targets=[Name(id='LINEWISE', ctx=Store())], value=Constant(value='LINEWISE')), Assign(targets=[Name(id='BLOCK', ctx=Store())], value=Constant(value='BLOCK'))], decorator_list=[]), ClassDef(name='TextObject', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    Return struct for functions wrapped in ``text_object``.\n    Both `start` and `end` are relative to the current cursor position.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='start', annotation=Name(id='int', ctx=Load())), arg(arg='end', annotation=Name(id='int', ctx=Load())), arg(arg='type', annotation=Name(id='TextObjectType', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=0), Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='EXCLUSIVE', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Store())], value=Name(id='start', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='end', ctx=Store())], value=Name(id='end', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='type', ctx=Store())], value=Name(id='type', ctx=Load()))], decorator_list=[]), FunctionDef(name='selection_type', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='LINEWISE', ctx=Load())]), body=[Return(value=Attribute(value=Name(id='SelectionType', ctx=Load()), attr='LINES', ctx=Load()))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='BLOCK', ctx=Load())]), body=[Return(value=Attribute(value=Name(id='SelectionType', ctx=Load()), attr='BLOCK', ctx=Load()))], orelse=[Return(value=Attribute(value=Name(id='SelectionType', ctx=Load()), attr='CHARACTERS', ctx=Load()))])], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='SelectionType', ctx=Load())), FunctionDef(name='sorted', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Return a (start, end) tuple where start <= end.\n        ')), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load()), ops=[Lt()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='end', ctx=Load())]), body=[Return(value=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='end', ctx=Load())], ctx=Load()))], orelse=[Return(value=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='end', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load())], ctx=Load()))])], decorator_list=[], returns=Subscript(value=Name(id='tuple', ctx=Load()), slice=Tuple(elts=[Name(id='int', ctx=Load()), Name(id='int', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='operator_range', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='document', annotation=Name(id='Document', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Return a (start, end) tuple with start <= end that indicates the range\n        operators should operate on.\n        `buffer` is used to get start and end of line positions.\n\n        This should return something that can be used in a slice, so the `end`\n        position is *not* included.\n        ')), Assign(targets=[Tuple(elts=[Name(id='start', ctx=Store()), Name(id='end', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='sorted', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='doc', ctx=Store())], value=Name(id='document', ctx=Load())), If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='EXCLUSIVE', ctx=Load())]), Compare(left=Subscript(value=Call(func=Attribute(value=Name(id='doc', ctx=Load()), attr='translate_index_to_position', ctx=Load()), args=[BinOp(left=Name(id='end', ctx=Load()), op=Add(), right=Attribute(value=Name(id='doc', ctx=Load()), attr='cursor_position', ctx=Load()))], keywords=[]), slice=Constant(value=1), ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)])]), body=[AugAssign(target=Name(id='end', ctx=Store()), op=Sub(), value=Constant(value=1))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='INCLUSIVE', ctx=Load())]), body=[AugAssign(target=Name(id='end', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='LINEWISE', ctx=Load())]), body=[Assign(targets=[Tuple(elts=[Name(id='row', ctx=Store()), Name(id='col', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='doc', ctx=Load()), attr='translate_index_to_position', ctx=Load()), args=[BinOp(left=Name(id='start', ctx=Load()), op=Add(), right=Attribute(value=Name(id='doc', ctx=Load()), attr='cursor_position', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='start', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='doc', ctx=Load()), attr='translate_row_col_to_index', ctx=Load()), args=[Name(id='row', ctx=Load()), Constant(value=0)], keywords=[]), op=Sub(), right=Attribute(value=Name(id='doc', ctx=Load()), attr='cursor_position', ctx=Load()))), Assign(targets=[Tuple(elts=[Name(id='row', ctx=Store()), Name(id='col', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='doc', ctx=Load()), attr='translate_index_to_position', ctx=Load()), args=[BinOp(left=Name(id='end', ctx=Load()), op=Add(), right=Attribute(value=Name(id='doc', ctx=Load()), attr='cursor_position', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='end', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='doc', ctx=Load()), attr='translate_row_col_to_index', ctx=Load()), args=[Name(id='row', ctx=Load()), Call(func=Name(id='len', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='doc', ctx=Load()), attr='lines', ctx=Load()), slice=Name(id='row', ctx=Load()), ctx=Load())], keywords=[])], keywords=[]), op=Sub(), right=Attribute(value=Name(id='doc', ctx=Load()), attr='cursor_position', ctx=Load())))], orelse=[]), Return(value=Tuple(elts=[Name(id='start', ctx=Load()), Name(id='end', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='tuple', ctx=Load()), slice=Tuple(elts=[Name(id='int', ctx=Load()), Name(id='int', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='get_line_numbers', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='buffer', annotation=Name(id='Buffer', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Return a (start_line, end_line) pair.\n        ')), Assign(targets=[Tuple(elts=[Name(id='from_', ctx=Store()), Name(id='to', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='operator_range', ctx=Load()), args=[Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load())], keywords=[])), AugAssign(target=Name(id='from_', ctx=Store()), op=Add(), value=Attribute(value=Name(id='buffer', ctx=Load()), attr='cursor_position', ctx=Load())), AugAssign(target=Name(id='to', ctx=Store()), op=Add(), value=Attribute(value=Name(id='buffer', ctx=Load()), attr='cursor_position', ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='from_', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='translate_index_to_position', ctx=Load()), args=[Name(id='from_', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='to', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='translate_index_to_position', ctx=Load()), args=[Name(id='to', ctx=Load())], keywords=[])), Return(value=Tuple(elts=[Name(id='from_', ctx=Load()), Name(id='to', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='tuple', ctx=Load()), slice=Tuple(elts=[Name(id='int', ctx=Load()), Name(id='int', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='cut', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='buffer', annotation=Name(id='Buffer', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Turn text object into `ClipboardData` instance.\n        ')), Assign(targets=[Tuple(elts=[Name(id='from_', ctx=Store()), Name(id='to', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='operator_range', ctx=Load()), args=[Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load())], keywords=[])), AugAssign(target=Name(id='from_', ctx=Store()), op=Add(), value=Attribute(value=Name(id='buffer', ctx=Load()), attr='cursor_position', ctx=Load())), AugAssign(target=Name(id='to', ctx=Store()), op=Add(), value=Attribute(value=Name(id='buffer', ctx=Load()), attr='cursor_position', ctx=Load())), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='type', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='LINEWISE', ctx=Load())]), body=[AugAssign(target=Name(id='to', ctx=Store()), op=Sub(), value=Constant(value=1))], orelse=[]), Assign(targets=[Name(id='document', ctx=Store())], value=Call(func=Name(id='Document', ctx=Load()), args=[Attribute(value=Name(id='buffer', ctx=Load()), attr='text', ctx=Load()), Name(id='to', ctx=Load()), Call(func=Name(id='SelectionState', ctx=Load()), args=[], keywords=[keyword(arg='original_cursor_position', value=Name(id='from_', ctx=Load())), keyword(arg='type', value=Attribute(value=Name(id='self', ctx=Load()), attr='selection_type', ctx=Load()))])], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='new_document', ctx=Store()), Name(id='clipboard_data', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='document', ctx=Load()), attr='cut_selection', ctx=Load()), args=[], keywords=[])), Return(value=Tuple(elts=[Name(id='new_document', ctx=Load()), Name(id='clipboard_data', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='tuple', ctx=Load()), slice=Tuple(elts=[Name(id='Document', ctx=Load()), Name(id='ClipboardData', ctx=Load())], ctx=Load()), ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='TextObjectFunction', ctx=Store())], value=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='E', ctx=Load())], ctx=Load()), Name(id='TextObject', ctx=Load())], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='_TOF', ctx=Store())], value=Call(func=Name(id='TypeVar', ctx=Load()), args=[Constant(value='_TOF')], keywords=[keyword(arg='bound', value=Name(id='TextObjectFunction', ctx=Load()))])), FunctionDef(name='create_text_object_decorator', args=arguments(posonlyargs=[], args=[arg(arg='key_bindings', annotation=Name(id='KeyBindings', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Create a decorator that can be used to register Vi text object implementations.\n    ')), FunctionDef(name='text_object_decorator', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='keys', annotation=BinOp(left=Name(id='Keys', ctx=Load()), op=BitOr(), right=Name(id='str', ctx=Load()))), kwonlyargs=[arg(arg='filter', annotation=Name(id='Filter', ctx=Load())), arg(arg='no_move_handler', annotation=Name(id='bool', ctx=Load())), arg(arg='no_selection_handler', annotation=Name(id='bool', ctx=Load())), arg(arg='eager', annotation=Name(id='bool', ctx=Load()))], kw_defaults=[Call(func=Name(id='Always', ctx=Load()), args=[], keywords=[]), Constant(value=False), Constant(value=False), Constant(value=False)], defaults=[]), body=[Expr(value=Constant(value="\n        Register a text object function.\n\n        Usage::\n\n            @text_object('w', filter=..., no_move_handler=False)\n            def handler(event):\n                # Return a text object for this key.\n                return TextObject(...)\n\n        :param no_move_handler: Disable the move handler in navigation mode.\n            (It's still active in selection mode.)\n        ")), FunctionDef(name='decorator', args=arguments(posonlyargs=[], args=[arg(arg='text_object_func', annotation=Name(id='_TOF', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='_apply_operator_to_text_object', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='vi_state', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load())), Assign(targets=[Attribute(value=Name(id='event', ctx=Load()), attr='_arg', ctx=Store())], value=Call(func=Name(id='str', ctx=Load()), args=[BinOp(left=BoolOp(op=Or(), values=[Attribute(value=Name(id='vi_state', ctx=Load()), attr='operator_arg', ctx=Load()), Constant(value=1)]), op=Mult(), right=BoolOp(op=Or(), values=[Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()), Constant(value=1)]))], keywords=[])), Assign(targets=[Name(id='text_obj', ctx=Store())], value=Call(func=Name(id='text_object_func', ctx=Load()), args=[Name(id='event', ctx=Load())], keywords=[])), Assign(targets=[Name(id='operator_func', ctx=Store())], value=Attribute(value=Name(id='vi_state', ctx=Load()), attr='operator_func', ctx=Load())), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='text_obj', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Name(id='operator_func', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Expr(value=Call(func=Name(id='operator_func', ctx=Load()), args=[Name(id='event', ctx=Load()), Name(id='text_obj', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='operator_func', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='operator_arg', ctx=Store())], value=Constant(value=None))], decorator_list=[Call(func=Attribute(value=Name(id='key_bindings', ctx=Load()), attr='add', ctx=Load()), args=[Starred(value=Name(id='keys', ctx=Load()), ctx=Load())], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_waiting_for_text_object_mode', ctx=Load()), op=BitAnd(), right=Name(id='filter', ctx=Load()))), keyword(arg='eager', value=Name(id='eager', ctx=Load()))])], returns=Constant(value=None)), If(test=UnaryOp(op=Not(), operand=Name(id='no_move_handler', ctx=Load())), body=[FunctionDef(name='_move_in_navigation_mode', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n                    Move handler for navigation mode.\n                    ')), Assign(targets=[Name(id='text_object', ctx=Store())], value=Call(func=Name(id='text_object_func', ctx=Load()), args=[Name(id='event', ctx=Load())], keywords=[])), AugAssign(target=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=Attribute(value=Name(id='text_object', ctx=Load()), attr='start', ctx=Load()))], decorator_list=[Call(func=Attribute(value=Name(id='key_bindings', ctx=Load()), attr='add', ctx=Load()), args=[Starred(value=Name(id='keys', ctx=Load()), ctx=Load())], keywords=[keyword(arg='filter', value=BinOp(left=BinOp(left=UnaryOp(op=Invert(), operand=Name(id='vi_waiting_for_text_object_mode', ctx=Load())), op=BitAnd(), right=Name(id='filter', ctx=Load())), op=BitAnd(), right=Name(id='vi_navigation_mode', ctx=Load()))), keyword(arg='eager', value=Name(id='eager', ctx=Load()))])], returns=Constant(value=None))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='no_selection_handler', ctx=Load())), body=[FunctionDef(name='_move_in_selection_mode', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n                    Move handler for selection mode.\n                    ')), Assign(targets=[Name(id='text_object', ctx=Store())], value=Call(func=Name(id='text_object_func', ctx=Load()), args=[Name(id='event', ctx=Load())], keywords=[])), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='selection_state', ctx=Store())], value=Attribute(value=Name(id='buff', ctx=Load()), attr='selection_state', ctx=Load())), If(test=Compare(left=Name(id='selection_state', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return()], orelse=[]), If(test=Attribute(value=Name(id='text_object', ctx=Load()), attr='end', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='start', ctx=Store()), Name(id='end', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='text_object', ctx=Load()), attr='operator_range', ctx=Load()), args=[Attribute(value=Name(id='buff', ctx=Load()), attr='document', ctx=Load())], keywords=[])), AugAssign(target=Name(id='start', ctx=Store()), op=Add(), value=Attribute(value=Name(id='buff', ctx=Load()), attr='cursor_position', ctx=Load())), AugAssign(target=Name(id='end', ctx=Store()), op=Add(), value=Attribute(value=Name(id='buff', ctx=Load()), attr='cursor_position', ctx=Load())), Assign(targets=[Attribute(value=Name(id='selection_state', ctx=Load()), attr='original_cursor_position', ctx=Store())], value=Name(id='start', ctx=Load())), Assign(targets=[Attribute(value=Name(id='buff', ctx=Load()), attr='cursor_position', ctx=Store())], value=Name(id='end', ctx=Load())), If(test=Compare(left=Attribute(value=Name(id='text_object', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='LINEWISE', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='selection_state', ctx=Load()), attr='type', ctx=Store())], value=Attribute(value=Name(id='SelectionType', ctx=Load()), attr='LINES', ctx=Load()))], orelse=[Assign(targets=[Attribute(value=Name(id='selection_state', ctx=Load()), attr='type', ctx=Store())], value=Attribute(value=Name(id='SelectionType', ctx=Load()), attr='CHARACTERS', ctx=Load()))])], orelse=[AugAssign(target=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=Attribute(value=Name(id='text_object', ctx=Load()), attr='start', ctx=Load()))])], decorator_list=[Call(func=Attribute(value=Name(id='key_bindings', ctx=Load()), attr='add', ctx=Load()), args=[Starred(value=Name(id='keys', ctx=Load()), ctx=Load())], keywords=[keyword(arg='filter', value=BinOp(left=BinOp(left=UnaryOp(op=Invert(), operand=Name(id='vi_waiting_for_text_object_mode', ctx=Load())), op=BitAnd(), right=Name(id='filter', ctx=Load())), op=BitAnd(), right=Name(id='vi_selection_mode', ctx=Load()))), keyword(arg='eager', value=Name(id='eager', ctx=Load()))])], returns=Constant(value=None))], orelse=[]), Return(value=Name(id='text_object_func', ctx=Load()))], decorator_list=[], returns=Name(id='_TOF', ctx=Load())), Return(value=Name(id='decorator', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='_TOF', ctx=Load())], ctx=Load()), Name(id='_TOF', ctx=Load())], ctx=Load()), ctx=Load())), Return(value=Name(id='text_object_decorator', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='_TOF', ctx=Load())], ctx=Load()), Name(id='_TOF', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='OperatorFunction', ctx=Store())], value=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='E', ctx=Load()), Name(id='TextObject', ctx=Load())], ctx=Load()), Constant(value=None)], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='_OF', ctx=Store())], value=Call(func=Name(id='TypeVar', ctx=Load()), args=[Constant(value='_OF')], keywords=[keyword(arg='bound', value=Name(id='OperatorFunction', ctx=Load()))])), FunctionDef(name='create_operator_decorator', args=arguments(posonlyargs=[], args=[arg(arg='key_bindings', annotation=Name(id='KeyBindings', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Create a decorator that can be used for registering Vi operators.\n    ')), FunctionDef(name='operator_decorator', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='keys', annotation=BinOp(left=Name(id='Keys', ctx=Load()), op=BitOr(), right=Name(id='str', ctx=Load()))), kwonlyargs=[arg(arg='filter', annotation=Name(id='Filter', ctx=Load())), arg(arg='eager', annotation=Name(id='bool', ctx=Load()))], kw_defaults=[Call(func=Name(id='Always', ctx=Load()), args=[], keywords=[]), Constant(value=False)], defaults=[]), body=[Expr(value=Constant(value="\n        Register a Vi operator.\n\n        Usage::\n\n            @operator('d', filter=...)\n            def handler(event, text_object):\n                # Do something with the text object here.\n        ")), FunctionDef(name='decorator', args=arguments(posonlyargs=[], args=[arg(arg='operator_func', annotation=Name(id='_OF', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='_operator_in_navigation', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n                Handle operator in navigation mode.\n                ')), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='operator_func', ctx=Store())], value=Name(id='operator_func', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='operator_arg', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))], decorator_list=[Call(func=Attribute(value=Name(id='key_bindings', ctx=Load()), attr='add', ctx=Load()), args=[Starred(value=Name(id='keys', ctx=Load()), ctx=Load())], keywords=[keyword(arg='filter', value=BinOp(left=BinOp(left=UnaryOp(op=Invert(), operand=Name(id='vi_waiting_for_text_object_mode', ctx=Load())), op=BitAnd(), right=Name(id='filter', ctx=Load())), op=BitAnd(), right=Name(id='vi_navigation_mode', ctx=Load()))), keyword(arg='eager', value=Name(id='eager', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_operator_in_selection', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n                Handle operator in selection mode.\n                ')), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='selection_state', ctx=Store())], value=Attribute(value=Name(id='buff', ctx=Load()), attr='selection_state', ctx=Load())), If(test=Compare(left=Name(id='selection_state', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[If(test=Compare(left=Attribute(value=Name(id='selection_state', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='SelectionType', ctx=Load()), attr='LINES', ctx=Load())]), body=[Assign(targets=[Name(id='text_obj_type', ctx=Store())], value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='LINEWISE', ctx=Load()))], orelse=[If(test=Compare(left=Attribute(value=Name(id='selection_state', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='SelectionType', ctx=Load()), attr='BLOCK', ctx=Load())]), body=[Assign(targets=[Name(id='text_obj_type', ctx=Store())], value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='BLOCK', ctx=Load()))], orelse=[Assign(targets=[Name(id='text_obj_type', ctx=Store())], value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='INCLUSIVE', ctx=Load()))])]), Assign(targets=[Name(id='text_object', ctx=Store())], value=Call(func=Name(id='TextObject', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='selection_state', ctx=Load()), attr='original_cursor_position', ctx=Load()), op=Sub(), right=Attribute(value=Name(id='buff', ctx=Load()), attr='cursor_position', ctx=Load()))], keywords=[keyword(arg='type', value=Name(id='text_obj_type', ctx=Load()))])), Expr(value=Call(func=Name(id='operator_func', ctx=Load()), args=[Name(id='event', ctx=Load()), Name(id='text_object', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='buff', ctx=Load()), attr='selection_state', ctx=Store())], value=Constant(value=None))], orelse=[])], decorator_list=[Call(func=Attribute(value=Name(id='key_bindings', ctx=Load()), attr='add', ctx=Load()), args=[Starred(value=Name(id='keys', ctx=Load()), ctx=Load())], keywords=[keyword(arg='filter', value=BinOp(left=BinOp(left=UnaryOp(op=Invert(), operand=Name(id='vi_waiting_for_text_object_mode', ctx=Load())), op=BitAnd(), right=Name(id='filter', ctx=Load())), op=BitAnd(), right=Name(id='vi_selection_mode', ctx=Load()))), keyword(arg='eager', value=Name(id='eager', ctx=Load()))])], returns=Constant(value=None)), Return(value=Name(id='operator_func', ctx=Load()))], decorator_list=[], returns=Name(id='_OF', ctx=Load())), Return(value=Name(id='decorator', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='_OF', ctx=Load())], ctx=Load()), Name(id='_OF', ctx=Load())], ctx=Load()), ctx=Load())), Return(value=Name(id='operator_decorator', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='_OF', ctx=Load())], ctx=Load()), Name(id='_OF', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='load_vi_bindings', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Vi extensions.\n\n    # Overview of Readline Vi commands:\n    # http://www.catonmat.net/download/bash-vi-editing-mode-cheat-sheet.pdf\n    ')), Assign(targets=[Name(id='key_bindings', ctx=Store())], value=Call(func=Name(id='KeyBindings', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='handle', ctx=Store())], value=Attribute(value=Name(id='key_bindings', ctx=Load()), attr='add', ctx=Load())), Assign(targets=[Name(id='TransformFunction', ctx=Store())], value=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load()), Name(id='Filter', ctx=Load()), Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='str', ctx=Load())], ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())), AnnAssign(target=Name(id='vi_transform_functions', ctx=Store()), annotation=Subscript(value=Name(id='list', ctx=Load()), slice=Name(id='TransformFunction', ctx=Load()), ctx=Load()), value=List(elts=[Tuple(elts=[Tuple(elts=[Constant(value='g'), Constant(value='?')], ctx=Load()), Call(func=Name(id='Always', ctx=Load()), args=[], keywords=[]), Lambda(args=arguments(posonlyargs=[], args=[arg(arg='string')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='codecs', ctx=Load()), attr='encode', ctx=Load()), args=[Name(id='string', ctx=Load()), Constant(value='rot_13')], keywords=[]))], ctx=Load()), Tuple(elts=[Tuple(elts=[Constant(value='g'), Constant(value='u')], ctx=Load()), Call(func=Name(id='Always', ctx=Load()), args=[], keywords=[]), Lambda(args=arguments(posonlyargs=[], args=[arg(arg='string')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='string', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]))], ctx=Load()), Tuple(elts=[Tuple(elts=[Constant(value='g'), Constant(value='U')], ctx=Load()), Call(func=Name(id='Always', ctx=Load()), args=[], keywords=[]), Lambda(args=arguments(posonlyargs=[], args=[arg(arg='string')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='string', ctx=Load()), attr='upper', ctx=Load()), args=[], keywords=[]))], ctx=Load()), Tuple(elts=[Tuple(elts=[Constant(value='g'), Constant(value='~')], ctx=Load()), Call(func=Name(id='Always', ctx=Load()), args=[], keywords=[]), Lambda(args=arguments(posonlyargs=[], args=[arg(arg='string')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='string', ctx=Load()), attr='swapcase', ctx=Load()), args=[], keywords=[]))], ctx=Load()), Tuple(elts=[Tuple(elts=[Constant(value='~')], ctx=Load()), Call(func=Name(id='Condition', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Attribute(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='vi_state', ctx=Load()), attr='tilde_operator', ctx=Load()))], keywords=[]), Lambda(args=arguments(posonlyargs=[], args=[arg(arg='string')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='string', ctx=Load()), attr='swapcase', ctx=Load()), args=[], keywords=[]))], ctx=Load())], ctx=Load()), simple=1), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-v')], keywords=[keyword(arg='filter', value=Name(id='vi_insert_mode', ctx=Load()))]), args=[Call(func=Name(id='get_by_name', ctx=Load()), args=[Constant(value='quoted-insert')], keywords=[])], keywords=[])), FunctionDef(name='_back_to_navigation', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Escape goes to vi navigation mode.\n        ')), Assign(targets=[Name(id='buffer', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='vi_state', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load())), If(test=Compare(left=Attribute(value=Name(id='vi_state', ctx=Load()), attr='input_mode', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Attribute(value=Name(id='InputMode', ctx=Load()), attr='INSERT', ctx=Load()), Attribute(value=Name(id='InputMode', ctx=Load()), attr='REPLACE', ctx=Load())], ctx=Load())]), body=[AugAssign(target=Attribute(value=Name(id='buffer', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_cursor_left_position', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='vi_state', ctx=Load()), attr='input_mode', ctx=Store())], value=Attribute(value=Name(id='InputMode', ctx=Load()), attr='NAVIGATION', ctx=Load())), If(test=Call(func=Name(id='bool', ctx=Load()), args=[Attribute(value=Name(id='buffer', ctx=Load()), attr='selection_state', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='buffer', ctx=Load()), attr='exit_selection', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='escape')], keywords=[])], returns=Constant(value=None)), FunctionDef(name='_up_in_selection', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Arrow up in selection mode.\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='cursor_up', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='k')], keywords=[keyword(arg='filter', value=Name(id='vi_selection_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_down_in_selection', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Arrow down in selection mode.\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='cursor_down', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='j')], keywords=[keyword(arg='filter', value=Name(id='vi_selection_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_up_in_navigation', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Arrow up and ControlP in navigation mode go up.\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='auto_up', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='up')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))]), Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-p')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_go_up', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Go up, but if we enter a new history entry, move to the start of the\n        line.\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='auto_up', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load())), keyword(arg='go_to_start_of_line_if_history_changes', value=Constant(value=True))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='k')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_go_down', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Arrow down and Control-N in navigation mode.\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='auto_down', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='down')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))]), Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-n')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_go_down2', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Go down, but if we enter a new history entry, go to the start of the line.\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='auto_down', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load())), keyword(arg='go_to_start_of_line_if_history_changes', value=Constant(value=True))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='j')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_go_left', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        In navigation-mode, move cursor.\n        ')), AugAssign(target=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_cursor_left_position', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='backspace')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_complete_next', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='b', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), If(test=Attribute(value=Name(id='b', ctx=Load()), attr='complete_state', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='b', ctx=Load()), attr='complete_next', ctx=Load()), args=[], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='b', ctx=Load()), attr='start_completion', ctx=Load()), args=[], keywords=[keyword(arg='select_first', value=Constant(value=True))]))])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-n')], keywords=[keyword(arg='filter', value=Name(id='vi_insert_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_complete_prev', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Control-P: To previous completion.\n        ')), Assign(targets=[Name(id='b', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), If(test=Attribute(value=Name(id='b', ctx=Load()), attr='complete_state', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='b', ctx=Load()), attr='complete_previous', ctx=Load()), args=[], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='b', ctx=Load()), attr='start_completion', ctx=Load()), args=[], keywords=[keyword(arg='select_last', value=Constant(value=True))]))])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-p')], keywords=[keyword(arg='filter', value=Name(id='vi_insert_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_accept_completion', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Accept current completion.\n        ')), Assign(targets=[Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='complete_state', ctx=Store())], value=Constant(value=None))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-g')], keywords=[keyword(arg='filter', value=Name(id='vi_insert_mode', ctx=Load()))]), Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-y')], keywords=[keyword(arg='filter', value=Name(id='vi_insert_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_cancel_completion', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Cancel completion. Go back to originally typed text.\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='cancel_completion', ctx=Load()), args=[], keywords=[]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-e')], keywords=[keyword(arg='filter', value=Name(id='vi_insert_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='is_returnable', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='current_buffer', ctx=Load()), attr='is_returnable', ctx=Load()))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='enter')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitAnd(), right=Name(id='is_returnable', ctx=Load())))]), args=[Call(func=Name(id='get_by_name', ctx=Load()), args=[Constant(value='accept-line')], keywords=[])], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='enter')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='is_returnable', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_multiline', ctx=Load()))))]), args=[Call(func=Name(id='get_by_name', ctx=Load()), args=[Constant(value='accept-line')], keywords=[])], keywords=[])), FunctionDef(name='_start_of_next_line', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Go to the beginning of next line.\n        ')), Assign(targets=[Name(id='b', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='b', ctx=Load()), attr='cursor_down', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))])), AugAssign(target=Attribute(value=Name(id='b', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='get_start_of_line_position', ctx=Load()), args=[], keywords=[keyword(arg='after_whitespace', value=Constant(value=True))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='enter')], keywords=[keyword(arg='filter', value=BinOp(left=UnaryOp(op=Invert(), operand=Name(id='is_returnable', ctx=Load())), op=BitAnd(), right=Name(id='vi_navigation_mode', ctx=Load())))])], returns=Constant(value=None)), FunctionDef(name='_insert_mode', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Pressing the Insert key.\n        ')), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Store())], value=Attribute(value=Name(id='InputMode', ctx=Load()), attr='INSERT', ctx=Load()))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='insert')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_navigation_mode', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Pressing the Insert key.\n        ')), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Store())], value=Attribute(value=Name(id='InputMode', ctx=Load()), attr='NAVIGATION', ctx=Load()))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='insert')], keywords=[keyword(arg='filter', value=Name(id='vi_insert_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_a', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[AugAssign(target=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_cursor_right_position', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Store())], value=Attribute(value=Name(id='InputMode', ctx=Load()), attr='INSERT', ctx=Load()))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='a')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_A', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[AugAssign(target=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_end_of_line_position', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Store())], value=Attribute(value=Name(id='InputMode', ctx=Load()), attr='INSERT', ctx=Load()))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='A')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_change_until_end_of_line', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Change to end of line.\n        Same as 'c$' (which is implemented elsewhere.)\n        ")), Assign(targets=[Name(id='buffer', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='deleted', ctx=Store())], value=Call(func=Attribute(value=Name(id='buffer', ctx=Load()), attr='delete', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Call(func=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_end_of_line_position', ctx=Load()), args=[], keywords=[]))])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='clipboard', ctx=Load()), attr='set_text', ctx=Load()), args=[Name(id='deleted', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Store())], value=Attribute(value=Name(id='InputMode', ctx=Load()), attr='INSERT', ctx=Load()))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='C')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_change_current_line', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Change current line\n        ')), Assign(targets=[Name(id='buffer', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Name(id='ClipboardData', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='current_line', ctx=Load()), Attribute(value=Name(id='SelectionType', ctx=Load()), attr='LINES', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='clipboard', ctx=Load()), attr='set_data', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[])), AugAssign(target=Attribute(value=Name(id='buffer', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_start_of_line_position', ctx=Load()), args=[], keywords=[keyword(arg='after_whitespace', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Name(id='buffer', ctx=Load()), attr='delete', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Call(func=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_end_of_line_position', ctx=Load()), args=[], keywords=[]))])), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Store())], value=Attribute(value=Name(id='InputMode', ctx=Load()), attr='INSERT', ctx=Load()))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c'), Constant(value='c')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))]), Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='S')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_delete_until_end_of_line', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Delete from cursor position until the end of the line.\n        ')), Assign(targets=[Name(id='buffer', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='deleted', ctx=Store())], value=Call(func=Attribute(value=Name(id='buffer', ctx=Load()), attr='delete', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Call(func=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_end_of_line_position', ctx=Load()), args=[], keywords=[]))])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='clipboard', ctx=Load()), attr='set_text', ctx=Load()), args=[Name(id='deleted', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='D')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_delete_line', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Delete line. (Or the following 'n' lines.)\n        ")), Assign(targets=[Name(id='buffer', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='lines', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='lines', ctx=Load())), Assign(targets=[Name(id='before', ctx=Store())], value=Call(func=Attribute(value=Constant(value='\n'), attr='join', ctx=Load()), args=[Subscript(value=Name(id='lines', ctx=Load()), slice=Slice(upper=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='cursor_position_row', ctx=Load())), ctx=Load())], keywords=[])), Assign(targets=[Name(id='deleted', ctx=Store())], value=Call(func=Attribute(value=Constant(value='\n'), attr='join', ctx=Load()), args=[Subscript(value=Name(id='lines', ctx=Load()), slice=Slice(lower=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='cursor_position_row', ctx=Load()), upper=BinOp(left=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='cursor_position_row', ctx=Load()), op=Add(), right=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))), ctx=Load())], keywords=[])), Assign(targets=[Name(id='after', ctx=Store())], value=Call(func=Attribute(value=Constant(value='\n'), attr='join', ctx=Load()), args=[Subscript(value=Name(id='lines', ctx=Load()), slice=Slice(lower=BinOp(left=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='cursor_position_row', ctx=Load()), op=Add(), right=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))), ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Name(id='before', ctx=Load()), Name(id='after', ctx=Load())]), body=[Assign(targets=[Name(id='before', ctx=Store())], value=BinOp(left=Name(id='before', ctx=Load()), op=Add(), right=Constant(value='\n')))], orelse=[]), Assign(targets=[Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Store())], value=Call(func=Name(id='Document', ctx=Load()), args=[], keywords=[keyword(arg='text', value=BinOp(left=Name(id='before', ctx=Load()), op=Add(), right=Name(id='after', ctx=Load()))), keyword(arg='cursor_position', value=BinOp(left=BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='before', ctx=Load())], keywords=[]), op=Add(), right=Call(func=Name(id='len', ctx=Load()), args=[Name(id='after', ctx=Load())], keywords=[])), op=Sub(), right=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='after', ctx=Load()), attr='lstrip', ctx=Load()), args=[Constant(value=' ')], keywords=[])], keywords=[])))])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='clipboard', ctx=Load()), attr='set_data', ctx=Load()), args=[Call(func=Name(id='ClipboardData', ctx=Load()), args=[Name(id='deleted', ctx=Load()), Attribute(value=Name(id='SelectionType', ctx=Load()), attr='LINES', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='d'), Constant(value='d')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_cut', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Cut selection.\n        ('x' is not an operator.)\n        ")), Assign(targets=[Name(id='clipboard_data', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='cut_selection', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='clipboard', ctx=Load()), attr='set_data', ctx=Load()), args=[Name(id='clipboard_data', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='x')], keywords=[keyword(arg='filter', value=Name(id='vi_selection_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_i', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Store())], value=Attribute(value=Name(id='InputMode', ctx=Load()), attr='INSERT', ctx=Load()))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='i')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_I', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Store())], value=Attribute(value=Name(id='InputMode', ctx=Load()), attr='INSERT', ctx=Load())), AugAssign(target=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_start_of_line_position', ctx=Load()), args=[], keywords=[keyword(arg='after_whitespace', value=Constant(value=True))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='I')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='in_block_selection', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='current_buffer', ctx=Load())), Return(value=Call(func=Name(id='bool', ctx=Load()), args=[BoolOp(op=And(), values=[Attribute(value=Name(id='buff', ctx=Load()), attr='selection_state', ctx=Load()), Compare(left=Attribute(value=Attribute(value=Name(id='buff', ctx=Load()), attr='selection_state', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='SelectionType', ctx=Load()), attr='BLOCK', ctx=Load())])])], keywords=[]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='insert_in_block_selection', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load())), arg(arg='after', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Expr(value=Constant(value='\n        Insert in block selection mode.\n        ')), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='positions', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=Name(id='after', ctx=Load()), body=[FunctionDef(name='get_pos', args=arguments(posonlyargs=[], args=[arg(arg='from_to', annotation=Subscript(value=Name(id='tuple', ctx=Load()), slice=Tuple(elts=[Name(id='int', ctx=Load()), Name(id='int', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Subscript(value=Name(id='from_to', ctx=Load()), slice=Constant(value=1), ctx=Load()))], decorator_list=[], returns=Name(id='int', ctx=Load()))], orelse=[FunctionDef(name='get_pos', args=arguments(posonlyargs=[], args=[arg(arg='from_to', annotation=Subscript(value=Name(id='tuple', ctx=Load()), slice=Tuple(elts=[Name(id='int', ctx=Load()), Name(id='int', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Subscript(value=Name(id='from_to', ctx=Load()), slice=Constant(value=0), ctx=Load()))], decorator_list=[], returns=Name(id='int', ctx=Load()))]), For(target=Tuple(elts=[Name(id='i', ctx=Store()), Name(id='from_to', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='buff', ctx=Load()), attr='document', ctx=Load()), attr='selection_ranges', ctx=Load()), args=[], keywords=[])], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='positions', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='get_pos', ctx=Load()), args=[Name(id='from_to', ctx=Load())], keywords=[])], keywords=[])), If(test=Compare(left=Name(id='i', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Assign(targets=[Attribute(value=Name(id='buff', ctx=Load()), attr='cursor_position', ctx=Store())], value=Call(func=Name(id='get_pos', ctx=Load()), args=[Name(id='from_to', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Attribute(value=Name(id='buff', ctx=Load()), attr='multiple_cursor_positions', ctx=Store())], value=Name(id='positions', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Store())], value=Attribute(value=Name(id='InputMode', ctx=Load()), attr='INSERT_MULTIPLE', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='buff', ctx=Load()), attr='exit_selection', ctx=Load()), args=[], keywords=[]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='I')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='in_block_selection', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_append_after_block', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Name(id='insert_in_block_selection', ctx=Load()), args=[Name(id='event', ctx=Load())], keywords=[keyword(arg='after', value=Constant(value=True))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='A')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='in_block_selection', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_join', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Join lines.\n        ')), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='join_next_line', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='J')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_join_nospace', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Join lines without space.\n        ')), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='join_next_line', ctx=Load()), args=[], keywords=[keyword(arg='separator', value=Constant(value=''))]))], orelse=[])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='g'), Constant(value='J')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_join_selection', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Join selected lines.\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='join_selected_lines', ctx=Load()), args=[], keywords=[]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='J')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_selection_mode', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_join_selection_nospace', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Join selected lines without space.\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='join_selected_lines', ctx=Load()), args=[], keywords=[keyword(arg='separator', value=Constant(value=''))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='g'), Constant(value='J')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_selection_mode', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_paste', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Paste after\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='paste_clipboard_data', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='clipboard', ctx=Load()), attr='get_data', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load())), keyword(arg='paste_mode', value=Attribute(value=Name(id='PasteMode', ctx=Load()), attr='VI_AFTER', ctx=Load()))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='p')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_paste_before', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Paste before\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='paste_clipboard_data', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='clipboard', ctx=Load()), attr='get_data', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load())), keyword(arg='paste_mode', value=Attribute(value=Name(id='PasteMode', ctx=Load()), attr='VI_BEFORE', ctx=Load()))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='P')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_paste_register', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Paste from named register.\n        ')), Assign(targets=[Name(id='c', ctx=Store())], value=Attribute(value=Subscript(value=Attribute(value=Name(id='event', ctx=Load()), attr='key_sequence', ctx=Load()), slice=Constant(value=1), ctx=Load()), attr='data', ctx=Load())), If(test=Compare(left=Name(id='c', ctx=Load()), ops=[In()], comparators=[Name(id='vi_register_names', ctx=Load())]), body=[Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='named_registers', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='c', ctx=Load())], keywords=[])), If(test=Name(id='data', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='paste_clipboard_data', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load())), keyword(arg='paste_mode', value=Attribute(value=Name(id='PasteMode', ctx=Load()), attr='VI_AFTER', ctx=Load()))]))], orelse=[])], orelse=[])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='"'), Attribute(value=Name(id='Keys', ctx=Load()), attr='Any', ctx=Load()), Constant(value='p')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_paste_register_before', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Paste (before) from named register.\n        ')), Assign(targets=[Name(id='c', ctx=Store())], value=Attribute(value=Subscript(value=Attribute(value=Name(id='event', ctx=Load()), attr='key_sequence', ctx=Load()), slice=Constant(value=1), ctx=Load()), attr='data', ctx=Load())), If(test=Compare(left=Name(id='c', ctx=Load()), ops=[In()], comparators=[Name(id='vi_register_names', ctx=Load())]), body=[Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='named_registers', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='c', ctx=Load())], keywords=[])), If(test=Name(id='data', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='paste_clipboard_data', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load())), keyword(arg='paste_mode', value=Attribute(value=Name(id='PasteMode', ctx=Load()), attr='VI_BEFORE', ctx=Load()))]))], orelse=[])], orelse=[])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='"'), Attribute(value=Name(id='Keys', ctx=Load()), attr='Any', ctx=Load()), Constant(value='P')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_replace', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Go to 'replace-single'-mode.\n        ")), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Store())], value=Attribute(value=Name(id='InputMode', ctx=Load()), attr='REPLACE_SINGLE', ctx=Load()))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='r')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_replace_mode', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Go to 'replace'-mode.\n        ")), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Store())], value=Attribute(value=Name(id='InputMode', ctx=Load()), attr='REPLACE', ctx=Load()))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='R')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_substitute', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Substitute with new text\n        (Delete character(s) and go to insert mode.)\n        ')), Assign(targets=[Name(id='text', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='delete', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='clipboard', ctx=Load()), attr='set_text', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Store())], value=Attribute(value=Name(id='InputMode', ctx=Load()), attr='INSERT', ctx=Load()))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='s')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_undo', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='undo', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='u')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load())), keyword(arg='save_before', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='e')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Constant(value=False)))])], returns=Constant(value=None)), FunctionDef(name='_visual_line', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Start lines selection.\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='start_selection', ctx=Load()), args=[], keywords=[keyword(arg='selection_type', value=Attribute(value=Name(id='SelectionType', ctx=Load()), attr='LINES', ctx=Load()))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='V')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_visual_block', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Enter block selection mode.\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='start_selection', ctx=Load()), args=[], keywords=[keyword(arg='selection_type', value=Attribute(value=Name(id='SelectionType', ctx=Load()), attr='BLOCK', ctx=Load()))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-v')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_visual_line2', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Exit line selection mode, or go from non line selection mode to line\n        selection mode.\n        ')), Assign(targets=[Name(id='selection_state', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='selection_state', ctx=Load())), If(test=Compare(left=Name(id='selection_state', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[If(test=Compare(left=Attribute(value=Name(id='selection_state', ctx=Load()), attr='type', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='SelectionType', ctx=Load()), attr='LINES', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='selection_state', ctx=Load()), attr='type', ctx=Store())], value=Attribute(value=Name(id='SelectionType', ctx=Load()), attr='LINES', ctx=Load()))], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='exit_selection', ctx=Load()), args=[], keywords=[]))])], orelse=[])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='V')], keywords=[keyword(arg='filter', value=Name(id='vi_selection_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_visual', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Enter character selection mode.\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='start_selection', ctx=Load()), args=[], keywords=[keyword(arg='selection_type', value=Attribute(value=Name(id='SelectionType', ctx=Load()), attr='CHARACTERS', ctx=Load()))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='v')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_visual2', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Exit character selection mode, or go from non-character-selection mode\n        to character selection mode.\n        ')), Assign(targets=[Name(id='selection_state', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='selection_state', ctx=Load())), If(test=Compare(left=Name(id='selection_state', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[If(test=Compare(left=Attribute(value=Name(id='selection_state', ctx=Load()), attr='type', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='SelectionType', ctx=Load()), attr='CHARACTERS', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='selection_state', ctx=Load()), attr='type', ctx=Store())], value=Attribute(value=Name(id='SelectionType', ctx=Load()), attr='CHARACTERS', ctx=Load()))], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='exit_selection', ctx=Load()), args=[], keywords=[]))])], orelse=[])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='v')], keywords=[keyword(arg='filter', value=Name(id='vi_selection_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_visual_block2', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Exit block selection mode, or go from non block selection mode to block\n        selection mode.\n        ')), Assign(targets=[Name(id='selection_state', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='selection_state', ctx=Load())), If(test=Compare(left=Name(id='selection_state', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[If(test=Compare(left=Attribute(value=Name(id='selection_state', ctx=Load()), attr='type', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='SelectionType', ctx=Load()), attr='BLOCK', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='selection_state', ctx=Load()), attr='type', ctx=Store())], value=Attribute(value=Name(id='SelectionType', ctx=Load()), attr='BLOCK', ctx=Load()))], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='exit_selection', ctx=Load()), args=[], keywords=[]))])], orelse=[])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-v')], keywords=[keyword(arg='filter', value=Name(id='vi_selection_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_visual_auto_word', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Switch from visual linewise mode to visual characterwise mode.\n        ')), Assign(targets=[Name(id='buffer', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='buffer', ctx=Load()), attr='selection_state', ctx=Load()), Compare(left=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='selection_state', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='SelectionType', ctx=Load()), attr='LINES', ctx=Load())])]), body=[Assign(targets=[Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='selection_state', ctx=Load()), attr='type', ctx=Store())], value=Attribute(value=Name(id='SelectionType', ctx=Load()), attr='CHARACTERS', ctx=Load()))], orelse=[])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='a'), Constant(value='w')], keywords=[keyword(arg='filter', value=Name(id='vi_selection_mode', ctx=Load()))]), Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='a'), Constant(value='W')], keywords=[keyword(arg='filter', value=Name(id='vi_selection_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_delete', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Delete character.\n        ')), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='count', ctx=Store())], value=Call(func=Name(id='min', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()), Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='buff', ctx=Load()), attr='document', ctx=Load()), attr='current_line_after_cursor', ctx=Load())], keywords=[])], keywords=[])), If(test=Name(id='count', ctx=Load()), body=[Assign(targets=[Name(id='text', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='delete', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Name(id='count', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='clipboard', ctx=Load()), attr='set_text', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='x')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_delete_before_cursor', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='count', ctx=Store())], value=Call(func=Name(id='min', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()), Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='buff', ctx=Load()), attr='document', ctx=Load()), attr='current_line_before_cursor', ctx=Load())], keywords=[])], keywords=[])), If(test=Name(id='count', ctx=Load()), body=[Assign(targets=[Name(id='text', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='delete_before_cursor', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Name(id='count', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='clipboard', ctx=Load()), attr='set_text', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='X')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_yank_line', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Yank the whole line.\n        ')), Assign(targets=[Name(id='text', ctx=Store())], value=Call(func=Attribute(value=Constant(value='\n'), attr='join', ctx=Load()), args=[Subscript(value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='lines_from_current', ctx=Load()), slice=Slice(upper=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load())), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='clipboard', ctx=Load()), attr='set_data', ctx=Load()), args=[Call(func=Name(id='ClipboardData', ctx=Load()), args=[Name(id='text', ctx=Load()), Attribute(value=Name(id='SelectionType', ctx=Load()), attr='LINES', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='y'), Constant(value='y')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))]), Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='Y')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_next_line', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Move to first non whitespace of next line\n        ')), Assign(targets=[Name(id='buffer', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), AugAssign(target=Attribute(value=Name(id='buffer', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_cursor_down_position', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))])), AugAssign(target=Attribute(value=Name(id='buffer', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_start_of_line_position', ctx=Load()), args=[], keywords=[keyword(arg='after_whitespace', value=Constant(value=True))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='+')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_prev_line', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Move to first non whitespace of previous line\n        ')), Assign(targets=[Name(id='buffer', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), AugAssign(target=Attribute(value=Name(id='buffer', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_cursor_up_position', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))])), AugAssign(target=Attribute(value=Name(id='buffer', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_start_of_line_position', ctx=Load()), args=[], keywords=[keyword(arg='after_whitespace', value=Constant(value=True))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='-')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_indent', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Indent lines.\n        ')), Assign(targets=[Name(id='buffer', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='current_row', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='cursor_position_row', ctx=Load())), Expr(value=Call(func=Name(id='indent', ctx=Load()), args=[Name(id='buffer', ctx=Load()), Name(id='current_row', ctx=Load()), BinOp(left=Name(id='current_row', ctx=Load()), op=Add(), right=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))], keywords=[]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='>'), Constant(value='>')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))]), Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-t')], keywords=[keyword(arg='filter', value=Name(id='vi_insert_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_unindent', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Unindent lines.\n        ')), Assign(targets=[Name(id='current_row', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='cursor_position_row', ctx=Load())), Expr(value=Call(func=Name(id='unindent', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), Name(id='current_row', ctx=Load()), BinOp(left=Name(id='current_row', ctx=Load()), op=Add(), right=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))], keywords=[]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='<'), Constant(value='<')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))]), Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-d')], keywords=[keyword(arg='filter', value=Name(id='vi_insert_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_open_above', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Open line above and enter insertion mode\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='insert_line_above', ctx=Load()), args=[], keywords=[keyword(arg='copy_margin', value=UnaryOp(op=Not(), operand=Call(func=Name(id='in_paste_mode', ctx=Load()), args=[], keywords=[])))])), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Store())], value=Attribute(value=Name(id='InputMode', ctx=Load()), attr='INSERT', ctx=Load()))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='O')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_open_below', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Open line below and enter insertion mode\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='insert_line_below', ctx=Load()), args=[], keywords=[keyword(arg='copy_margin', value=UnaryOp(op=Not(), operand=Call(func=Name(id='in_paste_mode', ctx=Load()), args=[], keywords=[])))])), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Store())], value=Attribute(value=Name(id='InputMode', ctx=Load()), attr='INSERT', ctx=Load()))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='o')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_reverse_case', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Reverse case of current character and move cursor forward.\n        ')), Assign(targets=[Name(id='buffer', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='c', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='current_char', ctx=Load())), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='c', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Name(id='c', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='\n')])]), body=[Expr(value=Call(func=Attribute(value=Name(id='buffer', ctx=Load()), attr='insert_text', ctx=Load()), args=[Call(func=Attribute(value=Name(id='c', ctx=Load()), attr='swapcase', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='overwrite', value=Constant(value=True))]))], orelse=[])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='~')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_lowercase_line', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Lowercase current line.\n        ')), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='buff', ctx=Load()), attr='transform_current_line', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]))], keywords=[]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='g'), Constant(value='u'), Constant(value='u')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_uppercase_line', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Uppercase current line.\n        ')), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='buff', ctx=Load()), attr='transform_current_line', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='upper', ctx=Load()), args=[], keywords=[]))], keywords=[]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='g'), Constant(value='U'), Constant(value='U')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_swapcase_line', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Swap case of the current line.\n        ')), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='buff', ctx=Load()), attr='transform_current_line', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='swapcase', ctx=Load()), args=[], keywords=[]))], keywords=[]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='g'), Constant(value='~'), Constant(value='~')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_prev_occurrence', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Go to previous occurrence of this word.\n        ')), Assign(targets=[Name(id='b', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='search_state', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='current_search_state', ctx=Load())), Assign(targets=[Attribute(value=Name(id='search_state', ctx=Load()), attr='text', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='get_word_under_cursor', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='search_state', ctx=Load()), attr='direction', ctx=Store())], value=Attribute(value=Name(id='SearchDirection', ctx=Load()), attr='BACKWARD', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='b', ctx=Load()), attr='apply_search', ctx=Load()), args=[Name(id='search_state', ctx=Load())], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load())), keyword(arg='include_current_position', value=Constant(value=False))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='#')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_next_occurrence', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Go to next occurrence of this word.\n        ')), Assign(targets=[Name(id='b', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='search_state', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='current_search_state', ctx=Load())), Assign(targets=[Attribute(value=Name(id='search_state', ctx=Load()), attr='text', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='get_word_under_cursor', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='search_state', ctx=Load()), attr='direction', ctx=Store())], value=Attribute(value=Name(id='SearchDirection', ctx=Load()), attr='FORWARD', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='b', ctx=Load()), attr='apply_search', ctx=Load()), args=[Name(id='search_state', ctx=Load())], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load())), keyword(arg='include_current_position', value=Constant(value=False))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='*')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_begin_of_sentence', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='(')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_end_of_sentence', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value=')')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), Assign(targets=[Name(id='operator', ctx=Store())], value=Call(func=Name(id='create_operator_decorator', ctx=Load()), args=[Name(id='key_bindings', ctx=Load())], keywords=[])), Assign(targets=[Name(id='text_object', ctx=Store())], value=Call(func=Name(id='create_text_object_decorator', ctx=Load()), args=[Name(id='key_bindings', ctx=Load())], keywords=[])), FunctionDef(name='_unknown_text_object', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Unknown key binding while waiting for a text object.\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='output', ctx=Load()), attr='bell', ctx=Load()), args=[], keywords=[]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Attribute(value=Name(id='Keys', ctx=Load()), attr='Any', ctx=Load())], keywords=[keyword(arg='filter', value=Name(id='vi_waiting_for_text_object_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='create_delete_and_change_operators', args=arguments(posonlyargs=[], args=[arg(arg='delete_only', annotation=Name(id='bool', ctx=Load())), arg(arg='with_register', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Expr(value=Constant(value="\n        Delete and change operators.\n\n        :param delete_only: Create an operator that deletes, but doesn't go to insert mode.\n        :param with_register: Copy the deleted text to this named register instead of the clipboard.\n        ")), AnnAssign(target=Name(id='handler_keys', ctx=Store()), annotation=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), simple=1), If(test=Name(id='with_register', ctx=Load()), body=[Assign(targets=[Name(id='handler_keys', ctx=Store())], value=Tuple(elts=[Constant(value='"'), Attribute(value=Name(id='Keys', ctx=Load()), attr='Any', ctx=Load()), Subscript(value=Constant(value='cd'), slice=Name(id='delete_only', ctx=Load()), ctx=Load())], ctx=Load()))], orelse=[Assign(targets=[Name(id='handler_keys', ctx=Store())], value=Subscript(value=Constant(value='cd'), slice=Name(id='delete_only', ctx=Load()), ctx=Load()))]), FunctionDef(name='delete_or_change_operator', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load())), arg(arg='text_object', annotation=Name(id='TextObject', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='clipboard_data', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), If(test=Name(id='text_object', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='new_document', ctx=Store()), Name(id='clipboard_data', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='text_object', ctx=Load()), attr='cut', ctx=Load()), args=[Name(id='buff', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='buff', ctx=Load()), attr='document', ctx=Store())], value=Name(id='new_document', ctx=Load()))], orelse=[]), If(test=BoolOp(op=And(), values=[Name(id='clipboard_data', ctx=Load()), Attribute(value=Name(id='clipboard_data', ctx=Load()), attr='text', ctx=Load())]), body=[If(test=Name(id='with_register', ctx=Load()), body=[Assign(targets=[Name(id='reg_name', ctx=Store())], value=Attribute(value=Subscript(value=Attribute(value=Name(id='event', ctx=Load()), attr='key_sequence', ctx=Load()), slice=Constant(value=1), ctx=Load()), attr='data', ctx=Load())), If(test=Compare(left=Name(id='reg_name', ctx=Load()), ops=[In()], comparators=[Name(id='vi_register_names', ctx=Load())]), body=[Assign(targets=[Subscript(value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='named_registers', ctx=Load()), slice=Name(id='reg_name', ctx=Load()), ctx=Store())], value=Name(id='clipboard_data', ctx=Load()))], orelse=[])], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='clipboard', ctx=Load()), attr='set_data', ctx=Load()), args=[Name(id='clipboard_data', ctx=Load())], keywords=[]))])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='delete_only', ctx=Load())), body=[Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Store())], value=Attribute(value=Name(id='InputMode', ctx=Load()), attr='INSERT', ctx=Load()))], orelse=[])], decorator_list=[Call(func=Name(id='operator', ctx=Load()), args=[Starred(value=Name(id='handler_keys', ctx=Load()), ctx=Load())], keywords=[keyword(arg='filter', value=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load())))])], returns=Constant(value=None))], decorator_list=[], returns=Constant(value=None)), Expr(value=Call(func=Name(id='create_delete_and_change_operators', ctx=Load()), args=[Constant(value=False), Constant(value=False)], keywords=[])), Expr(value=Call(func=Name(id='create_delete_and_change_operators', ctx=Load()), args=[Constant(value=False), Constant(value=True)], keywords=[])), Expr(value=Call(func=Name(id='create_delete_and_change_operators', ctx=Load()), args=[Constant(value=True), Constant(value=False)], keywords=[])), Expr(value=Call(func=Name(id='create_delete_and_change_operators', ctx=Load()), args=[Constant(value=True), Constant(value=True)], keywords=[])), FunctionDef(name='create_transform_handler', args=arguments(posonlyargs=[], args=[arg(arg='filter', annotation=Name(id='Filter', ctx=Load())), arg(arg='transform_func', annotation=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='str', ctx=Load())], ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load()))], vararg=arg(arg='a', annotation=Name(id='str', ctx=Load())), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='_', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load())), arg(arg='text_object', annotation=Name(id='TextObject', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n            Apply transformation (uppercase, lowercase, rot13, swap case).\n            ')), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='start', ctx=Store()), Name(id='end', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='text_object', ctx=Load()), attr='operator_range', ctx=Load()), args=[Attribute(value=Name(id='buff', ctx=Load()), attr='document', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='start', ctx=Load()), ops=[Lt()], comparators=[Name(id='end', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='buff', ctx=Load()), attr='transform_region', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='buff', ctx=Load()), attr='cursor_position', ctx=Load()), op=Add(), right=Name(id='start', ctx=Load())), BinOp(left=Attribute(value=Name(id='buff', ctx=Load()), attr='cursor_position', ctx=Load()), op=Add(), right=Name(id='end', ctx=Load())), Name(id='transform_func', ctx=Load())], keywords=[])), AugAssign(target=Attribute(value=Name(id='buff', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=BoolOp(op=Or(), values=[Attribute(value=Name(id='text_object', ctx=Load()), attr='end', ctx=Load()), Attribute(value=Name(id='text_object', ctx=Load()), attr='start', ctx=Load())]))], orelse=[])], decorator_list=[Call(func=Name(id='operator', ctx=Load()), args=[Starred(value=Name(id='a', ctx=Load()), ctx=Load())], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='filter', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='is_read_only', ctx=Load()))))])], returns=Constant(value=None))], decorator_list=[], returns=Constant(value=None)), For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='f', ctx=Store()), Name(id='func', ctx=Store())], ctx=Store()), iter=Name(id='vi_transform_functions', ctx=Load()), body=[Expr(value=Call(func=Name(id='create_transform_handler', ctx=Load()), args=[Name(id='f', ctx=Load()), Name(id='func', ctx=Load()), Starred(value=Name(id='k', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[]), FunctionDef(name='_yank', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load())), arg(arg='text_object', annotation=Name(id='TextObject', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Yank operator. (Copy text.)\n        ')), Assign(targets=[Tuple(elts=[Name(id='_', ctx=Store()), Name(id='clipboard_data', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='text_object', ctx=Load()), attr='cut', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='clipboard_data', ctx=Load()), attr='text', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='clipboard', ctx=Load()), attr='set_data', ctx=Load()), args=[Name(id='clipboard_data', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[Call(func=Name(id='operator', ctx=Load()), args=[Constant(value='y')], keywords=[])], returns=Constant(value=None)), FunctionDef(name='_yank_to_register', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load())), arg(arg='text_object', annotation=Name(id='TextObject', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Yank selection to named register.\n        ')), Assign(targets=[Name(id='c', ctx=Store())], value=Attribute(value=Subscript(value=Attribute(value=Name(id='event', ctx=Load()), attr='key_sequence', ctx=Load()), slice=Constant(value=1), ctx=Load()), attr='data', ctx=Load())), If(test=Compare(left=Name(id='c', ctx=Load()), ops=[In()], comparators=[Name(id='vi_register_names', ctx=Load())]), body=[Assign(targets=[Tuple(elts=[Name(id='_', ctx=Store()), Name(id='clipboard_data', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='text_object', ctx=Load()), attr='cut', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='named_registers', ctx=Load()), slice=Name(id='c', ctx=Load()), ctx=Store())], value=Name(id='clipboard_data', ctx=Load()))], orelse=[])], decorator_list=[Call(func=Name(id='operator', ctx=Load()), args=[Constant(value='"'), Attribute(value=Name(id='Keys', ctx=Load()), attr='Any', ctx=Load()), Constant(value='y')], keywords=[])], returns=Constant(value=None)), FunctionDef(name='_indent_text_object', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load())), arg(arg='text_object', annotation=Name(id='TextObject', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Indent.\n        ')), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='from_', ctx=Store()), Name(id='to', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='text_object', ctx=Load()), attr='get_line_numbers', ctx=Load()), args=[Name(id='buff', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='indent', ctx=Load()), args=[Name(id='buff', ctx=Load()), Name(id='from_', ctx=Load()), BinOp(left=Name(id='to', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))]))], decorator_list=[Call(func=Name(id='operator', ctx=Load()), args=[Constant(value='>')], keywords=[])], returns=Constant(value=None)), FunctionDef(name='_unindent_text_object', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load())), arg(arg='text_object', annotation=Name(id='TextObject', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Unindent.\n        ')), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='from_', ctx=Store()), Name(id='to', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='text_object', ctx=Load()), attr='get_line_numbers', ctx=Load()), args=[Name(id='buff', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='unindent', ctx=Load()), args=[Name(id='buff', ctx=Load()), Name(id='from_', ctx=Load()), BinOp(left=Name(id='to', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))]))], decorator_list=[Call(func=Name(id='operator', ctx=Load()), args=[Constant(value='<')], keywords=[])], returns=Constant(value=None)), FunctionDef(name='_reshape', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load())), arg(arg='text_object', annotation=Name(id='TextObject', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Reshape text.\n        ')), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='from_', ctx=Store()), Name(id='to', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='text_object', ctx=Load()), attr='get_line_numbers', ctx=Load()), args=[Name(id='buff', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='reshape_text', ctx=Load()), args=[Name(id='buff', ctx=Load()), Name(id='from_', ctx=Load()), Name(id='to', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='operator', ctx=Load()), args=[Constant(value='g'), Constant(value='q')], keywords=[])], returns=Constant(value=None)), FunctionDef(name='_b', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Move one word or token left.\n        ')), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[BoolOp(op=Or(), values=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find_start_of_previous_word', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))]), Constant(value=0)])], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='b')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_B', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Move one non-blank word left\n        ')), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[BoolOp(op=Or(), values=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find_start_of_previous_word', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load())), keyword(arg='WORD', value=Constant(value=True))]), Constant(value=0)])], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='B')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_dollar', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        'c$', 'd$' and '$':  Delete/change/move until end of line.\n        ")), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_end_of_line_position', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='$')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_word_forward', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        'word' forward. 'cw', 'dw', 'w': Delete/change/move one word.\n        ")), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[BoolOp(op=Or(), values=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find_next_word_beginning', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))]), Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_end_of_document_position', ctx=Load()), args=[], keywords=[])])], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='w')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_WORD_forward', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        'WORD' forward. 'cW', 'dW', 'W': Delete/change/move one WORD.\n        ")), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[BoolOp(op=Or(), values=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find_next_word_beginning', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load())), keyword(arg='WORD', value=Constant(value=True))]), Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_end_of_document_position', ctx=Load()), args=[], keywords=[])])], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='W')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_end_of_word', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        End of 'word': 'ce', 'de', 'e'\n        ")), Assign(targets=[Name(id='end', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find_next_word_ending', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))])), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[IfExp(test=Name(id='end', ctx=Load()), body=BinOp(left=Name(id='end', ctx=Load()), op=Sub(), right=Constant(value=1)), orelse=Constant(value=0))], keywords=[keyword(arg='type', value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='INCLUSIVE', ctx=Load()))]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='e')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_end_of_WORD', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        End of 'WORD': 'cE', 'dE', 'E'\n        ")), Assign(targets=[Name(id='end', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find_next_word_ending', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load())), keyword(arg='WORD', value=Constant(value=True))])), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[IfExp(test=Name(id='end', ctx=Load()), body=BinOp(left=Name(id='end', ctx=Load()), op=Sub(), right=Constant(value=1)), orelse=Constant(value=0))], keywords=[keyword(arg='type', value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='INCLUSIVE', ctx=Load()))]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='E')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_inner_word', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Inner 'word': ciw and diw\n        ")), Assign(targets=[Tuple(elts=[Name(id='start', ctx=Store()), Name(id='end', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find_boundaries_of_current_word', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Name(id='start', ctx=Load()), Name(id='end', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='i'), Constant(value='w')], keywords=[keyword(arg='no_move_handler', value=Constant(value=True))])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_a_word', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        A 'word': caw and daw\n        ")), Assign(targets=[Tuple(elts=[Name(id='start', ctx=Store()), Name(id='end', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find_boundaries_of_current_word', ctx=Load()), args=[], keywords=[keyword(arg='include_trailing_whitespace', value=Constant(value=True))])), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Name(id='start', ctx=Load()), Name(id='end', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='a'), Constant(value='w')], keywords=[keyword(arg='no_move_handler', value=Constant(value=True))])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_inner_WORD', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Inner 'WORD': ciW and diW\n        ")), Assign(targets=[Tuple(elts=[Name(id='start', ctx=Store()), Name(id='end', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find_boundaries_of_current_word', ctx=Load()), args=[], keywords=[keyword(arg='WORD', value=Constant(value=True))])), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Name(id='start', ctx=Load()), Name(id='end', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='i'), Constant(value='W')], keywords=[keyword(arg='no_move_handler', value=Constant(value=True))])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_a_WORD', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        A 'WORD': caw and daw\n        ")), Assign(targets=[Tuple(elts=[Name(id='start', ctx=Store()), Name(id='end', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find_boundaries_of_current_word', ctx=Load()), args=[], keywords=[keyword(arg='WORD', value=Constant(value=True)), keyword(arg='include_trailing_whitespace', value=Constant(value=True))])), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Name(id='start', ctx=Load()), Name(id='end', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='a'), Constant(value='W')], keywords=[keyword(arg='no_move_handler', value=Constant(value=True))])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_paragraph', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Auto paragraph.\n        ')), Assign(targets=[Name(id='start', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='start_of_paragraph', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='end', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='end_of_paragraph', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))])), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Name(id='start', ctx=Load()), Name(id='end', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='a'), Constant(value='p')], keywords=[keyword(arg='no_move_handler', value=Constant(value=True))])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_start_of_line', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="'c^', 'd^' and '^': Soft start of line, after whitespace.")), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_start_of_line_position', ctx=Load()), args=[], keywords=[keyword(arg='after_whitespace', value=Constant(value=True))])], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='^')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_hard_start_of_line', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        'c0', 'd0': Hard start of line, before whitespace.\n        (The move '0' key is implemented elsewhere, because a '0' could also change the `arg`.)\n        ")), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_start_of_line_position', ctx=Load()), args=[], keywords=[keyword(arg='after_whitespace', value=Constant(value=False))])], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='0')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='create_ci_ca_handles', args=arguments(posonlyargs=[], args=[arg(arg='ci_start', annotation=Name(id='str', ctx=Load())), arg(arg='ci_end', annotation=Name(id='str', ctx=Load())), arg(arg='inner', annotation=Name(id='bool', ctx=Load())), arg(arg='key', annotation=BinOp(left=Name(id='str', ctx=Load()), op=BitOr(), right=Constant(value=None)))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='\n        Delete/Change string between this start and stop character. But keep these characters.\n        This implements all the ci", ci<, ci{, ci(, di", di<, ca", ca<, ... combinations.\n        ')), FunctionDef(name='handler', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='ci_start', ctx=Load()), ops=[Eq()], comparators=[Name(id='ci_end', ctx=Load())]), body=[Assign(targets=[Name(id='start', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find_backwards', ctx=Load()), args=[Name(id='ci_start', ctx=Load())], keywords=[keyword(arg='in_current_line', value=Constant(value=False))])), Assign(targets=[Name(id='end', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find', ctx=Load()), args=[Name(id='ci_end', ctx=Load())], keywords=[keyword(arg='in_current_line', value=Constant(value=False))]))], orelse=[Assign(targets=[Name(id='start', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find_enclosing_bracket_left', ctx=Load()), args=[Name(id='ci_start', ctx=Load()), Name(id='ci_end', ctx=Load())], keywords=[])), Assign(targets=[Name(id='end', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find_enclosing_bracket_right', ctx=Load()), args=[Name(id='ci_start', ctx=Load()), Name(id='ci_end', ctx=Load())], keywords=[]))]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='start', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Name(id='end', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Assign(targets=[Name(id='offset', ctx=Store())], value=IfExp(test=Name(id='inner', ctx=Load()), body=Constant(value=0), orelse=Constant(value=1))), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='start', ctx=Load()), op=Add(), right=Constant(value=1)), op=Sub(), right=Name(id='offset', ctx=Load())), BinOp(left=Name(id='end', ctx=Load()), op=Add(), right=Name(id='offset', ctx=Load()))], keywords=[]))], orelse=[Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Constant(value=0)], keywords=[]))])], decorator_list=[], returns=Name(id='TextObject', ctx=Load())), If(test=Compare(left=Name(id='key', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Call(func=Name(id='text_object', ctx=Load()), args=[Subscript(value=Constant(value='ai'), slice=Name(id='inner', ctx=Load()), ctx=Load()), Name(id='ci_start', ctx=Load())], keywords=[keyword(arg='no_move_handler', value=Constant(value=True))]), args=[Name(id='handler', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='text_object', ctx=Load()), args=[Subscript(value=Constant(value='ai'), slice=Name(id='inner', ctx=Load()), ctx=Load()), Name(id='ci_end', ctx=Load())], keywords=[keyword(arg='no_move_handler', value=Constant(value=True))]), args=[Name(id='handler', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Call(func=Name(id='text_object', ctx=Load()), args=[Subscript(value=Constant(value='ai'), slice=Name(id='inner', ctx=Load()), ctx=Load()), Name(id='key', ctx=Load())], keywords=[keyword(arg='no_move_handler', value=Constant(value=True))]), args=[Name(id='handler', ctx=Load())], keywords=[]))])], decorator_list=[], returns=Constant(value=None)), For(target=Name(id='inner', ctx=Store()), iter=Tuple(elts=[Constant(value=False), Constant(value=True)], ctx=Load()), body=[For(target=Tuple(elts=[Name(id='ci_start', ctx=Store()), Name(id='ci_end', ctx=Store())], ctx=Store()), iter=List(elts=[Tuple(elts=[Constant(value='"'), Constant(value='"')], ctx=Load()), Tuple(elts=[Constant(value="'"), Constant(value="'")], ctx=Load()), Tuple(elts=[Constant(value='`'), Constant(value='`')], ctx=Load()), Tuple(elts=[Constant(value='['), Constant(value=']')], ctx=Load()), Tuple(elts=[Constant(value='<'), Constant(value='>')], ctx=Load()), Tuple(elts=[Constant(value='{'), Constant(value='}')], ctx=Load()), Tuple(elts=[Constant(value='('), Constant(value=')')], ctx=Load())], ctx=Load()), body=[Expr(value=Call(func=Name(id='create_ci_ca_handles', ctx=Load()), args=[Name(id='ci_start', ctx=Load()), Name(id='ci_end', ctx=Load()), Name(id='inner', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Name(id='create_ci_ca_handles', ctx=Load()), args=[Constant(value='('), Constant(value=')'), Name(id='inner', ctx=Load()), Constant(value='b')], keywords=[])), Expr(value=Call(func=Name(id='create_ci_ca_handles', ctx=Load()), args=[Constant(value='{'), Constant(value='}'), Name(id='inner', ctx=Load()), Constant(value='B')], keywords=[]))], orelse=[]), FunctionDef(name='_previous_section', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Move to previous blank-line separated section.\n        Implements '{', 'c{', 'd{', 'y{'\n        ")), Assign(targets=[Name(id='index', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='start_of_paragraph', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load())), keyword(arg='before', value=Constant(value=True))])), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='{')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_next_section', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Move to next blank-line separated section.\n        Implements '}', 'c}', 'd}', 'y}'\n        ")), Assign(targets=[Name(id='index', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='end_of_paragraph', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load())), keyword(arg='after', value=Constant(value=True))])), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='}')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_find_next_occurrence', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Go to next occurrence of character. Typing 'fx' will move the\n        cursor to the next occurrence of character. 'x'.\n        ")), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='last_character_find', ctx=Store())], value=Call(func=Name(id='CharacterFind', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='data', ctx=Load()), Constant(value=False)], keywords=[])), Assign(targets=[Name(id='match', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='data', ctx=Load())], keywords=[keyword(arg='in_current_line', value=Constant(value=True)), keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))])), If(test=Name(id='match', ctx=Load()), body=[Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Name(id='match', ctx=Load())], keywords=[keyword(arg='type', value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='INCLUSIVE', ctx=Load()))]))], orelse=[Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Constant(value=0)], keywords=[]))])], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='f'), Attribute(value=Name(id='Keys', ctx=Load()), attr='Any', ctx=Load())], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_find_previous_occurrence', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Go to previous occurrence of character. Typing 'Fx' will move the\n        cursor to the previous occurrence of character. 'x'.\n        ")), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='last_character_find', ctx=Store())], value=Call(func=Name(id='CharacterFind', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='data', ctx=Load()), Constant(value=True)], keywords=[])), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[BoolOp(op=Or(), values=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find_backwards', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='data', ctx=Load())], keywords=[keyword(arg='in_current_line', value=Constant(value=True)), keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))]), Constant(value=0)])], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='F'), Attribute(value=Name(id='Keys', ctx=Load()), attr='Any', ctx=Load())], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_t', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Move right to the next occurrence of c, then one char backward.\n        ')), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='last_character_find', ctx=Store())], value=Call(func=Name(id='CharacterFind', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='data', ctx=Load()), Constant(value=False)], keywords=[])), Assign(targets=[Name(id='match', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='data', ctx=Load())], keywords=[keyword(arg='in_current_line', value=Constant(value=True)), keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))])), If(test=Name(id='match', ctx=Load()), body=[Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[BinOp(left=Name(id='match', ctx=Load()), op=Sub(), right=Constant(value=1))], keywords=[keyword(arg='type', value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='INCLUSIVE', ctx=Load()))]))], orelse=[Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Constant(value=0)], keywords=[]))])], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='t'), Attribute(value=Name(id='Keys', ctx=Load()), attr='Any', ctx=Load())], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_T', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Move left to the previous occurrence of c, then one char forward.\n        ')), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='last_character_find', ctx=Store())], value=Call(func=Name(id='CharacterFind', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='data', ctx=Load()), Constant(value=True)], keywords=[])), Assign(targets=[Name(id='match', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find_backwards', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='data', ctx=Load())], keywords=[keyword(arg='in_current_line', value=Constant(value=True)), keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))])), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[IfExp(test=Name(id='match', ctx=Load()), body=BinOp(left=Name(id='match', ctx=Load()), op=Add(), right=Constant(value=1)), orelse=Constant(value=0))], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='T'), Attribute(value=Name(id='Keys', ctx=Load()), attr='Any', ctx=Load())], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='repeat', args=arguments(posonlyargs=[], args=[arg(arg='reverse', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Create ',' and ';' commands.\n        ")), FunctionDef(name='_', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n            Repeat the last 'f'/'F'/'t'/'T' command.\n            ")), AnnAssign(target=Name(id='pos', ctx=Store()), annotation=BinOp(left=Name(id='int', ctx=Load()), op=BitOr(), right=Constant(value=None)), value=Constant(value=0), simple=1), Assign(targets=[Name(id='vi_state', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load())), Assign(targets=[Name(id='type', ctx=Store())], value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='EXCLUSIVE', ctx=Load())), If(test=Attribute(value=Name(id='vi_state', ctx=Load()), attr='last_character_find', ctx=Load()), body=[Assign(targets=[Name(id='char', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='vi_state', ctx=Load()), attr='last_character_find', ctx=Load()), attr='character', ctx=Load())), Assign(targets=[Name(id='backwards', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='vi_state', ctx=Load()), attr='last_character_find', ctx=Load()), attr='backwards', ctx=Load())), If(test=Name(id='reverse', ctx=Load()), body=[Assign(targets=[Name(id='backwards', ctx=Store())], value=UnaryOp(op=Not(), operand=Name(id='backwards', ctx=Load())))], orelse=[]), If(test=Name(id='backwards', ctx=Load()), body=[Assign(targets=[Name(id='pos', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find_backwards', ctx=Load()), args=[Name(id='char', ctx=Load())], keywords=[keyword(arg='in_current_line', value=Constant(value=True)), keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))]))], orelse=[Assign(targets=[Name(id='pos', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find', ctx=Load()), args=[Name(id='char', ctx=Load())], keywords=[keyword(arg='in_current_line', value=Constant(value=True)), keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))])), Assign(targets=[Name(id='type', ctx=Store())], value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='INCLUSIVE', ctx=Load()))])], orelse=[]), If(test=Name(id='pos', ctx=Load()), body=[Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Name(id='pos', ctx=Load())], keywords=[keyword(arg='type', value=Name(id='type', ctx=Load()))]))], orelse=[Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Constant(value=0)], keywords=[]))])], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[IfExp(test=Name(id='reverse', ctx=Load()), body=Constant(value=','), orelse=Constant(value=';'))], keywords=[])], returns=Name(id='TextObject', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), Expr(value=Call(func=Name(id='repeat', ctx=Load()), args=[Constant(value=True)], keywords=[])), Expr(value=Call(func=Name(id='repeat', ctx=Load()), args=[Constant(value=False)], keywords=[])), FunctionDef(name='_left', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Implements 'ch', 'dh', 'h': Cursor left.\n        ")), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_cursor_left_position', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))])], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='h')], keywords=[]), Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='left')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_down', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Implements 'cj', 'dj', 'j', ... Cursor up.\n        ")), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_cursor_down_position', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))])], keywords=[keyword(arg='type', value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='LINEWISE', ctx=Load()))]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='j')], keywords=[keyword(arg='no_move_handler', value=Constant(value=True)), keyword(arg='no_selection_handler', value=Constant(value=True))])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_up', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Implements 'ck', 'dk', 'k', ... Cursor up.\n        ")), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_cursor_up_position', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))])], keywords=[keyword(arg='type', value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='LINEWISE', ctx=Load()))]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='k')], keywords=[keyword(arg='no_move_handler', value=Constant(value=True)), keyword(arg='no_selection_handler', value=Constant(value=True))])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_right', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Implements 'cl', 'dl', 'l', 'c ', 'd ', ' '. Cursor right.\n        ")), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_cursor_right_position', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))])], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='l')], keywords=[]), Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value=' ')], keywords=[]), Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='right')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_top_of_screen', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Moves to the start of the visible region. (Below the scroll offset.)\n        Implements 'cH', 'dH', 'H'.\n        ")), Assign(targets=[Name(id='w', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='layout', ctx=Load()), attr='current_window', ctx=Load())), Assign(targets=[Name(id='b', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), If(test=BoolOp(op=And(), values=[Name(id='w', ctx=Load()), Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load())]), body=[Assign(targets=[Name(id='pos', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='translate_row_col_to_index', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load()), attr='first_visible_line', ctx=Load()), args=[], keywords=[keyword(arg='after_scroll_offset', value=Constant(value=True))]), Constant(value=0)], keywords=[]), op=Sub(), right=Attribute(value=Name(id='b', ctx=Load()), attr='cursor_position', ctx=Load())))], orelse=[Assign(targets=[Name(id='pos', ctx=Store())], value=UnaryOp(op=USub(), operand=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='text_before_cursor', ctx=Load())], keywords=[])))]), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Name(id='pos', ctx=Load())], keywords=[keyword(arg='type', value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='LINEWISE', ctx=Load()))]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='H')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_middle_of_screen', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Moves cursor to the vertical center of the visible region.\n        Implements 'cM', 'dM', 'M'.\n        ")), Assign(targets=[Name(id='w', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='layout', ctx=Load()), attr='current_window', ctx=Load())), Assign(targets=[Name(id='b', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), If(test=BoolOp(op=And(), values=[Name(id='w', ctx=Load()), Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load())]), body=[Assign(targets=[Name(id='pos', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='translate_row_col_to_index', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load()), attr='center_visible_line', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[]), op=Sub(), right=Attribute(value=Name(id='b', ctx=Load()), attr='cursor_position', ctx=Load())))], orelse=[Assign(targets=[Name(id='pos', ctx=Store())], value=UnaryOp(op=USub(), operand=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='text_before_cursor', ctx=Load())], keywords=[])))]), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Name(id='pos', ctx=Load())], keywords=[keyword(arg='type', value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='LINEWISE', ctx=Load()))]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='M')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_end_of_screen', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Moves to the end of the visible region. (Above the scroll offset.)\n        ')), Assign(targets=[Name(id='w', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='layout', ctx=Load()), attr='current_window', ctx=Load())), Assign(targets=[Name(id='b', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), If(test=BoolOp(op=And(), values=[Name(id='w', ctx=Load()), Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load())]), body=[Assign(targets=[Name(id='pos', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='translate_row_col_to_index', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load()), attr='last_visible_line', ctx=Load()), args=[], keywords=[keyword(arg='before_scroll_offset', value=Constant(value=True))]), Constant(value=0)], keywords=[]), op=Sub(), right=Attribute(value=Name(id='b', ctx=Load()), attr='cursor_position', ctx=Load())))], orelse=[Assign(targets=[Name(id='pos', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='text_after_cursor', ctx=Load())], keywords=[]))]), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Name(id='pos', ctx=Load())], keywords=[keyword(arg='type', value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='LINEWISE', ctx=Load()))]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='L')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_search_next', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Search next.\n        ')), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='search_state', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='current_search_state', ctx=Load())), Assign(targets=[Name(id='cursor_position', ctx=Store())], value=Call(func=Attribute(value=Name(id='buff', ctx=Load()), attr='get_search_position', ctx=Load()), args=[Name(id='search_state', ctx=Load())], keywords=[keyword(arg='include_current_position', value=Constant(value=False)), keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))])), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[BinOp(left=Name(id='cursor_position', ctx=Load()), op=Sub(), right=Attribute(value=Name(id='buff', ctx=Load()), attr='cursor_position', ctx=Load()))], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='n')], keywords=[keyword(arg='no_move_handler', value=Constant(value=True))])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_search_next2', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Search next in navigation mode. (This goes through the history.)\n        ')), Assign(targets=[Name(id='search_state', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='current_search_state', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='apply_search', ctx=Load()), args=[Name(id='search_state', ctx=Load())], keywords=[keyword(arg='include_current_position', value=Constant(value=False)), keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='n')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_search_previous', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Search previous.\n        ')), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='search_state', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='current_search_state', ctx=Load())), Assign(targets=[Name(id='cursor_position', ctx=Store())], value=Call(func=Attribute(value=Name(id='buff', ctx=Load()), attr='get_search_position', ctx=Load()), args=[UnaryOp(op=Invert(), operand=Name(id='search_state', ctx=Load()))], keywords=[keyword(arg='include_current_position', value=Constant(value=False)), keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))])), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[BinOp(left=Name(id='cursor_position', ctx=Load()), op=Sub(), right=Attribute(value=Name(id='buff', ctx=Load()), attr='cursor_position', ctx=Load()))], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='N')], keywords=[keyword(arg='no_move_handler', value=Constant(value=True))])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_search_previous2', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Search previous in navigation mode. (This goes through the history.)\n        ')), Assign(targets=[Name(id='search_state', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='current_search_state', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='apply_search', ctx=Load()), args=[UnaryOp(op=Invert(), operand=Name(id='search_state', ctx=Load()))], keywords=[keyword(arg='include_current_position', value=Constant(value=False)), keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='N')], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_scroll_top', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Scrolls the window to makes the current line the first line in the visible region.\n        ')), Assign(targets=[Name(id='b', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='layout', ctx=Load()), attr='current_window', ctx=Load()), attr='vertical_scroll', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='cursor_position_row', ctx=Load()))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='z'), Constant(value='+')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitOr(), right=Name(id='vi_selection_mode', ctx=Load())))]), Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='z'), Constant(value='t')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitOr(), right=Name(id='vi_selection_mode', ctx=Load())))]), Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='z'), Constant(value='enter')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitOr(), right=Name(id='vi_selection_mode', ctx=Load())))])], returns=Constant(value=None)), FunctionDef(name='_scroll_bottom', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Scrolls the window to makes the current line the last line in the visible region.\n        ')), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='layout', ctx=Load()), attr='current_window', ctx=Load()), attr='vertical_scroll', ctx=Store())], value=Constant(value=0))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='z'), Constant(value='-')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitOr(), right=Name(id='vi_selection_mode', ctx=Load())))]), Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='z'), Constant(value='b')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitOr(), right=Name(id='vi_selection_mode', ctx=Load())))])], returns=Constant(value=None)), FunctionDef(name='_scroll_center', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Center Window vertically around cursor.\n        ')), Assign(targets=[Name(id='w', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='layout', ctx=Load()), attr='current_window', ctx=Load())), Assign(targets=[Name(id='b', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), If(test=BoolOp(op=And(), values=[Name(id='w', ctx=Load()), Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load())]), body=[Assign(targets=[Name(id='info', ctx=Store())], value=Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load())), Assign(targets=[Name(id='scroll_height', ctx=Store())], value=BinOp(left=Attribute(value=Name(id='info', ctx=Load()), attr='window_height', ctx=Load()), op=FloorDiv(), right=Constant(value=2))), Assign(targets=[Name(id='y', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Constant(value=0), BinOp(left=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='document', ctx=Load()), attr='cursor_position_row', ctx=Load()), op=Sub(), right=Constant(value=1))], keywords=[])), Assign(targets=[Name(id='height', ctx=Store())], value=Constant(value=0)), While(test=Compare(left=Name(id='y', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), body=[Assign(targets=[Name(id='line_height', ctx=Store())], value=Call(func=Attribute(value=Name(id='info', ctx=Load()), attr='get_height_for_line', ctx=Load()), args=[Name(id='y', ctx=Load())], keywords=[])), If(test=Compare(left=BinOp(left=Name(id='height', ctx=Load()), op=Add(), right=Name(id='line_height', ctx=Load())), ops=[Lt()], comparators=[Name(id='scroll_height', ctx=Load())]), body=[AugAssign(target=Name(id='height', ctx=Store()), op=Add(), value=Name(id='line_height', ctx=Load())), AugAssign(target=Name(id='y', ctx=Store()), op=Sub(), value=Constant(value=1))], orelse=[Break()])], orelse=[]), Assign(targets=[Attribute(value=Name(id='w', ctx=Load()), attr='vertical_scroll', ctx=Store())], value=Name(id='y', ctx=Load()))], orelse=[])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='z'), Constant(value='z')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitOr(), right=Name(id='vi_selection_mode', ctx=Load())))])], returns=Constant(value=None)), FunctionDef(name='_goto_corresponding_bracket', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Implements 'c%', 'd%', '%, 'y%' (Move to corresponding bracket.)\n        If an 'arg' has been given, go this this % position in the file.\n        ")), Assign(targets=[Name(id='buffer', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), If(test=Attribute(value=Name(id='event', ctx=Load()), attr='_arg', ctx=Load()), body=[If(test=Compare(left=Constant(value=0), ops=[Lt(), LtE()], comparators=[Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()), Constant(value=100)]), body=[Assign(targets=[Name(id='absolute_index', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='translate_row_col_to_index', ctx=Load()), args=[Call(func=Name(id='int', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()), op=Mult(), right=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='line_count', ctx=Load())), op=Sub(), right=Constant(value=1)), op=Div(), right=Constant(value=100))], keywords=[]), Constant(value=0)], keywords=[])), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[BinOp(left=Name(id='absolute_index', ctx=Load()), op=Sub(), right=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='cursor_position', ctx=Load()))], keywords=[keyword(arg='type', value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='LINEWISE', ctx=Load()))]))], orelse=[Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Constant(value=0)], keywords=[]))])], orelse=[Assign(targets=[Name(id='match', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='document', ctx=Load()), attr='find_matching_bracket_position', ctx=Load()), args=[], keywords=[])), If(test=Name(id='match', ctx=Load()), body=[Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Name(id='match', ctx=Load())], keywords=[keyword(arg='type', value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='INCLUSIVE', ctx=Load()))]))], orelse=[Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Constant(value=0)], keywords=[]))])])], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='%')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_to_column', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Move to the n-th column (you may specify the argument n by typing it on\n        number keys, for example, 20|).\n        ')), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='get_column_cursor_position', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()), op=Sub(), right=Constant(value=1))], keywords=[])], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='|')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_goto_first_line', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Go to the start of the very first line.\n        Implements 'gg', 'cgg', 'ygg'\n        ")), Assign(targets=[Name(id='d', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load())), If(test=Attribute(value=Name(id='event', ctx=Load()), attr='_arg', ctx=Load()), body=[Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[BinOp(left=Call(func=Attribute(value=Name(id='d', ctx=Load()), attr='translate_row_col_to_index', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()), op=Sub(), right=Constant(value=1)), Constant(value=0)], keywords=[]), op=Sub(), right=Attribute(value=Name(id='d', ctx=Load()), attr='cursor_position', ctx=Load()))], keywords=[keyword(arg='type', value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='LINEWISE', ctx=Load()))]))], orelse=[Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Call(func=Attribute(value=Name(id='d', ctx=Load()), attr='get_start_of_document_position', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='type', value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='LINEWISE', ctx=Load()))]))])], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='g'), Constant(value='g')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_goto_last_line', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Go to last non-blank of line.\n        'g_', 'cg_', 'yg_', etc..\n        ")), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='last_non_blank_of_current_line_position', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='type', value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='INCLUSIVE', ctx=Load()))]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='g'), Constant(value='_')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_ge', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Go to last character of previous word.\n        'ge', 'cge', 'yge', etc..\n        ")), Assign(targets=[Name(id='prev_end', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find_previous_word_ending', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()))])), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[IfExp(test=Compare(left=Name(id='prev_end', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=BinOp(left=Name(id='prev_end', ctx=Load()), op=Sub(), right=Constant(value=1)), orelse=Constant(value=0))], keywords=[keyword(arg='type', value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='INCLUSIVE', ctx=Load()))]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='g'), Constant(value='e')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_gE', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Go to last character of previous WORD.\n        'gE', 'cgE', 'ygE', etc..\n        ")), Assign(targets=[Name(id='prev_end', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='document', ctx=Load()), attr='find_previous_word_ending', ctx=Load()), args=[], keywords=[keyword(arg='count', value=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load())), keyword(arg='WORD', value=Constant(value=True))])), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[IfExp(test=Compare(left=Name(id='prev_end', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=BinOp(left=Name(id='prev_end', ctx=Load()), op=Sub(), right=Constant(value=1)), orelse=Constant(value=0))], keywords=[keyword(arg='type', value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='INCLUSIVE', ctx=Load()))]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='g'), Constant(value='E')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_gm', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Like g0, but half a screenwidth to the right. (Or as much as possible.)\n        ')), Assign(targets=[Name(id='w', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='layout', ctx=Load()), attr='current_window', ctx=Load())), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), If(test=BoolOp(op=And(), values=[Name(id='w', ctx=Load()), Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load())]), body=[Assign(targets=[Name(id='width', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='w', ctx=Load()), attr='render_info', ctx=Load()), attr='window_width', ctx=Load())), Assign(targets=[Name(id='start', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='buff', ctx=Load()), attr='document', ctx=Load()), attr='get_start_of_line_position', ctx=Load()), args=[], keywords=[keyword(arg='after_whitespace', value=Constant(value=False))])), AugAssign(target=Name(id='start', ctx=Store()), op=Add(), value=Call(func=Name(id='int', ctx=Load()), args=[Call(func=Name(id='min', ctx=Load()), args=[BinOp(left=Name(id='width', ctx=Load()), op=Div(), right=Constant(value=2)), Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='buff', ctx=Load()), attr='document', ctx=Load()), attr='current_line', ctx=Load())], keywords=[])], keywords=[])], keywords=[])), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Name(id='start', ctx=Load())], keywords=[keyword(arg='type', value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='INCLUSIVE', ctx=Load()))]))], orelse=[]), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[Constant(value=0)], keywords=[]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='g'), Constant(value='m')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_last_line', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Go to the end of the document. (If no arg has been given.)\n        ')), Assign(targets=[Name(id='buf', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Return(value=Call(func=Name(id='TextObject', ctx=Load()), args=[BinOp(left=Call(func=Attribute(value=Attribute(value=Name(id='buf', ctx=Load()), attr='document', ctx=Load()), attr='translate_row_col_to_index', ctx=Load()), args=[BinOp(left=Attribute(value=Attribute(value=Name(id='buf', ctx=Load()), attr='document', ctx=Load()), attr='line_count', ctx=Load()), op=Sub(), right=Constant(value=1)), Constant(value=0)], keywords=[]), op=Sub(), right=Attribute(value=Name(id='buf', ctx=Load()), attr='cursor_position', ctx=Load()))], keywords=[keyword(arg='type', value=Attribute(value=Name(id='TextObjectType', ctx=Load()), attr='LINEWISE', ctx=Load()))]))], decorator_list=[Call(func=Name(id='text_object', ctx=Load()), args=[Constant(value='G')], keywords=[])], returns=Name(id='TextObject', ctx=Load())), FunctionDef(name='_to_nth_history_line', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        If an argument is given, move to this line in the  history. (for\n        example, 15G)\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='go_to_history', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load()), op=Sub(), right=Constant(value=1))], keywords=[]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='G')], keywords=[keyword(arg='filter', value=Name(id='has_arg', ctx=Load()))])], returns=Constant(value=None)), For(target=Name(id='n', ctx=Store()), iter=Constant(value='123456789'), body=[FunctionDef(name='_arg', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n            Always handle numerics in navigation mode as arg.\n            ')), Expr(value=Call(func=Attribute(value=Name(id='event', ctx=Load()), attr='append_to_arg_count', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='data', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Name(id='n', ctx=Load())], keywords=[keyword(arg='filter', value=BinOp(left=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitOr(), right=Name(id='vi_selection_mode', ctx=Load())), op=BitOr(), right=Name(id='vi_waiting_for_text_object_mode', ctx=Load())))])], returns=Constant(value=None))], orelse=[]), FunctionDef(name='_0_arg', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Zero when an argument was already give.\n        ')), Expr(value=Call(func=Attribute(value=Name(id='event', ctx=Load()), attr='append_to_arg_count', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='data', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='0')], keywords=[keyword(arg='filter', value=BinOp(left=BinOp(left=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitOr(), right=Name(id='vi_selection_mode', ctx=Load())), op=BitOr(), right=Name(id='vi_waiting_for_text_object_mode', ctx=Load())), op=BitAnd(), right=Name(id='has_arg', ctx=Load())))])], returns=Constant(value=None)), FunctionDef(name='_insert_text', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Insert data at cursor position.\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='insert_text', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='data', ctx=Load())], keywords=[keyword(arg='overwrite', value=Constant(value=True))]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Attribute(value=Name(id='Keys', ctx=Load()), attr='Any', ctx=Load())], keywords=[keyword(arg='filter', value=Name(id='vi_replace_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_replace_single', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Replace single character at cursor position.\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='insert_text', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='data', ctx=Load())], keywords=[keyword(arg='overwrite', value=Constant(value=True))])), AugAssign(target=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='cursor_position', ctx=Store()), op=Sub(), value=Constant(value=1)), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Store())], value=Attribute(value=Name(id='InputMode', ctx=Load()), attr='NAVIGATION', ctx=Load()))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Attribute(value=Name(id='Keys', ctx=Load()), attr='Any', ctx=Load())], keywords=[keyword(arg='filter', value=Name(id='vi_replace_single_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_insert_text_multiple_cursors', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Insert data at multiple cursor positions at once.\n        (Usually a result of pressing 'I' or 'A' in block-selection mode.)\n        ")), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='original_text', ctx=Store())], value=Attribute(value=Name(id='buff', ctx=Load()), attr='text', ctx=Load())), Assign(targets=[Name(id='text', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='p', ctx=Store())], value=Constant(value=0)), For(target=Name(id='p2', ctx=Store()), iter=Attribute(value=Name(id='buff', ctx=Load()), attr='multiple_cursor_positions', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='text', ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Name(id='original_text', ctx=Load()), slice=Slice(lower=Name(id='p', ctx=Load()), upper=Name(id='p2', ctx=Load())), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='text', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='data', ctx=Load())], keywords=[])), Assign(targets=[Name(id='p', ctx=Store())], value=Name(id='p2', ctx=Load()))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='text', ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Name(id='original_text', ctx=Load()), slice=Slice(lower=Name(id='p', ctx=Load())), ctx=Load())], keywords=[])), Assign(targets=[Name(id='new_cursor_positions', ctx=Store())], value=ListComp(elt=BinOp(left=BinOp(left=Name(id='pos', ctx=Load()), op=Add(), right=Name(id='i', ctx=Load())), op=Add(), right=Constant(value=1)), generators=[comprehension(target=Tuple(elts=[Name(id='i', ctx=Store()), Name(id='pos', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Attribute(value=Name(id='buff', ctx=Load()), attr='multiple_cursor_positions', ctx=Load())], keywords=[]), ifs=[], is_async=0)])), Assign(targets=[Attribute(value=Name(id='buff', ctx=Load()), attr='text', ctx=Store())], value=Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='buff', ctx=Load()), attr='multiple_cursor_positions', ctx=Store())], value=Name(id='new_cursor_positions', ctx=Load())), AugAssign(target=Attribute(value=Name(id='buff', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=Constant(value=1))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Attribute(value=Name(id='Keys', ctx=Load()), attr='Any', ctx=Load())], keywords=[keyword(arg='filter', value=Name(id='vi_insert_multiple_mode', ctx=Load())), keyword(arg='save_before', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='e')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=UnaryOp(op=Not(), operand=Attribute(value=Name(id='e', ctx=Load()), attr='is_repeat', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_delete_before_multiple_cursors', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Backspace, using multiple cursors.\n        ')), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='original_text', ctx=Store())], value=Attribute(value=Name(id='buff', ctx=Load()), attr='text', ctx=Load())), Assign(targets=[Name(id='deleted_something', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='text', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='p', ctx=Store())], value=Constant(value=0)), For(target=Name(id='p2', ctx=Store()), iter=Attribute(value=Name(id='buff', ctx=Load()), attr='multiple_cursor_positions', ctx=Load()), body=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='p2', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), Compare(left=Subscript(value=Name(id='original_text', ctx=Load()), slice=BinOp(left=Name(id='p2', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()), ops=[NotEq()], comparators=[Constant(value='\n')])]), body=[Expr(value=Call(func=Attribute(value=Name(id='text', ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Name(id='original_text', ctx=Load()), slice=Slice(lower=Name(id='p', ctx=Load()), upper=BinOp(left=Name(id='p2', ctx=Load()), op=Sub(), right=Constant(value=1))), ctx=Load())], keywords=[])), Assign(targets=[Name(id='deleted_something', ctx=Store())], value=Constant(value=True))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='text', ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Name(id='original_text', ctx=Load()), slice=Slice(lower=Name(id='p', ctx=Load()), upper=Name(id='p2', ctx=Load())), ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='p', ctx=Store())], value=Name(id='p2', ctx=Load()))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='text', ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Name(id='original_text', ctx=Load()), slice=Slice(lower=Name(id='p', ctx=Load())), ctx=Load())], keywords=[])), If(test=Name(id='deleted_something', ctx=Load()), body=[Assign(targets=[Name(id='lengths', ctx=Store())], value=ListComp(elt=Call(func=Name(id='len', ctx=Load()), args=[Name(id='part', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='part', ctx=Store()), iter=Subscript(value=Name(id='text', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()), ifs=[], is_async=0)])), Assign(targets=[Name(id='new_cursor_positions', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='accumulate', ctx=Load()), args=[Name(id='lengths', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Attribute(value=Name(id='buff', ctx=Load()), attr='text', ctx=Store())], value=Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='buff', ctx=Load()), attr='multiple_cursor_positions', ctx=Store())], value=Name(id='new_cursor_positions', ctx=Load())), AugAssign(target=Attribute(value=Name(id='buff', ctx=Load()), attr='cursor_position', ctx=Store()), op=Sub(), value=Constant(value=1))], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='output', ctx=Load()), attr='bell', ctx=Load()), args=[], keywords=[]))])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='backspace')], keywords=[keyword(arg='filter', value=Name(id='vi_insert_multiple_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_delete_after_multiple_cursors', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Delete, using multiple cursors.\n        ')), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='original_text', ctx=Store())], value=Attribute(value=Name(id='buff', ctx=Load()), attr='text', ctx=Load())), Assign(targets=[Name(id='deleted_something', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='text', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='new_cursor_positions', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='p', ctx=Store())], value=Constant(value=0)), For(target=Name(id='p2', ctx=Store()), iter=Attribute(value=Name(id='buff', ctx=Load()), attr='multiple_cursor_positions', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='text', ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Name(id='original_text', ctx=Load()), slice=Slice(lower=Name(id='p', ctx=Load()), upper=Name(id='p2', ctx=Load())), ctx=Load())], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='p2', ctx=Load()), ops=[GtE()], comparators=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='original_text', ctx=Load())], keywords=[])]), Compare(left=Subscript(value=Name(id='original_text', ctx=Load()), slice=Name(id='p2', ctx=Load()), ctx=Load()), ops=[Eq()], comparators=[Constant(value='\n')])]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Name(id='p2', ctx=Load()))], orelse=[Assign(targets=[Name(id='p', ctx=Store())], value=BinOp(left=Name(id='p2', ctx=Load()), op=Add(), right=Constant(value=1))), Assign(targets=[Name(id='deleted_something', ctx=Store())], value=Constant(value=True))])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='text', ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Name(id='original_text', ctx=Load()), slice=Slice(lower=Name(id='p', ctx=Load())), ctx=Load())], keywords=[])), If(test=Name(id='deleted_something', ctx=Load()), body=[Assign(targets=[Name(id='lengths', ctx=Store())], value=ListComp(elt=Call(func=Name(id='len', ctx=Load()), args=[Name(id='part', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='part', ctx=Store()), iter=Subscript(value=Name(id='text', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()), ifs=[], is_async=0)])), Assign(targets=[Name(id='new_cursor_positions', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='accumulate', ctx=Load()), args=[Name(id='lengths', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Attribute(value=Name(id='buff', ctx=Load()), attr='text', ctx=Store())], value=Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='buff', ctx=Load()), attr='multiple_cursor_positions', ctx=Store())], value=Name(id='new_cursor_positions', ctx=Load()))], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='output', ctx=Load()), attr='bell', ctx=Load()), args=[], keywords=[]))])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='delete')], keywords=[keyword(arg='filter', value=Name(id='vi_insert_multiple_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_left_multiple', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Move all cursors to the left.\n        (But keep all cursors on the same line.)\n        ')), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='new_positions', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='p', ctx=Store()), iter=Attribute(value=Name(id='buff', ctx=Load()), attr='multiple_cursor_positions', ctx=Load()), body=[If(test=Compare(left=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='buff', ctx=Load()), attr='document', ctx=Load()), attr='translate_index_to_position', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[]), slice=Constant(value=1), ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), body=[AugAssign(target=Name(id='p', ctx=Store()), op=Sub(), value=Constant(value=1))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='new_positions', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='buff', ctx=Load()), attr='multiple_cursor_positions', ctx=Store())], value=Name(id='new_positions', ctx=Load())), If(test=Compare(left=Attribute(value=Attribute(value=Name(id='buff', ctx=Load()), attr='document', ctx=Load()), attr='cursor_position_col', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), body=[AugAssign(target=Attribute(value=Name(id='buff', ctx=Load()), attr='cursor_position', ctx=Store()), op=Sub(), value=Constant(value=1))], orelse=[])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='left')], keywords=[keyword(arg='filter', value=Name(id='vi_insert_multiple_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_right_multiple', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Move all cursors to the right.\n        (But keep all cursors on the same line.)\n        ')), Assign(targets=[Name(id='buff', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load())), Assign(targets=[Name(id='new_positions', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='p', ctx=Store()), iter=Attribute(value=Name(id='buff', ctx=Load()), attr='multiple_cursor_positions', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='row', ctx=Store()), Name(id='column', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='buff', ctx=Load()), attr='document', ctx=Load()), attr='translate_index_to_position', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='column', ctx=Load()), ops=[Lt()], comparators=[Call(func=Name(id='len', ctx=Load()), args=[Subscript(value=Attribute(value=Attribute(value=Name(id='buff', ctx=Load()), attr='document', ctx=Load()), attr='lines', ctx=Load()), slice=Name(id='row', ctx=Load()), ctx=Load())], keywords=[])]), body=[AugAssign(target=Name(id='p', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='new_positions', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='buff', ctx=Load()), attr='multiple_cursor_positions', ctx=Store())], value=Name(id='new_positions', ctx=Load())), If(test=UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='buff', ctx=Load()), attr='document', ctx=Load()), attr='is_cursor_at_the_end_of_line', ctx=Load())), body=[AugAssign(target=Attribute(value=Name(id='buff', ctx=Load()), attr='cursor_position', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='right')], keywords=[keyword(arg='filter', value=Name(id='vi_insert_multiple_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_updown_multiple', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Ignore all up/down key presses when in multiple cursor mode.\n        '))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='up')], keywords=[keyword(arg='filter', value=Name(id='vi_insert_multiple_mode', ctx=Load()))]), Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='down')], keywords=[keyword(arg='filter', value=Name(id='vi_insert_multiple_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_complete_line', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Pressing the ControlX - ControlL sequence in Vi mode does line\n        completion based on the other lines in the document and the history.\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='start_history_lines_completion', ctx=Load()), args=[], keywords=[]))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-x'), Constant(value='c-l')], keywords=[keyword(arg='filter', value=Name(id='vi_insert_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_complete_filename', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Complete file names.\n        ')), Pass()], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-x'), Constant(value='c-f')], keywords=[keyword(arg='filter', value=Name(id='vi_insert_mode', ctx=Load()))])], returns=Constant(value=None)), FunctionDef(name='_digraph', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Go into digraph mode.\n        ')), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='waiting_for_digraph', ctx=Store())], value=Constant(value=True))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-k')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_insert_mode', ctx=Load()), op=BitOr(), right=Name(id='vi_replace_mode', ctx=Load())))])], returns=Constant(value=None)), FunctionDef(name='digraph_symbol_1_given', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Attribute(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='vi_state', ctx=Load()), attr='digraph_symbol1', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='_digraph1', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        First digraph symbol.\n        ')), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='digraph_symbol1', ctx=Store())], value=Attribute(value=Name(id='event', ctx=Load()), attr='data', ctx=Load()))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Attribute(value=Name(id='Keys', ctx=Load()), attr='Any', ctx=Load())], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_digraph_mode', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='digraph_symbol_1_given', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_create_digraph', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Insert digraph.\n        ')), Try(body=[AnnAssign(target=Name(id='code', ctx=Store()), annotation=Subscript(value=Name(id='tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load()), value=Tuple(elts=[BoolOp(op=Or(), values=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='digraph_symbol1', ctx=Load()), Constant(value='')]), Attribute(value=Name(id='event', ctx=Load()), attr='data', ctx=Load())], ctx=Load()), simple=1), If(test=Compare(left=Name(id='code', ctx=Load()), ops=[NotIn()], comparators=[Name(id='DIGRAPHS', ctx=Load())]), body=[Assign(targets=[Name(id='code', ctx=Store())], value=Subscript(value=Name(id='code', ctx=Load()), slice=Slice(step=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()))], orelse=[]), Assign(targets=[Name(id='symbol', ctx=Store())], value=Subscript(value=Name(id='DIGRAPHS', ctx=Load()), slice=Name(id='code', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='output', ctx=Load()), attr='bell', ctx=Load()), args=[], keywords=[]))])], orelse=[Assign(targets=[Name(id='overwrite', ctx=Store())], value=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='InputMode', ctx=Load()), attr='REPLACE', ctx=Load())])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='current_buffer', ctx=Load()), attr='insert_text', ctx=Load()), args=[Call(func=Name(id='chr', ctx=Load()), args=[Name(id='symbol', ctx=Load())], keywords=[])], keywords=[keyword(arg='overwrite', value=Name(id='overwrite', ctx=Load()))])), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='waiting_for_digraph', ctx=Store())], value=Constant(value=False))], finalbody=[Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='waiting_for_digraph', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='digraph_symbol1', ctx=Store())], value=Constant(value=None))])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Attribute(value=Name(id='Keys', ctx=Load()), attr='Any', ctx=Load())], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_digraph_mode', ctx=Load()), op=BitAnd(), right=Name(id='digraph_symbol_1_given', ctx=Load())))])], returns=Constant(value=None)), FunctionDef(name='_quick_normal_mode', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Go into normal mode for one single action.\n        ')), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='temporary_navigation_mode', ctx=Store())], value=Constant(value=True))], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-o')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_insert_mode', ctx=Load()), op=BitOr(), right=Name(id='vi_replace_mode', ctx=Load())))])], returns=Constant(value=None)), FunctionDef(name='_start_macro', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Start recording macro.\n        ')), Assign(targets=[Name(id='c', ctx=Store())], value=Attribute(value=Subscript(value=Attribute(value=Name(id='event', ctx=Load()), attr='key_sequence', ctx=Load()), slice=Constant(value=1), ctx=Load()), attr='data', ctx=Load())), If(test=Compare(left=Name(id='c', ctx=Load()), ops=[In()], comparators=[Name(id='vi_register_names', ctx=Load())]), body=[Assign(targets=[Name(id='vi_state', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load())), Assign(targets=[Attribute(value=Name(id='vi_state', ctx=Load()), attr='recording_register', ctx=Store())], value=Name(id='c', ctx=Load())), Assign(targets=[Attribute(value=Name(id='vi_state', ctx=Load()), attr='current_recording', ctx=Store())], value=Constant(value=''))], orelse=[])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='q'), Attribute(value=Name(id='Keys', ctx=Load()), attr='Any', ctx=Load())], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='vi_recording_macro', ctx=Load()))))])], returns=Constant(value=None)), FunctionDef(name='_stop_macro', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Stop recording macro.\n        ')), Assign(targets=[Name(id='vi_state', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load())), If(test=Attribute(value=Name(id='vi_state', ctx=Load()), attr='recording_register', ctx=Load()), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='vi_state', ctx=Load()), attr='named_registers', ctx=Load()), slice=Attribute(value=Name(id='vi_state', ctx=Load()), attr='recording_register', ctx=Load()), ctx=Store())], value=Call(func=Name(id='ClipboardData', ctx=Load()), args=[Attribute(value=Name(id='vi_state', ctx=Load()), attr='current_recording', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='vi_state', ctx=Load()), attr='recording_register', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='vi_state', ctx=Load()), attr='current_recording', ctx=Store())], value=Constant(value=''))], orelse=[])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='q')], keywords=[keyword(arg='filter', value=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitAnd(), right=Name(id='vi_recording_macro', ctx=Load())))])], returns=Constant(value=None)), FunctionDef(name='_execute_macro', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='E', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Execute macro.\n\n        Notice that we pass `record_in_macro=False`. This ensures that the `@x`\n        keys don't appear in the recording itself. This function inserts the\n        body of the called macro back into the KeyProcessor, so these keys will\n        be added later on to the macro of their handlers have\n        `record_in_macro=True`.\n        ")), Assign(targets=[Name(id='c', ctx=Store())], value=Attribute(value=Subscript(value=Attribute(value=Name(id='event', ctx=Load()), attr='key_sequence', ctx=Load()), slice=Constant(value=1), ctx=Load()), attr='data', ctx=Load())), Try(body=[Assign(targets=[Name(id='macro', ctx=Store())], value=Subscript(value=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='named_registers', ctx=Load()), slice=Name(id='c', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Return()])], orelse=[], finalbody=[]), AnnAssign(target=Name(id='keys', ctx=Store()), annotation=Subscript(value=Name(id='list', ctx=Load()), slice=Name(id='KeyPress', ctx=Load()), ctx=Load()), value=List(elts=[], ctx=Load()), simple=1), Assign(targets=[Name(id='parser', ctx=Store())], value=Call(func=Name(id='Vt100Parser', ctx=Load()), args=[Attribute(value=Name(id='keys', ctx=Load()), attr='append', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='feed', ctx=Load()), args=[Attribute(value=Name(id='macro', ctx=Load()), attr='text', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='flush', ctx=Load()), args=[], keywords=[])), For(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='event', ctx=Load()), attr='arg', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='app', ctx=Load()), attr='key_processor', ctx=Load()), attr='feed_multiple', ctx=Load()), args=[Name(id='keys', ctx=Load())], keywords=[keyword(arg='first', value=Constant(value=True))]))], orelse=[])], decorator_list=[Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='@'), Attribute(value=Name(id='Keys', ctx=Load()), attr='Any', ctx=Load())], keywords=[keyword(arg='filter', value=Name(id='vi_navigation_mode', ctx=Load())), keyword(arg='record_in_macro', value=Constant(value=False))])], returns=Constant(value=None)), Return(value=Call(func=Name(id='ConditionalKeyBindings', ctx=Load()), args=[Name(id='key_bindings', ctx=Load()), Name(id='vi_mode', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='KeyBindingsBase', ctx=Load())), FunctionDef(name='load_vi_search_bindings', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='key_bindings', ctx=Store())], value=Call(func=Name(id='KeyBindings', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='handle', ctx=Store())], value=Attribute(value=Name(id='key_bindings', ctx=Load()), attr='add', ctx=Load())), ImportFrom(names=[alias(name='search')], level=1), FunctionDef(name='search_buffer_is_empty', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Returns True when the search buffer is empty.')), Return(value=Compare(left=Attribute(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='current_buffer', ctx=Load()), attr='text', ctx=Load()), ops=[Eq()], comparators=[Constant(value='')]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='/')], keywords=[keyword(arg='filter', value=BinOp(left=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitOr(), right=Name(id='vi_selection_mode', ctx=Load())), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='vi_search_direction_reversed', ctx=Load()))))]), args=[Attribute(value=Name(id='search', ctx=Load()), attr='start_forward_incremental_search', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='?')], keywords=[keyword(arg='filter', value=BinOp(left=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitOr(), right=Name(id='vi_selection_mode', ctx=Load())), op=BitAnd(), right=Name(id='vi_search_direction_reversed', ctx=Load())))]), args=[Attribute(value=Name(id='search', ctx=Load()), attr='start_forward_incremental_search', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-s')], keywords=[]), args=[Attribute(value=Name(id='search', ctx=Load()), attr='start_forward_incremental_search', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='?')], keywords=[keyword(arg='filter', value=BinOp(left=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitOr(), right=Name(id='vi_selection_mode', ctx=Load())), op=BitAnd(), right=UnaryOp(op=Invert(), operand=Name(id='vi_search_direction_reversed', ctx=Load()))))]), args=[Attribute(value=Name(id='search', ctx=Load()), attr='start_reverse_incremental_search', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='/')], keywords=[keyword(arg='filter', value=BinOp(left=BinOp(left=Name(id='vi_navigation_mode', ctx=Load()), op=BitOr(), right=Name(id='vi_selection_mode', ctx=Load())), op=BitAnd(), right=Name(id='vi_search_direction_reversed', ctx=Load())))]), args=[Attribute(value=Name(id='search', ctx=Load()), attr='start_reverse_incremental_search', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-r')], keywords=[]), args=[Attribute(value=Name(id='search', ctx=Load()), attr='start_reverse_incremental_search', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='enter')], keywords=[keyword(arg='filter', value=Name(id='is_searching', ctx=Load()))]), args=[Attribute(value=Name(id='search', ctx=Load()), attr='accept_search', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-r')], keywords=[keyword(arg='filter', value=Name(id='is_searching', ctx=Load()))]), args=[Attribute(value=Name(id='search', ctx=Load()), attr='reverse_incremental_search', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-s')], keywords=[keyword(arg='filter', value=Name(id='is_searching', ctx=Load()))]), args=[Attribute(value=Name(id='search', ctx=Load()), attr='forward_incremental_search', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-c')], keywords=[]), args=[Attribute(value=Name(id='search', ctx=Load()), attr='abort_search', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='c-g')], keywords=[]), args=[Attribute(value=Name(id='search', ctx=Load()), attr='abort_search', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='backspace')], keywords=[keyword(arg='filter', value=Name(id='search_buffer_is_empty', ctx=Load()))]), args=[Attribute(value=Name(id='search', ctx=Load()), attr='abort_search', ctx=Load())], keywords=[])), Expr(value=Call(func=Call(func=Name(id='handle', ctx=Load()), args=[Constant(value='escape')], keywords=[]), args=[Attribute(value=Name(id='search', ctx=Load()), attr='accept_search', ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='ConditionalKeyBindings', ctx=Load()), args=[Name(id='key_bindings', ctx=Load()), Name(id='vi_mode', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='KeyBindingsBase', ctx=Load()))], type_ignores=[])