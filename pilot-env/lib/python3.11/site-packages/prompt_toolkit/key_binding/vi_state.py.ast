Module(body=[ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), ImportFrom(module='enum', names=[alias(name='Enum')], level=0), ImportFrom(module='typing', names=[alias(name='TYPE_CHECKING'), alias(name='Callable')], level=0), ImportFrom(module='prompt_toolkit.clipboard', names=[alias(name='ClipboardData')], level=0), If(test=Name(id='TYPE_CHECKING', ctx=Load()), body=[ImportFrom(module='key_bindings.vi', names=[alias(name='TextObject')], level=1), ImportFrom(module='key_processor', names=[alias(name='KeyPressEvent')], level=1)], orelse=[]), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='InputMode'), Constant(value='CharacterFind'), Constant(value='ViState')], ctx=Load())), ClassDef(name='InputMode', bases=[Name(id='str', ctx=Load()), Name(id='Enum', ctx=Load())], keywords=[], body=[AnnAssign(target=Name(id='value', ctx=Store()), annotation=Name(id='str', ctx=Load()), simple=1), Assign(targets=[Name(id='INSERT', ctx=Store())], value=Constant(value='vi-insert')), Assign(targets=[Name(id='INSERT_MULTIPLE', ctx=Store())], value=Constant(value='vi-insert-multiple')), Assign(targets=[Name(id='NAVIGATION', ctx=Store())], value=Constant(value='vi-navigation')), Assign(targets=[Name(id='REPLACE', ctx=Store())], value=Constant(value='vi-replace')), Assign(targets=[Name(id='REPLACE_SINGLE', ctx=Store())], value=Constant(value='vi-replace-single'))], decorator_list=[]), ClassDef(name='CharacterFind', bases=[], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='character', annotation=Name(id='str', ctx=Load())), arg(arg='backwards', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='character', ctx=Store())], value=Name(id='character', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='backwards', ctx=Store())], value=Name(id='backwards', ctx=Load()))], decorator_list=[], returns=Constant(value=None))], decorator_list=[]), ClassDef(name='ViState', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    Mutable class to hold the state of the Vi navigation.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='last_character_find', ctx=Store()), annotation=BinOp(left=Name(id='CharacterFind', ctx=Load()), op=BitOr(), right=Constant(value=None)), value=Constant(value=None), simple=0), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='operator_func', ctx=Store()), annotation=BinOp(left=Constant(value=None), op=BitOr(), right=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='KeyPressEvent', ctx=Load()), Name(id='TextObject', ctx=Load())], ctx=Load()), Constant(value=None)], ctx=Load()), ctx=Load())), value=Constant(value=None), simple=0), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='operator_arg', ctx=Store()), annotation=BinOp(left=Name(id='int', ctx=Load()), op=BitOr(), right=Constant(value=None)), value=Constant(value=None), simple=0), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='named_registers', ctx=Store()), annotation=Subscript(value=Name(id='dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='ClipboardData', ctx=Load())], ctx=Load()), ctx=Load()), value=Dict(keys=[], values=[]), simple=0), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='__input_mode', ctx=Store())], value=Attribute(value=Name(id='InputMode', ctx=Load()), attr='INSERT', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='waiting_for_digraph', ctx=Store())], value=Constant(value=False)), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='digraph_symbol1', ctx=Store()), annotation=BinOp(left=Name(id='str', ctx=Load()), op=BitOr(), right=Constant(value=None)), value=Constant(value=None), simple=0), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='tilde_operator', ctx=Store())], value=Constant(value=False)), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='recording_register', ctx=Store()), annotation=BinOp(left=Name(id='str', ctx=Load()), op=BitOr(), right=Constant(value=None)), value=Constant(value=None), simple=0), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='current_recording', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value=''), simple=0), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='temporary_navigation_mode', ctx=Store())], value=Constant(value=False))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='input_mode', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get `InputMode`.')), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='__input_mode', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='InputMode', ctx=Load())), FunctionDef(name='input_mode', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value', annotation=Name(id='InputMode', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Set `InputMode`.')), If(test=Compare(left=Name(id='value', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='InputMode', ctx=Load()), attr='NAVIGATION', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='waiting_for_digraph', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='operator_func', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='operator_arg', ctx=Store())], value=Constant(value=None))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='__input_mode', ctx=Store())], value=Name(id='value', ctx=Load()))], decorator_list=[Attribute(value=Name(id='input_mode', ctx=Load()), attr='setter', ctx=Load())], returns=Constant(value=None)), FunctionDef(name='reset', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Reset state, go back to the given mode. INSERT by default.\n        ')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='input_mode', ctx=Store())], value=Attribute(value=Name(id='InputMode', ctx=Load()), attr='INSERT', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='waiting_for_digraph', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='operator_func', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='operator_arg', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='recording_register', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='current_recording', ctx=Store())], value=Constant(value=''))], decorator_list=[], returns=Constant(value=None))], decorator_list=[])], type_ignores=[])