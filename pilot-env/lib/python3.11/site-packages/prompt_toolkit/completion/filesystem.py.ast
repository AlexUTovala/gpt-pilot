Module(body=[ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), Import(names=[alias(name='os')]), ImportFrom(module='typing', names=[alias(name='Callable'), alias(name='Iterable')], level=0), ImportFrom(module='prompt_toolkit.completion', names=[alias(name='CompleteEvent'), alias(name='Completer'), alias(name='Completion')], level=0), ImportFrom(module='prompt_toolkit.document', names=[alias(name='Document')], level=0), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='PathCompleter'), Constant(value='ExecutableCompleter')], ctx=Load())), ClassDef(name='PathCompleter', bases=[Name(id='Completer', ctx=Load())], keywords=[], body=[Expr(value=Constant(value="\n    Complete for Path variables.\n\n    :param get_paths: Callable which returns a list of directories to look into\n                      when the user enters a relative path.\n    :param file_filter: Callable which takes a filename and returns whether\n                        this file should show up in the completion. ``None``\n                        when no filtering has to be done.\n    :param min_input_len: Don't do autocompletion when the input string is shorter.\n    ")), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='only_directories', annotation=Name(id='bool', ctx=Load())), arg(arg='get_paths', annotation=BinOp(left=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[], ctx=Load()), Subscript(value=Name(id='list', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='file_filter', annotation=BinOp(left=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='str', ctx=Load())], ctx=Load()), Name(id='bool', ctx=Load())], ctx=Load()), ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='min_input_len', annotation=Name(id='int', ctx=Load())), arg(arg='expanduser', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=None), Constant(value=None), Constant(value=0), Constant(value=False)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='only_directories', ctx=Store())], value=Name(id='only_directories', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='get_paths', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='get_paths', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=List(elts=[Constant(value='.')], ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='file_filter', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='file_filter', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[arg(arg='_')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Constant(value=True))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='min_input_len', ctx=Store())], value=Name(id='min_input_len', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='expanduser', ctx=Store())], value=Name(id='expanduser', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='get_completions', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='document', annotation=Name(id='Document', ctx=Load())), arg(arg='complete_event', annotation=Name(id='CompleteEvent', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='text', ctx=Store())], value=Attribute(value=Name(id='document', ctx=Load()), attr='text_before_cursor', ctx=Load())), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[]), ops=[Lt()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='min_input_len', ctx=Load())]), body=[Return()], orelse=[]), Try(body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='expanduser', ctx=Load()), body=[Assign(targets=[Name(id='text', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='expanduser', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='dirname', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='dirname', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[])), If(test=Name(id='dirname', ctx=Load()), body=[Assign(targets=[Name(id='directories', ctx=Store())], value=ListComp(elt=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='dirname', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='p', ctx=Load()), Name(id='text', ctx=Load())], keywords=[])], keywords=[]), generators=[comprehension(target=Name(id='p', ctx=Store()), iter=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_paths', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], orelse=[Assign(targets=[Name(id='directories', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_paths', ctx=Load()), args=[], keywords=[]))]), Assign(targets=[Name(id='prefix', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[])), Assign(targets=[Name(id='filenames', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='directory', ctx=Store()), iter=Name(id='directories', ctx=Load()), body=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[Name(id='directory', ctx=Load())], keywords=[]), body=[For(target=Name(id='filename', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='directory', ctx=Load())], keywords=[]), body=[If(test=Call(func=Attribute(value=Name(id='filename', ctx=Load()), attr='startswith', ctx=Load()), args=[Name(id='prefix', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='filenames', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='directory', ctx=Load()), Name(id='filename', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], orelse=[]), Assign(targets=[Name(id='filenames', ctx=Store())], value=Call(func=Name(id='sorted', ctx=Load()), args=[Name(id='filenames', ctx=Load())], keywords=[keyword(arg='key', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='k')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Subscript(value=Name(id='k', ctx=Load()), slice=Constant(value=1), ctx=Load())))])), For(target=Tuple(elts=[Name(id='directory', ctx=Store()), Name(id='filename', ctx=Store())], ctx=Store()), iter=Name(id='filenames', ctx=Load()), body=[Assign(targets=[Name(id='completion', ctx=Store())], value=Subscript(value=Name(id='filename', ctx=Load()), slice=Slice(lower=Call(func=Name(id='len', ctx=Load()), args=[Name(id='prefix', ctx=Load())], keywords=[])), ctx=Load())), Assign(targets=[Name(id='full_name', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='directory', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[Name(id='full_name', ctx=Load())], keywords=[]), body=[AugAssign(target=Name(id='filename', ctx=Store()), op=Add(), value=Constant(value='/'))], orelse=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='only_directories', ctx=Load()), body=[Continue()], orelse=[])]), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='file_filter', ctx=Load()), args=[Name(id='full_name', ctx=Load())], keywords=[])), body=[Continue()], orelse=[]), Expr(value=Yield(value=Call(func=Name(id='Completion', ctx=Load()), args=[], keywords=[keyword(arg='text', value=Name(id='completion', ctx=Load())), keyword(arg='start_position', value=Constant(value=0)), keyword(arg='display', value=Name(id='filename', ctx=Load()))])))], orelse=[])], handlers=[ExceptHandler(type=Name(id='OSError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], decorator_list=[], returns=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='Completion', ctx=Load()), ctx=Load()))], decorator_list=[]), ClassDef(name='ExecutableCompleter', bases=[Name(id='PathCompleter', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    Complete only executable files in the current path.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(arg='only_directories', value=Constant(value=False)), keyword(arg='min_input_len', value=Constant(value=1)), keyword(arg='get_paths', value=Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='PATH'), Constant(value='')], keywords=[]), attr='split', ctx=Load()), args=[Attribute(value=Name(id='os', ctx=Load()), attr='pathsep', ctx=Load())], keywords=[]))), keyword(arg='file_filter', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='access', ctx=Load()), args=[Name(id='name', ctx=Load()), Attribute(value=Name(id='os', ctx=Load()), attr='X_OK', ctx=Load())], keywords=[]))), keyword(arg='expanduser', value=Constant(value=True))]))], decorator_list=[], returns=Constant(value=None))], decorator_list=[])], type_ignores=[])