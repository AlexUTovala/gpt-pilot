Module(body=[Expr(value=Constant(value='\nParser for the Telnet protocol. (Not a complete implementation of the telnet\nspecification, but sufficient for a command line interface.)\n\nInspired by `Twisted.conch.telnet`.\n')), ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), Import(names=[alias(name='struct')]), ImportFrom(module='typing', names=[alias(name='Callable'), alias(name='Generator')], level=0), ImportFrom(module='log', names=[alias(name='logger')], level=1), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='TelnetProtocolParser')], ctx=Load())), FunctionDef(name='int2byte', args=arguments(posonlyargs=[], args=[arg(arg='number', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='bytes', ctx=Load()), args=[Tuple(elts=[Name(id='number', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='bytes', ctx=Load())), Assign(targets=[Name(id='NOP', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=0)], keywords=[])), Assign(targets=[Name(id='SGA', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=3)], keywords=[])), Assign(targets=[Name(id='IAC', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=255)], keywords=[])), Assign(targets=[Name(id='DO', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=253)], keywords=[])), Assign(targets=[Name(id='DONT', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=254)], keywords=[])), Assign(targets=[Name(id='LINEMODE', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=34)], keywords=[])), Assign(targets=[Name(id='SB', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=250)], keywords=[])), Assign(targets=[Name(id='WILL', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=251)], keywords=[])), Assign(targets=[Name(id='WONT', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=252)], keywords=[])), Assign(targets=[Name(id='MODE', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=1)], keywords=[])), Assign(targets=[Name(id='SE', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=240)], keywords=[])), Assign(targets=[Name(id='ECHO', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=1)], keywords=[])), Assign(targets=[Name(id='NAWS', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=31)], keywords=[])), Assign(targets=[Name(id='LINEMODE', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=34)], keywords=[])), Assign(targets=[Name(id='SUPPRESS_GO_AHEAD', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=3)], keywords=[])), Assign(targets=[Name(id='TTYPE', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=24)], keywords=[])), Assign(targets=[Name(id='SEND', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=1)], keywords=[])), Assign(targets=[Name(id='IS', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=0)], keywords=[])), Assign(targets=[Name(id='DM', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=242)], keywords=[])), Assign(targets=[Name(id='BRK', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=243)], keywords=[])), Assign(targets=[Name(id='IP', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=244)], keywords=[])), Assign(targets=[Name(id='AO', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=245)], keywords=[])), Assign(targets=[Name(id='AYT', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=246)], keywords=[])), Assign(targets=[Name(id='EC', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=247)], keywords=[])), Assign(targets=[Name(id='EL', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=248)], keywords=[])), Assign(targets=[Name(id='GA', ctx=Store())], value=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=249)], keywords=[])), ClassDef(name='TelnetProtocolParser', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    Parser for the Telnet protocol.\n    Usage::\n\n        def data_received(data):\n            print(data)\n\n        def size_received(rows, columns):\n            print(rows, columns)\n\n        p = TelnetProtocolParser(data_received, size_received)\n        p.feed(binary_data)\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data_received_callback', annotation=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='bytes', ctx=Load())], ctx=Load()), Constant(value=None)], ctx=Load()), ctx=Load())), arg(arg='size_received_callback', annotation=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='int', ctx=Load()), Name(id='int', ctx=Load())], ctx=Load()), Constant(value=None)], ctx=Load()), ctx=Load())), arg(arg='ttype_received_callback', annotation=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='str', ctx=Load())], ctx=Load()), Constant(value=None)], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='data_received_callback', ctx=Store())], value=Name(id='data_received_callback', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='size_received_callback', ctx=Store())], value=Name(id='size_received_callback', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='ttype_received_callback', ctx=Store())], value=Name(id='ttype_received_callback', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_parser', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_parse_coroutine', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parser', ctx=Load()), attr='send', ctx=Load()), args=[Constant(value=None)], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='received_data', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Name(id='bytes', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='data_received_callback', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='do_received', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Name(id='bytes', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Received telnet DO command.')), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='DO %r'), Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='dont_received', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Name(id='bytes', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Received telnet DONT command.')), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='DONT %r'), Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='will_received', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Name(id='bytes', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Received telnet WILL command.')), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='WILL %r'), Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='wont_received', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Name(id='bytes', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Received telnet WONT command.')), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='WONT %r'), Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='command_received', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='command', annotation=Name(id='bytes', ctx=Load())), arg(arg='data', annotation=Name(id='bytes', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='command', ctx=Load()), ops=[Eq()], comparators=[Name(id='DO', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='do_received', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='command', ctx=Load()), ops=[Eq()], comparators=[Name(id='DONT', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='dont_received', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='command', ctx=Load()), ops=[Eq()], comparators=[Name(id='WILL', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='will_received', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='command', ctx=Load()), ops=[Eq()], comparators=[Name(id='WONT', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='wont_received', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='command received %r %r'), Name(id='command', ctx=Load()), Name(id='data', ctx=Load())], keywords=[]))])])])])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='naws', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Name(id='bytes', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Received NAWS. (Window dimensions.)\n        ')), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=4)]), body=[Assign(targets=[Tuple(elts=[Name(id='columns', ctx=Store()), Name(id='rows', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='struct', ctx=Load()), attr='unpack', ctx=Load()), args=[Constant(value='!HH'), Name(id='data', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='size_received_callback', ctx=Load()), args=[Name(id='rows', ctx=Load()), Name(id='columns', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[Constant(value='Wrong number of NAWS bytes')], keywords=[]))])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='ttype', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Name(id='bytes', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Received terminal type.\n        ')), Assign(targets=[Tuple(elts=[Name(id='subcmd', ctx=Store()), Name(id='data', ctx=Store())], ctx=Store())], value=Tuple(elts=[Subscript(value=Name(id='data', ctx=Load()), slice=Slice(lower=Constant(value=0), upper=Constant(value=1)), ctx=Load()), Subscript(value=Name(id='data', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load())], ctx=Load())), If(test=Compare(left=Name(id='subcmd', ctx=Load()), ops=[Eq()], comparators=[Name(id='IS', ctx=Load())]), body=[Assign(targets=[Name(id='ttype', ctx=Store())], value=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='decode', ctx=Load()), args=[Constant(value='ascii')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='ttype_received_callback', ctx=Load()), args=[Name(id='ttype', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[Constant(value='Received a non-IS terminal type Subnegotiation')], keywords=[]))])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='negotiate', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Name(id='bytes', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Got negotiate data.\n        ')), Assign(targets=[Tuple(elts=[Name(id='command', ctx=Store()), Name(id='payload', ctx=Store())], ctx=Store())], value=Tuple(elts=[Subscript(value=Name(id='data', ctx=Load()), slice=Slice(lower=Constant(value=0), upper=Constant(value=1)), ctx=Load()), Subscript(value=Name(id='data', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load())], ctx=Load())), If(test=Compare(left=Name(id='command', ctx=Load()), ops=[Eq()], comparators=[Name(id='NAWS', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='naws', ctx=Load()), args=[Name(id='payload', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='command', ctx=Load()), ops=[Eq()], comparators=[Name(id='TTYPE', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='ttype', ctx=Load()), args=[Name(id='payload', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Negotiate (%r got bytes)'), Call(func=Name(id='len', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[])], keywords=[]))])])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_parse_coroutine', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Parser state machine.\n        Every 'yield' expression returns the next byte.\n        ")), While(test=Constant(value=True), body=[Assign(targets=[Name(id='d', ctx=Store())], value=Yield()), If(test=Compare(left=Name(id='d', ctx=Load()), ops=[Eq()], comparators=[Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=0)], keywords=[])]), body=[Pass()], orelse=[If(test=Compare(left=Name(id='d', ctx=Load()), ops=[Eq()], comparators=[Name(id='IAC', ctx=Load())]), body=[Assign(targets=[Name(id='d2', ctx=Store())], value=Yield()), If(test=Compare(left=Name(id='d2', ctx=Load()), ops=[Eq()], comparators=[Name(id='IAC', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='received_data', ctx=Load()), args=[Name(id='d2', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='d2', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Name(id='NOP', ctx=Load()), Name(id='DM', ctx=Load()), Name(id='BRK', ctx=Load()), Name(id='IP', ctx=Load()), Name(id='AO', ctx=Load()), Name(id='AYT', ctx=Load()), Name(id='EC', ctx=Load()), Name(id='EL', ctx=Load()), Name(id='GA', ctx=Load())], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='command_received', ctx=Load()), args=[Name(id='d2', ctx=Load()), Constant(value=b'')], keywords=[]))], orelse=[If(test=Compare(left=Name(id='d2', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Name(id='DO', ctx=Load()), Name(id='DONT', ctx=Load()), Name(id='WILL', ctx=Load()), Name(id='WONT', ctx=Load())], ctx=Load())]), body=[Assign(targets=[Name(id='d3', ctx=Store())], value=Yield()), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='command_received', ctx=Load()), args=[Name(id='d2', ctx=Load()), Name(id='d3', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='d2', ctx=Load()), ops=[Eq()], comparators=[Name(id='SB', ctx=Load())]), body=[Assign(targets=[Name(id='data', ctx=Store())], value=List(elts=[], ctx=Load())), While(test=Constant(value=True), body=[Assign(targets=[Name(id='d3', ctx=Store())], value=Yield()), If(test=Compare(left=Name(id='d3', ctx=Load()), ops=[Eq()], comparators=[Name(id='IAC', ctx=Load())]), body=[Assign(targets=[Name(id='d4', ctx=Store())], value=Yield()), If(test=Compare(left=Name(id='d4', ctx=Load()), ops=[Eq()], comparators=[Name(id='SE', ctx=Load())]), body=[Break()], orelse=[Expr(value=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='d4', ctx=Load())], keywords=[]))])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='d3', ctx=Load())], keywords=[]))])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='negotiate', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])])])])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='received_data', ctx=Load()), args=[Name(id='d', ctx=Load())], keywords=[]))])])], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Generator', ctx=Load()), slice=Tuple(elts=[Constant(value=None), Name(id='bytes', ctx=Load()), Constant(value=None)], ctx=Load()), ctx=Load())), FunctionDef(name='feed', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Name(id='bytes', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Feed data to the parser.\n        ')), For(target=Name(id='b', ctx=Store()), iter=Name(id='data', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parser', ctx=Load()), attr='send', ctx=Load()), args=[Call(func=Name(id='int2byte', ctx=Load()), args=[Name(id='b', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[], returns=Constant(value=None))], decorator_list=[])], type_ignores=[])