Module(body=[Expr(value=Constant(value='\nTelnet server.\n')), ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), Import(names=[alias(name='asyncio')]), Import(names=[alias(name='contextvars')]), Import(names=[alias(name='socket')]), ImportFrom(module='asyncio', names=[alias(name='get_running_loop')], level=0), ImportFrom(module='typing', names=[alias(name='Awaitable'), alias(name='Callable'), alias(name='TextIO'), alias(name='cast')], level=0), ImportFrom(module='prompt_toolkit.application.current', names=[alias(name='create_app_session'), alias(name='get_app')], level=0), ImportFrom(module='prompt_toolkit.application.run_in_terminal', names=[alias(name='run_in_terminal')], level=0), ImportFrom(module='prompt_toolkit.data_structures', names=[alias(name='Size')], level=0), ImportFrom(module='prompt_toolkit.formatted_text', names=[alias(name='AnyFormattedText'), alias(name='to_formatted_text')], level=0), ImportFrom(module='prompt_toolkit.input', names=[alias(name='PipeInput'), alias(name='create_pipe_input')], level=0), ImportFrom(module='prompt_toolkit.output.vt100', names=[alias(name='Vt100_Output')], level=0), ImportFrom(module='prompt_toolkit.renderer', names=[alias(name='print_formatted_text', asname='print_formatted_text')], level=0), ImportFrom(module='prompt_toolkit.styles', names=[alias(name='BaseStyle'), alias(name='DummyStyle')], level=0), ImportFrom(module='log', names=[alias(name='logger')], level=1), ImportFrom(module='protocol', names=[alias(name='DO'), alias(name='ECHO'), alias(name='IAC'), alias(name='LINEMODE'), alias(name='MODE'), alias(name='NAWS'), alias(name='SB'), alias(name='SE'), alias(name='SEND'), alias(name='SUPPRESS_GO_AHEAD'), alias(name='TTYPE'), alias(name='WILL'), alias(name='TelnetProtocolParser')], level=1), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='TelnetServer')], ctx=Load())), FunctionDef(name='int2byte', args=arguments(posonlyargs=[], args=[arg(arg='number', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='bytes', ctx=Load()), args=[Tuple(elts=[Name(id='number', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='bytes', ctx=Load())), FunctionDef(name='_initialize_telnet', args=arguments(posonlyargs=[], args=[arg(arg='connection', annotation=Attribute(value=Name(id='socket', ctx=Load()), attr='socket', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Initializing telnet connection')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='connection', ctx=Load()), attr='send', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='IAC', ctx=Load()), op=Add(), right=Name(id='DO', ctx=Load())), op=Add(), right=Name(id='LINEMODE', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='connection', ctx=Load()), attr='send', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='IAC', ctx=Load()), op=Add(), right=Name(id='WILL', ctx=Load())), op=Add(), right=Name(id='SUPPRESS_GO_AHEAD', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='connection', ctx=Load()), attr='send', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=BinOp(left=BinOp(left=BinOp(left=Name(id='IAC', ctx=Load()), op=Add(), right=Name(id='SB', ctx=Load())), op=Add(), right=Name(id='LINEMODE', ctx=Load())), op=Add(), right=Name(id='MODE', ctx=Load())), op=Add(), right=Call(func=Name(id='int2byte', ctx=Load()), args=[Constant(value=0)], keywords=[])), op=Add(), right=Name(id='IAC', ctx=Load())), op=Add(), right=Name(id='SE', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='connection', ctx=Load()), attr='send', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='IAC', ctx=Load()), op=Add(), right=Name(id='WILL', ctx=Load())), op=Add(), right=Name(id='ECHO', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='connection', ctx=Load()), attr='send', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='IAC', ctx=Load()), op=Add(), right=Name(id='DO', ctx=Load())), op=Add(), right=Name(id='NAWS', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='connection', ctx=Load()), attr='send', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='IAC', ctx=Load()), op=Add(), right=Name(id='DO', ctx=Load())), op=Add(), right=Name(id='TTYPE', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='connection', ctx=Load()), attr='send', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=BinOp(left=BinOp(left=Name(id='IAC', ctx=Load()), op=Add(), right=Name(id='SB', ctx=Load())), op=Add(), right=Name(id='TTYPE', ctx=Load())), op=Add(), right=Name(id='SEND', ctx=Load())), op=Add(), right=Name(id='IAC', ctx=Load())), op=Add(), right=Name(id='SE', ctx=Load()))], keywords=[]))], decorator_list=[], returns=Constant(value=None)), ClassDef(name='_ConnectionStdout', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    Wrapper around socket which provides `write` and `flush` methods for the\n    Vt100_Output output.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='connection', annotation=Attribute(value=Name(id='socket', ctx=Load()), attr='socket', ctx=Load())), arg(arg='encoding', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_encoding', ctx=Store())], value=Name(id='encoding', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_connection', ctx=Store())], value=Name(id='connection', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_errors', ctx=Store())], value=Constant(value='strict')), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Store()), annotation=Subscript(value=Name(id='list', ctx=Load()), slice=Name(id='bytes', ctx=Load()), ctx=Load()), value=List(elts=[], ctx=Load()), simple=0), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_closed', ctx=Store())], value=Constant(value=False))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='write', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='\n'), Constant(value='\r\n')], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='encode', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_encoding', ctx=Load())], keywords=[keyword(arg='errors', value=Attribute(value=Name(id='self', ctx=Load()), attr='_errors', ctx=Load()))])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='flush', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='isatty', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=True))], decorator_list=[], returns=Name(id='bool', ctx=Load())), FunctionDef(name='flush', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_closed', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_connection', ctx=Load()), attr='send', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], handlers=[ExceptHandler(type=Name(id='OSError', ctx=Load()), name='e', body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[BinOp(left=Constant(value="Couldn't send data over socket: %s"), op=Mod(), right=Name(id='e', ctx=Load()))], keywords=[]))])], orelse=[], finalbody=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Store())], value=List(elts=[], ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='close', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_closed', ctx=Store())], value=Constant(value=True))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='encoding', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_encoding', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='errors', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_errors', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())], returns=Name(id='str', ctx=Load()))], decorator_list=[]), ClassDef(name='TelnetConnection', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    Class that represents one Telnet connection.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn', annotation=Attribute(value=Name(id='socket', ctx=Load()), attr='socket', ctx=Load())), arg(arg='addr', annotation=Subscript(value=Name(id='tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='int', ctx=Load())], ctx=Load()), ctx=Load())), arg(arg='interact', annotation=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='TelnetConnection', ctx=Load())], ctx=Load()), Subscript(value=Name(id='Awaitable', ctx=Load()), slice=Constant(value=None), ctx=Load())], ctx=Load()), ctx=Load())), arg(arg='server', annotation=Name(id='TelnetServer', ctx=Load())), arg(arg='encoding', annotation=Name(id='str', ctx=Load())), arg(arg='style', annotation=BinOp(left=Name(id='BaseStyle', ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='vt100_input', annotation=Name(id='PipeInput', ctx=Load())), arg(arg='enable_cpr', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='conn', ctx=Store())], value=Name(id='conn', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='addr', ctx=Store())], value=Name(id='addr', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='interact', ctx=Store())], value=Name(id='interact', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='server', ctx=Store())], value=Name(id='server', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='encoding', ctx=Store())], value=Name(id='encoding', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Store())], value=Name(id='style', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_closed', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_ready', ctx=Store())], value=Call(func=Attribute(value=Name(id='asyncio', ctx=Load()), attr='Event', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='vt100_input', ctx=Store())], value=Name(id='vt100_input', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='enable_cpr', ctx=Store())], value=Name(id='enable_cpr', ctx=Load())), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='vt100_output', ctx=Store()), annotation=BinOp(left=Name(id='Vt100_Output', ctx=Load()), op=BitOr(), right=Constant(value=None)), value=Constant(value=None), simple=0), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='size', ctx=Store())], value=Call(func=Name(id='Size', ctx=Load()), args=[], keywords=[keyword(arg='rows', value=Constant(value=40)), keyword(arg='columns', value=Constant(value=79))])), Expr(value=Call(func=Name(id='_initialize_telnet', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[])), FunctionDef(name='get_size', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='size', ctx=Load()))], decorator_list=[], returns=Name(id='Size', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='stdout', ctx=Store())], value=Call(func=Name(id='cast', ctx=Load()), args=[Name(id='TextIO', ctx=Load()), Call(func=Name(id='_ConnectionStdout', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[keyword(arg='encoding', value=Name(id='encoding', ctx=Load()))])], keywords=[])), FunctionDef(name='data_received', args=arguments(posonlyargs=[], args=[arg(arg='data', annotation=Name(id='bytes', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="TelnetProtocolParser 'data_received' callback")), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vt100_input', ctx=Load()), attr='send_bytes', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='size_received', args=arguments(posonlyargs=[], args=[arg(arg='rows', annotation=Name(id='int', ctx=Load())), arg(arg='columns', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="TelnetProtocolParser 'size_received' callback")), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='size', ctx=Store())], value=Call(func=Name(id='Size', ctx=Load()), args=[], keywords=[keyword(arg='rows', value=Name(id='rows', ctx=Load())), keyword(arg='columns', value=Name(id='columns', ctx=Load()))])), If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='vt100_output', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Attribute(value=Name(id='self', ctx=Load()), attr='context', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='context', ctx=Load()), attr='run', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='_on_resize', ctx=Load()), args=[], keywords=[]))], keywords=[]))], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='ttype_received', args=arguments(posonlyargs=[], args=[arg(arg='ttype', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="TelnetProtocolParser 'ttype_received' callback")), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='vt100_output', ctx=Store())], value=Call(func=Name(id='Vt100_Output', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stdout', ctx=Load()), Name(id='get_size', ctx=Load())], keywords=[keyword(arg='term', value=Name(id='ttype', ctx=Load())), keyword(arg='enable_cpr', value=Name(id='enable_cpr', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_ready', ctx=Load()), attr='set', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='parser', ctx=Store())], value=Call(func=Name(id='TelnetProtocolParser', ctx=Load()), args=[Name(id='data_received', ctx=Load()), Name(id='size_received', ctx=Load()), Name(id='ttype_received', ctx=Load())], keywords=[])), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='context', ctx=Store()), annotation=BinOp(left=Attribute(value=Name(id='contextvars', ctx=Load()), attr='Context', ctx=Load()), op=BitOr(), right=Constant(value=None)), value=Constant(value=None), simple=0)], decorator_list=[], returns=Constant(value=None)), AsyncFunctionDef(name='run_application', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Run application.\n        ')), FunctionDef(name='handle_incoming_data', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='conn', ctx=Load()), attr='recv', ctx=Load()), args=[Constant(value=1024)], keywords=[])), If(test=Name(id='data', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='feed', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Connection closed by client. {!r} {!r}'), attr='format', ctx=Load()), args=[Starred(value=Attribute(value=Name(id='self', ctx=Load()), attr='addr', ctx=Load()), ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))])], decorator_list=[], returns=Constant(value=None)), Assign(targets=[Name(id='loop', ctx=Store())], value=Call(func=Name(id='get_running_loop', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='loop', ctx=Load()), attr='add_reader', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='conn', ctx=Load()), Name(id='handle_incoming_data', ctx=Load())], keywords=[])), Try(body=[Expr(value=Await(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_ready', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[]))), With(items=[withitem(context_expr=Call(func=Name(id='create_app_session', ctx=Load()), args=[], keywords=[keyword(arg='input', value=Attribute(value=Name(id='self', ctx=Load()), attr='vt100_input', ctx=Load())), keyword(arg='output', value=Attribute(value=Name(id='self', ctx=Load()), attr='vt100_output', ctx=Load()))]))], body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='context', ctx=Store())], value=Call(func=Attribute(value=Name(id='contextvars', ctx=Load()), attr='copy_context', ctx=Load()), args=[], keywords=[])), Expr(value=Await(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='interact', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])))])], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='feed', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Name(id='bytes', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Handler for incoming data. (Called by TelnetServer.)\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='parser', ctx=Load()), attr='feed', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='close', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Closed by client.\n        ')), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_closed', ctx=Load())), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_closed', ctx=Store())], value=Constant(value=True)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vt100_input', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='get_running_loop', ctx=Load()), args=[], keywords=[]), attr='remove_reader', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='conn', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='conn', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stdout', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='send', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='formatted_text', annotation=Name(id='AnyFormattedText', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Send text to the client.\n        ')), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='vt100_output', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return()], orelse=[]), Assign(targets=[Name(id='formatted_text', ctx=Store())], value=Call(func=Name(id='to_formatted_text', ctx=Load()), args=[Name(id='formatted_text', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print_formatted_text', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='vt100_output', ctx=Load()), Name(id='formatted_text', ctx=Load()), BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Load()), Call(func=Name(id='DummyStyle', ctx=Load()), args=[], keywords=[])])], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='send_above_prompt', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='formatted_text', annotation=Name(id='AnyFormattedText', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Send text to the client.\n        This is asynchronous, returns a `Future`.\n        ')), Assign(targets=[Name(id='formatted_text', ctx=Store())], value=Call(func=Name(id='to_formatted_text', ctx=Load()), args=[Name(id='formatted_text', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_run_in_terminal', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='send', ctx=Load()), args=[Name(id='formatted_text', ctx=Load())], keywords=[]))], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_run_in_terminal', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='func', annotation=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[], ctx=Load()), Constant(value=None)], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='context', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='context', ctx=Load()), attr='run', ctx=Load()), args=[Name(id='run_in_terminal', ctx=Load()), Name(id='func', ctx=Load())], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='Called _run_in_terminal outside `run_application`.')], keywords=[]))])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='erase_screen', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Erase the screen and move the cursor to the top.\n        ')), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='vt100_output', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return()], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vt100_output', ctx=Load()), attr='erase_screen', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vt100_output', ctx=Load()), attr='cursor_goto', ctx=Load()), args=[Constant(value=0), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='vt100_output', ctx=Load()), attr='flush', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None))], decorator_list=[]), AsyncFunctionDef(name='_dummy_interact', args=arguments(posonlyargs=[], args=[arg(arg='connection', annotation=Name(id='TelnetConnection', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), ClassDef(name='TelnetServer', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    Telnet server implementation.\n\n    Example::\n\n        async def interact(connection):\n            connection.send("Welcome")\n            session = PromptSession()\n            result = await session.prompt_async(message="Say something: ")\n            connection.send(f"You said: {result}\n")\n\n        async def main():\n            server = TelnetServer(interact=interact, port=2323)\n            await server.run()\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='host', annotation=Name(id='str', ctx=Load())), arg(arg='port', annotation=Name(id='int', ctx=Load())), arg(arg='interact', annotation=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='TelnetConnection', ctx=Load())], ctx=Load()), Subscript(value=Name(id='Awaitable', ctx=Load()), slice=Constant(value=None), ctx=Load())], ctx=Load()), ctx=Load())), arg(arg='encoding', annotation=Name(id='str', ctx=Load())), arg(arg='style', annotation=BinOp(left=Name(id='BaseStyle', ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='enable_cpr', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='127.0.0.1'), Constant(value=23), Name(id='_dummy_interact', ctx=Load()), Constant(value='utf-8'), Constant(value=None), Constant(value=True)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='host', ctx=Store())], value=Name(id='host', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='port', ctx=Store())], value=Name(id='port', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='interact', ctx=Store())], value=Name(id='interact', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='encoding', ctx=Store())], value=Name(id='encoding', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Store())], value=Name(id='style', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='enable_cpr', ctx=Store())], value=Name(id='enable_cpr', ctx=Load())), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_run_task', ctx=Store()), annotation=BinOp(left=Subscript(value=Attribute(value=Name(id='asyncio', ctx=Load()), attr='Task', ctx=Load()), slice=Constant(value=None), ctx=Load()), op=BitOr(), right=Constant(value=None)), value=Constant(value=None), simple=0), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_application_tasks', ctx=Store()), annotation=Subscript(value=Name(id='list', ctx=Load()), slice=Subscript(value=Attribute(value=Name(id='asyncio', ctx=Load()), attr='Task', ctx=Load()), slice=Constant(value=None), ctx=Load()), ctx=Load()), value=List(elts=[], ctx=Load()), simple=0), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='connections', ctx=Store()), annotation=Subscript(value=Name(id='set', ctx=Load()), slice=Name(id='TelnetConnection', ctx=Load()), ctx=Load()), value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[]), simple=0)], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_create_socket', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='host', annotation=Name(id='str', ctx=Load())), arg(arg='port', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='s', ctx=Store())], value=Call(func=Attribute(value=Name(id='socket', ctx=Load()), attr='socket', ctx=Load()), args=[Attribute(value=Name(id='socket', ctx=Load()), attr='AF_INET', ctx=Load()), Attribute(value=Name(id='socket', ctx=Load()), attr='SOCK_STREAM', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='setsockopt', ctx=Load()), args=[Attribute(value=Name(id='socket', ctx=Load()), attr='SOL_SOCKET', ctx=Load()), Attribute(value=Name(id='socket', ctx=Load()), attr='SO_REUSEADDR', ctx=Load()), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='bind', ctx=Load()), args=[Tuple(elts=[Name(id='host', ctx=Load()), Name(id='port', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='listen', ctx=Load()), args=[Constant(value=4)], keywords=[])), Return(value=Name(id='s', ctx=Load()))], decorator_list=[Name(id='classmethod', ctx=Load())], returns=Attribute(value=Name(id='socket', ctx=Load()), attr='socket', ctx=Load())), AsyncFunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ready_cb', annotation=BinOp(left=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[], ctx=Load()), Constant(value=None)], ctx=Load()), ctx=Load()), op=BitOr(), right=Constant(value=None)))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value="\n        Run the telnet server, until this gets cancelled.\n\n        :param ready_cb: Callback that will be called at the point that we're\n            actually listening.\n        ")), Assign(targets=[Name(id='socket', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_socket', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='host', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='port', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Listening for telnet connections on %s port %r'), Attribute(value=Name(id='self', ctx=Load()), attr='host', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='port', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='get_running_loop', ctx=Load()), args=[], keywords=[]), attr='add_reader', ctx=Load()), args=[Name(id='socket', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_accept', ctx=Load()), args=[Name(id='socket', ctx=Load())], keywords=[]))], keywords=[])), If(test=Name(id='ready_cb', ctx=Load()), body=[Expr(value=Call(func=Name(id='ready_cb', ctx=Load()), args=[], keywords=[]))], orelse=[]), Try(body=[Expr(value=Await(value=Call(func=Attribute(value=Name(id='asyncio', ctx=Load()), attr='Future', ctx=Load()), args=[], keywords=[])))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='get_running_loop', ctx=Load()), args=[], keywords=[]), attr='remove_reader', ctx=Load()), args=[Name(id='socket', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='socket', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), For(target=Name(id='t', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_application_tasks', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='t', ctx=Load()), attr='cancel', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_application_tasks', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=0)]), body=[Expr(value=Await(value=Call(func=Attribute(value=Name(id='asyncio', ctx=Load()), attr='wait', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_application_tasks', ctx=Load())], keywords=[keyword(arg='timeout', value=Constant(value=None)), keyword(arg='return_when', value=Attribute(value=Name(id='asyncio', ctx=Load()), attr='ALL_COMPLETED', ctx=Load()))])))], orelse=[])])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='start', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Deprecated: Use `.run()` instead.\n\n        Start the telnet server (stop by calling and awaiting `stop()`).\n        ')), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_run_task', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return()], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_run_task', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='get_running_loop', ctx=Load()), args=[], keywords=[]), attr='create_task', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[], returns=Constant(value=None)), AsyncFunctionDef(name='stop', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Deprecated: Use `.run()` instead.\n\n        Stop a telnet server that was started using `.start()` and wait for the\n        cancellation to complete.\n        ')), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_run_task', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_run_task', ctx=Load()), attr='cancel', ctx=Load()), args=[], keywords=[])), Try(body=[Expr(value=Await(value=Attribute(value=Name(id='self', ctx=Load()), attr='_run_task', ctx=Load())))], handlers=[ExceptHandler(type=Attribute(value=Name(id='asyncio', ctx=Load()), attr='CancelledError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_accept', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='listen_socket', annotation=Attribute(value=Name(id='socket', ctx=Load()), attr='socket', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Accept new incoming connection.\n        ')), Assign(targets=[Tuple(elts=[Name(id='conn', ctx=Store()), Name(id='addr', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='listen_socket', ctx=Load()), attr='accept', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='New connection %r %r'), Starred(value=Name(id='addr', ctx=Load()), ctx=Load())], keywords=[])), AsyncFunctionDef(name='run', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[With(items=[withitem(context_expr=Call(func=Name(id='create_pipe_input', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='vt100_input', ctx=Store()))], body=[Assign(targets=[Name(id='connection', ctx=Store())], value=Call(func=Name(id='TelnetConnection', ctx=Load()), args=[Name(id='conn', ctx=Load()), Name(id='addr', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='interact', ctx=Load()), Name(id='self', ctx=Load())], keywords=[keyword(arg='encoding', value=Attribute(value=Name(id='self', ctx=Load()), attr='encoding', ctx=Load())), keyword(arg='style', value=Attribute(value=Name(id='self', ctx=Load()), attr='style', ctx=Load())), keyword(arg='vt100_input', value=Name(id='vt100_input', ctx=Load())), keyword(arg='enable_cpr', value=Attribute(value=Name(id='self', ctx=Load()), attr='enable_cpr', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='connections', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='connection', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Starting interaction %r %r'), Starred(value=Name(id='addr', ctx=Load()), ctx=Load())], keywords=[])), Try(body=[Expr(value=Await(value=Call(func=Attribute(value=Name(id='connection', ctx=Load()), attr='run_application', ctx=Load()), args=[], keywords=[])))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='connections', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='connection', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Stopping interaction %r %r'), Starred(value=Name(id='addr', ctx=Load()), ctx=Load())], keywords=[]))])])], handlers=[ExceptHandler(type=Name(id='EOFError', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Unhandled EOFError in telnet application.')], keywords=[]))]), ExceptHandler(type=Name(id='KeyboardInterrupt', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Unhandled KeyboardInterrupt in telnet application.')], keywords=[]))]), ExceptHandler(type=Name(id='BaseException', ctx=Load()), name='e', body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Constant(value='Got %s'), op=Mod(), right=Attribute(value=Call(func=Name(id='type', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), attr='__name__', ctx=Load())), Name(id='e', ctx=Load())], keywords=[])), Import(names=[alias(name='traceback')]), Expr(value=Call(func=Attribute(value=Name(id='traceback', ctx=Load()), attr='print_exc', ctx=Load()), args=[], keywords=[]))])], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_application_tasks', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='task', ctx=Load())], keywords=[]))])], decorator_list=[], returns=Constant(value=None)), Assign(targets=[Name(id='task', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='get_running_loop', ctx=Load()), args=[], keywords=[]), attr='create_task', ctx=Load()), args=[Call(func=Name(id='run', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_application_tasks', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='task', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None))], decorator_list=[])], type_ignores=[])