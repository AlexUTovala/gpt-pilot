Module(body=[Expr(value=Constant(value="\nFilters decide whether something is active or not (they decide about a boolean\nstate). This is used to enable/disable features, like key bindings, parts of\nthe layout and other stuff. For instance, we could have a `HasSearch` filter\nattached to some part of the layout, in order to show that part of the user\ninterface only while the user is searching.\n\nFilters are made to avoid having to attach callbacks to all event in order to\npropagate state. However, they are lazy, they don't automatically propagate the\nstate of what they are observing. Only when a filter is called (it's actually a\ncallable), it will calculate its value. So, its not really reactive\nprogramming, but it's made to fit for this framework.\n\nFilters can be chained using ``&`` and ``|`` operations, and inverted using the\n``~`` operator, for instance::\n\n    filter = has_focus('default') & ~ has_selection\n")), ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), ImportFrom(module='app', names=[alias(name='*')], level=1), ImportFrom(module='base', names=[alias(name='Always'), alias(name='Condition'), alias(name='Filter'), alias(name='FilterOrBool'), alias(name='Never')], level=1), ImportFrom(module='cli', names=[alias(name='*')], level=1), ImportFrom(module='utils', names=[alias(name='is_true'), alias(name='to_filter')], level=1), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='has_arg'), Constant(value='has_completions'), Constant(value='completion_is_selected'), Constant(value='has_focus'), Constant(value='buffer_has_focus'), Constant(value='has_selection'), Constant(value='has_validation_error'), Constant(value='is_done'), Constant(value='is_read_only'), Constant(value='is_multiline'), Constant(value='renderer_height_is_known'), Constant(value='in_editing_mode'), Constant(value='in_paste_mode'), Constant(value='vi_mode'), Constant(value='vi_navigation_mode'), Constant(value='vi_insert_mode'), Constant(value='vi_insert_multiple_mode'), Constant(value='vi_replace_mode'), Constant(value='vi_selection_mode'), Constant(value='vi_waiting_for_text_object_mode'), Constant(value='vi_digraph_mode'), Constant(value='vi_recording_macro'), Constant(value='emacs_mode'), Constant(value='emacs_insert_mode'), Constant(value='emacs_selection_mode'), Constant(value='shift_selection_mode'), Constant(value='is_searching'), Constant(value='control_is_searchable'), Constant(value='vi_search_direction_reversed'), Constant(value='Filter'), Constant(value='Never'), Constant(value='Always'), Constant(value='Condition'), Constant(value='FilterOrBool'), Constant(value='is_true'), Constant(value='to_filter')], ctx=Load())), ImportFrom(module='cli', names=[alias(name='__all__', asname='cli_all')], level=1), Expr(value=Call(func=Attribute(value=Name(id='__all__', ctx=Load()), attr='extend', ctx=Load()), args=[Name(id='cli_all', ctx=Load())], keywords=[]))], type_ignores=[])