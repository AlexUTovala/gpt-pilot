Module(body=[Expr(value=Constant(value='\nFilters that accept a `Application` as argument.\n')), ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), ImportFrom(module='typing', names=[alias(name='TYPE_CHECKING'), alias(name='cast')], level=0), ImportFrom(module='prompt_toolkit.application.current', names=[alias(name='get_app')], level=0), ImportFrom(module='prompt_toolkit.cache', names=[alias(name='memoized')], level=0), ImportFrom(module='prompt_toolkit.enums', names=[alias(name='EditingMode')], level=0), ImportFrom(module='base', names=[alias(name='Condition')], level=1), If(test=Name(id='TYPE_CHECKING', ctx=Load()), body=[ImportFrom(module='prompt_toolkit.layout.layout', names=[alias(name='FocusableElement')], level=0)], orelse=[]), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='has_arg'), Constant(value='has_completions'), Constant(value='completion_is_selected'), Constant(value='has_focus'), Constant(value='buffer_has_focus'), Constant(value='has_selection'), Constant(value='has_suggestion'), Constant(value='has_validation_error'), Constant(value='is_done'), Constant(value='is_read_only'), Constant(value='is_multiline'), Constant(value='renderer_height_is_known'), Constant(value='in_editing_mode'), Constant(value='in_paste_mode'), Constant(value='vi_mode'), Constant(value='vi_navigation_mode'), Constant(value='vi_insert_mode'), Constant(value='vi_insert_multiple_mode'), Constant(value='vi_replace_mode'), Constant(value='vi_selection_mode'), Constant(value='vi_waiting_for_text_object_mode'), Constant(value='vi_digraph_mode'), Constant(value='vi_recording_macro'), Constant(value='emacs_mode'), Constant(value='emacs_insert_mode'), Constant(value='emacs_selection_mode'), Constant(value='shift_selection_mode'), Constant(value='is_searching'), Constant(value='control_is_searchable'), Constant(value='vi_search_direction_reversed')], ctx=Load())), FunctionDef(name='has_focus', args=arguments(posonlyargs=[], args=[arg(arg='value', annotation=Name(id='FocusableElement', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Enable when this buffer has the focus.\n    ')), ImportFrom(module='prompt_toolkit.buffer', names=[alias(name='Buffer')], level=0), ImportFrom(module='prompt_toolkit.layout', names=[alias(name='walk')], level=0), ImportFrom(module='prompt_toolkit.layout.containers', names=[alias(name='Container'), alias(name='Window'), alias(name='to_container')], level=0), ImportFrom(module='prompt_toolkit.layout.controls', names=[alias(name='UIControl')], level=0), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='str', ctx=Load())], keywords=[]), body=[FunctionDef(name='test', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Attribute(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='current_buffer', ctx=Load()), attr='name', ctx=Load()), ops=[Eq()], comparators=[Name(id='value', ctx=Load())]))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='Buffer', ctx=Load())], keywords=[]), body=[FunctionDef(name='test', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='current_buffer', ctx=Load()), ops=[Eq()], comparators=[Name(id='value', ctx=Load())]))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='UIControl', ctx=Load())], keywords=[]), body=[FunctionDef(name='test', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Attribute(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='layout', ctx=Load()), attr='current_control', ctx=Load()), ops=[Eq()], comparators=[Name(id='value', ctx=Load())]))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], orelse=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='to_container', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='Window', ctx=Load())], keywords=[]), body=[FunctionDef(name='test', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Attribute(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='layout', ctx=Load()), attr='current_window', ctx=Load()), ops=[Eq()], comparators=[Name(id='value', ctx=Load())]))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], orelse=[FunctionDef(name='test', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='current_window', ctx=Store())], value=Attribute(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='layout', ctx=Load()), attr='current_window', ctx=Load())), For(target=Name(id='c', ctx=Store()), iter=Call(func=Name(id='walk', ctx=Load()), args=[Call(func=Name(id='cast', ctx=Load()), args=[Name(id='Container', ctx=Load()), Name(id='value', ctx=Load())], keywords=[])], keywords=[]), body=[If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='c', ctx=Load()), Name(id='Window', ctx=Load())], keywords=[]), Compare(left=Name(id='c', ctx=Load()), ops=[Eq()], comparators=[Name(id='current_window', ctx=Load())])]), body=[Return(value=Constant(value=True))], orelse=[])], orelse=[]), Return(value=Constant(value=False))], decorator_list=[], returns=Name(id='bool', ctx=Load()))])])])]), FunctionDef(name='has_focus_filter', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='test', ctx=Load()), args=[], keywords=[]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), Return(value=Name(id='has_focus_filter', ctx=Load()))], decorator_list=[], returns=Name(id='Condition', ctx=Load())), FunctionDef(name='buffer_has_focus', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Enabled when the currently focused control is a `BufferControl`.\n    ')), Return(value=Attribute(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='layout', ctx=Load()), attr='buffer_has_focus', ctx=Load()))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='has_selection', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Enable when the current buffer has a selection.\n    ')), Return(value=Call(func=Name(id='bool', ctx=Load()), args=[Attribute(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='current_buffer', ctx=Load()), attr='selection_state', ctx=Load())], keywords=[]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='has_suggestion', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Enable when the current buffer has a suggestion.\n    ')), Assign(targets=[Name(id='buffer', ctx=Store())], value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='current_buffer', ctx=Load())), Return(value=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='buffer', ctx=Load()), attr='suggestion', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Attribute(value=Name(id='buffer', ctx=Load()), attr='suggestion', ctx=Load()), attr='text', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='')])]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='has_completions', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Enable when the current buffer has completions.\n    ')), Assign(targets=[Name(id='state', ctx=Store())], value=Attribute(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='current_buffer', ctx=Load()), attr='complete_state', ctx=Load())), Return(value=BoolOp(op=And(), values=[Compare(left=Name(id='state', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='state', ctx=Load()), attr='completions', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=0)])]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='completion_is_selected', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    True when the user selected a completion.\n    ')), Assign(targets=[Name(id='complete_state', ctx=Store())], value=Attribute(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='current_buffer', ctx=Load()), attr='complete_state', ctx=Load())), Return(value=BoolOp(op=And(), values=[Compare(left=Name(id='complete_state', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Name(id='complete_state', ctx=Load()), attr='current_completion', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='is_read_only', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    True when the current buffer is read only.\n    ')), Return(value=Call(func=Attribute(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='current_buffer', ctx=Load()), attr='read_only', ctx=Load()), args=[], keywords=[]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='is_multiline', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    True when the current buffer has been marked as multiline.\n    ')), Return(value=Call(func=Attribute(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='current_buffer', ctx=Load()), attr='multiline', ctx=Load()), args=[], keywords=[]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='has_validation_error', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Current buffer has validation error.')), Return(value=Compare(left=Attribute(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='current_buffer', ctx=Load()), attr='validation_error', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='has_arg', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="Enable when the input processor has an 'arg'.")), Return(value=Compare(left=Attribute(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='key_processor', ctx=Load()), attr='arg', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='is_done', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    True when the CLI is returning, aborting or exiting.\n    ')), Return(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='is_done', ctx=Load()))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='renderer_height_is_known', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n    Only True when the renderer knows it's real height.\n\n    (On VT100 terminals, we have to wait for a CPR response, before we can be\n    sure of the available height between the cursor position and the bottom of\n    the terminal. And usually it's nicer to wait with drawing bottom toolbars\n    until we receive the height, in order to avoid flickering -- first drawing\n    somewhere in the middle, and then again at the bottom.)\n    ")), Return(value=Attribute(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='renderer', ctx=Load()), attr='height_is_known', ctx=Load()))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='in_editing_mode', args=arguments(posonlyargs=[], args=[arg(arg='editing_mode', annotation=Name(id='EditingMode', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Check whether a given editing mode is active. (Vi or Emacs.)\n    ')), FunctionDef(name='in_editing_mode_filter', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='editing_mode', ctx=Load()), ops=[Eq()], comparators=[Name(id='editing_mode', ctx=Load())]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), Return(value=Name(id='in_editing_mode_filter', ctx=Load()))], decorator_list=[Call(func=Name(id='memoized', ctx=Load()), args=[], keywords=[])], returns=Name(id='Condition', ctx=Load())), FunctionDef(name='in_paste_mode', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='paste_mode', ctx=Load()), args=[], keywords=[]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='vi_mode', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='editing_mode', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='EditingMode', ctx=Load()), attr='VI', ctx=Load())]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='vi_navigation_mode', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Active when the set for Vi navigation key bindings are active.\n    ')), ImportFrom(module='prompt_toolkit.key_binding.vi_state', names=[alias(name='InputMode')], level=0), Assign(targets=[Name(id='app', ctx=Store())], value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='app', ctx=Load()), attr='editing_mode', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='EditingMode', ctx=Load()), attr='VI', ctx=Load())]), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='operator_func', ctx=Load()), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='waiting_for_digraph', ctx=Load()), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='current_buffer', ctx=Load()), attr='selection_state', ctx=Load())]), body=[Return(value=Constant(value=False))], orelse=[]), Return(value=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='InputMode', ctx=Load()), attr='NAVIGATION', ctx=Load())]), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='temporary_navigation_mode', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='current_buffer', ctx=Load()), attr='read_only', ctx=Load()), args=[], keywords=[])]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='vi_insert_mode', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[ImportFrom(module='prompt_toolkit.key_binding.vi_state', names=[alias(name='InputMode')], level=0), Assign(targets=[Name(id='app', ctx=Store())], value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='app', ctx=Load()), attr='editing_mode', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='EditingMode', ctx=Load()), attr='VI', ctx=Load())]), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='operator_func', ctx=Load()), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='waiting_for_digraph', ctx=Load()), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='current_buffer', ctx=Load()), attr='selection_state', ctx=Load()), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='temporary_navigation_mode', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='current_buffer', ctx=Load()), attr='read_only', ctx=Load()), args=[], keywords=[])]), body=[Return(value=Constant(value=False))], orelse=[]), Return(value=Compare(left=Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='InputMode', ctx=Load()), attr='INSERT', ctx=Load())]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='vi_insert_multiple_mode', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[ImportFrom(module='prompt_toolkit.key_binding.vi_state', names=[alias(name='InputMode')], level=0), Assign(targets=[Name(id='app', ctx=Store())], value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='app', ctx=Load()), attr='editing_mode', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='EditingMode', ctx=Load()), attr='VI', ctx=Load())]), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='operator_func', ctx=Load()), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='waiting_for_digraph', ctx=Load()), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='current_buffer', ctx=Load()), attr='selection_state', ctx=Load()), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='temporary_navigation_mode', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='current_buffer', ctx=Load()), attr='read_only', ctx=Load()), args=[], keywords=[])]), body=[Return(value=Constant(value=False))], orelse=[]), Return(value=Compare(left=Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='InputMode', ctx=Load()), attr='INSERT_MULTIPLE', ctx=Load())]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='vi_replace_mode', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[ImportFrom(module='prompt_toolkit.key_binding.vi_state', names=[alias(name='InputMode')], level=0), Assign(targets=[Name(id='app', ctx=Store())], value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='app', ctx=Load()), attr='editing_mode', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='EditingMode', ctx=Load()), attr='VI', ctx=Load())]), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='operator_func', ctx=Load()), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='waiting_for_digraph', ctx=Load()), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='current_buffer', ctx=Load()), attr='selection_state', ctx=Load()), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='temporary_navigation_mode', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='current_buffer', ctx=Load()), attr='read_only', ctx=Load()), args=[], keywords=[])]), body=[Return(value=Constant(value=False))], orelse=[]), Return(value=Compare(left=Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='InputMode', ctx=Load()), attr='REPLACE', ctx=Load())]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='vi_replace_single_mode', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[ImportFrom(module='prompt_toolkit.key_binding.vi_state', names=[alias(name='InputMode')], level=0), Assign(targets=[Name(id='app', ctx=Store())], value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='app', ctx=Load()), attr='editing_mode', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='EditingMode', ctx=Load()), attr='VI', ctx=Load())]), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='operator_func', ctx=Load()), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='waiting_for_digraph', ctx=Load()), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='current_buffer', ctx=Load()), attr='selection_state', ctx=Load()), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='temporary_navigation_mode', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='current_buffer', ctx=Load()), attr='read_only', ctx=Load()), args=[], keywords=[])]), body=[Return(value=Constant(value=False))], orelse=[]), Return(value=Compare(left=Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='input_mode', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='InputMode', ctx=Load()), attr='REPLACE_SINGLE', ctx=Load())]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='vi_selection_mode', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='app', ctx=Store())], value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='app', ctx=Load()), attr='editing_mode', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='EditingMode', ctx=Load()), attr='VI', ctx=Load())]), body=[Return(value=Constant(value=False))], orelse=[]), Return(value=Call(func=Name(id='bool', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='current_buffer', ctx=Load()), attr='selection_state', ctx=Load())], keywords=[]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='vi_waiting_for_text_object_mode', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='app', ctx=Store())], value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='app', ctx=Load()), attr='editing_mode', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='EditingMode', ctx=Load()), attr='VI', ctx=Load())]), body=[Return(value=Constant(value=False))], orelse=[]), Return(value=Compare(left=Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='operator_func', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='vi_digraph_mode', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='app', ctx=Store())], value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='app', ctx=Load()), attr='editing_mode', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='EditingMode', ctx=Load()), attr='VI', ctx=Load())]), body=[Return(value=Constant(value=False))], orelse=[]), Return(value=Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='waiting_for_digraph', ctx=Load()))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='vi_recording_macro', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='When recording a Vi macro.')), Assign(targets=[Name(id='app', ctx=Store())], value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='app', ctx=Load()), attr='editing_mode', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='EditingMode', ctx=Load()), attr='VI', ctx=Load())]), body=[Return(value=Constant(value=False))], orelse=[]), Return(value=Compare(left=Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='vi_state', ctx=Load()), attr='recording_register', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='emacs_mode', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='When the Emacs bindings are active.')), Return(value=Compare(left=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='editing_mode', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='EditingMode', ctx=Load()), attr='EMACS', ctx=Load())]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='emacs_insert_mode', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='app', ctx=Store())], value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='app', ctx=Load()), attr='editing_mode', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='EditingMode', ctx=Load()), attr='EMACS', ctx=Load())]), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='current_buffer', ctx=Load()), attr='selection_state', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='current_buffer', ctx=Load()), attr='read_only', ctx=Load()), args=[], keywords=[])]), body=[Return(value=Constant(value=False))], orelse=[]), Return(value=Constant(value=True))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='emacs_selection_mode', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='app', ctx=Store())], value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Name(id='bool', ctx=Load()), args=[BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='app', ctx=Load()), attr='editing_mode', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='EditingMode', ctx=Load()), attr='EMACS', ctx=Load())]), Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='current_buffer', ctx=Load()), attr='selection_state', ctx=Load())])], keywords=[]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='shift_selection_mode', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='app', ctx=Store())], value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Name(id='bool', ctx=Load()), args=[BoolOp(op=And(), values=[Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='current_buffer', ctx=Load()), attr='selection_state', ctx=Load()), Attribute(value=Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='current_buffer', ctx=Load()), attr='selection_state', ctx=Load()), attr='shift_mode', ctx=Load())])], keywords=[]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='is_searching', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='When we are searching.')), Assign(targets=[Name(id='app', ctx=Store())], value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[])), Return(value=Attribute(value=Attribute(value=Name(id='app', ctx=Load()), attr='layout', ctx=Load()), attr='is_searching', ctx=Load()))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='control_is_searchable', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='When the current UIControl is searchable.')), ImportFrom(module='prompt_toolkit.layout.controls', names=[alias(name='BufferControl')], level=0), Assign(targets=[Name(id='control', ctx=Store())], value=Attribute(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='layout', ctx=Load()), attr='current_control', ctx=Load())), Return(value=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='control', ctx=Load()), Name(id='BufferControl', ctx=Load())], keywords=[]), Compare(left=Attribute(value=Name(id='control', ctx=Load()), attr='search_buffer_control', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load())), FunctionDef(name='vi_search_direction_reversed', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="When the '/' and '?' key bindings for Vi-style searching have been reversed.")), Return(value=Call(func=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='reverse_vi_search_direction', ctx=Load()), args=[], keywords=[]))], decorator_list=[Name(id='Condition', ctx=Load())], returns=Name(id='bool', ctx=Load()))], type_ignores=[])