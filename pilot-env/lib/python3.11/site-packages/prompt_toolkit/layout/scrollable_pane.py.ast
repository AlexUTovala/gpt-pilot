Module(body=[ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), ImportFrom(module='prompt_toolkit.data_structures', names=[alias(name='Point')], level=0), ImportFrom(module='prompt_toolkit.filters', names=[alias(name='FilterOrBool'), alias(name='to_filter')], level=0), ImportFrom(module='prompt_toolkit.key_binding', names=[alias(name='KeyBindingsBase')], level=0), ImportFrom(module='prompt_toolkit.mouse_events', names=[alias(name='MouseEvent')], level=0), ImportFrom(module='containers', names=[alias(name='Container'), alias(name='ScrollOffsets')], level=1), ImportFrom(module='dimension', names=[alias(name='AnyDimension'), alias(name='Dimension'), alias(name='sum_layout_dimensions'), alias(name='to_dimension')], level=1), ImportFrom(module='mouse_handlers', names=[alias(name='MouseHandler'), alias(name='MouseHandlers')], level=1), ImportFrom(module='screen', names=[alias(name='Char'), alias(name='Screen'), alias(name='WritePosition')], level=1), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='ScrollablePane')], ctx=Load())), Assign(targets=[Name(id='MAX_AVAILABLE_HEIGHT', ctx=Store())], value=Constant(value=10000)), ClassDef(name='ScrollablePane', bases=[Name(id='Container', ctx=Load())], keywords=[], body=[Expr(value=Constant(value="\n    Container widget that exposes a larger virtual screen to its content and\n    displays it in a vertical scrollbale region.\n\n    Typically this is wrapped in a large `HSplit` container. Make sure in that\n    case to not specify a `height` dimension of the `HSplit`, so that it will\n    scale according to the content.\n\n    .. note::\n\n        If you want to display a completion menu for widgets in this\n        `ScrollablePane`, then it's still a good practice to use a\n        `FloatContainer` with a `CompletionsMenu` in a `Float` at the top-level\n        of the layout hierarchy, rather then nesting a `FloatContainer` in this\n        `ScrollablePane`. (Otherwise, it's possible that the completion menu\n        is clipped.)\n\n    :param content: The content container.\n    :param scrolloffset: Try to keep the cursor within this distance from the\n        top/bottom (left/right offset is not used).\n    :param keep_cursor_visible: When `True`, automatically scroll the pane so\n        that the cursor (of the focused window) is always visible.\n    :param keep_focused_window_visible: When `True`, automatically scroll the\n        pane so that the focused window is visible, or as much visible as\n        possible if it doesn't completely fit the screen.\n    :param max_available_height: Always constraint the height to this amount\n        for performance reasons.\n    :param width: When given, use this width instead of looking at the children.\n    :param height: When given, use this height instead of looking at the children.\n    :param show_scrollbar: When `True` display a scrollbar on the right.\n    ")), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='content', annotation=Name(id='Container', ctx=Load())), arg(arg='scroll_offsets', annotation=BinOp(left=Name(id='ScrollOffsets', ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='keep_cursor_visible', annotation=Name(id='FilterOrBool', ctx=Load())), arg(arg='keep_focused_window_visible', annotation=Name(id='FilterOrBool', ctx=Load())), arg(arg='max_available_height', annotation=Name(id='int', ctx=Load())), arg(arg='width', annotation=Name(id='AnyDimension', ctx=Load())), arg(arg='height', annotation=Name(id='AnyDimension', ctx=Load())), arg(arg='show_scrollbar', annotation=Name(id='FilterOrBool', ctx=Load())), arg(arg='display_arrows', annotation=Name(id='FilterOrBool', ctx=Load())), arg(arg='up_arrow_symbol', annotation=Name(id='str', ctx=Load())), arg(arg='down_arrow_symbol', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=True), Constant(value=True), Name(id='MAX_AVAILABLE_HEIGHT', ctx=Load()), Constant(value=None), Constant(value=None), Constant(value=True), Constant(value=True), Constant(value='^'), Constant(value='v')]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='content', ctx=Store())], value=Name(id='content', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='scroll_offsets', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='scroll_offsets', ctx=Load()), Call(func=Name(id='ScrollOffsets', ctx=Load()), args=[], keywords=[keyword(arg='top', value=Constant(value=1)), keyword(arg='bottom', value=Constant(value=1))])])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='keep_cursor_visible', ctx=Store())], value=Call(func=Name(id='to_filter', ctx=Load()), args=[Name(id='keep_cursor_visible', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='keep_focused_window_visible', ctx=Store())], value=Call(func=Name(id='to_filter', ctx=Load()), args=[Name(id='keep_focused_window_visible', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='max_available_height', ctx=Store())], value=Name(id='max_available_height', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='width', ctx=Store())], value=Name(id='width', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='height', ctx=Store())], value=Name(id='height', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='show_scrollbar', ctx=Store())], value=Call(func=Name(id='to_filter', ctx=Load()), args=[Name(id='show_scrollbar', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='display_arrows', ctx=Store())], value=Call(func=Name(id='to_filter', ctx=Load()), args=[Name(id='display_arrows', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='up_arrow_symbol', ctx=Store())], value=Name(id='up_arrow_symbol', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='down_arrow_symbol', ctx=Store())], value=Name(id='down_arrow_symbol', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='vertical_scroll', ctx=Store())], value=Constant(value=0))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=JoinedStr(values=[Constant(value='ScrollablePane('), FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='content', ctx=Load()), conversion=114), Constant(value=')')]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='reset', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='content', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='preferred_width', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='max_available_width', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='width', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='to_dimension', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='width', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='content_width', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='content', ctx=Load()), attr='preferred_width', ctx=Load()), args=[Name(id='max_available_width', ctx=Load())], keywords=[])), If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='show_scrollbar', ctx=Load()), args=[], keywords=[]), body=[Return(value=Call(func=Name(id='sum_layout_dimensions', ctx=Load()), args=[List(elts=[Call(func=Attribute(value=Name(id='Dimension', ctx=Load()), attr='exact', ctx=Load()), args=[Constant(value=1)], keywords=[]), Name(id='content_width', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='content_width', ctx=Load()))], decorator_list=[], returns=Name(id='Dimension', ctx=Load())), FunctionDef(name='preferred_height', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='width', annotation=Name(id='int', ctx=Load())), arg(arg='max_available_height', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='height', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='to_dimension', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='height', ctx=Load())], keywords=[]))], orelse=[]), If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='show_scrollbar', ctx=Load()), args=[], keywords=[]), body=[AugAssign(target=Name(id='width', ctx=Store()), op=Sub(), value=Constant(value=1))], orelse=[]), Assign(targets=[Name(id='dimension', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='content', ctx=Load()), attr='preferred_height', ctx=Load()), args=[Name(id='width', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='max_available_height', ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='Dimension', ctx=Load()), args=[], keywords=[keyword(arg='min', value=Constant(value=0)), keyword(arg='preferred', value=Attribute(value=Name(id='dimension', ctx=Load()), attr='preferred', ctx=Load()))]))], decorator_list=[], returns=Name(id='Dimension', ctx=Load())), FunctionDef(name='write_to_screen', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='screen', annotation=Name(id='Screen', ctx=Load())), arg(arg='mouse_handlers', annotation=Name(id='MouseHandlers', ctx=Load())), arg(arg='write_position', annotation=Name(id='WritePosition', ctx=Load())), arg(arg='parent_style', annotation=Name(id='str', ctx=Load())), arg(arg='erase_bg', annotation=Name(id='bool', ctx=Load())), arg(arg='z_index', annotation=BinOp(left=Name(id='int', ctx=Load()), op=BitOr(), right=Constant(value=None)))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Render scrollable pane content.\n\n        This works by rendering on an off-screen canvas, and copying over the\n        visible region.\n        ')), Assign(targets=[Name(id='show_scrollbar', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='show_scrollbar', ctx=Load()), args=[], keywords=[])), If(test=Name(id='show_scrollbar', ctx=Load()), body=[Assign(targets=[Name(id='virtual_width', ctx=Store())], value=BinOp(left=Attribute(value=Name(id='write_position', ctx=Load()), attr='width', ctx=Load()), op=Sub(), right=Constant(value=1)))], orelse=[Assign(targets=[Name(id='virtual_width', ctx=Store())], value=Attribute(value=Name(id='write_position', ctx=Load()), attr='width', ctx=Load()))]), Assign(targets=[Name(id='virtual_height', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='content', ctx=Load()), attr='preferred_height', ctx=Load()), args=[Name(id='virtual_width', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='max_available_height', ctx=Load())], keywords=[]), attr='preferred', ctx=Load())), Assign(targets=[Name(id='virtual_height', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Name(id='virtual_height', ctx=Load()), Attribute(value=Name(id='write_position', ctx=Load()), attr='height', ctx=Load())], keywords=[])), Assign(targets=[Name(id='virtual_height', ctx=Store())], value=Call(func=Name(id='min', ctx=Load()), args=[Name(id='virtual_height', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='max_available_height', ctx=Load())], keywords=[])), Assign(targets=[Name(id='temp_screen', ctx=Store())], value=Call(func=Name(id='Screen', ctx=Load()), args=[], keywords=[keyword(arg='default_char', value=Call(func=Name(id='Char', ctx=Load()), args=[], keywords=[keyword(arg='char', value=Constant(value=' ')), keyword(arg='style', value=Name(id='parent_style', ctx=Load()))]))])), Assign(targets=[Attribute(value=Name(id='temp_screen', ctx=Load()), attr='show_cursor', ctx=Store())], value=Attribute(value=Name(id='screen', ctx=Load()), attr='show_cursor', ctx=Load())), Assign(targets=[Name(id='temp_write_position', ctx=Store())], value=Call(func=Name(id='WritePosition', ctx=Load()), args=[], keywords=[keyword(arg='xpos', value=Constant(value=0)), keyword(arg='ypos', value=Constant(value=0)), keyword(arg='width', value=Name(id='virtual_width', ctx=Load())), keyword(arg='height', value=Name(id='virtual_height', ctx=Load()))])), Assign(targets=[Name(id='temp_mouse_handlers', ctx=Store())], value=Call(func=Name(id='MouseHandlers', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='content', ctx=Load()), attr='write_to_screen', ctx=Load()), args=[Name(id='temp_screen', ctx=Load()), Name(id='temp_mouse_handlers', ctx=Load()), Name(id='temp_write_position', ctx=Load()), Name(id='parent_style', ctx=Load()), Name(id='erase_bg', ctx=Load()), Name(id='z_index', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='temp_screen', ctx=Load()), attr='draw_all_floats', ctx=Load()), args=[], keywords=[])), ImportFrom(module='prompt_toolkit.application', names=[alias(name='get_app')], level=0), Assign(targets=[Name(id='focused_window', ctx=Store())], value=Attribute(value=Attribute(value=Call(func=Name(id='get_app', ctx=Load()), args=[], keywords=[]), attr='layout', ctx=Load()), attr='current_window', ctx=Load())), Try(body=[Assign(targets=[Name(id='visible_win_write_pos', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='temp_screen', ctx=Load()), attr='visible_windows_to_write_positions', ctx=Load()), slice=Name(id='focused_window', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Pass()])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_make_window_visible', ctx=Load()), args=[Attribute(value=Name(id='write_position', ctx=Load()), attr='height', ctx=Load()), Name(id='virtual_height', ctx=Load()), Name(id='visible_win_write_pos', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='temp_screen', ctx=Load()), attr='cursor_positions', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='focused_window', ctx=Load())], keywords=[])], keywords=[]))], finalbody=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_copy_over_screen', ctx=Load()), args=[Name(id='screen', ctx=Load()), Name(id='temp_screen', ctx=Load()), Name(id='write_position', ctx=Load()), Name(id='virtual_width', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_copy_over_mouse_handlers', ctx=Load()), args=[Name(id='mouse_handlers', ctx=Load()), Name(id='temp_mouse_handlers', ctx=Load()), Name(id='write_position', ctx=Load()), Name(id='virtual_width', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ypos', ctx=Store())], value=Attribute(value=Name(id='write_position', ctx=Load()), attr='ypos', ctx=Load())), Assign(targets=[Name(id='xpos', ctx=Store())], value=Attribute(value=Name(id='write_position', ctx=Load()), attr='xpos', ctx=Load())), Assign(targets=[Attribute(value=Name(id='screen', ctx=Load()), attr='width', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Attribute(value=Name(id='screen', ctx=Load()), attr='width', ctx=Load()), BinOp(left=Name(id='xpos', ctx=Load()), op=Add(), right=Name(id='virtual_width', ctx=Load()))], keywords=[])), Assign(targets=[Attribute(value=Name(id='screen', ctx=Load()), attr='height', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Attribute(value=Name(id='screen', ctx=Load()), attr='height', ctx=Load()), BinOp(left=Name(id='ypos', ctx=Load()), op=Add(), right=Attribute(value=Name(id='write_position', ctx=Load()), attr='height', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_copy_over_write_positions', ctx=Load()), args=[Name(id='screen', ctx=Load()), Name(id='temp_screen', ctx=Load()), Name(id='write_position', ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='temp_screen', ctx=Load()), attr='show_cursor', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='screen', ctx=Load()), attr='show_cursor', ctx=Store())], value=Constant(value=True))], orelse=[]), For(target=Tuple(elts=[Name(id='window', ctx=Store()), Name(id='point', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='temp_screen', ctx=Load()), attr='cursor_positions', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Constant(value=0), ops=[LtE(), Lt()], comparators=[Attribute(value=Name(id='point', ctx=Load()), attr='x', ctx=Load()), Attribute(value=Name(id='write_position', ctx=Load()), attr='width', ctx=Load())]), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='vertical_scroll', ctx=Load()), ops=[LtE(), Lt()], comparators=[Attribute(value=Name(id='point', ctx=Load()), attr='y', ctx=Load()), BinOp(left=Attribute(value=Name(id='write_position', ctx=Load()), attr='height', ctx=Load()), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='vertical_scroll', ctx=Load()))])]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='screen', ctx=Load()), attr='cursor_positions', ctx=Load()), slice=Name(id='window', ctx=Load()), ctx=Store())], value=Call(func=Name(id='Point', ctx=Load()), args=[], keywords=[keyword(arg='x', value=BinOp(left=Attribute(value=Name(id='point', ctx=Load()), attr='x', ctx=Load()), op=Add(), right=Name(id='xpos', ctx=Load()))), keyword(arg='y', value=BinOp(left=BinOp(left=Attribute(value=Name(id='point', ctx=Load()), attr='y', ctx=Load()), op=Add(), right=Name(id='ypos', ctx=Load())), op=Sub(), right=Attribute(value=Name(id='self', ctx=Load()), attr='vertical_scroll', ctx=Load())))]))], orelse=[])], orelse=[]), For(target=Tuple(elts=[Name(id='window', ctx=Store()), Name(id='point', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='temp_screen', ctx=Load()), attr='menu_positions', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='screen', ctx=Load()), attr='menu_positions', ctx=Load()), slice=Name(id='window', ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_clip_point_to_visible_area', ctx=Load()), args=[Call(func=Name(id='Point', ctx=Load()), args=[], keywords=[keyword(arg='x', value=BinOp(left=Attribute(value=Name(id='point', ctx=Load()), attr='x', ctx=Load()), op=Add(), right=Name(id='xpos', ctx=Load()))), keyword(arg='y', value=BinOp(left=BinOp(left=Attribute(value=Name(id='point', ctx=Load()), attr='y', ctx=Load()), op=Add(), right=Name(id='ypos', ctx=Load())), op=Sub(), right=Attribute(value=Name(id='self', ctx=Load()), attr='vertical_scroll', ctx=Load())))]), Name(id='write_position', ctx=Load())], keywords=[]))], orelse=[]), If(test=Name(id='show_scrollbar', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_draw_scrollbar', ctx=Load()), args=[Name(id='write_position', ctx=Load()), Name(id='virtual_height', ctx=Load()), Name(id='screen', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_clip_point_to_visible_area', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='point', annotation=Name(id='Point', ctx=Load())), arg(arg='write_position', annotation=Name(id='WritePosition', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Ensure that the cursor and menu positions always are always reported\n        ')), If(test=Compare(left=Attribute(value=Name(id='point', ctx=Load()), attr='x', ctx=Load()), ops=[Lt()], comparators=[Attribute(value=Name(id='write_position', ctx=Load()), attr='xpos', ctx=Load())]), body=[Assign(targets=[Name(id='point', ctx=Store())], value=Call(func=Attribute(value=Name(id='point', ctx=Load()), attr='_replace', ctx=Load()), args=[], keywords=[keyword(arg='x', value=Attribute(value=Name(id='write_position', ctx=Load()), attr='xpos', ctx=Load()))]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='point', ctx=Load()), attr='y', ctx=Load()), ops=[Lt()], comparators=[Attribute(value=Name(id='write_position', ctx=Load()), attr='ypos', ctx=Load())]), body=[Assign(targets=[Name(id='point', ctx=Store())], value=Call(func=Attribute(value=Name(id='point', ctx=Load()), attr='_replace', ctx=Load()), args=[], keywords=[keyword(arg='y', value=Attribute(value=Name(id='write_position', ctx=Load()), attr='ypos', ctx=Load()))]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='point', ctx=Load()), attr='x', ctx=Load()), ops=[GtE()], comparators=[BinOp(left=Attribute(value=Name(id='write_position', ctx=Load()), attr='xpos', ctx=Load()), op=Add(), right=Attribute(value=Name(id='write_position', ctx=Load()), attr='width', ctx=Load()))]), body=[Assign(targets=[Name(id='point', ctx=Store())], value=Call(func=Attribute(value=Name(id='point', ctx=Load()), attr='_replace', ctx=Load()), args=[], keywords=[keyword(arg='x', value=BinOp(left=BinOp(left=Attribute(value=Name(id='write_position', ctx=Load()), attr='xpos', ctx=Load()), op=Add(), right=Attribute(value=Name(id='write_position', ctx=Load()), attr='width', ctx=Load())), op=Sub(), right=Constant(value=1)))]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='point', ctx=Load()), attr='y', ctx=Load()), ops=[GtE()], comparators=[BinOp(left=Attribute(value=Name(id='write_position', ctx=Load()), attr='ypos', ctx=Load()), op=Add(), right=Attribute(value=Name(id='write_position', ctx=Load()), attr='height', ctx=Load()))]), body=[Assign(targets=[Name(id='point', ctx=Store())], value=Call(func=Attribute(value=Name(id='point', ctx=Load()), attr='_replace', ctx=Load()), args=[], keywords=[keyword(arg='y', value=BinOp(left=BinOp(left=Attribute(value=Name(id='write_position', ctx=Load()), attr='ypos', ctx=Load()), op=Add(), right=Attribute(value=Name(id='write_position', ctx=Load()), attr='height', ctx=Load())), op=Sub(), right=Constant(value=1)))]))], orelse=[]), Return(value=Name(id='point', ctx=Load()))], decorator_list=[], returns=Name(id='Point', ctx=Load())), FunctionDef(name='_copy_over_screen', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='screen', annotation=Name(id='Screen', ctx=Load())), arg(arg='temp_screen', annotation=Name(id='Screen', ctx=Load())), arg(arg='write_position', annotation=Name(id='WritePosition', ctx=Load())), arg(arg='virtual_width', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Copy over visible screen content and "zero width escape sequences".\n        ')), Assign(targets=[Name(id='ypos', ctx=Store())], value=Attribute(value=Name(id='write_position', ctx=Load()), attr='ypos', ctx=Load())), Assign(targets=[Name(id='xpos', ctx=Store())], value=Attribute(value=Name(id='write_position', ctx=Load()), attr='xpos', ctx=Load())), For(target=Name(id='y', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='write_position', ctx=Load()), attr='height', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='temp_row', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='temp_screen', ctx=Load()), attr='data_buffer', ctx=Load()), slice=BinOp(left=Name(id='y', ctx=Load()), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='vertical_scroll', ctx=Load())), ctx=Load())), Assign(targets=[Name(id='row', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='screen', ctx=Load()), attr='data_buffer', ctx=Load()), slice=BinOp(left=Name(id='y', ctx=Load()), op=Add(), right=Name(id='ypos', ctx=Load())), ctx=Load())), Assign(targets=[Name(id='temp_zero_width_escapes', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='temp_screen', ctx=Load()), attr='zero_width_escapes', ctx=Load()), slice=BinOp(left=Name(id='y', ctx=Load()), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='vertical_scroll', ctx=Load())), ctx=Load())), Assign(targets=[Name(id='zero_width_escapes', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='screen', ctx=Load()), attr='zero_width_escapes', ctx=Load()), slice=BinOp(left=Name(id='y', ctx=Load()), op=Add(), right=Name(id='ypos', ctx=Load())), ctx=Load())), For(target=Name(id='x', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='virtual_width', ctx=Load())], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='row', ctx=Load()), slice=BinOp(left=Name(id='x', ctx=Load()), op=Add(), right=Name(id='xpos', ctx=Load())), ctx=Store())], value=Subscript(value=Name(id='temp_row', ctx=Load()), slice=Name(id='x', ctx=Load()), ctx=Load())), If(test=Compare(left=Name(id='x', ctx=Load()), ops=[In()], comparators=[Name(id='temp_zero_width_escapes', ctx=Load())]), body=[Assign(targets=[Subscript(value=Name(id='zero_width_escapes', ctx=Load()), slice=BinOp(left=Name(id='x', ctx=Load()), op=Add(), right=Name(id='xpos', ctx=Load())), ctx=Store())], value=Subscript(value=Name(id='temp_zero_width_escapes', ctx=Load()), slice=Name(id='x', ctx=Load()), ctx=Load()))], orelse=[])], orelse=[])], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_copy_over_mouse_handlers', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='mouse_handlers', annotation=Name(id='MouseHandlers', ctx=Load())), arg(arg='temp_mouse_handlers', annotation=Name(id='MouseHandlers', ctx=Load())), arg(arg='write_position', annotation=Name(id='WritePosition', ctx=Load())), arg(arg='virtual_width', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Copy over mouse handlers from virtual screen to real screen.\n\n        Note: we take `virtual_width` because we don't want to copy over mouse\n              handlers that we possibly have behind the scrollbar.\n        ")), Assign(targets=[Name(id='ypos', ctx=Store())], value=Attribute(value=Name(id='write_position', ctx=Load()), attr='ypos', ctx=Load())), Assign(targets=[Name(id='xpos', ctx=Store())], value=Attribute(value=Name(id='write_position', ctx=Load()), attr='xpos', ctx=Load())), AnnAssign(target=Name(id='mouse_handler_wrappers', ctx=Store()), annotation=Subscript(value=Name(id='dict', ctx=Load()), slice=Tuple(elts=[Name(id='MouseHandler', ctx=Load()), Name(id='MouseHandler', ctx=Load())], ctx=Load()), ctx=Load()), value=Dict(keys=[], values=[]), simple=1), FunctionDef(name='wrap_mouse_handler', args=arguments(posonlyargs=[], args=[arg(arg='handler', annotation=Name(id='MouseHandler', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Wrap mouse handler. Translate coordinates in `MouseEvent`.')), If(test=Compare(left=Name(id='handler', ctx=Load()), ops=[NotIn()], comparators=[Name(id='mouse_handler_wrappers', ctx=Load())]), body=[FunctionDef(name='new_handler', args=arguments(posonlyargs=[], args=[arg(arg='event', annotation=Name(id='MouseEvent', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='new_event', ctx=Store())], value=Call(func=Name(id='MouseEvent', ctx=Load()), args=[], keywords=[keyword(arg='position', value=Call(func=Name(id='Point', ctx=Load()), args=[], keywords=[keyword(arg='x', value=BinOp(left=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='position', ctx=Load()), attr='x', ctx=Load()), op=Sub(), right=Name(id='xpos', ctx=Load()))), keyword(arg='y', value=BinOp(left=BinOp(left=Attribute(value=Attribute(value=Name(id='event', ctx=Load()), attr='position', ctx=Load()), attr='y', ctx=Load()), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='vertical_scroll', ctx=Load())), op=Sub(), right=Name(id='ypos', ctx=Load())))])), keyword(arg='event_type', value=Attribute(value=Name(id='event', ctx=Load()), attr='event_type', ctx=Load())), keyword(arg='button', value=Attribute(value=Name(id='event', ctx=Load()), attr='button', ctx=Load())), keyword(arg='modifiers', value=Attribute(value=Name(id='event', ctx=Load()), attr='modifiers', ctx=Load()))])), Expr(value=Call(func=Name(id='handler', ctx=Load()), args=[Name(id='new_event', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), Assign(targets=[Subscript(value=Name(id='mouse_handler_wrappers', ctx=Load()), slice=Name(id='handler', ctx=Load()), ctx=Store())], value=Name(id='new_handler', ctx=Load()))], orelse=[]), Return(value=Subscript(value=Name(id='mouse_handler_wrappers', ctx=Load()), slice=Name(id='handler', ctx=Load()), ctx=Load()))], decorator_list=[], returns=Name(id='MouseHandler', ctx=Load())), Assign(targets=[Name(id='mouse_handlers_dict', ctx=Store())], value=Attribute(value=Name(id='mouse_handlers', ctx=Load()), attr='mouse_handlers', ctx=Load())), Assign(targets=[Name(id='temp_mouse_handlers_dict', ctx=Store())], value=Attribute(value=Name(id='temp_mouse_handlers', ctx=Load()), attr='mouse_handlers', ctx=Load())), For(target=Name(id='y', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='write_position', ctx=Load()), attr='height', ctx=Load())], keywords=[]), body=[If(test=Compare(left=Name(id='y', ctx=Load()), ops=[In()], comparators=[Name(id='temp_mouse_handlers_dict', ctx=Load())]), body=[Assign(targets=[Name(id='temp_mouse_row', ctx=Store())], value=Subscript(value=Name(id='temp_mouse_handlers_dict', ctx=Load()), slice=BinOp(left=Name(id='y', ctx=Load()), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='vertical_scroll', ctx=Load())), ctx=Load())), Assign(targets=[Name(id='mouse_row', ctx=Store())], value=Subscript(value=Name(id='mouse_handlers_dict', ctx=Load()), slice=BinOp(left=Name(id='y', ctx=Load()), op=Add(), right=Name(id='ypos', ctx=Load())), ctx=Load())), For(target=Name(id='x', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='virtual_width', ctx=Load())], keywords=[]), body=[If(test=Compare(left=Name(id='x', ctx=Load()), ops=[In()], comparators=[Name(id='temp_mouse_row', ctx=Load())]), body=[Assign(targets=[Subscript(value=Name(id='mouse_row', ctx=Load()), slice=BinOp(left=Name(id='x', ctx=Load()), op=Add(), right=Name(id='xpos', ctx=Load())), ctx=Store())], value=Call(func=Name(id='wrap_mouse_handler', ctx=Load()), args=[Subscript(value=Name(id='temp_mouse_row', ctx=Load()), slice=Name(id='x', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_copy_over_write_positions', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='screen', annotation=Name(id='Screen', ctx=Load())), arg(arg='temp_screen', annotation=Name(id='Screen', ctx=Load())), arg(arg='write_position', annotation=Name(id='WritePosition', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Copy over window write positions.\n        ')), Assign(targets=[Name(id='ypos', ctx=Store())], value=Attribute(value=Name(id='write_position', ctx=Load()), attr='ypos', ctx=Load())), Assign(targets=[Name(id='xpos', ctx=Store())], value=Attribute(value=Name(id='write_position', ctx=Load()), attr='xpos', ctx=Load())), For(target=Tuple(elts=[Name(id='win', ctx=Store()), Name(id='write_pos', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='temp_screen', ctx=Load()), attr='visible_windows_to_write_positions', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='screen', ctx=Load()), attr='visible_windows_to_write_positions', ctx=Load()), slice=Name(id='win', ctx=Load()), ctx=Store())], value=Call(func=Name(id='WritePosition', ctx=Load()), args=[], keywords=[keyword(arg='xpos', value=BinOp(left=Attribute(value=Name(id='write_pos', ctx=Load()), attr='xpos', ctx=Load()), op=Add(), right=Name(id='xpos', ctx=Load()))), keyword(arg='ypos', value=BinOp(left=BinOp(left=Attribute(value=Name(id='write_pos', ctx=Load()), attr='ypos', ctx=Load()), op=Add(), right=Name(id='ypos', ctx=Load())), op=Sub(), right=Attribute(value=Name(id='self', ctx=Load()), attr='vertical_scroll', ctx=Load()))), keyword(arg='height', value=Attribute(value=Name(id='write_pos', ctx=Load()), attr='height', ctx=Load())), keyword(arg='width', value=Attribute(value=Name(id='write_pos', ctx=Load()), attr='width', ctx=Load()))]))], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='is_modal', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='content', ctx=Load()), attr='is_modal', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Name(id='bool', ctx=Load())), FunctionDef(name='get_key_bindings', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='content', ctx=Load()), attr='get_key_bindings', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=BinOp(left=Name(id='KeyBindingsBase', ctx=Load()), op=BitOr(), right=Constant(value=None))), FunctionDef(name='get_children', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=List(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='content', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='list', ctx=Load()), slice=Name(id='Container', ctx=Load()), ctx=Load())), FunctionDef(name='_make_window_visible', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='visible_height', annotation=Name(id='int', ctx=Load())), arg(arg='virtual_height', annotation=Name(id='int', ctx=Load())), arg(arg='visible_win_write_pos', annotation=Name(id='WritePosition', ctx=Load())), arg(arg='cursor_position', annotation=BinOp(left=Name(id='Point', ctx=Load()), op=BitOr(), right=Constant(value=None)))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Scroll the scrollable pane, so that this window becomes visible.\n\n        :param visible_height: Height of this `ScrollablePane` that is rendered.\n        :param virtual_height: Height of the virtual, temp screen.\n        :param visible_win_write_pos: `WritePosition` of the nested window on the\n            temp screen.\n        :param cursor_position: The location of the cursor position of this\n            window on the temp screen.\n        ')), Assign(targets=[Name(id='min_scroll', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='max_scroll', ctx=Store())], value=BinOp(left=Name(id='virtual_height', ctx=Load()), op=Sub(), right=Name(id='visible_height', ctx=Load()))), If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='keep_cursor_visible', ctx=Load()), args=[], keywords=[]), body=[If(test=Compare(left=Name(id='cursor_position', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='offsets', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='scroll_offsets', ctx=Load())), Assign(targets=[Name(id='cpos_min_scroll', ctx=Store())], value=BinOp(left=BinOp(left=BinOp(left=Attribute(value=Name(id='cursor_position', ctx=Load()), attr='y', ctx=Load()), op=Sub(), right=Name(id='visible_height', ctx=Load())), op=Add(), right=Constant(value=1)), op=Add(), right=Attribute(value=Name(id='offsets', ctx=Load()), attr='bottom', ctx=Load()))), Assign(targets=[Name(id='cpos_max_scroll', ctx=Store())], value=BinOp(left=Attribute(value=Name(id='cursor_position', ctx=Load()), attr='y', ctx=Load()), op=Sub(), right=Attribute(value=Name(id='offsets', ctx=Load()), attr='top', ctx=Load()))), Assign(targets=[Name(id='min_scroll', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Name(id='min_scroll', ctx=Load()), Name(id='cpos_min_scroll', ctx=Load())], keywords=[])), Assign(targets=[Name(id='max_scroll', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Constant(value=0), Call(func=Name(id='min', ctx=Load()), args=[Name(id='max_scroll', ctx=Load()), Name(id='cpos_max_scroll', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[]), If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='keep_focused_window_visible', ctx=Load()), args=[], keywords=[]), body=[If(test=Compare(left=Attribute(value=Name(id='visible_win_write_pos', ctx=Load()), attr='height', ctx=Load()), ops=[LtE()], comparators=[Name(id='visible_height', ctx=Load())]), body=[Assign(targets=[Name(id='window_min_scroll', ctx=Store())], value=BinOp(left=BinOp(left=Attribute(value=Name(id='visible_win_write_pos', ctx=Load()), attr='ypos', ctx=Load()), op=Add(), right=Attribute(value=Name(id='visible_win_write_pos', ctx=Load()), attr='height', ctx=Load())), op=Sub(), right=Name(id='visible_height', ctx=Load()))), Assign(targets=[Name(id='window_max_scroll', ctx=Store())], value=Attribute(value=Name(id='visible_win_write_pos', ctx=Load()), attr='ypos', ctx=Load()))], orelse=[Assign(targets=[Name(id='window_min_scroll', ctx=Store())], value=Attribute(value=Name(id='visible_win_write_pos', ctx=Load()), attr='ypos', ctx=Load())), Assign(targets=[Name(id='window_max_scroll', ctx=Store())], value=BinOp(left=BinOp(left=Attribute(value=Name(id='visible_win_write_pos', ctx=Load()), attr='ypos', ctx=Load()), op=Add(), right=Attribute(value=Name(id='visible_win_write_pos', ctx=Load()), attr='height', ctx=Load())), op=Sub(), right=Name(id='visible_height', ctx=Load())))]), Assign(targets=[Name(id='min_scroll', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Name(id='min_scroll', ctx=Load()), Name(id='window_min_scroll', ctx=Load())], keywords=[])), Assign(targets=[Name(id='max_scroll', ctx=Store())], value=Call(func=Name(id='min', ctx=Load()), args=[Name(id='max_scroll', ctx=Load()), Name(id='window_max_scroll', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='min_scroll', ctx=Load()), ops=[Gt()], comparators=[Name(id='max_scroll', ctx=Load())]), body=[Assign(targets=[Name(id='min_scroll', ctx=Store())], value=Name(id='max_scroll', ctx=Load()))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='vertical_scroll', ctx=Load()), ops=[Gt()], comparators=[Name(id='max_scroll', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='vertical_scroll', ctx=Store())], value=Name(id='max_scroll', ctx=Load()))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='vertical_scroll', ctx=Load()), ops=[Lt()], comparators=[Name(id='min_scroll', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='vertical_scroll', ctx=Store())], value=Name(id='min_scroll', ctx=Load()))], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_draw_scrollbar', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='write_position', annotation=Name(id='WritePosition', ctx=Load())), arg(arg='content_height', annotation=Name(id='int', ctx=Load())), arg(arg='screen', annotation=Name(id='Screen', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Draw the scrollbar on the screen.\n\n        Note: There is some code duplication with the `ScrollbarMargin`\n              implementation.\n        ')), Assign(targets=[Name(id='window_height', ctx=Store())], value=Attribute(value=Name(id='write_position', ctx=Load()), attr='height', ctx=Load())), Assign(targets=[Name(id='display_arrows', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='display_arrows', ctx=Load()), args=[], keywords=[])), If(test=Name(id='display_arrows', ctx=Load()), body=[AugAssign(target=Name(id='window_height', ctx=Store()), op=Sub(), value=Constant(value=2))], orelse=[]), Try(body=[Assign(targets=[Name(id='fraction_visible', ctx=Store())], value=BinOp(left=Attribute(value=Name(id='write_position', ctx=Load()), attr='height', ctx=Load()), op=Div(), right=Call(func=Name(id='float', ctx=Load()), args=[Name(id='content_height', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='fraction_above', ctx=Store())], value=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='vertical_scroll', ctx=Load()), op=Div(), right=Call(func=Name(id='float', ctx=Load()), args=[Name(id='content_height', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='scrollbar_height', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Call(func=Name(id='min', ctx=Load()), args=[Name(id='window_height', ctx=Load()), Call(func=Name(id='max', ctx=Load()), args=[Constant(value=1), BinOp(left=Name(id='window_height', ctx=Load()), op=Mult(), right=Name(id='fraction_visible', ctx=Load()))], keywords=[])], keywords=[])], keywords=[])), Assign(targets=[Name(id='scrollbar_top', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[BinOp(left=Name(id='window_height', ctx=Load()), op=Mult(), right=Name(id='fraction_above', ctx=Load()))], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ZeroDivisionError', ctx=Load()), body=[Return()])], orelse=[FunctionDef(name='is_scroll_button', args=arguments(posonlyargs=[], args=[arg(arg='row', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='True if we should display a button on this row.')), Return(value=Compare(left=Name(id='scrollbar_top', ctx=Load()), ops=[LtE(), LtE()], comparators=[Name(id='row', ctx=Load()), BinOp(left=Name(id='scrollbar_top', ctx=Load()), op=Add(), right=Name(id='scrollbar_height', ctx=Load()))]))], decorator_list=[], returns=Name(id='bool', ctx=Load())), Assign(targets=[Name(id='xpos', ctx=Store())], value=BinOp(left=BinOp(left=Attribute(value=Name(id='write_position', ctx=Load()), attr='xpos', ctx=Load()), op=Add(), right=Attribute(value=Name(id='write_position', ctx=Load()), attr='width', ctx=Load())), op=Sub(), right=Constant(value=1))), Assign(targets=[Name(id='ypos', ctx=Store())], value=Attribute(value=Name(id='write_position', ctx=Load()), attr='ypos', ctx=Load())), Assign(targets=[Name(id='data_buffer', ctx=Store())], value=Attribute(value=Name(id='screen', ctx=Load()), attr='data_buffer', ctx=Load())), If(test=Name(id='display_arrows', ctx=Load()), body=[Assign(targets=[Subscript(value=Subscript(value=Name(id='data_buffer', ctx=Load()), slice=Name(id='ypos', ctx=Load()), ctx=Load()), slice=Name(id='xpos', ctx=Load()), ctx=Store())], value=Call(func=Name(id='Char', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='up_arrow_symbol', ctx=Load()), Constant(value='class:scrollbar.arrow')], keywords=[])), AugAssign(target=Name(id='ypos', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[]), Assign(targets=[Name(id='scrollbar_background', ctx=Store())], value=Constant(value='class:scrollbar.background')), Assign(targets=[Name(id='scrollbar_background_start', ctx=Store())], value=Constant(value='class:scrollbar.background,scrollbar.start')), Assign(targets=[Name(id='scrollbar_button', ctx=Store())], value=Constant(value='class:scrollbar.button')), Assign(targets=[Name(id='scrollbar_button_end', ctx=Store())], value=Constant(value='class:scrollbar.button,scrollbar.end')), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='window_height', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='style', ctx=Store())], value=Constant(value='')), If(test=Call(func=Name(id='is_scroll_button', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='is_scroll_button', ctx=Load()), args=[BinOp(left=Name(id='i', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[])), body=[Assign(targets=[Name(id='style', ctx=Store())], value=Name(id='scrollbar_button_end', ctx=Load()))], orelse=[Assign(targets=[Name(id='style', ctx=Store())], value=Name(id='scrollbar_button', ctx=Load()))])], orelse=[If(test=Call(func=Name(id='is_scroll_button', ctx=Load()), args=[BinOp(left=Name(id='i', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[]), body=[Assign(targets=[Name(id='style', ctx=Store())], value=Name(id='scrollbar_background_start', ctx=Load()))], orelse=[Assign(targets=[Name(id='style', ctx=Store())], value=Name(id='scrollbar_background', ctx=Load()))])]), Assign(targets=[Subscript(value=Subscript(value=Name(id='data_buffer', ctx=Load()), slice=Name(id='ypos', ctx=Load()), ctx=Load()), slice=Name(id='xpos', ctx=Load()), ctx=Store())], value=Call(func=Name(id='Char', ctx=Load()), args=[Constant(value=' '), Name(id='style', ctx=Load())], keywords=[])), AugAssign(target=Name(id='ypos', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[]), If(test=Name(id='display_arrows', ctx=Load()), body=[Assign(targets=[Subscript(value=Subscript(value=Name(id='data_buffer', ctx=Load()), slice=Name(id='ypos', ctx=Load()), ctx=Load()), slice=Name(id='xpos', ctx=Load()), ctx=Store())], value=Call(func=Name(id='Char', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='down_arrow_symbol', ctx=Load()), Constant(value='class:scrollbar.arrow')], keywords=[]))], orelse=[])], finalbody=[])], decorator_list=[], returns=Constant(value=None))], decorator_list=[])], type_ignores=[])