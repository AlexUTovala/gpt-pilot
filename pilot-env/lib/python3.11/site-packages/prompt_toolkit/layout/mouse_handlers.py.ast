Module(body=[ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), ImportFrom(module='collections', names=[alias(name='defaultdict')], level=0), ImportFrom(module='typing', names=[alias(name='TYPE_CHECKING'), alias(name='Callable')], level=0), ImportFrom(module='prompt_toolkit.mouse_events', names=[alias(name='MouseEvent')], level=0), If(test=Name(id='TYPE_CHECKING', ctx=Load()), body=[ImportFrom(module='prompt_toolkit.key_binding.key_bindings', names=[alias(name='NotImplementedOrNone')], level=0)], orelse=[]), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='MouseHandler'), Constant(value='MouseHandlers')], ctx=Load())), Assign(targets=[Name(id='MouseHandler', ctx=Store())], value=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='MouseEvent', ctx=Load())], ctx=Load()), Constant(value='NotImplementedOrNone')], ctx=Load()), ctx=Load())), ClassDef(name='MouseHandlers', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    Two dimensional raster of callbacks for mouse events.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='dummy_callback', args=arguments(posonlyargs=[], args=[arg(arg='mouse_event', annotation=Name(id='MouseEvent', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n            :param mouse_event: `MouseEvent` instance.\n            ')), Return(value=Name(id='NotImplemented', ctx=Load()))], decorator_list=[], returns=Name(id='NotImplementedOrNone', ctx=Load())), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='mouse_handlers', ctx=Store()), annotation=Subscript(value=Name(id='defaultdict', ctx=Load()), slice=Tuple(elts=[Name(id='int', ctx=Load()), Subscript(value=Name(id='defaultdict', ctx=Load()), slice=Tuple(elts=[Name(id='int', ctx=Load()), Name(id='MouseHandler', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()), value=Call(func=Name(id='defaultdict', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='defaultdict', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Name(id='dummy_callback', ctx=Load()))], keywords=[]))], keywords=[]), simple=0)], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='set_mouse_handler_for_range', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='x_min', annotation=Name(id='int', ctx=Load())), arg(arg='x_max', annotation=Name(id='int', ctx=Load())), arg(arg='y_min', annotation=Name(id='int', ctx=Load())), arg(arg='y_max', annotation=Name(id='int', ctx=Load())), arg(arg='handler', annotation=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='MouseEvent', ctx=Load())], ctx=Load()), Name(id='NotImplementedOrNone', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Set mouse handler for a region.\n        ')), For(target=Name(id='y', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='y_min', ctx=Load()), Name(id='y_max', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='row', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='mouse_handlers', ctx=Load()), slice=Name(id='y', ctx=Load()), ctx=Load())), For(target=Name(id='x', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='x_min', ctx=Load()), Name(id='x_max', ctx=Load())], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='row', ctx=Load()), slice=Name(id='x', ctx=Load()), ctx=Store())], value=Name(id='handler', ctx=Load()))], orelse=[])], orelse=[])], decorator_list=[], returns=Constant(value=None))], decorator_list=[])], type_ignores=[])