Module(body=[ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), ImportFrom(module='string', names=[alias(name='Formatter')], level=0), ImportFrom(module='typing', names=[alias(name='Generator')], level=0), ImportFrom(module='prompt_toolkit.output.vt100', names=[alias(name='BG_ANSI_COLORS'), alias(name='FG_ANSI_COLORS')], level=0), ImportFrom(module='prompt_toolkit.output.vt100', names=[alias(name='_256_colors', asname='_256_colors_table')], level=0), ImportFrom(module='base', names=[alias(name='StyleAndTextTuples')], level=1), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='ANSI'), Constant(value='ansi_escape')], ctx=Load())), ClassDef(name='ANSI', bases=[], keywords=[], body=[Expr(value=Constant(value="\n    ANSI formatted text.\n    Take something ANSI escaped text, for use as a formatted string. E.g.\n\n    ::\n\n        ANSI('\\x1b[31mhello \\x1b[32mworld')\n\n    Characters between ``\\001`` and ``\\002`` are supposed to have a zero width\n    when printed, but these are literally sent to the terminal output. This can\n    be used for instance, for inserting Final Term prompt commands.  They will\n    be translated into a prompt_toolkit '[ZeroWidthEscape]' fragment.\n    ")), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='value', ctx=Store())], value=Name(id='value', ctx=Load())), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_formatted_text', ctx=Store()), annotation=Name(id='StyleAndTextTuples', ctx=Load()), value=List(elts=[], ctx=Load()), simple=0), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_color', ctx=Store()), annotation=BinOp(left=Name(id='str', ctx=Load()), op=BitOr(), right=Constant(value=None)), value=Constant(value=None), simple=0), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_bgcolor', ctx=Store()), annotation=BinOp(left=Name(id='str', ctx=Load()), op=BitOr(), right=Constant(value=None)), value=Constant(value=None), simple=0), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_bold', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_underline', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_strike', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_italic', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_blink', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_reverse', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_hidden', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='parser', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_parse_corot', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='send', ctx=Load()), args=[Constant(value=None)], keywords=[])), For(target=Name(id='c', ctx=Store()), iter=Name(id='value', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='send', ctx=Load()), args=[Name(id='c', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_parse_corot', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Coroutine that parses the ANSI escape sequences.\n        ')), Assign(targets=[Name(id='style', ctx=Store())], value=Constant(value='')), Assign(targets=[Name(id='formatted_text', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_formatted_text', ctx=Load())), While(test=Constant(value=True), body=[Assign(targets=[Name(id='csi', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='c', ctx=Store())], value=Yield()), If(test=Compare(left=Name(id='c', ctx=Load()), ops=[Eq()], comparators=[Constant(value='\x01')]), body=[Assign(targets=[Name(id='escaped_text', ctx=Store())], value=Constant(value='')), While(test=Compare(left=Name(id='c', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='\x02')]), body=[Assign(targets=[Name(id='c', ctx=Store())], value=Yield()), If(test=Compare(left=Name(id='c', ctx=Load()), ops=[Eq()], comparators=[Constant(value='\x02')]), body=[Expr(value=Call(func=Attribute(value=Name(id='formatted_text', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Constant(value='[ZeroWidthEscape]'), Name(id='escaped_text', ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='c', ctx=Store())], value=Yield()), Break()], orelse=[AugAssign(target=Name(id='escaped_text', ctx=Store()), op=Add(), value=Name(id='c', ctx=Load()))])], orelse=[])], orelse=[]), If(test=Compare(left=Name(id='c', ctx=Load()), ops=[Eq()], comparators=[Constant(value='\x1b')]), body=[Assign(targets=[Name(id='square_bracket', ctx=Store())], value=Yield()), If(test=Compare(left=Name(id='square_bracket', ctx=Load()), ops=[Eq()], comparators=[Constant(value='[')]), body=[Assign(targets=[Name(id='csi', ctx=Store())], value=Constant(value=True))], orelse=[Continue()])], orelse=[If(test=Compare(left=Name(id='c', ctx=Load()), ops=[Eq()], comparators=[Constant(value='\x9b')]), body=[Assign(targets=[Name(id='csi', ctx=Store())], value=Constant(value=True))], orelse=[])]), If(test=Name(id='csi', ctx=Load()), body=[Assign(targets=[Name(id='current', ctx=Store())], value=Constant(value='')), Assign(targets=[Name(id='params', ctx=Store())], value=List(elts=[], ctx=Load())), While(test=Constant(value=True), body=[Assign(targets=[Name(id='char', ctx=Store())], value=Yield()), If(test=Call(func=Attribute(value=Name(id='char', ctx=Load()), attr='isdigit', ctx=Load()), args=[], keywords=[]), body=[AugAssign(target=Name(id='current', ctx=Store()), op=Add(), value=Name(id='char', ctx=Load()))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='params', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='min', ctx=Load()), args=[Call(func=Name(id='int', ctx=Load()), args=[BoolOp(op=Or(), values=[Name(id='current', ctx=Load()), Constant(value=0)])], keywords=[]), Constant(value=9999)], keywords=[])], keywords=[])), If(test=Compare(left=Name(id='char', ctx=Load()), ops=[Eq()], comparators=[Constant(value=';')]), body=[Assign(targets=[Name(id='current', ctx=Store())], value=Constant(value=''))], orelse=[If(test=Compare(left=Name(id='char', ctx=Load()), ops=[Eq()], comparators=[Constant(value='m')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_select_graphic_rendition', ctx=Load()), args=[Name(id='params', ctx=Load())], keywords=[])), Assign(targets=[Name(id='style', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_style_string', ctx=Load()), args=[], keywords=[])), Break()], orelse=[If(test=Compare(left=Name(id='char', ctx=Load()), ops=[Eq()], comparators=[Constant(value='C')]), body=[For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='formatted_text', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='style', ctx=Load()), Constant(value=' ')], ctx=Load())], keywords=[]))], orelse=[]), Break()], orelse=[Break()])])])])], orelse=[])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='formatted_text', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='style', ctx=Load()), Name(id='c', ctx=Load())], ctx=Load())], keywords=[]))])], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Generator', ctx=Load()), slice=Tuple(elts=[Constant(value=None), Name(id='str', ctx=Load()), Constant(value=None)], ctx=Load()), ctx=Load())), FunctionDef(name='_select_graphic_rendition', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='attrs', annotation=Subscript(value=Name(id='list', ctx=Load()), slice=Name(id='int', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Taken a list of graphics attributes and apply changes.\n        ')), If(test=UnaryOp(op=Not(), operand=Name(id='attrs', ctx=Load())), body=[Assign(targets=[Name(id='attrs', ctx=Store())], value=List(elts=[Constant(value=0)], ctx=Load()))], orelse=[Assign(targets=[Name(id='attrs', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Subscript(value=Name(id='attrs', ctx=Load()), slice=Slice(step=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load())], keywords=[]))]), While(test=Name(id='attrs', ctx=Load()), body=[Assign(targets=[Name(id='attr', ctx=Store())], value=Call(func=Attribute(value=Name(id='attrs', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[In()], comparators=[Name(id='_fg_colors', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_color', ctx=Store())], value=Subscript(value=Name(id='_fg_colors', ctx=Load()), slice=Name(id='attr', ctx=Load()), ctx=Load()))], orelse=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[In()], comparators=[Name(id='_bg_colors', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_bgcolor', ctx=Store())], value=Subscript(value=Name(id='_bg_colors', ctx=Load()), slice=Name(id='attr', ctx=Load()), ctx=Load()))], orelse=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_bold', ctx=Store())], value=Constant(value=True))], orelse=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value=3)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_italic', ctx=Store())], value=Constant(value=True))], orelse=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value=4)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_underline', ctx=Store())], value=Constant(value=True))], orelse=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value=5)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_blink', ctx=Store())], value=Constant(value=True))], orelse=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value=6)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_blink', ctx=Store())], value=Constant(value=True))], orelse=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value=7)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_reverse', ctx=Store())], value=Constant(value=True))], orelse=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value=8)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_hidden', ctx=Store())], value=Constant(value=True))], orelse=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value=9)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_strike', ctx=Store())], value=Constant(value=True))], orelse=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value=22)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_bold', ctx=Store())], value=Constant(value=False))], orelse=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value=23)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_italic', ctx=Store())], value=Constant(value=False))], orelse=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value=24)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_underline', ctx=Store())], value=Constant(value=False))], orelse=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value=25)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_blink', ctx=Store())], value=Constant(value=False))], orelse=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value=27)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_reverse', ctx=Store())], value=Constant(value=False))], orelse=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value=28)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_hidden', ctx=Store())], value=Constant(value=False))], orelse=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value=29)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_strike', ctx=Store())], value=Constant(value=False))], orelse=[If(test=UnaryOp(op=Not(), operand=Name(id='attr', ctx=Load())), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_color', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_bgcolor', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_bold', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_underline', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_strike', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_italic', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_blink', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_reverse', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_hidden', ctx=Store())], value=Constant(value=False))], orelse=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='attr', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value=38), Constant(value=48)], ctx=Load())]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='attrs', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=1)])]), body=[Assign(targets=[Name(id='n', ctx=Store())], value=Call(func=Attribute(value=Name(id='attrs', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='n', ctx=Load()), ops=[Eq()], comparators=[Constant(value=5)]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='attrs', ctx=Load())], keywords=[]), ops=[GtE()], comparators=[Constant(value=1)])]), body=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value=38)]), body=[Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='attrs', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_color', ctx=Store())], value=Call(func=Attribute(value=Name(id='_256_colors', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='m', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value=48)]), body=[Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='attrs', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_bgcolor', ctx=Store())], value=Call(func=Attribute(value=Name(id='_256_colors', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='m', ctx=Load())], keywords=[]))], orelse=[])])], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='n', ctx=Load()), ops=[Eq()], comparators=[Constant(value=2)]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='attrs', ctx=Load())], keywords=[]), ops=[GtE()], comparators=[Constant(value=3)])]), body=[Try(body=[Assign(targets=[Name(id='color_str', ctx=Store())], value=Call(func=Attribute(value=Constant(value='#{:02x}{:02x}{:02x}'), attr='format', ctx=Load()), args=[Call(func=Attribute(value=Name(id='attrs', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='attrs', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='attrs', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[])], keywords=[]))], handlers=[ExceptHandler(type=Name(id='IndexError', ctx=Load()), body=[Pass()])], orelse=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value=38)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_color', ctx=Store())], value=Name(id='color_str', ctx=Load()))], orelse=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value=48)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_bgcolor', ctx=Store())], value=Name(id='color_str', ctx=Load()))], orelse=[])])], finalbody=[])], orelse=[])], orelse=[])])])])])])])])])])])])])])])])])])])], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_create_style_string', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Turn current style flags into a string for usage in a formatted text.\n        ')), Assign(targets=[Name(id='result', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_color', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_color', ctx=Load())], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_bgcolor', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Constant(value='bg:'), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_bgcolor', ctx=Load()))], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_bold', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='bold')], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_underline', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='underline')], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_strike', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='strike')], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_italic', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='italic')], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_blink', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='blink')], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_reverse', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='reverse')], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_hidden', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='hidden')], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Constant(value=' '), attr='join', ctx=Load()), args=[Name(id='result', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=JoinedStr(values=[Constant(value='ANSI('), FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='value', ctx=Load()), conversion=114), Constant(value=')')]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='__pt_formatted_text__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_formatted_text', ctx=Load()))], decorator_list=[], returns=Name(id='StyleAndTextTuples', ctx=Load())), FunctionDef(name='format', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args', annotation=Name(id='str', ctx=Load())), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs', annotation=Name(id='str', ctx=Load())), defaults=[]), body=[Expr(value=Constant(value='\n        Like `str.format`, but make sure that the arguments are properly\n        escaped. (No ANSI escapes can be injected.)\n        ')), Return(value=Call(func=Name(id='ANSI', ctx=Load()), args=[Call(func=Attribute(value=Name(id='FORMATTER', ctx=Load()), attr='vformat', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='value', ctx=Load()), Name(id='args', ctx=Load()), Name(id='kwargs', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[], returns=Name(id='ANSI', ctx=Load())), FunctionDef(name='__mod__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        ANSI('<b>%s</b>') % value\n        ")), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='tuple', ctx=Load())], keywords=[])), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Tuple(elts=[Name(id='value', ctx=Load())], ctx=Load()))], orelse=[]), Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='tuple', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='ansi_escape', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Name(id='value', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), Return(value=Call(func=Name(id='ANSI', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='value', ctx=Load()), op=Mod(), right=Name(id='value', ctx=Load()))], keywords=[]))], decorator_list=[], returns=Name(id='ANSI', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='_fg_colors', ctx=Store())], value=DictComp(key=Name(id='v', ctx=Load()), value=Name(id='k', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='FG_ANSI_COLORS', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])), Assign(targets=[Name(id='_bg_colors', ctx=Store())], value=DictComp(key=Name(id='v', ctx=Load()), value=Name(id='k', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='BG_ANSI_COLORS', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])), Assign(targets=[Name(id='_256_colors', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Tuple(elts=[Name(id='i', ctx=Store()), Tuple(elts=[Name(id='r', ctx=Store()), Name(id='g', ctx=Store()), Name(id='b', ctx=Store())], ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Attribute(value=Name(id='_256_colors_table', ctx=Load()), attr='colors', ctx=Load())], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='_256_colors', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Store())], value=JoinedStr(values=[Constant(value='#'), FormattedValue(value=Name(id='r', ctx=Load()), conversion=-1, format_spec=JoinedStr(values=[Constant(value='02x')])), FormattedValue(value=Name(id='g', ctx=Load()), conversion=-1, format_spec=JoinedStr(values=[Constant(value='02x')])), FormattedValue(value=Name(id='b', ctx=Load()), conversion=-1, format_spec=JoinedStr(values=[Constant(value='02x')]))]))], orelse=[]), FunctionDef(name='ansi_escape', args=arguments(posonlyargs=[], args=[arg(arg='text', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Replace characters with a special meaning.\n    ')), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[]), attr='replace', ctx=Load()), args=[Constant(value='\x1b'), Constant(value='?')], keywords=[]), attr='replace', ctx=Load()), args=[Constant(value='\x08'), Constant(value='?')], keywords=[]))], decorator_list=[], returns=Name(id='str', ctx=Load())), ClassDef(name='ANSIFormatter', bases=[Name(id='Formatter', ctx=Load())], keywords=[], body=[FunctionDef(name='format_field', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value', annotation=Name(id='object', ctx=Load())), arg(arg='format_spec', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='ansi_escape', ctx=Load()), args=[Call(func=Name(id='format', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='format_spec', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[], returns=Name(id='str', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='FORMATTER', ctx=Store())], value=Call(func=Name(id='ANSIFormatter', ctx=Load()), args=[], keywords=[]))], type_ignores=[])