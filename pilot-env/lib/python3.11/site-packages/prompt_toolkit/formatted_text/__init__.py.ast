Module(body=[Expr(value=Constant(value='\nMany places in prompt_toolkit can take either plain text, or formatted text.\nFor instance the :func:`~prompt_toolkit.shortcuts.prompt` function takes either\nplain text or formatted text for the prompt. The\n:class:`~prompt_toolkit.layout.FormattedTextControl` can also take either plain\ntext or formatted text.\n\nIn any case, there is an input that can either be just plain text (a string),\nan :class:`.HTML` object, an :class:`.ANSI` object or a sequence of\n`(style_string, text)` tuples. The :func:`.to_formatted_text` conversion\nfunction takes any of these and turns all of them into such a tuple sequence.\n')), ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), ImportFrom(module='ansi', names=[alias(name='ANSI')], level=1), ImportFrom(module='base', names=[alias(name='AnyFormattedText'), alias(name='FormattedText'), alias(name='StyleAndTextTuples'), alias(name='Template'), alias(name='is_formatted_text'), alias(name='merge_formatted_text'), alias(name='to_formatted_text')], level=1), ImportFrom(module='html', names=[alias(name='HTML')], level=1), ImportFrom(module='pygments', names=[alias(name='PygmentsTokens')], level=1), ImportFrom(module='utils', names=[alias(name='fragment_list_len'), alias(name='fragment_list_to_text'), alias(name='fragment_list_width'), alias(name='split_lines'), alias(name='to_plain_text')], level=1), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='AnyFormattedText'), Constant(value='to_formatted_text'), Constant(value='is_formatted_text'), Constant(value='Template'), Constant(value='merge_formatted_text'), Constant(value='FormattedText'), Constant(value='StyleAndTextTuples'), Constant(value='HTML'), Constant(value='ANSI'), Constant(value='PygmentsTokens'), Constant(value='fragment_list_len'), Constant(value='fragment_list_width'), Constant(value='fragment_list_to_text'), Constant(value='split_lines'), Constant(value='to_plain_text')], ctx=Load()))], type_ignores=[])