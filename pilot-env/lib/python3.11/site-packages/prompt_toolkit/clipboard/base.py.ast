Module(body=[Expr(value=Constant(value='\nClipboard for command line interface.\n')), ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), ImportFrom(module='abc', names=[alias(name='ABCMeta'), alias(name='abstractmethod')], level=0), ImportFrom(module='typing', names=[alias(name='Callable')], level=0), ImportFrom(module='prompt_toolkit.selection', names=[alias(name='SelectionType')], level=0), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='Clipboard'), Constant(value='ClipboardData'), Constant(value='DummyClipboard'), Constant(value='DynamicClipboard')], ctx=Load())), ClassDef(name='ClipboardData', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    Text on the clipboard.\n\n    :param text: string\n    :param type: :class:`~prompt_toolkit.selection.SelectionType`\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='text', annotation=Name(id='str', ctx=Load())), arg(arg='type', annotation=Name(id='SelectionType', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=''), Attribute(value=Name(id='SelectionType', ctx=Load()), attr='CHARACTERS', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='text', ctx=Store())], value=Name(id='text', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='type', ctx=Store())], value=Name(id='type', ctx=Load()))], decorator_list=[], returns=Constant(value=None))], decorator_list=[]), ClassDef(name='Clipboard', bases=[], keywords=[keyword(arg='metaclass', value=Name(id='ABCMeta', ctx=Load()))], body=[Expr(value=Constant(value='\n    Abstract baseclass for clipboards.\n    (An implementation can be in memory, it can share the X11 or Windows\n    keyboard, or can be persistent.)\n    ')), FunctionDef(name='set_data', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Name(id='ClipboardData', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Set data to the clipboard.\n\n        :param data: :class:`~.ClipboardData` instance.\n        '))], decorator_list=[Name(id='abstractmethod', ctx=Load())], returns=Constant(value=None)), FunctionDef(name='set_text', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='text', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Shortcut for setting plain text on clipboard.\n        ')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='set_data', ctx=Load()), args=[Call(func=Name(id='ClipboardData', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='rotate', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        For Emacs mode, rotate the kill ring.\n        '))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='get_data', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Return clipboard data.\n        '))], decorator_list=[Name(id='abstractmethod', ctx=Load())], returns=Name(id='ClipboardData', ctx=Load()))], decorator_list=[]), ClassDef(name='DummyClipboard', bases=[Name(id='Clipboard', ctx=Load())], keywords=[], body=[Expr(value=Constant(value="\n    Clipboard implementation that doesn't remember anything.\n    ")), FunctionDef(name='set_data', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Name(id='ClipboardData', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='set_text', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='text', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='rotate', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='get_data', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='ClipboardData', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Name(id='ClipboardData', ctx=Load()))], decorator_list=[]), ClassDef(name='DynamicClipboard', bases=[Name(id='Clipboard', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    Clipboard class that can dynamically returns any Clipboard.\n\n    :param get_clipboard: Callable that returns a :class:`.Clipboard` instance.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='get_clipboard', annotation=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[], ctx=Load()), BinOp(left=Name(id='Clipboard', ctx=Load()), op=BitOr(), right=Constant(value=None))], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='get_clipboard', ctx=Store())], value=Name(id='get_clipboard', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_clipboard', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BoolOp(op=Or(), values=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_clipboard', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='DummyClipboard', ctx=Load()), args=[], keywords=[])]))], decorator_list=[], returns=Name(id='Clipboard', ctx=Load())), FunctionDef(name='set_data', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Name(id='ClipboardData', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_clipboard', ctx=Load()), args=[], keywords=[]), attr='set_data', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='set_text', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='text', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_clipboard', ctx=Load()), args=[], keywords=[]), attr='set_text', ctx=Load()), args=[Name(id='text', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='rotate', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_clipboard', ctx=Load()), args=[], keywords=[]), attr='rotate', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='get_data', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_clipboard', ctx=Load()), args=[], keywords=[]), attr='get_data', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Name(id='ClipboardData', ctx=Load()))], decorator_list=[])], type_ignores=[])