Module(body=[ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), ImportFrom(module='typing', names=[alias(name='Callable')], level=0), ImportFrom(module='prompt_toolkit.formatted_text', names=[alias(name='AnyFormattedText')], level=0), ImportFrom(module='prompt_toolkit.input', names=[alias(name='DummyInput')], level=0), ImportFrom(module='prompt_toolkit.output', names=[alias(name='DummyOutput')], level=0), ImportFrom(module='application', names=[alias(name='Application')], level=1), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='DummyApplication')], ctx=Load())), ClassDef(name='DummyApplication', bases=[Subscript(value=Name(id='Application', ctx=Load()), slice=Constant(value=None), ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    When no :class:`.Application` is running,\n    :func:`.get_app` will run an instance of this :class:`.DummyApplication` instead.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(arg='output', value=Call(func=Name(id='DummyOutput', ctx=Load()), args=[], keywords=[])), keyword(arg='input', value=Call(func=Name(id='DummyInput', ctx=Load()), args=[], keywords=[]))]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='pre_run', annotation=BinOp(left=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[], ctx=Load()), Constant(value=None)], ctx=Load()), ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='set_exception_handler', annotation=Name(id='bool', ctx=Load())), arg(arg='handle_sigint', annotation=Name(id='bool', ctx=Load())), arg(arg='in_thread', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=True), Constant(value=True), Constant(value=False)]), body=[Raise(exc=Call(func=Name(id='NotImplementedError', ctx=Load()), args=[Constant(value='A DummyApplication is not supposed to run.')], keywords=[]))], decorator_list=[], returns=Constant(value=None)), AsyncFunctionDef(name='run_async', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='pre_run', annotation=BinOp(left=Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[], ctx=Load()), Constant(value=None)], ctx=Load()), ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='set_exception_handler', annotation=Name(id='bool', ctx=Load())), arg(arg='handle_sigint', annotation=Name(id='bool', ctx=Load())), arg(arg='slow_callback_duration', annotation=Name(id='float', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=True), Constant(value=True), Constant(value=0.5)]), body=[Raise(exc=Call(func=Name(id='NotImplementedError', ctx=Load()), args=[Constant(value='A DummyApplication is not supposed to run.')], keywords=[]))], decorator_list=[], returns=Constant(value=None)), AsyncFunctionDef(name='run_system_command', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='command', annotation=Name(id='str', ctx=Load())), arg(arg='wait_for_enter', annotation=Name(id='bool', ctx=Load())), arg(arg='display_before_text', annotation=Name(id='AnyFormattedText', ctx=Load())), arg(arg='wait_text', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True), Constant(value=''), Constant(value='')]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='suspend_to_background', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='suspend_group', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[], returns=Constant(value=None))], decorator_list=[])], type_ignores=[])