Module(body=[ImportFrom(module='bisect', names=[alias(name='bisect_left')], level=0), ImportFrom(module='bisect', names=[alias(name='bisect_right')], level=0), ImportFrom(module='contextlib', names=[alias(name='contextmanager')], level=0), ImportFrom(module='copy', names=[alias(name='deepcopy')], level=0), ImportFrom(module='functools', names=[alias(name='wraps')], level=0), ImportFrom(module='inspect', names=[alias(name='isclass')], level=0), Import(names=[alias(name='calendar')]), Import(names=[alias(name='collections')]), Import(names=[alias(name='datetime')]), Import(names=[alias(name='decimal')]), Import(names=[alias(name='hashlib')]), Import(names=[alias(name='itertools')]), Import(names=[alias(name='logging')]), Import(names=[alias(name='operator')]), Import(names=[alias(name='re')]), Import(names=[alias(name='socket')]), Import(names=[alias(name='struct')]), Import(names=[alias(name='sys')]), Import(names=[alias(name='threading')]), Import(names=[alias(name='time')]), Import(names=[alias(name='uuid')]), Import(names=[alias(name='warnings')]), Try(body=[ImportFrom(module='collections.abc', names=[alias(name='Mapping')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[ImportFrom(module='collections', names=[alias(name='Mapping')], level=0)])], orelse=[], finalbody=[]), Try(body=[ImportFrom(module='pysqlite3', names=[alias(name='dbapi2', asname='pysq3')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Try(body=[ImportFrom(module='pysqlite2', names=[alias(name='dbapi2', asname='pysq3')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Assign(targets=[Name(id='pysq3', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[])])], orelse=[], finalbody=[]), Try(body=[Import(names=[alias(name='sqlite3')])], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Assign(targets=[Name(id='sqlite3', ctx=Store())], value=Name(id='pysq3', ctx=Load()))])], orelse=[If(test=BoolOp(op=And(), values=[Name(id='pysq3', ctx=Load()), Compare(left=Attribute(value=Name(id='pysq3', ctx=Load()), attr='sqlite_version_info', ctx=Load()), ops=[GtE()], comparators=[Attribute(value=Name(id='sqlite3', ctx=Load()), attr='sqlite_version_info', ctx=Load())])]), body=[Assign(targets=[Name(id='sqlite3', ctx=Store())], value=Name(id='pysq3', ctx=Load()))], orelse=[])], finalbody=[]), Try(body=[ImportFrom(module='psycopg2cffi', names=[alias(name='compat')], level=0), Expr(value=Call(func=Attribute(value=Name(id='compat', ctx=Load()), attr='register', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[]), Try(body=[Import(names=[alias(name='psycopg2')]), ImportFrom(module='psycopg2', names=[alias(name='extensions', asname='pg_extensions')], level=0), Try(body=[ImportFrom(module='psycopg2', names=[alias(name='errors', asname='pg_errors')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Assign(targets=[Name(id='pg_errors', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[])], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Assign(targets=[Name(id='psycopg2', ctx=Store()), Name(id='pg_errors', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[]), Try(body=[ImportFrom(module='psycopg2.extras', names=[alias(name='register_uuid', asname='pg_register_uuid')], level=0), Expr(value=Call(func=Name(id='pg_register_uuid', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[]), Assign(targets=[Name(id='mysql_passwd', ctx=Store())], value=Constant(value=False)), Try(body=[Import(names=[alias(name='pymysql', asname='mysql')])], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Try(body=[Import(names=[alias(name='MySQLdb', asname='mysql')]), Assign(targets=[Name(id='mysql_passwd', ctx=Store())], value=Constant(value=True))], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Assign(targets=[Name(id='mysql', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[])])], orelse=[], finalbody=[]), Assign(targets=[Name(id='__version__', ctx=Store())], value=Constant(value='3.16.3')), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='AnyField'), Constant(value='AsIs'), Constant(value='AutoField'), Constant(value='BareField'), Constant(value='BigAutoField'), Constant(value='BigBitField'), Constant(value='BigIntegerField'), Constant(value='BinaryUUIDField'), Constant(value='BitField'), Constant(value='BlobField'), Constant(value='BooleanField'), Constant(value='Case'), Constant(value='Cast'), Constant(value='CharField'), Constant(value='Check'), Constant(value='chunked'), Constant(value='Column'), Constant(value='CompositeKey'), Constant(value='Context'), Constant(value='Database'), Constant(value='DatabaseError'), Constant(value='DatabaseProxy'), Constant(value='DataError'), Constant(value='DateField'), Constant(value='DateTimeField'), Constant(value='DecimalField'), Constant(value='DeferredForeignKey'), Constant(value='DeferredThroughModel'), Constant(value='DJANGO_MAP'), Constant(value='DoesNotExist'), Constant(value='DoubleField'), Constant(value='DQ'), Constant(value='EXCLUDED'), Constant(value='Field'), Constant(value='FixedCharField'), Constant(value='FloatField'), Constant(value='fn'), Constant(value='ForeignKeyField'), Constant(value='IdentityField'), Constant(value='ImproperlyConfigured'), Constant(value='Index'), Constant(value='IntegerField'), Constant(value='IntegrityError'), Constant(value='InterfaceError'), Constant(value='InternalError'), Constant(value='IPField'), Constant(value='JOIN'), Constant(value='ManyToManyField'), Constant(value='Model'), Constant(value='ModelIndex'), Constant(value='MySQLDatabase'), Constant(value='NotSupportedError'), Constant(value='OP'), Constant(value='OperationalError'), Constant(value='PostgresqlDatabase'), Constant(value='PrimaryKeyField'), Constant(value='prefetch'), Constant(value='PREFETCH_TYPE'), Constant(value='ProgrammingError'), Constant(value='Proxy'), Constant(value='QualifiedNames'), Constant(value='SchemaManager'), Constant(value='SmallIntegerField'), Constant(value='Select'), Constant(value='SQL'), Constant(value='SqliteDatabase'), Constant(value='Table'), Constant(value='TextField'), Constant(value='TimeField'), Constant(value='TimestampField'), Constant(value='Tuple'), Constant(value='UUIDField'), Constant(value='Value'), Constant(value='ValuesList'), Constant(value='Window')], ctx=Load())), Try(body=[ImportFrom(module='logging', names=[alias(name='NullHandler')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[ClassDef(name='NullHandler', bases=[Attribute(value=Name(id='logging', ctx=Load()), attr='Handler', ctx=Load())], keywords=[], body=[FunctionDef(name='emit', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='record')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[])], decorator_list=[])])], orelse=[], finalbody=[]), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Constant(value='peewee')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='addHandler', ctx=Load()), args=[Call(func=Name(id='NullHandler', ctx=Load()), args=[], keywords=[])], keywords=[])), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[Eq()], comparators=[Constant(value=2)]), body=[Assign(targets=[Name(id='text_type', ctx=Store())], value=Name(id='unicode', ctx=Load())), Assign(targets=[Name(id='bytes_type', ctx=Store())], value=Name(id='str', ctx=Load())), Assign(targets=[Name(id='buffer_type', ctx=Store())], value=Name(id='buffer', ctx=Load())), Assign(targets=[Name(id='izip_longest', ctx=Store())], value=Attribute(value=Name(id='itertools', ctx=Load()), attr='izip_longest', ctx=Load())), Assign(targets=[Name(id='callable_', ctx=Store())], value=Name(id='callable', ctx=Load())), Assign(targets=[Name(id='multi_types', ctx=Store())], value=Tuple(elts=[Name(id='list', ctx=Load()), Name(id='tuple', ctx=Load()), Name(id='frozenset', ctx=Load()), Name(id='set', ctx=Load())], ctx=Load())), Expr(value=Call(func=Name(id='exec', ctx=Load()), args=[Constant(value='def reraise(tp, value, tb=None): raise tp, value, tb')], keywords=[])), FunctionDef(name='print_', args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='s', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='\n')], keywords=[]))], decorator_list=[])], orelse=[Import(names=[alias(name='builtins')]), Try(body=[ImportFrom(module='collections.abc', names=[alias(name='Callable')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[ImportFrom(module='collections', names=[alias(name='Callable')], level=0)])], orelse=[], finalbody=[]), ImportFrom(module='functools', names=[alias(name='reduce')], level=0), Assign(targets=[Name(id='callable_', ctx=Store())], value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='c')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='c', ctx=Load()), Name(id='Callable', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='text_type', ctx=Store())], value=Name(id='str', ctx=Load())), Assign(targets=[Name(id='bytes_type', ctx=Store())], value=Name(id='bytes', ctx=Load())), Assign(targets=[Name(id='buffer_type', ctx=Store())], value=Name(id='memoryview', ctx=Load())), Assign(targets=[Name(id='basestring', ctx=Store())], value=Name(id='str', ctx=Load())), Assign(targets=[Name(id='long', ctx=Store())], value=Name(id='int', ctx=Load())), Assign(targets=[Name(id='multi_types', ctx=Store())], value=Tuple(elts=[Name(id='list', ctx=Load()), Name(id='tuple', ctx=Load()), Name(id='frozenset', ctx=Load()), Name(id='set', ctx=Load()), Name(id='range', ctx=Load())], ctx=Load())), Assign(targets=[Name(id='print_', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='builtins', ctx=Load()), Constant(value='print')], keywords=[])), Assign(targets=[Name(id='izip_longest', ctx=Store())], value=Attribute(value=Name(id='itertools', ctx=Load()), attr='zip_longest', ctx=Load())), FunctionDef(name='reraise', args=arguments(posonlyargs=[], args=[arg(arg='tp'), arg(arg='value'), arg(arg='tb')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Attribute(value=Name(id='value', ctx=Load()), attr='__traceback__', ctx=Load()), ops=[IsNot()], comparators=[Name(id='tb', ctx=Load())]), body=[Raise(exc=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='with_traceback', ctx=Load()), args=[Name(id='tb', ctx=Load())], keywords=[]))], orelse=[]), Raise(exc=Name(id='value', ctx=Load()))], decorator_list=[])]), If(test=Name(id='sqlite3', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='sqlite3', ctx=Load()), attr='register_adapter', ctx=Load()), args=[Attribute(value=Name(id='decimal', ctx=Load()), attr='Decimal', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='sqlite3', ctx=Load()), attr='register_adapter', ctx=Load()), args=[Attribute(value=Name(id='datetime', ctx=Load()), attr='date', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='sqlite3', ctx=Load()), attr='register_adapter', ctx=Load()), args=[Attribute(value=Name(id='datetime', ctx=Load()), attr='time', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__sqlite_version__', ctx=Store())], value=Attribute(value=Name(id='sqlite3', ctx=Load()), attr='sqlite_version_info', ctx=Load()))], orelse=[Assign(targets=[Name(id='__sqlite_version__', ctx=Store())], value=Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load()))]), Assign(targets=[Name(id='__date_parts__', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[Tuple(elts=[Constant(value='year'), Constant(value='month'), Constant(value='day'), Constant(value='hour'), Constant(value='minute'), Constant(value='second')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='__sqlite_datetime_formats__', ctx=Store())], value=Tuple(elts=[Constant(value='%Y-%m-%d %H:%M:%S'), Constant(value='%Y-%m-%d %H:%M:%S.%f'), Constant(value='%Y-%m-%d'), Constant(value='%H:%M:%S'), Constant(value='%H:%M:%S.%f'), Constant(value='%H:%M')], ctx=Load())), Assign(targets=[Name(id='__sqlite_date_trunc__', ctx=Store())], value=Dict(keys=[Constant(value='year'), Constant(value='month'), Constant(value='day'), Constant(value='hour'), Constant(value='minute'), Constant(value='second')], values=[Constant(value='%Y-01-01 00:00:00'), Constant(value='%Y-%m-01 00:00:00'), Constant(value='%Y-%m-%d 00:00:00'), Constant(value='%Y-%m-%d %H:00:00'), Constant(value='%Y-%m-%d %H:%M:00'), Constant(value='%Y-%m-%d %H:%M:%S')])), Assign(targets=[Name(id='__mysql_date_trunc__', ctx=Store())], value=Call(func=Attribute(value=Name(id='__sqlite_date_trunc__', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='__mysql_date_trunc__', ctx=Load()), slice=Constant(value='minute'), ctx=Store())], value=Constant(value='%Y-%m-%d %H:%i:00')), Assign(targets=[Subscript(value=Name(id='__mysql_date_trunc__', ctx=Load()), slice=Constant(value='second'), ctx=Store())], value=Constant(value='%Y-%m-%d %H:%i:%S')), FunctionDef(name='_sqlite_date_part', args=arguments(posonlyargs=[], args=[arg(arg='lookup_type'), arg(arg='datetime_string')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=Compare(left=Name(id='lookup_type', ctx=Load()), ops=[In()], comparators=[Name(id='__date_parts__', ctx=Load())])), If(test=UnaryOp(op=Not(), operand=Name(id='datetime_string', ctx=Load())), body=[Return()], orelse=[]), Assign(targets=[Name(id='dt', ctx=Store())], value=Call(func=Name(id='format_date_time', ctx=Load()), args=[Name(id='datetime_string', ctx=Load()), Name(id='__sqlite_datetime_formats__', ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='dt', ctx=Load()), Name(id='lookup_type', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_sqlite_date_trunc', args=arguments(posonlyargs=[], args=[arg(arg='lookup_type'), arg(arg='datetime_string')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=Compare(left=Name(id='lookup_type', ctx=Load()), ops=[In()], comparators=[Name(id='__sqlite_date_trunc__', ctx=Load())])), If(test=UnaryOp(op=Not(), operand=Name(id='datetime_string', ctx=Load())), body=[Return()], orelse=[]), Assign(targets=[Name(id='dt', ctx=Store())], value=Call(func=Name(id='format_date_time', ctx=Load()), args=[Name(id='datetime_string', ctx=Load()), Name(id='__sqlite_datetime_formats__', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='dt', ctx=Load()), attr='strftime', ctx=Load()), args=[Subscript(value=Name(id='__sqlite_date_trunc__', ctx=Load()), slice=Name(id='lookup_type', ctx=Load()), ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__deprecated__', args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='warnings', ctx=Load()), attr='warn', ctx=Load()), args=[Name(id='s', ctx=Load()), Name(id='DeprecationWarning', ctx=Load())], keywords=[]))], decorator_list=[]), ClassDef(name='attrdict', bases=[Name(id='dict', ctx=Load())], keywords=[], body=[FunctionDef(name='__getattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='attr')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Subscript(value=Name(id='self', ctx=Load()), slice=Name(id='attr', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Raise(exc=Call(func=Name(id='AttributeError', ctx=Load()), args=[Name(id='attr', ctx=Load())], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[]), FunctionDef(name='__setattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='attr'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Subscript(value=Name(id='self', ctx=Load()), slice=Name(id='attr', ctx=Load()), ctx=Store())], value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='__iadd__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='rhs', ctx=Load())], keywords=[])), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='__add__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='d', ctx=Store())], value=Call(func=Name(id='attrdict', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='d', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='rhs', ctx=Load())], keywords=[])), Return(value=Name(id='d', ctx=Load()))], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='SENTINEL', ctx=Store())], value=Call(func=Name(id='object', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='OP', ctx=Store())], value=Call(func=Name(id='attrdict', ctx=Load()), args=[], keywords=[keyword(arg='AND', value=Constant(value='AND')), keyword(arg='OR', value=Constant(value='OR')), keyword(arg='ADD', value=Constant(value='+')), keyword(arg='SUB', value=Constant(value='-')), keyword(arg='MUL', value=Constant(value='*')), keyword(arg='DIV', value=Constant(value='/')), keyword(arg='BIN_AND', value=Constant(value='&')), keyword(arg='BIN_OR', value=Constant(value='|')), keyword(arg='XOR', value=Constant(value='#')), keyword(arg='MOD', value=Constant(value='%')), keyword(arg='EQ', value=Constant(value='=')), keyword(arg='LT', value=Constant(value='<')), keyword(arg='LTE', value=Constant(value='<=')), keyword(arg='GT', value=Constant(value='>')), keyword(arg='GTE', value=Constant(value='>=')), keyword(arg='NE', value=Constant(value='!=')), keyword(arg='IN', value=Constant(value='IN')), keyword(arg='NOT_IN', value=Constant(value='NOT IN')), keyword(arg='IS', value=Constant(value='IS')), keyword(arg='IS_NOT', value=Constant(value='IS NOT')), keyword(arg='LIKE', value=Constant(value='LIKE')), keyword(arg='ILIKE', value=Constant(value='ILIKE')), keyword(arg='BETWEEN', value=Constant(value='BETWEEN')), keyword(arg='REGEXP', value=Constant(value='REGEXP')), keyword(arg='IREGEXP', value=Constant(value='IREGEXP')), keyword(arg='CONCAT', value=Constant(value='||')), keyword(arg='BITWISE_NEGATION', value=Constant(value='~'))])), Assign(targets=[Name(id='DJANGO_MAP', ctx=Store())], value=Call(func=Name(id='attrdict', ctx=Load()), args=[Dict(keys=[Constant(value='eq'), Constant(value='lt'), Constant(value='lte'), Constant(value='gt'), Constant(value='gte'), Constant(value='ne'), Constant(value='in'), Constant(value='is'), Constant(value='like'), Constant(value='ilike'), Constant(value='regexp')], values=[Attribute(value=Name(id='operator', ctx=Load()), attr='eq', ctx=Load()), Attribute(value=Name(id='operator', ctx=Load()), attr='lt', ctx=Load()), Attribute(value=Name(id='operator', ctx=Load()), attr='le', ctx=Load()), Attribute(value=Name(id='operator', ctx=Load()), attr='gt', ctx=Load()), Attribute(value=Name(id='operator', ctx=Load()), attr='ge', ctx=Load()), Attribute(value=Name(id='operator', ctx=Load()), attr='ne', ctx=Load()), Attribute(value=Name(id='operator', ctx=Load()), attr='lshift', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[arg(arg='l'), arg(arg='r')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='l', ctx=Load()), Attribute(value=Name(id='OP', ctx=Load()), attr='IS', ctx=Load()), Name(id='r', ctx=Load())], keywords=[])), Lambda(args=arguments(posonlyargs=[], args=[arg(arg='l'), arg(arg='r')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='l', ctx=Load()), Attribute(value=Name(id='OP', ctx=Load()), attr='LIKE', ctx=Load()), Name(id='r', ctx=Load())], keywords=[])), Lambda(args=arguments(posonlyargs=[], args=[arg(arg='l'), arg(arg='r')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='l', ctx=Load()), Attribute(value=Name(id='OP', ctx=Load()), attr='ILIKE', ctx=Load()), Name(id='r', ctx=Load())], keywords=[])), Lambda(args=arguments(posonlyargs=[], args=[arg(arg='l'), arg(arg='r')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='l', ctx=Load()), Attribute(value=Name(id='OP', ctx=Load()), attr='REGEXP', ctx=Load()), Name(id='r', ctx=Load())], keywords=[]))])], keywords=[])), Assign(targets=[Name(id='FIELD', ctx=Store())], value=Call(func=Name(id='attrdict', ctx=Load()), args=[], keywords=[keyword(arg='AUTO', value=Constant(value='INTEGER')), keyword(arg='BIGAUTO', value=Constant(value='BIGINT')), keyword(arg='BIGINT', value=Constant(value='BIGINT')), keyword(arg='BLOB', value=Constant(value='BLOB')), keyword(arg='BOOL', value=Constant(value='SMALLINT')), keyword(arg='CHAR', value=Constant(value='CHAR')), keyword(arg='DATE', value=Constant(value='DATE')), keyword(arg='DATETIME', value=Constant(value='DATETIME')), keyword(arg='DECIMAL', value=Constant(value='DECIMAL')), keyword(arg='DEFAULT', value=Constant(value='')), keyword(arg='DOUBLE', value=Constant(value='REAL')), keyword(arg='FLOAT', value=Constant(value='REAL')), keyword(arg='INT', value=Constant(value='INTEGER')), keyword(arg='SMALLINT', value=Constant(value='SMALLINT')), keyword(arg='TEXT', value=Constant(value='TEXT')), keyword(arg='TIME', value=Constant(value='TIME')), keyword(arg='UUID', value=Constant(value='TEXT')), keyword(arg='UUIDB', value=Constant(value='BLOB')), keyword(arg='VARCHAR', value=Constant(value='VARCHAR'))])), Assign(targets=[Name(id='JOIN', ctx=Store())], value=Call(func=Name(id='attrdict', ctx=Load()), args=[], keywords=[keyword(arg='INNER', value=Constant(value='INNER JOIN')), keyword(arg='LEFT_OUTER', value=Constant(value='LEFT OUTER JOIN')), keyword(arg='RIGHT_OUTER', value=Constant(value='RIGHT OUTER JOIN')), keyword(arg='FULL', value=Constant(value='FULL JOIN')), keyword(arg='FULL_OUTER', value=Constant(value='FULL OUTER JOIN')), keyword(arg='CROSS', value=Constant(value='CROSS JOIN')), keyword(arg='NATURAL', value=Constant(value='NATURAL JOIN')), keyword(arg='LATERAL', value=Constant(value='LATERAL')), keyword(arg='LEFT_LATERAL', value=Constant(value='LEFT JOIN LATERAL'))])), Assign(targets=[Name(id='ROW', ctx=Store())], value=Call(func=Name(id='attrdict', ctx=Load()), args=[], keywords=[keyword(arg='TUPLE', value=Constant(value=1)), keyword(arg='DICT', value=Constant(value=2)), keyword(arg='NAMED_TUPLE', value=Constant(value=3)), keyword(arg='CONSTRUCTOR', value=Constant(value=4)), keyword(arg='MODEL', value=Constant(value=5))])), Assign(targets=[Name(id='PREFETCH_TYPE', ctx=Store())], value=Call(func=Name(id='attrdict', ctx=Load()), args=[], keywords=[keyword(arg='WHERE', value=Constant(value=1)), keyword(arg='JOIN', value=Constant(value=2))])), Assign(targets=[Name(id='SCOPE_NORMAL', ctx=Store())], value=Constant(value=1)), Assign(targets=[Name(id='SCOPE_SOURCE', ctx=Store())], value=Constant(value=2)), Assign(targets=[Name(id='SCOPE_VALUES', ctx=Store())], value=Constant(value=4)), Assign(targets=[Name(id='SCOPE_CTE', ctx=Store())], value=Constant(value=8)), Assign(targets=[Name(id='SCOPE_COLUMN', ctx=Store())], value=Constant(value=16)), Assign(targets=[Name(id='CSQ_PARENTHESES_NEVER', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='CSQ_PARENTHESES_ALWAYS', ctx=Store())], value=Constant(value=1)), Assign(targets=[Name(id='CSQ_PARENTHESES_UNNESTED', ctx=Store())], value=Constant(value=2)), Assign(targets=[Name(id='SNAKE_CASE_STEP1', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(.)_*([A-Z][a-z]+)')], keywords=[])), Assign(targets=[Name(id='SNAKE_CASE_STEP2', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='([a-z0-9])_*([A-Z])')], keywords=[])), Assign(targets=[Name(id='MODEL_BASE', ctx=Store())], value=Constant(value='_metaclass_helper_')), FunctionDef(name='with_metaclass', args=arguments(posonlyargs=[], args=[arg(arg='meta'), arg(arg='base')], kwonlyargs=[], kw_defaults=[], defaults=[Name(id='object', ctx=Load())]), body=[Return(value=Call(func=Name(id='meta', ctx=Load()), args=[Name(id='MODEL_BASE', ctx=Load()), Tuple(elts=[Name(id='base', ctx=Load())], ctx=Load()), Dict(keys=[], values=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='merge_dict', args=arguments(posonlyargs=[], args=[arg(arg='source'), arg(arg='overrides')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='merged', ctx=Store())], value=Call(func=Attribute(value=Name(id='source', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), If(test=Name(id='overrides', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='merged', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='overrides', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='merged', ctx=Load()))], decorator_list=[]), FunctionDef(name='quote', args=arguments(posonlyargs=[], args=[arg(arg='path'), arg(arg='quote_chars')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), body=[Return(value=Call(func=Attribute(value=Subscript(value=Name(id='path', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='join', ctx=Load()), args=[Name(id='quote_chars', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Constant(value='.'), attr='join', ctx=Load()), args=[ListComp(elt=Call(func=Attribute(value=Name(id='part', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='quote_chars', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='part', ctx=Store()), iter=Name(id='path', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='is_model', ctx=Store())], value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='o')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=BoolOp(op=And(), values=[Call(func=Name(id='isclass', ctx=Load()), args=[Name(id='o', ctx=Load())], keywords=[]), Call(func=Name(id='issubclass', ctx=Load()), args=[Name(id='o', ctx=Load()), Name(id='Model', ctx=Load())], keywords=[])]))), FunctionDef(name='ensure_tuple', args=arguments(posonlyargs=[], args=[arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='value', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=IfExp(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Tuple(elts=[Name(id='list', ctx=Load()), Name(id='tuple', ctx=Load())], ctx=Load())], keywords=[]), body=Name(id='value', ctx=Load()), orelse=Tuple(elts=[Name(id='value', ctx=Load())], ctx=Load())))], orelse=[])], decorator_list=[]), FunctionDef(name='ensure_entity', args=arguments(posonlyargs=[], args=[arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='value', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=IfExp(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[]), body=Name(id='value', ctx=Load()), orelse=Call(func=Name(id='Entity', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='make_snake_case', args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='first', ctx=Store())], value=Call(func=Attribute(value=Name(id='SNAKE_CASE_STEP1', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='\\1_\\2'), Name(id='s', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='SNAKE_CASE_STEP2', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='\\1_\\2'), Name(id='first', ctx=Load())], keywords=[]), attr='lower', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='chunked', args=arguments(posonlyargs=[], args=[arg(arg='it'), arg(arg='n')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='marker', ctx=Store())], value=Call(func=Name(id='object', ctx=Load()), args=[], keywords=[])), For(target=Name(id='group', ctx=Store()), iter=GeneratorExp(elt=Call(func=Name(id='list', ctx=Load()), args=[Name(id='g', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='g', ctx=Store()), iter=Call(func=Name(id='izip_longest', ctx=Load()), args=[Starred(value=BinOp(left=List(elts=[Call(func=Name(id='iter', ctx=Load()), args=[Name(id='it', ctx=Load())], keywords=[])], ctx=Load()), op=Mult(), right=Name(id='n', ctx=Load())), ctx=Load())], keywords=[keyword(arg='fillvalue', value=Name(id='marker', ctx=Load()))]), ifs=[], is_async=0)]), body=[If(test=Compare(left=Subscript(value=Name(id='group', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), ops=[Is()], comparators=[Name(id='marker', ctx=Load())]), body=[Delete(targets=[Subscript(value=Name(id='group', ctx=Load()), slice=Slice(lower=Call(func=Attribute(value=Name(id='group', ctx=Load()), attr='index', ctx=Load()), args=[Name(id='marker', ctx=Load())], keywords=[])), ctx=Del())])], orelse=[]), Expr(value=Yield(value=Name(id='group', ctx=Load())))], orelse=[])], decorator_list=[]), ClassDef(name='_callable_context_manager', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='inner', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[With(items=[withitem(context_expr=Name(id='self', ctx=Load()))], body=[Return(value=Call(func=Name(id='fn', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))])], decorator_list=[Call(func=Name(id='wraps', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[])]), Return(value=Name(id='inner', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='Proxy', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    Create a proxy or placeholder for another object.\n    ')), Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[Constant(value='obj'), Constant(value='_callbacks')], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_callbacks', ctx=Store())], value=List(elts=[], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='initialize', ctx=Load()), args=[Constant(value=None)], keywords=[]))], decorator_list=[]), FunctionDef(name='initialize', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='obj')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='obj', ctx=Store())], value=Name(id='obj', ctx=Load())), For(target=Name(id='callback', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_callbacks', ctx=Load()), body=[Expr(value=Call(func=Name(id='callback', ctx=Load()), args=[Name(id='obj', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='attach_callback', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='callback')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_callbacks', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='callback', ctx=Load())], keywords=[])), Return(value=Name(id='callback', ctx=Load()))], decorator_list=[]), FunctionDef(name='passthrough', args=arguments(posonlyargs=[], args=[arg(arg='method')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='inner', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='obj', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='AttributeError', ctx=Load()), args=[Constant(value='Cannot use uninitialized Proxy.')], keywords=[]))], orelse=[]), Return(value=Call(func=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='obj', ctx=Load()), Name(id='method', ctx=Load())], keywords=[]), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), Return(value=Name(id='inner', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='__enter__', ctx=Store())], value=Call(func=Name(id='passthrough', ctx=Load()), args=[Constant(value='__enter__')], keywords=[])), Assign(targets=[Name(id='__exit__', ctx=Store())], value=Call(func=Name(id='passthrough', ctx=Load()), args=[Constant(value='__exit__')], keywords=[])), FunctionDef(name='__getattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='attr')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='obj', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='AttributeError', ctx=Load()), args=[Constant(value='Cannot use uninitialized Proxy.')], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='obj', ctx=Load()), Name(id='attr', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__setattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='attr'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='__slots__', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='AttributeError', ctx=Load()), args=[Constant(value='Cannot set attribute on proxy.')], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='Proxy', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__setattr__', ctx=Load()), args=[Name(id='attr', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='DatabaseProxy', bases=[Name(id='Proxy', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    Proxy implementation specifically for proxying `Database` objects.\n    ')), Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[Constant(value='obj'), Constant(value='_callbacks'), Constant(value='_Model')], ctx=Load())), FunctionDef(name='connection_context', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='ConnectionContext', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='atomic', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Return(value=Call(func=Name(id='_atomic', ctx=Load()), args=[Name(id='self', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='manual_commit', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='_manual', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='transaction', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Return(value=Call(func=Name(id='_transaction', ctx=Load()), args=[Name(id='self', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='savepoint', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='_savepoint', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='Model', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Constant(value='_Model')], keywords=[])), body=[ClassDef(name='Meta', bases=[], keywords=[], body=[Assign(targets=[Name(id='database', ctx=Store())], value=Name(id='self', ctx=Load()))], decorator_list=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_Model', ctx=Store())], value=Call(func=Name(id='type', ctx=Load()), args=[Constant(value='BaseModel'), Tuple(elts=[Name(id='Model', ctx=Load())], ctx=Load()), Dict(keys=[Constant(value='Meta')], values=[Name(id='Meta', ctx=Load())])], keywords=[]))], orelse=[]), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_Model', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())])], decorator_list=[]), ClassDef(name='ModelDescriptor', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='AliasManager', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[Constant(value='_counter'), Constant(value='_current_index'), Constant(value='_mapping')], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_counter', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_current_index', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_mapping', ctx=Store())], value=List(elts=[], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='push', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='mapping', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_mapping', ctx=Load()), slice=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='_current_index', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='add', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='source')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='source', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='mapping', ctx=Load())]), body=[AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_counter', ctx=Store()), op=Add(), value=Constant(value=1)), Assign(targets=[Subscript(value=Name(id='self', ctx=Load()), slice=Name(id='source', ctx=Load()), ctx=Store())], value=BinOp(left=Constant(value='t%d'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_counter', ctx=Load())))], orelse=[]), Return(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='mapping', ctx=Load()), slice=Name(id='source', ctx=Load()), ctx=Load()))], decorator_list=[]), FunctionDef(name='get', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='source'), arg(arg='any_depth')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[If(test=Name(id='any_depth', ctx=Load()), body=[For(target=Name(id='idx', ctx=Store()), iter=Call(func=Name(id='reversed', ctx=Load()), args=[Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_current_index', ctx=Load())], keywords=[])], keywords=[]), body=[If(test=Compare(left=Name(id='source', ctx=Load()), ops=[In()], comparators=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_mapping', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Load())]), body=[Return(value=Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_mapping', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Load()), slice=Name(id='source', ctx=Load()), ctx=Load()))], orelse=[])], orelse=[])], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='source', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='source')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='source', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__setitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='source'), arg(arg='alias')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='mapping', ctx=Load()), slice=Name(id='source', ctx=Load()), ctx=Store())], value=Name(id='alias', ctx=Load()))], decorator_list=[]), FunctionDef(name='push', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_current_index', ctx=Store()), op=Add(), value=Constant(value=1)), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_current_index', ctx=Load()), ops=[Gt()], comparators=[Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_mapping', ctx=Load())], keywords=[])]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_mapping', ctx=Load()), attr='append', ctx=Load()), args=[Dict(keys=[], values=[])], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='pop', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_current_index', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Cannot pop() from empty alias manager.')], keywords=[]))], orelse=[]), AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_current_index', ctx=Store()), op=Sub(), value=Constant(value=1))], decorator_list=[])], decorator_list=[]), ClassDef(name='State', bases=[Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='namedtuple', ctx=Load()), args=[Constant(value='_State'), Tuple(elts=[Constant(value='scope'), Constant(value='parentheses'), Constant(value='settings')], ctx=Load())], keywords=[])], keywords=[], body=[FunctionDef(name='__new__', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='scope'), arg(arg='parentheses')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Name(id='SCOPE_NORMAL', ctx=Load()), Constant(value=False)]), body=[Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='State', ctx=Load()), Name(id='cls', ctx=Load())], keywords=[]), attr='__new__', ctx=Load()), args=[Name(id='cls', ctx=Load()), Name(id='scope', ctx=Load()), Name(id='parentheses', ctx=Load()), Name(id='kwargs', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='scope'), arg(arg='parentheses')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None), Constant(value=None)]), body=[Assign(targets=[Name(id='scope', ctx=Store())], value=IfExp(test=Compare(left=Name(id='scope', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=Attribute(value=Name(id='self', ctx=Load()), attr='scope', ctx=Load()), orelse=Name(id='scope', ctx=Load()))), If(test=BoolOp(op=And(), values=[Name(id='kwargs', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='settings', ctx=Load())]), body=[Assign(targets=[Name(id='settings', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='settings', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='settings', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='kwargs', ctx=Load())], keywords=[]))], orelse=[If(test=Name(id='kwargs', ctx=Load()), body=[Assign(targets=[Name(id='settings', ctx=Store())], value=Name(id='kwargs', ctx=Load()))], orelse=[Assign(targets=[Name(id='settings', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='settings', ctx=Load()))])]), Return(value=Call(func=Name(id='State', ctx=Load()), args=[Name(id='scope', ctx=Load()), Name(id='parentheses', ctx=Load())], keywords=[keyword(value=Name(id='settings', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='__getattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='attr_name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='settings', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='attr_name', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), FunctionDef(name='__scope_context__', args=arguments(posonlyargs=[], args=[arg(arg='scope')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='inner', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Name(id='self', ctx=Load()), args=[], keywords=[keyword(arg='scope', value=Name(id='scope', ctx=Load())), keyword(value=Name(id='kwargs', ctx=Load()))]))], body=[Expr(value=Yield(value=Name(id='self', ctx=Load())))])], decorator_list=[Name(id='contextmanager', ctx=Load())]), Return(value=Name(id='inner', ctx=Load()))], decorator_list=[]), ClassDef(name='Context', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[Constant(value='stack'), Constant(value='_sql'), Constant(value='_values'), Constant(value='alias_manager'), Constant(value='state')], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='settings'), defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='stack', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_sql', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_values', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='alias_manager', ctx=Store())], value=Call(func=Name(id='AliasManager', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Store())], value=Call(func=Name(id='State', ctx=Load()), args=[], keywords=[keyword(value=Name(id='settings', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='as_new', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Context', ctx=Load()), args=[], keywords=[keyword(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Load()), attr='settings', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='column_sort_key', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='item')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Subscript(value=Name(id='item', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='get_sort_key', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='scope', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Load()), attr='scope', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='parentheses', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Load()), attr='parentheses', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='subquery', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Load()), attr='subquery', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='overrides'), defaults=[]), body=[If(test=BoolOp(op=And(), values=[Name(id='overrides', ctx=Load()), Compare(left=Call(func=Attribute(value=Name(id='overrides', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='scope')], keywords=[]), ops=[Eq()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='scope', ctx=Load())])]), body=[Delete(targets=[Subscript(value=Name(id='overrides', ctx=Load()), slice=Constant(value='scope'), ctx=Del())])], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stack', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Load()), args=[], keywords=[keyword(value=Name(id='overrides', ctx=Load()))])), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='scope_normal', ctx=Store())], value=Call(func=Name(id='__scope_context__', ctx=Load()), args=[Name(id='SCOPE_NORMAL', ctx=Load())], keywords=[])), Assign(targets=[Name(id='scope_source', ctx=Store())], value=Call(func=Name(id='__scope_context__', ctx=Load()), args=[Name(id='SCOPE_SOURCE', ctx=Load())], keywords=[])), Assign(targets=[Name(id='scope_values', ctx=Store())], value=Call(func=Name(id='__scope_context__', ctx=Load()), args=[Name(id='SCOPE_VALUES', ctx=Load())], keywords=[])), Assign(targets=[Name(id='scope_cte', ctx=Store())], value=Call(func=Name(id='__scope_context__', ctx=Load()), args=[Name(id='SCOPE_CTE', ctx=Load())], keywords=[])), Assign(targets=[Name(id='scope_column', ctx=Store())], value=Call(func=Name(id='__scope_context__', ctx=Load()), args=[Name(id='SCOPE_COLUMN', ctx=Load())], keywords=[])), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='parentheses', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='(')], keywords=[]))], orelse=[]), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exc_type'), arg(arg='exc_val'), arg(arg='exc_tb')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='parentheses', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=')')], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stack', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='push_alias', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='alias_manager', ctx=Load()), attr='push', ctx=Load()), args=[], keywords=[])), Expr(value=Yield()), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='alias_manager', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[]))], decorator_list=[Name(id='contextmanager', ctx=Load())]), FunctionDef(name='sql', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='obj')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='obj', ctx=Load()), Tuple(elts=[Name(id='Node', ctx=Load()), Name(id='Context', ctx=Load())], ctx=Load())], keywords=[]), body=[Return(value=Call(func=Attribute(value=Name(id='obj', ctx=Load()), attr='__sql__', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Name(id='is_model', ctx=Load()), args=[Name(id='obj', ctx=Load())], keywords=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='obj', ctx=Load()), attr='_meta', ctx=Load()), attr='table', ctx=Load()), attr='__sql__', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], orelse=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='Value', ctx=Load()), args=[Name(id='obj', ctx=Load())], keywords=[])], keywords=[]))])])], decorator_list=[]), FunctionDef(name='literal', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='keyword')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_sql', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='keyword', ctx=Load())], keywords=[])), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value'), arg(arg='converter'), arg(arg='add_param')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=True)]), body=[If(test=Name(id='converter', ctx=Load()), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='converter', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='converter', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Load()), attr='converter', ctx=Load())]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Load()), attr='converter', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], orelse=[])]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[]), body=[With(items=[withitem(context_expr=Call(func=Name(id='self', ctx=Load()), args=[], keywords=[keyword(arg='converter', value=Constant(value=None))]))], body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='sql', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))])], orelse=[If(test=Call(func=Name(id='is_model', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scope_column', ctx=Load()), args=[], keywords=[]))], body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='sql', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))])], orelse=[])]), If(test=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Load()), attr='value_literals', ctx=Load()), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='literal', ctx=Load()), args=[Call(func=Name(id='_query_val_transform', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_values', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])), Return(value=IfExp(test=Name(id='add_param', ctx=Load()), body=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='literal', ctx=Load()), args=[BoolOp(op=Or(), values=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='state', ctx=Load()), attr='param', ctx=Load()), Constant(value='?')])], keywords=[]), orelse=Name(id='self', ctx=Load())))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='_sql', ctx=Load()), attr='extend', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_sql', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='_values', ctx=Load()), attr='extend', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_values', ctx=Load())], keywords=[])), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[]), FunctionDef(name='parse', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='node')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='sql', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[]), attr='query', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='query', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Tuple(elts=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_sql', ctx=Load())], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='_values', ctx=Load())], ctx=Load()))], decorator_list=[])], decorator_list=[]), FunctionDef(name='query_to_string', args=arguments(posonlyargs=[], args=[arg(arg='query')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='db', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='query', ctx=Load()), Constant(value='_database'), Constant(value=None)], keywords=[])), If(test=Compare(left=Name(id='db', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='ctx', ctx=Store())], value=Call(func=Attribute(value=Name(id='db', ctx=Load()), attr='get_sql_context', ctx=Load()), args=[], keywords=[]))], orelse=[Assign(targets=[Name(id='ctx', ctx=Store())], value=Call(func=Name(id='Context', ctx=Load()), args=[], keywords=[]))]), Assign(targets=[Tuple(elts=[Name(id='sql', ctx=Store()), Name(id='params', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Name(id='query', ctx=Load())], keywords=[]), attr='query', ctx=Load()), args=[], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='params', ctx=Load())), body=[Return(value=Name(id='sql', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='param', ctx=Store())], value=BoolOp(op=Or(), values=[Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='param', ctx=Load()), Constant(value='?')])), If(test=Compare(left=Name(id='param', ctx=Load()), ops=[Eq()], comparators=[Constant(value='?')]), body=[Assign(targets=[Name(id='sql', ctx=Store())], value=Call(func=Attribute(value=Name(id='sql', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='?'), Constant(value='%s')], keywords=[]))], orelse=[]), Return(value=BinOp(left=Name(id='sql', ctx=Load()), op=Mod(), right=Call(func=Name(id='tuple', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Name(id='_query_val_transform', ctx=Load()), Name(id='params', ctx=Load())], keywords=[])], keywords=[])))], decorator_list=[]), FunctionDef(name='_query_val_transform', args=arguments(posonlyargs=[], args=[arg(arg='v')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='v', ctx=Load()), Tuple(elts=[Name(id='text_type', ctx=Load()), Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), Attribute(value=Name(id='datetime', ctx=Load()), attr='date', ctx=Load()), Attribute(value=Name(id='datetime', ctx=Load()), attr='time', ctx=Load())], ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='v', ctx=Store())], value=BinOp(left=Constant(value="'%s'"), op=Mod(), right=Name(id='v', ctx=Load())))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='v', ctx=Load()), Name(id='bytes_type', ctx=Load())], keywords=[]), body=[Try(body=[Assign(targets=[Name(id='v', ctx=Store())], value=Call(func=Attribute(value=Name(id='v', ctx=Load()), attr='decode', ctx=Load()), args=[Constant(value='utf8')], keywords=[]))], handlers=[ExceptHandler(type=Name(id='UnicodeDecodeError', ctx=Load()), body=[Assign(targets=[Name(id='v', ctx=Store())], value=Call(func=Attribute(value=Name(id='v', ctx=Load()), attr='decode', ctx=Load()), args=[Constant(value='raw_unicode_escape')], keywords=[]))])], orelse=[], finalbody=[]), Assign(targets=[Name(id='v', ctx=Store())], value=BinOp(left=Constant(value="'%s'"), op=Mod(), right=Name(id='v', ctx=Load())))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='v', ctx=Load()), Name(id='int', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='v', ctx=Store())], value=BinOp(left=Constant(value='%s'), op=Mod(), right=Call(func=Name(id='int', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[])))], orelse=[If(test=Compare(left=Name(id='v', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='v', ctx=Store())], value=Constant(value='NULL'))], orelse=[Assign(targets=[Name(id='v', ctx=Store())], value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[]))])])])]), Return(value=Name(id='v', ctx=Load()))], decorator_list=[]), ClassDef(name='Node', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='_coerce', ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='__isabstractmethod__', ctx=Store())], value=Constant(value=False)), FunctionDef(name='clone', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='obj', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__class__', ctx=Load()), attr='__new__', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='__class__', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='obj', ctx=Load()), attr='__dict__', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__dict__', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), Return(value=Name(id='obj', ctx=Load()))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='copy', args=arguments(posonlyargs=[], args=[arg(arg='method')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='inner', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Name(id='clone', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='clone', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Name(id='method', ctx=Load()), args=[Name(id='clone', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), Return(value=Name(id='clone', ctx=Load()))], decorator_list=[]), Return(value=Name(id='inner', ctx=Load()))], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='coerce', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='_coerce')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[If(test=Compare(left=Name(id='_coerce', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_coerce', ctx=Load())]), body=[Assign(targets=[Name(id='clone', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='clone', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='clone', ctx=Load()), attr='_coerce', ctx=Store())], value=Name(id='_coerce', ctx=Load())), Return(value=Name(id='clone', ctx=Load()))], orelse=[]), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='is_alias', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=False))], decorator_list=[]), FunctionDef(name='unwrap', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Name(id='self', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='ColumnFactory', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[Constant(value='node')], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='node')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Store())], value=Name(id='node', ctx=Load()))], decorator_list=[]), FunctionDef(name='__getattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='attr')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Column', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load()), Name(id='attr', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='_DynamicColumn', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[], ctx=Load())), FunctionDef(name='__get__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='instance_type')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='instance', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='ColumnFactory', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='self', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='_ExplicitColumn', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[], ctx=Load())), FunctionDef(name='__get__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='instance_type')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='instance', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='AttributeError', ctx=Load()), args=[BinOp(left=Constant(value='%s specifies columns explicitly, and does not support dynamic column lookups.'), op=Mod(), right=Name(id='instance', ctx=Load()))], keywords=[]))], orelse=[]), Return(value=Name(id='self', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='Source', bases=[Name(id='Node', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='c', ctx=Store())], value=Call(func=Name(id='_DynamicColumn', ctx=Load()), args=[], keywords=[])), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='alias')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='Source', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Store())], value=Name(id='alias', ctx=Load()))], decorator_list=[]), FunctionDef(name='alias', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Store())], value=Name(id='name', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='select', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='columns'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Name(id='columns', ctx=Load())), body=[Assign(targets=[Name(id='columns', ctx=Store())], value=Tuple(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='*')], keywords=[])], ctx=Load()))], orelse=[]), Return(value=Call(func=Name(id='Select', ctx=Load()), args=[Tuple(elts=[Name(id='self', ctx=Load())], ctx=Load()), Name(id='columns', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='star', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='QualifiedNames', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='.*')], keywords=[])], ctx=Load())], keywords=[keyword(arg='glue', value=Constant(value=''))]))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='join', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dest'), arg(arg='join_type'), arg(arg='on')], kwonlyargs=[], kw_defaults=[], defaults=[Attribute(value=Name(id='JOIN', ctx=Load()), attr='INNER', ctx=Load()), Constant(value=None)]), body=[Return(value=Call(func=Name(id='Join', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='dest', ctx=Load()), Name(id='join_type', ctx=Load()), Name(id='on', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='left_outer_join', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dest'), arg(arg='on')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='Join', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='dest', ctx=Load()), Attribute(value=Name(id='JOIN', ctx=Load()), attr='LEFT_OUTER', ctx=Load()), Name(id='on', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='cte', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name'), arg(arg='recursive'), arg(arg='columns'), arg(arg='materialized')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=None), Constant(value=None)]), body=[Return(value=Call(func=Name(id='CTE', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='self', ctx=Load())], keywords=[keyword(arg='recursive', value=Name(id='recursive', ctx=Load())), keyword(arg='columns', value=Name(id='columns', ctx=Load())), keyword(arg='materialized', value=Name(id='materialized', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='get_sort_key', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load()), body=[Return(value=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load())], ctx=Load()))], orelse=[]), Return(value=Tuple(elts=[Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='alias_manager', ctx=Load()), slice=Name(id='self', ctx=Load()), ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='apply_alias', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope', ctx=Load()), ops=[Eq()], comparators=[Name(id='SCOPE_SOURCE', ctx=Load())]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load()), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='alias_manager', ctx=Load()), slice=Name(id='self', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load()))], orelse=[]), Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' AS ')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Name(id='Entity', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='alias_manager', ctx=Load()), slice=Name(id='self', ctx=Load()), ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[]), FunctionDef(name='apply_column', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load()), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='alias_manager', ctx=Load()), slice=Name(id='self', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load()))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='Entity', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='alias_manager', ctx=Load()), slice=Name(id='self', ctx=Load()), ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='_HashableSource', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='_HashableSource', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_update_hash', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='alias', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Store())], value=Name(id='name', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_update_hash', ctx=Load()), args=[], keywords=[]))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='_update_hash', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_hash', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_hash', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='_get_hash', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='hash', ctx=Load()), args=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='__class__', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__hash__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_hash', ctx=Load()))], decorator_list=[]), FunctionDef(name='__eq__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='other', ctx=Load()), Name(id='_HashableSource', ctx=Load())], keywords=[]), body=[Return(value=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_hash', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='other', ctx=Load()), attr='_hash', ctx=Load())]))], orelse=[]), Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Attribute(value=Name(id='OP', ctx=Load()), attr='EQ', ctx=Load()), Name(id='other', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__ne__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='other', ctx=Load()), Name(id='_HashableSource', ctx=Load())], keywords=[]), body=[Return(value=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_hash', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='other', ctx=Load()), attr='_hash', ctx=Load())]))], orelse=[]), Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Attribute(value=Name(id='OP', ctx=Load()), attr='NE', ctx=Load()), Name(id='other', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_e', args=arguments(posonlyargs=[], args=[arg(arg='op')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='inner', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='op', ctx=Load()), Name(id='rhs', ctx=Load())], keywords=[]))], decorator_list=[]), Return(value=Name(id='inner', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='__lt__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='LT', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__le__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='LTE', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__gt__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='GT', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__ge__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='GTE', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__bind_database__', args=arguments(posonlyargs=[], args=[arg(arg='meth')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='inner', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Name(id='meth', ctx=Load()), args=[Name(id='self', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), body=[Return(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='bind', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[Call(func=Name(id='wraps', ctx=Load()), args=[Name(id='meth', ctx=Load())], keywords=[])]), Return(value=Name(id='inner', ctx=Load()))], decorator_list=[]), FunctionDef(name='__join__', args=arguments(posonlyargs=[], args=[arg(arg='join_type'), arg(arg='inverted')], kwonlyargs=[], kw_defaults=[], defaults=[Attribute(value=Name(id='JOIN', ctx=Load()), attr='INNER', ctx=Load()), Constant(value=False)]), body=[FunctionDef(name='method', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Name(id='inverted', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='self', ctx=Store()), Name(id='other', ctx=Store())], ctx=Store())], value=Tuple(elts=[Name(id='other', ctx=Load()), Name(id='self', ctx=Load())], ctx=Load()))], orelse=[]), Return(value=Call(func=Name(id='Join', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='other', ctx=Load())], keywords=[keyword(arg='join_type', value=Name(id='join_type', ctx=Load()))]))], decorator_list=[]), Return(value=Name(id='method', ctx=Load()))], decorator_list=[]), ClassDef(name='BaseTable', bases=[Name(id='Source', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__and__', ctx=Store())], value=Call(func=Name(id='__join__', ctx=Load()), args=[Attribute(value=Name(id='JOIN', ctx=Load()), attr='INNER', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__add__', ctx=Store())], value=Call(func=Name(id='__join__', ctx=Load()), args=[Attribute(value=Name(id='JOIN', ctx=Load()), attr='LEFT_OUTER', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__sub__', ctx=Store())], value=Call(func=Name(id='__join__', ctx=Load()), args=[Attribute(value=Name(id='JOIN', ctx=Load()), attr='RIGHT_OUTER', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__or__', ctx=Store())], value=Call(func=Name(id='__join__', ctx=Load()), args=[Attribute(value=Name(id='JOIN', ctx=Load()), attr='FULL_OUTER', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__mul__', ctx=Store())], value=Call(func=Name(id='__join__', ctx=Load()), args=[Attribute(value=Name(id='JOIN', ctx=Load()), attr='CROSS', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__rand__', ctx=Store())], value=Call(func=Name(id='__join__', ctx=Load()), args=[Attribute(value=Name(id='JOIN', ctx=Load()), attr='INNER', ctx=Load())], keywords=[keyword(arg='inverted', value=Constant(value=True))])), Assign(targets=[Name(id='__radd__', ctx=Store())], value=Call(func=Name(id='__join__', ctx=Load()), args=[Attribute(value=Name(id='JOIN', ctx=Load()), attr='LEFT_OUTER', ctx=Load())], keywords=[keyword(arg='inverted', value=Constant(value=True))])), Assign(targets=[Name(id='__rsub__', ctx=Store())], value=Call(func=Name(id='__join__', ctx=Load()), args=[Attribute(value=Name(id='JOIN', ctx=Load()), attr='RIGHT_OUTER', ctx=Load())], keywords=[keyword(arg='inverted', value=Constant(value=True))])), Assign(targets=[Name(id='__ror__', ctx=Store())], value=Call(func=Name(id='__join__', ctx=Load()), args=[Attribute(value=Name(id='JOIN', ctx=Load()), attr='FULL_OUTER', ctx=Load())], keywords=[keyword(arg='inverted', value=Constant(value=True))])), Assign(targets=[Name(id='__rmul__', ctx=Store())], value=Call(func=Name(id='__join__', ctx=Load()), args=[Attribute(value=Name(id='JOIN', ctx=Load()), attr='CROSS', ctx=Load())], keywords=[keyword(arg='inverted', value=Constant(value=True))]))], decorator_list=[]), ClassDef(name='_BoundTableContext', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Store())], value=Name(id='table', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Store())], value=Name(id='database', ctx=Load()))], decorator_list=[]), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='inner', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Name(id='_BoundTableContext', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load())], keywords=[]))], body=[Return(value=Call(func=Name(id='fn', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))])], decorator_list=[Call(func=Name(id='wraps', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[])]), Return(value=Name(id='inner', ctx=Load()))], decorator_list=[]), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_orig_database', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), attr='_database', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), attr='bind', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), attr='_model', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), attr='_model', ctx=Load()), attr='bind', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()))], decorator_list=[]), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exc_type'), arg(arg='exc_val'), arg(arg='exc_tb')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), attr='bind', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_orig_database', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), attr='_model', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), attr='_model', ctx=Load()), attr='bind', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_orig_database', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[]), ClassDef(name='Table', bases=[Name(id='_HashableSource', ctx=Load()), Name(id='BaseTable', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name'), arg(arg='columns'), arg(arg='primary_key'), arg(arg='schema'), arg(arg='alias'), arg(arg='_model'), arg(arg='_database')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='__name__', ctx=Store())], value=Name(id='name', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Store())], value=Name(id='columns', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_primary_key', ctx=Store())], value=Name(id='primary_key', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_schema', ctx=Store())], value=Name(id='schema', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_path', ctx=Store())], value=IfExp(test=Name(id='schema', ctx=Load()), body=Tuple(elts=[Name(id='schema', ctx=Load()), Name(id='name', ctx=Load())], ctx=Load()), orelse=Tuple(elts=[Name(id='name', ctx=Load())], ctx=Load()))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_model', ctx=Store())], value=Name(id='_model', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Store())], value=Name(id='_database', ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='Table', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(arg='alias', value=Name(id='alias', ctx=Load()))])), If(test=Compare(left=Name(id='columns', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='c', ctx=Store())], value=Call(func=Name(id='_ExplicitColumn', ctx=Load()), args=[], keywords=[])), For(target=Name(id='column', ctx=Store()), iter=Name(id='columns', ctx=Load()), body=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='column', ctx=Load()), Call(func=Name(id='Column', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='column', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[]), If(test=Name(id='primary_key', ctx=Load()), body=[Assign(targets=[Name(id='col_src', ctx=Store())], value=IfExp(test=Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Load()), body=Name(id='self', ctx=Load()), orelse=Attribute(value=Name(id='self', ctx=Load()), attr='c', ctx=Load()))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='primary_key', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='col_src', ctx=Load()), Name(id='primary_key', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='primary_key', ctx=Store())], value=Constant(value=None))])], decorator_list=[]), FunctionDef(name='clone', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Table', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='__name__', ctx=Load())], keywords=[keyword(arg='columns', value=Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Load())), keyword(arg='primary_key', value=Attribute(value=Name(id='self', ctx=Load()), attr='_primary_key', ctx=Load())), keyword(arg='schema', value=Attribute(value=Name(id='self', ctx=Load()), attr='_schema', ctx=Load())), keyword(arg='alias', value=Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load())), keyword(arg='_model', value=Attribute(value=Name(id='self', ctx=Load()), attr='_model', ctx=Load())), keyword(arg='_database', value=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='bind', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Store())], value=Name(id='database', ctx=Load())), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='bind_ctx', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='_BoundTableContext', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='database', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_get_hash', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='hash', ctx=Load()), args=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='__class__', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_model', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='select', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='columns'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='columns', ctx=Load())), Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Load())]), body=[Assign(targets=[Name(id='columns', ctx=Store())], value=ListComp(elt=Call(func=Name(id='Column', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='column', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='column', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Load()), ifs=[], is_async=0)]))], orelse=[]), Return(value=Call(func=Name(id='Select', ctx=Load()), args=[Tuple(elts=[Name(id='self', ctx=Load())], ctx=Load()), Name(id='columns', ctx=Load())], keywords=[]))], decorator_list=[Name(id='__bind_database__', ctx=Load())]), FunctionDef(name='insert', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='insert'), arg(arg='columns')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None), Constant(value=None)]), body=[If(test=Name(id='kwargs', ctx=Load()), body=[Assign(targets=[Name(id='insert', ctx=Store())], value=IfExp(test=Compare(left=Name(id='insert', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=Dict(keys=[], values=[]), orelse=Name(id='insert', ctx=Load()))), Assign(targets=[Name(id='src', ctx=Store())], value=IfExp(test=Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Load()), body=Name(id='self', ctx=Load()), orelse=Attribute(value=Name(id='self', ctx=Load()), attr='c', ctx=Load()))), For(target=Tuple(elts=[Name(id='key', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='insert', ctx=Load()), slice=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='src', ctx=Load()), Name(id='key', ctx=Load())], keywords=[]), ctx=Store())], value=Name(id='value', ctx=Load()))], orelse=[])], orelse=[]), Return(value=Call(func=Name(id='Insert', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[keyword(arg='insert', value=Name(id='insert', ctx=Load())), keyword(arg='columns', value=Name(id='columns', ctx=Load()))]))], decorator_list=[Name(id='__bind_database__', ctx=Load())]), FunctionDef(name='replace', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='insert'), arg(arg='columns')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None), Constant(value=None)]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='insert', ctx=Load()), args=[], keywords=[keyword(arg='insert', value=Name(id='insert', ctx=Load())), keyword(arg='columns', value=Name(id='columns', ctx=Load()))]), attr='on_conflict', ctx=Load()), args=[Constant(value='REPLACE')], keywords=[]))], decorator_list=[Name(id='__bind_database__', ctx=Load())]), FunctionDef(name='update', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='update')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None)]), body=[If(test=Name(id='kwargs', ctx=Load()), body=[Assign(targets=[Name(id='update', ctx=Store())], value=IfExp(test=Compare(left=Name(id='update', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=Dict(keys=[], values=[]), orelse=Name(id='update', ctx=Load()))), For(target=Tuple(elts=[Name(id='key', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='src', ctx=Store())], value=IfExp(test=Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Load()), body=Name(id='self', ctx=Load()), orelse=Attribute(value=Name(id='self', ctx=Load()), attr='c', ctx=Load()))), Assign(targets=[Subscript(value=Name(id='update', ctx=Load()), slice=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='src', ctx=Load()), Name(id='key', ctx=Load())], keywords=[]), ctx=Store())], value=Name(id='value', ctx=Load()))], orelse=[])], orelse=[]), Return(value=Call(func=Name(id='Update', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[keyword(arg='update', value=Name(id='update', ctx=Load()))]))], decorator_list=[Name(id='__bind_database__', ctx=Load())]), FunctionDef(name='delete', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Delete', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[Name(id='__bind_database__', ctx=Load())]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope', ctx=Load()), ops=[Eq()], comparators=[Name(id='SCOPE_VALUES', ctx=Load())]), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='Entity', ctx=Load()), args=[Starred(value=Attribute(value=Name(id='self', ctx=Load()), attr='_path', ctx=Load()), ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load()), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='alias_manager', ctx=Load()), slice=Name(id='self', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load()))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope', ctx=Load()), ops=[Eq()], comparators=[Name(id='SCOPE_SOURCE', ctx=Load())]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='apply_alias', ctx=Load()), args=[Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='Entity', ctx=Load()), args=[Starred(value=Attribute(value=Name(id='self', ctx=Load()), attr='_path', ctx=Load()), ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='apply_column', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[]))])], decorator_list=[])], decorator_list=[]), ClassDef(name='Join', bases=[Name(id='BaseTable', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='lhs'), arg(arg='rhs'), arg(arg='join_type'), arg(arg='on'), arg(arg='alias')], kwonlyargs=[], kw_defaults=[], defaults=[Attribute(value=Name(id='JOIN', ctx=Load()), attr='INNER', ctx=Load()), Constant(value=None), Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='Join', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(arg='alias', value=Name(id='alias', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='lhs', ctx=Store())], value=Name(id='lhs', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='rhs', ctx=Store())], value=Name(id='rhs', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='join_type', ctx=Store())], value=Name(id='join_type', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_on', ctx=Store())], value=Name(id='on', ctx=Load()))], decorator_list=[]), FunctionDef(name='on', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='predicate')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_on', ctx=Store())], value=Name(id='predicate', ctx=Load())), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='lhs', ctx=Load())], keywords=[]), attr='literal', ctx=Load()), args=[BinOp(left=Constant(value=' %s '), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='join_type', ctx=Load()))], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='rhs', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_on', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' ON ')], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_on', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='ValuesList', bases=[Name(id='_HashableSource', ctx=Load()), Name(id='BaseTable', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='values'), arg(arg='columns'), arg(arg='alias')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_values', ctx=Store())], value=Name(id='values', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Store())], value=Name(id='columns', ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ValuesList', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(arg='alias', value=Name(id='alias', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='_get_hash', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='hash', ctx=Load()), args=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='__class__', ctx=Load()), Call(func=Name(id='id', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_values', ctx=Load())], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='columns', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='names'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Store())], value=Name(id='names', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load()), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='alias_manager', ctx=Load()), slice=Name(id='self', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load()))], orelse=[]), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope', ctx=Load()), ops=[Eq()], comparators=[Name(id='SCOPE_SOURCE', ctx=Load())]), Compare(left=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope', ctx=Load()), ops=[Eq()], comparators=[Name(id='SCOPE_NORMAL', ctx=Load())])]), body=[With(items=[withitem(context_expr=Call(func=Name(id='ctx', ctx=Load()), args=[], keywords=[keyword(arg='parentheses', value=UnaryOp(op=Not(), operand=Attribute(value=Name(id='ctx', ctx=Load()), attr='parentheses', ctx=Load())))]))], body=[Assign(targets=[Name(id='ctx', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='VALUES ')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Name(id='CommaNodeList', ctx=Load()), args=[ListComp(elt=Call(func=Name(id='EnclosedNodeList', ctx=Load()), args=[Name(id='row', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='row', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_values', ctx=Load()), ifs=[], is_async=0)])], keywords=[])], keywords=[]))]), If(test=Compare(left=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope', ctx=Load()), ops=[Eq()], comparators=[Name(id='SCOPE_SOURCE', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' AS ')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Name(id='Entity', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='alias_manager', ctx=Load()), slice=Name(id='self', ctx=Load()), ctx=Load())], keywords=[])], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Load()), body=[Assign(targets=[Name(id='entities', ctx=Store())], value=ListComp(elt=Call(func=Name(id='Entity', ctx=Load()), args=[Name(id='c', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='c', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Load()), ifs=[], is_async=0)])), Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='EnclosedNodeList', ctx=Load()), args=[Name(id='entities', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='Entity', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='alias_manager', ctx=Load()), slice=Name(id='self', ctx=Load()), ctx=Load())], keywords=[])], keywords=[]))]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='CTE', bases=[Name(id='_HashableSource', ctx=Load()), Name(id='Source', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name'), arg(arg='query'), arg(arg='recursive'), arg(arg='columns'), arg(arg='materialized')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=None), Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Store())], value=Name(id='name', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_query', ctx=Store())], value=Name(id='query', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_recursive', ctx=Store())], value=Name(id='recursive', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_materialized', ctx=Store())], value=Name(id='materialized', ctx=Load())), If(test=Compare(left=Name(id='columns', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='columns', ctx=Store())], value=ListComp(elt=IfExp(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='c', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), body=Call(func=Name(id='Entity', ctx=Load()), args=[Name(id='c', ctx=Load())], keywords=[]), orelse=Name(id='c', ctx=Load())), generators=[comprehension(target=Name(id='c', ctx=Store()), iter=Name(id='columns', ctx=Load()), ifs=[], is_async=0)]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Store())], value=Name(id='columns', ctx=Load())), Assign(targets=[Attribute(value=Name(id='query', ctx=Load()), attr='_cte_list', ctx=Store())], value=Tuple(elts=[], ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='CTE', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(arg='alias', value=Name(id='name', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='select_from', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='columns'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Name(id='columns', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='select_from() must specify one or more columns from the CTE to select.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='query', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='Select', ctx=Load()), args=[Tuple(elts=[Name(id='self', ctx=Load())], ctx=Load()), Name(id='columns', ctx=Load())], keywords=[]), attr='with_cte', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), attr='bind', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_query', ctx=Load()), attr='_database', ctx=Load())], keywords=[])), Try(body=[Assign(targets=[Name(id='query', ctx=Store())], value=Call(func=Attribute(value=Name(id='query', ctx=Load()), attr='objects', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_query', ctx=Load()), attr='model', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[]), Return(value=Name(id='query', ctx=Load()))], decorator_list=[]), FunctionDef(name='_get_hash', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='hash', ctx=Load()), args=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='__class__', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load()), Call(func=Name(id='id', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_query', ctx=Load())], keywords=[])], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='union_all', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='clone', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_query', ctx=Load()), attr='clone', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Name(id='CTE', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load()), BinOp(left=Name(id='clone', ctx=Load()), op=Add(), right=Name(id='rhs', ctx=Load())), Attribute(value=Name(id='self', ctx=Load()), attr='_recursive', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='__add__', ctx=Store())], value=Name(id='union_all', ctx=Load())), FunctionDef(name='union', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='clone', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_query', ctx=Load()), attr='clone', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Name(id='CTE', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load()), BinOp(left=Name(id='clone', ctx=Load()), op=BitOr(), right=Name(id='rhs', ctx=Load())), Attribute(value=Name(id='self', ctx=Load()), attr='_recursive', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='__or__', ctx=Store())], value=Name(id='union', ctx=Load())), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope', ctx=Load()), ops=[NotEq()], comparators=[Name(id='SCOPE_CTE', ctx=Load())]), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='Entity', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='push_alias', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='alias_manager', ctx=Load()), slice=Name(id='self', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='Entity', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load())], keywords=[])], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' ')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Name(id='EnclosedNodeList', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' AS ')], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_materialized', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='MATERIALIZED ')], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_materialized', ctx=Load()), ops=[Is()], comparators=[Constant(value=False)]), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='NOT MATERIALIZED ')], keywords=[]))], orelse=[])]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_normal', ctx=Load()), args=[], keywords=[keyword(arg='parentheses', value=Constant(value=True))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_query', ctx=Load())], keywords=[]))])]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='ColumnBase', bases=[Name(id='Node', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='_converter', ctx=Store())], value=Constant(value=None)), FunctionDef(name='converter', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='converter')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_converter', ctx=Store())], value=Name(id='converter', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='alias', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='alias')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Name(id='alias', ctx=Load()), body=[Return(value=Call(func=Name(id='Alias', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='alias', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='unalias', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='bind_to', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dest')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='BindTo', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='dest', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='cast', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='as_type')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Cast', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='as_type', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='asc', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='collation'), arg(arg='nulls')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[Return(value=Call(func=Name(id='Asc', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[keyword(arg='collation', value=Name(id='collation', ctx=Load())), keyword(arg='nulls', value=Name(id='nulls', ctx=Load()))]))], decorator_list=[]), Assign(targets=[Name(id='__pos__', ctx=Store())], value=Name(id='asc', ctx=Load())), FunctionDef(name='desc', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='collation'), arg(arg='nulls')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[Return(value=Call(func=Name(id='Desc', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[keyword(arg='collation', value=Name(id='collation', ctx=Load())), keyword(arg='nulls', value=Name(id='nulls', ctx=Load()))]))], decorator_list=[]), Assign(targets=[Name(id='__neg__', ctx=Store())], value=Name(id='desc', ctx=Load())), FunctionDef(name='__invert__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Negated', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_e', args=arguments(posonlyargs=[], args=[arg(arg='op'), arg(arg='inv')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Expr(value=Constant(value='\n        Lightweight factory which returns a method that builds an Expression\n        consisting of the left-hand and right-hand operands, using `op`.\n        ')), FunctionDef(name='inner', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Name(id='inv', ctx=Load()), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='rhs', ctx=Load()), Name(id='op', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='op', ctx=Load()), Name(id='rhs', ctx=Load())], keywords=[]))], decorator_list=[]), Return(value=Name(id='inner', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='__and__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='AND', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__or__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='OR', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__add__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='ADD', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__sub__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='SUB', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__mul__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='MUL', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__div__', ctx=Store()), Name(id='__truediv__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='DIV', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__xor__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='XOR', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__radd__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='ADD', ctx=Load())], keywords=[keyword(arg='inv', value=Constant(value=True))])), Assign(targets=[Name(id='__rsub__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='SUB', ctx=Load())], keywords=[keyword(arg='inv', value=Constant(value=True))])), Assign(targets=[Name(id='__rmul__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='MUL', ctx=Load())], keywords=[keyword(arg='inv', value=Constant(value=True))])), Assign(targets=[Name(id='__rdiv__', ctx=Store()), Name(id='__rtruediv__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='DIV', ctx=Load())], keywords=[keyword(arg='inv', value=Constant(value=True))])), Assign(targets=[Name(id='__rand__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='AND', ctx=Load())], keywords=[keyword(arg='inv', value=Constant(value=True))])), Assign(targets=[Name(id='__ror__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='OR', ctx=Load())], keywords=[keyword(arg='inv', value=Constant(value=True))])), Assign(targets=[Name(id='__rxor__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='XOR', ctx=Load())], keywords=[keyword(arg='inv', value=Constant(value=True))])), FunctionDef(name='__eq__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='op', ctx=Store())], value=IfExp(test=Compare(left=Name(id='rhs', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=Attribute(value=Name(id='OP', ctx=Load()), attr='IS', ctx=Load()), orelse=Attribute(value=Name(id='OP', ctx=Load()), attr='EQ', ctx=Load()))), Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='op', ctx=Load()), Name(id='rhs', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__ne__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='op', ctx=Store())], value=IfExp(test=Compare(left=Name(id='rhs', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=Attribute(value=Name(id='OP', ctx=Load()), attr='IS_NOT', ctx=Load()), orelse=Attribute(value=Name(id='OP', ctx=Load()), attr='NE', ctx=Load()))), Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='op', ctx=Load()), Name(id='rhs', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='__lt__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='LT', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__le__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='LTE', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__gt__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='GT', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__ge__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='GTE', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__lshift__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='IN', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__rshift__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='IS', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__mod__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='LIKE', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__pow__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='ILIKE', ctx=Load())], keywords=[])), Assign(targets=[Name(id='like', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='LIKE', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ilike', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='ILIKE', ctx=Load())], keywords=[])), Assign(targets=[Name(id='bin_and', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='BIN_AND', ctx=Load())], keywords=[])), Assign(targets=[Name(id='bin_or', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='BIN_OR', ctx=Load())], keywords=[])), Assign(targets=[Name(id='in_', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='IN', ctx=Load())], keywords=[])), Assign(targets=[Name(id='not_in', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='NOT_IN', ctx=Load())], keywords=[])), Assign(targets=[Name(id='regexp', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='REGEXP', ctx=Load())], keywords=[])), Assign(targets=[Name(id='iregexp', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='IREGEXP', ctx=Load())], keywords=[])), FunctionDef(name='is_null', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='is_null')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assign(targets=[Name(id='op', ctx=Store())], value=IfExp(test=Name(id='is_null', ctx=Load()), body=Attribute(value=Name(id='OP', ctx=Load()), attr='IS', ctx=Load()), orelse=Attribute(value=Name(id='OP', ctx=Load()), attr='IS_NOT', ctx=Load()))), Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='op', ctx=Load()), Constant(value=None)], keywords=[]))], decorator_list=[]), FunctionDef(name='_escape_like_expr', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='s'), arg(arg='template')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=Or(), values=[Compare(left=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='find', ctx=Load()), args=[Constant(value='_')], keywords=[]), ops=[GtE()], comparators=[Constant(value=0)]), Compare(left=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='find', ctx=Load()), args=[Constant(value='%')], keywords=[]), ops=[GtE()], comparators=[Constant(value=0)]), Compare(left=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='find', ctx=Load()), args=[Constant(value='\\')], keywords=[]), ops=[GtE()], comparators=[Constant(value=0)])]), body=[Assign(targets=[Name(id='s', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='\\'), Constant(value='\\\\')], keywords=[]), attr='replace', ctx=Load()), args=[Constant(value='_'), Constant(value='\\_')], keywords=[]), attr='replace', ctx=Load()), args=[Constant(value='%'), Constant(value='\\%')], keywords=[])), Return(value=Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='Value', ctx=Load()), args=[BinOp(left=Name(id='template', ctx=Load()), op=Mod(), right=Name(id='s', ctx=Load()))], keywords=[keyword(arg='converter', value=Constant(value=False))]), Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='ESCAPE')], keywords=[]), Call(func=Name(id='Value', ctx=Load()), args=[Constant(value='\\')], keywords=[keyword(arg='converter', value=Constant(value=False))])], ctx=Load())], keywords=[]))], orelse=[]), Return(value=BinOp(left=Name(id='template', ctx=Load()), op=Mod(), right=Name(id='s', ctx=Load())))], decorator_list=[]), FunctionDef(name='contains', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='rhs', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='rhs', ctx=Store())], value=Call(func=Name(id='Expression', ctx=Load()), args=[Constant(value='%'), Attribute(value=Name(id='OP', ctx=Load()), attr='CONCAT', ctx=Load()), Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='rhs', ctx=Load()), Attribute(value=Name(id='OP', ctx=Load()), attr='CONCAT', ctx=Load()), Constant(value='%')], keywords=[])], keywords=[]))], orelse=[Assign(targets=[Name(id='rhs', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_escape_like_expr', ctx=Load()), args=[Name(id='rhs', ctx=Load()), Constant(value='%%%s%%')], keywords=[]))]), Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Attribute(value=Name(id='OP', ctx=Load()), attr='ILIKE', ctx=Load()), Name(id='rhs', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='startswith', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='rhs', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='rhs', ctx=Store())], value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='rhs', ctx=Load()), Attribute(value=Name(id='OP', ctx=Load()), attr='CONCAT', ctx=Load()), Constant(value='%')], keywords=[]))], orelse=[Assign(targets=[Name(id='rhs', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_escape_like_expr', ctx=Load()), args=[Name(id='rhs', ctx=Load()), Constant(value='%s%%')], keywords=[]))]), Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Attribute(value=Name(id='OP', ctx=Load()), attr='ILIKE', ctx=Load()), Name(id='rhs', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='endswith', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='rhs', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='rhs', ctx=Store())], value=Call(func=Name(id='Expression', ctx=Load()), args=[Constant(value='%'), Attribute(value=Name(id='OP', ctx=Load()), attr='CONCAT', ctx=Load()), Name(id='rhs', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='rhs', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_escape_like_expr', ctx=Load()), args=[Name(id='rhs', ctx=Load()), Constant(value='%%%s')], keywords=[]))]), Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Attribute(value=Name(id='OP', ctx=Load()), attr='ILIKE', ctx=Load()), Name(id='rhs', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='between', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='lo'), arg(arg='hi')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Attribute(value=Name(id='OP', ctx=Load()), attr='BETWEEN', ctx=Load()), Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Name(id='lo', ctx=Load()), Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='AND')], keywords=[]), Name(id='hi', ctx=Load())], ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='concat', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='StringExpression', ctx=Load()), args=[Name(id='self', ctx=Load()), Attribute(value=Name(id='OP', ctx=Load()), attr='CONCAT', ctx=Load()), Name(id='rhs', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='item')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='item', ctx=Load()), Name(id='slice', ctx=Load())], keywords=[]), body=[If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='item', ctx=Load()), attr='start', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Name(id='item', ctx=Load()), attr='stop', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='BETWEEN range must have both a start- and end-point.')], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='between', ctx=Load()), args=[Attribute(value=Name(id='item', ctx=Load()), attr='start', ctx=Load()), Attribute(value=Name(id='item', ctx=Load()), attr='stop', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Compare(left=Name(id='self', ctx=Load()), ops=[Eq()], comparators=[Name(id='item', ctx=Load())]))], decorator_list=[]), Assign(targets=[Name(id='__iter__', ctx=Store())], value=Constant(value=None)), FunctionDef(name='distinct', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='DISTINCT')], keywords=[]), Name(id='self', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='collate', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='collation')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Name(id='self', ctx=Load()), Call(func=Name(id='SQL', ctx=Load()), args=[BinOp(left=Constant(value='COLLATE %s'), op=Mod(), right=Name(id='collation', ctx=Load()))], keywords=[])], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_sort_key', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Tuple(elts=[], ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='Column', bases=[Name(id='ColumnBase', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='source'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='source', ctx=Store())], value=Name(id='source', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store())], value=Name(id='name', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_sort_key', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope', ctx=Load()), ops=[Eq()], comparators=[Name(id='SCOPE_VALUES', ctx=Load())]), body=[Return(value=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], ctx=Load()))], orelse=[Return(value=BinOp(left=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='source', ctx=Load()), attr='get_sort_key', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[]), op=Add(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], ctx=Load())))])], decorator_list=[]), FunctionDef(name='__hash__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='hash', ctx=Load()), args=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='source', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope', ctx=Load()), ops=[Eq()], comparators=[Name(id='SCOPE_VALUES', ctx=Load())]), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='Entity', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], keywords=[])], keywords=[]))], orelse=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_column', ctx=Load()), args=[], keywords=[]))], body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='source', ctx=Load())], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value='.')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Name(id='Entity', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], keywords=[])], keywords=[]))])])], decorator_list=[])], decorator_list=[]), ClassDef(name='WrappedNode', bases=[Name(id='ColumnBase', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='node')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Store())], value=Name(id='node', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_coerce', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='node', ctx=Load()), Constant(value='_coerce'), Constant(value=True)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_converter', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='node', ctx=Load()), Constant(value='_converter'), Constant(value=None)], keywords=[]))], decorator_list=[]), FunctionDef(name='is_alias', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load()), attr='is_alias', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='unwrap', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load()), attr='unwrap', ctx=Load()), args=[], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='EntityFactory', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[Constant(value='node')], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='node')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Store())], value=Name(id='node', ctx=Load()))], decorator_list=[]), FunctionDef(name='__getattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='attr')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Entity', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load()), Name(id='attr', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='_DynamicEntity', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[], ctx=Load())), FunctionDef(name='__get__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='instance_type')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='instance', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='EntityFactory', ctx=Load()), args=[Attribute(value=Name(id='instance', ctx=Load()), attr='_alias', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='self', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='Alias', bases=[Name(id='WrappedNode', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='c', ctx=Store())], value=Call(func=Name(id='_DynamicEntity', ctx=Load()), args=[], keywords=[])), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='node'), arg(arg='alias')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='Alias', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Store())], value=Name(id='alias', ctx=Load()))], decorator_list=[]), FunctionDef(name='__hash__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='hash', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='name', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='name', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Store())], value=Name(id='value', ctx=Load()))], decorator_list=[Attribute(value=Name(id='name', ctx=Load()), attr='setter', ctx=Load())]), FunctionDef(name='alias', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='alias')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='alias', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load()))], orelse=[Return(value=Call(func=Name(id='Alias', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load()), Name(id='alias', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='unalias', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load()))], decorator_list=[]), FunctionDef(name='is_alias', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=True))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope', ctx=Load()), ops=[Eq()], comparators=[Name(id='SCOPE_SOURCE', ctx=Load())]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load())], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value=' AS ')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Name(id='Entity', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load())], keywords=[])], keywords=[]))], orelse=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='Entity', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load())], keywords=[])], keywords=[]))])], decorator_list=[])], decorator_list=[]), ClassDef(name='BindTo', bases=[Name(id='WrappedNode', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='node'), arg(arg='dest')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='BindTo', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='dest', ctx=Store())], value=Name(id='dest', ctx=Load()))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='Negated', bases=[Name(id='WrappedNode', ctx=Load())], keywords=[], body=[FunctionDef(name='__invert__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load()))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='NOT ')], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='BitwiseMixin', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__and__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='bin_and', ctx=Load()), args=[Name(id='other', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__or__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='bin_or', ctx=Load()), args=[Name(id='other', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__sub__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='bin_and', ctx=Load()), args=[Call(func=Attribute(value=Name(id='other', ctx=Load()), attr='bin_negated', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='__invert__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='BitwiseNegated', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='BitwiseNegated', bases=[Name(id='BitwiseMixin', ctx=Load()), Name(id='WrappedNode', ctx=Load())], keywords=[], body=[FunctionDef(name='__invert__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load()))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='operations', ctx=Load()), body=[Assign(targets=[Name(id='op_sql', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='operations', ctx=Load()), attr='get', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='op', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='op', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='op_sql', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='op', ctx=Load()))]), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Name(id='op_sql', ctx=Load())], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='Value', bases=[Name(id='ColumnBase', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value'), arg(arg='converter'), arg(arg='unpack')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=True)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='value', ctx=Store())], value=Name(id='value', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='converter', ctx=Store())], value=Name(id='converter', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='multi', ctx=Store())], value=BoolOp(op=And(), values=[Name(id='unpack', ctx=Load()), Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='value', ctx=Load()), Name(id='multi_types', ctx=Load())], keywords=[])])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='multi', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='values', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='item', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='value', ctx=Load()), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='item', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='values', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='item', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='values', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='Value', ctx=Load()), args=[Name(id='item', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='converter', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='multi', ctx=Load()), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='EnclosedNodeList', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='values', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='value', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='value', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='converter', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='ValueLiterals', bases=[Name(id='WrappedNode', ctx=Load())], keywords=[], body=[FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Name(id='ctx', ctx=Load()), args=[], keywords=[keyword(arg='value_literals', value=Constant(value=True))]))], body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load())], keywords=[]))])], decorator_list=[])], decorator_list=[]), FunctionDef(name='AsIs', args=arguments(posonlyargs=[], args=[arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Value', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[keyword(arg='unpack', value=Constant(value=False))]))], decorator_list=[]), ClassDef(name='Cast', bases=[Name(id='WrappedNode', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='node'), arg(arg='cast')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='Cast', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cast', ctx=Store())], value=Name(id='cast', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_coerce', ctx=Store())], value=Constant(value=False))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='CAST(')], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load())], keywords=[]), attr='literal', ctx=Load()), args=[BinOp(left=Constant(value=' AS %s)'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_cast', ctx=Load()))], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='Ordering', bases=[Name(id='WrappedNode', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='node'), arg(arg='direction'), arg(arg='collation'), arg(arg='nulls')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='Ordering', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='direction', ctx=Store())], value=Name(id='direction', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='collation', ctx=Store())], value=Name(id='collation', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='nulls', ctx=Store())], value=Name(id='nulls', ctx=Load())), If(test=BoolOp(op=And(), values=[Name(id='nulls', ctx=Load()), Compare(left=Call(func=Attribute(value=Name(id='nulls', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), ops=[NotIn()], comparators=[Tuple(elts=[Constant(value='first'), Constant(value='last')], ctx=Load())])]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='Ordering nulls= parameter must be "first" or "last", got: %s'), op=Mod(), right=Name(id='nulls', ctx=Load()))], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='collate', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='collation')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='Ordering', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='direction', ctx=Load()), Name(id='collation', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_null_ordering_case', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='nulls')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Call(func=Attribute(value=Name(id='nulls', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value='last')]), body=[Assign(targets=[Tuple(elts=[Name(id='ifnull', ctx=Store()), Name(id='notnull', ctx=Store())], ctx=Store())], value=Tuple(elts=[Constant(value=1), Constant(value=0)], ctx=Load()))], orelse=[If(test=Compare(left=Call(func=Attribute(value=Name(id='nulls', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value='first')]), body=[Assign(targets=[Tuple(elts=[Name(id='ifnull', ctx=Store()), Name(id='notnull', ctx=Store())], ctx=Store())], value=Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load()))], orelse=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='unsupported value for nulls= ordering.')], keywords=[]))])]), Return(value=Call(func=Name(id='Case', ctx=Load()), args=[Constant(value=None), Tuple(elts=[Tuple(elts=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load()), attr='is_null', ctx=Load()), args=[], keywords=[]), Name(id='ifnull', ctx=Load())], ctx=Load())], ctx=Load()), Name(id='notnull', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='nulls', ctx=Load()), UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='nulls_ordering', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_null_ordering_case', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='nulls', ctx=Load())], keywords=[])], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value=', ')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load())], keywords=[]), attr='literal', ctx=Load()), args=[BinOp(left=Constant(value=' %s'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='direction', ctx=Load()))], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='collation', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[BinOp(left=Constant(value=' COLLATE %s'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='collation', ctx=Load()))], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='nulls', ctx=Load()), Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='nulls_ordering', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[BinOp(left=Constant(value=' NULLS %s'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='nulls', ctx=Load()))], keywords=[]))], orelse=[]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[])], decorator_list=[]), FunctionDef(name='Asc', args=arguments(posonlyargs=[], args=[arg(arg='node'), arg(arg='collation'), arg(arg='nulls')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[Return(value=Call(func=Name(id='Ordering', ctx=Load()), args=[Name(id='node', ctx=Load()), Constant(value='ASC'), Name(id='collation', ctx=Load()), Name(id='nulls', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='Desc', args=arguments(posonlyargs=[], args=[arg(arg='node'), arg(arg='collation'), arg(arg='nulls')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[Return(value=Call(func=Name(id='Ordering', ctx=Load()), args=[Name(id='node', ctx=Load()), Constant(value='DESC'), Name(id='collation', ctx=Load()), Name(id='nulls', ctx=Load())], keywords=[]))], decorator_list=[]), ClassDef(name='Expression', bases=[Name(id='ColumnBase', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='lhs'), arg(arg='op'), arg(arg='rhs'), arg(arg='flat')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='lhs', ctx=Store())], value=Name(id='lhs', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='op', ctx=Store())], value=Name(id='op', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='rhs', ctx=Store())], value=Name(id='rhs', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='flat', ctx=Store())], value=Name(id='flat', ctx=Load()))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='overrides', ctx=Store())], value=Dict(keys=[Constant(value='parentheses'), Constant(value='in_expr')], values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='flat', ctx=Load())), Constant(value=True)])), Assign(targets=[Name(id='node', ctx=Store()), Name(id='raw_node', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='lhs', ctx=Load())), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='raw_node', ctx=Load()), Name(id='WrappedNode', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='raw_node', ctx=Load()), attr='unwrap', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='node', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[]), Attribute(value=Name(id='raw_node', ctx=Load()), attr='_coerce', ctx=Load())]), body=[Assign(targets=[Subscript(value=Name(id='overrides', ctx=Load()), slice=Constant(value='converter'), ctx=Store())], value=Attribute(value=Name(id='node', ctx=Load()), attr='db_value', ctx=Load())), Assign(targets=[Subscript(value=Name(id='overrides', ctx=Load()), slice=Constant(value='is_fk_expr'), ctx=Store())], value=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='node', ctx=Load()), Name(id='ForeignKeyField', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Subscript(value=Name(id='overrides', ctx=Load()), slice=Constant(value='converter'), ctx=Store())], value=Constant(value=None))]), If(test=Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='operations', ctx=Load()), body=[Assign(targets=[Name(id='op_sql', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='operations', ctx=Load()), attr='get', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='op', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='op', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='op_sql', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='op', ctx=Load()))]), With(items=[withitem(context_expr=Call(func=Name(id='ctx', ctx=Load()), args=[], keywords=[keyword(value=Name(id='overrides', ctx=Load()))]))], body=[Assign(targets=[Name(id='op_in', ctx=Store())], value=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='op', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='OP', ctx=Load()), attr='IN', ctx=Load())]), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='op', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='OP', ctx=Load()), attr='NOT_IN', ctx=Load())])])), If(test=BoolOp(op=And(), values=[Name(id='op_in', ctx=Load()), Compare(left=Subscript(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='as_new', ctx=Load()), args=[], keywords=[]), attr='parse', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='rhs', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()), ops=[Eq()], comparators=[Constant(value='()')])]), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[IfExp(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='op', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='OP', ctx=Load()), attr='IN', ctx=Load())]), body=Constant(value='0 = 1'), orelse=Constant(value='1 = 1'))], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='lhs', ctx=Load())], keywords=[]), attr='literal', ctx=Load()), args=[BinOp(left=Constant(value=' %s '), op=Mod(), right=Name(id='op_sql', ctx=Load()))], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='rhs', ctx=Load())], keywords=[]))])], decorator_list=[])], decorator_list=[]), ClassDef(name='StringExpression', bases=[Name(id='Expression', ctx=Load())], keywords=[], body=[FunctionDef(name='__add__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='concat', ctx=Load()), args=[Name(id='rhs', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__radd__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='lhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='StringExpression', ctx=Load()), args=[Name(id='lhs', ctx=Load()), Attribute(value=Name(id='OP', ctx=Load()), attr='CONCAT', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='Entity', bases=[Name(id='ColumnBase', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='path'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_path', ctx=Store())], value=ListComp(elt=Call(func=Attribute(value=Name(id='part', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='"'), Constant(value='""')], keywords=[]), generators=[comprehension(target=Name(id='part', ctx=Store()), iter=Name(id='path', ctx=Load()), ifs=[Name(id='part', ctx=Load())], is_async=0)]))], decorator_list=[]), FunctionDef(name='__getattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='attr')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Entity', ctx=Load()), args=[Starred(value=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='_path', ctx=Load()), op=Add(), right=List(elts=[Name(id='attr', ctx=Load())], ctx=Load())), ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_sort_key', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='tuple', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_path', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__hash__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='hash', ctx=Load()), args=[Tuple(elts=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__class__', ctx=Load()), attr='__name__', ctx=Load()), Call(func=Name(id='tuple', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_path', ctx=Load())], keywords=[])], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Call(func=Name(id='quote', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_path', ctx=Load()), BoolOp(op=Or(), values=[Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='quote', ctx=Load()), Constant(value='""')])], keywords=[])], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='SQL', bases=[Name(id='ColumnBase', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='sql'), arg(arg='params')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='sql', ctx=Store())], value=Name(id='sql', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='params', ctx=Store())], value=Name(id='params', ctx=Load()))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='sql', ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='params', ctx=Load()), body=[For(target=Name(id='param', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='params', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='value', ctx=Load()), args=[Name(id='param', ctx=Load()), Constant(value=False)], keywords=[keyword(arg='add_param', value=Constant(value=False))]))], orelse=[])], orelse=[]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[])], decorator_list=[]), FunctionDef(name='Check', args=arguments(posonlyargs=[], args=[arg(arg='constraint'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='check', ctx=Store())], value=Call(func=Name(id='SQL', ctx=Load()), args=[BinOp(left=Constant(value='CHECK (%s)'), op=Mod(), right=Name(id='constraint', ctx=Load()))], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='name', ctx=Load())), body=[Return(value=Name(id='check', ctx=Load()))], orelse=[]), Return(value=Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='CONSTRAINT')], keywords=[]), Call(func=Name(id='Entity', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[]), Name(id='check', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[]), ClassDef(name='Function', bases=[Name(id='ColumnBase', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='no_coerce_functions', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[Tuple(elts=[Constant(value='sum'), Constant(value='count'), Constant(value='avg'), Constant(value='cast'), Constant(value='array_agg')], ctx=Load())], keywords=[])), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name'), arg(arg='arguments'), arg(arg='coerce'), arg(arg='python_value')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True), Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store())], value=Name(id='name', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='arguments', ctx=Store())], value=Name(id='arguments', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_filter', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_order_by', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_python_value', ctx=Store())], value=Name(id='python_value', ctx=Load())), If(test=BoolOp(op=And(), values=[Name(id='name', ctx=Load()), Compare(left=Call(func=Attribute(value=Name(id='name', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='no_coerce_functions', ctx=Load())])]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_coerce', ctx=Store())], value=Constant(value=False))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_coerce', ctx=Store())], value=Name(id='coerce', ctx=Load()))])], decorator_list=[]), FunctionDef(name='__getattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='attr')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='decorator', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Return(value=Call(func=Name(id='Function', ctx=Load()), args=[Name(id='attr', ctx=Load()), Name(id='args', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), Return(value=Name(id='decorator', ctx=Load()))], decorator_list=[]), FunctionDef(name='filter', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='where')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_filter', ctx=Store())], value=Name(id='where', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='order_by', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='ordering'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_order_by', ctx=Store())], value=Name(id='ordering', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='python_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='func')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_python_value', ctx=Store())], value=Name(id='func', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='over', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='partition_by'), arg(arg='order_by'), arg(arg='start'), arg(arg='end'), arg(arg='frame_type'), arg(arg='window'), arg(arg='exclude')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None)]), body=[If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='partition_by', ctx=Load()), Name(id='Window', ctx=Load())], keywords=[]), Compare(left=Name(id='window', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])]), body=[Assign(targets=[Name(id='window', ctx=Store())], value=Name(id='partition_by', ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='window', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Name(id='WindowAlias', ctx=Load()), args=[Name(id='window', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Name(id='Window', ctx=Load()), args=[], keywords=[keyword(arg='partition_by', value=Name(id='partition_by', ctx=Load())), keyword(arg='order_by', value=Name(id='order_by', ctx=Load())), keyword(arg='start', value=Name(id='start', ctx=Load())), keyword(arg='end', value=Name(id='end', ctx=Load())), keyword(arg='frame_type', value=Name(id='frame_type', ctx=Load())), keyword(arg='exclude', value=Name(id='exclude', ctx=Load())), keyword(arg='_inline', value=Constant(value=True))]))]), Return(value=Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Name(id='self', ctx=Load()), Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='OVER')], keywords=[]), Name(id='node', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='arguments', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='()')], keywords=[]))], orelse=[Assign(targets=[Name(id='args', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='arguments', ctx=Load())), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_order_by', ctx=Load()), body=[Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='args', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Store())], value=Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Subscript(value=Name(id='args', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='ORDER BY')], keywords=[]), Call(func=Name(id='CommaNodeList', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_order_by', ctx=Load())], keywords=[])], ctx=Load())], keywords=[]))], orelse=[]), With(items=[withitem(context_expr=Call(func=Name(id='ctx', ctx=Load()), args=[], keywords=[keyword(arg='in_function', value=Constant(value=True)), keyword(arg='function_arg_count', value=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='arguments', ctx=Load())], keywords=[]))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='EnclosedNodeList', ctx=Load()), args=[ListComp(elt=IfExp(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='arg', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[]), body=Name(id='arg', ctx=Load()), orelse=Call(func=Name(id='Value', ctx=Load()), args=[Name(id='arg', ctx=Load()), Constant(value=False)], keywords=[])), generators=[comprehension(target=Name(id='arg', ctx=Store()), iter=Name(id='args', ctx=Load()), ifs=[], is_async=0)])], keywords=[])], keywords=[]))])]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_filter', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' FILTER (WHERE ')], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_filter', ctx=Load())], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value=')')], keywords=[]))], orelse=[]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='fn', ctx=Store())], value=Call(func=Name(id='Function', ctx=Load()), args=[Constant(value=None), Constant(value=None)], keywords=[])), ClassDef(name='Window', bases=[Name(id='Node', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='CURRENT_ROW', ctx=Store())], value=Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='CURRENT ROW')], keywords=[])), Assign(targets=[Name(id='GROUP', ctx=Store())], value=Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='GROUP')], keywords=[])), Assign(targets=[Name(id='TIES', ctx=Store())], value=Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='TIES')], keywords=[])), Assign(targets=[Name(id='NO_OTHERS', ctx=Store())], value=Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='NO OTHERS')], keywords=[])), Assign(targets=[Name(id='GROUPS', ctx=Store())], value=Constant(value='GROUPS')), Assign(targets=[Name(id='RANGE', ctx=Store())], value=Constant(value='RANGE')), Assign(targets=[Name(id='ROWS', ctx=Store())], value=Constant(value='ROWS')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='partition_by'), arg(arg='order_by'), arg(arg='start'), arg(arg='end'), arg(arg='frame_type'), arg(arg='extends'), arg(arg='exclude'), arg(arg='alias'), arg(arg='_inline')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=False)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='Window', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='start', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='start', ctx=Load()), Name(id='SQL', ctx=Load())], keywords=[]))]), body=[Assign(targets=[Name(id='start', ctx=Store())], value=Call(func=Name(id='SQL', ctx=Load()), args=[Name(id='start', ctx=Load())], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='end', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='end', ctx=Load()), Name(id='SQL', ctx=Load())], keywords=[]))]), body=[Assign(targets=[Name(id='end', ctx=Store())], value=Call(func=Name(id='SQL', ctx=Load()), args=[Name(id='end', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='partition_by', ctx=Store())], value=Call(func=Name(id='ensure_tuple', ctx=Load()), args=[Name(id='partition_by', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='order_by', ctx=Store())], value=Call(func=Name(id='ensure_tuple', ctx=Load()), args=[Name(id='order_by', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Store())], value=Name(id='start', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='end', ctx=Store())], value=Name(id='end', ctx=Load())), If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='end', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Cannot specify WINDOW end without start.')], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='alias', ctx=Load()), Constant(value='w')])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_inline', ctx=Store())], value=Name(id='_inline', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='frame_type', ctx=Store())], value=Name(id='frame_type', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_extends', ctx=Store())], value=Name(id='extends', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_exclude', ctx=Store())], value=Name(id='exclude', ctx=Load()))], decorator_list=[]), FunctionDef(name='alias', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='alias')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='alias', ctx=Load()), Constant(value='w')])), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='as_range', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='frame_type', ctx=Store())], value=Attribute(value=Name(id='Window', ctx=Load()), attr='RANGE', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='as_rows', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='frame_type', ctx=Store())], value=Attribute(value=Name(id='Window', ctx=Load()), attr='ROWS', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='as_groups', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='frame_type', ctx=Store())], value=Attribute(value=Name(id='Window', ctx=Load()), attr='GROUPS', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='extends', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='window')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_extends', ctx=Store())], value=Name(id='window', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='exclude', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='frame_exclusion')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='frame_exclusion', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='frame_exclusion', ctx=Store())], value=Call(func=Name(id='SQL', ctx=Load()), args=[Name(id='frame_exclusion', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_exclude', ctx=Store())], value=Name(id='frame_exclusion', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='following', args=arguments(posonlyargs=[], args=[arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='value', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='UNBOUNDED FOLLOWING')], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='SQL', ctx=Load()), args=[BinOp(left=Constant(value='%d FOLLOWING'), op=Mod(), right=Name(id='value', ctx=Load()))], keywords=[]))], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='preceding', args=arguments(posonlyargs=[], args=[arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='value', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='UNBOUNDED PRECEDING')], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='SQL', ctx=Load()), args=[BinOp(left=Constant(value='%d PRECEDING'), op=Mod(), right=Name(id='value', ctx=Load()))], keywords=[]))], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope', ctx=Load()), ops=[NotEq()], comparators=[Name(id='SCOPE_SOURCE', ctx=Load())]), UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_inline', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' AS ')], keywords=[]))], orelse=[]), With(items=[withitem(context_expr=Call(func=Name(id='ctx', ctx=Load()), args=[], keywords=[keyword(arg='parentheses', value=Constant(value=True))]))], body=[Assign(targets=[Name(id='parts', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_extends', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='ext', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_extends', ctx=Load())), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='ext', ctx=Load()), Name(id='Window', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='ext', ctx=Store())], value=Call(func=Name(id='SQL', ctx=Load()), args=[Attribute(value=Name(id='ext', ctx=Load()), attr='_alias', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='ext', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='ext', ctx=Store())], value=Call(func=Name(id='SQL', ctx=Load()), args=[Name(id='ext', ctx=Load())], keywords=[]))], orelse=[])]), Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='ext', ctx=Load())], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='partition_by', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='extend', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='PARTITION BY')], keywords=[]), Call(func=Name(id='CommaNodeList', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='partition_by', ctx=Load())], keywords=[])], ctx=Load())], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='order_by', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='extend', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='ORDER BY')], keywords=[]), Call(func=Name(id='CommaNodeList', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='order_by', ctx=Load())], keywords=[])], ctx=Load())], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='end', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Assign(targets=[Name(id='frame', ctx=Store())], value=BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='frame_type', ctx=Load()), Constant(value='ROWS')])), Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='extend', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[BinOp(left=Constant(value='%s BETWEEN'), op=Mod(), right=Name(id='frame', ctx=Load()))], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load()), Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='AND')], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='end', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='extend', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='frame_type', ctx=Load()), Constant(value='ROWS')])], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='frame_type', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='SQL', ctx=Load()), args=[BinOp(left=Constant(value='%s UNBOUNDED PRECEDING'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='frame_type', ctx=Load()))], keywords=[])], keywords=[]))], orelse=[])])]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_exclude', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='extend', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='EXCLUDE')], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='_exclude', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='NodeList', ctx=Load()), args=[Name(id='parts', ctx=Load())], keywords=[])], keywords=[]))]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='WindowAlias', bases=[Name(id='Node', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='window')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='window', ctx=Store())], value=Name(id='window', ctx=Load()))], decorator_list=[]), FunctionDef(name='alias', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='window_alias')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='window', ctx=Load()), attr='_alias', ctx=Store())], value=Name(id='window_alias', ctx=Load())), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[BoolOp(op=Or(), values=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='window', ctx=Load()), attr='_alias', ctx=Load()), Constant(value='w')])], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='ForUpdate', bases=[Name(id='Node', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='expr'), arg(arg='of'), arg(arg='nowait')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[Assign(targets=[Name(id='expr', ctx=Store())], value=IfExp(test=Compare(left=Name(id='expr', ctx=Load()), ops=[Is()], comparators=[Constant(value=True)]), body=Constant(value='FOR UPDATE'), orelse=Name(id='expr', ctx=Load()))), If(test=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='expr', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), attr='endswith', ctx=Load()), args=[Constant(value='nowait')], keywords=[]), body=[Assign(targets=[Name(id='expr', ctx=Store())], value=Subscript(value=Name(id='expr', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=7))), ctx=Load())), Assign(targets=[Name(id='nowait', ctx=Store())], value=Constant(value=True))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_expr', ctx=Store())], value=Name(id='expr', ctx=Load())), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='of', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='of', ctx=Load()), Tuple(elts=[Name(id='list', ctx=Load()), Name(id='set', ctx=Load()), Name(id='tuple', ctx=Load())], ctx=Load())], keywords=[]))]), body=[Assign(targets=[Name(id='of', ctx=Store())], value=Tuple(elts=[Name(id='of', ctx=Load())], ctx=Load()))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_of', ctx=Store())], value=Name(id='of', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_nowait', ctx=Store())], value=Name(id='nowait', ctx=Load()))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_expr', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_of', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' OF ')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Name(id='CommaNodeList', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_of', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_nowait', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' NOWAIT')], keywords=[]))], orelse=[]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[])], decorator_list=[]), FunctionDef(name='Case', args=arguments(posonlyargs=[], args=[arg(arg='predicate'), arg(arg='expression_tuples'), arg(arg='default')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='clauses', ctx=Store())], value=List(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='CASE')], keywords=[])], ctx=Load())), If(test=Compare(left=Name(id='predicate', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='clauses', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='predicate', ctx=Load())], keywords=[]))], orelse=[]), For(target=Tuple(elts=[Name(id='expr', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Name(id='expression_tuples', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='clauses', ctx=Load()), attr='extend', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='WHEN')], keywords=[]), Name(id='expr', ctx=Load()), Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='THEN')], keywords=[]), Name(id='value', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='default', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='clauses', ctx=Load()), attr='extend', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='ELSE')], keywords=[]), Name(id='default', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='clauses', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='END')], keywords=[])], keywords=[])), Return(value=Call(func=Name(id='NodeList', ctx=Load()), args=[Name(id='clauses', ctx=Load())], keywords=[]))], decorator_list=[]), ClassDef(name='NodeList', bases=[Name(id='ColumnBase', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='nodes'), arg(arg='glue'), arg(arg='parens')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=' '), Constant(value=False)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='nodes', ctx=Store())], value=Name(id='nodes', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='glue', ctx=Store())], value=Name(id='glue', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='parens', ctx=Store())], value=Name(id='parens', ctx=Load())), If(test=BoolOp(op=And(), values=[Name(id='parens', ctx=Load()), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='nodes', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='nodes', ctx=Load()), slice=Constant(value=0), ctx=Load()), Name(id='Expression', ctx=Load())], keywords=[]), UnaryOp(op=Not(), operand=Attribute(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='nodes', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='flat', ctx=Load()))]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='nodes', ctx=Store())], value=Tuple(elts=[Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='nodes', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='clone', ctx=Load()), args=[], keywords=[])], ctx=Load())), Assign(targets=[Attribute(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='nodes', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='flat', ctx=Store())], value=Constant(value=True))], orelse=[])], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='n_nodes', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='nodes', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='n_nodes', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Return(value=IfExp(test=Attribute(value=Name(id='self', ctx=Load()), attr='parens', ctx=Load()), body=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='()')], keywords=[]), orelse=Name(id='ctx', ctx=Load())))], orelse=[]), With(items=[withitem(context_expr=Call(func=Name(id='ctx', ctx=Load()), args=[], keywords=[keyword(arg='parentheses', value=Attribute(value=Name(id='self', ctx=Load()), attr='parens', ctx=Load()))]))], body=[For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[BinOp(left=Name(id='n_nodes', ctx=Load()), op=Sub(), right=Constant(value=1))], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='nodes', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='glue', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='nodes', ctx=Load()), slice=BinOp(left=Name(id='n_nodes', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load())], keywords=[]))]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[])], decorator_list=[]), FunctionDef(name='CommaNodeList', args=arguments(posonlyargs=[], args=[arg(arg='nodes')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='NodeList', ctx=Load()), args=[Name(id='nodes', ctx=Load()), Constant(value=', ')], keywords=[]))], decorator_list=[]), FunctionDef(name='EnclosedNodeList', args=arguments(posonlyargs=[], args=[arg(arg='nodes')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='NodeList', ctx=Load()), args=[Name(id='nodes', ctx=Load()), Constant(value=', '), Constant(value=True)], keywords=[]))], decorator_list=[]), ClassDef(name='_Namespace', bases=[Name(id='Node', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[Constant(value='_name')], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_name', ctx=Store())], value=Name(id='name', ctx=Load()))], decorator_list=[]), FunctionDef(name='__getattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='attr')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='NamespaceAttribute', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='attr', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='__getitem__', ctx=Store())], value=Name(id='__getattr__', ctx=Load()))], decorator_list=[]), ClassDef(name='NamespaceAttribute', bases=[Name(id='ColumnBase', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='namespace'), arg(arg='attribute')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_namespace', ctx=Store())], value=Name(id='namespace', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_attribute', ctx=Store())], value=Name(id='attribute', ctx=Load()))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[BinOp(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_namespace', ctx=Load()), attr='_name', ctx=Load()), op=Add(), right=Constant(value='.'))], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Name(id='Entity', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_attribute', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='EXCLUDED', ctx=Store())], value=Call(func=Name(id='_Namespace', ctx=Load()), args=[Constant(value='EXCLUDED')], keywords=[])), ClassDef(name='DQ', bases=[Name(id='ColumnBase', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='query'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='DQ', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='query', ctx=Store())], value=Name(id='query', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_negated', ctx=Store())], value=Constant(value=False))], decorator_list=[]), FunctionDef(name='__invert__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_negated', ctx=Store())], value=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_negated', ctx=Load())))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='clone', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Name(id='DQ', ctx=Load()), args=[], keywords=[keyword(value=Attribute(value=Name(id='self', ctx=Load()), attr='query', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='_negated', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_negated', ctx=Load())), Return(value=Name(id='node', ctx=Load()))], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='Tuple', ctx=Store())], value=Lambda(args=arguments(posonlyargs=[], args=[], vararg=arg(arg='a'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='EnclosedNodeList', ctx=Load()), args=[Name(id='a', ctx=Load())], keywords=[]))), ClassDef(name='QualifiedNames', bases=[Name(id='WrappedNode', ctx=Load())], keywords=[], body=[FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_column', ctx=Load()), args=[], keywords=[]))], body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load())], keywords=[]))])], decorator_list=[])], decorator_list=[]), FunctionDef(name='qualify_names', args=arguments(posonlyargs=[], args=[arg(arg='node')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='node', ctx=Load()), Name(id='Expression', ctx=Load())], keywords=[]), body=[Return(value=Call(func=Attribute(value=Name(id='node', ctx=Load()), attr='__class__', ctx=Load()), args=[Call(func=Name(id='qualify_names', ctx=Load()), args=[Attribute(value=Name(id='node', ctx=Load()), attr='lhs', ctx=Load())], keywords=[]), Attribute(value=Name(id='node', ctx=Load()), attr='op', ctx=Load()), Call(func=Name(id='qualify_names', ctx=Load()), args=[Attribute(value=Name(id='node', ctx=Load()), attr='rhs', ctx=Load())], keywords=[]), Attribute(value=Name(id='node', ctx=Load()), attr='flat', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='node', ctx=Load()), Name(id='ColumnBase', ctx=Load())], keywords=[]), body=[Return(value=Call(func=Name(id='QualifiedNames', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[]))], orelse=[])]), Return(value=Name(id='node', ctx=Load()))], decorator_list=[]), ClassDef(name='OnConflict', bases=[Name(id='Node', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='action'), arg(arg='update'), arg(arg='preserve'), arg(arg='where'), arg(arg='conflict_target'), arg(arg='conflict_where'), arg(arg='conflict_constraint')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_action', ctx=Store())], value=Name(id='action', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_update', ctx=Store())], value=Name(id='update', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_preserve', ctx=Store())], value=Call(func=Name(id='ensure_tuple', ctx=Load()), args=[Name(id='preserve', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Store())], value=Name(id='where', ctx=Load())), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='conflict_target', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Name(id='conflict_constraint', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='only one of "conflict_target" and "conflict_constraint" may be specified.')], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_conflict_target', ctx=Store())], value=Call(func=Name(id='ensure_tuple', ctx=Load()), args=[Name(id='conflict_target', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_conflict_where', ctx=Store())], value=Name(id='conflict_where', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_conflict_constraint', ctx=Store())], value=Name(id='conflict_constraint', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_conflict_statement', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx'), arg(arg='query')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='conflict_statement', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='query', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_conflict_update', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx'), arg(arg='query')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='conflict_update', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='query', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='preserve', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='columns'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_preserve', ctx=Store())], value=Name(id='columns', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='update', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='_data')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None)]), body=[If(test=BoolOp(op=And(), values=[Name(id='_data', ctx=Load()), Name(id='kwargs', ctx=Load()), UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='_data', ctx=Load()), Name(id='dict', ctx=Load())], keywords=[]))]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Cannot mix data with keyword arguments in the OnConflict update method.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='_data', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='_data', ctx=Load()), Dict(keys=[], values=[])])), If(test=Name(id='kwargs', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='_data', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='kwargs', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_update', ctx=Store())], value=Name(id='_data', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='where', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='expressions'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='expressions', ctx=Store())], value=BinOp(left=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Load())], ctx=Load()), op=Add(), right=Name(id='expressions', ctx=Load())))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Store())], value=Call(func=Name(id='reduce', ctx=Load()), args=[Attribute(value=Name(id='operator', ctx=Load()), attr='and_', ctx=Load()), Name(id='expressions', ctx=Load())], keywords=[]))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='conflict_target', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='constraints'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_conflict_constraint', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_conflict_target', ctx=Store())], value=Name(id='constraints', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='conflict_where', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='expressions'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_conflict_where', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='expressions', ctx=Store())], value=BinOp(left=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='_conflict_where', ctx=Load())], ctx=Load()), op=Add(), right=Name(id='expressions', ctx=Load())))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_conflict_where', ctx=Store())], value=Call(func=Name(id='reduce', ctx=Load()), args=[Attribute(value=Name(id='operator', ctx=Load()), attr='and_', ctx=Load()), Name(id='expressions', ctx=Load())], keywords=[]))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='conflict_constraint', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='constraint')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_conflict_constraint', ctx=Store())], value=Name(id='constraint', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_conflict_target', ctx=Store())], value=Constant(value=None))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())])], decorator_list=[]), FunctionDef(name='database_required', args=arguments(posonlyargs=[], args=[arg(arg='method')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='inner', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='database', ctx=Store())], value=IfExp(test=Compare(left=Name(id='database', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), orelse=Name(id='database', ctx=Load()))), If(test=UnaryOp(op=Not(), operand=Name(id='database', ctx=Load())), body=[Raise(exc=Call(func=Name(id='InterfaceError', ctx=Load()), args=[BinOp(left=Constant(value='Query must be bound to a database in order to call "%s".'), op=Mod(), right=Attribute(value=Name(id='method', ctx=Load()), attr='__name__', ctx=Load()))], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='method', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='database', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[Call(func=Name(id='wraps', ctx=Load()), args=[Name(id='method', ctx=Load())], keywords=[])]), Return(value=Name(id='inner', ctx=Load()))], decorator_list=[]), ClassDef(name='BaseQuery', bases=[Name(id='Node', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='default_row_type', ctx=Store())], value=Attribute(value=Name(id='ROW', ctx=Load()), attr='DICT', ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='_database')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Store())], value=Name(id='_database', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_row_type', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_constructor', ctx=Store())], value=Constant(value=None)), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='BaseQuery', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='bind', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Store())], value=Name(id='database', ctx=Load())), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='clone', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='query', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='BaseQuery', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='clone', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='query', ctx=Load()), attr='_cursor_wrapper', ctx=Store())], value=Constant(value=None)), Return(value=Name(id='query', ctx=Load()))], decorator_list=[]), FunctionDef(name='dicts', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='as_dict')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_row_type', ctx=Store())], value=IfExp(test=Name(id='as_dict', ctx=Load()), body=Attribute(value=Name(id='ROW', ctx=Load()), attr='DICT', ctx=Load()), orelse=Constant(value=None))), Return(value=Name(id='self', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='tuples', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='as_tuple')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_row_type', ctx=Store())], value=IfExp(test=Name(id='as_tuple', ctx=Load()), body=Attribute(value=Name(id='ROW', ctx=Load()), attr='TUPLE', ctx=Load()), orelse=Constant(value=None))), Return(value=Name(id='self', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='namedtuples', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='as_namedtuple')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_row_type', ctx=Store())], value=IfExp(test=Name(id='as_namedtuple', ctx=Load()), body=Attribute(value=Name(id='ROW', ctx=Load()), attr='NAMED_TUPLE', ctx=Load()), orelse=Constant(value=None))), Return(value=Name(id='self', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='objects', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='constructor')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_row_type', ctx=Store())], value=IfExp(test=Name(id='constructor', ctx=Load()), body=Attribute(value=Name(id='ROW', ctx=Load()), attr='CONSTRUCTOR', ctx=Load()), orelse=Constant(value=None))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_constructor', ctx=Store())], value=Name(id='constructor', ctx=Load())), Return(value=Name(id='self', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='_get_cursor_wrapper', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='row_type', ctx=Store())], value=BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_row_type', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='default_row_type', ctx=Load())])), If(test=Compare(left=Name(id='row_type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='ROW', ctx=Load()), attr='DICT', ctx=Load())]), body=[Return(value=Call(func=Name(id='DictCursorWrapper', ctx=Load()), args=[Name(id='cursor', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='row_type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='ROW', ctx=Load()), attr='TUPLE', ctx=Load())]), body=[Return(value=Call(func=Name(id='CursorWrapper', ctx=Load()), args=[Name(id='cursor', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='row_type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='ROW', ctx=Load()), attr='NAMED_TUPLE', ctx=Load())]), body=[Return(value=Call(func=Name(id='NamedTupleCursorWrapper', ctx=Load()), args=[Name(id='cursor', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='row_type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='ROW', ctx=Load()), attr='CONSTRUCTOR', ctx=Load())]), body=[Return(value=Call(func=Name(id='ObjectCursorWrapper', ctx=Load()), args=[Name(id='cursor', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_constructor', ctx=Load())], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='Unrecognized row type: "%s".'), op=Mod(), right=Name(id='row_type', ctx=Load()))], keywords=[]))])])])])], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='sql', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), body=[Assign(targets=[Name(id='context', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), attr='get_sql_context', ctx=Load()), args=[], keywords=[]))], orelse=[Assign(targets=[Name(id='context', ctx=Store())], value=Call(func=Name(id='Context', ctx=Load()), args=[], keywords=[]))]), Return(value=Call(func=Attribute(value=Name(id='context', ctx=Load()), attr='parse', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='execute', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_execute', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[]))], decorator_list=[Name(id='database_required', ctx=Load())]), FunctionDef(name='_execute', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='iterator', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='iter', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[]), attr='iterator', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='_ensure_execution', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Load())), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Query has not been executed.')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='__iter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_ensure_execution', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Name(id='iter', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_ensure_execution', ctx=Load()), args=[], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='slice', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='index', ctx=Store())], value=Attribute(value=Name(id='value', ctx=Load()), attr='stop', ctx=Load()))], orelse=[Assign(targets=[Name(id='index', ctx=Store())], value=Name(id='value', ctx=Load()))]), If(test=Compare(left=Name(id='index', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='index', ctx=Store())], value=IfExp(test=Compare(left=Name(id='index', ctx=Load()), ops=[GtE()], comparators=[Constant(value=0)]), body=BinOp(left=Name(id='index', ctx=Load()), op=Add(), right=Constant(value=1)), orelse=Constant(value=0)))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Load()), attr='fill_cache', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[])), Return(value=Subscript(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Load()), attr='row_cache', ctx=Load()), slice=Name(id='value', ctx=Load()), ctx=Load()))], decorator_list=[]), FunctionDef(name='__len__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_ensure_execution', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__str__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='query_to_string', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='RawQuery', bases=[Name(id='BaseQuery', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='sql'), arg(arg='params')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None), Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='RawQuery', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_sql', ctx=Store())], value=Name(id='sql', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_params', ctx=Store())], value=Name(id='params', ctx=Load()))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_sql', ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_params', ctx=Load()), body=[For(target=Name(id='param', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_params', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='value', ctx=Load()), args=[Name(id='param', ctx=Load())], keywords=[keyword(arg='add_param', value=Constant(value=False))]))], orelse=[])], orelse=[]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[]), FunctionDef(name='_execute', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='database', ctx=Load()), attr='execute', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_cursor_wrapper', ctx=Load()), args=[Name(id='cursor', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='Query', bases=[Name(id='BaseQuery', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='where'), arg(arg='order_by'), arg(arg='limit'), arg(arg='offset')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='Query', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Store())], value=Name(id='where', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_order_by', ctx=Store())], value=Name(id='order_by', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_limit', ctx=Store())], value=Name(id='limit', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_offset', ctx=Store())], value=Name(id='offset', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cte_list', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='with_cte', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='cte_list'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cte_list', ctx=Store())], value=Name(id='cte_list', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='where', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='expressions'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='expressions', ctx=Store())], value=BinOp(left=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Load())], ctx=Load()), op=Add(), right=Name(id='expressions', ctx=Load())))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Store())], value=Call(func=Name(id='reduce', ctx=Load()), args=[Attribute(value=Name(id='operator', ctx=Load()), attr='and_', ctx=Load()), Name(id='expressions', ctx=Load())], keywords=[]))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='orwhere', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='expressions'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='expressions', ctx=Store())], value=BinOp(left=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Load())], ctx=Load()), op=Add(), right=Name(id='expressions', ctx=Load())))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Store())], value=Call(func=Name(id='reduce', ctx=Load()), args=[Attribute(value=Name(id='operator', ctx=Load()), attr='or_', ctx=Load()), Name(id='expressions', ctx=Load())], keywords=[]))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='order_by', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='values'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_order_by', ctx=Store())], value=Name(id='values', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='order_by_extend', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='values'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_order_by', ctx=Store())], value=BoolOp(op=Or(), values=[BinOp(left=BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_order_by', ctx=Load()), Tuple(elts=[], ctx=Load())]), op=Add(), right=Name(id='values', ctx=Load())), Constant(value=None)]))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='limit', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_limit', ctx=Store())], value=Name(id='value', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='offset', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_offset', ctx=Store())], value=Name(id='value', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='paginate', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='page'), arg(arg='paginate_by')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=20)]), body=[If(test=Compare(left=Name(id='page', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), body=[AugAssign(target=Name(id='page', ctx=Store()), op=Sub(), value=Constant(value=1))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_limit', ctx=Store())], value=Name(id='paginate_by', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_offset', ctx=Store())], value=BinOp(left=Name(id='page', ctx=Load()), op=Mult(), right=Name(id='paginate_by', ctx=Load())))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='_apply_ordering', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_order_by', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' ORDER BY ')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Name(id='CommaNodeList', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_order_by', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_limit', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_offset', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='limit_max', ctx=Load())])]), body=[Assign(targets=[Name(id='limit', ctx=Store())], value=IfExp(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_limit', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='limit_max', ctx=Load()), orelse=Attribute(value=Name(id='self', ctx=Load()), attr='_limit', ctx=Load()))), Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' LIMIT ')], keywords=[]), attr='sql', ctx=Load()), args=[Name(id='limit', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_offset', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' OFFSET ')], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_offset', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_cte_list', ctx=Load()), body=[Assign(targets=[Name(id='recursive', ctx=Store())], value=Call(func=Name(id='any', ctx=Load()), args=[GeneratorExp(elt=Attribute(value=Name(id='cte', ctx=Load()), attr='_recursive', ctx=Load()), generators=[comprehension(target=Name(id='cte', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_cte_list', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_cte', ctx=Load()), args=[], keywords=[keyword(arg='subquery', value=Constant(value=False))]))], body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[IfExp(test=Name(id='recursive', ctx=Load()), body=Constant(value='WITH RECURSIVE '), orelse=Constant(value='WITH '))], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Name(id='CommaNodeList', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_cte_list', ctx=Load())], keywords=[])], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value=' ')], keywords=[]))])], orelse=[]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[])], decorator_list=[]), FunctionDef(name='__compound_select__', args=arguments(posonlyargs=[], args=[arg(arg='operation'), arg(arg='inverted')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[FunctionDef(name='method', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Name(id='inverted', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='self', ctx=Store()), Name(id='other', ctx=Store())], ctx=Store())], value=Tuple(elts=[Name(id='other', ctx=Load()), Name(id='self', ctx=Load())], ctx=Load()))], orelse=[]), Return(value=Call(func=Name(id='CompoundSelectQuery', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='operation', ctx=Load()), Name(id='other', ctx=Load())], keywords=[]))], decorator_list=[Name(id='__bind_database__', ctx=Load())]), Return(value=Name(id='method', ctx=Load()))], decorator_list=[]), ClassDef(name='SelectQuery', bases=[Name(id='Query', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='union_all', ctx=Store()), Name(id='__add__', ctx=Store())], value=Call(func=Name(id='__compound_select__', ctx=Load()), args=[Constant(value='UNION ALL')], keywords=[])), Assign(targets=[Name(id='union', ctx=Store()), Name(id='__or__', ctx=Store())], value=Call(func=Name(id='__compound_select__', ctx=Load()), args=[Constant(value='UNION')], keywords=[])), Assign(targets=[Name(id='intersect', ctx=Store()), Name(id='__and__', ctx=Store())], value=Call(func=Name(id='__compound_select__', ctx=Load()), args=[Constant(value='INTERSECT')], keywords=[])), Assign(targets=[Name(id='except_', ctx=Store()), Name(id='__sub__', ctx=Store())], value=Call(func=Name(id='__compound_select__', ctx=Load()), args=[Constant(value='EXCEPT')], keywords=[])), Assign(targets=[Name(id='__radd__', ctx=Store())], value=Call(func=Name(id='__compound_select__', ctx=Load()), args=[Constant(value='UNION ALL')], keywords=[keyword(arg='inverted', value=Constant(value=True))])), Assign(targets=[Name(id='__ror__', ctx=Store())], value=Call(func=Name(id='__compound_select__', ctx=Load()), args=[Constant(value='UNION')], keywords=[keyword(arg='inverted', value=Constant(value=True))])), Assign(targets=[Name(id='__rand__', ctx=Store())], value=Call(func=Name(id='__compound_select__', ctx=Load()), args=[Constant(value='INTERSECT')], keywords=[keyword(arg='inverted', value=Constant(value=True))])), Assign(targets=[Name(id='__rsub__', ctx=Store())], value=Call(func=Name(id='__compound_select__', ctx=Load()), args=[Constant(value='EXCEPT')], keywords=[keyword(arg='inverted', value=Constant(value=True))])), FunctionDef(name='select_from', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='columns'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Name(id='columns', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='select_from() must specify one or more columns.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='query', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Select', ctx=Load()), args=[Tuple(elts=[Name(id='self', ctx=Load())], ctx=Load()), Name(id='columns', ctx=Load())], keywords=[]), attr='bind', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load())], keywords=[])), If(test=Compare(left=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Constant(value='model'), Constant(value=None)], keywords=[]), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='query', ctx=Store())], value=Call(func=Attribute(value=Name(id='query', ctx=Load()), attr='objects', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='query', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='SelectBase', bases=[Name(id='_HashableSource', ctx=Load()), Name(id='Source', ctx=Load()), Name(id='SelectQuery', ctx=Load())], keywords=[], body=[FunctionDef(name='_get_hash', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='hash', ctx=Load()), args=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='__class__', ctx=Load()), BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load()), Call(func=Name(id='id', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])])], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_execute', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='database', ctx=Load()), attr='execute', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_cursor_wrapper', ctx=Load()), args=[Name(id='cursor', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Load()))], decorator_list=[]), FunctionDef(name='peek', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database'), arg(arg='n')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=1)]), body=[Assign(targets=[Name(id='rows', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[]), slice=Slice(upper=Name(id='n', ctx=Load())), ctx=Load())), If(test=Name(id='rows', ctx=Load()), body=[Return(value=IfExp(test=Compare(left=Name(id='n', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)]), body=Subscript(value=Name(id='rows', ctx=Load()), slice=Constant(value=0), ctx=Load()), orelse=Name(id='rows', ctx=Load())))], orelse=[])], decorator_list=[Name(id='database_required', ctx=Load())]), FunctionDef(name='first', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database'), arg(arg='n')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=1)]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_limit', ctx=Load()), ops=[NotEq()], comparators=[Name(id='n', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_limit', ctx=Store())], value=Name(id='n', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Store())], value=Constant(value=None))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[keyword(arg='n', value=Name(id='n', ctx=Load()))]))], decorator_list=[Name(id='database_required', ctx=Load())]), FunctionDef(name='scalar', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database'), arg(arg='as_tuple'), arg(arg='as_dict')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=False)]), body=[If(test=Name(id='as_dict', ctx=Load()), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='dicts', ctx=Load()), args=[], keywords=[]), attr='peek', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='row', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='tuples', ctx=Load()), args=[], keywords=[]), attr='peek', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[])), Return(value=IfExp(test=BoolOp(op=And(), values=[Name(id='row', ctx=Load()), UnaryOp(op=Not(), operand=Name(id='as_tuple', ctx=Load()))]), body=Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=0), ctx=Load()), orelse=Name(id='row', ctx=Load())))], decorator_list=[Name(id='database_required', ctx=Load())]), FunctionDef(name='scalars', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='row', ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='tuples', ctx=Load()), args=[], keywords=[]), attr='execute', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=0), ctx=Load())))], orelse=[])], decorator_list=[Name(id='database_required', ctx=Load())]), FunctionDef(name='count', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database'), arg(arg='clear_limit')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Assign(targets=[Name(id='clone', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='order_by', ctx=Load()), args=[], keywords=[]), attr='alias', ctx=Load()), args=[Constant(value='_wrapped')], keywords=[])), If(test=Name(id='clear_limit', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='clone', ctx=Load()), attr='_limit', ctx=Store()), Attribute(value=Name(id='clone', ctx=Load()), attr='_offset', ctx=Store())], value=Constant(value=None))], orelse=[]), Try(body=[If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='clone', ctx=Load()), attr='_having', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Name(id='clone', ctx=Load()), attr='_group_by', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Name(id='clone', ctx=Load()), attr='_windows', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Name(id='clone', ctx=Load()), attr='_distinct', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Name(id='clone', ctx=Load()), attr='_simple_distinct', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=True)])]), body=[Assign(targets=[Name(id='clone', ctx=Store())], value=Call(func=Attribute(value=Name(id='clone', ctx=Load()), attr='select', ctx=Load()), args=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='1')], keywords=[])], keywords=[]))], orelse=[])], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[]), Return(value=Call(func=Attribute(value=Call(func=Name(id='Select', ctx=Load()), args=[List(elts=[Name(id='clone', ctx=Load())], ctx=Load()), List(elts=[Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='COUNT', ctx=Load()), args=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='1')], keywords=[])], keywords=[])], ctx=Load())], keywords=[]), attr='scalar', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[]))], decorator_list=[Name(id='database_required', ctx=Load())]), FunctionDef(name='exists', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='clone', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Load()), args=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='1')], keywords=[])], keywords=[])), Assign(targets=[Attribute(value=Name(id='clone', ctx=Load()), attr='_limit', ctx=Store())], value=Constant(value=1)), Assign(targets=[Attribute(value=Name(id='clone', ctx=Load()), attr='_offset', ctx=Store())], value=Constant(value=None)), Return(value=Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='clone', ctx=Load()), attr='scalar', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[Name(id='database_required', ctx=Load())]), FunctionDef(name='get', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Store())], value=Constant(value=None)), Try(body=[Return(value=Subscript(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='IndexError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], decorator_list=[Name(id='database_required', ctx=Load())])], decorator_list=[]), ClassDef(name='CompoundSelectQuery', bases=[Name(id='SelectBase', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='lhs'), arg(arg='op'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='CompoundSelectQuery', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='lhs', ctx=Store())], value=Name(id='lhs', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='op', ctx=Store())], value=Name(id='op', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='rhs', ctx=Store())], value=Name(id='rhs', ctx=Load()))], decorator_list=[]), FunctionDef(name='_returning', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='lhs', ctx=Load()), attr='_returning', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='exists', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='query', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Select', ctx=Load()), args=[Tuple(elts=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='limit', ctx=Load()), args=[Constant(value=1)], keywords=[])], ctx=Load()), Tuple(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='1')], keywords=[])], ctx=Load())], keywords=[]), attr='bind', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='query', ctx=Load()), attr='scalar', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[Name(id='database_required', ctx=Load())]), FunctionDef(name='_get_query_key', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Tuple(elts=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='lhs', ctx=Load()), attr='get_query_key', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='rhs', ctx=Load()), attr='get_query_key', ctx=Load()), args=[], keywords=[])], ctx=Load()))], decorator_list=[]), FunctionDef(name='_wrap_parens', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx'), arg(arg='subq')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='csq_setting', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='compound_select_parentheses', ctx=Load())), If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Name(id='csq_setting', ctx=Load())), Compare(left=Name(id='csq_setting', ctx=Load()), ops=[Eq()], comparators=[Name(id='CSQ_PARENTHESES_NEVER', ctx=Load())])]), body=[Return(value=Constant(value=False))], orelse=[If(test=Compare(left=Name(id='csq_setting', ctx=Load()), ops=[Eq()], comparators=[Name(id='CSQ_PARENTHESES_ALWAYS', ctx=Load())]), body=[Return(value=Constant(value=True))], orelse=[If(test=Compare(left=Name(id='csq_setting', ctx=Load()), ops=[Eq()], comparators=[Name(id='CSQ_PARENTHESES_UNNESTED', ctx=Load())]), body=[If(test=BoolOp(op=Or(), values=[Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='in_expr', ctx=Load()), Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='in_function', ctx=Load())]), body=[Return(value=Constant(value=False))], orelse=[]), Return(value=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='subq', ctx=Load()), Name(id='CompoundSelectQuery', ctx=Load())], keywords=[])))], orelse=[])])])], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope', ctx=Load()), ops=[Eq()], comparators=[Name(id='SCOPE_COLUMN', ctx=Load())]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='apply_column', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='CompoundSelectQuery', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__sql__', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[])), Assign(targets=[Name(id='outer_parens', ctx=Store())], value=BoolOp(op=Or(), values=[Attribute(value=Name(id='ctx', ctx=Load()), attr='subquery', ctx=Load()), Compare(left=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope', ctx=Load()), ops=[Eq()], comparators=[Name(id='SCOPE_SOURCE', ctx=Load())])])), With(items=[withitem(context_expr=Call(func=Name(id='ctx', ctx=Load()), args=[], keywords=[keyword(arg='parentheses', value=Name(id='outer_parens', ctx=Load()))]))], body=[Assign(targets=[Name(id='lhs_parens', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_wrap_parens', ctx=Load()), args=[Name(id='ctx', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='lhs', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_normal', ctx=Load()), args=[], keywords=[keyword(arg='parentheses', value=Name(id='lhs_parens', ctx=Load())), keyword(arg='subquery', value=Constant(value=False))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='lhs', ctx=Load())], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[BinOp(left=Constant(value=' %s '), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='op', ctx=Load()))], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='push_alias', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='rhs_parens', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_wrap_parens', ctx=Load()), args=[Name(id='ctx', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='rhs', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_normal', ctx=Load()), args=[], keywords=[keyword(arg='parentheses', value=Name(id='rhs_parens', ctx=Load())), keyword(arg='subquery', value=Constant(value=False))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='rhs', ctx=Load())], keywords=[]))])]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_values', ctx=Load()), args=[], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_apply_ordering', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[]))])]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='apply_alias', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='Select', bases=[Name(id='SelectBase', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='from_list'), arg(arg='columns'), arg(arg='group_by'), arg(arg='having'), arg(arg='distinct'), arg(arg='windows'), arg(arg='for_update'), arg(arg='for_update_of'), arg(arg='nowait'), arg(arg='lateral')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='Select', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_from_list', ctx=Store())], value=BoolOp(op=Or(), values=[IfExp(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='from_list', ctx=Load()), Name(id='tuple', ctx=Load())], keywords=[]), body=Call(func=Name(id='list', ctx=Load()), args=[Name(id='from_list', ctx=Load())], keywords=[]), orelse=Name(id='from_list', ctx=Load())), List(elts=[], ctx=Load())])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Store())], value=Name(id='columns', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_group_by', ctx=Store())], value=Name(id='group_by', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_having', ctx=Store())], value=Name(id='having', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_windows', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_for_update', ctx=Store())], value=Name(id='for_update', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_for_update_of', ctx=Store())], value=Name(id='for_update_of', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_for_update_nowait', ctx=Store())], value=Name(id='nowait', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_lateral', ctx=Store())], value=Name(id='lateral', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_distinct', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='_simple_distinct', ctx=Store())], value=Constant(value=None)), If(test=Name(id='distinct', ctx=Load()), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='distinct', ctx=Load()), Name(id='bool', ctx=Load())], keywords=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_simple_distinct', ctx=Store())], value=Name(id='distinct', ctx=Load()))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_distinct', ctx=Store())], value=Name(id='distinct', ctx=Load()))])], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='clone', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='clone', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='Select', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='clone', ctx=Load()), args=[], keywords=[])), If(test=Attribute(value=Name(id='clone', ctx=Load()), attr='_from_list', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='clone', ctx=Load()), attr='_from_list', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Attribute(value=Name(id='clone', ctx=Load()), attr='_from_list', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='clone', ctx=Load()))], decorator_list=[]), FunctionDef(name='columns', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='columns'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Store())], value=Name(id='columns', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), Assign(targets=[Name(id='select', ctx=Store())], value=Name(id='columns', ctx=Load())), FunctionDef(name='select_extend', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='columns'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Store())], value=BinOp(left=Call(func=Name(id='tuple', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Load())], keywords=[]), op=Add(), right=Name(id='columns', ctx=Load())))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='selected_columns', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='selected_columns', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Store())], value=Name(id='value', ctx=Load()))], decorator_list=[Attribute(value=Name(id='selected_columns', ctx=Load()), attr='setter', ctx=Load())]), FunctionDef(name='from_', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='sources'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_from_list', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Name(id='sources', ctx=Load())], keywords=[]))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='join', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dest'), arg(arg='join_type'), arg(arg='on')], kwonlyargs=[], kw_defaults=[], defaults=[Attribute(value=Name(id='JOIN', ctx=Load()), attr='INNER', ctx=Load()), Constant(value=None)]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_from_list', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='No sources to join on.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='item', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_from_list', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_from_list', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='Join', ctx=Load()), args=[Name(id='item', ctx=Load()), Name(id='dest', ctx=Load()), Name(id='join_type', ctx=Load()), Name(id='on', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='left_outer_join', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dest'), arg(arg='on')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dest', ctx=Load()), Attribute(value=Name(id='JOIN', ctx=Load()), attr='LEFT_OUTER', ctx=Load()), Name(id='on', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='group_by', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='columns'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='grouping', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='column', ctx=Store()), iter=Name(id='columns', ctx=Load()), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='column', ctx=Load()), Name(id='Table', ctx=Load())], keywords=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='column', ctx=Load()), attr='_columns', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Cannot pass a table to group_by() that does not have columns explicitly declared.')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='grouping', ctx=Load()), attr='extend', ctx=Load()), args=[ListComp(elt=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='column', ctx=Load()), Name(id='col_name', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='col_name', ctx=Store()), iter=Attribute(value=Name(id='column', ctx=Load()), attr='_columns', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='grouping', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='column', ctx=Load())], keywords=[]))])], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_group_by', ctx=Store())], value=Name(id='grouping', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='group_by_extend', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='values'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='@Node.copy used from group_by() call')), Assign(targets=[Name(id='group_by', ctx=Store())], value=BinOp(left=Call(func=Name(id='tuple', ctx=Load()), args=[BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_group_by', ctx=Load()), Tuple(elts=[], ctx=Load())])], keywords=[]), op=Add(), right=Name(id='values', ctx=Load()))), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='group_by', ctx=Load()), args=[Starred(value=Name(id='group_by', ctx=Load()), ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='having', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='expressions'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_having', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='expressions', ctx=Store())], value=BinOp(left=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='_having', ctx=Load())], ctx=Load()), op=Add(), right=Name(id='expressions', ctx=Load())))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_having', ctx=Store())], value=Call(func=Name(id='reduce', ctx=Load()), args=[Attribute(value=Name(id='operator', ctx=Load()), attr='and_', ctx=Load()), Name(id='expressions', ctx=Load())], keywords=[]))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='distinct', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='columns'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='columns', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), BoolOp(op=Or(), values=[Compare(left=Subscript(value=Name(id='columns', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[Is()], comparators=[Constant(value=True)]), Compare(left=Subscript(value=Name(id='columns', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[Is()], comparators=[Constant(value=False)])])]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_simple_distinct', ctx=Store())], value=Subscript(value=Name(id='columns', ctx=Load()), slice=Constant(value=0), ctx=Load()))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_simple_distinct', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_distinct', ctx=Store())], value=Name(id='columns', ctx=Load()))])], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='window', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='windows'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_windows', ctx=Store())], value=IfExp(test=Name(id='windows', ctx=Load()), body=Name(id='windows', ctx=Load()), orelse=Constant(value=None)))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='for_update', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='for_update'), arg(arg='of'), arg(arg='nowait')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True), Constant(value=None), Constant(value=None)]), body=[If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='for_update', ctx=Load())), BoolOp(op=Or(), values=[Compare(left=Name(id='of', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Name(id='nowait', ctx=Load())])]), body=[Assign(targets=[Name(id='for_update', ctx=Store())], value=Constant(value=True))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_for_update', ctx=Store())], value=Name(id='for_update', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_for_update_of', ctx=Store())], value=Name(id='of', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_for_update_nowait', ctx=Store())], value=Name(id='nowait', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='lateral', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='lateral')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_lateral', ctx=Store())], value=Name(id='lateral', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='_get_query_key', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load()))], decorator_list=[]), FunctionDef(name='__sql_selection__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx'), arg(arg='is_subquery')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='CommaNodeList', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope', ctx=Load()), ops=[Eq()], comparators=[Name(id='SCOPE_COLUMN', ctx=Load())]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='apply_column', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_lateral', ctx=Load()), Compare(left=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope', ctx=Load()), ops=[Eq()], comparators=[Name(id='SCOPE_SOURCE', ctx=Load())])]), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='LATERAL ')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='is_subquery', ctx=Store())], value=Attribute(value=Name(id='ctx', ctx=Load()), attr='subquery', ctx=Load())), Assign(targets=[Name(id='state', ctx=Store())], value=Dict(keys=[Constant(value='converter'), Constant(value='in_function'), Constant(value='parentheses'), Constant(value='subquery')], values=[Constant(value=None), Constant(value=False), BoolOp(op=Or(), values=[Name(id='is_subquery', ctx=Load()), Compare(left=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope', ctx=Load()), ops=[Eq()], comparators=[Name(id='SCOPE_SOURCE', ctx=Load())])]), Constant(value=True)])), If(test=BoolOp(op=And(), values=[Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='in_function', ctx=Load()), Compare(left=Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='function_arg_count', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)])]), body=[Assign(targets=[Subscript(value=Name(id='state', ctx=Load()), slice=Constant(value='parentheses'), ctx=Store())], value=Constant(value=False))], orelse=[]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_normal', ctx=Load()), args=[], keywords=[keyword(value=Name(id='state', ctx=Load()))]))], body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='Select', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__sql__', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='SELECT ')], keywords=[])), If(test=BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_simple_distinct', ctx=Load()), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_distinct', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='DISTINCT ')], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_distinct', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='ON ')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Name(id='EnclosedNodeList', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_distinct', ctx=Load())], keywords=[])], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value=' ')], keywords=[]))], orelse=[])], orelse=[]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_source', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='ctx', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='__sql_selection__', ctx=Load()), args=[Name(id='ctx', ctx=Load()), Name(id='is_subquery', ctx=Load())], keywords=[]))]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_from_list', ctx=Load()), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_source', ctx=Load()), args=[], keywords=[keyword(arg='parentheses', value=Constant(value=False))]))], body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' FROM ')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Name(id='CommaNodeList', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_from_list', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' WHERE ')], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Load())], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_group_by', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' GROUP BY ')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Name(id='CommaNodeList', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_group_by', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_having', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' HAVING ')], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_having', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_windows', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' WINDOW ')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='CommaNodeList', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_windows', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_apply_ordering', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_for_update', ctx=Load()), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='for_update', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='FOR UPDATE specified but not supported by database.')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' ')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='ForUpdate', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_for_update', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_for_update_of', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_for_update_nowait', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])]), If(test=BoolOp(op=Or(), values=[Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='in_function', ctx=Load()), BoolOp(op=And(), values=[Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='in_expr', ctx=Load()), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_alias', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])])]), body=[Return(value=Name(id='ctx', ctx=Load()))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='apply_alias', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='_WriteQuery', bases=[Name(id='Query', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='returning')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Store())], value=Name(id='table', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Store())], value=Name(id='returning', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_return_cursor', ctx=Store())], value=IfExp(test=Name(id='returning', ctx=Load()), body=Constant(value=True), orelse=Constant(value=False))), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='_WriteQuery', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='cte', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name'), arg(arg='recursive'), arg(arg='columns'), arg(arg='materialized')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=None), Constant(value=None)]), body=[Return(value=Call(func=Name(id='CTE', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='self', ctx=Load())], keywords=[keyword(arg='recursive', value=Name(id='recursive', ctx=Load())), keyword(arg='columns', value=Name(id='columns', ctx=Load())), keyword(arg='materialized', value=Name(id='materialized', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='returning', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='returning'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Store())], value=Name(id='returning', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_return_cursor', ctx=Store())], value=IfExp(test=Name(id='returning', ctx=Load()), body=Constant(value=True), orelse=Constant(value=False)))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='apply_returning', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Load()), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_source', ctx=Load()), args=[], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' RETURNING ')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Name(id='CommaNodeList', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[]), FunctionDef(name='_execute', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Load()), body=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_returning', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='database', ctx=Load()), attr='execute', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='handle_result', ctx=Load()), args=[Name(id='database', ctx=Load()), Name(id='cursor', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='execute_returning', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='database', ctx=Load()), attr='execute', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_cursor_wrapper', ctx=Load()), args=[Name(id='cursor', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Load()))], decorator_list=[]), FunctionDef(name='handle_result', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database'), arg(arg='cursor')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_return_cursor', ctx=Load()), body=[Return(value=Name(id='cursor', ctx=Load()))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='database', ctx=Load()), attr='rows_affected', ctx=Load()), args=[Name(id='cursor', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_set_table_alias', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='alias_manager', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), attr='__name__', ctx=Load()))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='_WriteQuery', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__sql__', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_table_alias', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[])), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='Update', bases=[Name(id='_WriteQuery', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='update')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='Update', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='table', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_update', ctx=Store())], value=Name(id='update', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_from', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='from_', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='sources'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_from', ctx=Store())], value=Name(id='sources', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='Update', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__sql__', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_values', ctx=Load()), args=[], keywords=[keyword(arg='subquery', value=Constant(value=True))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='UPDATE ')], keywords=[])), Assign(targets=[Name(id='expressions', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='sorted', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_update', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='key', value=Attribute(value=Name(id='ctx', ctx=Load()), attr='column_sort_key', ctx=Load()))]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='v', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[])), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='k', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='v', ctx=Store())], value=Call(func=Attribute(value=Name(id='k', ctx=Load()), attr='to_value', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='v', ctx=Store())], value=Call(func=Name(id='Value', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[keyword(arg='unpack', value=Constant(value=False))]))])], orelse=[If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='v', ctx=Load()), Name(id='Model', ctx=Load())], keywords=[]), Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='k', ctx=Load()), Name(id='ForeignKeyField', ctx=Load())], keywords=[])]), body=[Assign(targets=[Name(id='v', ctx=Store())], value=Call(func=Attribute(value=Name(id='k', ctx=Load()), attr='to_value', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[]))], orelse=[])]), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='v', ctx=Load()), Name(id='Value', ctx=Load())], keywords=[])), body=[Assign(targets=[Name(id='v', ctx=Store())], value=Call(func=Name(id='qualify_names', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='expressions', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Name(id='k', ctx=Load()), Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='=')], keywords=[]), Name(id='v', ctx=Load())], ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load())], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value=' SET ')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Name(id='CommaNodeList', ctx=Load()), args=[Name(id='expressions', ctx=Load())], keywords=[])], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_from', ctx=Load()), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_source', ctx=Load()), args=[], keywords=[keyword(arg='parentheses', value=Constant(value=False))]))], body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' FROM ')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Name(id='CommaNodeList', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_from', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Load()), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_normal', ctx=Load()), args=[], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' WHERE ')], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Load())], keywords=[]))])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_apply_ordering', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='apply_returning', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[]))])], decorator_list=[])], decorator_list=[]), ClassDef(name='Insert', bases=[Name(id='_WriteQuery', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='SIMPLE', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='QUERY', ctx=Store())], value=Constant(value=1)), Assign(targets=[Name(id='MULTI', ctx=Store())], value=Constant(value=2)), ClassDef(name='DefaultValuesException', bases=[Name(id='Exception', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='insert'), arg(arg='columns'), arg(arg='on_conflict')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None), Constant(value=None), Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='Insert', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='table', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_insert', ctx=Store())], value=Name(id='insert', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Store())], value=Name(id='columns', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_on_conflict', ctx=Store())], value=Name(id='on_conflict', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_query_type', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_as_rowcount', ctx=Store())], value=Constant(value=False))], decorator_list=[]), FunctionDef(name='where', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='expressions'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Call(func=Name(id='NotImplementedError', ctx=Load()), args=[Constant(value='INSERT queries cannot have a WHERE clause.')], keywords=[]))], decorator_list=[]), FunctionDef(name='as_rowcount', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='_as_rowcount')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_as_rowcount', ctx=Store())], value=Name(id='_as_rowcount', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='on_conflict_ignore', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ignore')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_on_conflict', ctx=Store())], value=IfExp(test=Name(id='ignore', ctx=Load()), body=Call(func=Name(id='OnConflict', ctx=Load()), args=[Constant(value='IGNORE')], keywords=[]), orelse=Constant(value=None)))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='on_conflict_replace', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='replace')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_on_conflict', ctx=Store())], value=IfExp(test=Name(id='replace', ctx=Load()), body=Call(func=Name(id='OnConflict', ctx=Load()), args=[Constant(value='REPLACE')], keywords=[]), orelse=Constant(value=None)))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='on_conflict', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_on_conflict', ctx=Store())], value=IfExp(test=BoolOp(op=Or(), values=[Name(id='args', ctx=Load()), Name(id='kwargs', ctx=Load())]), body=Call(func=Name(id='OnConflict', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]), orelse=Constant(value=None)))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='_simple_insert', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_insert', ctx=Load())), body=[Raise(exc=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='DefaultValuesException', ctx=Load()), args=[Constant(value='Error: no data to insert.')], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_generate_insert', ctx=Load()), args=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='_insert', ctx=Load())], ctx=Load()), Name(id='ctx', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_default_data', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Dict(keys=[], values=[]))], decorator_list=[]), FunctionDef(name='get_default_columns', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), attr='_columns', ctx=Load()), body=[Return(value=ListComp(elt=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), Name(id='col', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='col', ctx=Store()), iter=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), attr='_columns', ctx=Load()), ifs=[Compare(left=Name(id='col', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), attr='_primary_key', ctx=Load())])], is_async=0)]))], orelse=[])], decorator_list=[]), FunctionDef(name='_generate_insert', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='insert'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='rows_iter', ctx=Store())], value=Call(func=Name(id='iter', ctx=Load()), args=[Name(id='insert', ctx=Load())], keywords=[])), Assign(targets=[Name(id='columns', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Load())), Assign(targets=[Name(id='defaults', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_default_data', ctx=Load()), args=[], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='columns', ctx=Load())), body=[Try(body=[Assign(targets=[Name(id='row', ctx=Store())], value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='rows_iter', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='StopIteration', ctx=Load()), body=[Raise(exc=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='DefaultValuesException', ctx=Load()), args=[Constant(value='Error: no rows to insert.')], keywords=[]))])], orelse=[], finalbody=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='row', ctx=Load()), Name(id='Mapping', ctx=Load())], keywords=[])), body=[Assign(targets=[Name(id='columns', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_default_columns', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='columns', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Bulk insert must specify columns.')], keywords=[]))], orelse=[])], orelse=[Assign(targets=[Name(id='accum', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='column', ctx=Store()), iter=Name(id='row', ctx=Load()), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='column', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='column', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), Name(id='column', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='column', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='column_set', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[Name(id='accum', ctx=Load())], keywords=[])), For(target=Name(id='col', ctx=Store()), iter=BinOp(left=Call(func=Name(id='set', ctx=Load()), args=[Name(id='defaults', ctx=Load())], keywords=[]), op=Sub(), right=Name(id='column_set', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='col', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='columns', ctx=Store())], value=Call(func=Name(id='sorted', ctx=Load()), args=[Name(id='accum', ctx=Load())], keywords=[keyword(arg='key', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='obj')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='obj', ctx=Load()), attr='get_sort_key', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[])))]))]), Assign(targets=[Name(id='rows_iter', ctx=Store())], value=Call(func=Attribute(value=Name(id='itertools', ctx=Load()), attr='chain', ctx=Load()), args=[Call(func=Name(id='iter', ctx=Load()), args=[Tuple(elts=[Name(id='row', ctx=Load())], ctx=Load())], keywords=[]), Name(id='rows_iter', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='clean_columns', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='seen', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), For(target=Name(id='column', ctx=Store()), iter=Name(id='columns', ctx=Load()), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='column', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='column_obj', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), Name(id='column', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='column_obj', ctx=Store())], value=Name(id='column', ctx=Load()))]), Expr(value=Call(func=Attribute(value=Name(id='clean_columns', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='column_obj', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='seen', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='column_obj', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='columns', ctx=Store())], value=Name(id='clean_columns', ctx=Load())), For(target=Name(id='col', ctx=Store()), iter=Call(func=Name(id='sorted', ctx=Load()), args=[Name(id='defaults', ctx=Load())], keywords=[keyword(arg='key', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='obj')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='obj', ctx=Load()), attr='get_sort_key', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[])))]), body=[If(test=Compare(left=Name(id='col', ctx=Load()), ops=[NotIn()], comparators=[Name(id='seen', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='columns', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='col', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])]), Assign(targets=[Name(id='fk_fields', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='nullable_columns', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='value_lookups', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Name(id='column', ctx=Store()), iter=Name(id='columns', ctx=Load()), body=[Assign(targets=[Name(id='lookups', ctx=Store())], value=List(elts=[Name(id='column', ctx=Load()), Attribute(value=Name(id='column', ctx=Load()), attr='name', ctx=Load())], ctx=Load())), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='column', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[]), body=[If(test=Compare(left=Attribute(value=Name(id='column', ctx=Load()), attr='name', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='column', ctx=Load()), attr='column_name', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='lookups', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='column', ctx=Load()), attr='column_name', ctx=Load())], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='column', ctx=Load()), attr='null', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='nullable_columns', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='column', ctx=Load())], keywords=[]))], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='column', ctx=Load()), Name(id='ForeignKeyField', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='fk_fields', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='column', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Subscript(value=Name(id='value_lookups', ctx=Load()), slice=Name(id='column', ctx=Load()), ctx=Store())], value=Name(id='lookups', ctx=Load()))], orelse=[]), Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='EnclosedNodeList', ctx=Load()), args=[Name(id='columns', ctx=Load())], keywords=[])], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value=' VALUES ')], keywords=[])), Assign(targets=[Name(id='columns_converters', ctx=Store())], value=ListComp(elt=Tuple(elts=[Name(id='column', ctx=Load()), IfExp(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='column', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[]), body=Attribute(value=Name(id='column', ctx=Load()), attr='db_value', ctx=Load()), orelse=Constant(value=None))], ctx=Load()), generators=[comprehension(target=Name(id='column', ctx=Store()), iter=Name(id='columns', ctx=Load()), ifs=[], is_async=0)])), Assign(targets=[Name(id='all_values', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='row', ctx=Store()), iter=Name(id='rows_iter', ctx=Load()), body=[Assign(targets=[Name(id='values', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='is_dict', ctx=Store())], value=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='row', ctx=Load()), Name(id='Mapping', ctx=Load())], keywords=[])), For(target=Tuple(elts=[Name(id='i', ctx=Store()), Tuple(elts=[Name(id='column', ctx=Store()), Name(id='converter', ctx=Store())], ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='columns_converters', ctx=Load())], keywords=[]), body=[Try(body=[If(test=Name(id='is_dict', ctx=Load()), body=[For(target=Name(id='lookup', ctx=Store()), iter=Subscript(value=Name(id='value_lookups', ctx=Load()), slice=Name(id='column', ctx=Load()), ctx=Load()), body=[Try(body=[Assign(targets=[Name(id='val', ctx=Store())], value=Subscript(value=Name(id='row', ctx=Load()), slice=Name(id='lookup', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Pass()])], orelse=[Break()], finalbody=[])], orelse=[Raise(exc=Name(id='KeyError', ctx=Load()))])], orelse=[Assign(targets=[Name(id='val', ctx=Store())], value=Subscript(value=Name(id='row', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()))])], handlers=[ExceptHandler(type=Tuple(elts=[Name(id='KeyError', ctx=Load()), Name(id='IndexError', ctx=Load())], ctx=Load()), body=[If(test=Compare(left=Name(id='column', ctx=Load()), ops=[In()], comparators=[Name(id='defaults', ctx=Load())]), body=[Assign(targets=[Name(id='val', ctx=Store())], value=Subscript(value=Name(id='defaults', ctx=Load()), slice=Name(id='column', ctx=Load()), ctx=Load())), If(test=Call(func=Name(id='callable_', ctx=Load()), args=[Name(id='val', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='val', ctx=Store())], value=Call(func=Name(id='val', ctx=Load()), args=[], keywords=[]))], orelse=[])], orelse=[If(test=Compare(left=Name(id='column', ctx=Load()), ops=[In()], comparators=[Name(id='nullable_columns', ctx=Load())]), body=[Assign(targets=[Name(id='val', ctx=Store())], value=Constant(value=None))], orelse=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='Missing value for %s.'), op=Mod(), right=Attribute(value=Name(id='column', ctx=Load()), attr='name', ctx=Load()))], keywords=[]))])])])], orelse=[], finalbody=[]), If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='val', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[])), BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='val', ctx=Load()), Name(id='Model', ctx=Load())], keywords=[]), Compare(left=Name(id='column', ctx=Load()), ops=[In()], comparators=[Name(id='fk_fields', ctx=Load())])])]), body=[Assign(targets=[Name(id='val', ctx=Store())], value=Call(func=Name(id='Value', ctx=Load()), args=[Name(id='val', ctx=Load())], keywords=[keyword(arg='converter', value=Name(id='converter', ctx=Load())), keyword(arg='unpack', value=Constant(value=False))]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='values', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='val', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='all_values', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='EnclosedNodeList', ctx=Load()), args=[Name(id='values', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='all_values', ctx=Load())), body=[Raise(exc=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='DefaultValuesException', ctx=Load()), args=[Constant(value='Error: no data to insert.')], keywords=[]))], orelse=[]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_values', ctx=Load()), args=[], keywords=[keyword(arg='subquery', value=Constant(value=True))]))], body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='CommaNodeList', ctx=Load()), args=[Name(id='all_values', ctx=Load())], keywords=[])], keywords=[]))])], decorator_list=[]), FunctionDef(name='_query_insert', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='EnclosedNodeList', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Load())], keywords=[])], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value=' ')], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_insert', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_default_values', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load())), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='DEFAULT VALUES')], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), attr='default_values_insert', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='Insert', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__sql__', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_values', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='stmt', ctx=Store())], value=Constant(value=None)), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_on_conflict', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='stmt', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_on_conflict', ctx=Load()), attr='get_conflict_statement', ctx=Load()), args=[Name(id='ctx', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[BoolOp(op=Or(), values=[Name(id='stmt', ctx=Load()), Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='INSERT')], keywords=[])])], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value=' INTO ')], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load())], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value=' ')], keywords=[])), If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_insert', ctx=Load()), Name(id='Mapping', ctx=Load())], keywords=[]), UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_columns', ctx=Load()))]), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_simple_insert', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='self', ctx=Load()), attr='DefaultValuesException', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_default_values', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[]))])], orelse=[], finalbody=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_query_type', ctx=Store())], value=Attribute(value=Name(id='Insert', ctx=Load()), attr='SIMPLE', ctx=Load()))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_insert', ctx=Load()), Tuple(elts=[Name(id='SelectQuery', ctx=Load()), Name(id='SQL', ctx=Load())], ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_query_insert', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_query_type', ctx=Store())], value=Attribute(value=Name(id='Insert', ctx=Load()), attr='QUERY', ctx=Load()))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_generate_insert', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_insert', ctx=Load()), Name(id='ctx', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_query_type', ctx=Store())], value=Attribute(value=Name(id='Insert', ctx=Load()), attr='MULTI', ctx=Load()))])]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_on_conflict', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='update', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_on_conflict', ctx=Load()), attr='get_conflict_update', ctx=Load()), args=[Name(id='ctx', ctx=Load()), Name(id='self', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='update', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' ')], keywords=[]), attr='sql', ctx=Load()), args=[Name(id='update', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='apply_returning', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='_execute', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Attribute(value=Name(id='database', ctx=Load()), attr='returning_clause', ctx=Load()), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), attr='_primary_key', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Store())], value=Tuple(elts=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), attr='_primary_key', ctx=Load())], ctx=Load()))], orelse=[]), Try(body=[Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='Insert', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='_execute', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='self', ctx=Load()), attr='DefaultValuesException', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], decorator_list=[]), FunctionDef(name='handle_result', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database'), arg(arg='cursor')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_return_cursor', ctx=Load()), body=[Return(value=Name(id='cursor', ctx=Load()))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_as_rowcount', ctx=Load()), body=[Return(value=Call(func=Attribute(value=Name(id='database', ctx=Load()), attr='rows_affected', ctx=Load()), args=[Name(id='cursor', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='database', ctx=Load()), attr='last_insert_id', ctx=Load()), args=[Name(id='cursor', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_query_type', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='Delete', bases=[Name(id='_WriteQuery', ctx=Load())], keywords=[], body=[FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='Delete', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__sql__', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_values', ctx=Load()), args=[], keywords=[keyword(arg='subquery', value=Constant(value=True))]))], body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='DELETE FROM ')], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_normal', ctx=Load()), args=[], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' WHERE ')], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Load())], keywords=[]))])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_apply_ordering', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='apply_returning', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[]))])], decorator_list=[])], decorator_list=[]), ClassDef(name='Index', bases=[Name(id='Node', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name'), arg(arg='table'), arg(arg='expressions'), arg(arg='unique'), arg(arg='safe'), arg(arg='where'), arg(arg='using')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=False), Constant(value=None), Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_name', ctx=Store())], value=Name(id='name', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_table', ctx=Store())], value=IfExp(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='table', ctx=Load()), Name(id='Table', ctx=Load())], keywords=[])), body=Call(func=Name(id='Entity', ctx=Load()), args=[Name(id='table', ctx=Load())], keywords=[]), orelse=Name(id='table', ctx=Load()))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_expressions', ctx=Store())], value=Name(id='expressions', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Store())], value=Name(id='where', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_unique', ctx=Store())], value=Name(id='unique', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_safe', ctx=Store())], value=Name(id='safe', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_using', ctx=Store())], value=Name(id='using', ctx=Load()))], decorator_list=[]), FunctionDef(name='safe', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='_safe')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_safe', ctx=Store())], value=Name(id='_safe', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='where', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='expressions'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='expressions', ctx=Store())], value=BinOp(left=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Load())], ctx=Load()), op=Add(), right=Name(id='expressions', ctx=Load())))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Store())], value=Call(func=Name(id='reduce', ctx=Load()), args=[Attribute(value=Name(id='operator', ctx=Load()), attr='and_', ctx=Load()), Name(id='expressions', ctx=Load())], keywords=[]))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='using', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='_using')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_using', ctx=Store())], value=Name(id='_using', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='statement', ctx=Store())], value=IfExp(test=Attribute(value=Name(id='self', ctx=Load()), attr='_unique', ctx=Load()), body=Constant(value='CREATE UNIQUE INDEX '), orelse=Constant(value='CREATE INDEX '))), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_values', ctx=Load()), args=[], keywords=[keyword(arg='subquery', value=Constant(value=True))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Name(id='statement', ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_safe', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='IF NOT EXISTS ')], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='index_schema_prefix', ctx=Load()), Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_table', ctx=Load()), Name(id='Table', ctx=Load())], keywords=[]), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_table', ctx=Load()), attr='_schema', ctx=Load())]), body=[Assign(targets=[Name(id='index_name', ctx=Store())], value=Call(func=Name(id='Entity', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_table', ctx=Load()), attr='_schema', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='table_name', ctx=Store())], value=Call(func=Name(id='Entity', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_table', ctx=Load()), attr='__name__', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='index_name', ctx=Store())], value=Call(func=Name(id='Entity', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='table_name', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_table', ctx=Load()))]), Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Name(id='index_name', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_using', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='index_using_precedes_table', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[BinOp(left=Constant(value=' USING %s'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_using', ctx=Load()))], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' ON ')], keywords=[]), attr='sql', ctx=Load()), args=[Name(id='table_name', ctx=Load())], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value=' ')], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_using', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='index_using_precedes_table', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[BinOp(left=Constant(value='USING %s '), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_using', ctx=Load()))], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='EnclosedNodeList', ctx=Load()), args=[ListComp(elt=IfExp(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='expr', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), body=Call(func=Name(id='SQL', ctx=Load()), args=[Name(id='expr', ctx=Load())], keywords=[]), orelse=Name(id='expr', ctx=Load())), generators=[comprehension(target=Name(id='expr', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_expressions', ctx=Load()), ifs=[], is_async=0)])], keywords=[])], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' WHERE ')], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_where', ctx=Load())], keywords=[]))], orelse=[])]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='ModelIndex', bases=[Name(id='Index', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='fields'), arg(arg='unique'), arg(arg='safe'), arg(arg='where'), arg(arg='using'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=True), Constant(value=None), Constant(value=None), Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_model', ctx=Store())], value=Name(id='model', ctx=Load())), If(test=Compare(left=Name(id='name', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='name', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_generate_name_from_fields', ctx=Load()), args=[Name(id='model', ctx=Load()), Name(id='fields', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='using', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[For(target=Name(id='field', ctx=Store()), iter=Name(id='fields', ctx=Load()), body=[If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='field', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[]), Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='field', ctx=Load()), Constant(value='index_type')], keywords=[])]), body=[Assign(targets=[Name(id='using', ctx=Store())], value=Attribute(value=Name(id='field', ctx=Load()), attr='index_type', ctx=Load()))], orelse=[])], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ModelIndex', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Name(id='name', ctx=Load())), keyword(arg='table', value=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='table', ctx=Load())), keyword(arg='expressions', value=Name(id='fields', ctx=Load())), keyword(arg='unique', value=Name(id='unique', ctx=Load())), keyword(arg='safe', value=Name(id='safe', ctx=Load())), keyword(arg='where', value=Name(id='where', ctx=Load())), keyword(arg='using', value=Name(id='using', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='_generate_name_from_fields', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='fields')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='accum', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='field', ctx=Store()), iter=Name(id='fields', ctx=Load()), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='field', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='field', ctx=Load()), attr='split', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load())], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='field', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[]), UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='field', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[]))]), body=[Assign(targets=[Name(id='field', ctx=Store())], value=Call(func=Attribute(value=Name(id='field', ctx=Load()), attr='unwrap', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='field', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='field', ctx=Load()), attr='column_name', ctx=Load())], keywords=[]))], orelse=[])])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='accum', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Unable to generate a name for the index, please explicitly specify a name.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='clean_field_names', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='[^\\w]+'), Constant(value=''), Call(func=Attribute(value=Constant(value='_'), attr='join', ctx=Load()), args=[Name(id='accum', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='meta', ctx=Store())], value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load())), Assign(targets=[Name(id='prefix', ctx=Store())], value=IfExp(test=Attribute(value=Name(id='meta', ctx=Load()), attr='legacy_table_names', ctx=Load()), body=Attribute(value=Name(id='meta', ctx=Load()), attr='name', ctx=Load()), orelse=Attribute(value=Name(id='meta', ctx=Load()), attr='table_name', ctx=Load()))), Return(value=Call(func=Name(id='_truncate_constraint_name', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='_'), attr='join', ctx=Load()), args=[Tuple(elts=[Name(id='prefix', ctx=Load()), Name(id='clean_field_names', ctx=Load())], ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[])], decorator_list=[]), FunctionDef(name='_truncate_constraint_name', args=arguments(posonlyargs=[], args=[arg(arg='constraint'), arg(arg='maxlen')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=64)]), body=[If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='constraint', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Name(id='maxlen', ctx=Load())]), body=[Assign(targets=[Name(id='name_hash', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='hashlib', ctx=Load()), attr='md5', ctx=Load()), args=[Call(func=Attribute(value=Name(id='constraint', ctx=Load()), attr='encode', ctx=Load()), args=[Constant(value='utf-8')], keywords=[])], keywords=[]), attr='hexdigest', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='constraint', ctx=Store())], value=BinOp(left=Constant(value='%s_%s'), op=Mod(), right=Tuple(elts=[Subscript(value=Name(id='constraint', ctx=Load()), slice=Slice(upper=BinOp(left=Name(id='maxlen', ctx=Load()), op=Sub(), right=Constant(value=8))), ctx=Load()), Subscript(value=Name(id='name_hash', ctx=Load()), slice=Slice(upper=Constant(value=7)), ctx=Load())], ctx=Load())))], orelse=[]), Return(value=Name(id='constraint', ctx=Load()))], decorator_list=[]), ClassDef(name='PeeweeException', bases=[Name(id='Exception', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Name(id='args', ctx=Load()), Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Name(id='args', ctx=Load()), slice=Constant(value=0), ctx=Load()), Name(id='Exception', ctx=Load())], keywords=[])]), body=[Assign(targets=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='orig', ctx=Store()), Name(id='args', ctx=Store())], ctx=Store())], value=Tuple(elts=[Subscript(value=Name(id='args', ctx=Load()), slice=Constant(value=0), ctx=Load()), Subscript(value=Name(id='args', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load())], ctx=Load()))], orelse=[]), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='PeeweeException', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='ImproperlyConfigured', bases=[Name(id='PeeweeException', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='DatabaseError', bases=[Name(id='PeeweeException', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='DataError', bases=[Name(id='DatabaseError', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='IntegrityError', bases=[Name(id='DatabaseError', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='InterfaceError', bases=[Name(id='PeeweeException', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='InternalError', bases=[Name(id='DatabaseError', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='NotSupportedError', bases=[Name(id='DatabaseError', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='OperationalError', bases=[Name(id='DatabaseError', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='ProgrammingError', bases=[Name(id='DatabaseError', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='ExceptionWrapper', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[Constant(value='exceptions')], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exceptions')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='exceptions', ctx=Store())], value=Name(id='exceptions', ctx=Load()))], decorator_list=[]), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[]), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exc_type'), arg(arg='exc_value'), arg(arg='traceback')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='exc_type', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return()], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='pg_errors', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Name(id='exc_type', ctx=Load()), attr='__name__', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='exceptions', ctx=Load())]), Call(func=Name(id='issubclass', ctx=Load()), args=[Name(id='exc_type', ctx=Load()), Attribute(value=Name(id='pg_errors', ctx=Load()), attr='Error', ctx=Load())], keywords=[])]), body=[Assign(targets=[Name(id='exc_type', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='exc_type', ctx=Load()), attr='__bases__', ctx=Load()), slice=Constant(value=0), ctx=Load()))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='exc_type', ctx=Load()), attr='__name__', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='exceptions', ctx=Load())]), body=[Assign(targets=[Name(id='new_type', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='exceptions', ctx=Load()), slice=Attribute(value=Name(id='exc_type', ctx=Load()), attr='__name__', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='exc_args', ctx=Store())], value=Attribute(value=Name(id='exc_value', ctx=Load()), attr='args', ctx=Load())), Expr(value=Call(func=Name(id='reraise', ctx=Load()), args=[Name(id='new_type', ctx=Load()), Call(func=Name(id='new_type', ctx=Load()), args=[Name(id='exc_value', ctx=Load()), Starred(value=Name(id='exc_args', ctx=Load()), ctx=Load())], keywords=[]), Name(id='traceback', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='EXCEPTIONS', ctx=Store())], value=Dict(keys=[Constant(value='ConstraintError'), Constant(value='DatabaseError'), Constant(value='DataError'), Constant(value='IntegrityError'), Constant(value='InterfaceError'), Constant(value='InternalError'), Constant(value='NotSupportedError'), Constant(value='OperationalError'), Constant(value='ProgrammingError'), Constant(value='TransactionRollbackError')], values=[Name(id='IntegrityError', ctx=Load()), Name(id='DatabaseError', ctx=Load()), Name(id='DataError', ctx=Load()), Name(id='IntegrityError', ctx=Load()), Name(id='InterfaceError', ctx=Load()), Name(id='InternalError', ctx=Load()), Name(id='NotSupportedError', ctx=Load()), Name(id='OperationalError', ctx=Load()), Name(id='ProgrammingError', ctx=Load()), Name(id='OperationalError', ctx=Load())])), Assign(targets=[Name(id='__exception_wrapper__', ctx=Store())], value=Call(func=Name(id='ExceptionWrapper', ctx=Load()), args=[Name(id='EXCEPTIONS', ctx=Load())], keywords=[])), Assign(targets=[Name(id='IndexMetadata', ctx=Store())], value=Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='namedtuple', ctx=Load()), args=[Constant(value='IndexMetadata'), Tuple(elts=[Constant(value='name'), Constant(value='sql'), Constant(value='columns'), Constant(value='unique'), Constant(value='table')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='ColumnMetadata', ctx=Store())], value=Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='namedtuple', ctx=Load()), args=[Constant(value='ColumnMetadata'), Tuple(elts=[Constant(value='name'), Constant(value='data_type'), Constant(value='null'), Constant(value='primary_key'), Constant(value='table'), Constant(value='default')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='ForeignKeyMetadata', ctx=Store())], value=Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='namedtuple', ctx=Load()), args=[Constant(value='ForeignKeyMetadata'), Tuple(elts=[Constant(value='column'), Constant(value='dest_table'), Constant(value='dest_column'), Constant(value='table')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='ViewMetadata', ctx=Store())], value=Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='namedtuple', ctx=Load()), args=[Constant(value='ViewMetadata'), Tuple(elts=[Constant(value='name'), Constant(value='sql')], ctx=Load())], keywords=[])), ClassDef(name='_ConnectionState', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='_ConnectionState', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='reset', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='closed', ctx=Store())], value=Constant(value=True)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='conn', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='ctx', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='transactions', ctx=Store())], value=List(elts=[], ctx=Load()))], decorator_list=[]), FunctionDef(name='set_connection', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='conn', ctx=Store())], value=Name(id='conn', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='closed', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='ctx', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='transactions', ctx=Store())], value=List(elts=[], ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='_ConnectionLocal', bases=[Name(id='_ConnectionState', ctx=Load()), Attribute(value=Name(id='threading', ctx=Load()), attr='local', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='_NoopLock', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[], ctx=Load())), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exc_type'), arg(arg='exc_val'), arg(arg='exc_tb')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[])], decorator_list=[]), ClassDef(name='ConnectionContext', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[Constant(value='db')], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='db')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Store())], value=Name(id='db', ctx=Load()))], decorator_list=[]), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='is_closed', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='connect', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exc_type'), arg(arg='exc_val'), arg(arg='exc_tb')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='inner', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Name(id='ConnectionContext', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load())], keywords=[]))], body=[Return(value=Call(func=Name(id='fn', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))])], decorator_list=[Call(func=Name(id='wraps', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[])]), Return(value=Name(id='inner', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='Database', bases=[Name(id='_callable_context_manager', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='context_class', ctx=Store())], value=Name(id='Context', ctx=Load())), Assign(targets=[Name(id='field_types', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='operations', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='param', ctx=Store())], value=Constant(value='?')), Assign(targets=[Name(id='quote', ctx=Store())], value=Constant(value='""')), Assign(targets=[Name(id='server_version', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='compound_select_parentheses', ctx=Store())], value=Name(id='CSQ_PARENTHESES_NEVER', ctx=Load())), Assign(targets=[Name(id='for_update', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='index_schema_prefix', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='index_using_precedes_table', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='limit_max', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='nulls_ordering', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='returning_clause', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='safe_create_index', ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='safe_drop_index', ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='sequences', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='truncate_table', ctx=Store())], value=Constant(value=True)), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database'), arg(arg='thread_safe'), arg(arg='autorollback'), arg(arg='field_types'), arg(arg='operations'), arg(arg='autocommit'), arg(arg='autoconnect')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=True), Constant(value=False), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=True)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_field_types', ctx=Store())], value=Call(func=Name(id='merge_dict', ctx=Load()), args=[Name(id='FIELD', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='field_types', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_operations', ctx=Store())], value=Call(func=Name(id='merge_dict', ctx=Load()), args=[Name(id='OP', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='operations', ctx=Load())], keywords=[])), If(test=Name(id='field_types', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_field_types', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='field_types', ctx=Load())], keywords=[]))], orelse=[]), If(test=Name(id='operations', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_operations', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='operations', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='autoconnect', ctx=Store())], value=Name(id='autoconnect', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='thread_safe', ctx=Store())], value=Name(id='thread_safe', ctx=Load())), If(test=Name(id='thread_safe', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Store())], value=Call(func=Name(id='_ConnectionLocal', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Store())], value=Call(func=Attribute(value=Name(id='threading', ctx=Load()), attr='RLock', ctx=Load()), args=[], keywords=[]))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Store())], value=Call(func=Name(id='_ConnectionState', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Store())], value=Call(func=Name(id='_NoopLock', ctx=Load()), args=[], keywords=[]))]), If(test=Name(id='autorollback', ctx=Load()), body=[Expr(value=Call(func=Name(id='__deprecated__', ctx=Load()), args=[Constant(value='Peewee no longer uses the "autorollback" option, as we always run in autocommit-mode now. This changes psycopg2\'s semantics so that the conn is not left in a transaction-aborted state.')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='autocommit', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='__deprecated__', ctx=Load()), args=[Constant(value='Peewee no longer uses the "autocommit" option, as the semantics now require it to always be True. Because some database-drivers also use the "autocommit" parameter, you are receiving a warning so you may update your code and remove the parameter, as in the future, specifying autocommit could impact the behavior of the database driver you are using.')], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='connect_params', ctx=Store())], value=Dict(keys=[], values=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='init', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='init', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_closed', ctx=Load()), args=[], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Store())], value=Name(id='database', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='connect_params', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='kwargs', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='deferred', ctx=Store())], value=UnaryOp(op=Not(), operand=Call(func=Name(id='bool', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[])))], decorator_list=[]), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_closed', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='connect', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='ctx', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='atomic', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='ctx', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='__enter__', ctx=Load()), args=[], keywords=[])), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exc_type'), arg(arg='exc_val'), arg(arg='exc_tb')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='ctx', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='ctx', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[])), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='__exit__', ctx=Load()), args=[Name(id='exc_type', ctx=Load()), Name(id='exc_val', ctx=Load()), Name(id='exc_tb', ctx=Load())], keywords=[]))], handlers=[], orelse=[], finalbody=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='ctx', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], orelse=[])])], decorator_list=[]), FunctionDef(name='connection_context', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='ConnectionContext', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_connect', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='connect', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='reuse_if_open')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='deferred', ctx=Load()), body=[Raise(exc=Call(func=Name(id='InterfaceError', ctx=Load()), args=[Constant(value='Error, database must be initialized before opening a connection.')], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='closed', ctx=Load())), body=[If(test=Name(id='reuse_if_open', ctx=Load()), body=[Return(value=Constant(value=False))], orelse=[]), Raise(exc=Call(func=Name(id='OperationalError', ctx=Load()), args=[Constant(value='Connection already opened.')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Name(id='__exception_wrapper__', ctx=Load()))], body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='set_connection', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_connect', ctx=Load()), args=[], keywords=[])], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='server_version', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_server_version', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='conn', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_initialize_connection', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='conn', ctx=Load())], keywords=[]))])]), Return(value=Constant(value=True))], decorator_list=[]), FunctionDef(name='_initialize_connection', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[]), FunctionDef(name='_set_server_version', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='server_version', ctx=Store())], value=Constant(value=0))], decorator_list=[]), FunctionDef(name='close', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='deferred', ctx=Load()), body=[Raise(exc=Call(func=Name(id='InterfaceError', ctx=Load()), args=[Constant(value='Error, database must be initialized before opening a connection.')], keywords=[]))], orelse=[]), If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='in_transaction', ctx=Load()), args=[], keywords=[]), body=[Raise(exc=Call(func=Name(id='OperationalError', ctx=Load()), args=[Constant(value='Attempting to close database while transaction is open.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='is_open', ctx=Store())], value=UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='closed', ctx=Load()))), Try(body=[If(test=Name(id='is_open', ctx=Load()), body=[With(items=[withitem(context_expr=Name(id='__exception_wrapper__', ctx=Load()))], body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_close', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='conn', ctx=Load())], keywords=[]))])], orelse=[])], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[]))]), Return(value=Name(id='is_open', ctx=Load()))])], decorator_list=[]), FunctionDef(name='_close', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='is_closed', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='closed', ctx=Load()))], decorator_list=[]), FunctionDef(name='is_connection_usable', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='closed', ctx=Load())))], decorator_list=[]), FunctionDef(name='connection', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_closed', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='connect', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='conn', ctx=Load()))], decorator_list=[]), FunctionDef(name='cursor', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='commit'), arg(arg='named_cursor')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[If(test=Compare(left=Name(id='commit', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='__deprecated__', ctx=Load()), args=[Constant(value='"commit" has been deprecated and is a no-op.')], keywords=[]))], orelse=[]), If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_closed', ctx=Load()), args=[], keywords=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='autoconnect', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='connect', ctx=Load()), args=[], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='InterfaceError', ctx=Load()), args=[Constant(value='Error, database connection not opened.')], keywords=[]))])], orelse=[]), Return(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='conn', ctx=Load()), attr='cursor', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='execute_sql', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='sql'), arg(arg='params'), arg(arg='commit')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[If(test=Compare(left=Name(id='commit', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='__deprecated__', ctx=Load()), args=[Constant(value='"commit" has been deprecated and is a no-op.')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Tuple(elts=[Name(id='sql', ctx=Load()), Name(id='params', ctx=Load())], ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Name(id='__exception_wrapper__', ctx=Load()))], body=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='cursor', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='execute', ctx=Load()), args=[Name(id='sql', ctx=Load()), BoolOp(op=Or(), values=[Name(id='params', ctx=Load()), Tuple(elts=[], ctx=Load())])], keywords=[]))]), Return(value=Name(id='cursor', ctx=Load()))], decorator_list=[]), FunctionDef(name='execute', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='query'), arg(arg='commit')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='context_options'), defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='commit', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='__deprecated__', ctx=Load()), args=[Constant(value='"commit" has been deprecated and is a no-op.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='ctx', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_sql_context', ctx=Load()), args=[], keywords=[keyword(value=Name(id='context_options', ctx=Load()))])), Assign(targets=[Tuple(elts=[Name(id='sql', ctx=Store()), Name(id='params', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Name(id='query', ctx=Load())], keywords=[]), attr='query', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[Name(id='sql', ctx=Load()), Name(id='params', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_context_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Dict(keys=[Constant(value='field_types'), Constant(value='operations'), Constant(value='param'), Constant(value='quote'), Constant(value='compound_select_parentheses'), Constant(value='conflict_statement'), Constant(value='conflict_update'), Constant(value='for_update'), Constant(value='index_schema_prefix'), Constant(value='index_using_precedes_table'), Constant(value='limit_max'), Constant(value='nulls_ordering')], values=[Attribute(value=Name(id='self', ctx=Load()), attr='_field_types', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_operations', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='param', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='quote', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='compound_select_parentheses', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='conflict_statement', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='conflict_update', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='for_update', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='index_schema_prefix', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='index_using_precedes_table', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='limit_max', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='nulls_ordering', ctx=Load())]))], decorator_list=[]), FunctionDef(name='get_sql_context', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='context_options'), defaults=[]), body=[Assign(targets=[Name(id='context', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_context_options', ctx=Load()), args=[], keywords=[])), If(test=Name(id='context_options', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='context', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='context_options', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='context_class', ctx=Load()), args=[], keywords=[keyword(value=Name(id='context', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='conflict_statement', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='on_conflict'), arg(arg='query')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='conflict_update', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='on_conflict'), arg(arg='query')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='_build_on_conflict_update', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='on_conflict'), arg(arg='query')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_conflict_target', ctx=Load()), body=[Assign(targets=[Name(id='stmt', ctx=Store())], value=Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='ON CONFLICT')], keywords=[])), Assign(targets=[Name(id='target', ctx=Store())], value=Call(func=Name(id='EnclosedNodeList', ctx=Load()), args=[ListComp(elt=IfExp(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='col', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), body=Call(func=Name(id='Entity', ctx=Load()), args=[Name(id='col', ctx=Load())], keywords=[]), orelse=Name(id='col', ctx=Load())), generators=[comprehension(target=Name(id='col', ctx=Store()), iter=Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_conflict_target', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_conflict_where', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='target', ctx=Store())], value=Call(func=Name(id='NodeList', ctx=Load()), args=[List(elts=[Name(id='target', ctx=Load()), Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='WHERE')], keywords=[]), Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_conflict_where', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[])], orelse=[Assign(targets=[Name(id='stmt', ctx=Store())], value=Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='ON CONFLICT ON CONSTRAINT')], keywords=[])), Assign(targets=[Name(id='target', ctx=Store())], value=Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_conflict_constraint', ctx=Load())), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='target', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='target', ctx=Store())], value=Call(func=Name(id='Entity', ctx=Load()), args=[Name(id='target', ctx=Load())], keywords=[]))], orelse=[])]), Assign(targets=[Name(id='updates', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_preserve', ctx=Load()), body=[For(target=Name(id='column', ctx=Store()), iter=Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_preserve', ctx=Load()), body=[Assign(targets=[Name(id='excluded', ctx=Store())], value=Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='EXCLUDED')], keywords=[]), Call(func=Name(id='ensure_entity', ctx=Load()), args=[Name(id='column', ctx=Load())], keywords=[])], ctx=Load())], keywords=[keyword(arg='glue', value=Constant(value='.'))])), Assign(targets=[Name(id='expression', ctx=Store())], value=Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='ensure_entity', ctx=Load()), args=[Name(id='column', ctx=Load())], keywords=[]), Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='=')], keywords=[]), Name(id='excluded', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='updates', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='expression', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), If(test=Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_update', ctx=Load()), body=[For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_update', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='v', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[])), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='k', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='k', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='query', ctx=Load()), attr='table', ctx=Load()), Name(id='k', ctx=Load())], keywords=[]))], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='k', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='v', ctx=Store())], value=Call(func=Attribute(value=Name(id='k', ctx=Load()), attr='to_value', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='v', ctx=Store())], value=Call(func=Name(id='Value', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[keyword(arg='unpack', value=Constant(value=False))]))])], orelse=[Assign(targets=[Name(id='v', ctx=Store())], value=Call(func=Name(id='QualifiedNames', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='updates', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='ensure_entity', ctx=Load()), args=[Name(id='k', ctx=Load())], keywords=[]), Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='=')], keywords=[]), Name(id='v', ctx=Load())], ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='parts', ctx=Store())], value=List(elts=[Name(id='stmt', ctx=Load()), Name(id='target', ctx=Load()), Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='DO UPDATE SET')], keywords=[]), Call(func=Name(id='CommaNodeList', ctx=Load()), args=[Name(id='updates', ctx=Load())], keywords=[])], ctx=Load())), If(test=Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_where', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='extend', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='WHERE')], keywords=[]), Call(func=Name(id='QualifiedNames', ctx=Load()), args=[Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_where', ctx=Load())], keywords=[])], ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='NodeList', ctx=Load()), args=[Name(id='parts', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='last_insert_id', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor'), arg(arg='query_type')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Return(value=Attribute(value=Name(id='cursor', ctx=Load()), attr='lastrowid', ctx=Load()))], decorator_list=[]), FunctionDef(name='rows_affected', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='cursor', ctx=Load()), attr='rowcount', ctx=Load()))], decorator_list=[]), FunctionDef(name='default_values_insert', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='DEFAULT VALUES')], keywords=[]))], decorator_list=[]), FunctionDef(name='session_start', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='transaction', ctx=Load()), args=[], keywords=[]), attr='__enter__', ctx=Load()), args=[], keywords=[]))])], decorator_list=[]), FunctionDef(name='session_commit', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[Try(body=[Assign(targets=[Name(id='txn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='pop_transaction', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Name(id='IndexError', ctx=Load()), body=[Return(value=Constant(value=False))])], orelse=[], finalbody=[]), Expr(value=Call(func=Attribute(value=Name(id='txn', ctx=Load()), attr='commit', ctx=Load()), args=[], keywords=[keyword(arg='begin', value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='in_transaction', ctx=Load()), args=[], keywords=[]))])), Return(value=Constant(value=True))])], decorator_list=[]), FunctionDef(name='session_rollback', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[Try(body=[Assign(targets=[Name(id='txn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='pop_transaction', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Name(id='IndexError', ctx=Load()), body=[Return(value=Constant(value=False))])], orelse=[], finalbody=[]), Expr(value=Call(func=Attribute(value=Name(id='txn', ctx=Load()), attr='rollback', ctx=Load()), args=[], keywords=[keyword(arg='begin', value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='in_transaction', ctx=Load()), args=[], keywords=[]))])), Return(value=Constant(value=True))])], decorator_list=[]), FunctionDef(name='in_transaction', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='bool', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='transactions', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='push_transaction', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='transaction')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='transactions', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='transaction', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='pop_transaction', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='transactions', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='transaction_depth', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='transactions', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='top_transaction', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='transactions', ctx=Load()), body=[Return(value=Subscript(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='transactions', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()))], orelse=[])], decorator_list=[]), FunctionDef(name='atomic', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Return(value=Call(func=Name(id='_atomic', ctx=Load()), args=[Name(id='self', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='manual_commit', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='_manual', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='transaction', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Return(value=Call(func=Name(id='_transaction', ctx=Load()), args=[Name(id='self', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='savepoint', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='_savepoint', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='begin', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_closed', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='connect', ctx=Load()), args=[], keywords=[]))], orelse=[]), With(items=[withitem(context_expr=Name(id='__exception_wrapper__', ctx=Load()))], body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='cursor', ctx=Load()), args=[], keywords=[]), attr='execute', ctx=Load()), args=[Constant(value='BEGIN')], keywords=[]))])], decorator_list=[]), FunctionDef(name='rollback', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Name(id='__exception_wrapper__', ctx=Load()))], body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='cursor', ctx=Load()), args=[], keywords=[]), attr='execute', ctx=Load()), args=[Constant(value='ROLLBACK')], keywords=[]))])], decorator_list=[]), FunctionDef(name='commit', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Name(id='__exception_wrapper__', ctx=Load()))], body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='cursor', ctx=Load()), args=[], keywords=[]), attr='execute', ctx=Load()), args=[Constant(value='COMMIT')], keywords=[]))])], decorator_list=[]), FunctionDef(name='batch_commit', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='it'), arg(arg='n')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='group', ctx=Store()), iter=Call(func=Name(id='chunked', ctx=Load()), args=[Name(id='it', ctx=Load()), Name(id='n', ctx=Load())], keywords=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='atomic', ctx=Load()), args=[], keywords=[]))], body=[For(target=Name(id='obj', ctx=Store()), iter=Name(id='group', ctx=Load()), body=[Expr(value=Yield(value=Name(id='obj', ctx=Load())))], orelse=[])])], orelse=[])], decorator_list=[]), FunctionDef(name='table_exists', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table_name'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Call(func=Name(id='is_model', ctx=Load()), args=[Name(id='table_name', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='model', ctx=Store())], value=Name(id='table_name', ctx=Load())), Assign(targets=[Name(id='table_name', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='table_name', ctx=Load())), Assign(targets=[Name(id='schema', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='schema', ctx=Load()))], orelse=[]), Return(value=Compare(left=Name(id='table_name', ctx=Load()), ops=[In()], comparators=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_tables', ctx=Load()), args=[], keywords=[keyword(arg='schema', value=Name(id='schema', ctx=Load()))])]))], decorator_list=[]), FunctionDef(name='get_tables', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_indexes', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_columns', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_primary_keys', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_foreign_keys', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='sequence_exists', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='seq')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='create_tables', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='models')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='options'), defaults=[]), body=[For(target=Name(id='model', ctx=Store()), iter=Call(func=Name(id='sort_models', ctx=Load()), args=[Name(id='models', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='create_table', ctx=Load()), args=[], keywords=[keyword(value=Name(id='options', ctx=Load()))]))], orelse=[])], decorator_list=[]), FunctionDef(name='drop_tables', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='models')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[For(target=Name(id='model', ctx=Store()), iter=Call(func=Name(id='reversed', ctx=Load()), args=[Call(func=Name(id='sort_models', ctx=Load()), args=[Name(id='models', ctx=Load())], keywords=[])], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='drop_table', ctx=Load()), args=[], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], orelse=[])], decorator_list=[]), FunctionDef(name='extract_date', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='date_part'), arg(arg='date_field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='truncate_date', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='date_part'), arg(arg='date_field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='to_timestamp', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='date_field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='from_timestamp', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='date_field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='random', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='random', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='bind', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='models'), arg(arg='bind_refs'), arg(arg='bind_backrefs')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True), Constant(value=True)]), body=[For(target=Name(id='model', ctx=Store()), iter=Name(id='models', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='bind', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[keyword(arg='bind_refs', value=Name(id='bind_refs', ctx=Load())), keyword(arg='bind_backrefs', value=Name(id='bind_backrefs', ctx=Load()))]))], orelse=[])], decorator_list=[]), FunctionDef(name='bind_ctx', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='models'), arg(arg='bind_refs'), arg(arg='bind_backrefs')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True), Constant(value=True)]), body=[Return(value=Call(func=Name(id='_BoundModelsContext', ctx=Load()), args=[Name(id='models', ctx=Load()), Name(id='self', ctx=Load()), Name(id='bind_refs', ctx=Load()), Name(id='bind_backrefs', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_noop_select', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='Select', ctx=Load()), args=[], keywords=[]), attr='columns', ctx=Load()), args=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='0')], keywords=[])], keywords=[]), attr='where', ctx=Load()), args=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='0')], keywords=[])], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='Model', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Constant(value='_Model')], keywords=[])), body=[ClassDef(name='Meta', bases=[], keywords=[], body=[Assign(targets=[Name(id='database', ctx=Store())], value=Name(id='self', ctx=Load()))], decorator_list=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_Model', ctx=Store())], value=Call(func=Name(id='type', ctx=Load()), args=[Constant(value='BaseModel'), Tuple(elts=[Name(id='Model', ctx=Load())], ctx=Load()), Dict(keys=[Constant(value='Meta')], values=[Name(id='Meta', ctx=Load())])], keywords=[]))], orelse=[]), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_Model', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())])], decorator_list=[]), FunctionDef(name='__pragma__', args=arguments(posonlyargs=[], args=[arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='__get__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='pragma', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__set__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='pragma', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[]), Return(value=Call(func=Name(id='property', ctx=Load()), args=[Name(id='__get__', ctx=Load()), Name(id='__set__', ctx=Load())], keywords=[]))], decorator_list=[]), ClassDef(name='SqliteDatabase', bases=[Name(id='Database', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_types', ctx=Store())], value=Dict(keys=[Constant(value='BIGAUTO'), Constant(value='BIGINT'), Constant(value='BOOL'), Constant(value='DOUBLE'), Constant(value='SMALLINT'), Constant(value='UUID')], values=[Attribute(value=Name(id='FIELD', ctx=Load()), attr='AUTO', ctx=Load()), Attribute(value=Name(id='FIELD', ctx=Load()), attr='INT', ctx=Load()), Attribute(value=Name(id='FIELD', ctx=Load()), attr='INT', ctx=Load()), Attribute(value=Name(id='FIELD', ctx=Load()), attr='FLOAT', ctx=Load()), Attribute(value=Name(id='FIELD', ctx=Load()), attr='INT', ctx=Load()), Attribute(value=Name(id='FIELD', ctx=Load()), attr='TEXT', ctx=Load())])), Assign(targets=[Name(id='operations', ctx=Store())], value=Dict(keys=[Constant(value='LIKE'), Constant(value='ILIKE')], values=[Constant(value='GLOB'), Constant(value='LIKE')])), Assign(targets=[Name(id='index_schema_prefix', ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='limit_max', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=1))), Assign(targets=[Name(id='server_version', ctx=Store())], value=Name(id='__sqlite_version__', ctx=Load())), Assign(targets=[Name(id='truncate_table', ctx=Store())], value=Constant(value=False)), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_pragmas', ctx=Store())], value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='pragmas'), Tuple(elts=[], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='SqliteDatabase', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='database', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_aggregates', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_collations', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_functions', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_window_functions', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_table_functions', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_extensions', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_attached', ctx=Store())], value=Dict(keys=[], values=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='register_function', ctx=Load()), args=[Name(id='_sqlite_date_part', ctx=Load()), Constant(value='date_part'), Constant(value=2)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='register_function', ctx=Load()), args=[Name(id='_sqlite_date_trunc', ctx=Load()), Constant(value='date_trunc'), Constant(value=2)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='nulls_ordering', ctx=Store())], value=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='server_version', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=30), Constant(value=0)], ctx=Load())]))], decorator_list=[]), FunctionDef(name='init', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database'), arg(arg='pragmas'), arg(arg='timeout'), arg(arg='returning_clause')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None), Constant(value=5), Constant(value=None)]), body=[If(test=Compare(left=Name(id='pragmas', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_pragmas', ctx=Store())], value=Name(id='pragmas', ctx=Load()))], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_pragmas', ctx=Load()), Name(id='dict', ctx=Load())], keywords=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_pragmas', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_pragmas', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='returning_clause', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='__sqlite_version__', ctx=Load()), ops=[Lt()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=35), Constant(value=0)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='warnings', ctx=Load()), attr='warn', ctx=Load()), args=[Constant(value='RETURNING clause requires Sqlite 3.35 or newer')], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='returning_clause', ctx=Store())], value=Name(id='returning_clause', ctx=Load()))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_timeout', ctx=Store())], value=Name(id='timeout', ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='SqliteDatabase', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='init', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='_set_server_version', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[]), FunctionDef(name='_connect', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='sqlite3', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ImproperlyConfigured', ctx=Load()), args=[Constant(value='SQLite driver not installed!')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Name(id='sqlite3', ctx=Load()), attr='connect', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load())], keywords=[keyword(arg='timeout', value=Attribute(value=Name(id='self', ctx=Load()), attr='_timeout', ctx=Load())), keyword(arg='isolation_level', value=Constant(value=None)), keyword(value=Attribute(value=Name(id='self', ctx=Load()), attr='connect_params', ctx=Load()))])), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_add_conn_hooks', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(body=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Raise()])], orelse=[], finalbody=[]), Return(value=Name(id='conn', ctx=Load()))], decorator_list=[]), FunctionDef(name='_add_conn_hooks', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_attached', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_attach_databases', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_pragmas', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_set_pragmas', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_load_aggregates', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_load_collations', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_load_functions', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='server_version', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=25), Constant(value=0)], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_load_window_functions', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_table_functions', ctx=Load()), body=[For(target=Name(id='table_function', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_table_functions', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='table_function', ctx=Load()), attr='register', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_extensions', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_load_extensions', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='_set_pragmas', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='cursor', ctx=Load()), args=[], keywords=[])), For(target=Tuple(elts=[Name(id='pragma', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_pragmas', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='execute', ctx=Load()), args=[BinOp(left=Constant(value='PRAGMA %s = %s;'), op=Mod(), right=Tuple(elts=[Name(id='pragma', ctx=Load()), Name(id='value', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='_attach_databases', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='cursor', ctx=Load()), args=[], keywords=[])), For(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='db', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_attached', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='execute', ctx=Load()), args=[BinOp(left=Constant(value='ATTACH DATABASE "%s" AS "%s"'), op=Mod(), right=Tuple(elts=[Name(id='db', ctx=Load()), Name(id='name', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='pragma', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key'), arg(arg='value'), arg(arg='permanent'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Name(id='SENTINEL', ctx=Load()), Constant(value=False), Constant(value=None)]), body=[If(test=Compare(left=Name(id='schema', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='key', ctx=Store())], value=BinOp(left=Constant(value='"%s".%s'), op=Mod(), right=Tuple(elts=[Name(id='schema', ctx=Load()), Name(id='key', ctx=Load())], ctx=Load())))], orelse=[]), Assign(targets=[Name(id='sql', ctx=Store())], value=BinOp(left=Constant(value='PRAGMA %s'), op=Mod(), right=Name(id='key', ctx=Load()))), If(test=Compare(left=Name(id='value', ctx=Load()), ops=[IsNot()], comparators=[Name(id='SENTINEL', ctx=Load())]), body=[AugAssign(target=Name(id='sql', ctx=Store()), op=Add(), value=BinOp(left=Constant(value=' = %s'), op=Mod(), right=BoolOp(op=Or(), values=[Name(id='value', ctx=Load()), Constant(value=0)]))), If(test=Name(id='permanent', ctx=Load()), body=[Assign(targets=[Name(id='pragmas', ctx=Store())], value=Call(func=Name(id='dict', ctx=Load()), args=[BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_pragmas', ctx=Load()), Tuple(elts=[], ctx=Load())])], keywords=[])), Assign(targets=[Subscript(value=Name(id='pragmas', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store())], value=Name(id='value', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_pragmas', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pragmas', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[])], orelse=[If(test=Name(id='permanent', ctx=Load()), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Cannot specify a permanent pragma without value')], keywords=[]))], orelse=[])]), Assign(targets=[Name(id='row', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[Name(id='sql', ctx=Load())], keywords=[]), attr='fetchone', ctx=Load()), args=[], keywords=[])), If(test=Name(id='row', ctx=Load()), body=[Return(value=Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=0), ctx=Load()))], orelse=[])], decorator_list=[]), Assign(targets=[Name(id='cache_size', ctx=Store())], value=Call(func=Name(id='__pragma__', ctx=Load()), args=[Constant(value='cache_size')], keywords=[])), Assign(targets=[Name(id='foreign_keys', ctx=Store())], value=Call(func=Name(id='__pragma__', ctx=Load()), args=[Constant(value='foreign_keys')], keywords=[])), Assign(targets=[Name(id='journal_mode', ctx=Store())], value=Call(func=Name(id='__pragma__', ctx=Load()), args=[Constant(value='journal_mode')], keywords=[])), Assign(targets=[Name(id='journal_size_limit', ctx=Store())], value=Call(func=Name(id='__pragma__', ctx=Load()), args=[Constant(value='journal_size_limit')], keywords=[])), Assign(targets=[Name(id='mmap_size', ctx=Store())], value=Call(func=Name(id='__pragma__', ctx=Load()), args=[Constant(value='mmap_size')], keywords=[])), Assign(targets=[Name(id='page_size', ctx=Store())], value=Call(func=Name(id='__pragma__', ctx=Load()), args=[Constant(value='page_size')], keywords=[])), Assign(targets=[Name(id='read_uncommitted', ctx=Store())], value=Call(func=Name(id='__pragma__', ctx=Load()), args=[Constant(value='read_uncommitted')], keywords=[])), Assign(targets=[Name(id='synchronous', ctx=Store())], value=Call(func=Name(id='__pragma__', ctx=Load()), args=[Constant(value='synchronous')], keywords=[])), Assign(targets=[Name(id='wal_autocheckpoint', ctx=Store())], value=Call(func=Name(id='__pragma__', ctx=Load()), args=[Constant(value='wal_autocheckpoint')], keywords=[])), Assign(targets=[Name(id='application_id', ctx=Store())], value=Call(func=Name(id='__pragma__', ctx=Load()), args=[Constant(value='application_id')], keywords=[])), Assign(targets=[Name(id='user_version', ctx=Store())], value=Call(func=Name(id='__pragma__', ctx=Load()), args=[Constant(value='user_version')], keywords=[])), Assign(targets=[Name(id='data_version', ctx=Store())], value=Call(func=Name(id='__pragma__', ctx=Load()), args=[Constant(value='data_version')], keywords=[])), FunctionDef(name='timeout', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_timeout', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='timeout', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='seconds')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_timeout', ctx=Load()), ops=[Eq()], comparators=[Name(id='seconds', ctx=Load())]), body=[Return()], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_timeout', ctx=Store())], value=Name(id='seconds', ctx=Load())), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_closed', ctx=Load()), args=[], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[BinOp(left=Constant(value='PRAGMA busy_timeout=%d;'), op=Mod(), right=BinOp(left=Name(id='seconds', ctx=Load()), op=Mult(), right=Constant(value=1000)))], keywords=[]))], orelse=[])], decorator_list=[Attribute(value=Name(id='timeout', ctx=Load()), attr='setter', ctx=Load())]), FunctionDef(name='_load_aggregates', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Tuple(elts=[Name(id='name', ctx=Store()), Tuple(elts=[Name(id='klass', ctx=Store()), Name(id='num_params', ctx=Store())], ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_aggregates', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='create_aggregate', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='num_params', ctx=Load()), Name(id='klass', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='_load_collations', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='fn', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_collations', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='create_collation', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='fn', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='_load_functions', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Tuple(elts=[Name(id='name', ctx=Store()), Tuple(elts=[Name(id='fn', ctx=Store()), Name(id='num_params', ctx=Store())], ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_functions', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='create_function', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='num_params', ctx=Load()), Name(id='fn', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='_load_window_functions', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Tuple(elts=[Name(id='name', ctx=Store()), Tuple(elts=[Name(id='klass', ctx=Store()), Name(id='num_params', ctx=Store())], ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_window_functions', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='create_window_function', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='num_params', ctx=Load()), Name(id='klass', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='register_aggregate', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='klass'), arg(arg='name'), arg(arg='num_params')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), UnaryOp(op=USub(), operand=Constant(value=1))]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_aggregates', ctx=Load()), slice=BoolOp(op=Or(), values=[Name(id='name', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='klass', ctx=Load()), attr='__name__', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])]), ctx=Store())], value=Tuple(elts=[Name(id='klass', ctx=Load()), Name(id='num_params', ctx=Load())], ctx=Load())), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_closed', ctx=Load()), args=[], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_load_aggregates', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='connection', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='aggregate', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name'), arg(arg='num_params')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), UnaryOp(op=USub(), operand=Constant(value=1))]), body=[FunctionDef(name='decorator', args=arguments(posonlyargs=[], args=[arg(arg='klass')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='register_aggregate', ctx=Load()), args=[Name(id='klass', ctx=Load()), Name(id='name', ctx=Load()), Name(id='num_params', ctx=Load())], keywords=[])), Return(value=Name(id='klass', ctx=Load()))], decorator_list=[]), Return(value=Name(id='decorator', ctx=Load()))], decorator_list=[]), FunctionDef(name='register_collation', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fn'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='name', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='name', ctx=Load()), Attribute(value=Name(id='fn', ctx=Load()), attr='__name__', ctx=Load())])), FunctionDef(name='_collation', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='expressions', ctx=Store())], value=BinOp(left=Name(id='args', ctx=Load()), op=Add(), right=Tuple(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[BinOp(left=Constant(value='collate %s'), op=Mod(), right=Name(id='name', ctx=Load()))], keywords=[])], ctx=Load()))), Return(value=Call(func=Name(id='NodeList', ctx=Load()), args=[Name(id='expressions', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Attribute(value=Name(id='fn', ctx=Load()), attr='collation', ctx=Store())], value=Name(id='_collation', ctx=Load())), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_collations', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Store())], value=Name(id='fn', ctx=Load())), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_closed', ctx=Load()), args=[], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_load_collations', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='connection', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='collation', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[FunctionDef(name='decorator', args=arguments(posonlyargs=[], args=[arg(arg='fn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='register_collation', ctx=Load()), args=[Name(id='fn', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), Return(value=Name(id='fn', ctx=Load()))], decorator_list=[]), Return(value=Name(id='decorator', ctx=Load()))], decorator_list=[]), FunctionDef(name='register_function', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fn'), arg(arg='name'), arg(arg='num_params')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), UnaryOp(op=USub(), operand=Constant(value=1))]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_functions', ctx=Load()), slice=BoolOp(op=Or(), values=[Name(id='name', ctx=Load()), Attribute(value=Name(id='fn', ctx=Load()), attr='__name__', ctx=Load())]), ctx=Store())], value=Tuple(elts=[Name(id='fn', ctx=Load()), Name(id='num_params', ctx=Load())], ctx=Load())), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_closed', ctx=Load()), args=[], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_load_functions', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='connection', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='func', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name'), arg(arg='num_params')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), UnaryOp(op=USub(), operand=Constant(value=1))]), body=[FunctionDef(name='decorator', args=arguments(posonlyargs=[], args=[arg(arg='fn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='register_function', ctx=Load()), args=[Name(id='fn', ctx=Load()), Name(id='name', ctx=Load()), Name(id='num_params', ctx=Load())], keywords=[])), Return(value=Name(id='fn', ctx=Load()))], decorator_list=[]), Return(value=Name(id='decorator', ctx=Load()))], decorator_list=[]), FunctionDef(name='register_window_function', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='klass'), arg(arg='name'), arg(arg='num_params')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), UnaryOp(op=USub(), operand=Constant(value=1))]), body=[Assign(targets=[Name(id='name', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='name', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='klass', ctx=Load()), attr='__name__', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])])), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_window_functions', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Store())], value=Tuple(elts=[Name(id='klass', ctx=Load()), Name(id='num_params', ctx=Load())], ctx=Load())), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_closed', ctx=Load()), args=[], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_load_window_functions', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='connection', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='window_function', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name'), arg(arg='num_params')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), UnaryOp(op=USub(), operand=Constant(value=1))]), body=[FunctionDef(name='decorator', args=arguments(posonlyargs=[], args=[arg(arg='klass')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='register_window_function', ctx=Load()), args=[Name(id='klass', ctx=Load()), Name(id='name', ctx=Load()), Name(id='num_params', ctx=Load())], keywords=[])), Return(value=Name(id='klass', ctx=Load()))], decorator_list=[]), Return(value=Name(id='decorator', ctx=Load()))], decorator_list=[]), FunctionDef(name='register_table_function', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='klass'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='name', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='klass', ctx=Load()), attr='name', ctx=Store())], value=Name(id='name', ctx=Load()))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_table_functions', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='klass', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_closed', ctx=Load()), args=[], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='klass', ctx=Load()), attr='register', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='connection', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='table_function', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[FunctionDef(name='decorator', args=arguments(posonlyargs=[], args=[arg(arg='klass')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='register_table_function', ctx=Load()), args=[Name(id='klass', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), Return(value=Name(id='klass', ctx=Load()))], decorator_list=[]), Return(value=Name(id='decorator', ctx=Load()))], decorator_list=[]), FunctionDef(name='unregister_aggregate', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_aggregates', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Del())])], decorator_list=[]), FunctionDef(name='unregister_collation', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_collations', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Del())])], decorator_list=[]), FunctionDef(name='unregister_function', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_functions', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Del())])], decorator_list=[]), FunctionDef(name='unregister_window_function', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_window_functions', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Del())])], decorator_list=[]), FunctionDef(name='unregister_table_function', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Tuple(elts=[Name(id='idx', ctx=Store()), Name(id='klass', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_table_functions', ctx=Load())], keywords=[]), body=[If(test=Compare(left=Attribute(value=Name(id='klass', ctx=Load()), attr='name', ctx=Load()), ops=[Eq()], comparators=[Name(id='name', ctx=Load())]), body=[Break()], orelse=[])], orelse=[Return(value=Constant(value=False))]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_table_functions', ctx=Load()), attr='pop', ctx=Load()), args=[Name(id='idx', ctx=Load())], keywords=[])), Return(value=Constant(value=True))], decorator_list=[]), FunctionDef(name='_load_extensions', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='enable_load_extension', ctx=Load()), args=[Constant(value=True)], keywords=[])), For(target=Name(id='extension', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_extensions', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='load_extension', ctx=Load()), args=[Name(id='extension', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='load_extension', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='extension')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_extensions', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='extension', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_closed', ctx=Load()), args=[], keywords=[])), body=[Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='connection', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='enable_load_extension', ctx=Load()), args=[Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='load_extension', ctx=Load()), args=[Name(id='extension', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='unload_extension', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='extension')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_extensions', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='extension', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='attach', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='filename'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='name', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_attached', ctx=Load())]), body=[If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_attached', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Load()), ops=[Eq()], comparators=[Name(id='filename', ctx=Load())]), body=[Return(value=Constant(value=False))], orelse=[]), Raise(exc=Call(func=Name(id='OperationalError', ctx=Load()), args=[BinOp(left=Constant(value='schema "%s" already attached.'), op=Mod(), right=Name(id='name', ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_attached', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Store())], value=Name(id='filename', ctx=Load())), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_closed', ctx=Load()), args=[], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[BinOp(left=Constant(value='ATTACH DATABASE "%s" AS "%s"'), op=Mod(), right=Tuple(elts=[Name(id='filename', ctx=Load()), Name(id='name', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), Return(value=Constant(value=True))], decorator_list=[]), FunctionDef(name='detach', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='name', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_attached', ctx=Load())]), body=[Return(value=Constant(value=False))], orelse=[]), Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_attached', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Del())]), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_closed', ctx=Load()), args=[], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[BinOp(left=Constant(value='DETACH DATABASE "%s"'), op=Mod(), right=Name(id='name', ctx=Load()))], keywords=[]))], orelse=[]), Return(value=Constant(value=True))], decorator_list=[]), FunctionDef(name='last_insert_id', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor'), arg(arg='query_type')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='returning_clause', ctx=Load())), body=[Return(value=Attribute(value=Name(id='cursor', ctx=Load()), attr='lastrowid', ctx=Load()))], orelse=[If(test=Compare(left=Name(id='query_type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='Insert', ctx=Load()), attr='SIMPLE', ctx=Load())]), body=[Try(body=[Return(value=Subscript(value=Subscript(value=Name(id='cursor', ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Constant(value=0), ctx=Load()))], handlers=[ExceptHandler(type=Tuple(elts=[Name(id='IndexError', ctx=Load()), Name(id='KeyError', ctx=Load()), Name(id='TypeError', ctx=Load())], ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], orelse=[])]), Return(value=Name(id='cursor', ctx=Load()))], decorator_list=[]), FunctionDef(name='rows_affected', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Attribute(value=Name(id='cursor', ctx=Load()), attr='rowcount', ctx=Load()))], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[Return(value=Attribute(value=Attribute(value=Name(id='cursor', ctx=Load()), attr='cursor', ctx=Load()), attr='rowcount', ctx=Load()))])], orelse=[], finalbody=[])], decorator_list=[]), FunctionDef(name='begin', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='lock_type')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='statement', ctx=Store())], value=IfExp(test=Name(id='lock_type', ctx=Load()), body=BinOp(left=Constant(value='BEGIN %s'), op=Mod(), right=Name(id='lock_type', ctx=Load())), orelse=Constant(value='BEGIN'))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[Name(id='statement', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='commit', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Name(id='__exception_wrapper__', ctx=Load()))], body=[Return(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='conn', ctx=Load()), attr='commit', ctx=Load()), args=[], keywords=[]))])], decorator_list=[]), FunctionDef(name='rollback', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Name(id='__exception_wrapper__', ctx=Load()))], body=[Return(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='conn', ctx=Load()), attr='rollback', ctx=Load()), args=[], keywords=[]))])], decorator_list=[]), FunctionDef(name='get_tables', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='schema', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='schema', ctx=Load()), Constant(value='main')])), Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[BinOp(left=Constant(value='SELECT name FROM "%s".sqlite_master WHERE type=? ORDER BY name'), op=Mod(), right=Name(id='schema', ctx=Load())), Tuple(elts=[Constant(value='table')], ctx=Load())], keywords=[])), Return(value=ListComp(elt=Name(id='row', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='row', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='get_views', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='sql', ctx=Store())], value=BinOp(left=Constant(value='SELECT name, sql FROM "%s".sqlite_master WHERE type=? ORDER BY name'), op=Mod(), right=BoolOp(op=Or(), values=[Name(id='schema', ctx=Load()), Constant(value='main')]))), Return(value=ListComp(elt=Call(func=Name(id='ViewMetadata', ctx=Load()), args=[Starred(value=Name(id='row', ctx=Load()), ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='row', ctx=Store()), iter=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[Name(id='sql', ctx=Load()), Tuple(elts=[Constant(value='view')], ctx=Load())], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='get_indexes', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='schema', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='schema', ctx=Load()), Constant(value='main')])), Assign(targets=[Name(id='query', ctx=Store())], value=BinOp(left=Constant(value='SELECT name, sql FROM "%s".sqlite_master WHERE tbl_name = ? AND type = ? ORDER BY name'), op=Mod(), right=Name(id='schema', ctx=Load()))), Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[Name(id='query', ctx=Load()), Tuple(elts=[Name(id='table', ctx=Load()), Constant(value='index')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='index_to_sql', ctx=Store())], value=Call(func=Name(id='dict', ctx=Load()), args=[Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='unique_indexes', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[BinOp(left=Constant(value='PRAGMA "%s".index_list("%s")'), op=Mod(), right=Tuple(elts=[Name(id='schema', ctx=Load()), Name(id='table', ctx=Load())], ctx=Load()))], keywords=[])), For(target=Name(id='row', ctx=Store()), iter=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='name', ctx=Store())], value=Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=1), ctx=Load())), Assign(targets=[Name(id='is_unique', ctx=Store())], value=Compare(left=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=2), ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)])), If(test=Name(id='is_unique', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='unique_indexes', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='index_columns', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Name(id='index_name', ctx=Store()), iter=Call(func=Name(id='sorted', ctx=Load()), args=[Name(id='index_to_sql', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[BinOp(left=Constant(value='PRAGMA "%s".index_info("%s")'), op=Mod(), right=Tuple(elts=[Name(id='schema', ctx=Load()), Name(id='index_name', ctx=Load())], ctx=Load()))], keywords=[])), Assign(targets=[Subscript(value=Name(id='index_columns', ctx=Load()), slice=Name(id='index_name', ctx=Load()), ctx=Store())], value=ListComp(elt=Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=2), ctx=Load()), generators=[comprehension(target=Name(id='row', ctx=Store()), iter=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], orelse=[]), Return(value=ListComp(elt=Call(func=Name(id='IndexMetadata', ctx=Load()), args=[Name(id='name', ctx=Load()), Subscript(value=Name(id='index_to_sql', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Load()), Subscript(value=Name(id='index_columns', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Load()), Compare(left=Name(id='name', ctx=Load()), ops=[In()], comparators=[Name(id='unique_indexes', ctx=Load())]), Name(id='table', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='name', ctx=Store()), iter=Call(func=Name(id='sorted', ctx=Load()), args=[Name(id='index_to_sql', ctx=Load())], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='get_columns', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[BinOp(left=Constant(value='PRAGMA "%s".table_info("%s")'), op=Mod(), right=Tuple(elts=[BoolOp(op=Or(), values=[Name(id='schema', ctx=Load()), Constant(value='main')]), Name(id='table', ctx=Load())], ctx=Load()))], keywords=[])), Return(value=ListComp(elt=Call(func=Name(id='ColumnMetadata', ctx=Load()), args=[Subscript(value=Name(id='r', ctx=Load()), slice=Constant(value=1), ctx=Load()), Subscript(value=Name(id='r', ctx=Load()), slice=Constant(value=2), ctx=Load()), UnaryOp(op=Not(), operand=Subscript(value=Name(id='r', ctx=Load()), slice=Constant(value=3), ctx=Load())), Call(func=Name(id='bool', ctx=Load()), args=[Subscript(value=Name(id='r', ctx=Load()), slice=Constant(value=5), ctx=Load())], keywords=[]), Name(id='table', ctx=Load()), Subscript(value=Name(id='r', ctx=Load()), slice=Constant(value=4), ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='r', ctx=Store()), iter=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='get_primary_keys', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[BinOp(left=Constant(value='PRAGMA "%s".table_info("%s")'), op=Mod(), right=Tuple(elts=[BoolOp(op=Or(), values=[Name(id='schema', ctx=Load()), Constant(value='main')]), Name(id='table', ctx=Load())], ctx=Load()))], keywords=[])), Return(value=ListComp(elt=Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=1), ctx=Load()), generators=[comprehension(target=Name(id='row', ctx=Store()), iter=Call(func=Name(id='filter', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='r')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Subscript(value=Name(id='r', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())), Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[])], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='get_foreign_keys', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[BinOp(left=Constant(value='PRAGMA "%s".foreign_key_list("%s")'), op=Mod(), right=Tuple(elts=[BoolOp(op=Or(), values=[Name(id='schema', ctx=Load()), Constant(value='main')]), Name(id='table', ctx=Load())], ctx=Load()))], keywords=[])), Return(value=ListComp(elt=Call(func=Name(id='ForeignKeyMetadata', ctx=Load()), args=[Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=3), ctx=Load()), Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=2), ctx=Load()), Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=4), ctx=Load()), Name(id='table', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='row', ctx=Store()), iter=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='get_binary_type', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='sqlite3', ctx=Load()), attr='Binary', ctx=Load()))], decorator_list=[]), FunctionDef(name='conflict_statement', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='on_conflict'), arg(arg='query')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='action', ctx=Store())], value=IfExp(test=Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_action', ctx=Load()), body=Call(func=Attribute(value=Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_action', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), orelse=Constant(value=''))), If(test=BoolOp(op=And(), values=[Name(id='action', ctx=Load()), Compare(left=Name(id='action', ctx=Load()), ops=[NotIn()], comparators=[Tuple(elts=[Constant(value='nothing'), Constant(value='update')], ctx=Load())])]), body=[Return(value=Call(func=Name(id='SQL', ctx=Load()), args=[BinOp(left=Constant(value='INSERT OR %s'), op=Mod(), right=Call(func=Attribute(value=Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_action', ctx=Load()), attr='upper', ctx=Load()), args=[], keywords=[]))], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='conflict_update', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='oc'), arg(arg='query')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='server_version', ctx=Load()), ops=[Lt()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=24), Constant(value=0)], ctx=Load())]), Call(func=Name(id='any', ctx=Load()), args=[Tuple(elts=[Attribute(value=Name(id='oc', ctx=Load()), attr='_preserve', ctx=Load()), Attribute(value=Name(id='oc', ctx=Load()), attr='_update', ctx=Load()), Attribute(value=Name(id='oc', ctx=Load()), attr='_where', ctx=Load()), Attribute(value=Name(id='oc', ctx=Load()), attr='_conflict_target', ctx=Load()), Attribute(value=Name(id='oc', ctx=Load()), attr='_conflict_constraint', ctx=Load())], ctx=Load())], keywords=[])]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='SQLite does not support specifying which values to preserve or update.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='action', ctx=Store())], value=IfExp(test=Attribute(value=Name(id='oc', ctx=Load()), attr='_action', ctx=Load()), body=Call(func=Attribute(value=Attribute(value=Name(id='oc', ctx=Load()), attr='_action', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), orelse=Constant(value=''))), If(test=BoolOp(op=And(), values=[Name(id='action', ctx=Load()), Compare(left=Name(id='action', ctx=Load()), ops=[NotIn()], comparators=[Tuple(elts=[Constant(value='nothing'), Constant(value='update'), Constant(value='')], ctx=Load())])]), body=[Return()], orelse=[]), If(test=Compare(left=Name(id='action', ctx=Load()), ops=[Eq()], comparators=[Constant(value='nothing')]), body=[Return(value=Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='ON CONFLICT DO NOTHING')], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='oc', ctx=Load()), attr='_update', ctx=Load())), UnaryOp(op=Not(), operand=Attribute(value=Name(id='oc', ctx=Load()), attr='_preserve', ctx=Load()))]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='If you are not performing any updates (or preserving any INSERTed values), then the conflict resolution action should be set to "NOTHING".')], keywords=[]))], orelse=[If(test=Attribute(value=Name(id='oc', ctx=Load()), attr='_conflict_constraint', ctx=Load()), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='SQLite does not support specifying named constraints for conflict resolution.')], keywords=[]))], orelse=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='oc', ctx=Load()), attr='_conflict_target', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='SQLite requires that a conflict target be specified when doing an upsert.')], keywords=[]))], orelse=[])])])]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_build_on_conflict_update', ctx=Load()), args=[Name(id='oc', ctx=Load()), Name(id='query', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='extract_date', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='date_part'), arg(arg='date_field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='date_part', ctx=Load()), args=[Name(id='date_part', ctx=Load()), Name(id='date_field', ctx=Load())], keywords=[keyword(arg='python_value', value=Name(id='int', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='truncate_date', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='date_part'), arg(arg='date_field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='date_trunc', ctx=Load()), args=[Name(id='date_part', ctx=Load()), Name(id='date_field', ctx=Load())], keywords=[keyword(arg='python_value', value=Name(id='simple_date_time', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='to_timestamp', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='date_field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='strftime', ctx=Load()), args=[Constant(value='%s'), Name(id='date_field', ctx=Load())], keywords=[]), attr='cast', ctx=Load()), args=[Constant(value='integer')], keywords=[]))], decorator_list=[]), FunctionDef(name='from_timestamp', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='date_field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='datetime', ctx=Load()), args=[Name(id='date_field', ctx=Load()), Constant(value='unixepoch')], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='PostgresqlDatabase', bases=[Name(id='Database', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_types', ctx=Store())], value=Dict(keys=[Constant(value='AUTO'), Constant(value='BIGAUTO'), Constant(value='BLOB'), Constant(value='BOOL'), Constant(value='DATETIME'), Constant(value='DECIMAL'), Constant(value='DOUBLE'), Constant(value='UUID'), Constant(value='UUIDB')], values=[Constant(value='SERIAL'), Constant(value='BIGSERIAL'), Constant(value='BYTEA'), Constant(value='BOOLEAN'), Constant(value='TIMESTAMP'), Constant(value='NUMERIC'), Constant(value='DOUBLE PRECISION'), Constant(value='UUID'), Constant(value='BYTEA')])), Assign(targets=[Name(id='operations', ctx=Store())], value=Dict(keys=[Constant(value='REGEXP'), Constant(value='IREGEXP')], values=[Constant(value='~'), Constant(value='~*')])), Assign(targets=[Name(id='param', ctx=Store())], value=Constant(value='%s')), Assign(targets=[Name(id='compound_select_parentheses', ctx=Store())], value=Name(id='CSQ_PARENTHESES_ALWAYS', ctx=Load())), Assign(targets=[Name(id='for_update', ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='nulls_ordering', ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='returning_clause', ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='safe_create_index', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='sequences', ctx=Store())], value=Constant(value=True)), FunctionDef(name='init', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database'), arg(arg='register_unicode'), arg(arg='encoding'), arg(arg='isolation_level')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=True), Constant(value=None), Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_register_unicode', ctx=Store())], value=Name(id='register_unicode', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_encoding', ctx=Store())], value=Name(id='encoding', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_isolation_level', ctx=Store())], value=Name(id='isolation_level', ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='PostgresqlDatabase', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='init', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='_connect', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='psycopg2', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ImproperlyConfigured', ctx=Load()), args=[Constant(value='Postgres driver not installed!')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='params', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='connect_params', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='postgresql://')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='params', ctx=Load()), attr='setdefault', ctx=Load()), args=[Constant(value='dsn'), Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='params', ctx=Load()), attr='setdefault', ctx=Load()), args=[Constant(value='dbname'), Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Name(id='psycopg2', ctx=Load()), attr='connect', ctx=Load()), args=[], keywords=[keyword(value=Name(id='params', ctx=Load()))])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_register_unicode', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='pg_extensions', ctx=Load()), attr='register_type', ctx=Load()), args=[Attribute(value=Name(id='pg_extensions', ctx=Load()), attr='UNICODE', ctx=Load()), Name(id='conn', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='pg_extensions', ctx=Load()), attr='register_type', ctx=Load()), args=[Attribute(value=Name(id='pg_extensions', ctx=Load()), attr='UNICODEARRAY', ctx=Load()), Name(id='conn', ctx=Load())], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_encoding', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='set_client_encoding', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_encoding', ctx=Load())], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_isolation_level', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='set_isolation_level', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_isolation_level', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='conn', ctx=Load()), attr='autocommit', ctx=Store())], value=Constant(value=True)), Return(value=Name(id='conn', ctx=Load()))], decorator_list=[]), FunctionDef(name='_set_server_version', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='server_version', ctx=Store())], value=Attribute(value=Name(id='conn', ctx=Load()), attr='server_version', ctx=Load())), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='server_version', ctx=Load()), ops=[GtE()], comparators=[Constant(value=90600)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='safe_create_index', ctx=Store())], value=Constant(value=True))], orelse=[])], decorator_list=[]), FunctionDef(name='is_connection_usable', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='closed', ctx=Load()), body=[Return(value=Constant(value=False))], orelse=[]), Assign(targets=[Name(id='txn_status', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='conn', ctx=Load()), attr='get_transaction_status', ctx=Load()), args=[], keywords=[])), Return(value=Compare(left=Name(id='txn_status', ctx=Load()), ops=[Lt()], comparators=[Attribute(value=Name(id='pg_extensions', ctx=Load()), attr='TRANSACTION_STATUS_INERROR', ctx=Load())]))], decorator_list=[]), FunctionDef(name='last_insert_id', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor'), arg(arg='query_type')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Try(body=[Return(value=IfExp(test=Compare(left=Name(id='query_type', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='Insert', ctx=Load()), attr='SIMPLE', ctx=Load())]), body=Name(id='cursor', ctx=Load()), orelse=Subscript(value=Subscript(value=Name(id='cursor', ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Constant(value=0), ctx=Load())))], handlers=[ExceptHandler(type=Tuple(elts=[Name(id='IndexError', ctx=Load()), Name(id='KeyError', ctx=Load()), Name(id='TypeError', ctx=Load())], ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], decorator_list=[]), FunctionDef(name='rows_affected', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Attribute(value=Name(id='cursor', ctx=Load()), attr='rowcount', ctx=Load()))], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[Return(value=Attribute(value=Attribute(value=Name(id='cursor', ctx=Load()), attr='cursor', ctx=Load()), attr='rowcount', ctx=Load()))])], orelse=[], finalbody=[])], decorator_list=[]), FunctionDef(name='get_tables', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='query', ctx=Store())], value=Constant(value='SELECT tablename FROM pg_catalog.pg_tables WHERE schemaname = %s ORDER BY tablename')), Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[Name(id='query', ctx=Load()), Tuple(elts=[BoolOp(op=Or(), values=[Name(id='schema', ctx=Load()), Constant(value='public')])], ctx=Load())], keywords=[])), Return(value=ListComp(elt=Name(id='table', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='table', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='get_views', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='query', ctx=Store())], value=Constant(value='SELECT viewname, definition FROM pg_catalog.pg_views WHERE schemaname = %s ORDER BY viewname')), Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[Name(id='query', ctx=Load()), Tuple(elts=[BoolOp(op=Or(), values=[Name(id='schema', ctx=Load()), Constant(value='public')])], ctx=Load())], keywords=[])), Return(value=ListComp(elt=Call(func=Name(id='ViewMetadata', ctx=Load()), args=[Name(id='view_name', ctx=Load()), Call(func=Attribute(value=Name(id='sql', ctx=Load()), attr='strip', ctx=Load()), args=[Constant(value=' \t;')], keywords=[])], keywords=[]), generators=[comprehension(target=Tuple(elts=[Name(id='view_name', ctx=Store()), Name(id='sql', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='get_indexes', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='query', ctx=Store())], value=Constant(value="\n            SELECT\n                i.relname, idxs.indexdef, idx.indisunique,\n                array_to_string(ARRAY(\n                    SELECT pg_get_indexdef(idx.indexrelid, k + 1, TRUE)\n                    FROM generate_subscripts(idx.indkey, 1) AS k\n                    ORDER BY k), ',')\n            FROM pg_catalog.pg_class AS t\n            INNER JOIN pg_catalog.pg_index AS idx ON t.oid = idx.indrelid\n            INNER JOIN pg_catalog.pg_class AS i ON idx.indexrelid = i.oid\n            INNER JOIN pg_catalog.pg_indexes AS idxs ON\n                (idxs.tablename = t.relname AND idxs.indexname = i.relname)\n            WHERE t.relname = %s AND t.relkind = %s AND idxs.schemaname = %s\n            ORDER BY idx.indisunique DESC, i.relname;")), Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[Name(id='query', ctx=Load()), Tuple(elts=[Name(id='table', ctx=Load()), Constant(value='r'), BoolOp(op=Or(), values=[Name(id='schema', ctx=Load()), Constant(value='public')])], ctx=Load())], keywords=[])), Return(value=ListComp(elt=Call(func=Name(id='IndexMetadata', ctx=Load()), args=[Name(id='name', ctx=Load()), Call(func=Attribute(value=Name(id='sql', ctx=Load()), attr='rstrip', ctx=Load()), args=[Constant(value=' ;')], keywords=[]), Call(func=Attribute(value=Name(id='columns', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=',')], keywords=[]), Name(id='is_unique', ctx=Load()), Name(id='table', ctx=Load())], keywords=[]), generators=[comprehension(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='sql', ctx=Store()), Name(id='is_unique', ctx=Store()), Name(id='columns', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='get_columns', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='query', ctx=Store())], value=Constant(value='\n            SELECT column_name, is_nullable, data_type, column_default\n            FROM information_schema.columns\n            WHERE table_name = %s AND table_schema = %s\n            ORDER BY ordinal_position')), Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[Name(id='query', ctx=Load()), Tuple(elts=[Name(id='table', ctx=Load()), BoolOp(op=Or(), values=[Name(id='schema', ctx=Load()), Constant(value='public')])], ctx=Load())], keywords=[])), Assign(targets=[Name(id='pks', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_primary_keys', ctx=Load()), args=[Name(id='table', ctx=Load()), Name(id='schema', ctx=Load())], keywords=[])], keywords=[])), Return(value=ListComp(elt=Call(func=Name(id='ColumnMetadata', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='dt', ctx=Load()), Compare(left=Name(id='null', ctx=Load()), ops=[Eq()], comparators=[Constant(value='YES')]), Compare(left=Name(id='name', ctx=Load()), ops=[In()], comparators=[Name(id='pks', ctx=Load())]), Name(id='table', ctx=Load()), Name(id='df', ctx=Load())], keywords=[]), generators=[comprehension(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='null', ctx=Store()), Name(id='dt', ctx=Store()), Name(id='df', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='get_primary_keys', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='query', ctx=Store())], value=Constant(value='\n            SELECT kc.column_name\n            FROM information_schema.table_constraints AS tc\n            INNER JOIN information_schema.key_column_usage AS kc ON (\n                tc.table_name = kc.table_name AND\n                tc.table_schema = kc.table_schema AND\n                tc.constraint_name = kc.constraint_name)\n            WHERE\n                tc.constraint_type = %s AND\n                tc.table_name = %s AND\n                tc.table_schema = %s')), Assign(targets=[Name(id='ctype', ctx=Store())], value=Constant(value='PRIMARY KEY')), Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[Name(id='query', ctx=Load()), Tuple(elts=[Name(id='ctype', ctx=Load()), Name(id='table', ctx=Load()), BoolOp(op=Or(), values=[Name(id='schema', ctx=Load()), Constant(value='public')])], ctx=Load())], keywords=[])), Return(value=ListComp(elt=Name(id='pk', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='pk', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='get_foreign_keys', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='sql', ctx=Store())], value=Constant(value="\n            SELECT DISTINCT\n                kcu.column_name, ccu.table_name, ccu.column_name\n            FROM information_schema.table_constraints AS tc\n            JOIN information_schema.key_column_usage AS kcu\n                ON (tc.constraint_name = kcu.constraint_name AND\n                    tc.constraint_schema = kcu.constraint_schema AND\n                    tc.table_name = kcu.table_name AND\n                    tc.table_schema = kcu.table_schema)\n            JOIN information_schema.constraint_column_usage AS ccu\n                ON (ccu.constraint_name = tc.constraint_name AND\n                    ccu.constraint_schema = tc.constraint_schema)\n            WHERE\n                tc.constraint_type = 'FOREIGN KEY' AND\n                tc.table_name = %s AND\n                tc.table_schema = %s")), Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[Name(id='sql', ctx=Load()), Tuple(elts=[Name(id='table', ctx=Load()), BoolOp(op=Or(), values=[Name(id='schema', ctx=Load()), Constant(value='public')])], ctx=Load())], keywords=[])), Return(value=ListComp(elt=Call(func=Name(id='ForeignKeyMetadata', ctx=Load()), args=[Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=0), ctx=Load()), Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=1), ctx=Load()), Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=2), ctx=Load()), Name(id='table', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='row', ctx=Store()), iter=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='sequence_exists', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='sequence')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[Constant(value="\n            SELECT COUNT(*) FROM pg_class, pg_namespace\n            WHERE relkind='S'\n                AND pg_class.relnamespace = pg_namespace.oid\n                AND relname=%s"), Tuple(elts=[Name(id='sequence', ctx=Load())], ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='bool', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='fetchone', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_binary_type', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='psycopg2', ctx=Load()), attr='Binary', ctx=Load()))], decorator_list=[]), FunctionDef(name='conflict_statement', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='on_conflict'), arg(arg='query')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return()], decorator_list=[]), FunctionDef(name='conflict_update', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='oc'), arg(arg='query')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='action', ctx=Store())], value=IfExp(test=Attribute(value=Name(id='oc', ctx=Load()), attr='_action', ctx=Load()), body=Call(func=Attribute(value=Attribute(value=Name(id='oc', ctx=Load()), attr='_action', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), orelse=Constant(value=''))), If(test=Compare(left=Name(id='action', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='ignore'), Constant(value='nothing')], ctx=Load())]), body=[Assign(targets=[Name(id='parts', ctx=Store())], value=List(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='ON CONFLICT')], keywords=[])], ctx=Load())), If(test=Attribute(value=Name(id='oc', ctx=Load()), attr='_conflict_target', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='EnclosedNodeList', ctx=Load()), args=[ListComp(elt=IfExp(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='col', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), body=Call(func=Name(id='Entity', ctx=Load()), args=[Name(id='col', ctx=Load())], keywords=[]), orelse=Name(id='col', ctx=Load())), generators=[comprehension(target=Name(id='col', ctx=Store()), iter=Attribute(value=Name(id='oc', ctx=Load()), attr='_conflict_target', ctx=Load()), ifs=[], is_async=0)])], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='DO NOTHING')], keywords=[])], keywords=[])), Return(value=Call(func=Name(id='NodeList', ctx=Load()), args=[Name(id='parts', ctx=Load())], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[Name(id='action', ctx=Load()), Compare(left=Name(id='action', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='update')])]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='The only supported actions for conflict resolution with Postgresql are "ignore" or "update".')], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='oc', ctx=Load()), attr='_update', ctx=Load())), UnaryOp(op=Not(), operand=Attribute(value=Name(id='oc', ctx=Load()), attr='_preserve', ctx=Load()))]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='If you are not performing any updates (or preserving any INSERTed values), then the conflict resolution action should be set to "IGNORE".')], keywords=[]))], orelse=[If(test=UnaryOp(op=Not(), operand=BoolOp(op=Or(), values=[Attribute(value=Name(id='oc', ctx=Load()), attr='_conflict_target', ctx=Load()), Attribute(value=Name(id='oc', ctx=Load()), attr='_conflict_constraint', ctx=Load())])), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Postgres requires that a conflict target be specified when doing an upsert.')], keywords=[]))], orelse=[])])])]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_build_on_conflict_update', ctx=Load()), args=[Name(id='oc', ctx=Load()), Name(id='query', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='extract_date', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='date_part'), arg(arg='date_field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='EXTRACT', ctx=Load()), args=[Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Name(id='date_part', ctx=Load()), Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='FROM')], keywords=[]), Name(id='date_field', ctx=Load())], ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='truncate_date', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='date_part'), arg(arg='date_field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='DATE_TRUNC', ctx=Load()), args=[Name(id='date_part', ctx=Load()), Name(id='date_field', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='to_timestamp', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='date_field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='extract_date', ctx=Load()), args=[Constant(value='EPOCH'), Name(id='date_field', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='from_timestamp', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='date_field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='to_timestamp', ctx=Load()), args=[Name(id='date_field', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_noop_select', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='Select', ctx=Load()), args=[], keywords=[]), attr='columns', ctx=Load()), args=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='0')], keywords=[])], keywords=[]), attr='where', ctx=Load()), args=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='false')], keywords=[])], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='set_time_zone', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='timezone')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[BinOp(left=Constant(value='set time zone "%s";'), op=Mod(), right=Name(id='timezone', ctx=Load()))], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='MySQLDatabase', bases=[Name(id='Database', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_types', ctx=Store())], value=Dict(keys=[Constant(value='AUTO'), Constant(value='BIGAUTO'), Constant(value='BOOL'), Constant(value='DECIMAL'), Constant(value='DOUBLE'), Constant(value='FLOAT'), Constant(value='UUID'), Constant(value='UUIDB')], values=[Constant(value='INTEGER AUTO_INCREMENT'), Constant(value='BIGINT AUTO_INCREMENT'), Constant(value='BOOL'), Constant(value='NUMERIC'), Constant(value='DOUBLE PRECISION'), Constant(value='FLOAT'), Constant(value='VARCHAR(40)'), Constant(value='VARBINARY(16)')])), Assign(targets=[Name(id='operations', ctx=Store())], value=Dict(keys=[Constant(value='LIKE'), Constant(value='ILIKE'), Constant(value='REGEXP'), Constant(value='IREGEXP'), Constant(value='XOR')], values=[Constant(value='LIKE BINARY'), Constant(value='LIKE'), Constant(value='REGEXP BINARY'), Constant(value='REGEXP'), Constant(value='XOR')])), Assign(targets=[Name(id='param', ctx=Store())], value=Constant(value='%s')), Assign(targets=[Name(id='quote', ctx=Store())], value=Constant(value='``')), Assign(targets=[Name(id='compound_select_parentheses', ctx=Store())], value=Name(id='CSQ_PARENTHESES_UNNESTED', ctx=Load())), Assign(targets=[Name(id='for_update', ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='index_using_precedes_table', ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='limit_max', ctx=Store())], value=BinOp(left=BinOp(left=Constant(value=2), op=Pow(), right=Constant(value=64)), op=Sub(), right=Constant(value=1))), Assign(targets=[Name(id='safe_create_index', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='safe_drop_index', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='sql_mode', ctx=Store())], value=Constant(value='PIPES_AS_CONCAT')), FunctionDef(name='init', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Name(id='params', ctx=Store())], value=Dict(keys=[Constant(value='charset'), Constant(value='sql_mode'), Constant(value='use_unicode')], values=[Constant(value='utf8'), Attribute(value=Name(id='self', ctx=Load()), attr='sql_mode', ctx=Load()), Constant(value=True)])), Expr(value=Call(func=Attribute(value=Name(id='params', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='kwargs', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Constant(value='password'), ops=[In()], comparators=[Name(id='params', ctx=Load())]), Name(id='mysql_passwd', ctx=Load())]), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='passwd'), ctx=Store())], value=Call(func=Attribute(value=Name(id='params', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='password')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='MySQLDatabase', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='init', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[keyword(value=Name(id='params', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='_connect', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='mysql', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ImproperlyConfigured', ctx=Load()), args=[Constant(value='MySQL driver not installed!')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Name(id='mysql', ctx=Load()), attr='connect', ctx=Load()), args=[], keywords=[keyword(arg='db', value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load())), keyword(arg='autocommit', value=Constant(value=True)), keyword(value=Attribute(value=Name(id='self', ctx=Load()), attr='connect_params', ctx=Load()))])), Return(value=Name(id='conn', ctx=Load()))], decorator_list=[]), FunctionDef(name='_set_server_version', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Assign(targets=[Name(id='version_raw', ctx=Store())], value=Attribute(value=Name(id='conn', ctx=Load()), attr='server_version', ctx=Load()))], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[Assign(targets=[Name(id='version_raw', ctx=Store())], value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='get_server_info', ctx=Load()), args=[], keywords=[]))])], orelse=[], finalbody=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='server_version', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_extract_server_version', ctx=Load()), args=[Name(id='version_raw', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_extract_server_version', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='version')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='version', ctx=Store())], value=Call(func=Attribute(value=Name(id='version', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Constant(value='maria'), ops=[In()], comparators=[Name(id='version', ctx=Load())]), body=[Assign(targets=[Name(id='match_obj', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(1\\d\\.\\d+\\.\\d+)'), Name(id='version', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='match_obj', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='(\\d\\.\\d+\\.\\d+)'), Name(id='version', ctx=Load())], keywords=[]))]), If(test=Compare(left=Name(id='match_obj', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='tuple', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='int', ctx=Load()), args=[Name(id='num', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='num', ctx=Store()), iter=Call(func=Attribute(value=Subscript(value=Call(func=Attribute(value=Name(id='match_obj', ctx=Load()), attr='groups', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[]), ifs=[], is_async=0)])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='warnings', ctx=Load()), attr='warn', ctx=Load()), args=[BinOp(left=Constant(value='Unable to determine MySQL version: "%s"'), op=Mod(), right=Name(id='version', ctx=Load()))], keywords=[])), Return(value=Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load()))], decorator_list=[]), FunctionDef(name='is_connection_usable', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='closed', ctx=Load()), body=[Return(value=Constant(value=False))], orelse=[]), Assign(targets=[Name(id='conn', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='conn', ctx=Load())), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='conn', ctx=Load()), Constant(value='ping')], keywords=[]), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='ping', ctx=Load()), args=[Constant(value=False)], keywords=[]))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), body=[Return(value=Constant(value=False))])], orelse=[], finalbody=[])], orelse=[]), Return(value=Constant(value=True))], decorator_list=[]), FunctionDef(name='default_values_insert', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='() VALUES ()')], keywords=[]))], decorator_list=[]), FunctionDef(name='get_tables', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='query', ctx=Store())], value=Constant(value='SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name')), Return(value=ListComp(elt=Name(id='table', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='table', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[Name(id='query', ctx=Load()), Tuple(elts=[Constant(value='VIEW')], ctx=Load())], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='get_views', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='query', ctx=Store())], value=Constant(value='SELECT table_name, view_definition FROM information_schema.views WHERE table_schema = DATABASE() ORDER BY table_name')), Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[Name(id='query', ctx=Load())], keywords=[])), Return(value=ListComp(elt=Call(func=Name(id='ViewMetadata', ctx=Load()), args=[Starred(value=Name(id='row', ctx=Load()), ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='row', ctx=Store()), iter=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='get_indexes', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[BinOp(left=Constant(value='SHOW INDEX FROM `%s`'), op=Mod(), right=Name(id='table', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='unique', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='indexes', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Name(id='row', ctx=Store()), iter=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[]), body=[If(test=UnaryOp(op=Not(), operand=Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=1), ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='unique', ctx=Load()), attr='add', ctx=Load()), args=[Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=2), ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='indexes', ctx=Load()), attr='setdefault', ctx=Load()), args=[Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=2), ctx=Load()), List(elts=[], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Subscript(value=Name(id='indexes', ctx=Load()), slice=Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=2), ctx=Load()), ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=4), ctx=Load())], keywords=[]))], orelse=[]), Return(value=ListComp(elt=Call(func=Name(id='IndexMetadata', ctx=Load()), args=[Name(id='name', ctx=Load()), Constant(value=None), Subscript(value=Name(id='indexes', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Load()), Compare(left=Name(id='name', ctx=Load()), ops=[In()], comparators=[Name(id='unique', ctx=Load())]), Name(id='table', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='name', ctx=Store()), iter=Name(id='indexes', ctx=Load()), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='get_columns', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='sql', ctx=Store())], value=Constant(value='\n            SELECT column_name, is_nullable, data_type, column_default\n            FROM information_schema.columns\n            WHERE table_name = %s AND table_schema = DATABASE()\n            ORDER BY ordinal_position')), Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[Name(id='sql', ctx=Load()), Tuple(elts=[Name(id='table', ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='pks', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_primary_keys', ctx=Load()), args=[Name(id='table', ctx=Load())], keywords=[])], keywords=[])), Return(value=ListComp(elt=Call(func=Name(id='ColumnMetadata', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='dt', ctx=Load()), Compare(left=Name(id='null', ctx=Load()), ops=[Eq()], comparators=[Constant(value='YES')]), Compare(left=Name(id='name', ctx=Load()), ops=[In()], comparators=[Name(id='pks', ctx=Load())]), Name(id='table', ctx=Load()), Name(id='df', ctx=Load())], keywords=[]), generators=[comprehension(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='null', ctx=Store()), Name(id='dt', ctx=Store()), Name(id='df', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='get_primary_keys', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[BinOp(left=Constant(value='SHOW INDEX FROM `%s`'), op=Mod(), right=Name(id='table', ctx=Load()))], keywords=[])), Return(value=ListComp(elt=Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=4), ctx=Load()), generators=[comprehension(target=Name(id='row', ctx=Store()), iter=Call(func=Name(id='filter', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='row')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Compare(left=Subscript(value=Name(id='row', ctx=Load()), slice=Constant(value=2), ctx=Load()), ops=[Eq()], comparators=[Constant(value='PRIMARY')])), Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[])], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='get_foreign_keys', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='query', ctx=Store())], value=Constant(value='\n            SELECT column_name, referenced_table_name, referenced_column_name\n            FROM information_schema.key_column_usage\n            WHERE table_name = %s\n                AND table_schema = DATABASE()\n                AND referenced_table_name IS NOT NULL\n                AND referenced_column_name IS NOT NULL')), Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[Name(id='query', ctx=Load()), Tuple(elts=[Name(id='table', ctx=Load())], ctx=Load())], keywords=[])), Return(value=ListComp(elt=Call(func=Name(id='ForeignKeyMetadata', ctx=Load()), args=[Name(id='column', ctx=Load()), Name(id='dest_table', ctx=Load()), Name(id='dest_column', ctx=Load()), Name(id='table', ctx=Load())], keywords=[]), generators=[comprehension(target=Tuple(elts=[Name(id='column', ctx=Store()), Name(id='dest_table', ctx=Store()), Name(id='dest_column', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='get_binary_type', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='mysql', ctx=Load()), attr='Binary', ctx=Load()))], decorator_list=[]), FunctionDef(name='conflict_statement', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='on_conflict'), arg(arg='query')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_action', ctx=Load())), body=[Return()], orelse=[]), Assign(targets=[Name(id='action', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_action', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='action', ctx=Load()), ops=[Eq()], comparators=[Constant(value='replace')]), body=[Return(value=Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='REPLACE')], keywords=[]))], orelse=[If(test=Compare(left=Name(id='action', ctx=Load()), ops=[Eq()], comparators=[Constant(value='ignore')]), body=[Return(value=Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='INSERT IGNORE')], keywords=[]))], orelse=[If(test=Compare(left=Name(id='action', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='update')]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Un-supported action for conflict resolution. MySQL supports REPLACE, IGNORE and UPDATE.')], keywords=[]))], orelse=[])])])], decorator_list=[]), FunctionDef(name='conflict_update', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='on_conflict'), arg(arg='query')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=Or(), values=[Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_where', ctx=Load()), Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_conflict_target', ctx=Load()), Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_conflict_constraint', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='MySQL does not support the specification of where clauses or conflict targets for conflict resolution.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='updates', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_preserve', ctx=Load()), body=[Assign(targets=[Name(id='version', ctx=Store())], value=BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='server_version', ctx=Load()), Tuple(elts=[Constant(value=0)], ctx=Load())])), If(test=BoolOp(op=And(), values=[Compare(left=Subscript(value=Name(id='version', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[Eq()], comparators=[Constant(value=10)]), Compare(left=Name(id='version', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=10), Constant(value=3), Constant(value=3)], ctx=Load())])]), body=[Assign(targets=[Name(id='VALUE_FN', ctx=Store())], value=Attribute(value=Name(id='fn', ctx=Load()), attr='VALUE', ctx=Load()))], orelse=[Assign(targets=[Name(id='VALUE_FN', ctx=Store())], value=Attribute(value=Name(id='fn', ctx=Load()), attr='VALUES', ctx=Load()))]), For(target=Name(id='column', ctx=Store()), iter=Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_preserve', ctx=Load()), body=[Assign(targets=[Name(id='entity', ctx=Store())], value=Call(func=Name(id='ensure_entity', ctx=Load()), args=[Name(id='column', ctx=Load())], keywords=[])), Assign(targets=[Name(id='expression', ctx=Store())], value=Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='ensure_entity', ctx=Load()), args=[Name(id='column', ctx=Load())], keywords=[]), Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='=')], keywords=[]), Call(func=Name(id='VALUE_FN', ctx=Load()), args=[Name(id='entity', ctx=Load())], keywords=[])], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='updates', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='expression', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), If(test=Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_update', ctx=Load()), body=[For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='on_conflict', ctx=Load()), attr='_update', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='v', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[])), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='k', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='k', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='query', ctx=Load()), attr='table', ctx=Load()), Name(id='k', ctx=Load())], keywords=[]))], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='k', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='v', ctx=Store())], value=Call(func=Attribute(value=Name(id='k', ctx=Load()), attr='to_value', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='v', ctx=Store())], value=Call(func=Name(id='Value', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[keyword(arg='unpack', value=Constant(value=False))]))])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='updates', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='ensure_entity', ctx=Load()), args=[Name(id='k', ctx=Load())], keywords=[]), Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='=')], keywords=[]), Name(id='v', ctx=Load())], ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[]), If(test=Name(id='updates', ctx=Load()), body=[Return(value=Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='ON DUPLICATE KEY UPDATE')], keywords=[]), Call(func=Name(id='CommaNodeList', ctx=Load()), args=[Name(id='updates', ctx=Load())], keywords=[])], ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='extract_date', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='date_part'), arg(arg='date_field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='EXTRACT', ctx=Load()), args=[Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[Name(id='date_part', ctx=Load())], keywords=[]), Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='FROM')], keywords=[]), Name(id='date_field', ctx=Load())], ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='truncate_date', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='date_part'), arg(arg='date_field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='DATE_FORMAT', ctx=Load()), args=[Name(id='date_field', ctx=Load()), Subscript(value=Name(id='__mysql_date_trunc__', ctx=Load()), slice=Name(id='date_part', ctx=Load()), ctx=Load())], keywords=[keyword(arg='python_value', value=Name(id='simple_date_time', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='to_timestamp', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='date_field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='UNIX_TIMESTAMP', ctx=Load()), args=[Name(id='date_field', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='from_timestamp', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='date_field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='FROM_UNIXTIME', ctx=Load()), args=[Name(id='date_field', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='random', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='rand', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='get_noop_select', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='DO 0')], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='_manual', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='db')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Store())], value=Name(id='db', ctx=Load()))], decorator_list=[]), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='inner', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Name(id='_manual', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load())], keywords=[]))], body=[Return(value=Call(func=Name(id='fn', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))])], decorator_list=[Call(func=Name(id='wraps', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[])]), Return(value=Name(id='inner', ctx=Load()))], decorator_list=[]), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='top', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='top_transaction', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='top', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='top', ctx=Load()), Name(id='_manual', ctx=Load())], keywords=[]))]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Cannot enter manual commit block while a transaction is active.')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='push_transaction', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exc_type'), arg(arg='exc_val'), arg(arg='exc_tb')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='pop_transaction', ctx=Load()), args=[], keywords=[]), ops=[IsNot()], comparators=[Name(id='self', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Transaction stack corrupted while exiting manual commit block.')], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[]), ClassDef(name='_atomic', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='db')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Store())], value=Name(id='db', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_transaction_args', ctx=Store())], value=Tuple(elts=[Name(id='args', ctx=Load()), Name(id='kwargs', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='inner', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='a', ctx=Store()), Name(id='k', ctx=Store())], ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_transaction_args', ctx=Load())), With(items=[withitem(context_expr=Call(func=Name(id='_atomic', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), Starred(value=Name(id='a', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='k', ctx=Load()))]))], body=[Return(value=Call(func=Name(id='fn', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))])], decorator_list=[Call(func=Name(id='wraps', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[])]), Return(value=Name(id='inner', ctx=Load()))], decorator_list=[]), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='transaction_depth', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value=0)]), body=[Assign(targets=[Tuple(elts=[Name(id='args', ctx=Store()), Name(id='kwargs', ctx=Store())], ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_transaction_args', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_helper', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='transaction', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='top_transaction', ctx=Load()), args=[], keywords=[]), Name(id='_manual', ctx=Load())], keywords=[]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Cannot enter atomic commit block while in manual commit mode.')], keywords=[]))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_helper', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='savepoint', ctx=Load()), args=[], keywords=[]))])]), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_helper', ctx=Load()), attr='__enter__', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exc_type'), arg(arg='exc_val'), arg(arg='exc_tb')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_helper', ctx=Load()), attr='__exit__', ctx=Load()), args=[Name(id='exc_type', ctx=Load()), Name(id='exc_val', ctx=Load()), Name(id='exc_tb', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='_transaction', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='db')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Store())], value=Name(id='db', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_begin_args', ctx=Store())], value=Tuple(elts=[Name(id='args', ctx=Load()), Name(id='kwargs', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='inner', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='a', ctx=Store()), Name(id='k', ctx=Store())], ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_begin_args', ctx=Load())), With(items=[withitem(context_expr=Call(func=Name(id='_transaction', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), Starred(value=Name(id='a', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='k', ctx=Load()))]))], body=[Return(value=Call(func=Name(id='fn', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))])], decorator_list=[Call(func=Name(id='wraps', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[])]), Return(value=Name(id='inner', ctx=Load()))], decorator_list=[]), FunctionDef(name='_begin', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='args', ctx=Store()), Name(id='kwargs', ctx=Store())], ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_begin_args', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='begin', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='commit', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='begin')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='commit', ctx=Load()), args=[], keywords=[])), If(test=Name(id='begin', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_begin', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='rollback', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='begin')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='rollback', ctx=Load()), args=[], keywords=[])), If(test=Name(id='begin', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_begin', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='transaction_depth', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value=0)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_begin', ctx=Load()), args=[], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='push_transaction', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exc_type'), arg(arg='exc_val'), arg(arg='exc_tb')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[If(test=Name(id='exc_type', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='rollback', ctx=Load()), args=[Constant(value=False)], keywords=[]))], orelse=[If(test=Compare(left=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='transaction_depth', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='commit', ctx=Load()), args=[Constant(value=False)], keywords=[]))], handlers=[ExceptHandler(body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='rollback', ctx=Load()), args=[Constant(value=False)], keywords=[])), Raise()])], orelse=[], finalbody=[])], orelse=[])])], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='pop_transaction', ctx=Load()), args=[], keywords=[]))])], decorator_list=[])], decorator_list=[]), ClassDef(name='_savepoint', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='db'), arg(arg='sid')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Store())], value=Name(id='db', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='sid', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='sid', ctx=Load()), BinOp(left=Constant(value='s'), op=Add(), right=Attribute(value=Call(func=Attribute(value=Name(id='uuid', ctx=Load()), attr='uuid4', ctx=Load()), args=[], keywords=[]), attr='hex', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='quoted_sid', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='sid', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='quote', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='inner', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Name(id='_savepoint', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load())], keywords=[]))], body=[Return(value=Call(func=Name(id='fn', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))])], decorator_list=[Call(func=Name(id='wraps', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[])]), Return(value=Name(id='inner', ctx=Load()))], decorator_list=[]), FunctionDef(name='_begin', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='execute_sql', ctx=Load()), args=[BinOp(left=Constant(value='SAVEPOINT %s;'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='quoted_sid', ctx=Load()))], keywords=[]))], decorator_list=[]), FunctionDef(name='commit', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='begin')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='execute_sql', ctx=Load()), args=[BinOp(left=Constant(value='RELEASE SAVEPOINT %s;'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='quoted_sid', ctx=Load()))], keywords=[])), If(test=Name(id='begin', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_begin', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='rollback', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='db', ctx=Load()), attr='execute_sql', ctx=Load()), args=[BinOp(left=Constant(value='ROLLBACK TO SAVEPOINT %s;'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='quoted_sid', ctx=Load()))], keywords=[]))], decorator_list=[]), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_begin', ctx=Load()), args=[], keywords=[])), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exc_type'), arg(arg='exc_val'), arg(arg='exc_tb')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Name(id='exc_type', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='rollback', ctx=Load()), args=[], keywords=[]))], orelse=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='commit', ctx=Load()), args=[], keywords=[keyword(arg='begin', value=Constant(value=False))]))], handlers=[ExceptHandler(body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='rollback', ctx=Load()), args=[], keywords=[])), Raise()])], orelse=[], finalbody=[])])], decorator_list=[])], decorator_list=[]), ClassDef(name='CursorWrapper', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='cursor', ctx=Store())], value=Name(id='cursor', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='count', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='initialized', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='populated', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='row_cache', ctx=Store())], value=List(elts=[], ctx=Load()))], decorator_list=[]), FunctionDef(name='__iter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='populated', ctx=Load()), body=[Return(value=Call(func=Name(id='iter', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='row_cache', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='ResultIterator', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='item')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='item', ctx=Load()), Name(id='slice', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='stop', ctx=Store())], value=Attribute(value=Name(id='item', ctx=Load()), attr='stop', ctx=Load())), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='stop', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Name(id='stop', ctx=Load()), ops=[Lt()], comparators=[Constant(value=0)])]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fill_cache', ctx=Load()), args=[], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fill_cache', ctx=Load()), args=[Name(id='stop', ctx=Load())], keywords=[]))]), Return(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='row_cache', ctx=Load()), slice=Name(id='item', ctx=Load()), ctx=Load()))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='item', ctx=Load()), Name(id='int', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fill_cache', ctx=Load()), args=[IfExp(test=Compare(left=Name(id='item', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), body=Name(id='item', ctx=Load()), orelse=Constant(value=0))], keywords=[])), Return(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='row_cache', ctx=Load()), slice=Name(id='item', ctx=Load()), ctx=Load()))], orelse=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='CursorWrapper only supports integer and slice indexes.')], keywords=[]))])])], decorator_list=[]), FunctionDef(name='__len__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fill_cache', ctx=Load()), args=[], keywords=[])), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='count', ctx=Load()))], decorator_list=[]), FunctionDef(name='initialize', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[]), FunctionDef(name='iterate', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cache')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assign(targets=[Name(id='row', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cursor', ctx=Load()), attr='fetchone', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='row', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='populated', ctx=Store())], value=Constant(value=True)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cursor', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Raise(exc=Name(id='StopIteration', ctx=Load()))], orelse=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='initialized', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='initialize', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='initialized', ctx=Store())], value=Constant(value=True))], orelse=[])]), AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='count', ctx=Store()), op=Add(), value=Constant(value=1)), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='process_row', ctx=Load()), args=[Name(id='row', ctx=Load())], keywords=[])), If(test=Name(id='cache', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='row_cache', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='result', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[]), FunctionDef(name='process_row', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='row')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Name(id='row', ctx=Load()))], decorator_list=[]), FunctionDef(name='iterator', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Efficient one-pass iteration over the result set.')), While(test=Constant(value=True), body=[Try(body=[Expr(value=Yield(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='iterate', ctx=Load()), args=[Constant(value=False)], keywords=[])))], handlers=[ExceptHandler(type=Name(id='StopIteration', ctx=Load()), body=[Return()])], orelse=[], finalbody=[])], orelse=[])], decorator_list=[]), FunctionDef(name='fill_cache', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='n')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=0)]), body=[Assign(targets=[Name(id='n', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='n', ctx=Load()), Call(func=Name(id='float', ctx=Load()), args=[Constant(value='Inf')], keywords=[])])), If(test=Compare(left=Name(id='n', ctx=Load()), ops=[Lt()], comparators=[Constant(value=0)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Negative values are not supported.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='iterator', ctx=Store())], value=Call(func=Name(id='ResultIterator', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='iterator', ctx=Load()), attr='index', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='count', ctx=Load())), While(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='populated', ctx=Load())), Compare(left=Name(id='n', ctx=Load()), ops=[Gt()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='count', ctx=Load())])]), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='iterator', ctx=Load()), attr='next', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Name(id='StopIteration', ctx=Load()), body=[Break()])], orelse=[], finalbody=[])], orelse=[])], decorator_list=[])], decorator_list=[]), ClassDef(name='DictCursorWrapper', bases=[Name(id='CursorWrapper', ctx=Load())], keywords=[], body=[FunctionDef(name='_initialize_columns', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='description', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cursor', ctx=Load()), attr='description', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Store())], value=ListComp(elt=Call(func=Attribute(value=Subscript(value=Subscript(value=Name(id='t', ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Slice(lower=BinOp(left=Call(func=Attribute(value=Subscript(value=Name(id='t', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='rfind', ctx=Load()), args=[Constant(value='.')], keywords=[]), op=Add(), right=Constant(value=1))), ctx=Load()), attr='strip', ctx=Load()), args=[Constant(value='()"`')], keywords=[]), generators=[comprehension(target=Name(id='t', ctx=Store()), iter=Name(id='description', ctx=Load()), ifs=[], is_async=0)])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='ncols', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Name(id='description', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='initialize', ctx=Store())], value=Name(id='_initialize_columns', ctx=Load())), FunctionDef(name='_row_to_dict', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='row')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='result', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='ncols', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='setdefault', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), Subscript(value=Name(id='row', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='process_row', ctx=Store())], value=Name(id='_row_to_dict', ctx=Load()))], decorator_list=[]), ClassDef(name='NamedTupleCursorWrapper', bases=[Name(id='CursorWrapper', ctx=Load())], keywords=[], body=[FunctionDef(name='initialize', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='description', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cursor', ctx=Load()), attr='description', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='tuple_class', ctx=Store())], value=Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='namedtuple', ctx=Load()), args=[Constant(value='Row'), ListComp(elt=Call(func=Attribute(value=Subscript(value=Subscript(value=Name(id='t', ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Slice(lower=BinOp(left=Call(func=Attribute(value=Subscript(value=Name(id='t', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='rfind', ctx=Load()), args=[Constant(value='.')], keywords=[]), op=Add(), right=Constant(value=1))), ctx=Load()), attr='strip', ctx=Load()), args=[Constant(value='()"`')], keywords=[]), generators=[comprehension(target=Name(id='t', ctx=Store()), iter=Name(id='description', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], decorator_list=[]), FunctionDef(name='process_row', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='row')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='tuple_class', ctx=Load()), args=[Starred(value=Name(id='row', ctx=Load()), ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='ObjectCursorWrapper', bases=[Name(id='DictCursorWrapper', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor'), arg(arg='constructor')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ObjectCursorWrapper', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='cursor', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='constructor', ctx=Store())], value=Name(id='constructor', ctx=Load()))], decorator_list=[]), FunctionDef(name='process_row', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='row')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='row_dict', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_row_to_dict', ctx=Load()), args=[Name(id='row', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='constructor', ctx=Load()), args=[], keywords=[keyword(value=Name(id='row_dict', ctx=Load()))]))], decorator_list=[])], decorator_list=[]), ClassDef(name='ResultIterator', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor_wrapper')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='cursor_wrapper', ctx=Store())], value=Name(id='cursor_wrapper', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Store())], value=Constant(value=0))], decorator_list=[]), FunctionDef(name='__iter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='next', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Load()), ops=[Lt()], comparators=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cursor_wrapper', ctx=Load()), attr='count', ctx=Load())]), body=[Assign(targets=[Name(id='obj', ctx=Store())], value=Subscript(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cursor_wrapper', ctx=Load()), attr='row_cache', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Load()), ctx=Load()))], orelse=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cursor_wrapper', ctx=Load()), attr='populated', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cursor_wrapper', ctx=Load()), attr='iterate', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='obj', ctx=Store())], value=Subscript(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cursor_wrapper', ctx=Load()), attr='row_cache', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Load()), ctx=Load()))], orelse=[Raise(exc=Name(id='StopIteration', ctx=Load()))])]), AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Store()), op=Add(), value=Constant(value=1)), Return(value=Name(id='obj', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='__next__', ctx=Store())], value=Name(id='next', ctx=Load()))], decorator_list=[]), ClassDef(name='FieldAccessor', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='field'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Store())], value=Name(id='model', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Store())], value=Name(id='field', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store())], value=Name(id='name', ctx=Load()))], decorator_list=[]), FunctionDef(name='__get__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='instance_type')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='instance', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='instance', ctx=Load()), attr='__data__', ctx=Load()), attr='get', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()))], decorator_list=[]), FunctionDef(name='__set__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='instance', ctx=Load()), attr='__data__', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), ctx=Store())], value=Name(id='value', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='instance', ctx=Load()), attr='_dirty', ctx=Load()), attr='add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='ForeignKeyAccessor', bases=[Name(id='FieldAccessor', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='field'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ForeignKeyAccessor', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='model', ctx=Load()), Name(id='field', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Store())], value=Attribute(value=Name(id='field', ctx=Load()), attr='rel_model', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_rel_instance', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='instance', ctx=Load()), attr='__data__', ctx=Load()), attr='get', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='value', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='instance', ctx=Load()), attr='__rel__', ctx=Load())])]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='instance', ctx=Load()), attr='__rel__', ctx=Load())]), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), attr='lazy_load', ctx=Load())]), body=[Assign(targets=[Name(id='obj', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Load()), attr='get', ctx=Load()), args=[Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), attr='rel_field', ctx=Load()), ops=[Eq()], comparators=[Name(id='value', ctx=Load())])], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='instance', ctx=Load()), attr='__rel__', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), ctx=Store())], value=Name(id='obj', ctx=Load()))], orelse=[]), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='instance', ctx=Load()), attr='__rel__', ctx=Load()), attr='get', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), attr='null', ctx=Load())), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), attr='lazy_load', ctx=Load())]), body=[Raise(exc=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Load()), attr='DoesNotExist', ctx=Load()))], orelse=[])]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='__get__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='instance_type')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='instance', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_rel_instance', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()))], decorator_list=[]), FunctionDef(name='__set__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='obj')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='obj', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Load())], keywords=[]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='instance', ctx=Load()), attr='__data__', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='obj', ctx=Load()), Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), attr='rel_field', ctx=Load()), attr='name', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='instance', ctx=Load()), attr='__rel__', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), ctx=Store())], value=Name(id='obj', ctx=Load()))], orelse=[Assign(targets=[Name(id='fk_value', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='instance', ctx=Load()), attr='__data__', ctx=Load()), attr='get', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='instance', ctx=Load()), attr='__data__', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), ctx=Store())], value=Name(id='obj', ctx=Load())), If(test=BoolOp(op=And(), values=[BoolOp(op=Or(), values=[Compare(left=Name(id='obj', ctx=Load()), ops=[NotEq()], comparators=[Name(id='fk_value', ctx=Load())]), Compare(left=Name(id='obj', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])]), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='instance', ctx=Load()), attr='__rel__', ctx=Load())])]), body=[Delete(targets=[Subscript(value=Attribute(value=Name(id='instance', ctx=Load()), attr='__rel__', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), ctx=Del())])], orelse=[])]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='instance', ctx=Load()), attr='_dirty', ctx=Load()), attr='add', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='BackrefAccessor', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Store())], value=Name(id='field', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Store())], value=Attribute(value=Name(id='field', ctx=Load()), attr='rel_model', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Store())], value=Attribute(value=Name(id='field', ctx=Load()), attr='model', ctx=Load()))], decorator_list=[]), FunctionDef(name='__get__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='instance_type')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='instance', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='dest', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), attr='rel_field', ctx=Load()), attr='name', ctx=Load())), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Load()), attr='select', ctx=Load()), args=[], keywords=[]), attr='where', ctx=Load()), args=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), ops=[Eq()], comparators=[Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='dest', ctx=Load())], keywords=[])])], keywords=[]))], orelse=[]), Return(value=Name(id='self', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='ObjectIdAccessor', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Gives direct access to the underlying id')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Store())], value=Name(id='field', ctx=Load()))], decorator_list=[]), FunctionDef(name='__get__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='instance_type')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='instance', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='instance', ctx=Load()), attr='__data__', ctx=Load()), attr='get', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), attr='name', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='value', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), attr='name', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='instance', ctx=Load()), attr='__rel__', ctx=Load())])]), body=[Assign(targets=[Name(id='rel_obj', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='instance', ctx=Load()), attr='__rel__', ctx=Load()), slice=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), attr='name', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='rel_obj', ctx=Load()), Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), attr='rel_field', ctx=Load()), attr='name', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='value', ctx=Load()))], orelse=[]), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()))], decorator_list=[]), FunctionDef(name='__set__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='instance', ctx=Load()), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), attr='name', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='Field', bases=[Name(id='ColumnBase', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='_field_counter', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='_order', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='accessor_class', ctx=Store())], value=Name(id='FieldAccessor', ctx=Load())), Assign(targets=[Name(id='auto_increment', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='default_index_type', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='DEFAULT')), Assign(targets=[Name(id='unpack', ctx=Store())], value=Constant(value=True)), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='null'), arg(arg='index'), arg(arg='unique'), arg(arg='column_name'), arg(arg='default'), arg(arg='primary_key'), arg(arg='constraints'), arg(arg='sequence'), arg(arg='collation'), arg(arg='unindexed'), arg(arg='choices'), arg(arg='help_text'), arg(arg='verbose_name'), arg(arg='index_type'), arg(arg='db_column'), arg(arg='_hidden')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=False), Constant(value=False), Constant(value=None), Constant(value=None), Constant(value=False), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=False), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=False)]), body=[If(test=Compare(left=Name(id='db_column', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='__deprecated__', ctx=Load()), args=[Constant(value='"db_column" has been deprecated in favor of "column_name" for Field objects.')], keywords=[])), Assign(targets=[Name(id='column_name', ctx=Store())], value=Name(id='db_column', ctx=Load()))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='null', ctx=Store())], value=Name(id='null', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Store())], value=Name(id='index', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='unique', ctx=Store())], value=Name(id='unique', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='column_name', ctx=Store())], value=Name(id='column_name', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='default', ctx=Store())], value=Name(id='default', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='primary_key', ctx=Store())], value=Name(id='primary_key', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='constraints', ctx=Store())], value=Name(id='constraints', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='sequence', ctx=Store())], value=Name(id='sequence', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='collation', ctx=Store())], value=Name(id='collation', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='unindexed', ctx=Store())], value=Name(id='unindexed', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='choices', ctx=Store())], value=Name(id='choices', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='help_text', ctx=Store())], value=Name(id='help_text', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='verbose_name', ctx=Store())], value=Name(id='verbose_name', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='index_type', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='index_type', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='default_index_type', ctx=Load())])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_hidden', ctx=Store())], value=Name(id='_hidden', ctx=Load())), AugAssign(target=Attribute(value=Name(id='Field', ctx=Load()), attr='_field_counter', ctx=Store()), op=Add(), value=Constant(value=1)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_order', ctx=Store())], value=Attribute(value=Name(id='Field', ctx=Load()), attr='_field_counter', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_sort_key', ctx=Store())], value=Tuple(elts=[BoolOp(op=Or(), values=[BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='primary_key', ctx=Load()), Constant(value=1)]), Constant(value=2)]), Attribute(value=Name(id='self', ctx=Load()), attr='_order', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='__hash__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='hash', ctx=Load()), args=[BinOp(left=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), op=Add(), right=Constant(value='.')), op=Add(), right=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='__name__', ctx=Load()))], keywords=[]))], decorator_list=[]), FunctionDef(name='__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Constant(value='model')], keywords=[]), Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Constant(value='name'), Constant(value=None)], keywords=[])]), body=[Return(value=BinOp(left=Constant(value='<%s: %s.%s>'), op=Mod(), right=Tuple(elts=[Attribute(value=Call(func=Name(id='type', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), attr='__name__', ctx=Load()), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='__name__', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], ctx=Load())))], orelse=[]), Return(value=BinOp(left=Constant(value='<%s: (unbound)>'), op=Mod(), right=Attribute(value=Call(func=Name(id='type', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), attr='__name__', ctx=Load())))], decorator_list=[]), FunctionDef(name='bind', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='name'), arg(arg='set_attribute')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Store())], value=Name(id='model', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='safe_name', ctx=Store())], value=Name(id='name', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='column_name', ctx=Store())], value=BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='column_name', ctx=Load()), Name(id='name', ctx=Load())])), If(test=Name(id='set_attribute', ctx=Load()), body=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='model', ctx=Load()), Name(id='name', ctx=Load()), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='accessor_class', ctx=Load()), args=[Name(id='model', ctx=Load()), Name(id='self', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='column', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Column', ctx=Load()), args=[Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='table', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='column_name', ctx=Load())], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='adapt', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='db_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=IfExp(test=Compare(left=Name(id='value', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=Name(id='value', ctx=Load()), orelse=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='adapt', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])))], decorator_list=[]), FunctionDef(name='python_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=IfExp(test=Compare(left=Name(id='value', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=Name(id='value', ctx=Load()), orelse=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='adapt', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])))], decorator_list=[]), FunctionDef(name='to_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Value', ctx=Load()), args=[Name(id='value', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='db_value', ctx=Load())], keywords=[keyword(arg='unpack', value=Constant(value=False))]))], decorator_list=[]), FunctionDef(name='get_sort_key', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_sort_key', ctx=Load()))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='column', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_modifiers', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[]), FunctionDef(name='ddl_datatype', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Name(id='ctx', ctx=Load()), Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='field_types', ctx=Load())]), body=[Assign(targets=[Name(id='column_type', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='field_types', ctx=Load()), attr='get', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='field_type', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='field_type', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='column_type', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='field_type', ctx=Load()))]), Assign(targets=[Name(id='modifiers', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_modifiers', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=And(), values=[Name(id='column_type', ctx=Load()), Name(id='modifiers', ctx=Load())]), body=[Assign(targets=[Name(id='modifier_literal', ctx=Store())], value=Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[ListComp(elt=Call(func=Name(id='str', ctx=Load()), args=[Name(id='m', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='m', ctx=Store()), iter=Name(id='modifiers', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), Return(value=Call(func=Name(id='SQL', ctx=Load()), args=[BinOp(left=Constant(value='%s(%s)'), op=Mod(), right=Tuple(elts=[Name(id='column_type', ctx=Load()), Name(id='modifier_literal', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[Return(value=Call(func=Name(id='SQL', ctx=Load()), args=[Name(id='column_type', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='ddl', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='accum', ctx=Store())], value=List(elts=[Call(func=Name(id='Entity', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='column_name', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Name(id='data_type', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='ddl_datatype', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[])), If(test=Name(id='data_type', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='data_type', ctx=Load())], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='unindexed', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='UNINDEXED')], keywords=[])], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='null', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='NOT NULL')], keywords=[])], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='primary_key', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='PRIMARY KEY')], keywords=[])], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='sequence', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='SQL', ctx=Load()), args=[BinOp(left=Constant(value="DEFAULT NEXTVAL('%s')"), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='sequence', ctx=Load()))], keywords=[])], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='constraints', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='extend', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='constraints', ctx=Load())], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='collation', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='SQL', ctx=Load()), args=[BinOp(left=Constant(value='COLLATE %s'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='collation', ctx=Load()))], keywords=[])], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='NodeList', ctx=Load()), args=[Name(id='accum', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='AnyField', bases=[Name(id='Field', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='ANY'))], decorator_list=[]), ClassDef(name='IntegerField', bases=[Name(id='Field', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='INT')), FunctionDef(name='adapt', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Call(func=Name(id='int', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ValueError', ctx=Load()), body=[Return(value=Name(id='value', ctx=Load()))])], orelse=[], finalbody=[])], decorator_list=[])], decorator_list=[]), ClassDef(name='BigIntegerField', bases=[Name(id='IntegerField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='BIGINT'))], decorator_list=[]), ClassDef(name='SmallIntegerField', bases=[Name(id='IntegerField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='SMALLINT'))], decorator_list=[]), ClassDef(name='AutoField', bases=[Name(id='IntegerField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='auto_increment', ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='AUTO')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[If(test=Compare(left=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='primary_key')], keywords=[]), ops=[Is()], comparators=[Constant(value=False)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='%s must always be a primary key.'), op=Mod(), right=Call(func=Name(id='type', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Name(id='kwargs', ctx=Load()), slice=Constant(value='primary_key'), ctx=Store())], value=Constant(value=True)), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='AutoField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[])], decorator_list=[]), ClassDef(name='BigAutoField', bases=[Name(id='AutoField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='BIGAUTO'))], decorator_list=[]), ClassDef(name='IdentityField', bases=[Name(id='AutoField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='INT GENERATED BY DEFAULT AS IDENTITY')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='generate_always')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=False)]), body=[If(test=Name(id='generate_always', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='field_type', ctx=Store())], value=Constant(value='INT GENERATED ALWAYS AS IDENTITY'))], orelse=[]), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='IdentityField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[])], decorator_list=[]), ClassDef(name='PrimaryKeyField', bases=[Name(id='AutoField', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Call(func=Name(id='__deprecated__', ctx=Load()), args=[Constant(value='"PrimaryKeyField" has been renamed to "AutoField". Please update your code accordingly as this will be completely removed in a subsequent release.')], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='PrimaryKeyField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[])], decorator_list=[]), ClassDef(name='FloatField', bases=[Name(id='Field', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='FLOAT')), FunctionDef(name='adapt', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Call(func=Name(id='float', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ValueError', ctx=Load()), body=[Return(value=Name(id='value', ctx=Load()))])], orelse=[], finalbody=[])], decorator_list=[])], decorator_list=[]), ClassDef(name='DoubleField', bases=[Name(id='FloatField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='DOUBLE'))], decorator_list=[]), ClassDef(name='DecimalField', bases=[Name(id='Field', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='DECIMAL')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='max_digits'), arg(arg='decimal_places'), arg(arg='auto_round'), arg(arg='rounding')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=10), Constant(value=5), Constant(value=False), Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='max_digits', ctx=Store())], value=Name(id='max_digits', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='decimal_places', ctx=Store())], value=Name(id='decimal_places', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='auto_round', ctx=Store())], value=Name(id='auto_round', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='rounding', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='rounding', ctx=Load()), Attribute(value=Attribute(value=Name(id='decimal', ctx=Load()), attr='DefaultContext', ctx=Load()), attr='rounding', ctx=Load())])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_exp', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='decimal', ctx=Load()), attr='Decimal', ctx=Load()), args=[Constant(value=10)], keywords=[]), op=Pow(), right=UnaryOp(op=USub(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='decimal_places', ctx=Load())))), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='DecimalField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='get_modifiers', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=List(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='max_digits', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='decimal_places', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='db_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='D', ctx=Store())], value=Attribute(value=Name(id='decimal', ctx=Load()), attr='Decimal', ctx=Load())), If(test=UnaryOp(op=Not(), operand=Name(id='value', ctx=Load())), body=[Return(value=IfExp(test=Compare(left=Name(id='value', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=Name(id='value', ctx=Load()), orelse=Call(func=Name(id='D', ctx=Load()), args=[Constant(value=0)], keywords=[])))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='auto_round', ctx=Load()), body=[Assign(targets=[Name(id='decimal_value', ctx=Store())], value=Call(func=Name(id='D', ctx=Load()), args=[Call(func=Name(id='text_type', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='decimal_value', ctx=Load()), attr='quantize', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_exp', ctx=Load())], keywords=[keyword(arg='rounding', value=Attribute(value=Name(id='self', ctx=Load()), attr='rounding', ctx=Load()))]))], orelse=[]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='python_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='value', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Attribute(value=Name(id='decimal', ctx=Load()), attr='Decimal', ctx=Load())], keywords=[]), body=[Return(value=Name(id='value', ctx=Load()))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='decimal', ctx=Load()), attr='Decimal', ctx=Load()), args=[Call(func=Name(id='text_type', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[]), ClassDef(name='_StringField', bases=[Name(id='Field', ctx=Load())], keywords=[], body=[FunctionDef(name='adapt', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='text_type', ctx=Load())], keywords=[]), body=[Return(value=Name(id='value', ctx=Load()))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='bytes_type', ctx=Load())], keywords=[]), body=[Return(value=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='decode', ctx=Load()), args=[Constant(value='utf-8')], keywords=[]))], orelse=[])]), Return(value=Call(func=Name(id='text_type', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__add__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='StringExpression', ctx=Load()), args=[Name(id='self', ctx=Load()), Attribute(value=Name(id='OP', ctx=Load()), attr='CONCAT', ctx=Load()), Name(id='other', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__radd__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='StringExpression', ctx=Load()), args=[Name(id='other', ctx=Load()), Attribute(value=Name(id='OP', ctx=Load()), attr='CONCAT', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='CharField', bases=[Name(id='_StringField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='VARCHAR')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='max_length')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=255)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='max_length', ctx=Store())], value=Name(id='max_length', ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='CharField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='get_modifiers', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BoolOp(op=Or(), values=[BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='max_length', ctx=Load()), List(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='max_length', ctx=Load())], ctx=Load())]), Constant(value=None)]))], decorator_list=[])], decorator_list=[]), ClassDef(name='FixedCharField', bases=[Name(id='CharField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='CHAR')), FunctionDef(name='python_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='FixedCharField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='python_value', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])), If(test=Name(id='value', ctx=Load()), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='TextField', bases=[Name(id='_StringField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='TEXT'))], decorator_list=[]), ClassDef(name='BlobField', bases=[Name(id='Field', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='BLOB')), FunctionDef(name='_db_hook', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='database', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_constructor', ctx=Store())], value=Name(id='bytearray', ctx=Load()))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_constructor', ctx=Store())], value=Call(func=Attribute(value=Name(id='database', ctx=Load()), attr='get_binary_type', ctx=Load()), args=[], keywords=[]))])], decorator_list=[]), FunctionDef(name='bind', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='name'), arg(arg='set_attribute')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_constructor', ctx=Store())], value=Name(id='bytearray', ctx=Load())), If(test=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load()), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load()), Name(id='Proxy', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load()), attr='attach_callback', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_db_hook', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_db_hook', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load())], keywords=[]))])], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='_db_hooks', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_db_hook', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='BlobField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='bind', ctx=Load()), args=[Name(id='model', ctx=Load()), Name(id='name', ctx=Load()), Name(id='set_attribute', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='db_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='text_type', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='encode', ctx=Load()), args=[Constant(value='raw_unicode_escape')], keywords=[]))], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='bytes_type', ctx=Load())], keywords=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_constructor', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='BitField', bases=[Name(id='BitwiseMixin', ctx=Load()), Name(id='BigIntegerField', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='setdefault', ctx=Load()), args=[Constant(value='default'), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='BitField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='__current_flag', ctx=Store())], value=Constant(value=1))], decorator_list=[]), FunctionDef(name='flag', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='value', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='__current_flag', ctx=Load())), AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='__current_flag', ctx=Store()), op=LShift(), value=Constant(value=1))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='__current_flag', ctx=Store())], value=BinOp(left=Name(id='value', ctx=Load()), op=LShift(), right=Constant(value=1)))]), ClassDef(name='FlagDescriptor', bases=[Name(id='ColumnBase', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_field', ctx=Store())], value=Name(id='field', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_value', ctx=Store())], value=Name(id='value', ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='FlagDescriptor', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='clear', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_field', ctx=Load()), attr='bin_and', ctx=Load()), args=[UnaryOp(op=Invert(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_value', ctx=Load()))], keywords=[]))], decorator_list=[]), FunctionDef(name='set', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_field', ctx=Load()), attr='bin_or', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_value', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__get__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='instance_type')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='instance', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return(value=Name(id='self', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='value', ctx=Store())], value=BoolOp(op=Or(), values=[Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='instance', ctx=Load()), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_field', ctx=Load()), attr='name', ctx=Load())], keywords=[]), Constant(value=0)])), Return(value=Compare(left=BinOp(left=Name(id='value', ctx=Load()), op=BitAnd(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_value', ctx=Load())), ops=[NotEq()], comparators=[Constant(value=0)]))], decorator_list=[]), FunctionDef(name='__set__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='is_set')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='is_set', ctx=Load()), ops=[NotIn()], comparators=[Tuple(elts=[Constant(value=True), Constant(value=False)], ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Value must be either True or False')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='value', ctx=Store())], value=BoolOp(op=Or(), values=[Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='instance', ctx=Load()), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_field', ctx=Load()), attr='name', ctx=Load())], keywords=[]), Constant(value=0)])), If(test=Name(id='is_set', ctx=Load()), body=[AugAssign(target=Name(id='value', ctx=Store()), op=BitOr(), value=Attribute(value=Name(id='self', ctx=Load()), attr='_value', ctx=Load()))], orelse=[AugAssign(target=Name(id='value', ctx=Store()), op=BitAnd(), value=UnaryOp(op=Invert(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_value', ctx=Load())))]), Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='instance', ctx=Load()), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_field', ctx=Load()), attr='name', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Compare(left=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_field', ctx=Load()), attr='bin_and', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_value', ctx=Load())], keywords=[]), ops=[NotEq()], comparators=[Constant(value=0)])], keywords=[]))], decorator_list=[])], decorator_list=[]), Return(value=Call(func=Name(id='FlagDescriptor', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='BigBitFieldData', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='instance', ctx=Store())], value=Name(id='instance', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store())], value=Name(id='name', ctx=Load())), Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='instance', ctx=Load()), attr='__data__', ctx=Load()), attr='get', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='value', ctx=Load())), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='bytearray', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='bytearray', ctx=Load())], keywords=[])), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='bytearray', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], orelse=[])]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Store()), Subscript(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='instance', ctx=Load()), attr='__data__', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), ctx=Store())], value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='_ensure_length', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='idx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='byte_num', ctx=Store()), Name(id='byte_offset', ctx=Store())], ctx=Store())], value=Call(func=Name(id='divmod', ctx=Load()), args=[Name(id='idx', ctx=Load()), Constant(value=8)], keywords=[])), Assign(targets=[Name(id='cur_size', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='cur_size', ctx=Load()), ops=[LtE()], comparators=[Name(id='byte_num', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Load()), attr='extend', ctx=Load()), args=[BinOp(left=Constant(value=b'\x00'), op=Mult(), right=BinOp(left=BinOp(left=Name(id='byte_num', ctx=Load()), op=Add(), right=Constant(value=1)), op=Sub(), right=Name(id='cur_size', ctx=Load())))], keywords=[]))], orelse=[]), Return(value=Tuple(elts=[Name(id='byte_num', ctx=Load()), Name(id='byte_offset', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='set_bit', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='idx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='byte_num', ctx=Store()), Name(id='byte_offset', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_ensure_length', ctx=Load()), args=[Name(id='idx', ctx=Load())], keywords=[])), AugAssign(target=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Load()), slice=Name(id='byte_num', ctx=Load()), ctx=Store()), op=BitOr(), value=BinOp(left=Constant(value=1), op=LShift(), right=Name(id='byte_offset', ctx=Load())))], decorator_list=[]), FunctionDef(name='clear_bit', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='idx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='byte_num', ctx=Store()), Name(id='byte_offset', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_ensure_length', ctx=Load()), args=[Name(id='idx', ctx=Load())], keywords=[])), AugAssign(target=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Load()), slice=Name(id='byte_num', ctx=Load()), ctx=Store()), op=BitAnd(), value=UnaryOp(op=Invert(), operand=BinOp(left=Constant(value=1), op=LShift(), right=Name(id='byte_offset', ctx=Load()))))], decorator_list=[]), FunctionDef(name='toggle_bit', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='idx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='byte_num', ctx=Store()), Name(id='byte_offset', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_ensure_length', ctx=Load()), args=[Name(id='idx', ctx=Load())], keywords=[])), AugAssign(target=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Load()), slice=Name(id='byte_num', ctx=Load()), ctx=Store()), op=BitXor(), value=BinOp(left=Constant(value=1), op=LShift(), right=Name(id='byte_offset', ctx=Load()))), Return(value=Call(func=Name(id='bool', ctx=Load()), args=[BinOp(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Load()), slice=Name(id='byte_num', ctx=Load()), ctx=Load()), op=BitAnd(), right=BinOp(left=Constant(value=1), op=LShift(), right=Name(id='byte_offset', ctx=Load())))], keywords=[]))], decorator_list=[]), FunctionDef(name='is_set', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='idx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='byte_num', ctx=Store()), Name(id='byte_offset', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_ensure_length', ctx=Load()), args=[Name(id='idx', ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='bool', ctx=Load()), args=[BinOp(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Load()), slice=Name(id='byte_num', ctx=Load()), ctx=Load()), op=BitAnd(), right=BinOp(left=Constant(value=1), op=LShift(), right=Name(id='byte_offset', ctx=Load())))], keywords=[]))], decorator_list=[]), FunctionDef(name='__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='repr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Load())], keywords=[]))], decorator_list=[]), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[Lt()], comparators=[Constant(value=3)]), body=[FunctionDef(name='__str__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='bytes_type', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Load())], keywords=[]))], decorator_list=[])], orelse=[FunctionDef(name='__bytes__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='bytes_type', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_buffer', ctx=Load())], keywords=[]))], decorator_list=[])])], decorator_list=[]), ClassDef(name='BigBitFieldAccessor', bases=[Name(id='FieldAccessor', ctx=Load())], keywords=[], body=[FunctionDef(name='__get__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='instance_type')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='instance', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()))], orelse=[]), Return(value=Call(func=Name(id='BigBitFieldData', ctx=Load()), args=[Name(id='instance', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__set__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='memoryview', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='tobytes', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='buffer_type', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='bytes', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='bytearray', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='bytes_type', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='BigBitFieldData', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='bytes_type', ctx=Load()), args=[Attribute(value=Name(id='value', ctx=Load()), attr='_buffer', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='text_type', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='encode', ctx=Load()), args=[Constant(value='utf-8')], keywords=[]))], orelse=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='bytes_type', ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Value must be either a bytes, memoryview or BigBitFieldData instance.')], keywords=[]))], orelse=[])])])])])]), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='BigBitFieldAccessor', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__set__', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='BigBitField', bases=[Name(id='BlobField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='accessor_class', ctx=Store())], value=Name(id='BigBitFieldAccessor', ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='setdefault', ctx=Load()), args=[Constant(value='default'), Name(id='bytes_type', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='BigBitField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='db_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=IfExp(test=Compare(left=Name(id='value', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Call(func=Name(id='bytes_type', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), orelse=Name(id='value', ctx=Load())))], decorator_list=[])], decorator_list=[]), ClassDef(name='UUIDField', bases=[Name(id='Field', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='UUID')), FunctionDef(name='db_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=32)])]), body=[Return(value=Name(id='value', ctx=Load()))], orelse=[If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='bytes', ctx=Load())], keywords=[]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=16)])]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='uuid', ctx=Load()), attr='UUID', ctx=Load()), args=[], keywords=[keyword(arg='bytes', value=Name(id='value', ctx=Load()))]))], orelse=[])]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Attribute(value=Name(id='uuid', ctx=Load()), attr='UUID', ctx=Load())], keywords=[]), body=[Return(value=Attribute(value=Name(id='value', ctx=Load()), attr='hex', ctx=Load()))], orelse=[]), Try(body=[Return(value=Attribute(value=Call(func=Attribute(value=Name(id='uuid', ctx=Load()), attr='UUID', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), attr='hex', ctx=Load()))], handlers=[ExceptHandler(body=[Return(value=Name(id='value', ctx=Load()))])], orelse=[], finalbody=[])], decorator_list=[]), FunctionDef(name='python_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Attribute(value=Name(id='uuid', ctx=Load()), attr='UUID', ctx=Load())], keywords=[]), body=[Return(value=Name(id='value', ctx=Load()))], orelse=[]), Return(value=IfExp(test=Compare(left=Name(id='value', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Call(func=Attribute(value=Name(id='uuid', ctx=Load()), attr='UUID', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), orelse=Constant(value=None)))], decorator_list=[])], decorator_list=[]), ClassDef(name='BinaryUUIDField', bases=[Name(id='BlobField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='UUIDB')), FunctionDef(name='db_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='bytes', ctx=Load())], keywords=[]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=16)])]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_constructor', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=32)])]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='uuid', ctx=Load()), attr='UUID', ctx=Load()), args=[], keywords=[keyword(arg='hex', value=Name(id='value', ctx=Load()))]))], orelse=[])]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Attribute(value=Name(id='uuid', ctx=Load()), attr='UUID', ctx=Load())], keywords=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_constructor', ctx=Load()), args=[Attribute(value=Name(id='value', ctx=Load()), attr='bytes', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='value', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='value for binary UUID field must be UUID(), a hexadecimal string, or a bytes object.')], keywords=[]))], orelse=[])])], decorator_list=[]), FunctionDef(name='python_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Attribute(value=Name(id='uuid', ctx=Load()), attr='UUID', ctx=Load())], keywords=[]), body=[Return(value=Name(id='value', ctx=Load()))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='memoryview', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='tobytes', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[Name(id='value', ctx=Load()), UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='bytes', ctx=Load())], keywords=[]))]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='bytes', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], orelse=[])])]), Return(value=IfExp(test=Compare(left=Name(id='value', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Call(func=Attribute(value=Name(id='uuid', ctx=Load()), attr='UUID', ctx=Load()), args=[], keywords=[keyword(arg='bytes', value=Name(id='value', ctx=Load()))]), orelse=Constant(value=None)))], decorator_list=[])], decorator_list=[]), FunctionDef(name='_date_part', args=arguments(posonlyargs=[], args=[arg(arg='date_part')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='dec', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load()), attr='extract_date', ctx=Load()), args=[Name(id='date_part', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), Return(value=Name(id='dec', ctx=Load()))], decorator_list=[]), FunctionDef(name='format_date_time', args=arguments(posonlyargs=[], args=[arg(arg='value'), arg(arg='formats'), arg(arg='post_process')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='post_process', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='post_process', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Name(id='x', ctx=Load()))])), For(target=Name(id='fmt', ctx=Store()), iter=Name(id='formats', ctx=Load()), body=[Try(body=[Return(value=Call(func=Name(id='post_process', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), attr='strptime', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='fmt', ctx=Load())], keywords=[])], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ValueError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], orelse=[]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='simple_date_time', args=arguments(posonlyargs=[], args=[arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), attr='strptime', ctx=Load()), args=[Name(id='value', ctx=Load()), Constant(value='%Y-%m-%d %H:%M:%S')], keywords=[]))], handlers=[ExceptHandler(type=Tuple(elts=[Name(id='TypeError', ctx=Load()), Name(id='ValueError', ctx=Load())], ctx=Load()), body=[Return(value=Name(id='value', ctx=Load()))])], orelse=[], finalbody=[])], decorator_list=[]), ClassDef(name='_BaseFormattedField', bases=[Name(id='Field', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='formats', ctx=Store())], value=Constant(value=None)), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='formats')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='formats', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='formats', ctx=Store())], value=Name(id='formats', ctx=Load()))], orelse=[]), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='_BaseFormattedField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[])], decorator_list=[]), ClassDef(name='DateTimeField', bases=[Name(id='_BaseFormattedField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='DATETIME')), Assign(targets=[Name(id='formats', ctx=Store())], value=List(elts=[Constant(value='%Y-%m-%d %H:%M:%S.%f'), Constant(value='%Y-%m-%d %H:%M:%S'), Constant(value='%Y-%m-%d')], ctx=Load())), FunctionDef(name='adapt', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Name(id='value', ctx=Load()), Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[])]), body=[Return(value=Call(func=Name(id='format_date_time', ctx=Load()), args=[Name(id='value', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='formats', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='to_timestamp', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load()), attr='to_timestamp', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='truncate', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='part')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load()), attr='truncate_date', ctx=Load()), args=[Name(id='part', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='year', ctx=Store())], value=Call(func=Name(id='property', ctx=Load()), args=[Call(func=Name(id='_date_part', ctx=Load()), args=[Constant(value='year')], keywords=[])], keywords=[])), Assign(targets=[Name(id='month', ctx=Store())], value=Call(func=Name(id='property', ctx=Load()), args=[Call(func=Name(id='_date_part', ctx=Load()), args=[Constant(value='month')], keywords=[])], keywords=[])), Assign(targets=[Name(id='day', ctx=Store())], value=Call(func=Name(id='property', ctx=Load()), args=[Call(func=Name(id='_date_part', ctx=Load()), args=[Constant(value='day')], keywords=[])], keywords=[])), Assign(targets=[Name(id='hour', ctx=Store())], value=Call(func=Name(id='property', ctx=Load()), args=[Call(func=Name(id='_date_part', ctx=Load()), args=[Constant(value='hour')], keywords=[])], keywords=[])), Assign(targets=[Name(id='minute', ctx=Store())], value=Call(func=Name(id='property', ctx=Load()), args=[Call(func=Name(id='_date_part', ctx=Load()), args=[Constant(value='minute')], keywords=[])], keywords=[])), Assign(targets=[Name(id='second', ctx=Store())], value=Call(func=Name(id='property', ctx=Load()), args=[Call(func=Name(id='_date_part', ctx=Load()), args=[Constant(value='second')], keywords=[])], keywords=[]))], decorator_list=[]), ClassDef(name='DateField', bases=[Name(id='_BaseFormattedField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='DATE')), Assign(targets=[Name(id='formats', ctx=Store())], value=List(elts=[Constant(value='%Y-%m-%d'), Constant(value='%Y-%m-%d %H:%M:%S'), Constant(value='%Y-%m-%d %H:%M:%S.%f')], ctx=Load())), FunctionDef(name='adapt', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Name(id='value', ctx=Load()), Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[])]), body=[Assign(targets=[Name(id='pp', ctx=Store())], value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='x', ctx=Load()), attr='date', ctx=Load()), args=[], keywords=[]))), Return(value=Call(func=Name(id='format_date_time', ctx=Load()), args=[Name(id='value', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='formats', ctx=Load()), Name(id='pp', ctx=Load())], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[Name(id='value', ctx=Load()), Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load())], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='date', ctx=Load()), args=[], keywords=[]))], orelse=[])]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='to_timestamp', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load()), attr='to_timestamp', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='truncate', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='part')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load()), attr='truncate_date', ctx=Load()), args=[Name(id='part', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='year', ctx=Store())], value=Call(func=Name(id='property', ctx=Load()), args=[Call(func=Name(id='_date_part', ctx=Load()), args=[Constant(value='year')], keywords=[])], keywords=[])), Assign(targets=[Name(id='month', ctx=Store())], value=Call(func=Name(id='property', ctx=Load()), args=[Call(func=Name(id='_date_part', ctx=Load()), args=[Constant(value='month')], keywords=[])], keywords=[])), Assign(targets=[Name(id='day', ctx=Store())], value=Call(func=Name(id='property', ctx=Load()), args=[Call(func=Name(id='_date_part', ctx=Load()), args=[Constant(value='day')], keywords=[])], keywords=[]))], decorator_list=[]), ClassDef(name='TimeField', bases=[Name(id='_BaseFormattedField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='TIME')), Assign(targets=[Name(id='formats', ctx=Store())], value=List(elts=[Constant(value='%H:%M:%S.%f'), Constant(value='%H:%M:%S'), Constant(value='%H:%M'), Constant(value='%Y-%m-%d %H:%M:%S.%f'), Constant(value='%Y-%m-%d %H:%M:%S')], ctx=Load())), FunctionDef(name='adapt', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Name(id='value', ctx=Load()), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='pp', ctx=Store())], value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='x', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]))), Return(value=Call(func=Name(id='format_date_time', ctx=Load()), args=[Name(id='value', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='formats', ctx=Load()), Name(id='pp', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load())], keywords=[]), body=[Return(value=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]))], orelse=[])])], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='value', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Attribute(value=Name(id='datetime', ctx=Load()), attr='timedelta', ctx=Load())], keywords=[])]), body=[Return(value=Call(func=Attribute(value=BinOp(left=Attribute(value=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), attr='min', ctx=Load()), op=Add(), right=Name(id='value', ctx=Load())), attr='time', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='hour', ctx=Store())], value=Call(func=Name(id='property', ctx=Load()), args=[Call(func=Name(id='_date_part', ctx=Load()), args=[Constant(value='hour')], keywords=[])], keywords=[])), Assign(targets=[Name(id='minute', ctx=Store())], value=Call(func=Name(id='property', ctx=Load()), args=[Call(func=Name(id='_date_part', ctx=Load()), args=[Constant(value='minute')], keywords=[])], keywords=[])), Assign(targets=[Name(id='second', ctx=Store())], value=Call(func=Name(id='property', ctx=Load()), args=[Call(func=Name(id='_date_part', ctx=Load()), args=[Constant(value='second')], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='_timestamp_date_part', args=arguments(posonlyargs=[], args=[arg(arg='date_part')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='dec', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='db', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load())), Assign(targets=[Name(id='expr', ctx=Store())], value=IfExp(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='resolution', ctx=Load()), ops=[Gt()], comparators=[Constant(value=1)]), body=BinOp(left=Name(id='self', ctx=Load()), op=Div(), right=Call(func=Name(id='Value', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='resolution', ctx=Load())], keywords=[keyword(arg='converter', value=Constant(value=False))])), orelse=Name(id='self', ctx=Load()))), Return(value=Call(func=Attribute(value=Name(id='db', ctx=Load()), attr='extract_date', ctx=Load()), args=[Name(id='date_part', ctx=Load()), Call(func=Attribute(value=Name(id='db', ctx=Load()), attr='from_timestamp', ctx=Load()), args=[Name(id='expr', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), Return(value=Name(id='dec', ctx=Load()))], decorator_list=[]), ClassDef(name='TimestampField', bases=[Name(id='BigIntegerField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='valid_resolutions', ctx=Store())], value=ListComp(elt=BinOp(left=Constant(value=10), op=Pow(), right=Name(id='i', ctx=Load())), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=7)], keywords=[]), ifs=[], is_async=0)])), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='resolution', ctx=Store())], value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='resolution'), Constant(value=None)], keywords=[])), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='resolution', ctx=Load())), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='resolution', ctx=Store())], value=Constant(value=1))], orelse=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='resolution', ctx=Load()), ops=[In()], comparators=[Call(func=Name(id='range', ctx=Load()), args=[Constant(value=2), Constant(value=7)], keywords=[])]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='resolution', ctx=Store())], value=BinOp(left=Constant(value=10), op=Pow(), right=Attribute(value=Name(id='self', ctx=Load()), attr='resolution', ctx=Load())))], orelse=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='resolution', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='valid_resolutions', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='TimestampField resolution must be one of: %s'), op=Mod(), right=Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='str', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='valid_resolutions', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], keywords=[]))], orelse=[])])]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='ticks_to_microsecond', ctx=Store())], value=BinOp(left=Constant(value=1000000), op=FloorDiv(), right=Attribute(value=Name(id='self', ctx=Load()), attr='resolution', ctx=Load()))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='utc', ctx=Store())], value=BoolOp(op=Or(), values=[Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='utc'), Constant(value=False)], keywords=[]), Constant(value=False)])), Assign(targets=[Name(id='dflt', ctx=Store())], value=IfExp(test=Attribute(value=Name(id='self', ctx=Load()), attr='utc', ctx=Load()), body=Attribute(value=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), attr='utcnow', ctx=Load()), orelse=Attribute(value=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), attr='now', ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='setdefault', ctx=Load()), args=[Constant(value='default'), Name(id='dflt', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='TimestampField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='local_to_utc', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dt')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), args=[Starred(value=Subscript(value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='gmtime', ctx=Load()), args=[Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='mktime', ctx=Load()), args=[Call(func=Attribute(value=Name(id='dt', ctx=Load()), attr='timetuple', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[]), slice=Slice(upper=Constant(value=6)), ctx=Load()), ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='utc_to_local', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dt')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='ts', ctx=Store())], value=Call(func=Attribute(value=Name(id='calendar', ctx=Load()), attr='timegm', ctx=Load()), args=[Call(func=Attribute(value=Name(id='dt', ctx=Load()), attr='utctimetuple', ctx=Load()), args=[], keywords=[])], keywords=[])), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), attr='fromtimestamp', ctx=Load()), args=[Name(id='ts', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_timestamp', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='utc', ctx=Load()), body=[Return(value=Call(func=Attribute(value=Name(id='calendar', ctx=Load()), attr='timegm', ctx=Load()), args=[Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='utctimetuple', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[Return(value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='mktime', ctx=Load()), args=[Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='timetuple', ctx=Load()), args=[], keywords=[])], keywords=[]))])], decorator_list=[]), FunctionDef(name='db_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='value', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return()], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load())], keywords=[]), body=[Pass()], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Attribute(value=Name(id='datetime', ctx=Load()), attr='date', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), args=[Attribute(value=Name(id='value', ctx=Load()), attr='year', ctx=Load()), Attribute(value=Name(id='value', ctx=Load()), attr='month', ctx=Load()), Attribute(value=Name(id='value', ctx=Load()), attr='day', ctx=Load())], keywords=[]))], orelse=[Return(value=Call(func=Name(id='int', ctx=Load()), args=[Call(func=Name(id='round', ctx=Load()), args=[BinOp(left=Name(id='value', ctx=Load()), op=Mult(), right=Attribute(value=Name(id='self', ctx=Load()), attr='resolution', ctx=Load()))], keywords=[])], keywords=[]))])]), Assign(targets=[Name(id='timestamp', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_timestamp', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='resolution', ctx=Load()), ops=[Gt()], comparators=[Constant(value=1)]), body=[AugAssign(target=Name(id='timestamp', ctx=Store()), op=Add(), value=BinOp(left=Attribute(value=Name(id='value', ctx=Load()), attr='microsecond', ctx=Load()), op=Mult(), right=Constant(value=1e-06))), AugAssign(target=Name(id='timestamp', ctx=Store()), op=Mult(), value=Attribute(value=Name(id='self', ctx=Load()), attr='resolution', ctx=Load()))], orelse=[]), Return(value=Call(func=Name(id='int', ctx=Load()), args=[Call(func=Name(id='round', ctx=Load()), args=[Name(id='timestamp', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='python_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='value', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Tuple(elts=[Name(id='int', ctx=Load()), Name(id='float', ctx=Load()), Name(id='long', ctx=Load())], ctx=Load())], keywords=[])]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='resolution', ctx=Load()), ops=[Gt()], comparators=[Constant(value=1)]), body=[Assign(targets=[Tuple(elts=[Name(id='value', ctx=Store()), Name(id='ticks', ctx=Store())], ctx=Store())], value=Call(func=Name(id='divmod', ctx=Load()), args=[Name(id='value', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='resolution', ctx=Load())], keywords=[])), Assign(targets=[Name(id='microseconds', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[BinOp(left=Name(id='ticks', ctx=Load()), op=Mult(), right=Attribute(value=Name(id='self', ctx=Load()), attr='ticks_to_microsecond', ctx=Load()))], keywords=[]))], orelse=[Assign(targets=[Name(id='microseconds', ctx=Store())], value=Constant(value=0))]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='utc', ctx=Load()), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), attr='utcfromtimestamp', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), attr='fromtimestamp', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))]), If(test=Name(id='microseconds', ctx=Load()), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='replace', ctx=Load()), args=[], keywords=[keyword(arg='microsecond', value=Name(id='microseconds', ctx=Load()))]))], orelse=[])], orelse=[]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='from_timestamp', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='expr', ctx=Store())], value=IfExp(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='resolution', ctx=Load()), ops=[Gt()], comparators=[Constant(value=1)]), body=BinOp(left=Name(id='self', ctx=Load()), op=Div(), right=Call(func=Name(id='Value', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='resolution', ctx=Load())], keywords=[keyword(arg='converter', value=Constant(value=False))])), orelse=Name(id='self', ctx=Load()))), Return(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load()), attr='from_timestamp', ctx=Load()), args=[Name(id='expr', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='year', ctx=Store())], value=Call(func=Name(id='property', ctx=Load()), args=[Call(func=Name(id='_timestamp_date_part', ctx=Load()), args=[Constant(value='year')], keywords=[])], keywords=[])), Assign(targets=[Name(id='month', ctx=Store())], value=Call(func=Name(id='property', ctx=Load()), args=[Call(func=Name(id='_timestamp_date_part', ctx=Load()), args=[Constant(value='month')], keywords=[])], keywords=[])), Assign(targets=[Name(id='day', ctx=Store())], value=Call(func=Name(id='property', ctx=Load()), args=[Call(func=Name(id='_timestamp_date_part', ctx=Load()), args=[Constant(value='day')], keywords=[])], keywords=[])), Assign(targets=[Name(id='hour', ctx=Store())], value=Call(func=Name(id='property', ctx=Load()), args=[Call(func=Name(id='_timestamp_date_part', ctx=Load()), args=[Constant(value='hour')], keywords=[])], keywords=[])), Assign(targets=[Name(id='minute', ctx=Store())], value=Call(func=Name(id='property', ctx=Load()), args=[Call(func=Name(id='_timestamp_date_part', ctx=Load()), args=[Constant(value='minute')], keywords=[])], keywords=[])), Assign(targets=[Name(id='second', ctx=Store())], value=Call(func=Name(id='property', ctx=Load()), args=[Call(func=Name(id='_timestamp_date_part', ctx=Load()), args=[Constant(value='second')], keywords=[])], keywords=[]))], decorator_list=[]), ClassDef(name='IPField', bases=[Name(id='BigIntegerField', ctx=Load())], keywords=[], body=[FunctionDef(name='db_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='val')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='val', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Subscript(value=Call(func=Attribute(value=Name(id='struct', ctx=Load()), attr='unpack', ctx=Load()), args=[Constant(value='!I'), Call(func=Attribute(value=Name(id='socket', ctx=Load()), attr='inet_aton', ctx=Load()), args=[Name(id='val', ctx=Load())], keywords=[])], keywords=[]), slice=Constant(value=0), ctx=Load()))], orelse=[])], decorator_list=[]), FunctionDef(name='python_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='val')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='val', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Call(func=Attribute(value=Name(id='socket', ctx=Load()), attr='inet_ntoa', ctx=Load()), args=[Call(func=Attribute(value=Name(id='struct', ctx=Load()), attr='pack', ctx=Load()), args=[Constant(value='!I'), Name(id='val', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[]), ClassDef(name='BooleanField', bases=[Name(id='Field', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='BOOL')), Assign(targets=[Name(id='adapt', ctx=Store())], value=Name(id='bool', ctx=Load()))], decorator_list=[]), ClassDef(name='BareField', bases=[Name(id='Field', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='adapt')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='BareField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), If(test=Compare(left=Name(id='adapt', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='adapt', ctx=Store())], value=Name(id='adapt', ctx=Load()))], orelse=[])], decorator_list=[]), FunctionDef(name='ddl_datatype', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return()], decorator_list=[])], decorator_list=[]), ClassDef(name='ForeignKeyField', bases=[Name(id='Field', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='accessor_class', ctx=Store())], value=Name(id='ForeignKeyAccessor', ctx=Load())), Assign(targets=[Name(id='backref_accessor_class', ctx=Store())], value=Name(id='BackrefAccessor', ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='field'), arg(arg='backref'), arg(arg='on_delete'), arg(arg='on_update'), arg(arg='deferrable'), arg(arg='_deferred'), arg(arg='rel_model'), arg(arg='to_field'), arg(arg='object_id_name'), arg(arg='lazy_load'), arg(arg='constraint_name'), arg(arg='related_name')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=True), Constant(value=None), Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='setdefault', ctx=Load()), args=[Constant(value='index'), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ForeignKeyField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), If(test=Compare(left=Name(id='rel_model', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='__deprecated__', ctx=Load()), args=[Constant(value='"rel_model" has been deprecated in favor of "model" for ForeignKeyField objects.')], keywords=[])), Assign(targets=[Name(id='model', ctx=Store())], value=Name(id='rel_model', ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='to_field', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='__deprecated__', ctx=Load()), args=[Constant(value='"to_field" has been deprecated in favor of "field" for ForeignKeyField objects.')], keywords=[])), Assign(targets=[Name(id='field', ctx=Store())], value=Name(id='to_field', ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='related_name', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='__deprecated__', ctx=Load()), args=[Constant(value='"related_name" has been deprecated in favor of "backref" for Field objects.')], keywords=[])), Assign(targets=[Name(id='backref', ctx=Store())], value=Name(id='related_name', ctx=Load()))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_is_self_reference', ctx=Store())], value=Compare(left=Name(id='model', ctx=Load()), ops=[Eq()], comparators=[Constant(value='self')])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Store())], value=Name(id='model', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_field', ctx=Store())], value=Name(id='field', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='declared_backref', ctx=Store())], value=Name(id='backref', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='backref', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='on_delete', ctx=Store())], value=Name(id='on_delete', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='on_update', ctx=Store())], value=Name(id='on_update', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='deferrable', ctx=Store())], value=Name(id='deferrable', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='deferred', ctx=Store())], value=Name(id='_deferred', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='object_id_name', ctx=Store())], value=Name(id='object_id_name', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='lazy_load', ctx=Store())], value=Name(id='lazy_load', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='constraint_name', ctx=Store())], value=Name(id='constraint_name', ctx=Load()))], decorator_list=[]), FunctionDef(name='field_type', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_field', ctx=Load()), Name(id='AutoField', ctx=Load())], keywords=[])), body=[Return(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='rel_field', ctx=Load()), attr='field_type', ctx=Load()))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_field', ctx=Load()), Name(id='BigAutoField', ctx=Load())], keywords=[]), body=[Return(value=Attribute(value=Name(id='BigIntegerField', ctx=Load()), attr='field_type', ctx=Load()))], orelse=[])]), Return(value=Attribute(value=Name(id='IntegerField', ctx=Load()), attr='field_type', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='get_modifiers', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_field', ctx=Load()), Name(id='AutoField', ctx=Load())], keywords=[])), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='rel_field', ctx=Load()), attr='get_modifiers', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ForeignKeyField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='get_modifiers', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='adapt', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='rel_field', ctx=Load()), attr='adapt', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='db_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='value', ctx=Load()), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='rel_field', ctx=Load()), attr='name', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='rel_field', ctx=Load()), attr='db_value', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='python_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Load())], keywords=[]), body=[Return(value=Name(id='value', ctx=Load()))], orelse=[]), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='rel_field', ctx=Load()), attr='python_value', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='bind', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='name'), arg(arg='set_attribute')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='column_name', ctx=Load())), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='column_name', ctx=Store())], value=IfExp(test=Call(func=Attribute(value=Name(id='name', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='_id')], keywords=[]), body=Name(id='name', ctx=Load()), orelse=BinOp(left=Name(id='name', ctx=Load()), op=Add(), right=Constant(value='_id'))))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='object_id_name', ctx=Load())), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='object_id_name', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='column_name', ctx=Load())), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='object_id_name', ctx=Load()), ops=[Eq()], comparators=[Name(id='name', ctx=Load())]), body=[AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='object_id_name', ctx=Store()), op=Add(), value=Constant(value='_id'))], orelse=[])], orelse=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='object_id_name', ctx=Load()), ops=[Eq()], comparators=[Name(id='name', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='ForeignKeyField "%s"."%s" specifies an object_id_name that conflicts with its field name.'), op=Mod(), right=Tuple(elts=[Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='name', ctx=Load()), Name(id='name', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[])]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_is_self_reference', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Store())], value=Name(id='model', ctx=Load()))], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_field', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_field', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='rel_field', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='rel_field', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_field', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load()))], orelse=[])]), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ForeignKeyField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='bind', ctx=Load()), args=[Name(id='model', ctx=Load()), Name(id='name', ctx=Load()), Name(id='set_attribute', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='safe_name', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='object_id_name', ctx=Load())), If(test=Call(func=Name(id='callable_', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='declared_backref', ctx=Load())], keywords=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='backref', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='declared_backref', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='backref', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='declared_backref', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='declared_backref', ctx=Load()), Constant(value=None)], ctx=Load()))]), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='backref', ctx=Load())), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='backref', ctx=Store())], value=BinOp(left=Constant(value='%s_set'), op=Mod(), right=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='name', ctx=Load())))], orelse=[]), If(test=Name(id='set_attribute', ctx=Load()), body=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='model', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='object_id_name', ctx=Load()), Call(func=Name(id='ObjectIdAccessor', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='backref', ctx=Load()), ops=[NotIn()], comparators=[Constant(value='!+')]), body=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='backref', ctx=Load()), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='backref_accessor_class', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='foreign_key_constraint', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='parts', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='constraint_name', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='extend', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='CONSTRAINT')], keywords=[]), Call(func=Name(id='Entity', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='constraint_name', ctx=Load())], keywords=[])], ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='extend', ctx=Load()), args=[List(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='FOREIGN KEY')], keywords=[]), Call(func=Name(id='EnclosedNodeList', ctx=Load()), args=[Tuple(elts=[Name(id='self', ctx=Load())], ctx=Load())], keywords=[]), Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='REFERENCES')], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Load()), Call(func=Name(id='EnclosedNodeList', ctx=Load()), args=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_field', ctx=Load())], ctx=Load())], keywords=[])], ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='on_delete', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='SQL', ctx=Load()), args=[BinOp(left=Constant(value='ON DELETE %s'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='on_delete', ctx=Load()))], keywords=[])], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='on_update', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='SQL', ctx=Load()), args=[BinOp(left=Constant(value='ON UPDATE %s'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='on_update', ctx=Load()))], keywords=[])], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='deferrable', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='SQL', ctx=Load()), args=[BinOp(left=Constant(value='DEFERRABLE %s'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='deferrable', ctx=Load()))], keywords=[])], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='NodeList', ctx=Load()), args=[Name(id='parts', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__getattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='attr')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Name(id='attr', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='__')], keywords=[]), body=[Raise(exc=Call(func=Name(id='AttributeError', ctx=Load()), args=[Constant(value='Cannot look-up non-existant "__" methods.')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[In()], comparators=[Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Load()), attr='_meta', ctx=Load()), attr='fields', ctx=Load())]), body=[Return(value=Subscript(value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Load()), attr='_meta', ctx=Load()), attr='fields', ctx=Load()), slice=Name(id='attr', ctx=Load()), ctx=Load()))], orelse=[]), Raise(exc=Call(func=Name(id='AttributeError', ctx=Load()), args=[BinOp(left=Constant(value='Foreign-key has no attribute %s, nor is it a valid field on the related model.'), op=Mod(), right=Name(id='attr', ctx=Load()))], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='DeferredForeignKey', bases=[Name(id='Field', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='_unresolved', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rel_model_name')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='field_kwargs', ctx=Store())], value=Name(id='kwargs', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_model_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='rel_model_name', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='DeferredForeignKey', ctx=Load()), attr='_unresolved', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='DeferredForeignKey', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(arg='column_name', value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='column_name')], keywords=[])), keyword(arg='null', value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='null')], keywords=[])), keyword(arg='primary_key', value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='primary_key')], keywords=[]))]))], decorator_list=[]), Assign(targets=[Name(id='__hash__', ctx=Store())], value=Attribute(value=Name(id='object', ctx=Load()), attr='__hash__', ctx=Load())), FunctionDef(name='__deepcopy__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='memo')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='DeferredForeignKey', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_model_name', ctx=Load())], keywords=[keyword(value=Attribute(value=Name(id='self', ctx=Load()), attr='field_kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='set_model', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rel_model')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='field', ctx=Store())], value=Call(func=Name(id='ForeignKeyField', ctx=Load()), args=[Name(id='rel_model', ctx=Load())], keywords=[keyword(arg='_deferred', value=Constant(value=True)), keyword(value=Attribute(value=Name(id='self', ctx=Load()), attr='field_kwargs', ctx=Load()))])), If(test=Attribute(value=Name(id='field', ctx=Load()), attr='primary_key', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='set_primary_key', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), Name(id='field', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='add_field', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), Name(id='field', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='resolve', args=arguments(posonlyargs=[], args=[arg(arg='model_cls')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='unresolved', ctx=Store())], value=Call(func=Name(id='sorted', ctx=Load()), args=[Attribute(value=Name(id='DeferredForeignKey', ctx=Load()), attr='_unresolved', ctx=Load())], keywords=[keyword(arg='key', value=Call(func=Attribute(value=Name(id='operator', ctx=Load()), attr='attrgetter', ctx=Load()), args=[Constant(value='_order')], keywords=[]))])), For(target=Name(id='dr', ctx=Store()), iter=Name(id='unresolved', ctx=Load()), body=[If(test=Compare(left=Attribute(value=Name(id='dr', ctx=Load()), attr='rel_model_name', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Attribute(value=Name(id='model_cls', ctx=Load()), attr='__name__', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])]), body=[Expr(value=Call(func=Attribute(value=Name(id='dr', ctx=Load()), attr='set_model', ctx=Load()), args=[Name(id='model_cls', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='DeferredForeignKey', ctx=Load()), attr='_unresolved', ctx=Load()), attr='discard', ctx=Load()), args=[Name(id='dr', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], decorator_list=[Name(id='staticmethod', ctx=Load())])], decorator_list=[]), ClassDef(name='DeferredThroughModel', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_refs', ctx=Store())], value=List(elts=[], ctx=Load()))], decorator_list=[]), FunctionDef(name='set_field', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='field'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_refs', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='model', ctx=Load()), Name(id='field', ctx=Load()), Name(id='name', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='set_model', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='through_model')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Tuple(elts=[Name(id='src_model', ctx=Store()), Name(id='m2mfield', ctx=Store()), Name(id='name', ctx=Store())], ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_refs', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='m2mfield', ctx=Load()), attr='through_model', ctx=Store())], value=Name(id='through_model', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='src_model', ctx=Load()), attr='_meta', ctx=Load()), attr='add_field', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='m2mfield', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[]), ClassDef(name='MetaField', bases=[Name(id='Field', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='column_name', ctx=Store()), Name(id='default', ctx=Store()), Name(id='model', ctx=Store()), Name(id='name', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='primary_key', ctx=Store())], value=Constant(value=False))], decorator_list=[]), ClassDef(name='ManyToManyFieldAccessor', bases=[Name(id='FieldAccessor', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='field'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ManyToManyFieldAccessor', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='model', ctx=Load()), Name(id='field', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Store())], value=Attribute(value=Name(id='field', ctx=Load()), attr='model', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Store())], value=Attribute(value=Name(id='field', ctx=Load()), attr='rel_model', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='through_model', ctx=Store())], value=Attribute(value=Name(id='field', ctx=Load()), attr='through_model', ctx=Load())), Assign(targets=[Name(id='src_fks', ctx=Store())], value=Subscript(value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='through_model', ctx=Load()), attr='_meta', ctx=Load()), attr='model_refs', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='dest_fks', ctx=Store())], value=Subscript(value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='through_model', ctx=Load()), attr='_meta', ctx=Load()), attr='model_refs', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Load()), ctx=Load())), If(test=UnaryOp(op=Not(), operand=Name(id='src_fks', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='Cannot find foreign-key to "%s" on "%s" model.'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='through_model', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[If(test=UnaryOp(op=Not(), operand=Name(id='dest_fks', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='Cannot find foreign-key to "%s" on "%s" model.'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='through_model', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[])]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='src_fk', ctx=Store())], value=Subscript(value=Name(id='src_fks', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='dest_fk', ctx=Store())], value=Subscript(value=Name(id='dest_fks', ctx=Load()), slice=Constant(value=0), ctx=Load()))], decorator_list=[]), FunctionDef(name='__get__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='instance_type'), arg(arg='force_query')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=False)]), body=[If(test=Compare(left=Name(id='instance', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='force_query', ctx=Load())), Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='src_fk', ctx=Load()), attr='backref', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='+')])]), body=[Assign(targets=[Name(id='backref', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='instance', ctx=Load()), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='src_fk', ctx=Load()), attr='backref', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='backref', ctx=Load()), Name(id='list', ctx=Load())], keywords=[]), body=[Return(value=ListComp(elt=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='obj', ctx=Load()), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='dest_fk', ctx=Load()), attr='name', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='obj', ctx=Store()), iter=Name(id='backref', ctx=Load()), ifs=[], is_async=0)]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='src_id', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='instance', ctx=Load()), Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='src_fk', ctx=Load()), attr='rel_field', ctx=Load()), attr='name', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='src_id', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), attr='_prevent_unsaved', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='Cannot get many-to-many "%s" for unsaved instance "%s".'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), Name(id='instance', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='ManyToManyQuery', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='self', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Load())], keywords=[]), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='through_model', ctx=Load())], keywords=[]), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load())], keywords=[]), attr='where', ctx=Load()), args=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='src_fk', ctx=Load()), ops=[Eq()], comparators=[Name(id='src_id', ctx=Load())])], keywords=[]))], orelse=[]), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()))], decorator_list=[]), FunctionDef(name='__set__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='src_id', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='instance', ctx=Load()), Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='src_fk', ctx=Load()), attr='rel_field', ctx=Load()), attr='name', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='src_id', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), attr='_prevent_unsaved', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='Cannot set many-to-many "%s" for unsaved instance "%s".'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), Name(id='instance', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='query', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='__get__', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[keyword(arg='force_query', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Name(id='query', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[keyword(arg='clear_existing', value=Constant(value=True))]))], decorator_list=[])], decorator_list=[]), ClassDef(name='ManyToManyField', bases=[Name(id='MetaField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='accessor_class', ctx=Store())], value=Name(id='ManyToManyFieldAccessor', ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='backref'), arg(arg='through_model'), arg(arg='on_delete'), arg(arg='on_update'), arg(arg='prevent_unsaved'), arg(arg='_is_backref')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=True), Constant(value=False)]), body=[If(test=Compare(left=Name(id='through_model', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[If(test=UnaryOp(op=Not(), operand=BoolOp(op=Or(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='through_model', ctx=Load()), Name(id='DeferredThroughModel', ctx=Load())], keywords=[]), Call(func=Name(id='is_model', ctx=Load()), args=[Name(id='through_model', ctx=Load())], keywords=[])])), body=[Raise(exc=Call(func=Name(id='TypeError', ctx=Load()), args=[Constant(value='Unexpected value for through_model. Expected Model or DeferredThroughModel.')], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='_is_backref', ctx=Load())), BoolOp(op=Or(), values=[Compare(left=Name(id='on_delete', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Name(id='on_update', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])])]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Cannot specify on_delete or on_update when through_model is specified.')], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Store())], value=Name(id='model', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='backref', ctx=Store())], value=Name(id='backref', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_through_model', ctx=Store())], value=Name(id='through_model', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_on_delete', ctx=Store())], value=Name(id='on_delete', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_on_update', ctx=Store())], value=Name(id='on_update', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_prevent_unsaved', ctx=Store())], value=Name(id='prevent_unsaved', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_is_backref', ctx=Store())], value=Name(id='_is_backref', ctx=Load()))], decorator_list=[]), FunctionDef(name='_get_descriptor', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='ManyToManyFieldAccessor', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='bind', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='name'), arg(arg='set_attribute')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_through_model', ctx=Load()), Name(id='DeferredThroughModel', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_through_model', ctx=Load()), attr='set_field', ctx=Load()), args=[Name(id='model', ctx=Load()), Name(id='self', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), Return()], orelse=[]), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ManyToManyField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='bind', ctx=Load()), args=[Name(id='model', ctx=Load()), Name(id='name', ctx=Load()), Name(id='set_attribute', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_is_backref', ctx=Load())), body=[Assign(targets=[Name(id='many_to_many_field', ctx=Store())], value=Call(func=Name(id='ManyToManyField', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load())], keywords=[keyword(arg='backref', value=Name(id='name', ctx=Load())), keyword(arg='through_model', value=Attribute(value=Name(id='self', ctx=Load()), attr='through_model', ctx=Load())), keyword(arg='on_delete', value=Attribute(value=Name(id='self', ctx=Load()), attr='_on_delete', ctx=Load())), keyword(arg='on_update', value=Attribute(value=Name(id='self', ctx=Load()), attr='_on_update', ctx=Load())), keyword(arg='_is_backref', value=Constant(value=True))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='backref', ctx=Store())], value=BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='backref', ctx=Load()), BinOp(left=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='name', ctx=Load()), op=Add(), right=Constant(value='s'))])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Load()), attr='_meta', ctx=Load()), attr='add_field', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='backref', ctx=Load()), Name(id='many_to_many_field', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='get_models', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=ListComp(elt=Name(id='model', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='_', ctx=Store()), Name(id='model', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='sorted', ctx=Load()), args=[Tuple(elts=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='_is_backref', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load())], ctx=Load()), Tuple(elts=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_is_backref', ctx=Load())), Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='through_model', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_through_model', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_through_model', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_through_model', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_through_model', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='through_model', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_through_model', ctx=Store())], value=Name(id='value', ctx=Load()))], decorator_list=[Attribute(value=Name(id='through_model', ctx=Load()), attr='setter', ctx=Load())]), FunctionDef(name='_create_through_model', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='lhs', ctx=Store()), Name(id='rhs', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_models', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='tables', ctx=Store())], value=ListComp(elt=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='table_name', ctx=Load()), generators=[comprehension(target=Name(id='model', ctx=Store()), iter=Tuple(elts=[Name(id='lhs', ctx=Load()), Name(id='rhs', ctx=Load())], ctx=Load()), ifs=[], is_async=0)])), ClassDef(name='Meta', bases=[], keywords=[], body=[Assign(targets=[Name(id='database', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load())), Assign(targets=[Name(id='schema', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='schema', ctx=Load())), Assign(targets=[Name(id='table_name', ctx=Store())], value=BinOp(left=Constant(value='%s_%s_through'), op=Mod(), right=Call(func=Name(id='tuple', ctx=Load()), args=[Name(id='tables', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='indexes', ctx=Store())], value=Tuple(elts=[Tuple(elts=[Tuple(elts=[Attribute(value=Attribute(value=Name(id='lhs', ctx=Load()), attr='_meta', ctx=Load()), attr='name', ctx=Load()), Attribute(value=Attribute(value=Name(id='rhs', ctx=Load()), attr='_meta', ctx=Load()), attr='name', ctx=Load())], ctx=Load()), Constant(value=True)], ctx=Load())], ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='params', ctx=Store())], value=Dict(keys=[Constant(value='on_delete'), Constant(value='on_update')], values=[Attribute(value=Name(id='self', ctx=Load()), attr='_on_delete', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_on_update', ctx=Load())])), Assign(targets=[Name(id='attrs', ctx=Store())], value=Dict(keys=[Attribute(value=Attribute(value=Name(id='lhs', ctx=Load()), attr='_meta', ctx=Load()), attr='name', ctx=Load()), Attribute(value=Attribute(value=Name(id='rhs', ctx=Load()), attr='_meta', ctx=Load()), attr='name', ctx=Load()), Constant(value='Meta')], values=[Call(func=Name(id='ForeignKeyField', ctx=Load()), args=[Name(id='lhs', ctx=Load())], keywords=[keyword(value=Name(id='params', ctx=Load()))]), Call(func=Name(id='ForeignKeyField', ctx=Load()), args=[Name(id='rhs', ctx=Load())], keywords=[keyword(value=Name(id='params', ctx=Load()))]), Name(id='Meta', ctx=Load())])), Assign(targets=[Name(id='klass_name', ctx=Store())], value=BinOp(left=Constant(value='%s%sThrough'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='lhs', ctx=Load()), attr='__name__', ctx=Load()), Attribute(value=Name(id='rhs', ctx=Load()), attr='__name__', ctx=Load())], ctx=Load()))), Return(value=Call(func=Name(id='type', ctx=Load()), args=[Name(id='klass_name', ctx=Load()), Tuple(elts=[Name(id='Model', ctx=Load())], ctx=Load()), Name(id='attrs', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_through_model', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='through_model', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='VirtualField', bases=[Name(id='MetaField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_class', ctx=Store())], value=Constant(value=None)), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field_class')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='Field', ctx=Store())], value=IfExp(test=Compare(left=Name(id='field_class', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Name(id='field_class', ctx=Load()), orelse=Attribute(value=Name(id='self', ctx=Load()), attr='field_class', ctx=Load()))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='field_instance', ctx=Store())], value=IfExp(test=Compare(left=Name(id='Field', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Call(func=Name(id='Field', ctx=Load()), args=[], keywords=[]), orelse=Constant(value=None))), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='VirtualField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='db_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='field_instance', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field_instance', ctx=Load()), attr='db_value', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='python_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='field_instance', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field_instance', ctx=Load()), attr='python_value', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='bind', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='name'), arg(arg='set_attribute')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Store())], value=Name(id='model', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='column_name', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='safe_name', ctx=Store())], value=Name(id='name', ctx=Load())), Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='model', ctx=Load()), Name(id='name', ctx=Load()), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='accessor_class', ctx=Load()), args=[Name(id='model', ctx=Load()), Name(id='self', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='CompositeKey', bases=[Name(id='MetaField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='sequence', ctx=Store())], value=Constant(value=None)), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='field_names'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='field_names', ctx=Store())], value=Name(id='field_names', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_safe_field_names', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='safe_field_names', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_safe_field_names', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='field_names', ctx=Load()))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_safe_field_names', ctx=Store())], value=ListComp(elt=Attribute(value=Subscript(value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='fields', ctx=Load()), slice=Name(id='f', ctx=Load()), ctx=Load()), attr='safe_name', ctx=Load()), generators=[comprehension(target=Name(id='f', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='field_names', ctx=Load()), ifs=[], is_async=0)]))], orelse=[]), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_safe_field_names', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='__get__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='instance_type')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='instance', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='tuple', ctx=Load()), args=[ListComp(elt=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='f', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='f', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='safe_field_names', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], orelse=[]), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='__set__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Tuple(elts=[Name(id='list', ctx=Load()), Name(id='tuple', ctx=Load())], ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='TypeError', ctx=Load()), args=[Constant(value='A list or tuple must be used to set the value of a composite primary key.')], keywords=[]))], orelse=[]), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), ops=[NotEq()], comparators=[Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='field_names', ctx=Load())], keywords=[])]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='The length of the value must equal the number of columns of the composite primary key.')], keywords=[]))], orelse=[]), For(target=Tuple(elts=[Name(id='idx', ctx=Store()), Name(id='field_value', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='instance', ctx=Load()), Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='field_names', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Load()), Name(id='field_value', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='__eq__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='expressions', ctx=Store())], value=ListComp(elt=Compare(left=Subscript(value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='fields', ctx=Load()), slice=Name(id='field', ctx=Load()), ctx=Load()), ops=[Eq()], comparators=[Name(id='value', ctx=Load())]), generators=[comprehension(target=Tuple(elts=[Name(id='field', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='zip', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='field_names', ctx=Load()), Name(id='other', ctx=Load())], keywords=[]), ifs=[], is_async=0)])), Return(value=Call(func=Name(id='reduce', ctx=Load()), args=[Attribute(value=Name(id='operator', ctx=Load()), attr='and_', ctx=Load()), Name(id='expressions', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__ne__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=UnaryOp(op=Invert(), operand=Compare(left=Name(id='self', ctx=Load()), ops=[Eq()], comparators=[Name(id='other', ctx=Load())])))], decorator_list=[]), FunctionDef(name='__hash__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='hash', ctx=Load()), args=[Tuple(elts=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='__name__', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='field_names', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='parens', ctx=Store())], value=Compare(left=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope', ctx=Load()), ops=[NotEq()], comparators=[Name(id='SCOPE_SOURCE', ctx=Load())])), Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='NodeList', ctx=Load()), args=[ListComp(elt=Subscript(value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='fields', ctx=Load()), slice=Name(id='field', ctx=Load()), ctx=Load()), generators=[comprehension(target=Name(id='field', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='field_names', ctx=Load()), ifs=[], is_async=0)]), Constant(value=', '), Name(id='parens', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='bind', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='name'), arg(arg='set_attribute')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Store())], value=Name(id='model', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='column_name', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='safe_name', ctx=Store())], value=Name(id='name', ctx=Load())), Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='model', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='_SortedFieldList', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[Constant(value='_keys'), Constant(value='_items')], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_keys', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Store())], value=List(elts=[], ctx=Load()))], decorator_list=[]), FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='i')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()))], decorator_list=[]), FunctionDef(name='__iter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='iter', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__contains__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='item')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='k', ctx=Store())], value=Attribute(value=Name(id='item', ctx=Load()), attr='_sort_key', ctx=Load())), Assign(targets=[Name(id='i', ctx=Store())], value=Call(func=Name(id='bisect_left', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_keys', ctx=Load()), Name(id='k', ctx=Load())], keywords=[])), Assign(targets=[Name(id='j', ctx=Store())], value=Call(func=Name(id='bisect_right', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_keys', ctx=Load()), Name(id='k', ctx=Load())], keywords=[])), Return(value=Compare(left=Name(id='item', ctx=Load()), ops=[In()], comparators=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load()), slice=Slice(lower=Name(id='i', ctx=Load()), upper=Name(id='j', ctx=Load())), ctx=Load())]))], decorator_list=[]), FunctionDef(name='index', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_keys', ctx=Load()), attr='index', ctx=Load()), args=[Attribute(value=Name(id='field', ctx=Load()), attr='_sort_key', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='insert', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='item')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='k', ctx=Store())], value=Attribute(value=Name(id='item', ctx=Load()), attr='_sort_key', ctx=Load())), Assign(targets=[Name(id='i', ctx=Store())], value=Call(func=Name(id='bisect_left', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_keys', ctx=Load()), Name(id='k', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_keys', ctx=Load()), attr='insert', ctx=Load()), args=[Name(id='i', ctx=Load()), Name(id='k', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load()), attr='insert', ctx=Load()), args=[Name(id='i', ctx=Load()), Name(id='item', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='remove', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='item')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='idx', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Load()), args=[Name(id='item', ctx=Load())], keywords=[])), Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Del())]), Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_keys', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Del())])], decorator_list=[])], decorator_list=[]), ClassDef(name='SchemaManager', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='context_options'), defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Store())], value=Name(id='model', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Store())], value=Name(id='database', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='context_options', ctx=Load()), attr='setdefault', ctx=Load()), args=[Constant(value='scope'), Name(id='SCOPE_VALUES', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='context_options', ctx=Store())], value=Name(id='context_options', ctx=Load()))], decorator_list=[]), FunctionDef(name='database', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='db', ctx=Store())], value=BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load())])), If(test=Compare(left=Name(id='db', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ImproperlyConfigured', ctx=Load()), args=[BinOp(left=Constant(value='database attribute does not appear to be set on the model: %s'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()))], keywords=[]))], orelse=[]), Return(value=Name(id='db', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='database', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Store())], value=Name(id='value', ctx=Load()))], decorator_list=[Attribute(value=Name(id='database', ctx=Load()), attr='setter', ctx=Load())]), FunctionDef(name='_create_context', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='get_sql_context', ctx=Load()), args=[], keywords=[keyword(value=Attribute(value=Name(id='self', ctx=Load()), attr='context_options', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='_create_table', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='safe')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='options'), defaults=[Constant(value=True)]), body=[Assign(targets=[Name(id='is_temp', ctx=Store())], value=Call(func=Attribute(value=Name(id='options', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='temporary'), Constant(value=False)], keywords=[])), Assign(targets=[Name(id='ctx', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_context', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[IfExp(test=Name(id='is_temp', ctx=Load()), body=Constant(value='CREATE TEMPORARY TABLE '), orelse=Constant(value='CREATE TABLE '))], keywords=[])), If(test=Name(id='safe', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='IF NOT EXISTS ')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load())], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value=' ')], keywords=[])), Assign(targets=[Name(id='columns', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='constraints', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='meta', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load())), If(test=Attribute(value=Name(id='meta', ctx=Load()), attr='composite_key', ctx=Load()), body=[Assign(targets=[Name(id='pk_columns', ctx=Store())], value=ListComp(elt=Attribute(value=Subscript(value=Attribute(value=Name(id='meta', ctx=Load()), attr='fields', ctx=Load()), slice=Name(id='field_name', ctx=Load()), ctx=Load()), attr='column', ctx=Load()), generators=[comprehension(target=Name(id='field_name', ctx=Store()), iter=Attribute(value=Attribute(value=Name(id='meta', ctx=Load()), attr='primary_key', ctx=Load()), attr='field_names', ctx=Load()), ifs=[], is_async=0)])), Expr(value=Call(func=Attribute(value=Name(id='constraints', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='PRIMARY KEY')], keywords=[]), Call(func=Name(id='EnclosedNodeList', ctx=Load()), args=[Name(id='pk_columns', ctx=Load())], keywords=[])], ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), For(target=Name(id='field', ctx=Store()), iter=Attribute(value=Name(id='meta', ctx=Load()), attr='sorted_fields', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='columns', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='field', ctx=Load()), attr='ddl', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[])], keywords=[])), If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='field', ctx=Load()), Name(id='ForeignKeyField', ctx=Load())], keywords=[]), UnaryOp(op=Not(), operand=Attribute(value=Name(id='field', ctx=Load()), attr='deferred', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Name(id='constraints', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='field', ctx=Load()), attr='foreign_key_constraint', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[])], orelse=[]), If(test=Attribute(value=Name(id='meta', ctx=Load()), attr='constraints', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='constraints', ctx=Load()), attr='extend', ctx=Load()), args=[Attribute(value=Name(id='meta', ctx=Load()), attr='constraints', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='constraints', ctx=Load()), attr='extend', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_table_option_sql', ctx=Load()), args=[Name(id='options', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='EnclosedNodeList', ctx=Load()), args=[BinOp(left=Name(id='columns', ctx=Load()), op=Add(), right=Name(id='constraints', ctx=Load()))], keywords=[])], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='meta', ctx=Load()), attr='table_settings', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='table_settings', ctx=Store())], value=Call(func=Name(id='ensure_tuple', ctx=Load()), args=[Attribute(value=Name(id='meta', ctx=Load()), attr='table_settings', ctx=Load())], keywords=[])), For(target=Name(id='setting', ctx=Store()), iter=Name(id='table_settings', ctx=Load()), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='setting', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='table_settings must be strings')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' ')], keywords=[]), attr='literal', ctx=Load()), args=[Name(id='setting', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='extra_opts', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=Attribute(value=Name(id='meta', ctx=Load()), attr='strict_tables', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='extra_opts', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='STRICT')], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='meta', ctx=Load()), attr='without_rowid', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='extra_opts', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='WITHOUT ROWID')], keywords=[]))], orelse=[]), If(test=Name(id='extra_opts', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[BinOp(left=Constant(value=' %s'), op=Mod(), right=Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[Name(id='extra_opts', ctx=Load())], keywords=[]))], keywords=[]))], orelse=[]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[]), FunctionDef(name='_create_table_option_sql', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='options')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='accum', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='options', ctx=Store())], value=Call(func=Name(id='merge_dict', ctx=Load()), args=[BoolOp(op=Or(), values=[Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='options', ctx=Load()), Dict(keys=[], values=[])]), Name(id='options', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='options', ctx=Load())), body=[Return(value=Name(id='accum', ctx=Load()))], orelse=[]), For(target=Tuple(elts=[Name(id='key', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='sorted', ctx=Load()), args=[Call(func=Attribute(value=Name(id='options', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[])], keywords=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[])), body=[If(test=Call(func=Name(id='is_model', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='value', ctx=Load()), attr='_meta', ctx=Load()), attr='table', ctx=Load()))], orelse=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='SQL', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='SQL', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[]), Name(id='value', ctx=Load())], ctx=Load())], keywords=[keyword(arg='glue', value=Constant(value='='))])], keywords=[]))], orelse=[]), Return(value=Name(id='accum', ctx=Load()))], decorator_list=[]), FunctionDef(name='create_table', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='safe')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='options'), defaults=[Constant(value=True)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='execute', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_table', ctx=Load()), args=[], keywords=[keyword(arg='safe', value=Name(id='safe', ctx=Load())), keyword(value=Name(id='options', ctx=Load()))])], keywords=[]))], decorator_list=[]), FunctionDef(name='_create_table_as', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table_name'), arg(arg='query'), arg(arg='safe')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='meta'), defaults=[Constant(value=True)]), body=[Assign(targets=[Name(id='ctx', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_context', ctx=Load()), args=[], keywords=[]), attr='literal', ctx=Load()), args=[IfExp(test=Call(func=Attribute(value=Name(id='meta', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='temporary')], keywords=[]), body=Constant(value='CREATE TEMPORARY TABLE '), orelse=Constant(value='CREATE TABLE '))], keywords=[])), If(test=Name(id='safe', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='IF NOT EXISTS ')], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='Entity', ctx=Load()), args=[Starred(value=Call(func=Name(id='ensure_tuple', ctx=Load()), args=[Name(id='table_name', ctx=Load())], keywords=[]), ctx=Load())], keywords=[])], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value=' AS ')], keywords=[]), attr='sql', ctx=Load()), args=[Name(id='query', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='create_table_as', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table_name'), arg(arg='query'), arg(arg='safe')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='meta'), defaults=[Constant(value=True)]), body=[Assign(targets=[Name(id='ctx', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_table_as', ctx=Load()), args=[Name(id='table_name', ctx=Load()), Name(id='query', ctx=Load())], keywords=[keyword(arg='safe', value=Name(id='safe', ctx=Load())), keyword(value=Name(id='meta', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='execute', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_drop_table', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='safe')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='options'), defaults=[Constant(value=True)]), body=[Assign(targets=[Name(id='ctx', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_context', ctx=Load()), args=[], keywords=[]), attr='literal', ctx=Load()), args=[IfExp(test=Name(id='safe', ctx=Load()), body=Constant(value='DROP TABLE IF EXISTS '), orelse=Constant(value='DROP TABLE '))], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load())], keywords=[])), If(test=Call(func=Attribute(value=Name(id='options', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='cascade')], keywords=[]), body=[Assign(targets=[Name(id='ctx', ctx=Store())], value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' CASCADE')], keywords=[]))], orelse=[If(test=Call(func=Attribute(value=Name(id='options', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='restrict')], keywords=[]), body=[Assign(targets=[Name(id='ctx', ctx=Store())], value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' RESTRICT')], keywords=[]))], orelse=[])]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[]), FunctionDef(name='drop_table', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='safe')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='options'), defaults=[Constant(value=True)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='execute', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_drop_table', ctx=Load()), args=[], keywords=[keyword(arg='safe', value=Name(id='safe', ctx=Load())), keyword(value=Name(id='options', ctx=Load()))])], keywords=[]))], decorator_list=[]), FunctionDef(name='_truncate_table', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='restart_identity'), arg(arg='cascade')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=False)]), body=[Assign(targets=[Name(id='db', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load())), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='db', ctx=Load()), attr='truncate_table', ctx=Load())), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_context', ctx=Load()), args=[], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value='DELETE FROM ')], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='ctx', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_context', ctx=Load()), args=[], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value='TRUNCATE TABLE ')], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load())], keywords=[])), If(test=Name(id='restart_identity', ctx=Load()), body=[Assign(targets=[Name(id='ctx', ctx=Store())], value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' RESTART IDENTITY')], keywords=[]))], orelse=[]), If(test=Name(id='cascade', ctx=Load()), body=[Assign(targets=[Name(id='ctx', ctx=Store())], value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' CASCADE')], keywords=[]))], orelse=[]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[]), FunctionDef(name='truncate_table', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='restart_identity'), arg(arg='cascade')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=False)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='execute', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_truncate_table', ctx=Load()), args=[Name(id='restart_identity', ctx=Load()), Name(id='cascade', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='_create_indexes', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='safe')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Return(value=ListComp(elt=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_index', ctx=Load()), args=[Name(id='index', ctx=Load()), Name(id='safe', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='index', ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='fields_to_index', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='_create_index', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='index'), arg(arg='safe')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='index', ctx=Load()), Name(id='Index', ctx=Load())], keywords=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='safe_create_index', ctx=Load())), body=[Assign(targets=[Name(id='index', ctx=Store())], value=Call(func=Attribute(value=Name(id='index', ctx=Load()), attr='safe', ctx=Load()), args=[Constant(value=False)], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='index', ctx=Load()), attr='_safe', ctx=Load()), ops=[NotEq()], comparators=[Name(id='safe', ctx=Load())]), body=[Assign(targets=[Name(id='index', ctx=Store())], value=Call(func=Attribute(value=Name(id='index', ctx=Load()), attr='safe', ctx=Load()), args=[Name(id='safe', ctx=Load())], keywords=[]))], orelse=[])]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), Name(id='SqliteDatabase', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='index', ctx=Store())], value=Call(func=Name(id='ValueLiterals', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_context', ctx=Load()), args=[], keywords=[]), attr='sql', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='create_indexes', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='safe')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[For(target=Name(id='query', ctx=Store()), iter=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_indexes', ctx=Load()), args=[], keywords=[keyword(arg='safe', value=Name(id='safe', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='execute', ctx=Load()), args=[Name(id='query', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='_drop_indexes', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='safe')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Return(value=ListComp(elt=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_drop_index', ctx=Load()), args=[Name(id='index', ctx=Load()), Name(id='safe', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='index', ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='fields_to_index', ctx=Load()), args=[], keywords=[]), ifs=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='index', ctx=Load()), Name(id='Index', ctx=Load())], keywords=[])], is_async=0)]))], decorator_list=[]), FunctionDef(name='_drop_index', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='index'), arg(arg='safe')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='statement', ctx=Store())], value=Constant(value='DROP INDEX ')), If(test=BoolOp(op=And(), values=[Name(id='safe', ctx=Load()), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='safe_drop_index', ctx=Load())]), body=[AugAssign(target=Name(id='statement', ctx=Store()), op=Add(), value=Constant(value='IF EXISTS '))], orelse=[]), If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='index', ctx=Load()), attr='_table', ctx=Load()), Name(id='Table', ctx=Load())], keywords=[]), Attribute(value=Attribute(value=Name(id='index', ctx=Load()), attr='_table', ctx=Load()), attr='_schema', ctx=Load())]), body=[Assign(targets=[Name(id='index_name', ctx=Store())], value=Call(func=Name(id='Entity', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='index', ctx=Load()), attr='_table', ctx=Load()), attr='_schema', ctx=Load()), Attribute(value=Name(id='index', ctx=Load()), attr='_name', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='index_name', ctx=Store())], value=Call(func=Name(id='Entity', ctx=Load()), args=[Attribute(value=Name(id='index', ctx=Load()), attr='_name', ctx=Load())], keywords=[]))]), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_context', ctx=Load()), args=[], keywords=[]), attr='literal', ctx=Load()), args=[Name(id='statement', ctx=Load())], keywords=[]), attr='sql', ctx=Load()), args=[Name(id='index_name', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='drop_indexes', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='safe')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[For(target=Name(id='query', ctx=Store()), iter=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_drop_indexes', ctx=Load()), args=[], keywords=[keyword(arg='safe', value=Name(id='safe', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='execute', ctx=Load()), args=[Name(id='query', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='_check_sequences', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='field', ctx=Load()), attr='sequence', ctx=Load())), UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='sequences', ctx=Load()))]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='Sequences are either not supported, or are not defined for "%s".'), op=Mod(), right=Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load()))], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='_sequence_for_field', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Attribute(value=Attribute(value=Name(id='field', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='schema', ctx=Load()), body=[Return(value=Call(func=Name(id='Entity', ctx=Load()), args=[Attribute(value=Attribute(value=Attribute(value=Name(id='field', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='schema', ctx=Load()), Attribute(value=Name(id='field', ctx=Load()), attr='sequence', ctx=Load())], keywords=[]))], orelse=[Return(value=Call(func=Name(id='Entity', ctx=Load()), args=[Attribute(value=Name(id='field', ctx=Load()), attr='sequence', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='_create_sequence', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_check_sequences', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='sequence_exists', ctx=Load()), args=[Attribute(value=Name(id='field', ctx=Load()), attr='sequence', ctx=Load())], keywords=[])), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_context', ctx=Load()), args=[], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value='CREATE SEQUENCE ')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_sequence_for_field', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='create_sequence', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='seq_ctx', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_sequence', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='seq_ctx', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='execute', ctx=Load()), args=[Name(id='seq_ctx', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='_drop_sequence', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_check_sequences', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='sequence_exists', ctx=Load()), args=[Attribute(value=Name(id='field', ctx=Load()), attr='sequence', ctx=Load())], keywords=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_context', ctx=Load()), args=[], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value='DROP SEQUENCE ')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_sequence_for_field', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='drop_sequence', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='seq_ctx', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_drop_sequence', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='seq_ctx', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='execute', ctx=Load()), args=[Name(id='seq_ctx', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='_create_foreign_key', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='name', ctx=Store())], value=BinOp(left=Constant(value='fk_%s_%s_refs_%s'), op=Mod(), right=Tuple(elts=[Attribute(value=Attribute(value=Attribute(value=Name(id='field', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='table_name', ctx=Load()), Attribute(value=Name(id='field', ctx=Load()), attr='column_name', ctx=Load()), Attribute(value=Attribute(value=Attribute(value=Name(id='field', ctx=Load()), attr='rel_model', ctx=Load()), attr='_meta', ctx=Load()), attr='table_name', ctx=Load())], ctx=Load()))), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_context', ctx=Load()), args=[], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value='ALTER TABLE ')], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='field', ctx=Load()), attr='model', ctx=Load())], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value=' ADD CONSTRAINT ')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Name(id='Entity', ctx=Load()), args=[Call(func=Name(id='_truncate_constraint_name', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value=' ')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Attribute(value=Name(id='field', ctx=Load()), attr='foreign_key_constraint', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='create_foreign_key', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='execute', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_foreign_key', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='create_sequences', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='sequences', ctx=Load()), body=[For(target=Name(id='field', ctx=Store()), iter=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='sorted_fields', ctx=Load()), body=[If(test=Attribute(value=Name(id='field', ctx=Load()), attr='sequence', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='create_sequence', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='create_all', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='safe')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='table_options'), defaults=[Constant(value=True)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='create_sequences', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='create_table', ctx=Load()), args=[Name(id='safe', ctx=Load())], keywords=[keyword(value=Name(id='table_options', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='create_indexes', ctx=Load()), args=[], keywords=[keyword(arg='safe', value=Name(id='safe', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='drop_sequences', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='sequences', ctx=Load()), body=[For(target=Name(id='field', ctx=Store()), iter=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='sorted_fields', ctx=Load()), body=[If(test=Attribute(value=Name(id='field', ctx=Load()), attr='sequence', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='drop_sequence', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='drop_all', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='safe'), arg(arg='drop_sequences')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='options'), defaults=[Constant(value=True), Constant(value=True)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='drop_table', ctx=Load()), args=[Name(id='safe', ctx=Load())], keywords=[keyword(value=Name(id='options', ctx=Load()))])), If(test=Name(id='drop_sequences', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='drop_sequences', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[]), ClassDef(name='Metadata', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='database'), arg(arg='table_name'), arg(arg='indexes'), arg(arg='primary_key'), arg(arg='constraints'), arg(arg='schema'), arg(arg='only_save_dirty'), arg(arg='depends_on'), arg(arg='options'), arg(arg='db_table'), arg(arg='table_function'), arg(arg='table_settings'), arg(arg='without_rowid'), arg(arg='temporary'), arg(arg='strict_tables'), arg(arg='legacy_table_names')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=False), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=False), Constant(value=False), Constant(value=None), Constant(value=True)]), body=[If(test=Compare(left=Name(id='db_table', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='__deprecated__', ctx=Load()), args=[Constant(value='"db_table" has been deprecated in favor of "table_name" for Models.')], keywords=[])), Assign(targets=[Name(id='table_name', ctx=Store())], value=Name(id='db_table', ctx=Load()))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Store())], value=Name(id='model', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Store())], value=Name(id='database', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='fields', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='combined', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_sorted_field_list', ctx=Store())], value=Call(func=Name(id='_SortedFieldList', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='sorted_fields', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='sorted_field_names', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='defaults', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_default_by_name', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_default_dict', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_default_callables', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_default_callable_list', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='__name__', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='table_function', ctx=Store())], value=Name(id='table_function', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='legacy_table_names', ctx=Store())], value=Name(id='legacy_table_names', ctx=Load())), If(test=UnaryOp(op=Not(), operand=Name(id='table_name', ctx=Load())), body=[Assign(targets=[Name(id='table_name', ctx=Store())], value=IfExp(test=Attribute(value=Name(id='self', ctx=Load()), attr='table_function', ctx=Load()), body=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='table_function', ctx=Load()), args=[Name(id='model', ctx=Load())], keywords=[]), orelse=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='make_table_name', ctx=Load()), args=[], keywords=[])))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='table_name', ctx=Store())], value=Name(id='table_name', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_table', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='indexes', ctx=Store())], value=IfExp(test=Name(id='indexes', ctx=Load()), body=Call(func=Name(id='list', ctx=Load()), args=[Name(id='indexes', ctx=Load())], keywords=[]), orelse=List(elts=[], ctx=Load()))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='constraints', ctx=Store())], value=Name(id='constraints', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_schema', ctx=Store())], value=Name(id='schema', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='primary_key', ctx=Store())], value=Name(id='primary_key', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='composite_key', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='auto_increment', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='only_save_dirty', ctx=Store())], value=Name(id='only_save_dirty', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='depends_on', ctx=Store())], value=Name(id='depends_on', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='table_settings', ctx=Store())], value=Name(id='table_settings', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='without_rowid', ctx=Store())], value=Name(id='without_rowid', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='strict_tables', ctx=Store())], value=Name(id='strict_tables', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='temporary', ctx=Store())], value=Name(id='temporary', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='refs', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='backrefs', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='model_refs', ctx=Store())], value=Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='defaultdict', ctx=Load()), args=[Name(id='list', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='model_backrefs', ctx=Store())], value=Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='defaultdict', ctx=Load()), args=[Name(id='list', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='manytomany', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='options', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='options', ctx=Load()), Dict(keys=[], values=[])])), For(target=Tuple(elts=[Name(id='key', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='key', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_additional_keys', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_db_hooks', ctx=Store())], value=List(elts=[], ctx=Load()))], decorator_list=[]), FunctionDef(name='make_table_name', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='legacy_table_names', ctx=Load()), body=[Return(value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='[^\\w]+'), Constant(value='_'), Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='make_snake_case', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='__name__', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='model_graph', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='refs'), arg(arg='backrefs'), arg(arg='depth_first')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True), Constant(value=True), Constant(value=True)]), body=[If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='refs', ctx=Load())), UnaryOp(op=Not(), operand=Name(id='backrefs', ctx=Load()))]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='One of `refs` or `backrefs` must be True.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='accum', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value=None), Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), Constant(value=None)], ctx=Load())], ctx=Load())), Assign(targets=[Name(id='seen', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='queue', ctx=Store())], value=Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='deque', ctx=Load()), args=[Tuple(elts=[Name(id='self', ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='method', ctx=Store())], value=IfExp(test=Name(id='depth_first', ctx=Load()), body=Attribute(value=Name(id='queue', ctx=Load()), attr='pop', ctx=Load()), orelse=Attribute(value=Name(id='queue', ctx=Load()), attr='popleft', ctx=Load()))), While(test=Name(id='queue', ctx=Load()), body=[Assign(targets=[Name(id='curr', ctx=Store())], value=Call(func=Name(id='method', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='curr', ctx=Load()), ops=[In()], comparators=[Name(id='seen', ctx=Load())]), body=[Continue()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='seen', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='curr', ctx=Load())], keywords=[])), If(test=Name(id='refs', ctx=Load()), body=[For(target=Tuple(elts=[Name(id='fk', ctx=Store()), Name(id='model', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='curr', ctx=Load()), attr='refs', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='fk', ctx=Load()), Name(id='model', ctx=Load()), Constant(value=False)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='queue', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), If(test=Name(id='backrefs', ctx=Load()), body=[For(target=Tuple(elts=[Name(id='fk', ctx=Store()), Name(id='model', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='curr', ctx=Load()), attr='backrefs', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='fk', ctx=Load()), Name(id='model', ctx=Load()), Constant(value=True)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='queue', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[]), Return(value=Name(id='accum', ctx=Load()))], decorator_list=[]), FunctionDef(name='add_ref', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='rel', ctx=Store())], value=Attribute(value=Name(id='field', ctx=Load()), attr='rel_model', ctx=Load())), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='refs', ctx=Load()), slice=Name(id='field', ctx=Load()), ctx=Store())], value=Name(id='rel', ctx=Load())), Expr(value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='model_refs', ctx=Load()), slice=Name(id='rel', ctx=Load()), ctx=Load()), attr='append', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Attribute(value=Name(id='rel', ctx=Load()), attr='_meta', ctx=Load()), attr='backrefs', ctx=Load()), slice=Name(id='field', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load())), Expr(value=Call(func=Attribute(value=Subscript(value=Attribute(value=Attribute(value=Name(id='rel', ctx=Load()), attr='_meta', ctx=Load()), attr='model_backrefs', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), ctx=Load()), attr='append', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='remove_ref', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='rel', ctx=Store())], value=Attribute(value=Name(id='field', ctx=Load()), attr='rel_model', ctx=Load())), Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='refs', ctx=Load()), slice=Name(id='field', ctx=Load()), ctx=Del())]), Expr(value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='model_refs', ctx=Load()), slice=Name(id='rel', ctx=Load()), ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[])), Delete(targets=[Subscript(value=Attribute(value=Attribute(value=Name(id='rel', ctx=Load()), attr='_meta', ctx=Load()), attr='backrefs', ctx=Load()), slice=Name(id='field', ctx=Load()), ctx=Del())]), Expr(value=Call(func=Attribute(value=Subscript(value=Attribute(value=Attribute(value=Name(id='rel', ctx=Load()), attr='_meta', ctx=Load()), attr='model_backrefs', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='add_manytomany', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='manytomany', ctx=Load()), slice=Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load()), ctx=Store())], value=Name(id='field', ctx=Load()))], decorator_list=[]), FunctionDef(name='remove_manytomany', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='manytomany', ctx=Load()), slice=Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load()), ctx=Del())])], decorator_list=[]), FunctionDef(name='table', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_table', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_table', ctx=Store())], value=Call(func=Name(id='Table', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='table_name', ctx=Load()), ListComp(elt=Attribute(value=Name(id='field', ctx=Load()), attr='column_name', ctx=Load()), generators=[comprehension(target=Name(id='field', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='sorted_fields', ctx=Load()), ifs=[], is_async=0)])], keywords=[keyword(arg='schema', value=Attribute(value=Name(id='self', ctx=Load()), attr='schema', ctx=Load())), keyword(arg='_model', value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load())), keyword(arg='_database', value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()))]))], orelse=[]), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_table', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='table', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Call(func=Name(id='AttributeError', ctx=Load()), args=[Constant(value='Cannot set the "table".')], keywords=[]))], decorator_list=[Attribute(value=Name(id='table', ctx=Load()), attr='setter', ctx=Load())]), FunctionDef(name='table', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_table', ctx=Store())], value=Constant(value=None))], decorator_list=[Attribute(value=Name(id='table', ctx=Load()), attr='deleter', ctx=Load())]), FunctionDef(name='schema', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_schema', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='schema', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_schema', ctx=Store())], value=Name(id='value', ctx=Load())), Delete(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Del())])], decorator_list=[Attribute(value=Name(id='schema', ctx=Load()), attr='setter', ctx=Load())]), FunctionDef(name='entity', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_schema', ctx=Load()), body=[Return(value=Call(func=Name(id='Entity', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_schema', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='table_name', ctx=Load())], keywords=[]))], orelse=[Return(value=Call(func=Name(id='Entity', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='table_name', ctx=Load())], keywords=[]))])], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='_update_sorted_fields', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='sorted_fields', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_sorted_field_list', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='sorted_field_names', ctx=Store())], value=ListComp(elt=Attribute(value=Name(id='f', ctx=Load()), attr='name', ctx=Load()), generators=[comprehension(target=Name(id='f', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='sorted_fields', ctx=Load()), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='get_rel_for_model', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='model', ctx=Load()), Name(id='ModelAlias', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='model', ctx=Store())], value=Attribute(value=Name(id='model', ctx=Load()), attr='model', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='forwardrefs', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model_refs', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='model', ctx=Load()), List(elts=[], ctx=Load())], keywords=[])), Assign(targets=[Name(id='backrefs', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model_backrefs', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='model', ctx=Load()), List(elts=[], ctx=Load())], keywords=[])), Return(value=Tuple(elts=[Name(id='forwardrefs', ctx=Load()), Name(id='backrefs', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='add_field', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field_name'), arg(arg='field'), arg(arg='set_attribute')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[If(test=Compare(left=Name(id='field_name', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='fields', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='remove_field', ctx=Load()), args=[Name(id='field_name', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='field_name', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='manytomany', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='remove_manytomany', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='manytomany', ctx=Load()), slice=Name(id='field_name', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[])]), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='field', ctx=Load()), Name(id='MetaField', ctx=Load())], keywords=[])), body=[Delete(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Del())]), Expr(value=Call(func=Attribute(value=Name(id='field', ctx=Load()), attr='bind', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), Name(id='field_name', ctx=Load()), Name(id='set_attribute', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='fields', ctx=Load()), slice=Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load()), ctx=Store())], value=Name(id='field', ctx=Load())), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Load()), slice=Attribute(value=Name(id='field', ctx=Load()), attr='column_name', ctx=Load()), ctx=Store())], value=Name(id='field', ctx=Load())), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='combined', ctx=Load()), slice=Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load()), ctx=Store())], value=Name(id='field', ctx=Load())), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='combined', ctx=Load()), slice=Attribute(value=Name(id='field', ctx=Load()), attr='column_name', ctx=Load()), ctx=Store())], value=Name(id='field', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_sorted_field_list', ctx=Load()), attr='insert', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_update_sorted_fields', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='field', ctx=Load()), attr='default', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='defaults', ctx=Load()), slice=Name(id='field', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='field', ctx=Load()), attr='default', ctx=Load())), If(test=Call(func=Name(id='callable_', ctx=Load()), args=[Attribute(value=Name(id='field', ctx=Load()), attr='default', ctx=Load())], keywords=[]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_default_callables', ctx=Load()), slice=Name(id='field', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='field', ctx=Load()), attr='default', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_default_callable_list', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load()), Attribute(value=Name(id='field', ctx=Load()), attr='default', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_default_dict', ctx=Load()), slice=Name(id='field', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='field', ctx=Load()), attr='default', ctx=Load())), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_default_by_name', ctx=Load()), slice=Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='field', ctx=Load()), attr='default', ctx=Load()))])], orelse=[])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='field', ctx=Load()), attr='bind', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), Name(id='field_name', ctx=Load()), Name(id='set_attribute', ctx=Load())], keywords=[]))]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='field', ctx=Load()), Name(id='ForeignKeyField', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='add_ref', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='field', ctx=Load()), Name(id='ManyToManyField', ctx=Load())], keywords=[]), Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='add_manytomany', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[]))], orelse=[])])], decorator_list=[]), FunctionDef(name='remove_field', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field_name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='field_name', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='fields', ctx=Load())]), body=[Return()], orelse=[]), Delete(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Del())]), Assign(targets=[Name(id='original', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='fields', ctx=Load()), attr='pop', ctx=Load()), args=[Name(id='field_name', ctx=Load())], keywords=[])), Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Load()), slice=Attribute(value=Name(id='original', ctx=Load()), attr='column_name', ctx=Load()), ctx=Del())]), Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='combined', ctx=Load()), slice=Name(id='field_name', ctx=Load()), ctx=Del())]), Try(body=[Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='combined', ctx=Load()), slice=Attribute(value=Name(id='original', ctx=Load()), attr='column_name', ctx=Load()), ctx=Del())])], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_sorted_field_list', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='original', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_update_sorted_fields', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='original', ctx=Load()), attr='default', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='defaults', ctx=Load()), slice=Name(id='original', ctx=Load()), ctx=Del())]), If(test=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_default_callables', ctx=Load()), attr='pop', ctx=Load()), args=[Name(id='original', ctx=Load()), Constant(value=None)], keywords=[]), body=[For(target=Tuple(elts=[Name(id='i', ctx=Store()), Tuple(elts=[Name(id='name', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_default_callable_list', ctx=Load())], keywords=[]), body=[If(test=Compare(left=Name(id='name', ctx=Load()), ops=[Eq()], comparators=[Name(id='field_name', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_default_callable_list', ctx=Load()), attr='pop', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[])), Break()], orelse=[])], orelse=[])], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_default_dict', ctx=Load()), attr='pop', ctx=Load()), args=[Name(id='original', ctx=Load()), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_default_by_name', ctx=Load()), attr='pop', ctx=Load()), args=[Attribute(value=Name(id='original', ctx=Load()), attr='name', ctx=Load()), Constant(value=None)], keywords=[]))])], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='original', ctx=Load()), Name(id='ForeignKeyField', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='remove_ref', ctx=Load()), args=[Name(id='original', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='set_primary_key', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name'), arg(arg='field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='composite_key', ctx=Store())], value=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='field', ctx=Load()), Name(id='CompositeKey', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='add_field', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='field', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='primary_key', ctx=Store())], value=Name(id='field', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='auto_increment', ctx=Store())], value=BoolOp(op=Or(), values=[Attribute(value=Name(id='field', ctx=Load()), attr='auto_increment', ctx=Load()), Call(func=Name(id='bool', ctx=Load()), args=[Attribute(value=Name(id='field', ctx=Load()), attr='sequence', ctx=Load())], keywords=[])]))], decorator_list=[]), FunctionDef(name='get_primary_keys', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='composite_key', ctx=Load()), body=[Return(value=Call(func=Name(id='tuple', ctx=Load()), args=[ListComp(elt=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='fields', ctx=Load()), slice=Name(id='field_name', ctx=Load()), ctx=Load()), generators=[comprehension(target=Name(id='field_name', ctx=Store()), iter=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='primary_key', ctx=Load()), attr='field_names', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], orelse=[Return(value=IfExp(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='primary_key', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=False)]), body=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='primary_key', ctx=Load())], ctx=Load()), orelse=Tuple(elts=[], ctx=Load())))])], decorator_list=[]), FunctionDef(name='get_default_dict', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='dd', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_default_by_name', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), For(target=Tuple(elts=[Name(id='field_name', ctx=Store()), Name(id='default', ctx=Store())], ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_default_callable_list', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='dd', ctx=Load()), slice=Name(id='field_name', ctx=Load()), ctx=Store())], value=Call(func=Name(id='default', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Name(id='dd', ctx=Load()))], decorator_list=[]), FunctionDef(name='fields_to_index', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='indexes', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='f', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='sorted_fields', ctx=Load()), body=[If(test=Attribute(value=Name(id='f', ctx=Load()), attr='primary_key', ctx=Load()), body=[Continue()], orelse=[]), If(test=BoolOp(op=Or(), values=[Attribute(value=Name(id='f', ctx=Load()), attr='index', ctx=Load()), Attribute(value=Name(id='f', ctx=Load()), attr='unique', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='indexes', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='ModelIndex', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), Tuple(elts=[Name(id='f', ctx=Load())], ctx=Load())], keywords=[keyword(arg='unique', value=Attribute(value=Name(id='f', ctx=Load()), attr='unique', ctx=Load())), keyword(arg='using', value=Attribute(value=Name(id='f', ctx=Load()), attr='index_type', ctx=Load()))])], keywords=[]))], orelse=[])], orelse=[]), For(target=Name(id='index_obj', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='indexes', ctx=Load()), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='index_obj', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='indexes', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='index_obj', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='index_obj', ctx=Load()), Tuple(elts=[Name(id='list', ctx=Load()), Name(id='tuple', ctx=Load())], ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='index_parts', ctx=Store()), Name(id='unique', ctx=Store())], ctx=Store())], value=Name(id='index_obj', ctx=Load())), Assign(targets=[Name(id='fields', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='part', ctx=Store()), iter=Name(id='index_parts', ctx=Load()), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='part', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='fields', ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='combined', ctx=Load()), slice=Name(id='part', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='part', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='fields', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='part', ctx=Load())], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='Expected either a field name or a subclass of Node. Got: %s'), op=Mod(), right=Name(id='part', ctx=Load()))], keywords=[]))])])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='indexes', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='ModelIndex', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), Name(id='fields', ctx=Load())], keywords=[keyword(arg='unique', value=Name(id='unique', ctx=Load()))])], keywords=[]))], orelse=[])])], orelse=[]), Return(value=Name(id='indexes', ctx=Load()))], decorator_list=[]), FunctionDef(name='set_database', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Store())], value=Name(id='database', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_schema', ctx=Load()), attr='_database', ctx=Store())], value=Name(id='database', ctx=Load())), Delete(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Del())]), If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='database', ctx=Load()), Name(id='Proxy', ctx=Load())], keywords=[]), Compare(left=Attribute(value=Name(id='database', ctx=Load()), attr='obj', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])]), body=[Assign(targets=[Name(id='database', ctx=Store())], value=Constant(value=None))], orelse=[]), For(target=Name(id='hook', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_db_hooks', ctx=Load()), body=[Expr(value=Call(func=Name(id='hook', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='set_table_name', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table_name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='table_name', ctx=Store())], value=Name(id='table_name', ctx=Load())), Delete(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Del())])], decorator_list=[])], decorator_list=[]), ClassDef(name='SubclassAwareMetadata', bases=[Name(id='Metadata', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='models', ctx=Store())], value=List(elts=[], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='SubclassAwareMetadata', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='model', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='models', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='model', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='map_models', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='model', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='models', ctx=Load()), body=[Expr(value=Call(func=Name(id='fn', ctx=Load()), args=[Name(id='model', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[]), ClassDef(name='DoesNotExist', bases=[Name(id='Exception', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='ModelBase', bases=[Name(id='type', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='inheritable', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[List(elts=[Constant(value='constraints'), Constant(value='database'), Constant(value='indexes'), Constant(value='primary_key'), Constant(value='options'), Constant(value='schema'), Constant(value='table_function'), Constant(value='temporary'), Constant(value='only_save_dirty'), Constant(value='legacy_table_names'), Constant(value='table_settings'), Constant(value='strict_tables')], ctx=Load())], keywords=[])), FunctionDef(name='__new__', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='name'), arg(arg='bases'), arg(arg='attrs')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='name', ctx=Load()), ops=[Eq()], comparators=[Name(id='MODEL_BASE', ctx=Load())]), Compare(left=Attribute(value=Subscript(value=Name(id='bases', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='__name__', ctx=Load()), ops=[Eq()], comparators=[Name(id='MODEL_BASE', ctx=Load())])]), body=[Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ModelBase', ctx=Load()), Name(id='cls', ctx=Load())], keywords=[]), attr='__new__', ctx=Load()), args=[Name(id='cls', ctx=Load()), Name(id='name', ctx=Load()), Name(id='bases', ctx=Load()), Name(id='attrs', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], orelse=[]), Assign(targets=[Name(id='meta_options', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='meta', ctx=Store())], value=Call(func=Attribute(value=Name(id='attrs', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='Meta'), Constant(value=None)], keywords=[])), If(test=Name(id='meta', ctx=Load()), body=[For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='meta', ctx=Load()), attr='__dict__', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='k', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='_')], keywords=[])), body=[Assign(targets=[Subscript(value=Name(id='meta_options', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Store())], value=Name(id='v', ctx=Load()))], orelse=[])], orelse=[])], orelse=[]), Assign(targets=[Name(id='pk', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='meta', ctx=Load()), Constant(value='primary_key'), Constant(value=None)], keywords=[])), Assign(targets=[Name(id='pk_name', ctx=Store()), Name(id='parent_pk', ctx=Store())], value=Constant(value=None)), For(target=Name(id='b', ctx=Store()), iter=Name(id='bases', ctx=Load()), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='b', ctx=Load()), Constant(value='_meta')], keywords=[])), body=[Continue()], orelse=[]), Assign(targets=[Name(id='base_meta', ctx=Store())], value=Attribute(value=Name(id='b', ctx=Load()), attr='_meta', ctx=Load())), If(test=Compare(left=Name(id='parent_pk', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='parent_pk', ctx=Store())], value=Call(func=Name(id='deepcopy', ctx=Load()), args=[Attribute(value=Name(id='base_meta', ctx=Load()), attr='primary_key', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='all_inheritable', ctx=Store())], value=BinOp(left=Attribute(value=Name(id='cls', ctx=Load()), attr='inheritable', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='base_meta', ctx=Load()), attr='_additional_keys', ctx=Load()))), For(target=Name(id='k', ctx=Store()), iter=Attribute(value=Name(id='base_meta', ctx=Load()), attr='__dict__', ctx=Load()), body=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='k', ctx=Load()), ops=[In()], comparators=[Name(id='all_inheritable', ctx=Load())]), Compare(left=Name(id='k', ctx=Load()), ops=[NotIn()], comparators=[Name(id='meta_options', ctx=Load())])]), body=[Assign(targets=[Subscript(value=Name(id='meta_options', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Store())], value=Subscript(value=Attribute(value=Name(id='base_meta', ctx=Load()), attr='__dict__', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Load()))], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='meta_options', ctx=Load()), attr='setdefault', ctx=Load()), args=[Constant(value='database'), Attribute(value=Name(id='base_meta', ctx=Load()), attr='database', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='meta_options', ctx=Load()), attr='setdefault', ctx=Load()), args=[Constant(value='schema'), Attribute(value=Name(id='base_meta', ctx=Load()), attr='schema', ctx=Load())], keywords=[])), For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='b', ctx=Load()), attr='__dict__', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Compare(left=Name(id='k', ctx=Load()), ops=[In()], comparators=[Name(id='attrs', ctx=Load())]), body=[Continue()], orelse=[]), If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='v', ctx=Load()), Name(id='FieldAccessor', ctx=Load())], keywords=[]), UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Name(id='v', ctx=Load()), attr='field', ctx=Load()), attr='primary_key', ctx=Load()))]), body=[Assign(targets=[Subscript(value=Name(id='attrs', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Store())], value=Call(func=Name(id='deepcopy', ctx=Load()), args=[Attribute(value=Name(id='v', ctx=Load()), attr='field', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[]), Assign(targets=[Name(id='sopts', ctx=Store())], value=BoolOp(op=Or(), values=[Call(func=Attribute(value=Name(id='meta_options', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='schema_options'), Constant(value=None)], keywords=[]), Dict(keys=[], values=[])])), Assign(targets=[Name(id='Meta', ctx=Store())], value=Call(func=Attribute(value=Name(id='meta_options', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='model_metadata_class'), Name(id='Metadata', ctx=Load())], keywords=[])), Assign(targets=[Name(id='Schema', ctx=Store())], value=Call(func=Attribute(value=Name(id='meta_options', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='schema_manager_class'), Name(id='SchemaManager', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cls', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ModelBase', ctx=Load()), Name(id='cls', ctx=Load())], keywords=[]), attr='__new__', ctx=Load()), args=[Name(id='cls', ctx=Load()), Name(id='name', ctx=Load()), Name(id='bases', ctx=Load()), Name(id='attrs', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='cls', ctx=Load()), attr='__data__', ctx=Store()), Attribute(value=Name(id='cls', ctx=Load()), attr='__rel__', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Store())], value=Call(func=Name(id='Meta', ctx=Load()), args=[Name(id='cls', ctx=Load())], keywords=[keyword(value=Name(id='meta_options', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='cls', ctx=Load()), attr='_schema', ctx=Store())], value=Call(func=Name(id='Schema', ctx=Load()), args=[Name(id='cls', ctx=Load())], keywords=[keyword(value=Name(id='sopts', ctx=Load()))])), Assign(targets=[Name(id='fields', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Tuple(elts=[Name(id='key', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='__dict__', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[]), body=[If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='value', ctx=Load()), attr='primary_key', ctx=Load()), Name(id='pk', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='over-determined primary key %s.'), op=Mod(), right=Name(id='name', ctx=Load()))], keywords=[]))], orelse=[If(test=Attribute(value=Name(id='value', ctx=Load()), attr='primary_key', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='pk', ctx=Store()), Name(id='pk_name', ctx=Store())], ctx=Store())], value=Tuple(elts=[Name(id='value', ctx=Load()), Name(id='key', ctx=Load())], ctx=Load()))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='fields', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='key', ctx=Load()), Name(id='value', ctx=Load())], ctx=Load())], keywords=[]))])])], orelse=[])], orelse=[]), If(test=Compare(left=Name(id='pk', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='parent_pk', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=False)]), body=[Assign(targets=[Tuple(elts=[Name(id='pk', ctx=Store()), Name(id='pk_name', ctx=Store())], ctx=Store())], value=IfExp(test=Compare(left=Name(id='parent_pk', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Tuple(elts=[Name(id='parent_pk', ctx=Load()), Attribute(value=Name(id='parent_pk', ctx=Load()), attr='name', ctx=Load())], ctx=Load()), orelse=Tuple(elts=[Call(func=Name(id='AutoField', ctx=Load()), args=[], keywords=[]), Constant(value='id')], ctx=Load())))], orelse=[Assign(targets=[Name(id='pk', ctx=Store())], value=Constant(value=False))])], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='pk', ctx=Load()), Name(id='CompositeKey', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='pk_name', ctx=Store())], value=Constant(value='__composite_key__')), Assign(targets=[Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='composite_key', ctx=Store())], value=Constant(value=True))], orelse=[])]), If(test=Compare(left=Name(id='pk', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=False)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='set_primary_key', ctx=Load()), args=[Name(id='pk_name', ctx=Load()), Name(id='pk', ctx=Load())], keywords=[]))], orelse=[]), For(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='field', ctx=Store())], ctx=Store()), iter=Name(id='fields', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='add_field', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='field', ctx=Load())], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='cls', ctx=Load()), Constant(value='__str__')], keywords=[]), Compare(left=Constant(value='__repr__'), ops=[NotIn()], comparators=[Name(id='attrs', ctx=Load())])]), body=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='cls', ctx=Load()), Constant(value='__repr__'), Lambda(args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=BinOp(left=Constant(value='<%s: %s>'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='cls', ctx=Load()), attr='__name__', ctx=Load()), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='__str__', ctx=Load()), args=[], keywords=[])], ctx=Load())))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='exc_name', ctx=Store())], value=BinOp(left=Constant(value='%sDoesNotExist'), op=Mod(), right=Attribute(value=Name(id='cls', ctx=Load()), attr='__name__', ctx=Load()))), Assign(targets=[Name(id='exc_attrs', ctx=Store())], value=Dict(keys=[Constant(value='__module__')], values=[Attribute(value=Name(id='cls', ctx=Load()), attr='__module__', ctx=Load())])), Assign(targets=[Name(id='exception_class', ctx=Store())], value=Call(func=Name(id='type', ctx=Load()), args=[Name(id='exc_name', ctx=Load()), Tuple(elts=[Name(id='DoesNotExist', ctx=Load())], ctx=Load()), Name(id='exc_attrs', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='cls', ctx=Load()), attr='DoesNotExist', ctx=Store())], value=Name(id='exception_class', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='validate_model', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='DeferredForeignKey', ctx=Load()), attr='resolve', ctx=Load()), args=[Name(id='cls', ctx=Load())], keywords=[])), Return(value=Name(id='cls', ctx=Load()))], decorator_list=[]), FunctionDef(name='__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BinOp(left=Constant(value='<Model: %s>'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='__name__', ctx=Load())))], decorator_list=[]), FunctionDef(name='__iter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='iter', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='select', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_by_id', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__setitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='set_by_id', ctx=Load()), args=[Name(id='key', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__delitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='delete_by_id', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__contains__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_by_id', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='self', ctx=Load()), attr='DoesNotExist', ctx=Load()), body=[Return(value=Constant(value=False))])], orelse=[Return(value=Constant(value=True))], finalbody=[])], decorator_list=[]), FunctionDef(name='__len__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='select', ctx=Load()), args=[], keywords=[]), attr='count', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='__bool__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=True))], decorator_list=[]), Assign(targets=[Name(id='__nonzero__', ctx=Store())], value=Name(id='__bool__', ctx=Load())), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Load()), attr='table', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='_BoundModelsContext', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='models'), arg(arg='database'), arg(arg='bind_refs'), arg(arg='bind_backrefs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='models', ctx=Store())], value=Name(id='models', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Store())], value=Name(id='database', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='bind_refs', ctx=Store())], value=Name(id='bind_refs', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='bind_backrefs', ctx=Store())], value=Name(id='bind_backrefs', ctx=Load()))], decorator_list=[]), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_orig_database', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='model', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='models', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_orig_database', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='bind', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='bind_refs', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='bind_backrefs', ctx=Load())], keywords=[keyword(arg='_exclude', value=Call(func=Name(id='set', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='models', ctx=Load())], keywords=[]))]))], orelse=[]), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='models', ctx=Load()))], decorator_list=[]), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exc_type'), arg(arg='exc_val'), arg(arg='exc_tb')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Tuple(elts=[Name(id='model', ctx=Store()), Name(id='db', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='zip', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='models', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_orig_database', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='bind', ctx=Load()), args=[Name(id='db', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='bind_refs', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='bind_backrefs', ctx=Load())], keywords=[keyword(arg='_exclude', value=Call(func=Name(id='set', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='models', ctx=Load())], keywords=[]))]))], orelse=[])], decorator_list=[])], decorator_list=[]), ClassDef(name='Model', bases=[Call(func=Name(id='with_metaclass', ctx=Load()), args=[Name(id='ModelBase', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[])], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[If(test=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='__no_default__'), Constant(value=None)], keywords=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='__data__', ctx=Store())], value=Dict(keys=[], values=[]))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='__data__', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Load()), attr='get_default_dict', ctx=Load()), args=[], keywords=[]))]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_dirty', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='__data__', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='__rel__', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Name(id='k', ctx=Store()), iter=Name(id='kwargs', ctx=Load()), body=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='k', ctx=Load()), Subscript(value=Name(id='kwargs', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='__str__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=IfExp(test=Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=False)]), body=Call(func=Name(id='str', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_pk', ctx=Load())], keywords=[]), orelse=Constant(value='n/a')))], decorator_list=[]), FunctionDef(name='validate_model', args=arguments(posonlyargs=[], args=[arg(arg='cls')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='alias', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='alias')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='ModelAlias', ctx=Load()), args=[Name(id='cls', ctx=Load()), Name(id='alias', ctx=Load())], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='select', args=arguments(posonlyargs=[], args=[arg(arg='cls')], vararg=arg(arg='fields'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='is_default', ctx=Store())], value=UnaryOp(op=Not(), operand=Name(id='fields', ctx=Load()))), If(test=UnaryOp(op=Not(), operand=Name(id='fields', ctx=Load())), body=[Assign(targets=[Name(id='fields', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='sorted_fields', ctx=Load()))], orelse=[]), Return(value=Call(func=Name(id='ModelSelect', ctx=Load()), args=[Name(id='cls', ctx=Load()), Name(id='fields', ctx=Load())], keywords=[keyword(arg='is_default', value=Name(id='is_default', ctx=Load()))]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='_normalize_data', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='data'), arg(arg='kwargs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='normalized', ctx=Store())], value=Dict(keys=[], values=[])), If(test=Name(id='data', ctx=Load()), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='data', ctx=Load()), Name(id='dict', ctx=Load())], keywords=[])), body=[If(test=Name(id='kwargs', ctx=Load()), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='Data cannot be mixed with keyword arguments: %s'), op=Mod(), right=Name(id='data', ctx=Load()))], keywords=[]))], orelse=[]), Return(value=Name(id='data', ctx=Load()))], orelse=[]), For(target=Name(id='key', ctx=Store()), iter=Name(id='data', ctx=Load()), body=[Try(body=[Assign(targets=[Name(id='field', ctx=Store())], value=IfExp(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='key', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[]), body=Name(id='key', ctx=Load()), orelse=Subscript(value=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='combined', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Load())))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='key', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='Unrecognized field name: "%s" in %s.'), op=Mod(), right=Tuple(elts=[Name(id='key', ctx=Load()), Name(id='data', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='field', ctx=Store())], value=Name(id='key', ctx=Load()))])], orelse=[], finalbody=[]), Assign(targets=[Subscript(value=Name(id='normalized', ctx=Load()), slice=Name(id='field', ctx=Load()), ctx=Store())], value=Subscript(value=Name(id='data', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Load()))], orelse=[])], orelse=[]), If(test=Name(id='kwargs', ctx=Load()), body=[For(target=Name(id='key', ctx=Store()), iter=Name(id='kwargs', ctx=Load()), body=[Try(body=[Assign(targets=[Subscript(value=Name(id='normalized', ctx=Load()), slice=Subscript(value=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='combined', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Load()), ctx=Store())], value=Subscript(value=Name(id='kwargs', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='normalized', ctx=Load()), slice=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='cls', ctx=Load()), Name(id='key', ctx=Load())], keywords=[]), ctx=Store())], value=Subscript(value=Name(id='kwargs', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Load()))])], orelse=[], finalbody=[])], orelse=[])], orelse=[]), Return(value=Name(id='normalized', ctx=Load()))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='update', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='__data')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='update'), defaults=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='ModelUpdate', ctx=Load()), args=[Name(id='cls', ctx=Load()), Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='_normalize_data', ctx=Load()), args=[Name(id='__data', ctx=Load()), Name(id='update', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='insert', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='__data')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='insert'), defaults=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='ModelInsert', ctx=Load()), args=[Name(id='cls', ctx=Load()), Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='_normalize_data', ctx=Load()), args=[Name(id='__data', ctx=Load()), Name(id='insert', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='insert_many', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='rows'), arg(arg='fields')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='ModelInsert', ctx=Load()), args=[Name(id='cls', ctx=Load())], keywords=[keyword(arg='insert', value=Name(id='rows', ctx=Load())), keyword(arg='columns', value=Name(id='fields', ctx=Load()))]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='insert_from', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='query'), arg(arg='fields')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='columns', ctx=Store())], value=ListComp(elt=IfExp(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='field', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), body=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='cls', ctx=Load()), Name(id='field', ctx=Load())], keywords=[]), orelse=Name(id='field', ctx=Load())), generators=[comprehension(target=Name(id='field', ctx=Store()), iter=Name(id='fields', ctx=Load()), ifs=[], is_async=0)])), Return(value=Call(func=Name(id='ModelInsert', ctx=Load()), args=[Name(id='cls', ctx=Load())], keywords=[keyword(arg='insert', value=Name(id='query', ctx=Load())), keyword(arg='columns', value=Name(id='columns', ctx=Load()))]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='replace', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='__data')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='insert'), defaults=[Constant(value=None)]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='insert', ctx=Load()), args=[Name(id='__data', ctx=Load())], keywords=[keyword(value=Name(id='insert', ctx=Load()))]), attr='on_conflict', ctx=Load()), args=[Constant(value='REPLACE')], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='replace_many', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='rows'), arg(arg='fields')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='insert_many', ctx=Load()), args=[], keywords=[keyword(arg='rows', value=Name(id='rows', ctx=Load())), keyword(arg='fields', value=Name(id='fields', ctx=Load()))]), attr='on_conflict', ctx=Load()), args=[Constant(value='REPLACE')], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='raw', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='sql')], vararg=arg(arg='params'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='ModelRaw', ctx=Load()), args=[Name(id='cls', ctx=Load()), Name(id='sql', ctx=Load()), Name(id='params', ctx=Load())], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='delete', args=arguments(posonlyargs=[], args=[arg(arg='cls')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='ModelDelete', ctx=Load()), args=[Name(id='cls', ctx=Load())], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='create', args=arguments(posonlyargs=[], args=[arg(arg='cls')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='query'), defaults=[]), body=[Assign(targets=[Name(id='inst', ctx=Store())], value=Call(func=Name(id='cls', ctx=Load()), args=[], keywords=[keyword(value=Name(id='query', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='inst', ctx=Load()), attr='save', ctx=Load()), args=[], keywords=[keyword(arg='force_insert', value=Constant(value=True))])), Return(value=Name(id='inst', ctx=Load()))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='bulk_create', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='model_list'), arg(arg='batch_size')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='batch_size', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='batches', ctx=Store())], value=Call(func=Name(id='chunked', ctx=Load()), args=[Name(id='model_list', ctx=Load()), Name(id='batch_size', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='batches', ctx=Store())], value=List(elts=[Name(id='model_list', ctx=Load())], ctx=Load()))]), Assign(targets=[Name(id='field_names', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='sorted_field_names', ctx=Load())], keywords=[])), If(test=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='auto_increment', ctx=Load()), body=[Assign(targets=[Name(id='pk_name', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load()), attr='name', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='field_names', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='pk_name', ctx=Load())], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Attribute(value=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load()), attr='returning_clause', ctx=Load()), Compare(left=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=False)])]), body=[Assign(targets=[Name(id='pk_fields', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='get_primary_keys', ctx=Load()), args=[], keywords=[]))], orelse=[Assign(targets=[Name(id='pk_fields', ctx=Store())], value=Constant(value=None))]), Assign(targets=[Name(id='fields', ctx=Store())], value=ListComp(elt=Subscript(value=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='fields', ctx=Load()), slice=Name(id='field_name', ctx=Load()), ctx=Load()), generators=[comprehension(target=Name(id='field_name', ctx=Store()), iter=Name(id='field_names', ctx=Load()), ifs=[], is_async=0)])), Assign(targets=[Name(id='attrs', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='field', ctx=Store()), iter=Name(id='fields', ctx=Load()), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='field', ctx=Load()), Name(id='ForeignKeyField', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='attrs', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='field', ctx=Load()), attr='object_id_name', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='attrs', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load())], keywords=[]))])], orelse=[]), For(target=Name(id='batch', ctx=Store()), iter=Name(id='batches', ctx=Load()), body=[Assign(targets=[Name(id='accum', ctx=Store())], value=GeneratorExp(elt=ListComp(elt=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='model', ctx=Load()), Name(id='f', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='f', ctx=Store()), iter=Name(id='attrs', ctx=Load()), ifs=[], is_async=0)]), generators=[comprehension(target=Name(id='model', ctx=Store()), iter=Name(id='batch', ctx=Load()), ifs=[], is_async=0)])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='insert_many', ctx=Load()), args=[Name(id='accum', ctx=Load())], keywords=[keyword(arg='fields', value=Name(id='fields', ctx=Load()))]), attr='execute', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=And(), values=[Name(id='pk_fields', ctx=Load()), Compare(left=Name(id='res', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[For(target=Tuple(elts=[Name(id='row', ctx=Store()), Name(id='model', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='zip', ctx=Load()), args=[Name(id='res', ctx=Load()), Name(id='batch', ctx=Load())], keywords=[]), body=[For(target=Tuple(elts=[Name(id='pk_field', ctx=Store()), Name(id='obj_id', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='zip', ctx=Load()), args=[Name(id='pk_fields', ctx=Load()), Name(id='row', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='model', ctx=Load()), Attribute(value=Name(id='pk_field', ctx=Load()), attr='name', ctx=Load()), Name(id='obj_id', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], orelse=[])], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='bulk_update', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='model_list'), arg(arg='fields'), arg(arg='batch_size')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load()), Name(id='CompositeKey', ctx=Load())], keywords=[]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='bulk_update() is not supported for models with a composite primary key.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='fields', ctx=Store())], value=ListComp(elt=IfExp(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='f', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), body=Subscript(value=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='fields', ctx=Load()), slice=Name(id='f', ctx=Load()), ctx=Load()), orelse=Name(id='f', ctx=Load())), generators=[comprehension(target=Name(id='f', ctx=Store()), iter=Name(id='fields', ctx=Load()), ifs=[], is_async=0)])), Assign(targets=[Name(id='attrs', ctx=Store())], value=ListComp(elt=IfExp(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='field', ctx=Load()), Name(id='ForeignKeyField', ctx=Load())], keywords=[]), body=Attribute(value=Name(id='field', ctx=Load()), attr='object_id_name', ctx=Load()), orelse=Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load())), generators=[comprehension(target=Name(id='field', ctx=Store()), iter=Name(id='fields', ctx=Load()), ifs=[], is_async=0)])), If(test=Compare(left=Name(id='batch_size', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='batches', ctx=Store())], value=Call(func=Name(id='chunked', ctx=Load()), args=[Name(id='model_list', ctx=Load()), Name(id='batch_size', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='batches', ctx=Store())], value=List(elts=[Name(id='model_list', ctx=Load())], ctx=Load()))]), Assign(targets=[Name(id='n', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='pk', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load())), For(target=Name(id='batch', ctx=Store()), iter=Name(id='batches', ctx=Load()), body=[Assign(targets=[Name(id='id_list', ctx=Store())], value=ListComp(elt=Attribute(value=Name(id='model', ctx=Load()), attr='_pk', ctx=Load()), generators=[comprehension(target=Name(id='model', ctx=Store()), iter=Name(id='batch', ctx=Load()), ifs=[], is_async=0)])), Assign(targets=[Name(id='update', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Tuple(elts=[Name(id='field', ctx=Store()), Name(id='attr', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='zip', ctx=Load()), args=[Name(id='fields', ctx=Load()), Name(id='attrs', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='accum', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='model', ctx=Store()), iter=Name(id='batch', ctx=Load()), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='model', ctx=Load()), Name(id='attr', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[])), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='field', ctx=Load()), attr='to_value', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Call(func=Attribute(value=Name(id='pk', ctx=Load()), attr='to_value', ctx=Load()), args=[Attribute(value=Name(id='model', ctx=Load()), attr='_pk', ctx=Load())], keywords=[]), Name(id='value', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='case', ctx=Store())], value=Call(func=Name(id='Case', ctx=Load()), args=[Name(id='pk', ctx=Load()), Name(id='accum', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='update', ctx=Load()), slice=Name(id='field', ctx=Load()), ctx=Store())], value=Name(id='case', ctx=Load()))], orelse=[]), AugAssign(target=Name(id='n', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='update', ctx=Load())], keywords=[]), attr='where', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load()), attr='in_', ctx=Load()), args=[Name(id='id_list', ctx=Load())], keywords=[])], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Name(id='n', ctx=Load()))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='noop', args=arguments(posonlyargs=[], args=[arg(arg='cls')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='NoopModelSelect', ctx=Load()), args=[Name(id='cls', ctx=Load()), Tuple(elts=[], ctx=Load())], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='get', args=arguments(posonlyargs=[], args=[arg(arg='cls')], vararg=arg(arg='query'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='filters'), defaults=[]), body=[Assign(targets=[Name(id='sq', ctx=Store())], value=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='select', ctx=Load()), args=[], keywords=[])), If(test=Name(id='query', ctx=Load()), body=[If(test=BoolOp(op=And(), values=[Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='query', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Name(id='query', ctx=Load()), slice=Constant(value=0), ctx=Load()), Name(id='int', ctx=Load())], keywords=[])]), body=[Assign(targets=[Name(id='sq', ctx=Store())], value=Call(func=Attribute(value=Name(id='sq', ctx=Load()), attr='where', ctx=Load()), args=[Compare(left=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Name(id='query', ctx=Load()), slice=Constant(value=0), ctx=Load())])], keywords=[]))], orelse=[Assign(targets=[Name(id='sq', ctx=Store())], value=Call(func=Attribute(value=Name(id='sq', ctx=Load()), attr='where', ctx=Load()), args=[Starred(value=Name(id='query', ctx=Load()), ctx=Load())], keywords=[]))])], orelse=[]), If(test=Name(id='filters', ctx=Load()), body=[Assign(targets=[Name(id='sq', ctx=Store())], value=Call(func=Attribute(value=Name(id='sq', ctx=Load()), attr='filter', ctx=Load()), args=[], keywords=[keyword(value=Name(id='filters', ctx=Load()))]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='sq', ctx=Load()), attr='get', ctx=Load()), args=[], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='get_or_none', args=arguments(posonlyargs=[], args=[arg(arg='cls')], vararg=arg(arg='query'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='filters'), defaults=[]), body=[Try(body=[Return(value=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='get', ctx=Load()), args=[Starred(value=Name(id='query', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='filters', ctx=Load()))]))], handlers=[ExceptHandler(type=Name(id='DoesNotExist', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='get_by_id', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='pk')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='get', ctx=Load()), args=[Compare(left=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load()), ops=[Eq()], comparators=[Name(id='pk', ctx=Load())])], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='set_by_id', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='key'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='key', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='insert', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[]))], orelse=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), attr='where', ctx=Load()), args=[Compare(left=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load()), ops=[Eq()], comparators=[Name(id='key', ctx=Load())])], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[]))])], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='delete_by_id', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='pk')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='delete', ctx=Load()), args=[], keywords=[]), attr='where', ctx=Load()), args=[Compare(left=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load()), ops=[Eq()], comparators=[Name(id='pk', ctx=Load())])], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='get_or_create', args=arguments(posonlyargs=[], args=[arg(arg='cls')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Name(id='defaults', ctx=Store())], value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='defaults'), Dict(keys=[], values=[])], keywords=[])), Assign(targets=[Name(id='query', ctx=Store())], value=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='select', ctx=Load()), args=[], keywords=[])), For(target=Tuple(elts=[Name(id='field', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='query', ctx=Store())], value=Call(func=Attribute(value=Name(id='query', ctx=Load()), attr='where', ctx=Load()), args=[Compare(left=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='cls', ctx=Load()), Name(id='field', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Name(id='value', ctx=Load())])], keywords=[]))], orelse=[]), Try(body=[Return(value=Tuple(elts=[Call(func=Attribute(value=Name(id='query', ctx=Load()), attr='get', ctx=Load()), args=[], keywords=[]), Constant(value=False)], ctx=Load()))], handlers=[ExceptHandler(type=Attribute(value=Name(id='cls', ctx=Load()), attr='DoesNotExist', ctx=Load()), body=[Try(body=[If(test=Name(id='defaults', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='defaults', ctx=Load())], keywords=[]))], orelse=[]), With(items=[withitem(context_expr=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load()), attr='atomic', ctx=Load()), args=[], keywords=[]))], body=[Return(value=Tuple(elts=[Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='create', ctx=Load()), args=[], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]), Constant(value=True)], ctx=Load()))])], handlers=[ExceptHandler(type=Name(id='IntegrityError', ctx=Load()), name='exc', body=[Try(body=[Return(value=Tuple(elts=[Call(func=Attribute(value=Name(id='query', ctx=Load()), attr='get', ctx=Load()), args=[], keywords=[]), Constant(value=False)], ctx=Load()))], handlers=[ExceptHandler(type=Attribute(value=Name(id='cls', ctx=Load()), attr='DoesNotExist', ctx=Load()), body=[Raise(exc=Name(id='exc', ctx=Load()))])], orelse=[], finalbody=[])])], orelse=[], finalbody=[])])], orelse=[], finalbody=[])], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='filter', args=arguments(posonlyargs=[], args=[arg(arg='cls')], vararg=arg(arg='dq_nodes'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='filters'), defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='select', ctx=Load()), args=[], keywords=[]), attr='filter', ctx=Load()), args=[Starred(value=Name(id='dq_nodes', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='filters', ctx=Load()))]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='get_id', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=False)]), body=[Return(value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load()), attr='safe_name', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), Assign(targets=[Name(id='_pk', ctx=Store())], value=Call(func=Name(id='property', ctx=Load()), args=[Name(id='get_id', ctx=Load())], keywords=[])), FunctionDef(name='_pk', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load()), attr='name', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[Attribute(value=Name(id='_pk', ctx=Load()), attr='setter', ctx=Load())]), FunctionDef(name='_pk_expr', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_pk', ctx=Load())]))], decorator_list=[]), FunctionDef(name='_prune_fields', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field_dict'), arg(arg='only')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='new_data', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Name(id='field', ctx=Store()), iter=Name(id='only', ctx=Load()), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='field', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='field', ctx=Store())], value=Subscript(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Load()), attr='combined', ctx=Load()), slice=Name(id='field', ctx=Load()), ctx=Load()))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load()), ops=[In()], comparators=[Name(id='field_dict', ctx=Load())]), body=[Assign(targets=[Subscript(value=Name(id='new_data', ctx=Load()), slice=Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load()), ctx=Store())], value=Subscript(value=Name(id='field_dict', ctx=Load()), slice=Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load()), ctx=Load()))], orelse=[])], orelse=[]), Return(value=Name(id='new_data', ctx=Load()))], decorator_list=[]), FunctionDef(name='_populate_unsaved_relations', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field_dict')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='foreign_key_field', ctx=Store()), iter=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Load()), attr='refs', ctx=Load()), body=[Assign(targets=[Name(id='foreign_key', ctx=Store())], value=Attribute(value=Name(id='foreign_key_field', ctx=Load()), attr='name', ctx=Load())), Assign(targets=[Name(id='conditions', ctx=Store())], value=BoolOp(op=And(), values=[Compare(left=Name(id='foreign_key', ctx=Load()), ops=[In()], comparators=[Name(id='field_dict', ctx=Load())]), Compare(left=Subscript(value=Name(id='field_dict', ctx=Load()), slice=Name(id='foreign_key', ctx=Load()), ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__rel__', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='foreign_key', ctx=Load())], keywords=[]), ops=[IsNot()], comparators=[Constant(value=None)])])), If(test=Name(id='conditions', ctx=Load()), body=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='foreign_key', ctx=Load()), Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='foreign_key', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Subscript(value=Name(id='field_dict', ctx=Load()), slice=Name(id='foreign_key', ctx=Load()), ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='__data__', ctx=Load()), slice=Name(id='foreign_key', ctx=Load()), ctx=Load()))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='save', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='force_insert'), arg(arg='only')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=None)]), body=[Assign(targets=[Name(id='field_dict', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__data__', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=False)]), body=[Assign(targets=[Name(id='pk_field', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load())), Assign(targets=[Name(id='pk_value', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_pk', ctx=Load()))], orelse=[Assign(targets=[Name(id='pk_field', ctx=Store()), Name(id='pk_value', ctx=Store())], value=Constant(value=None))]), If(test=Compare(left=Name(id='only', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='field_dict', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_prune_fields', ctx=Load()), args=[Name(id='field_dict', ctx=Load()), Name(id='only', ctx=Load())], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Load()), attr='only_save_dirty', ctx=Load()), UnaryOp(op=Not(), operand=Name(id='force_insert', ctx=Load()))]), body=[Assign(targets=[Name(id='field_dict', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_prune_fields', ctx=Load()), args=[Name(id='field_dict', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='dirty_fields', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='field_dict', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dirty', ctx=Load()), attr='clear', ctx=Load()), args=[], keywords=[])), Return(value=Constant(value=False))], orelse=[])], orelse=[])]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_populate_unsaved_relations', ctx=Load()), args=[Name(id='field_dict', ctx=Load())], keywords=[])), Assign(targets=[Name(id='rows', ctx=Store())], value=Constant(value=1)), If(test=BoolOp(op=And(), values=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Load()), attr='auto_increment', ctx=Load()), Compare(left=Name(id='pk_value', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])]), body=[Expr(value=Call(func=Attribute(value=Name(id='field_dict', ctx=Load()), attr='pop', ctx=Load()), args=[Attribute(value=Name(id='pk_field', ctx=Load()), attr='name', ctx=Load()), Constant(value=None)], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='pk_value', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), UnaryOp(op=Not(), operand=Name(id='force_insert', ctx=Load()))]), body=[If(test=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Load()), attr='composite_key', ctx=Load()), body=[For(target=Name(id='pk_part_name', ctx=Store()), iter=Attribute(value=Name(id='pk_field', ctx=Load()), attr='field_names', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='field_dict', ctx=Load()), attr='pop', ctx=Load()), args=[Name(id='pk_part_name', ctx=Load()), Constant(value=None)], keywords=[]))], orelse=[])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='field_dict', ctx=Load()), attr='pop', ctx=Load()), args=[Attribute(value=Name(id='pk_field', ctx=Load()), attr='name', ctx=Load()), Constant(value=None)], keywords=[]))]), If(test=UnaryOp(op=Not(), operand=Name(id='field_dict', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='no data to save!')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='rows', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='update', ctx=Load()), args=[], keywords=[keyword(value=Name(id='field_dict', ctx=Load()))]), attr='where', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_pk_expr', ctx=Load()), args=[], keywords=[])], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=Compare(left=Name(id='pk_field', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='pk', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='insert', ctx=Load()), args=[], keywords=[keyword(value=Name(id='field_dict', ctx=Load()))]), attr='execute', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='pk', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), BoolOp(op=Or(), values=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Load()), attr='auto_increment', ctx=Load()), Compare(left=Name(id='pk_value', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])])]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_pk', ctx=Store())], value=Name(id='pk', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dirty', ctx=Load()), attr='discard', ctx=Load()), args=[Attribute(value=Name(id='pk_field', ctx=Load()), attr='name', ctx=Load())], keywords=[]))], orelse=[])], orelse=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='insert', ctx=Load()), args=[], keywords=[keyword(value=Name(id='field_dict', ctx=Load()))]), attr='execute', ctx=Load()), args=[], keywords=[]))])]), AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_dirty', ctx=Store()), op=Sub(), value=Call(func=Name(id='set', ctx=Load()), args=[Name(id='field_dict', ctx=Load())], keywords=[])), Return(value=Name(id='rows', ctx=Load()))], decorator_list=[]), FunctionDef(name='is_dirty', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='bool', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_dirty', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='dirty_fields', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=ListComp(elt=Name(id='f', ctx=Load()), generators=[comprehension(target=Name(id='f', ctx=Store()), iter=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Load()), attr='sorted_fields', ctx=Load()), ifs=[Compare(left=Attribute(value=Name(id='f', ctx=Load()), attr='name', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_dirty', ctx=Load())])], is_async=0)]))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='dependencies', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='search_nullable')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Assign(targets=[Name(id='model_class', ctx=Store())], value=Call(func=Name(id='type', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Assign(targets=[Name(id='stack', ctx=Store())], value=List(elts=[Tuple(elts=[Call(func=Name(id='type', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), Constant(value=None)], ctx=Load())], ctx=Load())), Assign(targets=[Name(id='seen', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), While(test=Name(id='stack', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='klass', ctx=Store()), Name(id='query', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='stack', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='klass', ctx=Load()), ops=[In()], comparators=[Name(id='seen', ctx=Load())]), body=[Continue()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='seen', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='klass', ctx=Load())], keywords=[])), For(target=Tuple(elts=[Name(id='fk', ctx=Store()), Name(id='rel_model', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='klass', ctx=Load()), attr='_meta', ctx=Load()), attr='backrefs', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='rel_model', ctx=Load()), ops=[Is()], comparators=[Name(id='model_class', ctx=Load())]), Compare(left=Name(id='query', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Compare(left=Name(id='fk', ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='__data__', ctx=Load()), slice=Attribute(value=Attribute(value=Name(id='fk', ctx=Load()), attr='rel_field', ctx=Load()), attr='name', ctx=Load()), ctx=Load())]))], orelse=[Assign(targets=[Name(id='node', ctx=Store())], value=BinOp(left=Name(id='fk', ctx=Load()), op=LShift(), right=Name(id='query', ctx=Load())))]), Assign(targets=[Name(id='subquery', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='rel_model', ctx=Load()), attr='select', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='rel_model', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load())], keywords=[]), attr='where', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[])), If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='fk', ctx=Load()), attr='null', ctx=Load())), Name(id='search_nullable', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='stack', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='rel_model', ctx=Load()), Name(id='subquery', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Yield(value=Tuple(elts=[Name(id='node', ctx=Load()), Name(id='fk', ctx=Load())], ctx=Load())))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='delete_instance', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='recursive'), arg(arg='delete_nullable')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=False)]), body=[If(test=Name(id='recursive', ctx=Load()), body=[Assign(targets=[Name(id='dependencies', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='dependencies', ctx=Load()), args=[Name(id='delete_nullable', ctx=Load())], keywords=[])), For(target=Tuple(elts=[Name(id='query', ctx=Store()), Name(id='fk', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='reversed', ctx=Load()), args=[Call(func=Name(id='list', ctx=Load()), args=[Name(id='dependencies', ctx=Load())], keywords=[])], keywords=[]), body=[Assign(targets=[Name(id='model', ctx=Store())], value=Attribute(value=Name(id='fk', ctx=Load()), attr='model', ctx=Load())), If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='fk', ctx=Load()), attr='null', ctx=Load()), UnaryOp(op=Not(), operand=Name(id='delete_nullable', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='update', ctx=Load()), args=[], keywords=[keyword(value=Dict(keys=[Attribute(value=Name(id='fk', ctx=Load()), attr='name', ctx=Load())], values=[Constant(value=None)]))]), attr='where', ctx=Load()), args=[Name(id='query', ctx=Load())], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='delete', ctx=Load()), args=[], keywords=[]), attr='where', ctx=Load()), args=[Name(id='query', ctx=Load())], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[]))])], orelse=[])], orelse=[]), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='type', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), attr='delete', ctx=Load()), args=[], keywords=[]), attr='where', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_pk_expr', ctx=Load()), args=[], keywords=[])], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='__hash__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='hash', ctx=Load()), args=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='__class__', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_pk', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__eq__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='other', ctx=Load()), attr='__class__', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='__class__', ctx=Load())]), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_pk', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_pk', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='other', ctx=Load()), attr='_pk', ctx=Load())])]))], decorator_list=[]), FunctionDef(name='__ne__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=UnaryOp(op=Not(), operand=Compare(left=Name(id='self', ctx=Load()), ops=[Eq()], comparators=[Name(id='other', ctx=Load())])))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='converter', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='is_fk_expr', ctx=Load())]), body=[Try(body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='Value', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[keyword(arg='converter', value=Attribute(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='state', ctx=Load()), attr='converter', ctx=Load()))])], keywords=[]))], handlers=[ExceptHandler(type=Tuple(elts=[Name(id='TypeError', ctx=Load()), Name(id='ValueError', ctx=Load())], ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='Value', ctx=Load()), args=[Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load()), attr='name', ctx=Load())], keywords=[])], keywords=[keyword(arg='converter', value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load()), attr='db_value', ctx=Load()))])], keywords=[]))], decorator_list=[]), FunctionDef(name='bind', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='database'), arg(arg='bind_refs'), arg(arg='bind_backrefs'), arg(arg='_exclude')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True), Constant(value=True), Constant(value=None)]), body=[Assign(targets=[Name(id='is_different', ctx=Store())], value=Compare(left=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load()), ops=[IsNot()], comparators=[Name(id='database', ctx=Load())])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='set_database', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[])), If(test=BoolOp(op=Or(), values=[Name(id='bind_refs', ctx=Load()), Name(id='bind_backrefs', ctx=Load())]), body=[If(test=Compare(left=Name(id='_exclude', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='_exclude', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='G', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='model_graph', ctx=Load()), args=[], keywords=[keyword(arg='refs', value=Name(id='bind_refs', ctx=Load())), keyword(arg='backrefs', value=Name(id='bind_backrefs', ctx=Load()))])), For(target=Tuple(elts=[Name(id='_', ctx=Store()), Name(id='model', ctx=Store()), Name(id='is_backref', ctx=Store())], ctx=Store()), iter=Name(id='G', ctx=Load()), body=[If(test=Compare(left=Name(id='model', ctx=Load()), ops=[NotIn()], comparators=[Name(id='_exclude', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='set_database', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='_exclude', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='model', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[]), Return(value=Name(id='is_different', ctx=Load()))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='bind_ctx', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='database'), arg(arg='bind_refs'), arg(arg='bind_backrefs')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True), Constant(value=True)]), body=[Return(value=Call(func=Name(id='_BoundModelsContext', ctx=Load()), args=[Tuple(elts=[Name(id='cls', ctx=Load())], ctx=Load()), Name(id='database', ctx=Load()), Name(id='bind_refs', ctx=Load()), Name(id='bind_backrefs', ctx=Load())], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='table_exists', args=arguments(posonlyargs=[], args=[arg(arg='cls')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='M', ctx=Store())], value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load())), Return(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_schema', ctx=Load()), attr='database', ctx=Load()), attr='table_exists', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='M', ctx=Load()), attr='table', ctx=Load()), attr='__name__', ctx=Load()), Attribute(value=Name(id='M', ctx=Load()), attr='schema', ctx=Load())], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='create_table', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='safe')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='options'), defaults=[Constant(value=True)]), body=[If(test=Compare(left=Constant(value='fail_silently'), ops=[In()], comparators=[Name(id='options', ctx=Load())]), body=[Expr(value=Call(func=Name(id='__deprecated__', ctx=Load()), args=[Constant(value='"fail_silently" has been deprecated in favor of "safe" for the create_table() method.')], keywords=[])), Assign(targets=[Name(id='safe', ctx=Store())], value=Call(func=Attribute(value=Name(id='options', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='fail_silently')], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Name(id='safe', ctx=Load()), UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_schema', ctx=Load()), attr='database', ctx=Load()), attr='safe_create_index', ctx=Load())), Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='table_exists', ctx=Load()), args=[], keywords=[])]), body=[Return()], orelse=[]), If(test=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='temporary', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='options', ctx=Load()), attr='setdefault', ctx=Load()), args=[Constant(value='temporary'), Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='temporary', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_schema', ctx=Load()), attr='create_all', ctx=Load()), args=[Name(id='safe', ctx=Load())], keywords=[keyword(value=Name(id='options', ctx=Load()))]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='drop_table', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='safe'), arg(arg='drop_sequences')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='options'), defaults=[Constant(value=True), Constant(value=True)]), body=[If(test=BoolOp(op=And(), values=[Name(id='safe', ctx=Load()), UnaryOp(op=Not(), operand=Attribute(value=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_schema', ctx=Load()), attr='database', ctx=Load()), attr='safe_drop_index', ctx=Load())), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='table_exists', ctx=Load()), args=[], keywords=[]))]), body=[Return()], orelse=[]), If(test=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='temporary', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='options', ctx=Load()), attr='setdefault', ctx=Load()), args=[Constant(value='temporary'), Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='temporary', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_schema', ctx=Load()), attr='drop_all', ctx=Load()), args=[Name(id='safe', ctx=Load()), Name(id='drop_sequences', ctx=Load())], keywords=[keyword(value=Name(id='options', ctx=Load()))]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='truncate_table', args=arguments(posonlyargs=[], args=[arg(arg='cls')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='options'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_schema', ctx=Load()), attr='truncate_table', ctx=Load()), args=[], keywords=[keyword(value=Name(id='options', ctx=Load()))]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='index', args=arguments(posonlyargs=[], args=[arg(arg='cls')], vararg=arg(arg='fields'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Return(value=Call(func=Name(id='ModelIndex', ctx=Load()), args=[Name(id='cls', ctx=Load()), Name(id='fields', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='add_index', args=arguments(posonlyargs=[], args=[arg(arg='cls')], vararg=arg(arg='fields'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='fields', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Name(id='fields', ctx=Load()), slice=Constant(value=0), ctx=Load()), Tuple(elts=[Name(id='SQL', ctx=Load()), Name(id='Index', ctx=Load())], ctx=Load())], keywords=[])]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='indexes', ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Name(id='fields', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='_meta', ctx=Load()), attr='indexes', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='ModelIndex', ctx=Load()), args=[Name(id='cls', ctx=Load()), Name(id='fields', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])], keywords=[]))])], decorator_list=[Name(id='classmethod', ctx=Load())])], decorator_list=[]), ClassDef(name='ModelAlias', bases=[Name(id='Node', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Provide a separate reference to a model in a query.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='alias')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='__dict__', ctx=Load()), slice=Constant(value='model'), ctx=Store())], value=Name(id='model', ctx=Load())), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='__dict__', ctx=Load()), slice=Constant(value='alias'), ctx=Store())], value=Name(id='alias', ctx=Load()))], decorator_list=[]), FunctionDef(name='__getattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='attr')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Assign(targets=[Name(id='obj', ctx=Store())], value=Subscript(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='__dict__', ctx=Load()), slice=Name(id='attr', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Pass()])], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='obj', ctx=Load()), Name(id='ModelDescriptor', ctx=Load())], keywords=[]), body=[Return(value=Call(func=Attribute(value=Name(id='obj', ctx=Load()), attr='__get__', ctx=Load()), args=[Constant(value=None), Name(id='self', ctx=Load())], keywords=[]))], orelse=[])], finalbody=[]), Assign(targets=[Name(id='model_attr', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), Name(id='attr', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='model_attr', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='__dict__', ctx=Load()), slice=Name(id='attr', ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Name(id='FieldAlias', ctx=Load()), attr='create', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='model_attr', ctx=Load())], keywords=[])), Return(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='__dict__', ctx=Load()), slice=Name(id='attr', ctx=Load()), ctx=Load()))], orelse=[]), Return(value=Name(id='model_attr', ctx=Load()))], decorator_list=[]), FunctionDef(name='__setattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='attr'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Call(func=Name(id='AttributeError', ctx=Load()), args=[Constant(value='Cannot set attributes on model aliases.')], keywords=[]))], decorator_list=[]), FunctionDef(name='get_field_aliases', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=ListComp(elt=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='n', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='n', ctx=Store()), iter=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='sorted_field_names', ctx=Load()), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='select', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='selection'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Name(id='selection', ctx=Load())), body=[Assign(targets=[Name(id='selection', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_field_aliases', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='ModelSelect', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='selection', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), args=[], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope', ctx=Load()), ops=[Eq()], comparators=[Name(id='SCOPE_VALUES', ctx=Load())]), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load())], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='alias', ctx=Load()), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='alias_manager', ctx=Load()), slice=Name(id='self', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='alias', ctx=Load()))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope', ctx=Load()), ops=[Eq()], comparators=[Name(id='SCOPE_SOURCE', ctx=Load())]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='entity', ctx=Load())], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value=' AS ')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Name(id='Entity', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='alias_manager', ctx=Load()), slice=Name(id='self', ctx=Load()), ctx=Load())], keywords=[])], keywords=[]))], orelse=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='Entity', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='alias_manager', ctx=Load()), slice=Name(id='self', ctx=Load()), ctx=Load())], keywords=[])], keywords=[]))])], decorator_list=[])], decorator_list=[]), ClassDef(name='FieldAlias', bases=[Name(id='Field', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='source'), arg(arg='field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='source', ctx=Store())], value=Name(id='source', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Store())], value=Attribute(value=Name(id='source', ctx=Load()), attr='model', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Store())], value=Name(id='field', ctx=Load()))], decorator_list=[]), FunctionDef(name='create', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='source'), arg(arg='field')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[ClassDef(name='_FieldAlias', bases=[Name(id='cls', ctx=Load()), Call(func=Name(id='type', ctx=Load()), args=[Name(id='field', ctx=Load())], keywords=[])], keywords=[], body=[Pass()], decorator_list=[]), Return(value=Call(func=Name(id='_FieldAlias', ctx=Load()), args=[Name(id='source', ctx=Load()), Name(id='field', ctx=Load())], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='clone', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='FieldAlias', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='source', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='adapt', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), attr='adapt', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='python_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), attr='python_value', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='db_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), attr='db_value', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__getattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='attr')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=IfExp(test=Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Constant(value='model')]), body=Attribute(value=Name(id='self', ctx=Load()), attr='source', ctx=Load()), orelse=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), Name(id='attr', ctx=Load())], keywords=[])))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='Column', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='source', ctx=Load()), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), attr='column_name', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[])], decorator_list=[]), FunctionDef(name='sort_models', args=arguments(posonlyargs=[], args=[arg(arg='models')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='models', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[Name(id='models', ctx=Load())], keywords=[])), Assign(targets=[Name(id='seen', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='ordering', ctx=Store())], value=List(elts=[], ctx=Load())), FunctionDef(name='dfs', args=arguments(posonlyargs=[], args=[arg(arg='model')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='model', ctx=Load()), ops=[In()], comparators=[Name(id='models', ctx=Load())]), Compare(left=Name(id='model', ctx=Load()), ops=[NotIn()], comparators=[Name(id='seen', ctx=Load())])]), body=[Expr(value=Call(func=Attribute(value=Name(id='seen', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='model', ctx=Load())], keywords=[])), For(target=Tuple(elts=[Name(id='foreign_key', ctx=Store()), Name(id='rel_model', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='refs', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='foreign_key', ctx=Load()), attr='deferred', ctx=Load())), body=[Expr(value=Call(func=Name(id='dfs', ctx=Load()), args=[Name(id='rel_model', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), If(test=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='depends_on', ctx=Load()), body=[For(target=Name(id='dependency', ctx=Store()), iter=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='depends_on', ctx=Load()), body=[Expr(value=Call(func=Name(id='dfs', ctx=Load()), args=[Name(id='dependency', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='ordering', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='model', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), Assign(targets=[Name(id='names', ctx=Store())], value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='m')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Tuple(elts=[Attribute(value=Attribute(value=Name(id='m', ctx=Load()), attr='_meta', ctx=Load()), attr='name', ctx=Load()), Attribute(value=Attribute(value=Name(id='m', ctx=Load()), attr='_meta', ctx=Load()), attr='table_name', ctx=Load())], ctx=Load()))), For(target=Name(id='m', ctx=Store()), iter=Call(func=Name(id='sorted', ctx=Load()), args=[Name(id='models', ctx=Load())], keywords=[keyword(arg='key', value=Name(id='names', ctx=Load()))]), body=[Expr(value=Call(func=Name(id='dfs', ctx=Load()), args=[Name(id='m', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='ordering', ctx=Load()))], decorator_list=[]), ClassDef(name='_ModelQueryHelper', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='default_row_type', ctx=Store())], value=Attribute(value=Name(id='ROW', ctx=Load()), attr='MODEL', ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='_ModelQueryHelper', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load())), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load()))], orelse=[])], decorator_list=[]), FunctionDef(name='objects', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='constructor')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_row_type', ctx=Store())], value=Attribute(value=Name(id='ROW', ctx=Load()), attr='CONSTRUCTOR', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_constructor', ctx=Store())], value=IfExp(test=Compare(left=Name(id='constructor', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), orelse=Name(id='constructor', ctx=Load())))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='_get_cursor_wrapper', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='row_type', ctx=Store())], value=BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_row_type', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='default_row_type', ctx=Load())])), If(test=Compare(left=Name(id='row_type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='ROW', ctx=Load()), attr='MODEL', ctx=Load())]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_model_cursor_wrapper', ctx=Load()), args=[Name(id='cursor', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='row_type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='ROW', ctx=Load()), attr='DICT', ctx=Load())]), body=[Return(value=Call(func=Name(id='ModelDictCursorWrapper', ctx=Load()), args=[Name(id='cursor', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='row_type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='ROW', ctx=Load()), attr='TUPLE', ctx=Load())]), body=[Return(value=Call(func=Name(id='ModelTupleCursorWrapper', ctx=Load()), args=[Name(id='cursor', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='row_type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='ROW', ctx=Load()), attr='NAMED_TUPLE', ctx=Load())]), body=[Return(value=Call(func=Name(id='ModelNamedTupleCursorWrapper', ctx=Load()), args=[Name(id='cursor', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='row_type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='ROW', ctx=Load()), attr='CONSTRUCTOR', ctx=Load())]), body=[Return(value=Call(func=Name(id='ModelObjectCursorWrapper', ctx=Load()), args=[Name(id='cursor', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_constructor', ctx=Load())], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='Unrecognized row type: "%s".'), op=Mod(), right=Name(id='row_type', ctx=Load()))], keywords=[]))])])])])])], decorator_list=[]), FunctionDef(name='_get_model_cursor_wrapper', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='ModelObjectCursorWrapper', ctx=Load()), args=[Name(id='cursor', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), List(elts=[], ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='ModelRaw', bases=[Name(id='_ModelQueryHelper', ctx=Load()), Name(id='RawQuery', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='sql'), arg(arg='params')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Store())], value=Name(id='model', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Store())], value=Tuple(elts=[], ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ModelRaw', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(arg='sql', value=Name(id='sql', ctx=Load())), keyword(arg='params', value=Name(id='params', ctx=Load())), keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='get', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Subscript(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='IndexError', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='sql', ctx=Store()), Name(id='params', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='sql', ctx=Load()), args=[], keywords=[])), Raise(exc=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='DoesNotExist', ctx=Load()), args=[BinOp(left=Constant(value='%s instance matching query does not exist:\nSQL: %s\nParams: %s'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), Name(id='sql', ctx=Load()), Name(id='params', ctx=Load())], ctx=Load()))], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[])], decorator_list=[]), ClassDef(name='BaseModelSelect', bases=[Name(id='_ModelQueryHelper', ctx=Load())], keywords=[], body=[FunctionDef(name='union_all', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='ModelCompoundSelectQuery', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), Name(id='self', ctx=Load()), Constant(value='UNION ALL'), Name(id='rhs', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='__add__', ctx=Store())], value=Name(id='union_all', ctx=Load())), FunctionDef(name='union', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='ModelCompoundSelectQuery', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), Name(id='self', ctx=Load()), Constant(value='UNION'), Name(id='rhs', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='__or__', ctx=Store())], value=Name(id='union', ctx=Load())), FunctionDef(name='intersect', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='ModelCompoundSelectQuery', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), Name(id='self', ctx=Load()), Constant(value='INTERSECT'), Name(id='rhs', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='__and__', ctx=Store())], value=Name(id='intersect', ctx=Load())), FunctionDef(name='except_', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='ModelCompoundSelectQuery', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), Name(id='self', ctx=Load()), Constant(value='EXCEPT'), Name(id='rhs', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='__sub__', ctx=Store())], value=Name(id='except_', ctx=Load())), FunctionDef(name='__iter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='iter', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='prefetch', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='subqueries'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Return(value=Call(func=Name(id='prefetch', ctx=Load()), args=[Name(id='self', ctx=Load()), Starred(value=Name(id='subqueries', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='get', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='clone', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='paginate', ctx=Load()), args=[Constant(value=1), Constant(value=1)], keywords=[])), Assign(targets=[Attribute(value=Name(id='clone', ctx=Load()), attr='_cursor_wrapper', ctx=Store())], value=Constant(value=None)), Try(body=[Return(value=Subscript(value=Call(func=Attribute(value=Name(id='clone', ctx=Load()), attr='execute', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='IndexError', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='sql', ctx=Store()), Name(id='params', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='clone', ctx=Load()), attr='sql', ctx=Load()), args=[], keywords=[])), Raise(exc=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='DoesNotExist', ctx=Load()), args=[BinOp(left=Constant(value='%s instance matching query does not exist:\nSQL: %s\nParams: %s'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='clone', ctx=Load()), attr='model', ctx=Load()), Name(id='sql', ctx=Load()), Name(id='params', ctx=Load())], ctx=Load()))], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[]), FunctionDef(name='get_or_none', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Try(body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get', ctx=Load()), args=[], keywords=[keyword(arg='database', value=Name(id='database', ctx=Load()))]))], handlers=[ExceptHandler(type=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='DoesNotExist', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], decorator_list=[]), FunctionDef(name='group_by', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='columns'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='grouping', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='column', ctx=Store()), iter=Name(id='columns', ctx=Load()), body=[If(test=Call(func=Name(id='is_model', ctx=Load()), args=[Name(id='column', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='grouping', ctx=Load()), attr='extend', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='column', ctx=Load()), attr='_meta', ctx=Load()), attr='sorted_fields', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='column', ctx=Load()), Name(id='Table', ctx=Load())], keywords=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='column', ctx=Load()), attr='_columns', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Cannot pass a table to group_by() that does not have columns explicitly declared.')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='grouping', ctx=Load()), attr='extend', ctx=Load()), args=[ListComp(elt=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='column', ctx=Load()), Name(id='col_name', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='col_name', ctx=Store()), iter=Attribute(value=Name(id='column', ctx=Load()), attr='_columns', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='grouping', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='column', ctx=Load())], keywords=[]))])])], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_group_by', ctx=Store())], value=Name(id='grouping', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())])], decorator_list=[]), ClassDef(name='ModelCompoundSelectQuery', bases=[Name(id='BaseModelSelect', ctx=Load()), Name(id='CompoundSelectQuery', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Store())], value=Name(id='model', ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ModelCompoundSelectQuery', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='_get_model_cursor_wrapper', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='lhs', ctx=Load()), attr='_get_model_cursor_wrapper', ctx=Load()), args=[Name(id='cursor', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), FunctionDef(name='_normalize_model_select', args=arguments(posonlyargs=[], args=[arg(arg='fields_or_models')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='fields', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='fm', ctx=Store()), iter=Name(id='fields_or_models', ctx=Load()), body=[If(test=Call(func=Name(id='is_model', ctx=Load()), args=[Name(id='fm', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='fields', ctx=Load()), attr='extend', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='fm', ctx=Load()), attr='_meta', ctx=Load()), attr='sorted_fields', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='fm', ctx=Load()), Name(id='ModelAlias', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='fields', ctx=Load()), attr='extend', ctx=Load()), args=[Call(func=Attribute(value=Name(id='fm', ctx=Load()), attr='get_field_aliases', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='fm', ctx=Load()), Name(id='Table', ctx=Load())], keywords=[]), Attribute(value=Name(id='fm', ctx=Load()), attr='_columns', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='fields', ctx=Load()), attr='extend', ctx=Load()), args=[ListComp(elt=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='fm', ctx=Load()), Name(id='col', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='col', ctx=Store()), iter=Attribute(value=Name(id='fm', ctx=Load()), attr='_columns', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='fields', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='fm', ctx=Load())], keywords=[]))])])])], orelse=[]), Return(value=Name(id='fields', ctx=Load()))], decorator_list=[]), ClassDef(name='ModelSelect', bases=[Name(id='BaseModelSelect', ctx=Load()), Name(id='Select', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='fields_or_models'), arg(arg='is_default')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='_join_ctx', ctx=Store())], value=Name(id='model', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_joins', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_is_default', ctx=Store())], value=Name(id='is_default', ctx=Load())), Assign(targets=[Name(id='fields', ctx=Store())], value=Call(func=Name(id='_normalize_model_select', ctx=Load()), args=[Name(id='fields_or_models', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ModelSelect', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[List(elts=[Name(id='model', ctx=Load())], ctx=Load()), Name(id='fields', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='clone', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='clone', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ModelSelect', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='clone', ctx=Load()), args=[], keywords=[])), If(test=Attribute(value=Name(id='clone', ctx=Load()), attr='_joins', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='clone', ctx=Load()), attr='_joins', ctx=Store())], value=Call(func=Name(id='dict', ctx=Load()), args=[Attribute(value=Name(id='clone', ctx=Load()), attr='_joins', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='clone', ctx=Load()))], decorator_list=[]), FunctionDef(name='select', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='fields_or_models'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=Or(), values=[Name(id='fields_or_models', ctx=Load()), UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_is_default', ctx=Load()))]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_is_default', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='fields', ctx=Store())], value=Call(func=Name(id='_normalize_model_select', ctx=Load()), args=[Name(id='fields_or_models', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ModelSelect', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='select', ctx=Load()), args=[Starred(value=Name(id='fields', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='select_extend', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='columns'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_is_default', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='fields', ctx=Store())], value=Call(func=Name(id='_normalize_model_select', ctx=Load()), args=[Name(id='columns', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ModelSelect', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='select_extend', ctx=Load()), args=[Starred(value=Name(id='fields', ctx=Load()), ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='switch', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_join_ctx', ctx=Store())], value=IfExp(test=Compare(left=Name(id='ctx', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), orelse=Name(id='ctx', ctx=Load()))), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='_get_model', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='src')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='is_model', ctx=Load()), args=[Name(id='src', ctx=Load())], keywords=[]), body=[Return(value=Tuple(elts=[Name(id='src', ctx=Load()), Constant(value=True)], ctx=Load()))], orelse=[If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='src', ctx=Load()), Name(id='Table', ctx=Load())], keywords=[]), Attribute(value=Name(id='src', ctx=Load()), attr='_model', ctx=Load())]), body=[Return(value=Tuple(elts=[Attribute(value=Name(id='src', ctx=Load()), attr='_model', ctx=Load()), Constant(value=False)], ctx=Load()))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='src', ctx=Load()), Name(id='ModelAlias', ctx=Load())], keywords=[]), body=[Return(value=Tuple(elts=[Attribute(value=Name(id='src', ctx=Load()), attr='model', ctx=Load()), Constant(value=False)], ctx=Load()))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='src', ctx=Load()), Name(id='ModelSelect', ctx=Load())], keywords=[]), body=[Return(value=Tuple(elts=[Attribute(value=Name(id='src', ctx=Load()), attr='model', ctx=Load()), Constant(value=False)], ctx=Load()))], orelse=[])])])]), Return(value=Tuple(elts=[Constant(value=None), Constant(value=False)], ctx=Load()))], decorator_list=[]), FunctionDef(name='_normalize_join', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='src'), arg(arg='dest'), arg(arg='on'), arg(arg='attr')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='on_alias', ctx=Store())], value=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='on', ctx=Load()), Name(id='Alias', ctx=Load())], keywords=[])), If(test=Name(id='on_alias', ctx=Load()), body=[Assign(targets=[Name(id='attr', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='attr', ctx=Load()), Attribute(value=Name(id='on', ctx=Load()), attr='_alias', ctx=Load())])), Assign(targets=[Name(id='on', ctx=Store())], value=Call(func=Attribute(value=Name(id='on', ctx=Load()), attr='alias', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Tuple(elts=[Name(id='src_model', ctx=Store()), Name(id='src_is_model', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_model', ctx=Load()), args=[Name(id='src', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='dest_model', ctx=Store()), Name(id='dest_is_model', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_model', ctx=Load()), args=[Name(id='dest', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Name(id='src_model', ctx=Load()), Name(id='dest_model', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_join_ctx', ctx=Store())], value=Name(id='dest', ctx=Load())), Assign(targets=[Name(id='constructor', ctx=Store())], value=Name(id='dest_model', ctx=Load())), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=BoolOp(op=And(), values=[Name(id='src_is_model', ctx=Load()), Name(id='dest_is_model', ctx=Load())])), Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='on', ctx=Load()), Name(id='Column', ctx=Load())], keywords=[])]), body=[If(test=Compare(left=Attribute(value=Name(id='on', ctx=Load()), attr='source', ctx=Load()), ops=[Is()], comparators=[Name(id='src', ctx=Load())]), body=[Assign(targets=[Name(id='to_field', ctx=Store())], value=Subscript(value=Attribute(value=Attribute(value=Name(id='src_model', ctx=Load()), attr='_meta', ctx=Load()), attr='columns', ctx=Load()), slice=Attribute(value=Name(id='on', ctx=Load()), attr='name', ctx=Load()), ctx=Load()))], orelse=[If(test=Compare(left=Attribute(value=Name(id='on', ctx=Load()), attr='source', ctx=Load()), ops=[Is()], comparators=[Name(id='dest', ctx=Load())]), body=[Assign(targets=[Name(id='to_field', ctx=Store())], value=Subscript(value=Attribute(value=Attribute(value=Name(id='dest_model', ctx=Load()), attr='_meta', ctx=Load()), attr='columns', ctx=Load()), slice=Attribute(value=Name(id='on', ctx=Load()), attr='name', ctx=Load()), ctx=Load()))], orelse=[Raise(exc=Call(func=Name(id='AttributeError', ctx=Load()), args=[BinOp(left=Constant(value='"on" clause Column %s does not belong to %s or %s.'), op=Mod(), right=Tuple(elts=[Name(id='on', ctx=Load()), Name(id='src_model', ctx=Load()), Name(id='dest_model', ctx=Load())], ctx=Load()))], keywords=[]))])]), Assign(targets=[Name(id='on', ctx=Store())], value=Constant(value=None))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='on', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='to_field', ctx=Store())], value=Name(id='on', ctx=Load())), Assign(targets=[Name(id='on', ctx=Store())], value=Constant(value=None))], orelse=[Assign(targets=[Name(id='to_field', ctx=Store())], value=Constant(value=None))])]), Assign(targets=[Tuple(elts=[Name(id='fk_field', ctx=Store()), Name(id='is_backref', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_generate_on_clause', ctx=Load()), args=[Name(id='src_model', ctx=Load()), Name(id='dest_model', ctx=Load()), Name(id='to_field', ctx=Load()), Name(id='on', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='on', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='src_attr', ctx=Store())], value=IfExp(test=Name(id='src_is_model', ctx=Load()), body=Constant(value='name'), orelse=Constant(value='column_name'))), Assign(targets=[Name(id='dest_attr', ctx=Store())], value=IfExp(test=Name(id='dest_is_model', ctx=Load()), body=Constant(value='name'), orelse=Constant(value='column_name'))), If(test=Name(id='is_backref', ctx=Load()), body=[Assign(targets=[Name(id='lhs', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='dest', ctx=Load()), Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='fk_field', ctx=Load()), Name(id='dest_attr', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='rhs', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='src', ctx=Load()), Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='fk_field', ctx=Load()), attr='rel_field', ctx=Load()), Name(id='src_attr', ctx=Load())], keywords=[])], keywords=[]))], orelse=[Assign(targets=[Name(id='lhs', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='src', ctx=Load()), Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='fk_field', ctx=Load()), Name(id='src_attr', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='rhs', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='dest', ctx=Load()), Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='fk_field', ctx=Load()), attr='rel_field', ctx=Load()), Name(id='dest_attr', ctx=Load())], keywords=[])], keywords=[]))]), Assign(targets=[Name(id='on', ctx=Store())], value=Compare(left=Name(id='lhs', ctx=Load()), ops=[Eq()], comparators=[Name(id='rhs', ctx=Load())]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='attr', ctx=Load())), body=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='fk_field', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), UnaryOp(op=Not(), operand=Name(id='is_backref', ctx=Load()))]), body=[Assign(targets=[Name(id='attr', ctx=Store())], value=Attribute(value=Name(id='fk_field', ctx=Load()), attr='name', ctx=Load()))], orelse=[Assign(targets=[Name(id='attr', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='dest_model', ctx=Load()), attr='_meta', ctx=Load()), attr='name', ctx=Load()))])], orelse=[If(test=BoolOp(op=And(), values=[Name(id='on_alias', ctx=Load()), Compare(left=Name(id='fk_field', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='fk_field', ctx=Load()), attr='object_id_name', ctx=Load())]), UnaryOp(op=Not(), operand=Name(id='is_backref', ctx=Load()))]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='Cannot assign join alias to "%s", as this attribute is the object_id_name for the foreign-key field "%s"'), op=Mod(), right=Tuple(elts=[Name(id='attr', ctx=Load()), Name(id='fk_field', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[])])], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='dest', ctx=Load()), Name(id='Source', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='constructor', ctx=Store())], value=Name(id='dict', ctx=Load())), Assign(targets=[Name(id='attr', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='attr', ctx=Load()), Attribute(value=Name(id='dest', ctx=Load()), attr='_alias', ctx=Load())])), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='attr', ctx=Load())), Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='dest', ctx=Load()), Name(id='Table', ctx=Load())], keywords=[])]), body=[Assign(targets=[Name(id='attr', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='attr', ctx=Load()), Attribute(value=Name(id='dest', ctx=Load()), attr='__name__', ctx=Load())]))], orelse=[])], orelse=[])]), Return(value=Tuple(elts=[Name(id='on', ctx=Load()), Name(id='attr', ctx=Load()), Name(id='constructor', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='_generate_on_clause', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='src'), arg(arg='dest'), arg(arg='to_field'), arg(arg='on')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[Assign(targets=[Name(id='meta', ctx=Store())], value=Attribute(value=Name(id='src', ctx=Load()), attr='_meta', ctx=Load())), Assign(targets=[Name(id='is_backref', ctx=Store()), Name(id='fk_fields', ctx=Store())], value=Constant(value=False)), If(test=Compare(left=Name(id='dest', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='meta', ctx=Load()), attr='model_refs', ctx=Load())]), body=[Assign(targets=[Name(id='fk_fields', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='meta', ctx=Load()), attr='model_refs', ctx=Load()), slice=Name(id='dest', ctx=Load()), ctx=Load()))], orelse=[If(test=Compare(left=Name(id='dest', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='meta', ctx=Load()), attr='model_backrefs', ctx=Load())]), body=[Assign(targets=[Name(id='fk_fields', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='meta', ctx=Load()), attr='model_backrefs', ctx=Load()), slice=Name(id='dest', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='is_backref', ctx=Store())], value=Constant(value=True))], orelse=[])]), If(test=UnaryOp(op=Not(), operand=Name(id='fk_fields', ctx=Load())), body=[If(test=Compare(left=Name(id='on', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Tuple(elts=[Constant(value=None), Constant(value=False)], ctx=Load()))], orelse=[]), Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='Unable to find foreign key between %s and %s. Please specify an explicit join condition.'), op=Mod(), right=Tuple(elts=[Name(id='src', ctx=Load()), Name(id='dest', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[If(test=Compare(left=Name(id='to_field', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='target', ctx=Store())], value=IfExp(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='to_field', ctx=Load()), Name(id='FieldAlias', ctx=Load())], keywords=[]), body=Attribute(value=Name(id='to_field', ctx=Load()), attr='field', ctx=Load()), orelse=Name(id='to_field', ctx=Load()))), Assign(targets=[Name(id='fk_fields', ctx=Store())], value=ListComp(elt=Name(id='f', ctx=Load()), generators=[comprehension(target=Name(id='f', ctx=Store()), iter=Name(id='fk_fields', ctx=Load()), ifs=[BoolOp(op=Or(), values=[Compare(left=Name(id='f', ctx=Load()), ops=[Is()], comparators=[Name(id='target', ctx=Load())]), BoolOp(op=And(), values=[Name(id='is_backref', ctx=Load()), Compare(left=Attribute(value=Name(id='f', ctx=Load()), attr='rel_field', ctx=Load()), ops=[Is()], comparators=[Name(id='to_field', ctx=Load())])])])], is_async=0)]))], orelse=[])]), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='fk_fields', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), body=[Return(value=Tuple(elts=[Subscript(value=Name(id='fk_fields', ctx=Load()), slice=Constant(value=0), ctx=Load()), Name(id='is_backref', ctx=Load())], ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='on', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[For(target=Name(id='fk', ctx=Store()), iter=Name(id='fk_fields', ctx=Load()), body=[If(test=Compare(left=Attribute(value=Name(id='fk', ctx=Load()), attr='name', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Attribute(value=Name(id='dest', ctx=Load()), attr='_meta', ctx=Load()), attr='name', ctx=Load())]), body=[Return(value=Tuple(elts=[Name(id='fk', ctx=Load()), Name(id='is_backref', ctx=Load())], ctx=Load()))], orelse=[])], orelse=[]), Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='More than one foreign key between %s and %s. Please specify which you are joining on.'), op=Mod(), right=Tuple(elts=[Name(id='src', ctx=Load()), Name(id='dest', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='to_field', ctx=Store())], value=Constant(value=None)), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='on', ctx=Load()), Name(id='Expression', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='lhs', ctx=Store()), Name(id='rhs', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='on', ctx=Load()), attr='lhs', ctx=Load()), Attribute(value=Name(id='on', ctx=Load()), attr='rhs', ctx=Load())], ctx=Load())), Assign(targets=[Name(id='fk_set', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[Name(id='fk_fields', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='lhs', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='lhs_f', ctx=Store())], value=IfExp(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='lhs', ctx=Load()), Name(id='FieldAlias', ctx=Load())], keywords=[]), body=Attribute(value=Name(id='lhs', ctx=Load()), attr='field', ctx=Load()), orelse=Name(id='lhs', ctx=Load()))), If(test=Compare(left=Name(id='lhs_f', ctx=Load()), ops=[In()], comparators=[Name(id='fk_set', ctx=Load())]), body=[Assign(targets=[Name(id='to_field', ctx=Store())], value=Name(id='lhs_f', ctx=Load()))], orelse=[])], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='rhs', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='rhs_f', ctx=Store())], value=IfExp(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='rhs', ctx=Load()), Name(id='FieldAlias', ctx=Load())], keywords=[]), body=Attribute(value=Name(id='rhs', ctx=Load()), attr='field', ctx=Load()), orelse=Name(id='rhs', ctx=Load()))), If(test=Compare(left=Name(id='rhs_f', ctx=Load()), ops=[In()], comparators=[Name(id='fk_set', ctx=Load())]), body=[Assign(targets=[Name(id='to_field', ctx=Store())], value=Name(id='rhs_f', ctx=Load()))], orelse=[])], orelse=[])])], orelse=[]), Return(value=Tuple(elts=[Name(id='to_field', ctx=Load()), Constant(value=False)], ctx=Load()))], decorator_list=[]), FunctionDef(name='join', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dest'), arg(arg='join_type'), arg(arg='on'), arg(arg='src'), arg(arg='attr')], kwonlyargs=[], kw_defaults=[], defaults=[Attribute(value=Name(id='JOIN', ctx=Load()), attr='INNER', ctx=Load()), Constant(value=None), Constant(value=None), Constant(value=None)]), body=[Assign(targets=[Name(id='src', ctx=Store())], value=IfExp(test=Compare(left=Name(id='src', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=Attribute(value=Name(id='self', ctx=Load()), attr='_join_ctx', ctx=Load()), orelse=Name(id='src', ctx=Load()))), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='join_type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='JOIN', ctx=Load()), attr='LATERAL', ctx=Load())]), Compare(left=Name(id='join_type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='JOIN', ctx=Load()), attr='LEFT_LATERAL', ctx=Load())])]), body=[Assign(targets=[Name(id='on', ctx=Store())], value=Constant(value=True))], orelse=[If(test=Compare(left=Name(id='join_type', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='JOIN', ctx=Load()), attr='CROSS', ctx=Load())]), body=[Assign(targets=[Tuple(elts=[Name(id='on', ctx=Store()), Name(id='attr', ctx=Store()), Name(id='constructor', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_normalize_join', ctx=Load()), args=[Name(id='src', ctx=Load()), Name(id='dest', ctx=Load()), Name(id='on', ctx=Load()), Name(id='attr', ctx=Load())], keywords=[])), If(test=Name(id='attr', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_joins', ctx=Load()), attr='setdefault', ctx=Load()), args=[Name(id='src', ctx=Load()), List(elts=[], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_joins', ctx=Load()), slice=Name(id='src', ctx=Load()), ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='dest', ctx=Load()), Name(id='attr', ctx=Load()), Name(id='constructor', ctx=Load()), Name(id='join_type', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[])], orelse=[If(test=Compare(left=Name(id='on', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Cannot specify on clause with cross join.')], keywords=[]))], orelse=[])])]), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_from_list', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='No sources to join on.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='item', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_from_list', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_from_list', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='Join', ctx=Load()), args=[Name(id='item', ctx=Load()), Name(id='dest', ctx=Load()), Name(id='join_type', ctx=Load()), Name(id='on', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='left_outer_join', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dest'), arg(arg='on'), arg(arg='src'), arg(arg='attr')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None), Constant(value=None)]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dest', ctx=Load()), Attribute(value=Name(id='JOIN', ctx=Load()), attr='LEFT_OUTER', ctx=Load()), Name(id='on', ctx=Load()), Name(id='src', ctx=Load()), Name(id='attr', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='join_from', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='src'), arg(arg='dest'), arg(arg='join_type'), arg(arg='on'), arg(arg='attr')], kwonlyargs=[], kw_defaults=[], defaults=[Attribute(value=Name(id='JOIN', ctx=Load()), attr='INNER', ctx=Load()), Constant(value=None), Constant(value=None)]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dest', ctx=Load()), Name(id='join_type', ctx=Load()), Name(id='on', ctx=Load()), Name(id='src', ctx=Load()), Name(id='attr', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_get_model_cursor_wrapper', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_from_list', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_joins', ctx=Load()))]), body=[Return(value=Call(func=Name(id='ModelObjectCursorWrapper', ctx=Load()), args=[Name(id='cursor', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='ModelCursorWrapper', ctx=Load()), args=[Name(id='cursor', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_from_list', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_joins', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='ensure_join', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='lm'), arg(arg='rm'), arg(arg='on')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='join_kwargs'), defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='join_ctx', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_join_ctx', ctx=Load())), For(target=Tuple(elts=[Name(id='dest', ctx=Store()), Name(id='_', ctx=Store()), Name(id='constructor', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_joins', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='lm', ctx=Load()), List(elts=[], ctx=Load())], keywords=[]), body=[If(test=Compare(left=Name(id='dest', ctx=Load()), ops=[Eq()], comparators=[Name(id='rm', ctx=Load())]), body=[Return(value=Name(id='self', ctx=Load()))], orelse=[])], orelse=[]), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='switch', ctx=Load()), args=[Name(id='lm', ctx=Load())], keywords=[]), attr='join', ctx=Load()), args=[Name(id='rm', ctx=Load())], keywords=[keyword(arg='on', value=Name(id='on', ctx=Load())), keyword(value=Name(id='join_kwargs', ctx=Load()))]), attr='switch', ctx=Load()), args=[Name(id='join_ctx', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='convert_dict_to_node', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='qdict')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='accum', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='joins', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='fks', ctx=Store())], value=Tuple(elts=[Name(id='ForeignKeyField', ctx=Load()), Name(id='BackrefAccessor', ctx=Load())], ctx=Load())), For(target=Tuple(elts=[Name(id='key', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='sorted', ctx=Load()), args=[Call(func=Attribute(value=Name(id='qdict', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[])], keywords=[]), body=[Assign(targets=[Name(id='curr', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load())), If(test=BoolOp(op=And(), values=[Compare(left=Constant(value='__'), ops=[In()], comparators=[Name(id='key', ctx=Load())]), Compare(left=Subscript(value=Call(func=Attribute(value=Name(id='key', ctx=Load()), attr='rsplit', ctx=Load()), args=[Constant(value='__'), Constant(value=1)], keywords=[]), slice=Constant(value=1), ctx=Load()), ops=[In()], comparators=[Name(id='DJANGO_MAP', ctx=Load())])]), body=[Assign(targets=[Tuple(elts=[Name(id='key', ctx=Store()), Name(id='op', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='key', ctx=Load()), attr='rsplit', ctx=Load()), args=[Constant(value='__'), Constant(value=1)], keywords=[])), Assign(targets=[Name(id='op', ctx=Store())], value=Subscript(value=Name(id='DJANGO_MAP', ctx=Load()), slice=Name(id='op', ctx=Load()), ctx=Load()))], orelse=[If(test=Compare(left=Name(id='value', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='op', ctx=Store())], value=Subscript(value=Name(id='DJANGO_MAP', ctx=Load()), slice=Constant(value='is'), ctx=Load()))], orelse=[Assign(targets=[Name(id='op', ctx=Store())], value=Subscript(value=Name(id='DJANGO_MAP', ctx=Load()), slice=Constant(value='eq'), ctx=Load()))])]), If(test=Compare(left=Constant(value='__'), ops=[NotIn()], comparators=[Name(id='key', ctx=Load())]), body=[Assign(targets=[Name(id='model_attr', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='curr', ctx=Load()), Name(id='key', ctx=Load())], keywords=[]))], orelse=[For(target=Name(id='piece', ctx=Store()), iter=Call(func=Attribute(value=Name(id='key', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='__')], keywords=[]), body=[For(target=Tuple(elts=[Name(id='dest', ctx=Store()), Name(id='attr', ctx=Store()), Name(id='_', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_joins', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='curr', ctx=Load()), Tuple(elts=[], ctx=Load())], keywords=[]), body=[Try(body=[Assign(targets=[Name(id='model_attr', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='curr', ctx=Load()), Name(id='piece', ctx=Load()), Constant(value=None)], keywords=[]))], handlers=[ExceptHandler(body=[Pass()])], orelse=[], finalbody=[]), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='attr', ctx=Load()), ops=[Eq()], comparators=[Name(id='piece', ctx=Load())]), BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='dest', ctx=Load()), Name(id='ModelAlias', ctx=Load())], keywords=[]), Compare(left=Attribute(value=Name(id='dest', ctx=Load()), attr='alias', ctx=Load()), ops=[Eq()], comparators=[Name(id='piece', ctx=Load())])])]), body=[Assign(targets=[Name(id='curr', ctx=Store())], value=Name(id='dest', ctx=Load())), Break()], orelse=[])], orelse=[Assign(targets=[Name(id='model_attr', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='curr', ctx=Load()), Name(id='piece', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='value', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='model_attr', ctx=Load()), Name(id='fks', ctx=Load())], keywords=[])]), body=[Assign(targets=[Name(id='curr', ctx=Store())], value=Attribute(value=Name(id='model_attr', ctx=Load()), attr='rel_model', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='joins', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='model_attr', ctx=Load())], keywords=[]))], orelse=[])])], orelse=[])]), Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='op', ctx=Load()), args=[Name(id='model_attr', ctx=Load()), Name(id='value', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Return(value=Tuple(elts=[Name(id='accum', ctx=Load()), Name(id='joins', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='filter', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[If(test=BoolOp(op=And(), values=[Name(id='args', ctx=Load()), Name(id='kwargs', ctx=Load())]), body=[Assign(targets=[Name(id='dq_node', ctx=Store())], value=BinOp(left=Call(func=Name(id='reduce', ctx=Load()), args=[Attribute(value=Name(id='operator', ctx=Load()), attr='and_', ctx=Load()), ListComp(elt=Call(func=Attribute(value=Name(id='a', ctx=Load()), attr='clone', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='a', ctx=Store()), iter=Name(id='args', ctx=Load()), ifs=[], is_async=0)])], keywords=[]), op=BitAnd(), right=Call(func=Name(id='DQ', ctx=Load()), args=[], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])))], orelse=[If(test=Name(id='args', ctx=Load()), body=[Assign(targets=[Name(id='dq_node', ctx=Store())], value=BinOp(left=Call(func=Name(id='reduce', ctx=Load()), args=[Attribute(value=Name(id='operator', ctx=Load()), attr='and_', ctx=Load()), ListComp(elt=Call(func=Attribute(value=Name(id='a', ctx=Load()), attr='clone', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='a', ctx=Store()), iter=Name(id='args', ctx=Load()), ifs=[], is_async=0)])], keywords=[]), op=BitAnd(), right=Call(func=Name(id='ColumnBase', ctx=Load()), args=[], keywords=[])))], orelse=[If(test=Name(id='kwargs', ctx=Load()), body=[Assign(targets=[Name(id='dq_node', ctx=Store())], value=BinOp(left=Call(func=Name(id='DQ', ctx=Load()), args=[], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]), op=BitAnd(), right=Call(func=Name(id='ColumnBase', ctx=Load()), args=[], keywords=[])))], orelse=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='clone', ctx=Load()), args=[], keywords=[]))])])]), Assign(targets=[Name(id='q', ctx=Store())], value=Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='deque', ctx=Load()), args=[List(elts=[Name(id='dq_node', ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='dq_joins', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='seen_joins', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), While(test=Name(id='q', ctx=Load()), body=[Assign(targets=[Name(id='curr', ctx=Store())], value=Call(func=Attribute(value=Name(id='q', ctx=Load()), attr='popleft', ctx=Load()), args=[], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='curr', ctx=Load()), Name(id='Expression', ctx=Load())], keywords=[])), body=[Continue()], orelse=[]), For(target=Tuple(elts=[Name(id='side', ctx=Store()), Name(id='piece', ctx=Store())], ctx=Store()), iter=Tuple(elts=[Tuple(elts=[Constant(value='lhs'), Attribute(value=Name(id='curr', ctx=Load()), attr='lhs', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='rhs'), Attribute(value=Name(id='curr', ctx=Load()), attr='rhs', ctx=Load())], ctx=Load())], ctx=Load()), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='piece', ctx=Load()), Name(id='DQ', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='query', ctx=Store()), Name(id='joins', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='convert_dict_to_node', ctx=Load()), args=[Attribute(value=Name(id='piece', ctx=Load()), attr='query', ctx=Load())], keywords=[])), For(target=Name(id='join', ctx=Store()), iter=Name(id='joins', ctx=Load()), body=[If(test=Compare(left=Name(id='join', ctx=Load()), ops=[NotIn()], comparators=[Name(id='seen_joins', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='dq_joins', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='join', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='seen_joins', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='join', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='expression', ctx=Store())], value=Call(func=Name(id='reduce', ctx=Load()), args=[Attribute(value=Name(id='operator', ctx=Load()), attr='and_', ctx=Load()), Name(id='query', ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='piece', ctx=Load()), attr='_negated', ctx=Load()), body=[Assign(targets=[Name(id='expression', ctx=Store())], value=Call(func=Name(id='Negated', ctx=Load()), args=[Name(id='expression', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='curr', ctx=Load()), Name(id='side', ctx=Load()), Name(id='expression', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='q', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='piece', ctx=Load())], keywords=[]))])], orelse=[])], orelse=[]), If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Name(id='args', ctx=Load())), UnaryOp(op=Not(), operand=Name(id='kwargs', ctx=Load()))]), body=[Assign(targets=[Name(id='dq_node', ctx=Store())], value=Attribute(value=Name(id='dq_node', ctx=Load()), attr='lhs', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='query', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='clone', ctx=Load()), args=[], keywords=[])), For(target=Name(id='field', ctx=Store()), iter=Name(id='dq_joins', ctx=Load()), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='field', ctx=Load()), Name(id='ForeignKeyField', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='lm', ctx=Store()), Name(id='rm', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='field', ctx=Load()), attr='model', ctx=Load()), Attribute(value=Name(id='field', ctx=Load()), attr='rel_model', ctx=Load())], ctx=Load())), Assign(targets=[Name(id='field_obj', ctx=Store())], value=Name(id='field', ctx=Load()))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='field', ctx=Load()), Name(id='BackrefAccessor', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='lm', ctx=Store()), Name(id='rm', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='field', ctx=Load()), attr='model', ctx=Load()), Attribute(value=Name(id='field', ctx=Load()), attr='rel_model', ctx=Load())], ctx=Load())), Assign(targets=[Name(id='field_obj', ctx=Store())], value=Attribute(value=Name(id='field', ctx=Load()), attr='field', ctx=Load()))], orelse=[])]), Assign(targets=[Name(id='query', ctx=Store())], value=Call(func=Attribute(value=Name(id='query', ctx=Load()), attr='ensure_join', ctx=Load()), args=[Name(id='lm', ctx=Load()), Name(id='rm', ctx=Load()), Name(id='field_obj', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='query', ctx=Load()), attr='where', ctx=Load()), args=[Name(id='dq_node', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='create_table', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name'), arg(arg='safe')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='meta'), defaults=[Constant(value=True)]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_schema', ctx=Load()), attr='create_table_as', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='self', ctx=Load()), Name(id='safe', ctx=Load())], keywords=[keyword(value=Name(id='meta', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='__sql_selection__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx'), arg(arg='is_subquery')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_is_default', ctx=Load()), Name(id='is_subquery', ctx=Load()), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=1)]), Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=False)])]), body=[Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='CommaNodeList', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='NoopModelSelect', bases=[Name(id='ModelSelect', ctx=Load())], keywords=[], body=[FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load()), attr='get_noop_select', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_get_cursor_wrapper', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='CursorWrapper', ctx=Load()), args=[Name(id='cursor', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='_ModelWriteQueryHelper', bases=[Name(id='_ModelQueryHelper', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Store())], value=Name(id='model', ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='_ModelWriteQueryHelper', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='model', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='returning', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='returning'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='accum', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='item', ctx=Store()), iter=Name(id='returning', ctx=Load()), body=[If(test=Call(func=Name(id='is_model', ctx=Load()), args=[Name(id='item', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='extend', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='item', ctx=Load()), attr='_meta', ctx=Load()), attr='sorted_fields', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='item', ctx=Load())], keywords=[]))])], orelse=[]), Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='_ModelWriteQueryHelper', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='returning', ctx=Load()), args=[Starred(value=Name(id='accum', ctx=Load()), ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_set_table_alias', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='table', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='table', ctx=Load())), Assign(targets=[Subscript(value=Attribute(value=Name(id='ctx', ctx=Load()), attr='alias_manager', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='table', ctx=Load()), attr='__name__', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='ModelUpdate', bases=[Name(id='_ModelWriteQueryHelper', ctx=Load()), Name(id='Update', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='ModelInsert', bases=[Name(id='_ModelWriteQueryHelper', ctx=Load()), Name(id='Insert', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='default_row_type', ctx=Store())], value=Attribute(value=Name(id='ROW', ctx=Load()), attr='TUPLE', ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ModelInsert', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[If(test=Attribute(value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load()), attr='returning_clause', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_returning', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='get_primary_keys', ctx=Load()), args=[], keywords=[]))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='returning', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='returning'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Name(id='returning', ctx=Load()), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_row_type', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_row_type', ctx=Store())], value=Attribute(value=Name(id='ROW', ctx=Load()), attr='MODEL', ctx=Load()))], orelse=[]), Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ModelInsert', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='returning', ctx=Load()), args=[Starred(value=Name(id='returning', ctx=Load()), ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_default_data', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='defaults', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_default_columns', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='fields', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='sorted_fields', ctx=Load())), Return(value=IfExp(test=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='auto_increment', ctx=Load()), body=Subscript(value=Name(id='fields', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load()), orelse=Name(id='fields', ctx=Load())))], decorator_list=[])], decorator_list=[]), ClassDef(name='ModelDelete', bases=[Name(id='_ModelWriteQueryHelper', ctx=Load()), Name(id='Delete', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='ManyToManyQuery', bases=[Name(id='ModelSelect', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='accessor'), arg(arg='rel')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_instance', ctx=Store())], value=Name(id='instance', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_accessor', ctx=Store())], value=Name(id='accessor', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_src_attr', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='accessor', ctx=Load()), attr='src_fk', ctx=Load()), attr='rel_field', ctx=Load()), attr='name', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_dest_attr', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='accessor', ctx=Load()), attr='dest_fk', ctx=Load()), attr='rel_field', ctx=Load()), attr='name', ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ManyToManyQuery', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='rel', ctx=Load()), Tuple(elts=[Name(id='rel', ctx=Load())], ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='_id_list', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model_or_id_list')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Name(id='model_or_id_list', ctx=Load()), slice=Constant(value=0), ctx=Load()), Name(id='Model', ctx=Load())], keywords=[]), body=[Return(value=ListComp(elt=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='obj', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_dest_attr', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='obj', ctx=Store()), iter=Name(id='model_or_id_list', ctx=Load()), ifs=[], is_async=0)]))], orelse=[]), Return(value=Name(id='model_or_id_list', ctx=Load()))], decorator_list=[]), FunctionDef(name='add', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value'), arg(arg='clear_existing')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[If(test=Name(id='clear_existing', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='clear', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='accessor', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_accessor', ctx=Load())), Assign(targets=[Name(id='src_id', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_instance', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_src_attr', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='SelectQuery', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='query', ctx=Store())], value=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='columns', ctx=Load()), args=[Call(func=Name(id='Value', ctx=Load()), args=[Name(id='src_id', ctx=Load())], keywords=[]), Attribute(value=Attribute(value=Name(id='accessor', ctx=Load()), attr='dest_fk', ctx=Load()), attr='rel_field', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='accessor', ctx=Load()), attr='through_model', ctx=Load()), attr='insert_from', ctx=Load()), args=[], keywords=[keyword(arg='fields', value=List(elts=[Attribute(value=Name(id='accessor', ctx=Load()), attr='src_fk', ctx=Load()), Attribute(value=Name(id='accessor', ctx=Load()), attr='dest_fk', ctx=Load())], ctx=Load())), keyword(arg='query', value=Name(id='query', ctx=Load()))]), attr='execute', ctx=Load()), args=[], keywords=[]))], orelse=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='ensure_tuple', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='value', ctx=Load())), body=[Return()], orelse=[]), Assign(targets=[Name(id='inserts', ctx=Store())], value=ListComp(elt=Dict(keys=[Attribute(value=Attribute(value=Name(id='accessor', ctx=Load()), attr='src_fk', ctx=Load()), attr='name', ctx=Load()), Attribute(value=Attribute(value=Name(id='accessor', ctx=Load()), attr='dest_fk', ctx=Load()), attr='name', ctx=Load())], values=[Name(id='src_id', ctx=Load()), Name(id='rel_id', ctx=Load())]), generators=[comprehension(target=Name(id='rel_id', ctx=Store()), iter=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_id_list', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), ifs=[], is_async=0)])), Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='accessor', ctx=Load()), attr='through_model', ctx=Load()), attr='insert_many', ctx=Load()), args=[Name(id='inserts', ctx=Load())], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[]))])], decorator_list=[]), FunctionDef(name='remove', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='src_id', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_instance', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_src_attr', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='SelectQuery', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='column', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='value', ctx=Load()), attr='model', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_dest_attr', ctx=Load())], keywords=[])), Assign(targets=[Name(id='subquery', ctx=Store())], value=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='columns', ctx=Load()), args=[Name(id='column', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_accessor', ctx=Load()), attr='through_model', ctx=Load()), attr='delete', ctx=Load()), args=[], keywords=[]), attr='where', ctx=Load()), args=[BinOp(left=BinOp(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_accessor', ctx=Load()), attr='dest_fk', ctx=Load()), op=LShift(), right=Name(id='subquery', ctx=Load())), op=BitAnd(), right=Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_accessor', ctx=Load()), attr='src_fk', ctx=Load()), ops=[Eq()], comparators=[Name(id='src_id', ctx=Load())]))], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[]))], orelse=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='ensure_tuple', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='value', ctx=Load())), body=[Return()], orelse=[]), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_accessor', ctx=Load()), attr='through_model', ctx=Load()), attr='delete', ctx=Load()), args=[], keywords=[]), attr='where', ctx=Load()), args=[BinOp(left=BinOp(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_accessor', ctx=Load()), attr='dest_fk', ctx=Load()), op=LShift(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_id_list', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])), op=BitAnd(), right=Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_accessor', ctx=Load()), attr='src_fk', ctx=Load()), ops=[Eq()], comparators=[Name(id='src_id', ctx=Load())]))], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[]))])], decorator_list=[]), FunctionDef(name='clear', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='src_id', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_instance', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_src_attr', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_accessor', ctx=Load()), attr='through_model', ctx=Load()), attr='delete', ctx=Load()), args=[], keywords=[]), attr='where', ctx=Load()), args=[Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_accessor', ctx=Load()), attr='src_fk', ctx=Load()), ops=[Eq()], comparators=[Name(id='src_id', ctx=Load())])], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[]))], decorator_list=[])], decorator_list=[]), FunctionDef(name='safe_python_value', args=arguments(posonlyargs=[], args=[arg(arg='conv_func')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='validate', args=arguments(posonlyargs=[], args=[arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Call(func=Name(id='conv_func', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Tuple(elts=[Name(id='TypeError', ctx=Load()), Name(id='ValueError', ctx=Load())], ctx=Load()), body=[Return(value=Name(id='value', ctx=Load()))])], orelse=[], finalbody=[])], decorator_list=[]), Return(value=Name(id='validate', ctx=Load()))], decorator_list=[]), ClassDef(name='BaseModelCursorWrapper', bases=[Name(id='DictCursorWrapper', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor'), arg(arg='model'), arg(arg='columns')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='BaseModelCursorWrapper', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='cursor', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Store())], value=Name(id='model', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='select', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='columns', ctx=Load()), List(elts=[], ctx=Load())]))], decorator_list=[]), FunctionDef(name='_initialize_columns', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='combined', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='combined', ctx=Load())), Assign(targets=[Name(id='table', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='table', ctx=Load())), Assign(targets=[Name(id='description', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cursor', ctx=Load()), attr='description', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='ncols', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cursor', ctx=Load()), attr='description', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='converters', ctx=Store()), Name(id='converters', ctx=Store())], value=BinOp(left=List(elts=[Constant(value=None)], ctx=Load()), op=Mult(), right=Attribute(value=Name(id='self', ctx=Load()), attr='ncols', ctx=Load()))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='fields', ctx=Store()), Name(id='fields', ctx=Store())], value=BinOp(left=List(elts=[Constant(value=None)], ctx=Load()), op=Mult(), right=Attribute(value=Name(id='self', ctx=Load()), attr='ncols', ctx=Load()))), For(target=Tuple(elts=[Name(id='idx', ctx=Store()), Name(id='description_item', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='description', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='column', ctx=Store()), Name(id='orig_column', ctx=Store())], value=Subscript(value=Name(id='description_item', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='dot_index', ctx=Store())], value=Call(func=Attribute(value=Name(id='column', ctx=Load()), attr='rfind', ctx=Load()), args=[Constant(value='.')], keywords=[])), If(test=Compare(left=Name(id='dot_index', ctx=Load()), ops=[NotEq()], comparators=[UnaryOp(op=USub(), operand=Constant(value=1))]), body=[Assign(targets=[Name(id='column', ctx=Store())], value=Subscript(value=Name(id='column', ctx=Load()), slice=Slice(lower=BinOp(left=Name(id='dot_index', ctx=Load()), op=Add(), right=Constant(value=1))), ctx=Load()))], orelse=[]), Assign(targets=[Name(id='column', ctx=Store())], value=Call(func=Attribute(value=Name(id='column', ctx=Load()), attr='strip', ctx=Load()), args=[Constant(value='()"`')], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='column', ctx=Load())], keywords=[])), Try(body=[Assign(targets=[Name(id='raw_node', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='select', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='IndexError', ctx=Load()), body=[If(test=Compare(left=Name(id='column', ctx=Load()), ops=[In()], comparators=[Name(id='combined', ctx=Load())]), body=[Assign(targets=[Name(id='raw_node', ctx=Store()), Name(id='node', ctx=Store())], value=Subscript(value=Name(id='combined', ctx=Load()), slice=Name(id='column', ctx=Load()), ctx=Load()))], orelse=[Continue()])])], orelse=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='raw_node', ctx=Load()), attr='unwrap', ctx=Load()), args=[], keywords=[]))], finalbody=[]), Assign(targets=[Name(id='is_alias', ctx=Store())], value=Call(func=Attribute(value=Name(id='raw_node', ctx=Load()), attr='is_alias', ctx=Load()), args=[], keywords=[])), If(test=Name(id='is_alias', ctx=Load()), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Store())], value=Name(id='orig_column', ctx=Load()))], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='node', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[]), body=[If(test=Attribute(value=Name(id='raw_node', ctx=Load()), attr='_coerce', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='converters', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='node', ctx=Load()), attr='python_value', ctx=Load()))], orelse=[]), Assign(targets=[Subscript(value=Name(id='fields', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Store())], value=Name(id='node', ctx=Load())), If(test=UnaryOp(op=Not(), operand=Name(id='is_alias', ctx=Load())), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='node', ctx=Load()), attr='name', ctx=Load()))], orelse=[])], orelse=[If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='node', ctx=Load()), Name(id='ColumnBase', ctx=Load())], keywords=[]), Attribute(value=Name(id='raw_node', ctx=Load()), attr='_converter', ctx=Load())]), body=[Assign(targets=[Subscript(value=Name(id='converters', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='raw_node', ctx=Load()), attr='_converter', ctx=Load()))], orelse=[If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='node', ctx=Load()), Name(id='Function', ctx=Load())], keywords=[]), Attribute(value=Name(id='node', ctx=Load()), attr='_coerce', ctx=Load())]), body=[If(test=Compare(left=Attribute(value=Name(id='node', ctx=Load()), attr='_python_value', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='converters', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='node', ctx=Load()), attr='_python_value', ctx=Load()))], orelse=[If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='node', ctx=Load()), attr='arguments', ctx=Load()), Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='node', ctx=Load()), attr='arguments', ctx=Load()), slice=Constant(value=0), ctx=Load()), Name(id='Node', ctx=Load())], keywords=[])]), body=[Assign(targets=[Name(id='first', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='node', ctx=Load()), attr='arguments', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='unwrap', ctx=Load()), args=[], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='first', ctx=Load()), Name(id='Entity', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='first', ctx=Load()), attr='_path', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())), Assign(targets=[Name(id='first', ctx=Store())], value=Call(func=Attribute(value=Name(id='combined', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='first', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='converters', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Store())], value=Call(func=Name(id='safe_python_value', ctx=Load()), args=[Attribute(value=Name(id='first', ctx=Load()), attr='python_value', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])])], orelse=[If(test=Compare(left=Name(id='column', ctx=Load()), ops=[In()], comparators=[Name(id='combined', ctx=Load())]), body=[If(test=Attribute(value=Name(id='node', ctx=Load()), attr='_coerce', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='converters', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Store())], value=Attribute(value=Subscript(value=Name(id='combined', ctx=Load()), slice=Name(id='column', ctx=Load()), ctx=Load()), attr='python_value', ctx=Load()))], orelse=[]), If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='node', ctx=Load()), Name(id='Column', ctx=Load())], keywords=[]), Compare(left=Attribute(value=Name(id='node', ctx=Load()), attr='source', ctx=Load()), ops=[Eq()], comparators=[Name(id='table', ctx=Load())])]), body=[Assign(targets=[Subscript(value=Name(id='fields', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Store())], value=Subscript(value=Name(id='combined', ctx=Load()), slice=Name(id='column', ctx=Load()), ctx=Load()))], orelse=[])], orelse=[])])])])], orelse=[])], decorator_list=[]), Assign(targets=[Name(id='initialize', ctx=Store())], value=Name(id='_initialize_columns', ctx=Load())), FunctionDef(name='process_row', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='row')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='ModelDictCursorWrapper', bases=[Name(id='BaseModelCursorWrapper', ctx=Load())], keywords=[], body=[FunctionDef(name='process_row', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='row')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='result', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Tuple(elts=[Name(id='columns', ctx=Store()), Name(id='converters', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='converters', ctx=Load())], ctx=Load())), Assign(targets=[Name(id='fields', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='fields', ctx=Load())), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='ncols', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='attr', ctx=Store())], value=Subscript(value=Name(id='columns', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load())), If(test=Compare(left=Name(id='attr', ctx=Load()), ops=[In()], comparators=[Name(id='result', ctx=Load())]), body=[Continue()], orelse=[]), If(test=Compare(left=Subscript(value=Name(id='converters', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='result', ctx=Load()), slice=Name(id='attr', ctx=Load()), ctx=Store())], value=Call(func=Subscript(value=Name(id='converters', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), args=[Subscript(value=Name(id='row', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Subscript(value=Name(id='result', ctx=Load()), slice=Name(id='attr', ctx=Load()), ctx=Store())], value=Subscript(value=Name(id='row', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()))])], orelse=[]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='ModelTupleCursorWrapper', bases=[Name(id='ModelDictCursorWrapper', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='constructor', ctx=Store())], value=Name(id='tuple', ctx=Load())), FunctionDef(name='process_row', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='row')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='columns', ctx=Store()), Name(id='converters', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='converters', ctx=Load())], ctx=Load())), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='constructor', ctx=Load()), args=[ListComp(elt=IfExp(test=Compare(left=Subscript(value=Name(id='converters', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Call(func=Subscript(value=Name(id='converters', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), args=[Subscript(value=Name(id='row', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load())], keywords=[]), orelse=Subscript(value=Name(id='row', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load())), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='ncols', ctx=Load())], keywords=[]), ifs=[], is_async=0)])], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='ModelNamedTupleCursorWrapper', bases=[Name(id='ModelTupleCursorWrapper', ctx=Load())], keywords=[], body=[FunctionDef(name='initialize', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_initialize_columns', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='attributes', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='ncols', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='attributes', ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='tuple_class', ctx=Store())], value=Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='namedtuple', ctx=Load()), args=[Constant(value='Row'), Name(id='attributes', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='constructor', ctx=Store())], value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='row')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='tuple_class', ctx=Load()), args=[Starred(value=Name(id='row', ctx=Load()), ctx=Load())], keywords=[])))], decorator_list=[])], decorator_list=[]), ClassDef(name='ModelObjectCursorWrapper', bases=[Name(id='ModelDictCursorWrapper', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor'), arg(arg='model'), arg(arg='select'), arg(arg='constructor')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='constructor', ctx=Store())], value=Name(id='constructor', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='is_model', ctx=Store())], value=Call(func=Name(id='is_model', ctx=Load()), args=[Name(id='constructor', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ModelObjectCursorWrapper', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='cursor', ctx=Load()), Name(id='model', ctx=Load()), Name(id='select', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='process_row', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='row')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ModelObjectCursorWrapper', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='process_row', ctx=Load()), args=[Name(id='row', ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='is_model', ctx=Load()), body=[Assign(targets=[Name(id='obj', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='constructor', ctx=Load()), args=[], keywords=[keyword(arg='__no_default__', value=Constant(value=1)), keyword(value=Name(id='data', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='obj', ctx=Load()), attr='_dirty', ctx=Load()), attr='clear', ctx=Load()), args=[], keywords=[])), Return(value=Name(id='obj', ctx=Load()))], orelse=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='constructor', ctx=Load()), args=[], keywords=[keyword(value=Name(id='data', ctx=Load()))]))])], decorator_list=[])], decorator_list=[]), ClassDef(name='ModelCursorWrapper', bases=[Name(id='BaseModelCursorWrapper', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor'), arg(arg='model'), arg(arg='select'), arg(arg='from_list'), arg(arg='joins')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ModelCursorWrapper', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='cursor', ctx=Load()), Name(id='model', ctx=Load()), Name(id='select', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='from_list', ctx=Store())], value=Name(id='from_list', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='joins', ctx=Store())], value=Name(id='joins', ctx=Load()))], decorator_list=[]), FunctionDef(name='initialize', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_initialize_columns', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='selected_src', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[ListComp(elt=Attribute(value=Name(id='field', ctx=Load()), attr='model', ctx=Load()), generators=[comprehension(target=Name(id='field', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='fields', ctx=Load()), ifs=[Compare(left=Name(id='field', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])], is_async=0)])], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='select', ctx=Store()), Name(id='columns', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='select', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='key_to_constructor', ctx=Store())], value=Dict(keys=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load())], values=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load())])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='src_is_dest', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='src_to_dest', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='accum', ctx=Store())], value=Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='deque', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='from_list', ctx=Load())], keywords=[])), Assign(targets=[Name(id='dests', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), While(test=Name(id='accum', ctx=Load()), body=[Assign(targets=[Name(id='curr', ctx=Store())], value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='popleft', ctx=Load()), args=[], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='curr', ctx=Load()), Name(id='Join', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='curr', ctx=Load()), attr='lhs', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='curr', ctx=Load()), attr='rhs', ctx=Load())], keywords=[])), Continue()], orelse=[]), If(test=Compare(left=Name(id='curr', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='joins', ctx=Load())]), body=[Continue()], orelse=[]), Assign(targets=[Name(id='is_dict', ctx=Store())], value=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='curr', ctx=Load()), Name(id='dict', ctx=Load())], keywords=[])), For(target=Tuple(elts=[Name(id='key', ctx=Store()), Name(id='attr', ctx=Store()), Name(id='constructor', ctx=Store()), Name(id='join_type', ctx=Store())], ctx=Store()), iter=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='joins', ctx=Load()), slice=Name(id='curr', ctx=Load()), ctx=Load()), body=[If(test=Compare(left=Name(id='key', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='key_to_constructor', ctx=Load())]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='key_to_constructor', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store())], value=Name(id='constructor', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='src_to_dest', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='curr', ctx=Load()), Name(id='attr', ctx=Load()), Name(id='key', ctx=Load()), Name(id='is_dict', ctx=Load()), Name(id='join_type', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='dests', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[]), For(target=Name(id='src', ctx=Store()), iter=Name(id='selected_src', ctx=Load()), body=[If(test=Compare(left=Name(id='src', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='key_to_constructor', ctx=Load())]), body=[If(test=Call(func=Name(id='is_model', ctx=Load()), args=[Name(id='src', ctx=Load())], keywords=[]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='key_to_constructor', ctx=Load()), slice=Name(id='src', ctx=Load()), ctx=Store())], value=Name(id='src', ctx=Load()))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='src', ctx=Load()), Name(id='ModelAlias', ctx=Load())], keywords=[]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='key_to_constructor', ctx=Load()), slice=Name(id='src', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='src', ctx=Load()), attr='model', ctx=Load()))], orelse=[])])], orelse=[])], orelse=[]), For(target=Tuple(elts=[Name(id='src', ctx=Store()), Name(id='_', ctx=Store()), Name(id='dest', ctx=Store()), Name(id='_', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='src_to_dest', ctx=Load()), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='src_is_dest', ctx=Load()), slice=Name(id='src', ctx=Load()), ctx=Store())], value=BoolOp(op=And(), values=[Compare(left=Name(id='src', ctx=Load()), ops=[In()], comparators=[Name(id='dests', ctx=Load())]), BoolOp(op=Or(), values=[Compare(left=Name(id='dest', ctx=Load()), ops=[In()], comparators=[Name(id='selected_src', ctx=Load())]), Compare(left=Name(id='src', ctx=Load()), ops=[In()], comparators=[Name(id='selected_src', ctx=Load())])])]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='column_keys', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Tuple(elts=[Name(id='idx', ctx=Store()), Name(id='node', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='select', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='key', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load())), Assign(targets=[Name(id='field', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='fields', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Load())), If(test=Compare(left=Name(id='field', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='field', ctx=Load()), Name(id='FieldAlias', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='key', ctx=Store())], value=Attribute(value=Name(id='field', ctx=Load()), attr='source', ctx=Load()))], orelse=[Assign(targets=[Name(id='key', ctx=Store())], value=Attribute(value=Name(id='field', ctx=Load()), attr='model', ctx=Load()))])], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='node', ctx=Load()), Name(id='BindTo', ctx=Load())], keywords=[]), body=[If(test=Compare(left=Attribute(value=Name(id='node', ctx=Load()), attr='dest', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='key_to_constructor', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='%s specifies bind-to %s, but %s is not among the selected sources.'), op=Mod(), right=Tuple(elts=[Call(func=Attribute(value=Name(id='node', ctx=Load()), attr='unwrap', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='node', ctx=Load()), attr='dest', ctx=Load()), Attribute(value=Name(id='node', ctx=Load()), attr='dest', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='key', ctx=Store())], value=Attribute(value=Name(id='node', ctx=Load()), attr='dest', ctx=Load()))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='node', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='node', ctx=Load()), attr='unwrap', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='node', ctx=Load()), Name(id='Column', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='key', ctx=Store())], value=Attribute(value=Name(id='node', ctx=Load()), attr='source', ctx=Load()))], orelse=[])])]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='column_keys', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='process_row', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='row')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='objects', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='object_list', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Tuple(elts=[Name(id='key', ctx=Store()), Name(id='constructor', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='key_to_constructor', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='objects', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store())], value=Call(func=Name(id='constructor', ctx=Load()), args=[], keywords=[keyword(arg='__no_default__', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Name(id='object_list', ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Name(id='objects', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='default_instance', ctx=Store())], value=Subscript(value=Name(id='objects', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='set_keys', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), For(target=Tuple(elts=[Name(id='idx', ctx=Store()), Name(id='key', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='column_keys', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='instance', ctx=Store())], value=Call(func=Attribute(value=Name(id='objects', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='key', ctx=Load()), Name(id='default_instance', ctx=Load())], keywords=[])), Assign(targets=[Name(id='column', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='value', ctx=Store())], value=Subscript(value=Name(id='row', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Load())), If(test=Compare(left=Name(id='value', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='set_keys', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[]))], orelse=[]), If(test=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='converters', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Load()), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='converters', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='dict', ctx=Load())], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='instance', ctx=Load()), slice=Name(id='column', ctx=Load()), ctx=Store())], value=Name(id='value', ctx=Load()))], orelse=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='column', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))])], orelse=[]), For(target=Tuple(elts=[Name(id='src', ctx=Store()), Name(id='attr', ctx=Store()), Name(id='dest', ctx=Store()), Name(id='is_dict', ctx=Store()), Name(id='join_type', ctx=Store())], ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='src_to_dest', ctx=Load()), body=[Assign(targets=[Name(id='instance', ctx=Store())], value=Subscript(value=Name(id='objects', ctx=Load()), slice=Name(id='src', ctx=Load()), ctx=Load())), Try(body=[Assign(targets=[Name(id='joined_instance', ctx=Store())], value=Subscript(value=Name(id='objects', ctx=Load()), slice=Name(id='dest', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Continue()])], orelse=[], finalbody=[]), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='instance', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Name(id='dest', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), BoolOp(op=And(), values=[Compare(left=Name(id='dest', ctx=Load()), ops=[NotIn()], comparators=[Name(id='set_keys', ctx=Load())]), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='src_is_dest', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='dest', ctx=Load())], keywords=[]))])]), body=[Continue()], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='instance', ctx=Load()), ops=[NotIn()], comparators=[Name(id='set_keys', ctx=Load())]), Compare(left=Name(id='dest', ctx=Load()), ops=[NotIn()], comparators=[Name(id='set_keys', ctx=Load())]), Call(func=Attribute(value=Name(id='join_type', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='OUTER JOIN')], keywords=[])]), body=[Continue()], orelse=[]), If(test=Name(id='is_dict', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='instance', ctx=Load()), slice=Name(id='attr', ctx=Load()), ctx=Store())], value=Name(id='joined_instance', ctx=Load()))], orelse=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='attr', ctx=Load()), Name(id='joined_instance', ctx=Load())], keywords=[]))])], orelse=[]), For(target=Name(id='instance', ctx=Store()), iter=Name(id='object_list', ctx=Load()), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='Model', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='instance', ctx=Load()), attr='_dirty', ctx=Load()), attr='clear', ctx=Load()), args=[], keywords=[]))], orelse=[])], orelse=[]), Return(value=Subscript(value=Name(id='objects', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='PrefetchQuery', bases=[Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='namedtuple', ctx=Load()), args=[Constant(value='_PrefetchQuery'), Tuple(elts=[Constant(value='query'), Constant(value='fields'), Constant(value='is_backref'), Constant(value='rel_models'), Constant(value='field_to_name'), Constant(value='model')], ctx=Load())], keywords=[])], keywords=[], body=[FunctionDef(name='__new__', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='query'), arg(arg='fields'), arg(arg='is_backref'), arg(arg='rel_models'), arg(arg='field_to_name'), arg(arg='model')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None)]), body=[If(test=Name(id='fields', ctx=Load()), body=[If(test=Name(id='is_backref', ctx=Load()), body=[If(test=Compare(left=Name(id='rel_models', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='rel_models', ctx=Store())], value=ListComp(elt=Attribute(value=Name(id='field', ctx=Load()), attr='model', ctx=Load()), generators=[comprehension(target=Name(id='field', ctx=Store()), iter=Name(id='fields', ctx=Load()), ifs=[], is_async=0)]))], orelse=[]), Assign(targets=[Name(id='foreign_key_attrs', ctx=Store())], value=ListComp(elt=Attribute(value=Attribute(value=Name(id='field', ctx=Load()), attr='rel_field', ctx=Load()), attr='name', ctx=Load()), generators=[comprehension(target=Name(id='field', ctx=Store()), iter=Name(id='fields', ctx=Load()), ifs=[], is_async=0)]))], orelse=[If(test=Compare(left=Name(id='rel_models', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='rel_models', ctx=Store())], value=ListComp(elt=Attribute(value=Name(id='field', ctx=Load()), attr='rel_model', ctx=Load()), generators=[comprehension(target=Name(id='field', ctx=Store()), iter=Name(id='fields', ctx=Load()), ifs=[], is_async=0)]))], orelse=[]), Assign(targets=[Name(id='foreign_key_attrs', ctx=Store())], value=ListComp(elt=Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load()), generators=[comprehension(target=Name(id='field', ctx=Store()), iter=Name(id='fields', ctx=Load()), ifs=[], is_async=0)]))]), Assign(targets=[Name(id='field_to_name', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='zip', ctx=Load()), args=[Name(id='fields', ctx=Load()), Name(id='foreign_key_attrs', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='model', ctx=Store())], value=Attribute(value=Name(id='query', ctx=Load()), attr='model', ctx=Load())), Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='PrefetchQuery', ctx=Load()), Name(id='cls', ctx=Load())], keywords=[]), attr='__new__', ctx=Load()), args=[Name(id='cls', ctx=Load()), Name(id='query', ctx=Load()), Name(id='fields', ctx=Load()), Name(id='is_backref', ctx=Load()), Name(id='rel_models', ctx=Load()), Name(id='field_to_name', ctx=Load()), Name(id='model', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='populate_instance', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='id_map')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='is_backref', ctx=Load()), body=[For(target=Name(id='field', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='fields', ctx=Load()), body=[Assign(targets=[Name(id='identifier', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='instance', ctx=Load()), attr='__data__', ctx=Load()), slice=Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='key', ctx=Store())], value=Tuple(elts=[Name(id='field', ctx=Load()), Name(id='identifier', ctx=Load())], ctx=Load())), If(test=Compare(left=Name(id='key', ctx=Load()), ops=[In()], comparators=[Name(id='id_map', ctx=Load())]), body=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='instance', ctx=Load()), Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load()), Subscript(value=Name(id='id_map', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[For(target=Tuple(elts=[Name(id='field', ctx=Store()), Name(id='attname', ctx=Store())], ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='field_to_name', ctx=Load()), body=[Assign(targets=[Name(id='identifier', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='instance', ctx=Load()), attr='__data__', ctx=Load()), slice=Attribute(value=Attribute(value=Name(id='field', ctx=Load()), attr='rel_field', ctx=Load()), attr='name', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='key', ctx=Store())], value=Tuple(elts=[Name(id='field', ctx=Load()), Name(id='identifier', ctx=Load())], ctx=Load())), Assign(targets=[Name(id='rel_instances', ctx=Store())], value=Call(func=Attribute(value=Name(id='id_map', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='key', ctx=Load()), List(elts=[], ctx=Load())], keywords=[])), For(target=Name(id='inst', ctx=Store()), iter=Name(id='rel_instances', ctx=Load()), body=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='inst', ctx=Load()), Name(id='attname', ctx=Load()), Name(id='instance', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='inst', ctx=Load()), attr='_dirty', ctx=Load()), attr='clear', ctx=Load()), args=[], keywords=[]))], orelse=[]), Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='instance', ctx=Load()), Attribute(value=Name(id='field', ctx=Load()), attr='backref', ctx=Load()), Name(id='rel_instances', ctx=Load())], keywords=[]))], orelse=[])])], decorator_list=[]), FunctionDef(name='store_instance', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance'), arg(arg='id_map')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Tuple(elts=[Name(id='field', ctx=Store()), Name(id='attname', ctx=Store())], ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='field_to_name', ctx=Load()), body=[Assign(targets=[Name(id='identity', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='field', ctx=Load()), attr='rel_field', ctx=Load()), attr='python_value', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='instance', ctx=Load()), attr='__data__', ctx=Load()), slice=Name(id='attname', ctx=Load()), ctx=Load())], keywords=[])), Assign(targets=[Name(id='key', ctx=Store())], value=Tuple(elts=[Name(id='field', ctx=Load()), Name(id='identity', ctx=Load())], ctx=Load())), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='is_backref', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='id_map', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store())], value=Name(id='instance', ctx=Load()))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='id_map', ctx=Load()), attr='setdefault', ctx=Load()), args=[Name(id='key', ctx=Load()), List(elts=[], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Subscript(value=Name(id='id_map', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Load()), attr='append', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]))])], orelse=[])], decorator_list=[])], decorator_list=[]), FunctionDef(name='prefetch_add_subquery', args=arguments(posonlyargs=[], args=[arg(arg='sq'), arg(arg='subqueries'), arg(arg='prefetch_type')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='fixed_queries', ctx=Store())], value=List(elts=[Call(func=Name(id='PrefetchQuery', ctx=Load()), args=[Name(id='sq', ctx=Load())], keywords=[])], ctx=Load())), For(target=Tuple(elts=[Name(id='i', ctx=Store()), Name(id='subquery', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='subqueries', ctx=Load())], keywords=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='subquery', ctx=Load()), Name(id='tuple', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='subquery', ctx=Store()), Name(id='target_model', ctx=Store())], ctx=Store())], value=Name(id='subquery', ctx=Load()))], orelse=[Assign(targets=[Name(id='target_model', ctx=Store())], value=Constant(value=None))]), If(test=BoolOp(op=Or(), values=[BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='subquery', ctx=Load()), Name(id='Query', ctx=Load())], keywords=[])), Call(func=Name(id='is_model', ctx=Load()), args=[Name(id='subquery', ctx=Load())], keywords=[])]), Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='subquery', ctx=Load()), Name(id='ModelAlias', ctx=Load())], keywords=[])]), body=[Assign(targets=[Name(id='subquery', ctx=Store())], value=Call(func=Attribute(value=Name(id='subquery', ctx=Load()), attr='select', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='subquery_model', ctx=Store())], value=Attribute(value=Name(id='subquery', ctx=Load()), attr='model', ctx=Load())), For(target=Name(id='j', ctx=Store()), iter=Call(func=Name(id='reversed', ctx=Load()), args=[Call(func=Name(id='range', ctx=Load()), args=[BinOp(left=Name(id='i', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[])], keywords=[]), body=[Assign(targets=[Name(id='fks', ctx=Store()), Name(id='backrefs', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='fixed', ctx=Store())], value=Subscript(value=Name(id='fixed_queries', ctx=Load()), slice=Name(id='j', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='last_query', ctx=Store())], value=Attribute(value=Name(id='fixed', ctx=Load()), attr='query', ctx=Load())), Assign(targets=[Name(id='last_model', ctx=Store()), Name(id='last_obj', ctx=Store())], value=Attribute(value=Name(id='fixed', ctx=Load()), attr='model', ctx=Load())), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='last_model', ctx=Load()), Name(id='ModelAlias', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='last_model', ctx=Store())], value=Attribute(value=Name(id='last_model', ctx=Load()), attr='model', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='rels', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='subquery_model', ctx=Load()), attr='_meta', ctx=Load()), attr='model_refs', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='last_model', ctx=Load()), List(elts=[], ctx=Load())], keywords=[])), If(test=Name(id='rels', ctx=Load()), body=[Assign(targets=[Name(id='fks', ctx=Store())], value=ListComp(elt=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='subquery_model', ctx=Load()), Attribute(value=Name(id='fk', ctx=Load()), attr='name', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='fk', ctx=Store()), iter=Name(id='rels', ctx=Load()), ifs=[], is_async=0)])), Assign(targets=[Name(id='pks', ctx=Store())], value=ListComp(elt=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='last_obj', ctx=Load()), Attribute(value=Attribute(value=Name(id='fk', ctx=Load()), attr='rel_field', ctx=Load()), attr='name', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='fk', ctx=Store()), iter=Name(id='rels', ctx=Load()), ifs=[], is_async=0)]))], orelse=[Assign(targets=[Name(id='backrefs', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='subquery_model', ctx=Load()), attr='_meta', ctx=Load()), attr='model_backrefs', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='last_model', ctx=Load())], keywords=[]))]), If(test=BoolOp(op=And(), values=[BoolOp(op=Or(), values=[Name(id='fks', ctx=Load()), Name(id='backrefs', ctx=Load())]), BoolOp(op=Or(), values=[Compare(left=Name(id='target_model', ctx=Load()), ops=[Is()], comparators=[Name(id='last_obj', ctx=Load())]), Compare(left=Name(id='target_model', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])])]), body=[Break()], orelse=[])], orelse=[Assign(targets=[Name(id='tgt_err', ctx=Store())], value=IfExp(test=Name(id='target_model', ctx=Load()), body=BinOp(left=Constant(value=' using %s'), op=Mod(), right=Name(id='target_model', ctx=Load())), orelse=Constant(value=''))), Raise(exc=Call(func=Name(id='AttributeError', ctx=Load()), args=[BinOp(left=Constant(value='Error: unable to find foreign key for query: %s%s'), op=Mod(), right=Tuple(elts=[Name(id='subquery', ctx=Load()), Name(id='tgt_err', ctx=Load())], ctx=Load()))], keywords=[]))]), Assign(targets=[Name(id='dest', ctx=Store())], value=IfExp(test=Name(id='target_model', ctx=Load()), body=Tuple(elts=[Name(id='target_model', ctx=Load())], ctx=Load()), orelse=Constant(value=None))), If(test=Name(id='fks', ctx=Load()), body=[If(test=Compare(left=Name(id='prefetch_type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='PREFETCH_TYPE', ctx=Load()), attr='WHERE', ctx=Load())]), body=[Assign(targets=[Name(id='expr', ctx=Store())], value=Call(func=Name(id='reduce', ctx=Load()), args=[Attribute(value=Name(id='operator', ctx=Load()), attr='or_', ctx=Load()), ListComp(elt=BinOp(left=Name(id='fk', ctx=Load()), op=LShift(), right=Call(func=Attribute(value=Name(id='last_query', ctx=Load()), attr='select', ctx=Load()), args=[Name(id='pk', ctx=Load())], keywords=[])), generators=[comprehension(target=Tuple(elts=[Name(id='fk', ctx=Store()), Name(id='pk', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='zip', ctx=Load()), args=[Name(id='fks', ctx=Load()), Name(id='pks', ctx=Load())], keywords=[]), ifs=[], is_async=0)])], keywords=[])), Assign(targets=[Name(id='subquery', ctx=Store())], value=Call(func=Attribute(value=Name(id='subquery', ctx=Load()), attr='where', ctx=Load()), args=[Name(id='expr', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='prefetch_type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='PREFETCH_TYPE', ctx=Load()), attr='JOIN', ctx=Load())]), body=[Assign(targets=[Name(id='expr', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='select_pks', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), For(target=Tuple(elts=[Name(id='fk', ctx=Store()), Name(id='pk', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='zip', ctx=Load()), args=[Name(id='fks', ctx=Load()), Name(id='pks', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='expr', ctx=Load()), attr='append', ctx=Load()), args=[Compare(left=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='last_query', ctx=Load()), attr='c', ctx=Load()), Attribute(value=Name(id='pk', ctx=Load()), attr='column_name', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Name(id='fk', ctx=Load())])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='select_pks', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='pk', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='subquery', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='subquery', ctx=Load()), attr='distinct', ctx=Load()), args=[], keywords=[]), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='last_query', ctx=Load()), attr='select', ctx=Load()), args=[Starred(value=Name(id='select_pks', ctx=Load()), ctx=Load())], keywords=[])], keywords=[keyword(arg='on', value=Call(func=Name(id='reduce', ctx=Load()), args=[Attribute(value=Name(id='operator', ctx=Load()), attr='or_', ctx=Load()), Name(id='expr', ctx=Load())], keywords=[]))]))], orelse=[])]), Expr(value=Call(func=Attribute(value=Name(id='fixed_queries', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='PrefetchQuery', ctx=Load()), args=[Name(id='subquery', ctx=Load()), Name(id='fks', ctx=Load()), Constant(value=False), Name(id='dest', ctx=Load())], keywords=[])], keywords=[]))], orelse=[If(test=Name(id='backrefs', ctx=Load()), body=[Assign(targets=[Name(id='expr', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='fields', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='backref', ctx=Store()), iter=Name(id='backrefs', ctx=Load()), body=[Assign(targets=[Name(id='rel_field', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='subquery_model', ctx=Load()), Attribute(value=Attribute(value=Name(id='backref', ctx=Load()), attr='rel_field', ctx=Load()), attr='name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='fk_field', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='last_obj', ctx=Load()), Attribute(value=Name(id='backref', ctx=Load()), attr='name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='fields', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='rel_field', ctx=Load()), Name(id='fk_field', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='prefetch_type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='PREFETCH_TYPE', ctx=Load()), attr='WHERE', ctx=Load())]), body=[For(target=Tuple(elts=[Name(id='rel_field', ctx=Store()), Name(id='fk_field', ctx=Store())], ctx=Store()), iter=Name(id='fields', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='expr', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Name(id='rel_field', ctx=Load()), op=LShift(), right=Call(func=Attribute(value=Name(id='last_query', ctx=Load()), attr='select', ctx=Load()), args=[Name(id='fk_field', ctx=Load())], keywords=[]))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='subquery', ctx=Store())], value=Call(func=Attribute(value=Name(id='subquery', ctx=Load()), attr='where', ctx=Load()), args=[Call(func=Name(id='reduce', ctx=Load()), args=[Attribute(value=Name(id='operator', ctx=Load()), attr='or_', ctx=Load()), Name(id='expr', ctx=Load())], keywords=[])], keywords=[]))], orelse=[If(test=Compare(left=Name(id='prefetch_type', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='PREFETCH_TYPE', ctx=Load()), attr='JOIN', ctx=Load())]), body=[Assign(targets=[Name(id='select_fks', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Tuple(elts=[Name(id='rel_field', ctx=Store()), Name(id='fk_field', ctx=Store())], ctx=Store()), iter=Name(id='fields', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='select_fks', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='fk_field', ctx=Load())], keywords=[])), Assign(targets=[Name(id='target', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='last_query', ctx=Load()), attr='c', ctx=Load()), Attribute(value=Name(id='fk_field', ctx=Load()), attr='column_name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='expr', ctx=Load()), attr='append', ctx=Load()), args=[Compare(left=Name(id='rel_field', ctx=Load()), ops=[Eq()], comparators=[Name(id='target', ctx=Load())])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='subquery', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='subquery', ctx=Load()), attr='distinct', ctx=Load()), args=[], keywords=[]), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='last_query', ctx=Load()), attr='select', ctx=Load()), args=[Starred(value=Name(id='select_fks', ctx=Load()), ctx=Load())], keywords=[])], keywords=[keyword(arg='on', value=Call(func=Name(id='reduce', ctx=Load()), args=[Attribute(value=Name(id='operator', ctx=Load()), attr='or_', ctx=Load()), Name(id='expr', ctx=Load())], keywords=[]))]))], orelse=[])]), Expr(value=Call(func=Attribute(value=Name(id='fixed_queries', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='PrefetchQuery', ctx=Load()), args=[Name(id='subquery', ctx=Load()), Name(id='backrefs', ctx=Load()), Constant(value=True), Name(id='dest', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])])], orelse=[]), Return(value=Name(id='fixed_queries', ctx=Load()))], decorator_list=[]), FunctionDef(name='prefetch', args=arguments(posonlyargs=[], args=[arg(arg='sq')], vararg=arg(arg='subqueries'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Name(id='subqueries', ctx=Load())), body=[Return(value=Name(id='sq', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='prefetch_type', ctx=Store())], value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='prefetch_type'), Attribute(value=Name(id='PREFETCH_TYPE', ctx=Load()), attr='WHERE', ctx=Load())], keywords=[])), If(test=Name(id='kwargs', ctx=Load()), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='Unrecognized arguments: %s'), op=Mod(), right=Name(id='kwargs', ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='fixed_queries', ctx=Store())], value=Call(func=Name(id='prefetch_add_subquery', ctx=Load()), args=[Name(id='sq', ctx=Load()), Name(id='subqueries', ctx=Load()), Name(id='prefetch_type', ctx=Load())], keywords=[])), Assign(targets=[Name(id='deps', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='rel_map', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Name(id='pq', ctx=Store()), iter=Call(func=Name(id='reversed', ctx=Load()), args=[Name(id='fixed_queries', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='query_model', ctx=Store())], value=Attribute(value=Name(id='pq', ctx=Load()), attr='model', ctx=Load())), If(test=Attribute(value=Name(id='pq', ctx=Load()), attr='fields', ctx=Load()), body=[For(target=Name(id='rel_model', ctx=Store()), iter=Attribute(value=Name(id='pq', ctx=Load()), attr='rel_models', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='rel_map', ctx=Load()), attr='setdefault', ctx=Load()), args=[Name(id='rel_model', ctx=Load()), List(elts=[], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Subscript(value=Name(id='rel_map', ctx=Load()), slice=Name(id='rel_model', ctx=Load()), ctx=Load()), attr='append', ctx=Load()), args=[Name(id='pq', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='deps', ctx=Load()), attr='setdefault', ctx=Load()), args=[Name(id='query_model', ctx=Load()), Dict(keys=[], values=[])], keywords=[])), Assign(targets=[Name(id='id_map', ctx=Store())], value=Subscript(value=Name(id='deps', ctx=Load()), slice=Name(id='query_model', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='has_relations', ctx=Store())], value=Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='rel_map', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='query_model', ctx=Load())], keywords=[])], keywords=[])), For(target=Name(id='instance', ctx=Store()), iter=Attribute(value=Name(id='pq', ctx=Load()), attr='query', ctx=Load()), body=[If(test=Attribute(value=Name(id='pq', ctx=Load()), attr='fields', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='pq', ctx=Load()), attr='store_instance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='id_map', ctx=Load())], keywords=[]))], orelse=[]), If(test=Name(id='has_relations', ctx=Load()), body=[For(target=Name(id='rel', ctx=Store()), iter=Subscript(value=Name(id='rel_map', ctx=Load()), slice=Name(id='query_model', ctx=Load()), ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='rel', ctx=Load()), attr='populate_instance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Subscript(value=Name(id='deps', ctx=Load()), slice=Attribute(value=Name(id='rel', ctx=Load()), attr='model', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], orelse=[]), Return(value=Call(func=Name(id='list', ctx=Load()), args=[Attribute(value=Name(id='pq', ctx=Load()), attr='query', ctx=Load())], keywords=[]))], decorator_list=[])], type_ignores=[])