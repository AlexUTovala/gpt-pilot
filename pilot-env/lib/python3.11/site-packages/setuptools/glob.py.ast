Module(body=[Expr(value=Constant(value='\nFilename globbing utility. Mostly a copy of `glob` from Python 3.5.\n\nChanges include:\n * `yield from` and PEP3102 `*` removed.\n * Hidden files are not ignored.\n')), Import(names=[alias(name='os')]), Import(names=[alias(name='re')]), Import(names=[alias(name='fnmatch')]), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='glob'), Constant(value='iglob'), Constant(value='escape')], ctx=Load())), FunctionDef(name='glob', args=arguments(posonlyargs=[], args=[arg(arg='pathname'), arg(arg='recursive')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Expr(value=Constant(value="Return a list of paths matching a pathname pattern.\n\n    The pattern may contain simple shell-style wildcards a la\n    fnmatch. However, unlike fnmatch, filenames starting with a\n    dot are special cases that are not matched by '*' and '?'\n    patterns.\n\n    If recursive is true, the pattern '**' will match any files and\n    zero or more directories and subdirectories.\n    ")), Return(value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='iglob', ctx=Load()), args=[Name(id='pathname', ctx=Load())], keywords=[keyword(arg='recursive', value=Name(id='recursive', ctx=Load()))])], keywords=[]))], decorator_list=[]), FunctionDef(name='iglob', args=arguments(posonlyargs=[], args=[arg(arg='pathname'), arg(arg='recursive')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Expr(value=Constant(value="Return an iterator which yields the paths matching a pathname pattern.\n\n    The pattern may contain simple shell-style wildcards a la\n    fnmatch. However, unlike fnmatch, filenames starting with a\n    dot are special cases that are not matched by '*' and '?'\n    patterns.\n\n    If recursive is true, the pattern '**' will match any files and\n    zero or more directories and subdirectories.\n    ")), Assign(targets=[Name(id='it', ctx=Store())], value=Call(func=Name(id='_iglob', ctx=Load()), args=[Name(id='pathname', ctx=Load()), Name(id='recursive', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Name(id='recursive', ctx=Load()), Call(func=Name(id='_isrecursive', ctx=Load()), args=[Name(id='pathname', ctx=Load())], keywords=[])]), body=[Assign(targets=[Name(id='s', ctx=Store())], value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='it', ctx=Load())], keywords=[])), Assert(test=UnaryOp(op=Not(), operand=Name(id='s', ctx=Load())))], orelse=[]), Return(value=Name(id='it', ctx=Load()))], decorator_list=[]), FunctionDef(name='_iglob', args=arguments(posonlyargs=[], args=[arg(arg='pathname'), arg(arg='recursive')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='dirname', ctx=Store()), Name(id='basename', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='split', ctx=Load()), args=[Name(id='pathname', ctx=Load())], keywords=[])), Assign(targets=[Name(id='glob_in_dir', ctx=Store())], value=IfExp(test=BoolOp(op=And(), values=[Name(id='recursive', ctx=Load()), Call(func=Name(id='_isrecursive', ctx=Load()), args=[Name(id='basename', ctx=Load())], keywords=[])]), body=Name(id='glob2', ctx=Load()), orelse=Name(id='glob1', ctx=Load()))), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='has_magic', ctx=Load()), args=[Name(id='pathname', ctx=Load())], keywords=[])), body=[If(test=Name(id='basename', ctx=Load()), body=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='lexists', ctx=Load()), args=[Name(id='pathname', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Name(id='pathname', ctx=Load())))], orelse=[])], orelse=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Name(id='pathname', ctx=Load())))], orelse=[])]), Return()], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='dirname', ctx=Load())), body=[Expr(value=YieldFrom(value=Call(func=Name(id='glob_in_dir', ctx=Load()), args=[Name(id='dirname', ctx=Load()), Name(id='basename', ctx=Load())], keywords=[]))), Return()], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='dirname', ctx=Load()), ops=[NotEq()], comparators=[Name(id='pathname', ctx=Load())]), Call(func=Name(id='has_magic', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[])]), body=[Assign(targets=[Name(id='dirs', ctx=Store())], value=Call(func=Name(id='_iglob', ctx=Load()), args=[Name(id='dirname', ctx=Load()), Name(id='recursive', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='dirs', ctx=Store())], value=List(elts=[Name(id='dirname', ctx=Load())], ctx=Load()))]), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='has_magic', ctx=Load()), args=[Name(id='basename', ctx=Load())], keywords=[])), body=[Assign(targets=[Name(id='glob_in_dir', ctx=Store())], value=Name(id='glob0', ctx=Load()))], orelse=[]), For(target=Name(id='dirname', ctx=Store()), iter=Name(id='dirs', ctx=Load()), body=[For(target=Name(id='name', ctx=Store()), iter=Call(func=Name(id='glob_in_dir', ctx=Load()), args=[Name(id='dirname', ctx=Load()), Name(id='basename', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dirname', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='glob1', args=arguments(posonlyargs=[], args=[arg(arg='dirname'), arg(arg='pattern')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Name(id='dirname', ctx=Load())), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='pattern', ctx=Load()), Name(id='bytes', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='dirname', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='curdir', ctx=Load()), attr='encode', ctx=Load()), args=[Constant(value='ASCII')], keywords=[]))], orelse=[Assign(targets=[Name(id='dirname', ctx=Store())], value=Attribute(value=Name(id='os', ctx=Load()), attr='curdir', ctx=Load()))])], orelse=[]), Try(body=[Assign(targets=[Name(id='names', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='OSError', ctx=Load()), body=[Return(value=List(elts=[], ctx=Load()))])], orelse=[], finalbody=[]), Return(value=Call(func=Attribute(value=Name(id='fnmatch', ctx=Load()), attr='filter', ctx=Load()), args=[Name(id='names', ctx=Load()), Name(id='pattern', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='glob0', args=arguments(posonlyargs=[], args=[arg(arg='dirname'), arg(arg='basename')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Name(id='basename', ctx=Load())), body=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[]), body=[Return(value=List(elts=[Name(id='basename', ctx=Load())], ctx=Load()))], orelse=[])], orelse=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='lexists', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dirname', ctx=Load()), Name(id='basename', ctx=Load())], keywords=[])], keywords=[]), body=[Return(value=List(elts=[Name(id='basename', ctx=Load())], ctx=Load()))], orelse=[])]), Return(value=List(elts=[], ctx=Load()))], decorator_list=[]), FunctionDef(name='glob2', args=arguments(posonlyargs=[], args=[arg(arg='dirname'), arg(arg='pattern')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=Call(func=Name(id='_isrecursive', ctx=Load()), args=[Name(id='pattern', ctx=Load())], keywords=[])), Expr(value=Yield(value=Subscript(value=Name(id='pattern', ctx=Load()), slice=Slice(upper=Constant(value=0)), ctx=Load()))), For(target=Name(id='x', ctx=Store()), iter=Call(func=Name(id='_rlistdir', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Name(id='x', ctx=Load())))], orelse=[])], decorator_list=[]), FunctionDef(name='_rlistdir', args=arguments(posonlyargs=[], args=[arg(arg='dirname')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Name(id='dirname', ctx=Load())), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='dirname', ctx=Load()), Name(id='bytes', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='dirname', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='curdir', ctx=Load()), attr='encode', ctx=Load()), args=[Constant(value='ASCII')], keywords=[]))], orelse=[Assign(targets=[Name(id='dirname', ctx=Store())], value=Attribute(value=Name(id='os', ctx=Load()), attr='curdir', ctx=Load()))])], orelse=[]), Try(body=[Assign(targets=[Name(id='names', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='os', ctx=Load()), attr='error', ctx=Load()), body=[Return()])], orelse=[], finalbody=[]), For(target=Name(id='x', ctx=Store()), iter=Name(id='names', ctx=Load()), body=[Expr(value=Yield(value=Name(id='x', ctx=Load()))), Assign(targets=[Name(id='path', ctx=Store())], value=IfExp(test=Name(id='dirname', ctx=Load()), body=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dirname', ctx=Load()), Name(id='x', ctx=Load())], keywords=[]), orelse=Name(id='x', ctx=Load()))), For(target=Name(id='y', ctx=Store()), iter=Call(func=Name(id='_rlistdir', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='x', ctx=Load()), Name(id='y', ctx=Load())], keywords=[])))], orelse=[])], orelse=[])], decorator_list=[]), Assign(targets=[Name(id='magic_check', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='([*?[])')], keywords=[])), Assign(targets=[Name(id='magic_check_bytes', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value=b'([*?[])')], keywords=[])), FunctionDef(name='has_magic', args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='s', ctx=Load()), Name(id='bytes', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='match', ctx=Store())], value=Call(func=Attribute(value=Name(id='magic_check_bytes', ctx=Load()), attr='search', ctx=Load()), args=[Name(id='s', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='match', ctx=Store())], value=Call(func=Attribute(value=Name(id='magic_check', ctx=Load()), attr='search', ctx=Load()), args=[Name(id='s', ctx=Load())], keywords=[]))]), Return(value=Compare(left=Name(id='match', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]))], decorator_list=[]), FunctionDef(name='_isrecursive', args=arguments(posonlyargs=[], args=[arg(arg='pattern')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='pattern', ctx=Load()), Name(id='bytes', ctx=Load())], keywords=[]), body=[Return(value=Compare(left=Name(id='pattern', ctx=Load()), ops=[Eq()], comparators=[Constant(value=b'**')]))], orelse=[Return(value=Compare(left=Name(id='pattern', ctx=Load()), ops=[Eq()], comparators=[Constant(value='**')]))])], decorator_list=[]), FunctionDef(name='escape', args=arguments(posonlyargs=[], args=[arg(arg='pathname')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Escape all special characters.')), Assign(targets=[Tuple(elts=[Name(id='drive', ctx=Store()), Name(id='pathname', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='splitdrive', ctx=Load()), args=[Name(id='pathname', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='pathname', ctx=Load()), Name(id='bytes', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='pathname', ctx=Store())], value=Call(func=Attribute(value=Name(id='magic_check_bytes', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value=b'[\\1]'), Name(id='pathname', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='pathname', ctx=Store())], value=Call(func=Attribute(value=Name(id='magic_check', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='[\\1]'), Name(id='pathname', ctx=Load())], keywords=[]))]), Return(value=BinOp(left=Name(id='drive', ctx=Load()), op=Add(), right=Name(id='pathname', ctx=Load())))], decorator_list=[])], type_ignores=[])