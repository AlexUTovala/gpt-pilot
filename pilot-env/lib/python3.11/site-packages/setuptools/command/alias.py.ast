Module(body=[ImportFrom(module='distutils.errors', names=[alias(name='DistutilsOptionError')], level=0), ImportFrom(module='setuptools.command.setopt', names=[alias(name='edit_config'), alias(name='option_base'), alias(name='config_file')], level=0), FunctionDef(name='shquote', args=arguments(posonlyargs=[], args=[arg(arg='arg')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Quote an argument for later parsing by shlex.split()')), For(target=Name(id='c', ctx=Store()), iter=Tuple(elts=[Constant(value='"'), Constant(value="'"), Constant(value='\\'), Constant(value='#')], ctx=Load()), body=[If(test=Compare(left=Name(id='c', ctx=Load()), ops=[In()], comparators=[Name(id='arg', ctx=Load())]), body=[Return(value=Call(func=Name(id='repr', ctx=Load()), args=[Name(id='arg', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), If(test=Compare(left=Call(func=Attribute(value=Name(id='arg', ctx=Load()), attr='split', ctx=Load()), args=[], keywords=[]), ops=[NotEq()], comparators=[List(elts=[Name(id='arg', ctx=Load())], ctx=Load())]), body=[Return(value=Call(func=Name(id='repr', ctx=Load()), args=[Name(id='arg', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='arg', ctx=Load()))], decorator_list=[]), ClassDef(name='alias', bases=[Name(id='option_base', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Define a shortcut that invokes one or more commands')), Assign(targets=[Name(id='description', ctx=Store())], value=Constant(value='define a shortcut to invoke one or more commands')), Assign(targets=[Name(id='command_consumes_arguments', ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='user_options', ctx=Store())], value=BinOp(left=List(elts=[Tuple(elts=[Constant(value='remove'), Constant(value='r'), Constant(value='remove (unset) the alias')], ctx=Load())], ctx=Load()), op=Add(), right=Attribute(value=Name(id='option_base', ctx=Load()), attr='user_options', ctx=Load()))), Assign(targets=[Name(id='boolean_options', ctx=Store())], value=BinOp(left=Attribute(value=Name(id='option_base', ctx=Load()), attr='boolean_options', ctx=Load()), op=Add(), right=List(elts=[Constant(value='remove')], ctx=Load()))), FunctionDef(name='initialize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='option_base', ctx=Load()), attr='initialize_options', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='args', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='remove', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='finalize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='option_base', ctx=Load()), attr='finalize_options', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='remove', ctx=Load()), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='args', ctx=Load())], keywords=[]), ops=[NotEq()], comparators=[Constant(value=1)])]), body=[Raise(exc=Call(func=Name(id='DistutilsOptionError', ctx=Load()), args=[Constant(value='Must specify exactly one argument (the alias name) when using --remove')], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='aliases', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='get_option_dict', ctx=Load()), args=[Constant(value='aliases')], keywords=[])), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='args', ctx=Load())), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Command Aliases')], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='---------------')], keywords=[])), For(target=Name(id='alias', ctx=Store()), iter=Name(id='aliases', ctx=Load()), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='setup.py alias'), Call(func=Name(id='format_alias', ctx=Load()), args=[Name(id='alias', ctx=Load()), Name(id='aliases', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Return()], orelse=[If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='args', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), body=[Assign(targets=[Tuple(elts=[Name(id='alias', ctx=Store())], ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='args', ctx=Load())), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='remove', ctx=Load()), body=[Assign(targets=[Name(id='command', ctx=Store())], value=Constant(value=None))], orelse=[If(test=Compare(left=Name(id='alias', ctx=Load()), ops=[In()], comparators=[Name(id='aliases', ctx=Load())]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='setup.py alias'), Call(func=Name(id='format_alias', ctx=Load()), args=[Name(id='alias', ctx=Load()), Name(id='aliases', ctx=Load())], keywords=[])], keywords=[])), Return()], orelse=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Constant(value='No alias definition found for %r'), op=Mod(), right=Name(id='alias', ctx=Load()))], keywords=[])), Return()])])], orelse=[Assign(targets=[Name(id='alias', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='args', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='command', ctx=Store())], value=Call(func=Attribute(value=Constant(value=' '), attr='join', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Name(id='shquote', ctx=Load()), Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='args', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load())], keywords=[])], keywords=[]))])]), Expr(value=Call(func=Name(id='edit_config', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load()), Dict(keys=[Constant(value='aliases')], values=[Dict(keys=[Name(id='alias', ctx=Load())], values=[Name(id='command', ctx=Load())])]), Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), FunctionDef(name='format_alias', args=arguments(posonlyargs=[], args=[arg(arg='name'), arg(arg='aliases')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='source', ctx=Store()), Name(id='command', ctx=Store())], ctx=Store())], value=Subscript(value=Name(id='aliases', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Load())), If(test=Compare(left=Name(id='source', ctx=Load()), ops=[Eq()], comparators=[Call(func=Name(id='config_file', ctx=Load()), args=[Constant(value='global')], keywords=[])]), body=[Assign(targets=[Name(id='source', ctx=Store())], value=Constant(value='--global-config '))], orelse=[If(test=Compare(left=Name(id='source', ctx=Load()), ops=[Eq()], comparators=[Call(func=Name(id='config_file', ctx=Load()), args=[Constant(value='user')], keywords=[])]), body=[Assign(targets=[Name(id='source', ctx=Store())], value=Constant(value='--user-config '))], orelse=[If(test=Compare(left=Name(id='source', ctx=Load()), ops=[Eq()], comparators=[Call(func=Name(id='config_file', ctx=Load()), args=[Constant(value='local')], keywords=[])]), body=[Assign(targets=[Name(id='source', ctx=Store())], value=Constant(value=''))], orelse=[Assign(targets=[Name(id='source', ctx=Store())], value=BinOp(left=Constant(value='--filename=%r'), op=Mod(), right=Name(id='source', ctx=Load())))])])]), Return(value=BinOp(left=BinOp(left=BinOp(left=Name(id='source', ctx=Load()), op=Add(), right=Name(id='name', ctx=Load())), op=Add(), right=Constant(value=' ')), op=Add(), right=Name(id='command', ctx=Load())))], decorator_list=[])], type_ignores=[])