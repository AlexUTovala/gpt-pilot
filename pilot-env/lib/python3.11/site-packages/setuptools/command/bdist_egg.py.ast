Module(body=[Expr(value=Constant(value='setuptools.command.bdist_egg\n\nBuild .egg distributions')), ImportFrom(module='distutils.dir_util', names=[alias(name='remove_tree'), alias(name='mkpath')], level=0), ImportFrom(module='distutils', names=[alias(name='log')], level=0), ImportFrom(module='types', names=[alias(name='CodeType')], level=0), Import(names=[alias(name='sys')]), Import(names=[alias(name='os')]), Import(names=[alias(name='re')]), Import(names=[alias(name='textwrap')]), Import(names=[alias(name='marshal')]), ImportFrom(module='setuptools.extension', names=[alias(name='Library')], level=0), ImportFrom(module='setuptools', names=[alias(name='Command')], level=0), ImportFrom(module='_path', names=[alias(name='ensure_directory')], level=2), ImportFrom(module='sysconfig', names=[alias(name='get_path'), alias(name='get_python_version')], level=0), FunctionDef(name='_get_purelib', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='get_path', ctx=Load()), args=[Constant(value='purelib')], keywords=[]))], decorator_list=[]), FunctionDef(name='strip_module', args=arguments(posonlyargs=[], args=[arg(arg='filename')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Constant(value='.'), ops=[In()], comparators=[Name(id='filename', ctx=Load())]), body=[Assign(targets=[Name(id='filename', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='splitext', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()))], orelse=[]), If(test=Call(func=Attribute(value=Name(id='filename', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='module')], keywords=[]), body=[Assign(targets=[Name(id='filename', ctx=Store())], value=Subscript(value=Name(id='filename', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=6))), ctx=Load()))], orelse=[]), Return(value=Name(id='filename', ctx=Load()))], decorator_list=[]), FunctionDef(name='sorted_walk', args=arguments(posonlyargs=[], args=[arg(arg='dir')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Do os.walk in a reproducible way,\n    independent of indeterministic filesystem readdir order\n    ')), For(target=Tuple(elts=[Name(id='base', ctx=Store()), Name(id='dirs', ctx=Store()), Name(id='files', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='walk', ctx=Load()), args=[Name(id='dir', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='dirs', ctx=Load()), attr='sort', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='files', ctx=Load()), attr='sort', ctx=Load()), args=[], keywords=[])), Expr(value=Yield(value=Tuple(elts=[Name(id='base', ctx=Load()), Name(id='dirs', ctx=Load()), Name(id='files', ctx=Load())], ctx=Load())))], orelse=[])], decorator_list=[]), FunctionDef(name='write_stub', args=arguments(posonlyargs=[], args=[arg(arg='resource'), arg(arg='pyfile')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='_stub_template', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='textwrap', ctx=Load()), attr='dedent', ctx=Load()), args=[Constant(value='\n        def __bootstrap__():\n            global __bootstrap__, __loader__, __file__\n            import sys, pkg_resources, importlib.util\n            __file__ = pkg_resources.resource_filename(__name__, %r)\n            __loader__ = None; del __bootstrap__, __loader__\n            spec = importlib.util.spec_from_file_location(__name__,__file__)\n            mod = importlib.util.module_from_spec(spec)\n            spec.loader.exec_module(mod)\n        __bootstrap__()\n        ')], keywords=[]), attr='lstrip', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='pyfile', ctx=Load()), Constant(value='w')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Name(id='_stub_template', ctx=Load()), op=Mod(), right=Name(id='resource', ctx=Load()))], keywords=[]))])], decorator_list=[]), ClassDef(name='bdist_egg', bases=[Name(id='Command', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='description', ctx=Store())], value=Constant(value='create an "egg" distribution')), Assign(targets=[Name(id='user_options', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='bdist-dir='), Constant(value='b'), Constant(value='temporary directory for creating the distribution')], ctx=Load()), Tuple(elts=[Constant(value='plat-name='), Constant(value='p'), Constant(value='platform name to embed in generated filenames (by default uses `pkg_resources.get_build_platform()`)')], ctx=Load()), Tuple(elts=[Constant(value='exclude-source-files'), Constant(value=None), Constant(value='remove all .py files from the generated egg')], ctx=Load()), Tuple(elts=[Constant(value='keep-temp'), Constant(value='k'), BinOp(left=Constant(value='keep the pseudo-installation tree around after '), op=Add(), right=Constant(value='creating the distribution archive'))], ctx=Load()), Tuple(elts=[Constant(value='dist-dir='), Constant(value='d'), Constant(value='directory to put final built distributions in')], ctx=Load()), Tuple(elts=[Constant(value='skip-build'), Constant(value=None), Constant(value='skip rebuilding everything (for testing/debugging)')], ctx=Load())], ctx=Load())), Assign(targets=[Name(id='boolean_options', ctx=Store())], value=List(elts=[Constant(value='keep-temp'), Constant(value='skip-build'), Constant(value='exclude-source-files')], ctx=Load())), FunctionDef(name='initialize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='plat_name', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='keep_temp', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='dist_dir', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='skip_build', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='egg_output', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='exclude_source_files', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='finalize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='ei_cmd', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='ei_cmd', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_finalized_command', ctx=Load()), args=[Constant(value='egg_info')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='egg_info', ctx=Store())], value=Attribute(value=Name(id='ei_cmd', ctx=Load()), attr='egg_info', ctx=Load())), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='bdist_base', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_finalized_command', ctx=Load()), args=[Constant(value='bdist')], keywords=[]), attr='bdist_base', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='bdist_base', ctx=Load()), Constant(value='egg')], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='plat_name', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[ImportFrom(module='pkg_resources', names=[alias(name='get_build_platform')], level=0), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='plat_name', ctx=Store())], value=Call(func=Name(id='get_build_platform', ctx=Load()), args=[], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='set_undefined_options', ctx=Load()), args=[Constant(value='bdist'), Tuple(elts=[Constant(value='dist_dir'), Constant(value='dist_dir')], ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='egg_output', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='basename', ctx=Store())], value=Call(func=Attribute(value=Name(id='ei_cmd', ctx=Load()), attr='_get_egg_basename', ctx=Load()), args=[], keywords=[keyword(arg='py_version', value=Call(func=Name(id='get_python_version', ctx=Load()), args=[], keywords=[])), keyword(arg='platform', value=BoolOp(op=And(), values=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='has_ext_modules', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='plat_name', ctx=Load())]))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='egg_output', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='dist_dir', ctx=Load()), BinOp(left=Name(id='basename', ctx=Load()), op=Add(), right=Constant(value='.egg'))], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='do_install_data', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_finalized_command', ctx=Load()), args=[Constant(value='install')], keywords=[]), attr='install_lib', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Load())), Assign(targets=[Name(id='site_packages', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normcase', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='realpath', ctx=Load()), args=[Call(func=Name(id='_get_purelib', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='old', ctx=Store()), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='data_files', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='data_files', ctx=Load()), List(elts=[], ctx=Load())], ctx=Load())), For(target=Name(id='item', ctx=Store()), iter=Name(id='old', ctx=Load()), body=[If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='item', ctx=Load()), Name(id='tuple', ctx=Load())], keywords=[]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='item', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=2)])]), body=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isabs', ctx=Load()), args=[Subscript(value=Name(id='item', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='realpath', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='realpath', ctx=Load()), args=[Subscript(value=Name(id='item', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[])), Assign(targets=[Name(id='normalized', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normcase', ctx=Load()), args=[Name(id='realpath', ctx=Load())], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='normalized', ctx=Load()), ops=[Eq()], comparators=[Name(id='site_packages', ctx=Load())]), Call(func=Attribute(value=Name(id='normalized', ctx=Load()), attr='startswith', ctx=Load()), args=[BinOp(left=Name(id='site_packages', ctx=Load()), op=Add(), right=Attribute(value=Name(id='os', ctx=Load()), attr='sep', ctx=Load()))], keywords=[])]), body=[Assign(targets=[Name(id='item', ctx=Store())], value=Tuple(elts=[Subscript(value=Name(id='realpath', ctx=Load()), slice=Slice(lower=BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='site_packages', ctx=Load())], keywords=[]), op=Add(), right=Constant(value=1))), ctx=Load()), Subscript(value=Name(id='item', ctx=Load()), slice=Constant(value=1), ctx=Load())], ctx=Load()))], orelse=[])], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='data_files', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='item', ctx=Load())], keywords=[]))], orelse=[]), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='installing package data to %s'), Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='call_command', ctx=Load()), args=[Constant(value='install_data')], keywords=[keyword(arg='force', value=Constant(value=0)), keyword(arg='root', value=Constant(value=None))]))], handlers=[], orelse=[], finalbody=[Assign(targets=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='data_files', ctx=Store())], value=Name(id='old', ctx=Load()))])], decorator_list=[]), FunctionDef(name='get_outputs', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=List(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='egg_output', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='call_command', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cmdname')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kw'), defaults=[]), body=[Expr(value=Constant(value='Invoke reinitialized command `cmdname` with keyword args')), For(target=Name(id='dirname', ctx=Store()), iter=Name(id='INSTALL_DIRECTORY_ATTRS', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='kw', ctx=Load()), attr='setdefault', ctx=Load()), args=[Name(id='dirname', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='kw', ctx=Load()), attr='setdefault', ctx=Load()), args=[Constant(value='skip_build'), Attribute(value=Name(id='self', ctx=Load()), attr='skip_build', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='kw', ctx=Load()), attr='setdefault', ctx=Load()), args=[Constant(value='dry_run'), Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cmd', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='reinitialize_command', ctx=Load()), args=[Name(id='cmdname', ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_command', ctx=Load()), args=[Name(id='cmdname', ctx=Load())], keywords=[])), Return(value=Name(id='cmd', ctx=Load()))], decorator_list=[]), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_command', ctx=Load()), args=[Constant(value='egg_info')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='installing library code to %s'), Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Load())], keywords=[])), Assign(targets=[Name(id='instcmd', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_finalized_command', ctx=Load()), args=[Constant(value='install')], keywords=[])), Assign(targets=[Name(id='old_root', ctx=Store())], value=Attribute(value=Name(id='instcmd', ctx=Load()), attr='root', ctx=Load())), Assign(targets=[Attribute(value=Name(id='instcmd', ctx=Load()), attr='root', ctx=Store())], value=Constant(value=None)), If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='has_c_libraries', ctx=Load()), args=[], keywords=[]), UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='skip_build', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_command', ctx=Load()), args=[Constant(value='build_clib')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='cmd', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='call_command', ctx=Load()), args=[Constant(value='install_lib')], keywords=[keyword(arg='warn_dir', value=Constant(value=0))])), Assign(targets=[Attribute(value=Name(id='instcmd', ctx=Load()), attr='root', ctx=Store())], value=Name(id='old_root', ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='all_outputs', ctx=Store()), Name(id='ext_outputs', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_ext_outputs', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='stubs', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='to_compile', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Tuple(elts=[Name(id='p', ctx=Store()), Name(id='ext_name', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='ext_outputs', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='filename', ctx=Store()), Name(id='ext', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='splitext', ctx=Load()), args=[Name(id='ext_name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='pyfile', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Load()), BinOp(left=Call(func=Name(id='strip_module', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[]), op=Add(), right=Constant(value='.py'))], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stubs', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='pyfile', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='creating stub loader for %s'), Name(id='ext_name', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load())), body=[Expr(value=Call(func=Name(id='write_stub', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Name(id='ext_name', ctx=Load())], keywords=[]), Name(id='pyfile', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='to_compile', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='pyfile', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='ext_outputs', ctx=Load()), slice=Name(id='p', ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Name(id='ext_name', ctx=Load()), attr='replace', ctx=Load()), args=[Attribute(value=Name(id='os', ctx=Load()), attr='sep', ctx=Load()), Constant(value='/')], keywords=[]))], orelse=[]), If(test=Name(id='to_compile', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='cmd', ctx=Load()), attr='byte_compile', ctx=Load()), args=[Name(id='to_compile', ctx=Load())], keywords=[]))], orelse=[]), If(test=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='data_files', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='do_install_data', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='archive_root', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Load())), Assign(targets=[Name(id='egg_info', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='archive_root', ctx=Load()), Constant(value='EGG-INFO')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='mkpath', ctx=Load()), args=[Name(id='egg_info', ctx=Load())], keywords=[])), If(test=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='scripts', ctx=Load()), body=[Assign(targets=[Name(id='script_dir', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='egg_info', ctx=Load()), Constant(value='scripts')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='installing scripts to %s'), Name(id='script_dir', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='call_command', ctx=Load()), args=[Constant(value='install_scripts')], keywords=[keyword(arg='install_dir', value=Name(id='script_dir', ctx=Load())), keyword(arg='no_ep', value=Constant(value=1))]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='copy_metadata_to', ctx=Load()), args=[Name(id='egg_info', ctx=Load())], keywords=[])), Assign(targets=[Name(id='native_libs', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='egg_info', ctx=Load()), Constant(value='native_libs.txt')], keywords=[])), If(test=Name(id='all_outputs', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='writing %s'), Name(id='native_libs', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load())), body=[Expr(value=Call(func=Name(id='ensure_directory', ctx=Load()), args=[Name(id='native_libs', ctx=Load())], keywords=[])), Assign(targets=[Name(id='libs_file', ctx=Store())], value=Call(func=Name(id='open', ctx=Load()), args=[Name(id='native_libs', ctx=Load()), Constant(value='wt')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='libs_file', ctx=Load()), attr='write', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='\n'), attr='join', ctx=Load()), args=[Name(id='all_outputs', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='libs_file', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='\n')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='libs_file', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], orelse=[])], orelse=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isfile', ctx=Load()), args=[Name(id='native_libs', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='removing %s'), Name(id='native_libs', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='unlink', ctx=Load()), args=[Name(id='native_libs', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])]), Expr(value=Call(func=Name(id='write_safety_flag', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='archive_root', ctx=Load()), Constant(value='EGG-INFO')], keywords=[]), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='zip_safe', ctx=Load()), args=[], keywords=[])], keywords=[])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='egg_info', ctx=Load()), Constant(value='depends.txt')], keywords=[])], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='warn', ctx=Load()), args=[Constant(value="WARNING: 'depends.txt' will not be used by setuptools 0.6!\nUse the install_requires/extras_require setup() args instead.")], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='exclude_source_files', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='zap_pyfiles', ctx=Load()), args=[], keywords=[]))], orelse=[]), Expr(value=Call(func=Name(id='make_zipfile', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='egg_output', ctx=Load()), Name(id='archive_root', ctx=Load())], keywords=[keyword(arg='verbose', value=Attribute(value=Name(id='self', ctx=Load()), attr='verbose', ctx=Load())), keyword(arg='dry_run', value=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load())), keyword(arg='mode', value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='gen_header', ctx=Load()), args=[], keywords=[]))])), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='keep_temp', ctx=Load())), body=[Expr(value=Call(func=Name(id='remove_tree', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Load())], keywords=[keyword(arg='dry_run', value=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load()))]))], orelse=[]), Expr(value=Call(func=Attribute(value=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), Constant(value='dist_files'), List(elts=[], ctx=Load())], keywords=[]), attr='append', ctx=Load()), args=[Tuple(elts=[Constant(value='bdist_egg'), Call(func=Name(id='get_python_version', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='egg_output', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='zap_pyfiles', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Removing .py files from temporary directory')], keywords=[])), For(target=Tuple(elts=[Name(id='base', ctx=Store()), Name(id='dirs', ctx=Store()), Name(id='files', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='walk_egg', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Load())], keywords=[]), body=[For(target=Name(id='name', ctx=Store()), iter=Name(id='files', ctx=Load()), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='base', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), If(test=Call(func=Attribute(value=Name(id='name', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.py')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Deleting %s'), Name(id='path', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='unlink', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))], orelse=[]), If(test=Call(func=Attribute(value=Name(id='base', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='__pycache__')], keywords=[]), body=[Assign(targets=[Name(id='path_old', ctx=Store())], value=Name(id='path', ctx=Load())), Assign(targets=[Name(id='pattern', ctx=Store())], value=Constant(value='(?P<name>.+)\\.(?P<magic>[^.]+)\\.pyc')), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='pattern', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='path_new', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='base', ctx=Load()), Attribute(value=Name(id='os', ctx=Load()), attr='pardir', ctx=Load()), BinOp(left=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='group', ctx=Load()), args=[Constant(value='name')], keywords=[]), op=Add(), right=Constant(value='.pyc'))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[BinOp(left=Constant(value='Renaming file from [%s] to [%s]'), op=Mod(), right=Tuple(elts=[Name(id='path_old', ctx=Load()), Name(id='path_new', ctx=Load())], ctx=Load()))], keywords=[])), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='path_new', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='OSError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[]), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='rename', ctx=Load()), args=[Name(id='path_old', ctx=Load()), Name(id='path_new', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='zip_safe', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='safe', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), Constant(value='zip_safe'), Constant(value=None)], keywords=[])), If(test=Compare(left=Name(id='safe', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Name(id='safe', ctx=Load()))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='warn', ctx=Load()), args=[Constant(value='zip_safe flag not set; analyzing archive contents...')], keywords=[])), Return(value=Call(func=Name(id='analyze_egg', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='stubs', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='gen_header', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value='w'))], decorator_list=[]), FunctionDef(name='copy_metadata_to', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='target_dir')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Copy metadata (egg info) to the target_dir')), Assign(targets=[Name(id='norm_egg_info', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normpath', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='egg_info', ctx=Load())], keywords=[])), Assign(targets=[Name(id='prefix', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='norm_egg_info', ctx=Load()), Constant(value='')], keywords=[])), For(target=Name(id='path', ctx=Store()), iter=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='ei_cmd', ctx=Load()), attr='filelist', ctx=Load()), attr='files', ctx=Load()), body=[If(test=Call(func=Attribute(value=Name(id='path', ctx=Load()), attr='startswith', ctx=Load()), args=[Name(id='prefix', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='target', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='target_dir', ctx=Load()), Subscript(value=Name(id='path', ctx=Load()), slice=Slice(lower=Call(func=Name(id='len', ctx=Load()), args=[Name(id='prefix', ctx=Load())], keywords=[])), ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='ensure_directory', ctx=Load()), args=[Name(id='target', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='copy_file', ctx=Load()), args=[Name(id='path', ctx=Load()), Name(id='target', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='get_ext_outputs', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get a list of relative paths to C extensions in the output distro')), Assign(targets=[Name(id='all_outputs', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='ext_outputs', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='paths', ctx=Store())], value=Dict(keys=[Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Load())], values=[Constant(value='')])), For(target=Tuple(elts=[Name(id='base', ctx=Store()), Name(id='dirs', ctx=Store()), Name(id='files', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='sorted_walk', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Load())], keywords=[]), body=[For(target=Name(id='filename', ctx=Store()), iter=Name(id='files', ctx=Load()), body=[If(test=Compare(left=Call(func=Attribute(value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='splitext', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[]), slice=Constant(value=1), ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), ops=[In()], comparators=[Name(id='NATIVE_EXTENSIONS', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='all_outputs', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Subscript(value=Name(id='paths', ctx=Load()), slice=Name(id='base', ctx=Load()), ctx=Load()), op=Add(), right=Name(id='filename', ctx=Load()))], keywords=[]))], orelse=[])], orelse=[]), For(target=Name(id='filename', ctx=Store()), iter=Name(id='dirs', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='paths', ctx=Load()), slice=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='base', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[]), ctx=Store())], value=BinOp(left=BinOp(left=Subscript(value=Name(id='paths', ctx=Load()), slice=Name(id='base', ctx=Load()), ctx=Load()), op=Add(), right=Name(id='filename', ctx=Load())), op=Add(), right=Constant(value='/')))], orelse=[])], orelse=[]), If(test=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='has_ext_modules', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='build_cmd', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_finalized_command', ctx=Load()), args=[Constant(value='build_ext')], keywords=[])), For(target=Name(id='ext', ctx=Store()), iter=Attribute(value=Name(id='build_cmd', ctx=Load()), attr='extensions', ctx=Load()), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='ext', ctx=Load()), Name(id='Library', ctx=Load())], keywords=[]), body=[Continue()], orelse=[]), Assign(targets=[Name(id='fullname', ctx=Store())], value=Call(func=Attribute(value=Name(id='build_cmd', ctx=Load()), attr='get_ext_fullname', ctx=Load()), args=[Attribute(value=Name(id='ext', ctx=Load()), attr='name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='filename', ctx=Store())], value=Call(func=Attribute(value=Name(id='build_cmd', ctx=Load()), attr='get_ext_filename', ctx=Load()), args=[Name(id='fullname', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[]), attr='startswith', ctx=Load()), args=[Constant(value='dl-')], keywords=[])), body=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[])], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='ext_outputs', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], orelse=[]), Return(value=Tuple(elts=[Name(id='all_outputs', ctx=Load()), Name(id='ext_outputs', ctx=Load())], ctx=Load()))], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='NATIVE_EXTENSIONS', ctx=Store())], value=Call(func=Attribute(value=Name(id='dict', ctx=Load()), attr='fromkeys', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='.dll .so .dylib .pyd'), attr='split', ctx=Load()), args=[], keywords=[])], keywords=[])), FunctionDef(name='walk_egg', args=arguments(posonlyargs=[], args=[arg(arg='egg_dir')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="Walk an unpacked egg's contents, skipping the metadata directory")), Assign(targets=[Name(id='walker', ctx=Store())], value=Call(func=Name(id='sorted_walk', ctx=Load()), args=[Name(id='egg_dir', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='base', ctx=Store()), Name(id='dirs', ctx=Store()), Name(id='files', ctx=Store())], ctx=Store())], value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='walker', ctx=Load())], keywords=[])), If(test=Compare(left=Constant(value='EGG-INFO'), ops=[In()], comparators=[Name(id='dirs', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='dirs', ctx=Load()), attr='remove', ctx=Load()), args=[Constant(value='EGG-INFO')], keywords=[]))], orelse=[]), Expr(value=Yield(value=Tuple(elts=[Name(id='base', ctx=Load()), Name(id='dirs', ctx=Load()), Name(id='files', ctx=Load())], ctx=Load()))), For(target=Name(id='bdf', ctx=Store()), iter=Name(id='walker', ctx=Load()), body=[Expr(value=Yield(value=Name(id='bdf', ctx=Load())))], orelse=[])], decorator_list=[]), FunctionDef(name='analyze_egg', args=arguments(posonlyargs=[], args=[arg(arg='egg_dir'), arg(arg='stubs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Tuple(elts=[Name(id='flag', ctx=Store()), Name(id='fn', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='safety_flags', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='egg_dir', ctx=Load()), Constant(value='EGG-INFO'), Name(id='fn', ctx=Load())], keywords=[])], keywords=[]), body=[Return(value=Name(id='flag', ctx=Load()))], orelse=[])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='can_scan', ctx=Load()), args=[], keywords=[])), body=[Return(value=Constant(value=False))], orelse=[]), Assign(targets=[Name(id='safe', ctx=Store())], value=Constant(value=True)), For(target=Tuple(elts=[Name(id='base', ctx=Store()), Name(id='dirs', ctx=Store()), Name(id='files', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='walk_egg', ctx=Load()), args=[Name(id='egg_dir', ctx=Load())], keywords=[]), body=[For(target=Name(id='name', ctx=Store()), iter=Name(id='files', ctx=Load()), body=[If(test=BoolOp(op=Or(), values=[Call(func=Attribute(value=Name(id='name', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.py')], keywords=[]), Call(func=Attribute(value=Name(id='name', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.pyw')], keywords=[])]), body=[Continue()], orelse=[If(test=BoolOp(op=Or(), values=[Call(func=Attribute(value=Name(id='name', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.pyc')], keywords=[]), Call(func=Attribute(value=Name(id='name', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.pyo')], keywords=[])]), body=[Assign(targets=[Name(id='safe', ctx=Store())], value=BoolOp(op=And(), values=[Call(func=Name(id='scan_module', ctx=Load()), args=[Name(id='egg_dir', ctx=Load()), Name(id='base', ctx=Load()), Name(id='name', ctx=Load()), Name(id='stubs', ctx=Load())], keywords=[]), Name(id='safe', ctx=Load())]))], orelse=[])])], orelse=[])], orelse=[]), Return(value=Name(id='safe', ctx=Load()))], decorator_list=[]), FunctionDef(name='write_safety_flag', args=arguments(posonlyargs=[], args=[arg(arg='egg_dir'), arg(arg='safe')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Tuple(elts=[Name(id='flag', ctx=Store()), Name(id='fn', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='safety_flags', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='fn', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='egg_dir', ctx=Load()), Name(id='fn', ctx=Load())], keywords=[])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[]), body=[If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='safe', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Call(func=Name(id='bool', ctx=Load()), args=[Name(id='safe', ctx=Load())], keywords=[]), ops=[NotEq()], comparators=[Name(id='flag', ctx=Load())])]), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='unlink', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[]))], orelse=[])], orelse=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='safe', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Call(func=Name(id='bool', ctx=Load()), args=[Name(id='safe', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Name(id='flag', ctx=Load())])]), body=[Assign(targets=[Name(id='f', ctx=Store())], value=Call(func=Name(id='open', ctx=Load()), args=[Name(id='fn', ctx=Load()), Constant(value='wt')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='\n')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], orelse=[])])], orelse=[])], decorator_list=[]), Assign(targets=[Name(id='safety_flags', ctx=Store())], value=Dict(keys=[Constant(value=True), Constant(value=False)], values=[Constant(value='zip-safe'), Constant(value='not-zip-safe')])), FunctionDef(name='scan_module', args=arguments(posonlyargs=[], args=[arg(arg='egg_dir'), arg(arg='base'), arg(arg='name'), arg(arg='stubs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Check whether module possibly uses unsafe-for-zipfile stuff')), Assign(targets=[Name(id='filename', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='base', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), If(test=Compare(left=Subscript(value=Name(id='filename', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()), ops=[In()], comparators=[Name(id='stubs', ctx=Load())]), body=[Return(value=Constant(value=True))], orelse=[]), Assign(targets=[Name(id='pkg', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='base', ctx=Load()), slice=Slice(lower=BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='egg_dir', ctx=Load())], keywords=[]), op=Add(), right=Constant(value=1))), ctx=Load()), attr='replace', ctx=Load()), args=[Attribute(value=Name(id='os', ctx=Load()), attr='sep', ctx=Load()), Constant(value='.')], keywords=[])), Assign(targets=[Name(id='module', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='pkg', ctx=Load()), op=Add(), right=BoolOp(op=Or(), values=[BoolOp(op=And(), values=[Name(id='pkg', ctx=Load()), Constant(value='.')]), Constant(value='')])), op=Add(), right=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='splitext', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()))), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[Lt()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=7)], ctx=Load())]), body=[Assign(targets=[Name(id='skip', ctx=Store())], value=Constant(value=12))], orelse=[Assign(targets=[Name(id='skip', ctx=Store())], value=Constant(value=16))]), Assign(targets=[Name(id='f', ctx=Store())], value=Call(func=Name(id='open', ctx=Load()), args=[Name(id='filename', ctx=Load()), Constant(value='rb')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='read', ctx=Load()), args=[Name(id='skip', ctx=Load())], keywords=[])), Assign(targets=[Name(id='code', ctx=Store())], value=Call(func=Attribute(value=Name(id='marshal', ctx=Load()), attr='load', ctx=Load()), args=[Name(id='f', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='safe', ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='symbols', ctx=Store())], value=Call(func=Attribute(value=Name(id='dict', ctx=Load()), attr='fromkeys', ctx=Load()), args=[Call(func=Name(id='iter_symbols', ctx=Load()), args=[Name(id='code', ctx=Load())], keywords=[])], keywords=[])), For(target=Name(id='bad', ctx=Store()), iter=List(elts=[Constant(value='__file__'), Constant(value='__path__')], ctx=Load()), body=[If(test=Compare(left=Name(id='bad', ctx=Load()), ops=[In()], comparators=[Name(id='symbols', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='warn', ctx=Load()), args=[Constant(value='%s: module references %s'), Name(id='module', ctx=Load()), Name(id='bad', ctx=Load())], keywords=[])), Assign(targets=[Name(id='safe', ctx=Store())], value=Constant(value=False))], orelse=[])], orelse=[]), If(test=Compare(left=Constant(value='inspect'), ops=[In()], comparators=[Name(id='symbols', ctx=Load())]), body=[For(target=Name(id='bad', ctx=Store()), iter=List(elts=[Constant(value='getsource'), Constant(value='getabsfile'), Constant(value='getsourcefile'), Constant(value='getfilegetsourcelines'), Constant(value='findsource'), Constant(value='getcomments'), Constant(value='getframeinfo'), Constant(value='getinnerframes'), Constant(value='getouterframes'), Constant(value='stack'), Constant(value='trace')], ctx=Load()), body=[If(test=Compare(left=Name(id='bad', ctx=Load()), ops=[In()], comparators=[Name(id='symbols', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='warn', ctx=Load()), args=[Constant(value='%s: module MAY be using inspect.%s'), Name(id='module', ctx=Load()), Name(id='bad', ctx=Load())], keywords=[])), Assign(targets=[Name(id='safe', ctx=Store())], value=Constant(value=False))], orelse=[])], orelse=[])], orelse=[]), Return(value=Name(id='safe', ctx=Load()))], decorator_list=[]), FunctionDef(name='iter_symbols', args=arguments(posonlyargs=[], args=[arg(arg='code')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Yield names and strings used by `code` and its nested code objects')), For(target=Name(id='name', ctx=Store()), iter=Attribute(value=Name(id='code', ctx=Load()), attr='co_names', ctx=Load()), body=[Expr(value=Yield(value=Name(id='name', ctx=Load())))], orelse=[]), For(target=Name(id='const', ctx=Store()), iter=Attribute(value=Name(id='code', ctx=Load()), attr='co_consts', ctx=Load()), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='const', ctx=Load()), Name(id='str', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Name(id='const', ctx=Load())))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='const', ctx=Load()), Name(id='CodeType', ctx=Load())], keywords=[]), body=[For(target=Name(id='name', ctx=Store()), iter=Call(func=Name(id='iter_symbols', ctx=Load()), args=[Name(id='const', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Name(id='name', ctx=Load())))], orelse=[])], orelse=[])])], orelse=[])], decorator_list=[]), FunctionDef(name='can_scan', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='java')], keywords=[])), Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='cli')])]), body=[Return(value=Constant(value=True))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='warn', ctx=Load()), args=[Constant(value='Unable to analyze compiled code on this platform.')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='warn', ctx=Load()), args=[Constant(value="Please ask the author to include a 'zip_safe' setting (either True or False) in the package's setup.py")], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='INSTALL_DIRECTORY_ATTRS', ctx=Store())], value=List(elts=[Constant(value='install_lib'), Constant(value='install_dir'), Constant(value='install_data'), Constant(value='install_base')], ctx=Load())), FunctionDef(name='make_zipfile', args=arguments(posonlyargs=[], args=[arg(arg='zip_filename'), arg(arg='base_dir'), arg(arg='verbose'), arg(arg='dry_run'), arg(arg='compress'), arg(arg='mode')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=0), Constant(value=0), Constant(value=True), Constant(value='w')]), body=[Expr(value=Constant(value='Create a zip file from all the files under \'base_dir\'.  The output\n    zip file will be named \'base_dir\' + ".zip".  Uses either the "zipfile"\n    Python module (if available) or the InfoZIP "zip" utility (if installed\n    and found on the default search path).  If neither tool is available,\n    raises DistutilsExecError.  Returns the name of the output zip file.\n    ')), Import(names=[alias(name='zipfile')]), Expr(value=Call(func=Name(id='mkpath', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='dirname', ctx=Load()), args=[Name(id='zip_filename', ctx=Load())], keywords=[])], keywords=[keyword(arg='dry_run', value=Name(id='dry_run', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value="creating '%s' and adding '%s' to it"), Name(id='zip_filename', ctx=Load()), Name(id='base_dir', ctx=Load())], keywords=[])), FunctionDef(name='visit', args=arguments(posonlyargs=[], args=[arg(arg='z'), arg(arg='dirname'), arg(arg='names')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='name', ctx=Store()), iter=Name(id='names', ctx=Load()), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normpath', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dirname', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])], keywords=[])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isfile', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Subscript(value=Name(id='path', ctx=Load()), slice=Slice(lower=BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='base_dir', ctx=Load())], keywords=[]), op=Add(), right=Constant(value=1))), ctx=Load())), If(test=UnaryOp(op=Not(), operand=Name(id='dry_run', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='z', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='path', ctx=Load()), Name(id='p', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value="adding '%s'"), Name(id='p', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], decorator_list=[]), Assign(targets=[Name(id='compression', ctx=Store())], value=IfExp(test=Name(id='compress', ctx=Load()), body=Attribute(value=Name(id='zipfile', ctx=Load()), attr='ZIP_DEFLATED', ctx=Load()), orelse=Attribute(value=Name(id='zipfile', ctx=Load()), attr='ZIP_STORED', ctx=Load()))), If(test=UnaryOp(op=Not(), operand=Name(id='dry_run', ctx=Load())), body=[Assign(targets=[Name(id='z', ctx=Store())], value=Call(func=Attribute(value=Name(id='zipfile', ctx=Load()), attr='ZipFile', ctx=Load()), args=[Name(id='zip_filename', ctx=Load()), Name(id='mode', ctx=Load())], keywords=[keyword(arg='compression', value=Name(id='compression', ctx=Load()))])), For(target=Tuple(elts=[Name(id='dirname', ctx=Store()), Name(id='dirs', ctx=Store()), Name(id='files', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='sorted_walk', ctx=Load()), args=[Name(id='base_dir', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Name(id='visit', ctx=Load()), args=[Name(id='z', ctx=Load()), Name(id='dirname', ctx=Load()), Name(id='files', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='z', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], orelse=[For(target=Tuple(elts=[Name(id='dirname', ctx=Store()), Name(id='dirs', ctx=Store()), Name(id='files', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='sorted_walk', ctx=Load()), args=[Name(id='base_dir', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Name(id='visit', ctx=Load()), args=[Constant(value=None), Name(id='dirname', ctx=Load()), Name(id='files', ctx=Load())], keywords=[]))], orelse=[])]), Return(value=Name(id='zip_filename', ctx=Load()))], decorator_list=[])], type_ignores=[])