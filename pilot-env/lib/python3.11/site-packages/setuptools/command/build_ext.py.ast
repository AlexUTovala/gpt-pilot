Module(body=[Import(names=[alias(name='os')]), Import(names=[alias(name='sys')]), Import(names=[alias(name='itertools')]), ImportFrom(module='importlib.machinery', names=[alias(name='EXTENSION_SUFFIXES')], level=0), ImportFrom(module='importlib.util', names=[alias(name='cache_from_source', asname='_compiled_file_name')], level=0), ImportFrom(module='typing', names=[alias(name='Dict'), alias(name='Iterator'), alias(name='List'), alias(name='Tuple')], level=0), ImportFrom(module='pathlib', names=[alias(name='Path')], level=0), ImportFrom(module='distutils.command.build_ext', names=[alias(name='build_ext', asname='_du_build_ext')], level=0), ImportFrom(module='distutils.ccompiler', names=[alias(name='new_compiler')], level=0), ImportFrom(module='distutils.sysconfig', names=[alias(name='customize_compiler'), alias(name='get_config_var')], level=0), ImportFrom(module='distutils', names=[alias(name='log')], level=0), ImportFrom(module='setuptools.errors', names=[alias(name='BaseError')], level=0), ImportFrom(module='setuptools.extension', names=[alias(name='Extension'), alias(name='Library')], level=0), Try(body=[ImportFrom(module='Cython.Distutils.build_ext', names=[alias(name='build_ext', asname='_build_ext')], level=0), Expr(value=Call(func=Name(id='__import__', ctx=Load()), args=[Constant(value='Cython.Compiler.Main')], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Assign(targets=[Name(id='_build_ext', ctx=Store())], value=Name(id='_du_build_ext', ctx=Load()))])], orelse=[], finalbody=[]), Expr(value=Call(func=Name(id='get_config_var', ctx=Load()), args=[Constant(value='LDSHARED')], keywords=[])), ImportFrom(module='distutils.sysconfig', names=[alias(name='_config_vars', asname='_CONFIG_VARS')], level=0), FunctionDef(name='_customize_compiler_for_shlib', args=arguments(posonlyargs=[], args=[arg(arg='compiler')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), ops=[Eq()], comparators=[Constant(value='darwin')]), body=[Assign(targets=[Name(id='tmp', ctx=Store())], value=Call(func=Attribute(value=Name(id='_CONFIG_VARS', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), Try(body=[Assign(targets=[Subscript(value=Name(id='_CONFIG_VARS', ctx=Load()), slice=Constant(value='LDSHARED'), ctx=Store())], value=Constant(value='gcc -Wl,-x -dynamiclib -undefined dynamic_lookup')), Assign(targets=[Subscript(value=Name(id='_CONFIG_VARS', ctx=Load()), slice=Constant(value='CCSHARED'), ctx=Store())], value=Constant(value=' -dynamiclib')), Assign(targets=[Subscript(value=Name(id='_CONFIG_VARS', ctx=Load()), slice=Constant(value='SO'), ctx=Store())], value=Constant(value='.dylib')), Expr(value=Call(func=Name(id='customize_compiler', ctx=Load()), args=[Name(id='compiler', ctx=Load())], keywords=[]))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='_CONFIG_VARS', ctx=Load()), attr='clear', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='_CONFIG_VARS', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='tmp', ctx=Load())], keywords=[]))])], orelse=[Expr(value=Call(func=Name(id='customize_compiler', ctx=Load()), args=[Name(id='compiler', ctx=Load())], keywords=[]))])], decorator_list=[]), Assign(targets=[Name(id='have_rtld', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='use_stubs', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='libtype', ctx=Store())], value=Constant(value='shared')), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), ops=[Eq()], comparators=[Constant(value='darwin')]), body=[Assign(targets=[Name(id='use_stubs', ctx=Store())], value=Constant(value=True))], orelse=[If(test=Compare(left=Attribute(value=Name(id='os', ctx=Load()), attr='name', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='nt')]), body=[Try(body=[Import(names=[alias(name='dl')]), Assign(targets=[Name(id='use_stubs', ctx=Store()), Name(id='have_rtld', ctx=Store())], value=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='dl', ctx=Load()), Constant(value='RTLD_NOW')], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], orelse=[])]), FunctionDef(name='if_dl', args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=IfExp(test=Name(id='have_rtld', ctx=Load()), body=Name(id='s', ctx=Load()), orelse=Constant(value='')))], decorator_list=[]), FunctionDef(name='get_abi3_suffix', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Return the file extension for an abi3-compliant Extension()')), For(target=Name(id='suffix', ctx=Store()), iter=Name(id='EXTENSION_SUFFIXES', ctx=Load()), body=[If(test=Compare(left=Constant(value='.abi3'), ops=[In()], comparators=[Name(id='suffix', ctx=Load())]), body=[Return(value=Name(id='suffix', ctx=Load()))], orelse=[If(test=Compare(left=Name(id='suffix', ctx=Load()), ops=[Eq()], comparators=[Constant(value='.pyd')]), body=[Return(value=Name(id='suffix', ctx=Load()))], orelse=[])])], orelse=[])], decorator_list=[]), ClassDef(name='build_ext', bases=[Name(id='_build_ext', ctx=Load())], keywords=[], body=[AnnAssign(target=Name(id='editable_mode', ctx=Store()), annotation=Name(id='bool', ctx=Load()), value=Constant(value=False), simple=1), AnnAssign(target=Name(id='inplace', ctx=Store()), annotation=Name(id='bool', ctx=Load()), value=Constant(value=False), simple=1), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Build extensions in build directory, then copy if --inplace')), Assign(targets=[Tuple(elts=[Name(id='old_inplace', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='inplace', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='inplace', ctx=Load()), Constant(value=0)], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='_build_ext', ctx=Load()), attr='run', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='inplace', ctx=Store())], value=Name(id='old_inplace', ctx=Load())), If(test=Name(id='old_inplace', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='copy_extensions_to_source', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='_get_inplace_equivalent', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='build_py'), arg(arg='ext', annotation=Name(id='Extension', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='fullname', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_ext_fullname', ctx=Load()), args=[Attribute(value=Name(id='ext', ctx=Load()), attr='name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='filename', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_ext_filename', ctx=Load()), args=[Name(id='fullname', ctx=Load())], keywords=[])), Assign(targets=[Name(id='modpath', ctx=Store())], value=Call(func=Attribute(value=Name(id='fullname', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[])), Assign(targets=[Name(id='package', ctx=Store())], value=Call(func=Attribute(value=Constant(value='.'), attr='join', ctx=Load()), args=[Subscript(value=Name(id='modpath', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load())], keywords=[])), Assign(targets=[Name(id='package_dir', ctx=Store())], value=Call(func=Attribute(value=Name(id='build_py', ctx=Load()), attr='get_package_dir', ctx=Load()), args=[Name(id='package', ctx=Load())], keywords=[])), Assign(targets=[Name(id='inplace_file', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='package_dir', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='regular_file', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='build_lib', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[])), Return(value=Tuple(elts=[Name(id='inplace_file', ctx=Load()), Name(id='regular_file', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='copy_extensions_to_source', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='build_py', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_finalized_command', ctx=Load()), args=[Constant(value='build_py')], keywords=[])), For(target=Name(id='ext', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='extensions', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='inplace_file', ctx=Store()), Name(id='regular_file', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_inplace_equivalent', ctx=Load()), args=[Name(id='build_py', ctx=Load()), Name(id='ext', ctx=Load())], keywords=[])), If(test=BoolOp(op=Or(), values=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='regular_file', ctx=Load())], keywords=[]), UnaryOp(op=Not(), operand=Attribute(value=Name(id='ext', ctx=Load()), attr='optional', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='copy_file', ctx=Load()), args=[Name(id='regular_file', ctx=Load()), Name(id='inplace_file', ctx=Load())], keywords=[keyword(arg='level', value=Attribute(value=Name(id='self', ctx=Load()), attr='verbose', ctx=Load()))]))], orelse=[]), If(test=Attribute(value=Name(id='ext', ctx=Load()), attr='_needs_stub', ctx=Load()), body=[Assign(targets=[Name(id='inplace_stub', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_equivalent_stub', ctx=Load()), args=[Name(id='ext', ctx=Load()), Name(id='inplace_file', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_write_stub_file', ctx=Load()), args=[Name(id='inplace_stub', ctx=Load()), Name(id='ext', ctx=Load())], keywords=[keyword(arg='compile', value=Constant(value=True))]))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='_get_equivalent_stub', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ext', annotation=Name(id='Extension', ctx=Load())), arg(arg='output_file', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='dir_', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='dirname', ctx=Load()), args=[Name(id='output_file', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='_', ctx=Store()), Name(id='_', ctx=Store()), Name(id='name', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='ext', ctx=Load()), attr='name', ctx=Load()), attr='rpartition', ctx=Load()), args=[Constant(value='.')], keywords=[])), Return(value=JoinedStr(values=[FormattedValue(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dir_', ctx=Load()), Name(id='name', ctx=Load())], keywords=[]), conversion=-1), Constant(value='.py')]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='_get_output_mapping', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='inplace', ctx=Load())), body=[Return()], orelse=[]), Assign(targets=[Name(id='build_py', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_finalized_command', ctx=Load()), args=[Constant(value='build_py')], keywords=[])), Assign(targets=[Name(id='opt', ctx=Store())], value=BoolOp(op=Or(), values=[Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_finalized_command', ctx=Load()), args=[Constant(value='install_lib')], keywords=[]), attr='optimize', ctx=Load()), Constant(value='')])), For(target=Name(id='ext', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='extensions', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='inplace_file', ctx=Store()), Name(id='regular_file', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_inplace_equivalent', ctx=Load()), args=[Name(id='build_py', ctx=Load()), Name(id='ext', ctx=Load())], keywords=[])), Expr(value=Yield(value=Tuple(elts=[Name(id='regular_file', ctx=Load()), Name(id='inplace_file', ctx=Load())], ctx=Load()))), If(test=Attribute(value=Name(id='ext', ctx=Load()), attr='_needs_stub', ctx=Load()), body=[Assign(targets=[Name(id='inplace_stub', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_equivalent_stub', ctx=Load()), args=[Name(id='ext', ctx=Load()), Name(id='inplace_file', ctx=Load())], keywords=[])), Assign(targets=[Name(id='regular_stub', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_equivalent_stub', ctx=Load()), args=[Name(id='ext', ctx=Load()), Name(id='regular_file', ctx=Load())], keywords=[])), Assign(targets=[Name(id='inplace_cache', ctx=Store())], value=Call(func=Name(id='_compiled_file_name', ctx=Load()), args=[Name(id='inplace_stub', ctx=Load())], keywords=[keyword(arg='optimization', value=Name(id='opt', ctx=Load()))])), Assign(targets=[Name(id='output_cache', ctx=Store())], value=Call(func=Name(id='_compiled_file_name', ctx=Load()), args=[Name(id='regular_stub', ctx=Load())], keywords=[keyword(arg='optimization', value=Name(id='opt', ctx=Load()))])), Expr(value=Yield(value=Tuple(elts=[Name(id='output_cache', ctx=Load()), Name(id='inplace_cache', ctx=Load())], ctx=Load())))], orelse=[])], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Iterator', ctx=Load()), slice=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load()), ctx=Load())), FunctionDef(name='get_ext_filename', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fullname')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='so_ext', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='SETUPTOOLS_EXT_SUFFIX')], keywords=[])), If(test=Name(id='so_ext', ctx=Load()), body=[Assign(targets=[Name(id='filename', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Starred(value=Call(func=Attribute(value=Name(id='fullname', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[]), ctx=Load())], keywords=[]), op=Add(), right=Name(id='so_ext', ctx=Load())))], orelse=[Assign(targets=[Name(id='filename', ctx=Store())], value=Call(func=Attribute(value=Name(id='_build_ext', ctx=Load()), attr='get_ext_filename', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='fullname', ctx=Load())], keywords=[])), Assign(targets=[Name(id='so_ext', ctx=Store())], value=Call(func=Name(id='get_config_var', ctx=Load()), args=[Constant(value='EXT_SUFFIX')], keywords=[]))]), If(test=Compare(left=Name(id='fullname', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='ext_map', ctx=Load())]), body=[Assign(targets=[Name(id='ext', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='ext_map', ctx=Load()), slice=Name(id='fullname', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='use_abi3', ctx=Store())], value=BoolOp(op=And(), values=[Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='ext', ctx=Load()), Constant(value='py_limited_api')], keywords=[]), Call(func=Name(id='get_abi3_suffix', ctx=Load()), args=[], keywords=[])])), If(test=Name(id='use_abi3', ctx=Load()), body=[Assign(targets=[Name(id='filename', ctx=Store())], value=Subscript(value=Name(id='filename', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Call(func=Name(id='len', ctx=Load()), args=[Name(id='so_ext', ctx=Load())], keywords=[]))), ctx=Load())), Assign(targets=[Name(id='so_ext', ctx=Store())], value=Call(func=Name(id='get_abi3_suffix', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='filename', ctx=Store())], value=BinOp(left=Name(id='filename', ctx=Load()), op=Add(), right=Name(id='so_ext', ctx=Load())))], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='ext', ctx=Load()), Name(id='Library', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='fn', ctx=Store()), Name(id='ext', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='splitext', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='shlib_compiler', ctx=Load()), attr='library_filename', ctx=Load()), args=[Name(id='fn', ctx=Load()), Name(id='libtype', ctx=Load())], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[Name(id='use_stubs', ctx=Load()), Attribute(value=Name(id='ext', ctx=Load()), attr='_links_to_dynamic', ctx=Load())]), body=[Assign(targets=[Tuple(elts=[Name(id='d', ctx=Store()), Name(id='fn', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='split', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='d', ctx=Load()), BinOp(left=Constant(value='dl-'), op=Add(), right=Name(id='fn', ctx=Load()))], keywords=[]))], orelse=[])])], orelse=[]), Return(value=Name(id='filename', ctx=Load()))], decorator_list=[]), FunctionDef(name='initialize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='_build_ext', ctx=Load()), attr='initialize_options', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='shlib_compiler', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='shlibs', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='ext_map', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='editable_mode', ctx=Store())], value=Constant(value=False))], decorator_list=[]), FunctionDef(name='finalize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='_build_ext', ctx=Load()), attr='finalize_options', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='extensions', ctx=Store())], value=BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='extensions', ctx=Load()), List(elts=[], ctx=Load())])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_extensions_list', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='extensions', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='shlibs', ctx=Store())], value=ListComp(elt=Name(id='ext', ctx=Load()), generators=[comprehension(target=Name(id='ext', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='extensions', ctx=Load()), ifs=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='ext', ctx=Load()), Name(id='Library', ctx=Load())], keywords=[])], is_async=0)])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='shlibs', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='setup_shlib_compiler', ctx=Load()), args=[], keywords=[]))], orelse=[]), For(target=Name(id='ext', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='extensions', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='ext', ctx=Load()), attr='_full_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_ext_fullname', ctx=Load()), args=[Attribute(value=Name(id='ext', ctx=Load()), attr='name', ctx=Load())], keywords=[]))], orelse=[]), For(target=Name(id='ext', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='extensions', ctx=Load()), body=[Assign(targets=[Name(id='fullname', ctx=Store())], value=Attribute(value=Name(id='ext', ctx=Load()), attr='_full_name', ctx=Load())), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='ext_map', ctx=Load()), slice=Name(id='fullname', ctx=Load()), ctx=Store())], value=Name(id='ext', ctx=Load())), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='ext_map', ctx=Load()), slice=Subscript(value=Call(func=Attribute(value=Name(id='fullname', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[]), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), ctx=Store())], value=Name(id='ext', ctx=Load())), Assign(targets=[Name(id='ltd', ctx=Store())], value=BoolOp(op=Or(), values=[BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='shlibs', ctx=Load()), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='links_to_dynamic', ctx=Load()), args=[Name(id='ext', ctx=Load())], keywords=[])]), Constant(value=False)])), Assign(targets=[Name(id='ns', ctx=Store())], value=BoolOp(op=And(), values=[Name(id='ltd', ctx=Load()), Name(id='use_stubs', ctx=Load()), UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='ext', ctx=Load()), Name(id='Library', ctx=Load())], keywords=[]))])), Assign(targets=[Attribute(value=Name(id='ext', ctx=Load()), attr='_links_to_dynamic', ctx=Store())], value=Name(id='ltd', ctx=Load())), Assign(targets=[Attribute(value=Name(id='ext', ctx=Load()), attr='_needs_stub', ctx=Store())], value=Name(id='ns', ctx=Load())), Assign(targets=[Name(id='filename', ctx=Store()), Attribute(value=Name(id='ext', ctx=Load()), attr='_file_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_ext_filename', ctx=Load()), args=[Name(id='fullname', ctx=Load())], keywords=[])), Assign(targets=[Name(id='libdir', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='dirname', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='build_lib', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[])], keywords=[])), If(test=BoolOp(op=And(), values=[Name(id='ltd', ctx=Load()), Compare(left=Name(id='libdir', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='ext', ctx=Load()), attr='library_dirs', ctx=Load())])]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='ext', ctx=Load()), attr='library_dirs', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='libdir', ctx=Load())], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Name(id='ltd', ctx=Load()), Name(id='use_stubs', ctx=Load()), Compare(left=Attribute(value=Name(id='os', ctx=Load()), attr='curdir', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='ext', ctx=Load()), attr='runtime_library_dirs', ctx=Load())])]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='ext', ctx=Load()), attr='runtime_library_dirs', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='os', ctx=Load()), attr='curdir', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='editable_mode', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='inplace', ctx=Store())], value=Constant(value=True))], orelse=[])], decorator_list=[]), FunctionDef(name='setup_shlib_compiler', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='compiler', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='shlib_compiler', ctx=Store())], value=Call(func=Name(id='new_compiler', ctx=Load()), args=[], keywords=[keyword(arg='compiler', value=Attribute(value=Name(id='self', ctx=Load()), attr='compiler', ctx=Load())), keyword(arg='dry_run', value=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load())), keyword(arg='force', value=Attribute(value=Name(id='self', ctx=Load()), attr='force', ctx=Load()))])), Expr(value=Call(func=Name(id='_customize_compiler_for_shlib', ctx=Load()), args=[Name(id='compiler', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='include_dirs', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='compiler', ctx=Load()), attr='set_include_dirs', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='include_dirs', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='define', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[For(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='define', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='compiler', ctx=Load()), attr='define_macro', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='undef', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[For(target=Name(id='macro', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='undef', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='compiler', ctx=Load()), attr='undefine_macro', ctx=Load()), args=[Name(id='macro', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='libraries', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='compiler', ctx=Load()), attr='set_libraries', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='libraries', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='library_dirs', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='compiler', ctx=Load()), attr='set_library_dirs', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='library_dirs', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='rpath', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='compiler', ctx=Load()), attr='set_runtime_library_dirs', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='rpath', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='link_objects', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='compiler', ctx=Load()), attr='set_link_objects', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='link_objects', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='compiler', ctx=Load()), attr='link_shared_object', ctx=Store())], value=Call(func=Attribute(value=Name(id='link_shared_object', ctx=Load()), attr='__get__', ctx=Load()), args=[Name(id='compiler', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_export_symbols', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ext')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='ext', ctx=Load()), Name(id='Library', ctx=Load())], keywords=[]), body=[Return(value=Attribute(value=Name(id='ext', ctx=Load()), attr='export_symbols', ctx=Load()))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='_build_ext', ctx=Load()), attr='get_export_symbols', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='ext', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='build_extension', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ext')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='ext', ctx=Load()), attr='_convert_pyx_sources_to_lang', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='_compiler', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='compiler', ctx=Load())), Try(body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='ext', ctx=Load()), Name(id='Library', ctx=Load())], keywords=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='compiler', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='shlib_compiler', ctx=Load()))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='_build_ext', ctx=Load()), attr='build_extension', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='ext', ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='ext', ctx=Load()), attr='_needs_stub', ctx=Load()), body=[Assign(targets=[Name(id='build_lib', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_finalized_command', ctx=Load()), args=[Constant(value='build_py')], keywords=[]), attr='build_lib', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='write_stub', ctx=Load()), args=[Name(id='build_lib', ctx=Load()), Name(id='ext', ctx=Load())], keywords=[]))], orelse=[])], handlers=[], orelse=[], finalbody=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='compiler', ctx=Store())], value=Name(id='_compiler', ctx=Load()))])], decorator_list=[]), FunctionDef(name='links_to_dynamic', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ext')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="Return true if 'ext' links to a dynamic lib in the same package")), Assign(targets=[Name(id='libnames', ctx=Store())], value=Call(func=Attribute(value=Name(id='dict', ctx=Load()), attr='fromkeys', ctx=Load()), args=[ListComp(elt=Attribute(value=Name(id='lib', ctx=Load()), attr='_full_name', ctx=Load()), generators=[comprehension(target=Name(id='lib', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='shlibs', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), Assign(targets=[Name(id='pkg', ctx=Store())], value=Call(func=Attribute(value=Constant(value='.'), attr='join', ctx=Load()), args=[BinOp(left=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='ext', ctx=Load()), attr='_full_name', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[]), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()), op=Add(), right=List(elts=[Constant(value='')], ctx=Load()))], keywords=[])), Return(value=Call(func=Name(id='any', ctx=Load()), args=[GeneratorExp(elt=Compare(left=BinOp(left=Name(id='pkg', ctx=Load()), op=Add(), right=Name(id='libname', ctx=Load())), ops=[In()], comparators=[Name(id='libnames', ctx=Load())]), generators=[comprehension(target=Name(id='libname', ctx=Store()), iter=Attribute(value=Name(id='ext', ctx=Load()), attr='libraries', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], decorator_list=[]), FunctionDef(name='get_source_files', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=List(elts=[Starred(value=Call(func=Attribute(value=Name(id='_build_ext', ctx=Load()), attr='get_source_files', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), ctx=Load()), Starred(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_internal_depends', ctx=Load()), args=[], keywords=[]), ctx=Load())], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='_get_internal_depends', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Yield ``ext.depends`` that are contained by the project directory')), Assign(targets=[Name(id='project_root', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Path', ctx=Load()), args=[BoolOp(op=Or(), values=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='src_root', ctx=Load()), Attribute(value=Name(id='os', ctx=Load()), attr='curdir', ctx=Load())])], keywords=[]), attr='resolve', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='depends', ctx=Store())], value=GeneratorExp(elt=Name(id='dep', ctx=Load()), generators=[comprehension(target=Name(id='ext', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='extensions', ctx=Load()), ifs=[], is_async=0), comprehension(target=Name(id='dep', ctx=Store()), iter=Attribute(value=Name(id='ext', ctx=Load()), attr='depends', ctx=Load()), ifs=[], is_async=0)])), FunctionDef(name='skip', args=arguments(posonlyargs=[], args=[arg(arg='orig_path', annotation=Name(id='str', ctx=Load())), arg(arg='reason', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value="dependency %s won't be automatically included in the manifest: the path %s"), Name(id='orig_path', ctx=Load()), Name(id='reason', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value=None)), For(target=Name(id='dep', ctx=Store()), iter=Name(id='depends', ctx=Load()), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='dep', ctx=Load())], keywords=[])), If(test=Call(func=Attribute(value=Name(id='path', ctx=Load()), attr='is_absolute', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Name(id='skip', ctx=Load()), args=[Name(id='dep', ctx=Load()), Constant(value='must be relative')], keywords=[])), Continue()], orelse=[]), If(test=Compare(left=Constant(value='..'), ops=[In()], comparators=[Attribute(value=Name(id='path', ctx=Load()), attr='parts', ctx=Load())]), body=[Expr(value=Call(func=Name(id='skip', ctx=Load()), args=[Name(id='dep', ctx=Load()), Constant(value="can't have `..` segments")], keywords=[])), Continue()], orelse=[]), Try(body=[Assign(targets=[Name(id='resolved', ctx=Store())], value=Call(func=Attribute(value=BinOp(left=Name(id='project_root', ctx=Load()), op=Div(), right=Name(id='path', ctx=Load())), attr='resolve', ctx=Load()), args=[], keywords=[keyword(arg='strict', value=Constant(value=True))]))], handlers=[ExceptHandler(type=Name(id='OSError', ctx=Load()), body=[Expr(value=Call(func=Name(id='skip', ctx=Load()), args=[Name(id='dep', ctx=Load()), Constant(value="doesn't exist")], keywords=[])), Continue()])], orelse=[], finalbody=[]), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='resolved', ctx=Load()), attr='relative_to', ctx=Load()), args=[Name(id='project_root', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ValueError', ctx=Load()), body=[Expr(value=Call(func=Name(id='skip', ctx=Load()), args=[Name(id='dep', ctx=Load()), Constant(value='must be inside the project root')], keywords=[])), Continue()])], orelse=[], finalbody=[]), Expr(value=Yield(value=Call(func=Attribute(value=Name(id='path', ctx=Load()), attr='as_posix', ctx=Load()), args=[], keywords=[])))], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Iterator', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='get_outputs', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='inplace', ctx=Load()), body=[Return(value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_output_mapping', ctx=Load()), args=[], keywords=[]), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='sorted', ctx=Load()), args=[BinOp(left=Call(func=Attribute(value=Name(id='_build_ext', ctx=Load()), attr='get_outputs', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), op=Add(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='__get_stubs_outputs', ctx=Load()), args=[], keywords=[]))], keywords=[]))], decorator_list=[], returns=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='get_output_mapping', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='See :class:`setuptools.commands.build.SubCommand`')), Assign(targets=[Name(id='mapping', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_output_mapping', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Name(id='dict', ctx=Load()), args=[Call(func=Name(id='sorted', ctx=Load()), args=[Name(id='mapping', ctx=Load())], keywords=[keyword(arg='key', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Subscript(value=Name(id='x', ctx=Load()), slice=Constant(value=0), ctx=Load())))])], keywords=[]))], decorator_list=[], returns=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='str', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='__get_stubs_outputs', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='ns_ext_bases', ctx=Store())], value=GeneratorExp(elt=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='build_lib', ctx=Load()), Starred(value=Call(func=Attribute(value=Attribute(value=Name(id='ext', ctx=Load()), attr='_full_name', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[]), ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='ext', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='extensions', ctx=Load()), ifs=[Attribute(value=Name(id='ext', ctx=Load()), attr='_needs_stub', ctx=Load())], is_async=0)])), Assign(targets=[Name(id='pairs', ctx=Store())], value=Call(func=Attribute(value=Name(id='itertools', ctx=Load()), attr='product', ctx=Load()), args=[Name(id='ns_ext_bases', ctx=Load()), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='__get_output_extensions', ctx=Load()), args=[], keywords=[])], keywords=[])), Return(value=Call(func=Name(id='list', ctx=Load()), args=[GeneratorExp(elt=BinOp(left=Name(id='base', ctx=Load()), op=Add(), right=Name(id='fnext', ctx=Load())), generators=[comprehension(target=Tuple(elts=[Name(id='base', ctx=Store()), Name(id='fnext', ctx=Store())], ctx=Store()), iter=Name(id='pairs', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], decorator_list=[]), FunctionDef(name='__get_output_extensions', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Yield(value=Constant(value='.py'))), Expr(value=Yield(value=Constant(value='.pyc'))), If(test=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_finalized_command', ctx=Load()), args=[Constant(value='build_py')], keywords=[]), attr='optimize', ctx=Load()), body=[Expr(value=Yield(value=Constant(value='.pyo')))], orelse=[])], decorator_list=[]), FunctionDef(name='write_stub', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='output_dir'), arg(arg='ext'), arg(arg='compile')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Assign(targets=[Name(id='stub_file', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='output_dir', ctx=Load()), Starred(value=Call(func=Attribute(value=Attribute(value=Name(id='ext', ctx=Load()), attr='_full_name', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[]), ctx=Load())], keywords=[]), op=Add(), right=Constant(value='.py'))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_write_stub_file', ctx=Load()), args=[Name(id='stub_file', ctx=Load()), Name(id='ext', ctx=Load()), Name(id='compile', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_write_stub_file', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='stub_file', annotation=Name(id='str', ctx=Load())), arg(arg='ext', annotation=Name(id='Extension', ctx=Load())), arg(arg='compile')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='writing stub loader for %s to %s'), Attribute(value=Name(id='ext', ctx=Load()), attr='_full_name', ctx=Load()), Name(id='stub_file', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Name(id='compile', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='stub_file', ctx=Load())], keywords=[])]), body=[Raise(exc=Call(func=Name(id='BaseError', ctx=Load()), args=[BinOp(left=Name(id='stub_file', ctx=Load()), op=Add(), right=Constant(value=' already exists! Please delete.'))], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load())), body=[Assign(targets=[Name(id='f', ctx=Store())], value=Call(func=Name(id='open', ctx=Load()), args=[Name(id='stub_file', ctx=Load()), Constant(value='w')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='write', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='\n'), attr='join', ctx=Load()), args=[List(elts=[Constant(value='def __bootstrap__():'), Constant(value='   global __bootstrap__, __file__, __loader__'), BinOp(left=Constant(value='   import sys, os, pkg_resources, importlib.util'), op=Add(), right=Call(func=Name(id='if_dl', ctx=Load()), args=[Constant(value=', dl')], keywords=[])), BinOp(left=Constant(value='   __file__ = pkg_resources.resource_filename(__name__,%r)'), op=Mod(), right=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Attribute(value=Name(id='ext', ctx=Load()), attr='_file_name', ctx=Load())], keywords=[])), Constant(value='   del __bootstrap__'), Constant(value="   if '__loader__' in globals():"), Constant(value='       del __loader__'), Call(func=Name(id='if_dl', ctx=Load()), args=[Constant(value='   old_flags = sys.getdlopenflags()')], keywords=[]), Constant(value='   old_dir = os.getcwd()'), Constant(value='   try:'), Constant(value='     os.chdir(os.path.dirname(__file__))'), Call(func=Name(id='if_dl', ctx=Load()), args=[Constant(value='     sys.setdlopenflags(dl.RTLD_NOW)')], keywords=[]), Constant(value='     spec = importlib.util.spec_from_file_location('), Constant(value='                __name__, __file__)'), Constant(value='     mod = importlib.util.module_from_spec(spec)'), Constant(value='     spec.loader.exec_module(mod)'), Constant(value='   finally:'), Call(func=Name(id='if_dl', ctx=Load()), args=[Constant(value='     sys.setdlopenflags(old_flags)')], keywords=[]), Constant(value='     os.chdir(old_dir)'), Constant(value='__bootstrap__()'), Constant(value='')], ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Name(id='compile', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_compile_and_remove_stub', ctx=Load()), args=[Name(id='stub_file', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='_compile_and_remove_stub', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='stub_file', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[ImportFrom(module='distutils.util', names=[alias(name='byte_compile')], level=0), Expr(value=Call(func=Name(id='byte_compile', ctx=Load()), args=[List(elts=[Name(id='stub_file', ctx=Load())], ctx=Load())], keywords=[keyword(arg='optimize', value=Constant(value=0)), keyword(arg='force', value=Constant(value=True)), keyword(arg='dry_run', value=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load()))])), Assign(targets=[Name(id='optimize', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_finalized_command', ctx=Load()), args=[Constant(value='install_lib')], keywords=[]), attr='optimize', ctx=Load())), If(test=Compare(left=Name(id='optimize', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), body=[Expr(value=Call(func=Name(id='byte_compile', ctx=Load()), args=[List(elts=[Name(id='stub_file', ctx=Load())], ctx=Load())], keywords=[keyword(arg='optimize', value=Name(id='optimize', ctx=Load())), keyword(arg='force', value=Constant(value=True)), keyword(arg='dry_run', value=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load()))]))], orelse=[]), If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='stub_file', ctx=Load())], keywords=[]), UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='unlink', ctx=Load()), args=[Name(id='stub_file', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[]), If(test=BoolOp(op=Or(), values=[Name(id='use_stubs', ctx=Load()), Compare(left=Attribute(value=Name(id='os', ctx=Load()), attr='name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='nt')])]), body=[FunctionDef(name='link_shared_object', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='objects'), arg(arg='output_libname'), arg(arg='output_dir'), arg(arg='libraries'), arg(arg='library_dirs'), arg(arg='runtime_library_dirs'), arg(arg='export_symbols'), arg(arg='debug'), arg(arg='extra_preargs'), arg(arg='extra_postargs'), arg(arg='build_temp'), arg(arg='target_lang')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=0), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='link', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='SHARED_LIBRARY', ctx=Load()), Name(id='objects', ctx=Load()), Name(id='output_libname', ctx=Load()), Name(id='output_dir', ctx=Load()), Name(id='libraries', ctx=Load()), Name(id='library_dirs', ctx=Load()), Name(id='runtime_library_dirs', ctx=Load()), Name(id='export_symbols', ctx=Load()), Name(id='debug', ctx=Load()), Name(id='extra_preargs', ctx=Load()), Name(id='extra_postargs', ctx=Load()), Name(id='build_temp', ctx=Load()), Name(id='target_lang', ctx=Load())], keywords=[]))], decorator_list=[])], orelse=[Assign(targets=[Name(id='libtype', ctx=Store())], value=Constant(value='static')), FunctionDef(name='link_shared_object', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='objects'), arg(arg='output_libname'), arg(arg='output_dir'), arg(arg='libraries'), arg(arg='library_dirs'), arg(arg='runtime_library_dirs'), arg(arg='export_symbols'), arg(arg='debug'), arg(arg='extra_preargs'), arg(arg='extra_postargs'), arg(arg='build_temp'), arg(arg='target_lang')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=0), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None)]), body=[Assert(test=Compare(left=Name(id='output_dir', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])), Assign(targets=[Tuple(elts=[Name(id='output_dir', ctx=Store()), Name(id='filename', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='split', ctx=Load()), args=[Name(id='output_libname', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='basename', ctx=Store()), Name(id='ext', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='splitext', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])), If(test=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='library_filename', ctx=Load()), args=[Constant(value='x')], keywords=[]), attr='startswith', ctx=Load()), args=[Constant(value='lib')], keywords=[]), body=[Assign(targets=[Name(id='basename', ctx=Store())], value=Subscript(value=Name(id='basename', ctx=Load()), slice=Slice(lower=Constant(value=3)), ctx=Load()))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='create_static_lib', ctx=Load()), args=[Name(id='objects', ctx=Load()), Name(id='basename', ctx=Load()), Name(id='output_dir', ctx=Load()), Name(id='debug', ctx=Load()), Name(id='target_lang', ctx=Load())], keywords=[]))], decorator_list=[])])], type_ignores=[])