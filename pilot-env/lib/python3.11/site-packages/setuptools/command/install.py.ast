Module(body=[ImportFrom(module='distutils.errors', names=[alias(name='DistutilsArgError')], level=0), Import(names=[alias(name='inspect')]), Import(names=[alias(name='glob')]), Import(names=[alias(name='platform')]), Import(names=[alias(name='distutils.command.install', asname='orig')]), Import(names=[alias(name='setuptools')]), ImportFrom(module='warnings', names=[alias(name='SetuptoolsDeprecationWarning'), alias(name='SetuptoolsWarning')], level=2), Assign(targets=[Name(id='_install', ctx=Store())], value=Attribute(value=Name(id='orig', ctx=Load()), attr='install', ctx=Load())), ClassDef(name='install', bases=[Attribute(value=Name(id='orig', ctx=Load()), attr='install', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Use easy_install to install the package, w/dependencies')), Assign(targets=[Name(id='user_options', ctx=Store())], value=BinOp(left=Attribute(value=Attribute(value=Name(id='orig', ctx=Load()), attr='install', ctx=Load()), attr='user_options', ctx=Load()), op=Add(), right=List(elts=[Tuple(elts=[Constant(value='old-and-unmanageable'), Constant(value=None), Constant(value='Try not to use this!')], ctx=Load()), Tuple(elts=[Constant(value='single-version-externally-managed'), Constant(value=None), Constant(value="used by system package builders to create 'flat' eggs")], ctx=Load())], ctx=Load()))), Assign(targets=[Name(id='boolean_options', ctx=Store())], value=BinOp(left=Attribute(value=Attribute(value=Name(id='orig', ctx=Load()), attr='install', ctx=Load()), attr='boolean_options', ctx=Load()), op=Add(), right=List(elts=[Constant(value='old-and-unmanageable'), Constant(value='single-version-externally-managed')], ctx=Load()))), Assign(targets=[Name(id='new_commands', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='install_egg_info'), Lambda(args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Constant(value=True))], ctx=Load()), Tuple(elts=[Constant(value='install_scripts'), Lambda(args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Constant(value=True))], ctx=Load())], ctx=Load())), Assign(targets=[Name(id='_nc', ctx=Store())], value=Call(func=Name(id='dict', ctx=Load()), args=[Name(id='new_commands', ctx=Load())], keywords=[])), FunctionDef(name='initialize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='SetuptoolsDeprecationWarning', ctx=Load()), attr='emit', ctx=Load()), args=[Constant(value='setup.py install is deprecated.'), Constant(value='\n            Please avoid running ``setup.py`` directly.\n            Instead, use pypa/build, pypa/installer or other\n            standards-based tools.\n            ')], keywords=[keyword(arg='see_url', value=Constant(value='https://blog.ganssle.io/articles/2021/10/setup-py-deprecated.html'))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='orig', ctx=Load()), attr='install', ctx=Load()), attr='initialize_options', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='old_and_unmanageable', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='single_version_externally_managed', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='finalize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='orig', ctx=Load()), attr='install', ctx=Load()), attr='finalize_options', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='root', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='single_version_externally_managed', ctx=Store())], value=Constant(value=True))], orelse=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='single_version_externally_managed', ctx=Load()), body=[If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='root', ctx=Load())), UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='record', ctx=Load()))]), body=[Raise(exc=Call(func=Name(id='DistutilsArgError', ctx=Load()), args=[Constant(value='You must specify --record or --root when building system packages')], keywords=[]))], orelse=[])], orelse=[])])], decorator_list=[]), FunctionDef(name='handle_extra_path', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='root', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='single_version_externally_managed', ctx=Load())]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='orig', ctx=Load()), attr='install', ctx=Load()), attr='handle_extra_path', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='path_file', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='extra_dirs', ctx=Store())], value=Constant(value=''))], decorator_list=[]), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=Or(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='old_and_unmanageable', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='single_version_externally_managed', ctx=Load())]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='orig', ctx=Load()), attr='install', ctx=Load()), attr='run', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_called_from_setup', ctx=Load()), args=[Call(func=Attribute(value=Name(id='inspect', ctx=Load()), attr='currentframe', ctx=Load()), args=[], keywords=[])], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='orig', ctx=Load()), attr='install', ctx=Load()), attr='run', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='do_egg_install', ctx=Load()), args=[], keywords=[]))])], decorator_list=[]), FunctionDef(name='_called_from_setup', args=arguments(posonlyargs=[], args=[arg(arg='run_frame')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n        Attempt to detect whether run() was called from setup() or by another\n        command.  If called by setup(), the parent caller will be the\n        'run_command' method in 'distutils.dist', and *its* caller will be\n        the 'run_commands' method.  If called any other way, the\n        immediate caller *might* be 'run_command', but it won't have been\n        called by 'run_commands'. Return True in that case or if a call stack\n        is unavailable. Return False otherwise.\n        ")), If(test=Compare(left=Name(id='run_frame', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='msg', ctx=Store())], value=Constant(value='Call stack not available. bdist_* commands may fail.')), Expr(value=Call(func=Attribute(value=Name(id='SetuptoolsWarning', ctx=Load()), attr='emit', ctx=Load()), args=[Name(id='msg', ctx=Load())], keywords=[])), If(test=Compare(left=Call(func=Attribute(value=Name(id='platform', ctx=Load()), attr='python_implementation', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value='IronPython')]), body=[Assign(targets=[Name(id='msg', ctx=Store())], value=Constant(value='For best results, pass -X:Frames to enable call stack.')), Expr(value=Call(func=Attribute(value=Name(id='SetuptoolsWarning', ctx=Load()), attr='emit', ctx=Load()), args=[Name(id='msg', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Constant(value=True))], orelse=[]), Assign(targets=[Name(id='frames', ctx=Store())], value=Call(func=Attribute(value=Name(id='inspect', ctx=Load()), attr='getouterframes', ctx=Load()), args=[Name(id='run_frame', ctx=Load())], keywords=[])), For(target=Name(id='frame', ctx=Store()), iter=Subscript(value=Name(id='frames', ctx=Load()), slice=Slice(lower=Constant(value=2), upper=Constant(value=4)), ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='caller', ctx=Store())], ctx=Store())], value=Subscript(value=Name(id='frame', ctx=Load()), slice=Slice(upper=Constant(value=1)), ctx=Load())), Assign(targets=[Name(id='info', ctx=Store())], value=Call(func=Attribute(value=Name(id='inspect', ctx=Load()), attr='getframeinfo', ctx=Load()), args=[Name(id='caller', ctx=Load())], keywords=[])), Assign(targets=[Name(id='caller_module', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='caller', ctx=Load()), attr='f_globals', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='__name__'), Constant(value='')], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='caller_module', ctx=Load()), ops=[Eq()], comparators=[Constant(value='setuptools.dist')]), Compare(left=Attribute(value=Name(id='info', ctx=Load()), attr='function', ctx=Load()), ops=[Eq()], comparators=[Constant(value='run_command')])]), body=[Continue()], orelse=[]), Return(value=BoolOp(op=And(), values=[Compare(left=Name(id='caller_module', ctx=Load()), ops=[Eq()], comparators=[Constant(value='distutils.dist')]), Compare(left=Attribute(value=Name(id='info', ctx=Load()), attr='function', ctx=Load()), ops=[Eq()], comparators=[Constant(value='run_commands')])]))], orelse=[])], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='do_egg_install', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='easy_install', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='get_command_class', ctx=Load()), args=[Constant(value='easy_install')], keywords=[])), Assign(targets=[Name(id='cmd', ctx=Store())], value=Call(func=Name(id='easy_install', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load())], keywords=[keyword(arg='args', value=Constant(value='x')), keyword(arg='root', value=Attribute(value=Name(id='self', ctx=Load()), attr='root', ctx=Load())), keyword(arg='record', value=Attribute(value=Name(id='self', ctx=Load()), attr='record', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='cmd', ctx=Load()), attr='ensure_finalized', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='cmd', ctx=Load()), attr='always_copy_from', ctx=Store())], value=Constant(value='.')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='cmd', ctx=Load()), attr='package_index', ctx=Load()), attr='scan', ctx=Load()), args=[Call(func=Attribute(value=Name(id='glob', ctx=Load()), attr='glob', ctx=Load()), args=[Constant(value='*.egg')], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_command', ctx=Load()), args=[Constant(value='bdist_egg')], keywords=[])), Assign(targets=[Name(id='args', ctx=Store())], value=List(elts=[Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='get_command_obj', ctx=Load()), args=[Constant(value='bdist_egg')], keywords=[]), attr='egg_output', ctx=Load())], ctx=Load())), If(test=Attribute(value=Name(id='setuptools', ctx=Load()), attr='bootstrap_install_from', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='args', ctx=Load()), attr='insert', ctx=Load()), args=[Constant(value=0), Attribute(value=Name(id='setuptools', ctx=Load()), attr='bootstrap_install_from', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='cmd', ctx=Load()), attr='args', ctx=Store())], value=Name(id='args', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='cmd', ctx=Load()), attr='run', ctx=Load()), args=[], keywords=[keyword(arg='show_deprecation', value=Constant(value=False))])), Assign(targets=[Attribute(value=Name(id='setuptools', ctx=Load()), attr='bootstrap_install_from', ctx=Store())], value=Constant(value=None))], decorator_list=[])], decorator_list=[]), Assign(targets=[Attribute(value=Name(id='install', ctx=Load()), attr='sub_commands', ctx=Store())], value=BinOp(left=ListComp(elt=Name(id='cmd', ctx=Load()), generators=[comprehension(target=Name(id='cmd', ctx=Store()), iter=Attribute(value=Attribute(value=Name(id='orig', ctx=Load()), attr='install', ctx=Load()), attr='sub_commands', ctx=Load()), ifs=[Compare(left=Subscript(value=Name(id='cmd', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='install', ctx=Load()), attr='_nc', ctx=Load())])], is_async=0)]), op=Add(), right=Attribute(value=Name(id='install', ctx=Load()), attr='new_commands', ctx=Load())))], type_ignores=[])