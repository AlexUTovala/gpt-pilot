Module(body=[Expr(value=Constant(value="upload_docs\n\nImplements a Distutils 'upload_docs' subcommand (upload documentation to\nsites other than PyPi such as devpi).\n")), ImportFrom(module='base64', names=[alias(name='standard_b64encode')], level=0), ImportFrom(module='distutils', names=[alias(name='log')], level=0), ImportFrom(module='distutils.errors', names=[alias(name='DistutilsOptionError')], level=0), Import(names=[alias(name='os')]), Import(names=[alias(name='socket')]), Import(names=[alias(name='zipfile')]), Import(names=[alias(name='tempfile')]), Import(names=[alias(name='shutil')]), Import(names=[alias(name='itertools')]), Import(names=[alias(name='functools')]), Import(names=[alias(name='http.client')]), Import(names=[alias(name='urllib.parse')]), ImportFrom(module='_importlib', names=[alias(name='metadata')], level=2), ImportFrom(module='warnings', names=[alias(name='SetuptoolsDeprecationWarning')], level=2), ImportFrom(module='upload', names=[alias(name='upload')], level=1), FunctionDef(name='_encode', args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='encode', ctx=Load()), args=[Constant(value='utf-8'), Constant(value='surrogateescape')], keywords=[]))], decorator_list=[]), ClassDef(name='upload_docs', bases=[Name(id='upload', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='DEFAULT_REPOSITORY', ctx=Store())], value=Constant(value='https://pypi.python.org/pypi/')), Assign(targets=[Name(id='description', ctx=Store())], value=Constant(value='Upload documentation to sites other than PyPi such as devpi')), Assign(targets=[Name(id='user_options', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='repository='), Constant(value='r'), BinOp(left=Constant(value='url of repository [default: %s]'), op=Mod(), right=Attribute(value=Name(id='upload', ctx=Load()), attr='DEFAULT_REPOSITORY', ctx=Load()))], ctx=Load()), Tuple(elts=[Constant(value='show-response'), Constant(value=None), Constant(value='display full response text from server')], ctx=Load()), Tuple(elts=[Constant(value='upload-dir='), Constant(value=None), Constant(value='directory to upload')], ctx=Load())], ctx=Load())), Assign(targets=[Name(id='boolean_options', ctx=Store())], value=Attribute(value=Name(id='upload', ctx=Load()), attr='boolean_options', ctx=Load())), FunctionDef(name='has_sphinx', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='bool', ctx=Load()), args=[BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='upload_dir', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Call(func=Attribute(value=Name(id='metadata', ctx=Load()), attr='entry_points', ctx=Load()), args=[], keywords=[keyword(arg='group', value=Constant(value='distutils.commands')), keyword(arg='name', value=Constant(value='build_sphinx'))])])], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='sub_commands', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='build_sphinx'), Name(id='has_sphinx', ctx=Load())], ctx=Load())], ctx=Load())), FunctionDef(name='initialize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='upload', ctx=Load()), attr='initialize_options', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='upload_dir', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='target_dir', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='finalize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='warn', ctx=Load()), args=[Constant(value='Upload_docs command is deprecated. Use Read the Docs (https://readthedocs.org) instead.')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='upload', ctx=Load()), attr='finalize_options', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='upload_dir', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='has_sphinx', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='build_sphinx', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_finalized_command', ctx=Load()), args=[Constant(value='build_sphinx')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='target_dir', ctx=Store())], value=Subscript(value=Call(func=Name(id='dict', ctx=Load()), args=[Attribute(value=Name(id='build_sphinx', ctx=Load()), attr='builder_target_dirs', ctx=Load())], keywords=[]), slice=Constant(value='html'), ctx=Load()))], orelse=[Assign(targets=[Name(id='build', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_finalized_command', ctx=Load()), args=[Constant(value='build')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='target_dir', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='build', ctx=Load()), attr='build_base', ctx=Load()), Constant(value='docs')], keywords=[]))])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='ensure_dirname', ctx=Load()), args=[Constant(value='upload_dir')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='target_dir', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='upload_dir', ctx=Load()))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='announce', ctx=Load()), args=[BinOp(left=Constant(value='Using upload directory %s'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='target_dir', ctx=Load()))], keywords=[]))], decorator_list=[]), FunctionDef(name='create_zipfile', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='filename')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='zip_file', ctx=Store())], value=Call(func=Attribute(value=Name(id='zipfile', ctx=Load()), attr='ZipFile', ctx=Load()), args=[Name(id='filename', ctx=Load()), Constant(value='w')], keywords=[])), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='mkpath', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='target_dir', ctx=Load())], keywords=[])), For(target=Tuple(elts=[Name(id='root', ctx=Store()), Name(id='dirs', ctx=Store()), Name(id='files', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='walk', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='target_dir', ctx=Load())], keywords=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='root', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='target_dir', ctx=Load())]), UnaryOp(op=Not(), operand=Name(id='files', ctx=Load()))]), body=[Assign(targets=[Name(id='tmpl', ctx=Store())], value=Constant(value="no files found in upload directory '%s'")), Raise(exc=Call(func=Name(id='DistutilsOptionError', ctx=Load()), args=[BinOp(left=Name(id='tmpl', ctx=Load()), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='target_dir', ctx=Load()))], keywords=[]))], orelse=[]), For(target=Name(id='name', ctx=Store()), iter=Name(id='files', ctx=Load()), body=[Assign(targets=[Name(id='full', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='relative', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='root', ctx=Load()), slice=Slice(lower=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='target_dir', ctx=Load())], keywords=[])), ctx=Load()), attr='lstrip', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='sep', ctx=Load())], keywords=[])), Assign(targets=[Name(id='dest', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='relative', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='zip_file', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='full', ctx=Load()), Name(id='dest', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='zip_file', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))])], decorator_list=[]), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='SetuptoolsDeprecationWarning', ctx=Load()), attr='emit', ctx=Load()), args=[Constant(value='Deprecated command'), Constant(value='\n            upload_docs is deprecated and will be removed in a future version.\n            Instead, use tools like devpi and Read the Docs; or lower level tools like\n            httpie and curl to interact directly with your hosting service API.\n            ')], keywords=[keyword(arg='due_date', value=Tuple(elts=[Constant(value=2023), Constant(value=9), Constant(value=26)], ctx=Load()))])), For(target=Name(id='cmd_name', ctx=Store()), iter=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_sub_commands', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_command', ctx=Load()), args=[Name(id='cmd_name', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='tmp_dir', ctx=Store())], value=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='mkdtemp', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='name', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='metadata', ctx=Load()), attr='get_name', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='zip_file', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='tmp_dir', ctx=Load()), BinOp(left=Constant(value='%s.zip'), op=Mod(), right=Name(id='name', ctx=Load()))], keywords=[])), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='create_zipfile', ctx=Load()), args=[Name(id='zip_file', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='upload_file', ctx=Load()), args=[Name(id='zip_file', ctx=Load())], keywords=[]))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='shutil', ctx=Load()), attr='rmtree', ctx=Load()), args=[Name(id='tmp_dir', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='_build_part', args=arguments(posonlyargs=[], args=[arg(arg='item'), arg(arg='sep_boundary')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='key', ctx=Store()), Name(id='values', ctx=Store())], ctx=Store())], value=Name(id='item', ctx=Load())), Assign(targets=[Name(id='title', ctx=Store())], value=BinOp(left=Constant(value='\nContent-Disposition: form-data; name="%s"'), op=Mod(), right=Name(id='key', ctx=Load()))), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='values', ctx=Load()), Name(id='list', ctx=Load())], keywords=[])), body=[Assign(targets=[Name(id='values', ctx=Store())], value=List(elts=[Name(id='values', ctx=Load())], ctx=Load()))], orelse=[]), For(target=Name(id='value', ctx=Store()), iter=Name(id='values', ctx=Load()), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='tuple', ctx=Load())], keywords=[]), body=[AugAssign(target=Name(id='title', ctx=Store()), op=Add(), value=BinOp(left=Constant(value='; filename="%s"'), op=Mod(), right=Subscript(value=Name(id='value', ctx=Load()), slice=Constant(value=0), ctx=Load()))), Assign(targets=[Name(id='value', ctx=Store())], value=Subscript(value=Name(id='value', ctx=Load()), slice=Constant(value=1), ctx=Load()))], orelse=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='_encode', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))]), Expr(value=Yield(value=Name(id='sep_boundary', ctx=Load()))), Expr(value=Yield(value=Call(func=Name(id='_encode', ctx=Load()), args=[Name(id='title', ctx=Load())], keywords=[]))), Expr(value=Yield(value=Constant(value=b'\n\n'))), Expr(value=Yield(value=Name(id='value', ctx=Load()))), If(test=BoolOp(op=And(), values=[Name(id='value', ctx=Load()), Compare(left=Subscript(value=Name(id='value', ctx=Load()), slice=Slice(lower=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()), ops=[Eq()], comparators=[Constant(value=b'\r')])]), body=[Expr(value=Yield(value=Constant(value=b'\n')))], orelse=[])], orelse=[])], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='_build_multipart', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Build up the MIME payload for the POST data\n        ')), Assign(targets=[Name(id='boundary', ctx=Store())], value=Constant(value='--------------GHSKFJDLGDS7543FJKLFHRE75642756743254')), Assign(targets=[Name(id='sep_boundary', ctx=Store())], value=BinOp(left=Constant(value=b'\n--'), op=Add(), right=Call(func=Attribute(value=Name(id='boundary', ctx=Load()), attr='encode', ctx=Load()), args=[Constant(value='ascii')], keywords=[]))), Assign(targets=[Name(id='end_boundary', ctx=Store())], value=BinOp(left=Name(id='sep_boundary', ctx=Load()), op=Add(), right=Constant(value=b'--'))), Assign(targets=[Name(id='end_items', ctx=Store())], value=Tuple(elts=[Name(id='end_boundary', ctx=Load()), Constant(value=b'\n')], ctx=Load())), Assign(targets=[Name(id='builder', ctx=Store())], value=Call(func=Attribute(value=Name(id='functools', ctx=Load()), attr='partial', ctx=Load()), args=[Attribute(value=Name(id='cls', ctx=Load()), attr='_build_part', ctx=Load())], keywords=[keyword(arg='sep_boundary', value=Name(id='sep_boundary', ctx=Load()))])), Assign(targets=[Name(id='part_groups', ctx=Store())], value=Call(func=Name(id='map', ctx=Load()), args=[Name(id='builder', ctx=Load()), Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='parts', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='itertools', ctx=Load()), attr='chain', ctx=Load()), attr='from_iterable', ctx=Load()), args=[Name(id='part_groups', ctx=Load())], keywords=[])), Assign(targets=[Name(id='body_items', ctx=Store())], value=Call(func=Attribute(value=Name(id='itertools', ctx=Load()), attr='chain', ctx=Load()), args=[Name(id='parts', ctx=Load()), Name(id='end_items', ctx=Load())], keywords=[])), Assign(targets=[Name(id='content_type', ctx=Store())], value=BinOp(left=Constant(value='multipart/form-data; boundary=%s'), op=Mod(), right=Name(id='boundary', ctx=Load()))), Return(value=Tuple(elts=[Call(func=Attribute(value=Constant(value=b''), attr='join', ctx=Load()), args=[Name(id='body_items', ctx=Load())], keywords=[]), Name(id='content_type', ctx=Load())], ctx=Load()))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='upload_file', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='filename')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='filename', ctx=Load()), Constant(value='rb')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Assign(targets=[Name(id='content', ctx=Store())], value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]))]), Assign(targets=[Name(id='meta', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='metadata', ctx=Load())), Assign(targets=[Name(id='data', ctx=Store())], value=Dict(keys=[Constant(value=':action'), Constant(value='name'), Constant(value='content')], values=[Constant(value='doc_upload'), Call(func=Attribute(value=Name(id='meta', ctx=Load()), attr='get_name', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[]), Name(id='content', ctx=Load())], ctx=Load())])), Assign(targets=[Name(id='credentials', ctx=Store())], value=Call(func=Name(id='_encode', ctx=Load()), args=[BinOp(left=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='username', ctx=Load()), op=Add(), right=Constant(value=':')), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='password', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='credentials', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='standard_b64encode', ctx=Load()), args=[Name(id='credentials', ctx=Load())], keywords=[]), attr='decode', ctx=Load()), args=[Constant(value='ascii')], keywords=[])), Assign(targets=[Name(id='auth', ctx=Store())], value=BinOp(left=Constant(value='Basic '), op=Add(), right=Name(id='credentials', ctx=Load()))), Assign(targets=[Tuple(elts=[Name(id='body', ctx=Store()), Name(id='ct', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_build_multipart', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[])), Assign(targets=[Name(id='msg', ctx=Store())], value=BinOp(left=Constant(value='Submitting documentation to %s'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='repository', ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='announce', ctx=Load()), args=[Name(id='msg', ctx=Load()), Attribute(value=Name(id='log', ctx=Load()), attr='INFO', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='schema', ctx=Store()), Name(id='netloc', ctx=Store()), Name(id='url', ctx=Store()), Name(id='params', ctx=Store()), Name(id='query', ctx=Store()), Name(id='fragments', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urlparse', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='repository', ctx=Load())], keywords=[])), Assert(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='params', ctx=Load())), UnaryOp(op=Not(), operand=Name(id='query', ctx=Load())), UnaryOp(op=Not(), operand=Name(id='fragments', ctx=Load()))])), If(test=Compare(left=Name(id='schema', ctx=Load()), ops=[Eq()], comparators=[Constant(value='http')]), body=[Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='http', ctx=Load()), attr='client', ctx=Load()), attr='HTTPConnection', ctx=Load()), args=[Name(id='netloc', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='schema', ctx=Load()), ops=[Eq()], comparators=[Constant(value='https')]), body=[Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='http', ctx=Load()), attr='client', ctx=Load()), attr='HTTPSConnection', ctx=Load()), args=[Name(id='netloc', ctx=Load())], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='AssertionError', ctx=Load()), args=[BinOp(left=Constant(value='unsupported schema '), op=Add(), right=Name(id='schema', ctx=Load()))], keywords=[]))])]), Assign(targets=[Name(id='data', ctx=Store())], value=Constant(value='')), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='connect', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='putrequest', ctx=Load()), args=[Constant(value='POST'), Name(id='url', ctx=Load())], keywords=[])), Assign(targets=[Name(id='content_type', ctx=Store())], value=Name(id='ct', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='putheader', ctx=Load()), args=[Constant(value='Content-type'), Name(id='content_type', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='putheader', ctx=Load()), args=[Constant(value='Content-length'), Call(func=Name(id='str', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='body', ctx=Load())], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='putheader', ctx=Load()), args=[Constant(value='Authorization'), Name(id='auth', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='endheaders', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='send', ctx=Load()), args=[Name(id='body', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='socket', ctx=Load()), attr='error', ctx=Load()), name='e', body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='announce', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), Attribute(value=Name(id='log', ctx=Load()), attr='ERROR', ctx=Load())], keywords=[])), Return()])], orelse=[], finalbody=[]), Assign(targets=[Name(id='r', ctx=Store())], value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='getresponse', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='r', ctx=Load()), attr='status', ctx=Load()), ops=[Eq()], comparators=[Constant(value=200)]), body=[Assign(targets=[Name(id='msg', ctx=Store())], value=BinOp(left=Constant(value='Server response (%s): %s'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='r', ctx=Load()), attr='status', ctx=Load()), Attribute(value=Name(id='r', ctx=Load()), attr='reason', ctx=Load())], ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='announce', ctx=Load()), args=[Name(id='msg', ctx=Load()), Attribute(value=Name(id='log', ctx=Load()), attr='INFO', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='r', ctx=Load()), attr='status', ctx=Load()), ops=[Eq()], comparators=[Constant(value=301)]), body=[Assign(targets=[Name(id='location', ctx=Store())], value=Call(func=Attribute(value=Name(id='r', ctx=Load()), attr='getheader', ctx=Load()), args=[Constant(value='Location')], keywords=[])), If(test=Compare(left=Name(id='location', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='location', ctx=Store())], value=BinOp(left=Constant(value='https://pythonhosted.org/%s/'), op=Mod(), right=Call(func=Attribute(value=Name(id='meta', ctx=Load()), attr='get_name', ctx=Load()), args=[], keywords=[])))], orelse=[]), Assign(targets=[Name(id='msg', ctx=Store())], value=BinOp(left=Constant(value='Upload successful. Visit %s'), op=Mod(), right=Name(id='location', ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='announce', ctx=Load()), args=[Name(id='msg', ctx=Load()), Attribute(value=Name(id='log', ctx=Load()), attr='INFO', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='msg', ctx=Store())], value=BinOp(left=Constant(value='Upload failed (%s): %s'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='r', ctx=Load()), attr='status', ctx=Load()), Attribute(value=Name(id='r', ctx=Load()), attr='reason', ctx=Load())], ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='announce', ctx=Load()), args=[Name(id='msg', ctx=Load()), Attribute(value=Name(id='log', ctx=Load()), attr='ERROR', ctx=Load())], keywords=[]))])]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='show_response', ctx=Load()), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[BinOp(left=Constant(value='-'), op=Mult(), right=Constant(value=75)), Call(func=Attribute(value=Name(id='r', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), BinOp(left=Constant(value='-'), op=Mult(), right=Constant(value=75))], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[])], type_ignores=[])