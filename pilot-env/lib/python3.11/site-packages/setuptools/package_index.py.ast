Module(body=[Expr(value=Constant(value='PyPI and direct package downloading.')), Import(names=[alias(name='sys')]), Import(names=[alias(name='os')]), Import(names=[alias(name='re')]), Import(names=[alias(name='io')]), Import(names=[alias(name='shutil')]), Import(names=[alias(name='socket')]), Import(names=[alias(name='base64')]), Import(names=[alias(name='hashlib')]), Import(names=[alias(name='itertools')]), Import(names=[alias(name='configparser')]), Import(names=[alias(name='html')]), Import(names=[alias(name='http.client')]), Import(names=[alias(name='urllib.parse')]), Import(names=[alias(name='urllib.request')]), Import(names=[alias(name='urllib.error')]), ImportFrom(module='functools', names=[alias(name='wraps')], level=0), Import(names=[alias(name='setuptools')]), ImportFrom(module='pkg_resources', names=[alias(name='CHECKOUT_DIST'), alias(name='Distribution'), alias(name='BINARY_DIST'), alias(name='normalize_path'), alias(name='SOURCE_DIST'), alias(name='Environment'), alias(name='find_distributions'), alias(name='safe_name'), alias(name='safe_version'), alias(name='to_filename'), alias(name='Requirement'), alias(name='DEVELOP_DIST'), alias(name='EGG_DIST'), alias(name='parse_version')], level=0), ImportFrom(module='distutils', names=[alias(name='log')], level=0), ImportFrom(module='distutils.errors', names=[alias(name='DistutilsError')], level=0), ImportFrom(module='fnmatch', names=[alias(name='translate')], level=0), ImportFrom(module='setuptools.wheel', names=[alias(name='Wheel')], level=0), ImportFrom(module='setuptools.extern.more_itertools', names=[alias(name='unique_everseen')], level=0), Assign(targets=[Name(id='EGG_FRAGMENT', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='^egg=([-A-Za-z0-9_.+!]+)$')], keywords=[])), Assign(targets=[Name(id='HREF', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='href\\s*=\\s*[\'"]?([^\'"> ]+)'), Attribute(value=Name(id='re', ctx=Load()), attr='I', ctx=Load())], keywords=[])), Assign(targets=[Name(id='PYPI_MD5', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='<a href="([^"#]+)">([^<]+)</a>\\n\\s+\\(<a (?:title="MD5 hash"\\n\\s+)href="[^?]+\\?:action=show_md5&amp;digest=([0-9a-f]{32})">md5</a>\\)')], keywords=[])), Assign(targets=[Name(id='URL_SCHEME', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='([-+.a-z0-9]{2,}):'), Attribute(value=Name(id='re', ctx=Load()), attr='I', ctx=Load())], keywords=[]), attr='match', ctx=Load())), Assign(targets=[Name(id='EXTENSIONS', ctx=Store())], value=Call(func=Attribute(value=Constant(value='.tar.gz .tar.bz2 .tar .zip .tgz'), attr='split', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='PackageIndex'), Constant(value='distros_for_url'), Constant(value='parse_bdist_wininst'), Constant(value='interpret_distro_name')], ctx=Load())), Assign(targets=[Name(id='_SOCKET_TIMEOUT', ctx=Store())], value=Constant(value=15)), Assign(targets=[Name(id='_tmpl', ctx=Store())], value=Constant(value='setuptools/{setuptools.__version__} Python-urllib/{py_major}')), Assign(targets=[Name(id='user_agent', ctx=Store())], value=Call(func=Attribute(value=Name(id='_tmpl', ctx=Load()), attr='format', ctx=Load()), args=[], keywords=[keyword(arg='py_major', value=Call(func=Attribute(value=Constant(value='{}.{}'), attr='format', ctx=Load()), args=[Starred(value=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ctx=Load())], keywords=[])), keyword(arg='setuptools', value=Name(id='setuptools', ctx=Load()))])), FunctionDef(name='parse_requirement_arg', args=arguments(posonlyargs=[], args=[arg(arg='spec')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Call(func=Attribute(value=Name(id='Requirement', ctx=Load()), attr='parse', ctx=Load()), args=[Name(id='spec', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ValueError', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='DistutilsError', ctx=Load()), args=[BinOp(left=Constant(value='Not a URL, existing file, or requirement spec: %r'), op=Mod(), right=Tuple(elts=[Name(id='spec', ctx=Load())], ctx=Load()))], keywords=[]), cause=Name(id='e', ctx=Load()))])], orelse=[], finalbody=[])], decorator_list=[]), FunctionDef(name='parse_bdist_wininst', args=arguments(posonlyargs=[], args=[arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Return (base,pyversion) or (None,None) for possible .exe name')), Assign(targets=[Name(id='lower', ctx=Store())], value=Call(func=Attribute(value=Name(id='name', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='base', ctx=Store()), Name(id='py_ver', ctx=Store()), Name(id='plat', ctx=Store())], ctx=Store())], value=Tuple(elts=[Constant(value=None), Constant(value=None), Constant(value=None)], ctx=Load())), If(test=Call(func=Attribute(value=Name(id='lower', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.exe')], keywords=[]), body=[If(test=Call(func=Attribute(value=Name(id='lower', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.win32.exe')], keywords=[]), body=[Assign(targets=[Name(id='base', ctx=Store())], value=Subscript(value=Name(id='name', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=10))), ctx=Load())), Assign(targets=[Name(id='plat', ctx=Store())], value=Constant(value='win32'))], orelse=[If(test=Call(func=Attribute(value=Name(id='lower', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='.win32-py'), UnaryOp(op=USub(), operand=Constant(value=16))], keywords=[]), body=[Assign(targets=[Name(id='py_ver', ctx=Store())], value=Subscript(value=Name(id='name', ctx=Load()), slice=Slice(lower=UnaryOp(op=USub(), operand=Constant(value=7)), upper=UnaryOp(op=USub(), operand=Constant(value=4))), ctx=Load())), Assign(targets=[Name(id='base', ctx=Store())], value=Subscript(value=Name(id='name', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=16))), ctx=Load())), Assign(targets=[Name(id='plat', ctx=Store())], value=Constant(value='win32'))], orelse=[If(test=Call(func=Attribute(value=Name(id='lower', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.win-amd64.exe')], keywords=[]), body=[Assign(targets=[Name(id='base', ctx=Store())], value=Subscript(value=Name(id='name', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=14))), ctx=Load())), Assign(targets=[Name(id='plat', ctx=Store())], value=Constant(value='win-amd64'))], orelse=[If(test=Call(func=Attribute(value=Name(id='lower', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='.win-amd64-py'), UnaryOp(op=USub(), operand=Constant(value=20))], keywords=[]), body=[Assign(targets=[Name(id='py_ver', ctx=Store())], value=Subscript(value=Name(id='name', ctx=Load()), slice=Slice(lower=UnaryOp(op=USub(), operand=Constant(value=7)), upper=UnaryOp(op=USub(), operand=Constant(value=4))), ctx=Load())), Assign(targets=[Name(id='base', ctx=Store())], value=Subscript(value=Name(id='name', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=20))), ctx=Load())), Assign(targets=[Name(id='plat', ctx=Store())], value=Constant(value='win-amd64'))], orelse=[])])])])], orelse=[]), Return(value=Tuple(elts=[Name(id='base', ctx=Load()), Name(id='py_ver', ctx=Load()), Name(id='plat', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='egg_info_for_url', args=arguments(posonlyargs=[], args=[arg(arg='url')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='parts', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urlparse', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='scheme', ctx=Store()), Name(id='server', ctx=Store()), Name(id='path', ctx=Store()), Name(id='parameters', ctx=Store()), Name(id='query', ctx=Store()), Name(id='fragment', ctx=Store())], ctx=Store())], value=Name(id='parts', ctx=Load())), Assign(targets=[Name(id='base', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='unquote', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='path', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='/')], keywords=[]), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='server', ctx=Load()), ops=[Eq()], comparators=[Constant(value='sourceforge.net')]), Compare(left=Name(id='base', ctx=Load()), ops=[Eq()], comparators=[Constant(value='download')])]), body=[Assign(targets=[Name(id='base', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='unquote', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='path', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='/')], keywords=[]), slice=UnaryOp(op=USub(), operand=Constant(value=2)), ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Constant(value='#'), ops=[In()], comparators=[Name(id='base', ctx=Load())]), body=[Assign(targets=[Tuple(elts=[Name(id='base', ctx=Store()), Name(id='fragment', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='base', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='#'), Constant(value=1)], keywords=[]))], orelse=[]), Return(value=Tuple(elts=[Name(id='base', ctx=Load()), Name(id='fragment', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='distros_for_url', args=arguments(posonlyargs=[], args=[arg(arg='url'), arg(arg='metadata')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='Yield egg or source distribution objects that might be found at a URL')), Assign(targets=[Tuple(elts=[Name(id='base', ctx=Store()), Name(id='fragment', ctx=Store())], ctx=Store())], value=Call(func=Name(id='egg_info_for_url', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), For(target=Name(id='dist', ctx=Store()), iter=Call(func=Name(id='distros_for_location', ctx=Load()), args=[Name(id='url', ctx=Load()), Name(id='base', ctx=Load()), Name(id='metadata', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Name(id='dist', ctx=Load())))], orelse=[]), If(test=Name(id='fragment', ctx=Load()), body=[Assign(targets=[Name(id='match', ctx=Store())], value=Call(func=Attribute(value=Name(id='EGG_FRAGMENT', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='fragment', ctx=Load())], keywords=[])), If(test=Name(id='match', ctx=Load()), body=[For(target=Name(id='dist', ctx=Store()), iter=Call(func=Name(id='interpret_distro_name', ctx=Load()), args=[Name(id='url', ctx=Load()), Call(func=Attribute(value=Name(id='match', ctx=Load()), attr='group', ctx=Load()), args=[Constant(value=1)], keywords=[]), Name(id='metadata', ctx=Load())], keywords=[keyword(arg='precedence', value=Name(id='CHECKOUT_DIST', ctx=Load()))]), body=[Expr(value=Yield(value=Name(id='dist', ctx=Load())))], orelse=[])], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='distros_for_location', args=arguments(posonlyargs=[], args=[arg(arg='location'), arg(arg='basename'), arg(arg='metadata')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='Yield egg or source distribution objects based on basename')), If(test=Call(func=Attribute(value=Name(id='basename', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.egg.zip')], keywords=[]), body=[Assign(targets=[Name(id='basename', ctx=Store())], value=Subscript(value=Name(id='basename', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=4))), ctx=Load()))], orelse=[]), If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Name(id='basename', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.egg')], keywords=[]), Compare(left=Constant(value='-'), ops=[In()], comparators=[Name(id='basename', ctx=Load())])]), body=[Return(value=List(elts=[Call(func=Attribute(value=Name(id='Distribution', ctx=Load()), attr='from_location', ctx=Load()), args=[Name(id='location', ctx=Load()), Name(id='basename', ctx=Load()), Name(id='metadata', ctx=Load())], keywords=[])], ctx=Load()))], orelse=[]), If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Name(id='basename', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.whl')], keywords=[]), Compare(left=Constant(value='-'), ops=[In()], comparators=[Name(id='basename', ctx=Load())])]), body=[Assign(targets=[Name(id='wheel', ctx=Store())], value=Call(func=Name(id='Wheel', ctx=Load()), args=[Name(id='basename', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='wheel', ctx=Load()), attr='is_compatible', ctx=Load()), args=[], keywords=[])), body=[Return(value=List(elts=[], ctx=Load()))], orelse=[]), Return(value=List(elts=[Call(func=Name(id='Distribution', ctx=Load()), args=[], keywords=[keyword(arg='location', value=Name(id='location', ctx=Load())), keyword(arg='project_name', value=Attribute(value=Name(id='wheel', ctx=Load()), attr='project_name', ctx=Load())), keyword(arg='version', value=Attribute(value=Name(id='wheel', ctx=Load()), attr='version', ctx=Load())), keyword(arg='precedence', value=BinOp(left=Name(id='EGG_DIST', ctx=Load()), op=Add(), right=Constant(value=1)))])], ctx=Load()))], orelse=[]), If(test=Call(func=Attribute(value=Name(id='basename', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.exe')], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='win_base', ctx=Store()), Name(id='py_ver', ctx=Store()), Name(id='platform', ctx=Store())], ctx=Store())], value=Call(func=Name(id='parse_bdist_wininst', ctx=Load()), args=[Name(id='basename', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='win_base', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='interpret_distro_name', ctx=Load()), args=[Name(id='location', ctx=Load()), Name(id='win_base', ctx=Load()), Name(id='metadata', ctx=Load()), Name(id='py_ver', ctx=Load()), Name(id='BINARY_DIST', ctx=Load()), Name(id='platform', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), For(target=Name(id='ext', ctx=Store()), iter=Name(id='EXTENSIONS', ctx=Load()), body=[If(test=Call(func=Attribute(value=Name(id='basename', ctx=Load()), attr='endswith', ctx=Load()), args=[Name(id='ext', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='basename', ctx=Store())], value=Subscript(value=Name(id='basename', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Call(func=Name(id='len', ctx=Load()), args=[Name(id='ext', ctx=Load())], keywords=[]))), ctx=Load())), Return(value=Call(func=Name(id='interpret_distro_name', ctx=Load()), args=[Name(id='location', ctx=Load()), Name(id='basename', ctx=Load()), Name(id='metadata', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Return(value=List(elts=[], ctx=Load()))], decorator_list=[]), FunctionDef(name='distros_for_filename', args=arguments(posonlyargs=[], args=[arg(arg='filename'), arg(arg='metadata')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='Yield possible egg or source distribution objects based on a filename')), Return(value=Call(func=Name(id='distros_for_location', ctx=Load()), args=[Call(func=Name(id='normalize_path', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[]), Name(id='metadata', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='interpret_distro_name', args=arguments(posonlyargs=[], args=[arg(arg='location'), arg(arg='basename'), arg(arg='metadata'), arg(arg='py_version'), arg(arg='precedence'), arg(arg='platform')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Name(id='SOURCE_DIST', ctx=Load()), Constant(value=None)]), body=[Expr(value=Constant(value='Generate the interpretation of a source distro name\n\n    Note: if `location` is a filesystem filename, you should call\n    ``pkg_resources.normalize_path()`` on it before passing it to this\n    routine!\n    ')), Assign(targets=[Name(id='parts', ctx=Store())], value=Call(func=Attribute(value=Name(id='basename', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='-')], keywords=[])), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='py_version', ctx=Load())), Call(func=Name(id='any', ctx=Load()), args=[GeneratorExp(elt=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='py\\d\\.\\d$'), Name(id='p', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='p', ctx=Store()), iter=Subscript(value=Name(id='parts', ctx=Load()), slice=Slice(lower=Constant(value=2)), ctx=Load()), ifs=[], is_async=0)])], keywords=[])]), body=[Return()], orelse=[]), For(target=Name(id='p', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='parts', ctx=Load())], keywords=[])], keywords=[]), body=[If(test=Call(func=Attribute(value=Subscript(value=Subscript(value=Name(id='parts', ctx=Load()), slice=Name(id='p', ctx=Load()), ctx=Load()), slice=Slice(upper=Constant(value=1)), ctx=Load()), attr='isdigit', ctx=Load()), args=[], keywords=[]), body=[Break()], orelse=[])], orelse=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Name(id='parts', ctx=Load())], keywords=[]))]), Expr(value=Yield(value=Call(func=Name(id='Distribution', ctx=Load()), args=[Name(id='location', ctx=Load()), Name(id='metadata', ctx=Load()), Call(func=Attribute(value=Constant(value='-'), attr='join', ctx=Load()), args=[Subscript(value=Name(id='parts', ctx=Load()), slice=Slice(upper=Name(id='p', ctx=Load())), ctx=Load())], keywords=[]), Call(func=Attribute(value=Constant(value='-'), attr='join', ctx=Load()), args=[Subscript(value=Name(id='parts', ctx=Load()), slice=Slice(lower=Name(id='p', ctx=Load())), ctx=Load())], keywords=[])], keywords=[keyword(arg='py_version', value=Name(id='py_version', ctx=Load())), keyword(arg='precedence', value=Name(id='precedence', ctx=Load())), keyword(arg='platform', value=Name(id='platform', ctx=Load()))])))], decorator_list=[]), FunctionDef(name='unique_values', args=arguments(posonlyargs=[], args=[arg(arg='func')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Wrap a function returning an iterable such that the resulting iterable\n    only ever yields unique items.\n    ')), FunctionDef(name='wrapper', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Return(value=Call(func=Name(id='unique_everseen', ctx=Load()), args=[Call(func=Name(id='func', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])], keywords=[]))], decorator_list=[Call(func=Name(id='wraps', ctx=Load()), args=[Name(id='func', ctx=Load())], keywords=[])]), Return(value=Name(id='wrapper', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='REL', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='<([^>]*\\srel\\s{0,10}=\\s{0,10}[\'"]?([^\'" >]+)[^>]*)>'), Attribute(value=Name(id='re', ctx=Load()), attr='I', ctx=Load())], keywords=[])), Expr(value=Constant(value='\nRegex for an HTML tag with \'rel="val"\' attributes.\n')), FunctionDef(name='find_external_links', args=arguments(posonlyargs=[], args=[arg(arg='url'), arg(arg='page')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Find rel="homepage" and rel="download" links in `page`, yielding URLs')), For(target=Name(id='match', ctx=Store()), iter=Call(func=Attribute(value=Name(id='REL', ctx=Load()), attr='finditer', ctx=Load()), args=[Name(id='page', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='tag', ctx=Store()), Name(id='rel', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='match', ctx=Load()), attr='groups', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='rels', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Attribute(value=Name(id='str', ctx=Load()), attr='strip', ctx=Load()), Call(func=Attribute(value=Call(func=Attribute(value=Name(id='rel', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), attr='split', ctx=Load()), args=[Constant(value=',')], keywords=[])], keywords=[])], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Constant(value='homepage'), ops=[In()], comparators=[Name(id='rels', ctx=Load())]), Compare(left=Constant(value='download'), ops=[In()], comparators=[Name(id='rels', ctx=Load())])]), body=[For(target=Name(id='match', ctx=Store()), iter=Call(func=Attribute(value=Name(id='HREF', ctx=Load()), attr='finditer', ctx=Load()), args=[Name(id='tag', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urljoin', ctx=Load()), args=[Name(id='url', ctx=Load()), Call(func=Name(id='htmldecode', ctx=Load()), args=[Call(func=Attribute(value=Name(id='match', ctx=Load()), attr='group', ctx=Load()), args=[Constant(value=1)], keywords=[])], keywords=[])], keywords=[])))], orelse=[])], orelse=[])], orelse=[]), For(target=Name(id='tag', ctx=Store()), iter=Tuple(elts=[Constant(value='<th>Home Page'), Constant(value='<th>Download URL')], ctx=Load()), body=[Assign(targets=[Name(id='pos', ctx=Store())], value=Call(func=Attribute(value=Name(id='page', ctx=Load()), attr='find', ctx=Load()), args=[Name(id='tag', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='pos', ctx=Load()), ops=[NotEq()], comparators=[UnaryOp(op=USub(), operand=Constant(value=1))]), body=[Assign(targets=[Name(id='match', ctx=Store())], value=Call(func=Attribute(value=Name(id='HREF', ctx=Load()), attr='search', ctx=Load()), args=[Name(id='page', ctx=Load()), Name(id='pos', ctx=Load())], keywords=[])), If(test=Name(id='match', ctx=Load()), body=[Expr(value=Yield(value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urljoin', ctx=Load()), args=[Name(id='url', ctx=Load()), Call(func=Name(id='htmldecode', ctx=Load()), args=[Call(func=Attribute(value=Name(id='match', ctx=Load()), attr='group', ctx=Load()), args=[Constant(value=1)], keywords=[])], keywords=[])], keywords=[])))], orelse=[])], orelse=[])], orelse=[])], decorator_list=[Name(id='unique_values', ctx=Load())]), ClassDef(name='ContentChecker', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    A null content checker that defines the interface for checking content\n    ')), FunctionDef(name='feed', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='block')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Feed a block of data to the hash.\n        ')), Return()], decorator_list=[]), FunctionDef(name='is_valid', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Check the hash. Return False if validation fails.\n        ')), Return(value=Constant(value=True))], decorator_list=[]), FunctionDef(name='report', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='reporter'), arg(arg='template')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Call reporter with information about the checker (hash name)\n        substituted into the template.\n        ')), Return()], decorator_list=[])], decorator_list=[]), ClassDef(name='HashChecker', bases=[Name(id='ContentChecker', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='pattern', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='(?P<hash_name>sha1|sha224|sha384|sha256|sha512|md5)=(?P<expected>[a-f0-9]+)')], keywords=[])), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='hash_name'), arg(arg='expected')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='hash_name', ctx=Store())], value=Name(id='hash_name', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='hash', ctx=Store())], value=Call(func=Attribute(value=Name(id='hashlib', ctx=Load()), attr='new', ctx=Load()), args=[Name(id='hash_name', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='expected', ctx=Store())], value=Name(id='expected', ctx=Load()))], decorator_list=[]), FunctionDef(name='from_url', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='url')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Construct a (possibly null) ContentChecker from a URL')), Assign(targets=[Name(id='fragment', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urlparse', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[]), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())), If(test=UnaryOp(op=Not(), operand=Name(id='fragment', ctx=Load())), body=[Return(value=Call(func=Name(id='ContentChecker', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='match', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='pattern', ctx=Load()), attr='search', ctx=Load()), args=[Name(id='fragment', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='match', ctx=Load())), body=[Return(value=Call(func=Name(id='ContentChecker', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='cls', ctx=Load()), args=[], keywords=[keyword(value=Call(func=Attribute(value=Name(id='match', ctx=Load()), attr='groupdict', ctx=Load()), args=[], keywords=[]))]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='feed', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='block')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='hash', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='block', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='is_valid', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='hash', ctx=Load()), attr='hexdigest', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='expected', ctx=Load())]))], decorator_list=[]), FunctionDef(name='report', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='reporter'), arg(arg='template')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='msg', ctx=Store())], value=BinOp(left=Name(id='template', ctx=Load()), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='hash_name', ctx=Load()))), Return(value=Call(func=Name(id='reporter', ctx=Load()), args=[Name(id='msg', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='PackageIndex', bases=[Name(id='Environment', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='A distribution index that scans web pages for download URLs')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='index_url'), arg(arg='hosts'), arg(arg='ca_bundle'), arg(arg='verify_ssl')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kw'), defaults=[Constant(value='https://pypi.org/simple/'), Tuple(elts=[Constant(value='*')], ctx=Load()), Constant(value=None), Constant(value=True)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kw', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='index_url', ctx=Store())], value=BinOp(left=Name(id='index_url', ctx=Load()), op=Add(), right=Subscript(value=Constant(value='/'), slice=Slice(upper=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='index_url', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='/')], keywords=[]))), ctx=Load()))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='scanned_urls', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='fetched_urls', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='package_pages', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allows', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='|'), attr='join', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Name(id='translate', ctx=Load()), Name(id='hosts', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), attr='match', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='to_scan', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='opener', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='request', ctx=Load()), attr='urlopen', ctx=Load()))], decorator_list=[]), FunctionDef(name='add', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dist')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Expr(value=Call(func=Name(id='parse_version', ctx=Load()), args=[Attribute(value=Name(id='dist', ctx=Load()), attr='version', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), body=[Return()])], orelse=[], finalbody=[]), Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='add', ctx=Load()), args=[Name(id='dist', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='process_url', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url'), arg(arg='retrieve')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Expr(value=Constant(value='Evaluate a URL as a possible download, and maybe retrieve it')), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='url', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='scanned_urls', ctx=Load())]), UnaryOp(op=Not(), operand=Name(id='retrieve', ctx=Load()))]), body=[Return()], orelse=[]), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='scanned_urls', ctx=Load()), slice=Name(id='url', ctx=Load()), ctx=Store())], value=Constant(value=True)), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='URL_SCHEME', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='process_filename', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), Return()], orelse=[Assign(targets=[Name(id='dists', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='distros_for_url', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])], keywords=[])), If(test=Name(id='dists', ctx=Load()), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='url_ok', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), body=[Return()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Found link: %s'), Name(id='url', ctx=Load())], keywords=[]))], orelse=[])]), If(test=BoolOp(op=Or(), values=[Name(id='dists', ctx=Load()), UnaryOp(op=Not(), operand=Name(id='retrieve', ctx=Load())), Compare(left=Name(id='url', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='fetched_urls', ctx=Load())])]), body=[Expr(value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='add', ctx=Load()), Name(id='dists', ctx=Load())], keywords=[])], keywords=[])), Return()], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='url_ok', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='fetched_urls', ctx=Load()), slice=Name(id='url', ctx=Load()), ctx=Store())], value=Constant(value=True)), Return()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Reading %s'), Name(id='url', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='fetched_urls', ctx=Load()), slice=Name(id='url', ctx=Load()), ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='tmpl', ctx=Store())], value=Constant(value='Download error on %s: %%s -- Some packages may not be found!')), Assign(targets=[Name(id='f', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='open_url', ctx=Load()), args=[Name(id='url', ctx=Load()), BinOp(left=Name(id='tmpl', ctx=Load()), op=Mod(), right=Name(id='url', ctx=Load()))], keywords=[])), If(test=Compare(left=Name(id='f', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return()], orelse=[]), If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='f', ctx=Load()), Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='error', ctx=Load()), attr='HTTPError', ctx=Load())], keywords=[]), Compare(left=Attribute(value=Name(id='f', ctx=Load()), attr='code', ctx=Load()), ops=[Eq()], comparators=[Constant(value=401)])]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='info', ctx=Load()), args=[BinOp(left=Constant(value='Authentication error: %s'), op=Mod(), right=Attribute(value=Name(id='f', ctx=Load()), attr='msg', ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='fetched_urls', ctx=Load()), slice=Attribute(value=Name(id='f', ctx=Load()), attr='url', ctx=Load()), ctx=Store())], value=Constant(value=True)), If(test=Compare(left=Constant(value='html'), ops=[NotIn()], comparators=[Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='f', ctx=Load()), attr='headers', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='content-type'), Constant(value='')], keywords=[]), attr='lower', ctx=Load()), args=[], keywords=[])]), body=[Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Return()], orelse=[]), Assign(targets=[Name(id='base', ctx=Store())], value=Attribute(value=Name(id='f', ctx=Load()), attr='url', ctx=Load())), Assign(targets=[Name(id='page', ctx=Store())], value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='page', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='f', ctx=Load()), Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='error', ctx=Load()), attr='HTTPError', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='charset', ctx=Store())], value=Constant(value='latin-1'))], orelse=[Assign(targets=[Name(id='charset', ctx=Store())], value=BoolOp(op=Or(), values=[Call(func=Attribute(value=Attribute(value=Name(id='f', ctx=Load()), attr='headers', ctx=Load()), attr='get_param', ctx=Load()), args=[Constant(value='charset')], keywords=[]), Constant(value='latin-1')]))]), Assign(targets=[Name(id='page', ctx=Store())], value=Call(func=Attribute(value=Name(id='page', ctx=Load()), attr='decode', ctx=Load()), args=[Name(id='charset', ctx=Load()), Constant(value='ignore')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), For(target=Name(id='match', ctx=Store()), iter=Call(func=Attribute(value=Name(id='HREF', ctx=Load()), attr='finditer', ctx=Load()), args=[Name(id='page', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='link', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urljoin', ctx=Load()), args=[Name(id='base', ctx=Load()), Call(func=Name(id='htmldecode', ctx=Load()), args=[Call(func=Attribute(value=Name(id='match', ctx=Load()), attr='group', ctx=Load()), args=[Constant(value=1)], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='process_url', ctx=Load()), args=[Name(id='link', ctx=Load())], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Name(id='url', ctx=Load()), attr='startswith', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='index_url', ctx=Load())], keywords=[]), Compare(left=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='f', ctx=Load()), Constant(value='code'), Constant(value=None)], keywords=[]), ops=[NotEq()], comparators=[Constant(value=404)])]), body=[Assign(targets=[Name(id='page', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='process_index', ctx=Load()), args=[Name(id='url', ctx=Load()), Name(id='page', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='process_filename', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fn'), arg(arg='nested')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='warn', ctx=Load()), args=[Constant(value='Not found: %s'), Name(id='fn', ctx=Load())], keywords=[])), Return()], orelse=[]), If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[]), UnaryOp(op=Not(), operand=Name(id='nested', ctx=Load()))]), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='realpath', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[])), For(target=Name(id='item', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='process_filename', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='path', ctx=Load()), Name(id='item', ctx=Load())], keywords=[]), Constant(value=True)], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='dists', ctx=Store())], value=Call(func=Name(id='distros_for_filename', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[])), If(test=Name(id='dists', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Found: %s'), Name(id='fn', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='add', ctx=Load()), Name(id='dists', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='url_ok', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url'), arg(arg='fatal')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Assign(targets=[Name(id='s', ctx=Store())], value=Call(func=Name(id='URL_SCHEME', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), Assign(targets=[Name(id='is_file', ctx=Store())], value=BoolOp(op=And(), values=[Name(id='s', ctx=Load()), Compare(left=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='group', ctx=Load()), args=[Constant(value=1)], keywords=[]), attr='lower', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value='file')])])), If(test=BoolOp(op=Or(), values=[Name(id='is_file', ctx=Load()), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='allows', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urlparse', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[]), slice=Constant(value=1), ctx=Load())], keywords=[])]), body=[Return(value=Constant(value=True))], orelse=[]), Assign(targets=[Name(id='msg', ctx=Store())], value=Constant(value='\nNote: Bypassing %s (disallowed host; see https://setuptools.pypa.io/en/latest/deprecated/easy_install.html#restricting-downloads-with-allow-hosts for details).\n')), If(test=Name(id='fatal', ctx=Load()), body=[Raise(exc=Call(func=Name(id='DistutilsError', ctx=Load()), args=[BinOp(left=Name(id='msg', ctx=Load()), op=Mod(), right=Name(id='url', ctx=Load()))], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='warn', ctx=Load()), args=[Name(id='msg', ctx=Load()), Name(id='url', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='scan_egg_links', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='search_path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='dirs', ctx=Store())], value=Call(func=Name(id='filter', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), Name(id='search_path', ctx=Load())], keywords=[])), Assign(targets=[Name(id='egg_links', ctx=Store())], value=GeneratorExp(elt=Tuple(elts=[Name(id='path', ctx=Load()), Name(id='entry', ctx=Load())], ctx=Load()), generators=[comprehension(target=Name(id='path', ctx=Store()), iter=Name(id='dirs', ctx=Load()), ifs=[], is_async=0), comprehension(target=Name(id='entry', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]), ifs=[Call(func=Attribute(value=Name(id='entry', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.egg-link')], keywords=[])], is_async=0)])), Expr(value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='itertools', ctx=Load()), attr='starmap', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='scan_egg_link', ctx=Load()), Name(id='egg_links', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='scan_egg_link', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='path'), arg(arg='entry')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='path', ctx=Load()), Name(id='entry', ctx=Load())], keywords=[])], keywords=[]), optional_vars=Name(id='raw_lines', ctx=Store()))], body=[Assign(targets=[Name(id='lines', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='filter', ctx=Load()), args=[Constant(value=None), Call(func=Name(id='map', ctx=Load()), args=[Attribute(value=Name(id='str', ctx=Load()), attr='strip', ctx=Load()), Name(id='raw_lines', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))]), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='lines', ctx=Load())], keywords=[]), ops=[NotEq()], comparators=[Constant(value=2)]), body=[Return()], orelse=[]), Assign(targets=[Tuple(elts=[Name(id='egg_path', ctx=Store()), Name(id='setup_path', ctx=Store())], ctx=Store())], value=Name(id='lines', ctx=Load())), For(target=Name(id='dist', ctx=Store()), iter=Call(func=Name(id='find_distributions', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='path', ctx=Load()), Name(id='egg_path', ctx=Load())], keywords=[])], keywords=[]), body=[Assign(targets=[Attribute(value=Name(id='dist', ctx=Load()), attr='location', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='path', ctx=Load()), Starred(value=Name(id='lines', ctx=Load()), ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='dist', ctx=Load()), attr='precedence', ctx=Store())], value=Name(id='SOURCE_DIST', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='dist', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='_scan', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='link')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='NO_MATCH_SENTINEL', ctx=Store())], value=Tuple(elts=[Constant(value=None), Constant(value=None)], ctx=Load())), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='link', ctx=Load()), attr='startswith', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='index_url', ctx=Load())], keywords=[])), body=[Return(value=Name(id='NO_MATCH_SENTINEL', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='parts', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='unquote', ctx=Load()), Call(func=Attribute(value=Subscript(value=Name(id='link', ctx=Load()), slice=Slice(lower=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='index_url', ctx=Load())], keywords=[])), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='/')], keywords=[])], keywords=[])], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='parts', ctx=Load())], keywords=[]), ops=[NotEq()], comparators=[Constant(value=2)]), Compare(left=Constant(value='#'), ops=[In()], comparators=[Subscript(value=Name(id='parts', ctx=Load()), slice=Constant(value=1), ctx=Load())])]), body=[Return(value=Name(id='NO_MATCH_SENTINEL', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='pkg', ctx=Store())], value=Call(func=Name(id='safe_name', ctx=Load()), args=[Subscript(value=Name(id='parts', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[])), Assign(targets=[Name(id='ver', ctx=Store())], value=Call(func=Name(id='safe_version', ctx=Load()), args=[Subscript(value=Name(id='parts', ctx=Load()), slice=Constant(value=1), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='package_pages', ctx=Load()), attr='setdefault', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pkg', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), Dict(keys=[], values=[])], keywords=[]), slice=Name(id='link', ctx=Load()), ctx=Store())], value=Constant(value=True)), Return(value=Tuple(elts=[Call(func=Name(id='to_filename', ctx=Load()), args=[Name(id='pkg', ctx=Load())], keywords=[]), Call(func=Name(id='to_filename', ctx=Load()), args=[Name(id='ver', ctx=Load())], keywords=[])], ctx=Load()))], decorator_list=[]), FunctionDef(name='process_index', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url'), arg(arg='page')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Process the contents of a PyPI page')), For(target=Name(id='match', ctx=Store()), iter=Call(func=Attribute(value=Name(id='HREF', ctx=Load()), attr='finditer', ctx=Load()), args=[Name(id='page', ctx=Load())], keywords=[]), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_scan', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urljoin', ctx=Load()), args=[Name(id='url', ctx=Load()), Call(func=Name(id='htmldecode', ctx=Load()), args=[Call(func=Attribute(value=Name(id='match', ctx=Load()), attr='group', ctx=Load()), args=[Constant(value=1)], keywords=[])], keywords=[])], keywords=[])], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ValueError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], orelse=[]), Assign(targets=[Tuple(elts=[Name(id='pkg', ctx=Store()), Name(id='ver', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_scan', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='pkg', ctx=Load())), body=[Return(value=Constant(value=''))], orelse=[]), For(target=Name(id='new_url', ctx=Store()), iter=Call(func=Name(id='find_external_links', ctx=Load()), args=[Name(id='url', ctx=Load()), Name(id='page', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='base', ctx=Store()), Name(id='frag', ctx=Store())], ctx=Store())], value=Call(func=Name(id='egg_info_for_url', ctx=Load()), args=[Name(id='new_url', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Name(id='base', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.py')], keywords=[]), UnaryOp(op=Not(), operand=Name(id='frag', ctx=Load()))]), body=[If(test=Name(id='ver', ctx=Load()), body=[AugAssign(target=Name(id='new_url', ctx=Store()), op=Add(), value=BinOp(left=Constant(value='#egg=%s-%s'), op=Mod(), right=Tuple(elts=[Name(id='pkg', ctx=Load()), Name(id='ver', ctx=Load())], ctx=Load())))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='need_version_info', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[]))])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_url', ctx=Load()), args=[Name(id='new_url', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='PYPI_MD5', ctx=Load()), attr='sub', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='m')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=BinOp(left=Constant(value='<a href="%s#md5=%s">%s</a>'), op=Mod(), right=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='group', ctx=Load()), args=[Constant(value=1), Constant(value=3), Constant(value=2)], keywords=[]))), Name(id='page', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='need_version_info', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_all', ctx=Load()), args=[Constant(value='Page at %s links to .py file(s) without version info; an index scan is required.'), Name(id='url', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='scan_all', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='msg')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='index_url', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='fetched_urls', ctx=Load())]), body=[If(test=Name(id='msg', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='warn', ctx=Load()), args=[Name(id='msg', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Scanning index of all packages (this may take a while)')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_url', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='index_url', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='find_packages', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='requirement')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_url', ctx=Load()), args=[BinOp(left=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='index_url', ctx=Load()), op=Add(), right=Attribute(value=Name(id='requirement', ctx=Load()), attr='unsafe_name', ctx=Load())), op=Add(), right=Constant(value='/'))], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='package_pages', ctx=Load()), attr='get', ctx=Load()), args=[Attribute(value=Name(id='requirement', ctx=Load()), attr='key', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_url', ctx=Load()), args=[BinOp(left=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='index_url', ctx=Load()), op=Add(), right=Attribute(value=Name(id='requirement', ctx=Load()), attr='project_name', ctx=Load())), op=Add(), right=Constant(value='/'))], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='package_pages', ctx=Load()), attr='get', ctx=Load()), args=[Attribute(value=Name(id='requirement', ctx=Load()), attr='key', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='not_found_in_index', ctx=Load()), args=[Name(id='requirement', ctx=Load())], keywords=[]))], orelse=[]), For(target=Name(id='url', ctx=Store()), iter=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='package_pages', ctx=Load()), attr='get', ctx=Load()), args=[Attribute(value=Name(id='requirement', ctx=Load()), attr='key', ctx=Load()), Tuple(elts=[], ctx=Load())], keywords=[])], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_url', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='obtain', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='requirement'), arg(arg='installer')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prescan', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='find_packages', ctx=Load()), args=[Name(id='requirement', ctx=Load())], keywords=[])), For(target=Name(id='dist', ctx=Store()), iter=Subscript(value=Name(id='self', ctx=Load()), slice=Attribute(value=Name(id='requirement', ctx=Load()), attr='key', ctx=Load()), ctx=Load()), body=[If(test=Compare(left=Name(id='dist', ctx=Load()), ops=[In()], comparators=[Name(id='requirement', ctx=Load())]), body=[Return(value=Name(id='dist', ctx=Load()))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='%s does not match %s'), Name(id='requirement', ctx=Load()), Name(id='dist', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='PackageIndex', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='obtain', ctx=Load()), args=[Name(id='requirement', ctx=Load()), Name(id='installer', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='check_hash', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='checker'), arg(arg='filename'), arg(arg='tfp')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        checker is a ContentChecker\n        ')), Expr(value=Call(func=Attribute(value=Name(id='checker', ctx=Load()), attr='report', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='debug', ctx=Load()), BinOp(left=Constant(value='Validating %%s checksum for %s'), op=Mod(), right=Name(id='filename', ctx=Load()))], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='checker', ctx=Load()), attr='is_valid', ctx=Load()), args=[], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='tfp', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='unlink', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])), Raise(exc=Call(func=Name(id='DistutilsError', ctx=Load()), args=[BinOp(left=Constant(value='%s validation failed for %s; possible download problem?'), op=Mod(), right=Tuple(elts=[Attribute(value=Attribute(value=Name(id='checker', ctx=Load()), attr='hash', ctx=Load()), attr='name', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])], ctx=Load()))], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='add_find_links', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='urls')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Add `urls` to the list that will be prescanned for searches')), For(target=Name(id='url', ctx=Store()), iter=Name(id='urls', ctx=Load()), body=[If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='to_scan', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), UnaryOp(op=Not(), operand=Call(func=Name(id='URL_SCHEME', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), Call(func=Attribute(value=Name(id='url', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='file:')], keywords=[]), Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='distros_for_url', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])], keywords=[])]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_url', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='to_scan', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[]))])], orelse=[])], decorator_list=[]), FunctionDef(name='prescan', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Scan urls scheduled for prescanning (e.g. --find-links)')), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='to_scan', ctx=Load()), body=[Expr(value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='scan_url', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='to_scan', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='to_scan', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='not_found_in_index', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='requirement')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Subscript(value=Name(id='self', ctx=Load()), slice=Attribute(value=Name(id='requirement', ctx=Load()), attr='key', ctx=Load()), ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='meth', ctx=Store()), Name(id='msg', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='info', ctx=Load()), Constant(value="Couldn't retrieve index page for %r")], ctx=Load()))], orelse=[Assign(targets=[Tuple(elts=[Name(id='meth', ctx=Store()), Name(id='msg', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='warn', ctx=Load()), Constant(value="Couldn't find index page for %r (maybe misspelled?)")], ctx=Load()))]), Expr(value=Call(func=Name(id='meth', ctx=Load()), args=[Name(id='msg', ctx=Load()), Attribute(value=Name(id='requirement', ctx=Load()), attr='unsafe_name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_all', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='download', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='spec'), arg(arg='tmpdir')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Locate and/or download `spec` to `tmpdir`, returning a local path\n\n        `spec` may be a ``Requirement`` object, or a string containing a URL,\n        an existing local filename, or a project/version requirement spec\n        (i.e. the string form of a ``Requirement`` object).  If it is the URL\n        of a .py file with an unambiguous ``#egg=name-version`` tag (i.e., one\n        that escapes ``-`` as ``_`` throughout), a trivial ``setup.py`` is\n        automatically created alongside the downloaded file.\n\n        If `spec` is a ``Requirement`` object or a string containing a\n        project/version requirement spec, this method returns the location of\n        a matching distribution (possibly after downloading it to `tmpdir`).\n        If `spec` is a locally existing file or directory name, it is simply\n        returned unchanged.  If `spec` is a URL, it is downloaded to a subpath\n        of `tmpdir`, and the local filename is returned.  Various errors may be\n        raised if a problem occurs during downloading.\n        ')), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='spec', ctx=Load()), Name(id='Requirement', ctx=Load())], keywords=[])), body=[Assign(targets=[Name(id='scheme', ctx=Store())], value=Call(func=Name(id='URL_SCHEME', ctx=Load()), args=[Name(id='spec', ctx=Load())], keywords=[])), If(test=Name(id='scheme', ctx=Load()), body=[Assign(targets=[Name(id='found', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_download_url', ctx=Load()), args=[Call(func=Attribute(value=Name(id='scheme', ctx=Load()), attr='group', ctx=Load()), args=[Constant(value=1)], keywords=[]), Name(id='spec', ctx=Load()), Name(id='tmpdir', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='base', ctx=Store()), Name(id='fragment', ctx=Store())], ctx=Store())], value=Call(func=Name(id='egg_info_for_url', ctx=Load()), args=[Name(id='spec', ctx=Load())], keywords=[])), If(test=Call(func=Attribute(value=Name(id='base', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.py')], keywords=[]), body=[Assign(targets=[Name(id='found', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='gen_setup', ctx=Load()), args=[Name(id='found', ctx=Load()), Name(id='fragment', ctx=Load()), Name(id='tmpdir', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='found', ctx=Load()))], orelse=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='spec', ctx=Load())], keywords=[]), body=[Return(value=Name(id='spec', ctx=Load()))], orelse=[Assign(targets=[Name(id='spec', ctx=Store())], value=Call(func=Name(id='parse_requirement_arg', ctx=Load()), args=[Name(id='spec', ctx=Load())], keywords=[]))])])], orelse=[]), Return(value=Call(func=Name(id='getattr', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_distribution', ctx=Load()), args=[Name(id='spec', ctx=Load()), Name(id='tmpdir', ctx=Load())], keywords=[]), Constant(value='location'), Constant(value=None)], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_distribution', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='requirement'), arg(arg='tmpdir'), arg(arg='force_scan'), arg(arg='source'), arg(arg='develop_ok'), arg(arg='local_index')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=False), Constant(value=False), Constant(value=None)]), body=[Expr(value=Constant(value="Obtain a distribution suitable for fulfilling `requirement`\n\n        `requirement` must be a ``pkg_resources.Requirement`` instance.\n        If necessary, or if the `force_scan` flag is set, the requirement is\n        searched for in the (online) package index as well as the locally\n        installed packages.  If a distribution matching `requirement` is found,\n        the returned distribution's ``location`` is the value you would have\n        gotten from calling the ``download()`` method with the matching\n        distribution's URL or filename.  If no matching distribution is found,\n        ``None`` is returned.\n\n        If the `source` flag is set, only source distributions and source\n        checkout links will be considered.  Unless the `develop_ok` flag is\n        set, development and system eggs (i.e., those using the ``.egg-info``\n        format) will be ignored.\n        ")), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Searching for %s'), Name(id='requirement', ctx=Load())], keywords=[])), Assign(targets=[Name(id='skipped', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='dist', ctx=Store())], value=Constant(value=None)), FunctionDef(name='find', args=arguments(posonlyargs=[], args=[arg(arg='req'), arg(arg='env')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='env', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='env', ctx=Store())], value=Name(id='self', ctx=Load()))], orelse=[]), For(target=Name(id='dist', ctx=Store()), iter=Subscript(value=Name(id='env', ctx=Load()), slice=Attribute(value=Name(id='req', ctx=Load()), attr='key', ctx=Load()), ctx=Load()), body=[If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='dist', ctx=Load()), attr='precedence', ctx=Load()), ops=[Eq()], comparators=[Name(id='DEVELOP_DIST', ctx=Load())]), UnaryOp(op=Not(), operand=Name(id='develop_ok', ctx=Load()))]), body=[If(test=Compare(left=Name(id='dist', ctx=Load()), ops=[NotIn()], comparators=[Name(id='skipped', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='warn', ctx=Load()), args=[Constant(value='Skipping development or system egg: %s'), Name(id='dist', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='skipped', ctx=Load()), slice=Name(id='dist', ctx=Load()), ctx=Store())], value=Constant(value=1))], orelse=[]), Continue()], orelse=[]), Assign(targets=[Name(id='test', ctx=Store())], value=BoolOp(op=And(), values=[Compare(left=Name(id='dist', ctx=Load()), ops=[In()], comparators=[Name(id='req', ctx=Load())]), BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='dist', ctx=Load()), attr='precedence', ctx=Load()), ops=[LtE()], comparators=[Name(id='SOURCE_DIST', ctx=Load())]), UnaryOp(op=Not(), operand=Name(id='source', ctx=Load()))])])), If(test=Name(id='test', ctx=Load()), body=[Assign(targets=[Name(id='loc', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='download', ctx=Load()), args=[Attribute(value=Name(id='dist', ctx=Load()), attr='location', ctx=Load()), Name(id='tmpdir', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='dist', ctx=Load()), attr='download_location', ctx=Store())], value=Name(id='loc', ctx=Load())), If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Attribute(value=Name(id='dist', ctx=Load()), attr='download_location', ctx=Load())], keywords=[]), body=[Return(value=Name(id='dist', ctx=Load()))], orelse=[])], orelse=[])], orelse=[])], decorator_list=[]), If(test=Name(id='force_scan', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prescan', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='find_packages', ctx=Load()), args=[Name(id='requirement', ctx=Load())], keywords=[])), Assign(targets=[Name(id='dist', ctx=Store())], value=Call(func=Name(id='find', ctx=Load()), args=[Name(id='requirement', ctx=Load())], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='dist', ctx=Load())), Compare(left=Name(id='local_index', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Assign(targets=[Name(id='dist', ctx=Store())], value=Call(func=Name(id='find', ctx=Load()), args=[Name(id='requirement', ctx=Load()), Name(id='local_index', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='dist', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='to_scan', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prescan', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='dist', ctx=Store())], value=Call(func=Name(id='find', ctx=Load()), args=[Name(id='requirement', ctx=Load())], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='dist', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), UnaryOp(op=Not(), operand=Name(id='force_scan', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='find_packages', ctx=Load()), args=[Name(id='requirement', ctx=Load())], keywords=[])), Assign(targets=[Name(id='dist', ctx=Store())], value=Call(func=Name(id='find', ctx=Load()), args=[Name(id='requirement', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='dist', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='warn', ctx=Load()), args=[Constant(value='No local packages or working download links found for %s%s'), BoolOp(op=Or(), values=[BoolOp(op=And(), values=[Name(id='source', ctx=Load()), Constant(value='a source distribution of ')]), Constant(value='')]), Name(id='requirement', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Best match: %s'), Name(id='dist', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='dist', ctx=Load()), attr='clone', ctx=Load()), args=[], keywords=[keyword(arg='location', value=Attribute(value=Name(id='dist', ctx=Load()), attr='download_location', ctx=Load()))]))])], decorator_list=[]), FunctionDef(name='fetch', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='requirement'), arg(arg='tmpdir'), arg(arg='force_scan'), arg(arg='source')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=False)]), body=[Expr(value=Constant(value='Obtain a file suitable for fulfilling `requirement`\n\n        DEPRECATED; use the ``fetch_distribution()`` method now instead.  For\n        backward compatibility, this routine is identical but returns the\n        ``location`` of the downloaded distribution instead of a distribution\n        object.\n        ')), Assign(targets=[Name(id='dist', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_distribution', ctx=Load()), args=[Name(id='requirement', ctx=Load()), Name(id='tmpdir', ctx=Load()), Name(id='force_scan', ctx=Load()), Name(id='source', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='dist', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Attribute(value=Name(id='dist', ctx=Load()), attr='location', ctx=Load()))], orelse=[]), Return(value=Constant(value=None))], decorator_list=[]), FunctionDef(name='gen_setup', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='filename'), arg(arg='fragment'), arg(arg='tmpdir')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='match', ctx=Store())], value=Call(func=Attribute(value=Name(id='EGG_FRAGMENT', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='fragment', ctx=Load())], keywords=[])), Assign(targets=[Name(id='dists', ctx=Store())], value=BoolOp(op=Or(), values=[BoolOp(op=And(), values=[Name(id='match', ctx=Load()), ListComp(elt=Name(id='d', ctx=Load()), generators=[comprehension(target=Name(id='d', ctx=Store()), iter=Call(func=Name(id='interpret_distro_name', ctx=Load()), args=[Name(id='filename', ctx=Load()), Call(func=Attribute(value=Name(id='match', ctx=Load()), attr='group', ctx=Load()), args=[Constant(value=1)], keywords=[]), Constant(value=None)], keywords=[]), ifs=[Attribute(value=Name(id='d', ctx=Load()), attr='version', ctx=Load())], is_async=0)])]), List(elts=[], ctx=Load())])), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='dists', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), body=[Assign(targets=[Name(id='basename', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])), If(test=Compare(left=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='dirname', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[]), ops=[NotEq()], comparators=[Name(id='tmpdir', ctx=Load())]), body=[Assign(targets=[Name(id='dst', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='tmpdir', ctx=Load()), Name(id='basename', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=BoolOp(op=And(), values=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='dst', ctx=Load())], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='samefile', ctx=Load()), args=[Name(id='filename', ctx=Load()), Name(id='dst', ctx=Load())], keywords=[])])), body=[Expr(value=Call(func=Attribute(value=Name(id='shutil', ctx=Load()), attr='copy2', ctx=Load()), args=[Name(id='filename', ctx=Load()), Name(id='dst', ctx=Load())], keywords=[])), Assign(targets=[Name(id='filename', ctx=Store())], value=Name(id='dst', ctx=Load()))], orelse=[])], orelse=[]), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='tmpdir', ctx=Load()), Constant(value='setup.py')], keywords=[]), Constant(value='w')], keywords=[]), optional_vars=Name(id='file', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='file', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value='from setuptools import setup\nsetup(name=%r, version=%r, py_modules=[%r])\n'), op=Mod(), right=Tuple(elts=[Attribute(value=Subscript(value=Name(id='dists', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='project_name', ctx=Load()), Attribute(value=Subscript(value=Name(id='dists', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='version', ctx=Load()), Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='splitext', ctx=Load()), args=[Name(id='basename', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load())], ctx=Load()))], keywords=[]))]), Return(value=Name(id='filename', ctx=Load()))], orelse=[If(test=Name(id='match', ctx=Load()), body=[Raise(exc=Call(func=Name(id='DistutilsError', ctx=Load()), args=[BinOp(left=Constant(value="Can't unambiguously interpret project/version identifier %r; any dashes in the name or version should be escaped using underscores. %r"), op=Mod(), right=Tuple(elts=[Name(id='fragment', ctx=Load()), Name(id='dists', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='DistutilsError', ctx=Load()), args=[Constant(value="Can't process plain .py files without an '#egg=name-version' suffix to enable automatic setup script generation.")], keywords=[]))])])], decorator_list=[]), Assign(targets=[Name(id='dl_blocksize', ctx=Store())], value=Constant(value=8192)), FunctionDef(name='_download_to', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url'), arg(arg='filename')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Downloading %s'), Name(id='url', ctx=Load())], keywords=[])), Assign(targets=[Name(id='fp', ctx=Store())], value=Constant(value=None)), Try(body=[Assign(targets=[Name(id='checker', ctx=Store())], value=Call(func=Attribute(value=Name(id='HashChecker', ctx=Load()), attr='from_url', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), Assign(targets=[Name(id='fp', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='open_url', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='fp', ctx=Load()), Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='error', ctx=Load()), attr='HTTPError', ctx=Load())], keywords=[]), body=[Raise(exc=Call(func=Name(id='DistutilsError', ctx=Load()), args=[BinOp(left=Constant(value="Can't download %s: %s %s"), op=Mod(), right=Tuple(elts=[Name(id='url', ctx=Load()), Attribute(value=Name(id='fp', ctx=Load()), attr='code', ctx=Load()), Attribute(value=Name(id='fp', ctx=Load()), attr='msg', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='headers', ctx=Store())], value=Call(func=Attribute(value=Name(id='fp', ctx=Load()), attr='info', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='blocknum', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='bs', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='dl_blocksize', ctx=Load())), Assign(targets=[Name(id='size', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=1))), If(test=Compare(left=Constant(value='content-length'), ops=[In()], comparators=[Name(id='headers', ctx=Load())]), body=[Assign(targets=[Name(id='sizes', ctx=Store())], value=Call(func=Attribute(value=Name(id='headers', ctx=Load()), attr='get_all', ctx=Load()), args=[Constant(value='Content-Length')], keywords=[])), Assign(targets=[Name(id='size', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Name(id='int', ctx=Load()), Name(id='sizes', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='reporthook', ctx=Load()), args=[Name(id='url', ctx=Load()), Name(id='filename', ctx=Load()), Name(id='blocknum', ctx=Load()), Name(id='bs', ctx=Load()), Name(id='size', ctx=Load())], keywords=[]))], orelse=[]), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='filename', ctx=Load()), Constant(value='wb')], keywords=[]), optional_vars=Name(id='tfp', ctx=Store()))], body=[While(test=Constant(value=True), body=[Assign(targets=[Name(id='block', ctx=Store())], value=Call(func=Attribute(value=Name(id='fp', ctx=Load()), attr='read', ctx=Load()), args=[Name(id='bs', ctx=Load())], keywords=[])), If(test=Name(id='block', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='checker', ctx=Load()), attr='feed', ctx=Load()), args=[Name(id='block', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='tfp', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='block', ctx=Load())], keywords=[])), AugAssign(target=Name(id='blocknum', ctx=Store()), op=Add(), value=Constant(value=1)), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='reporthook', ctx=Load()), args=[Name(id='url', ctx=Load()), Name(id='filename', ctx=Load()), Name(id='blocknum', ctx=Load()), Name(id='bs', ctx=Load()), Name(id='size', ctx=Load())], keywords=[]))], orelse=[Break()])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_hash', ctx=Load()), args=[Name(id='checker', ctx=Load()), Name(id='filename', ctx=Load()), Name(id='tfp', ctx=Load())], keywords=[]))]), Return(value=Name(id='headers', ctx=Load()))], handlers=[], orelse=[], finalbody=[If(test=Name(id='fp', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='fp', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], orelse=[])])], decorator_list=[]), FunctionDef(name='reporthook', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url'), arg(arg='filename'), arg(arg='blocknum'), arg(arg='blksize'), arg(arg='size')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[]), FunctionDef(name='open_url', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url'), arg(arg='warning')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Call(func=Attribute(value=Name(id='url', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='file:')], keywords=[]), body=[Return(value=Call(func=Name(id='local_open', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[]))], orelse=[]), Try(body=[Return(value=Call(func=Name(id='open_with_auth', ctx=Load()), args=[Name(id='url', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='opener', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Tuple(elts=[Name(id='ValueError', ctx=Load()), Attribute(value=Attribute(value=Name(id='http', ctx=Load()), attr='client', ctx=Load()), attr='InvalidURL', ctx=Load())], ctx=Load()), name='v', body=[Assign(targets=[Name(id='msg', ctx=Store())], value=Call(func=Attribute(value=Constant(value=' '), attr='join', ctx=Load()), args=[ListComp(elt=Call(func=Name(id='str', ctx=Load()), args=[Name(id='arg', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='arg', ctx=Store()), iter=Attribute(value=Name(id='v', ctx=Load()), attr='args', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), If(test=Name(id='warning', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='warn', ctx=Load()), args=[Name(id='warning', ctx=Load()), Name(id='msg', ctx=Load())], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='DistutilsError', ctx=Load()), args=[BinOp(left=Constant(value='%s %s'), op=Mod(), right=Tuple(elts=[Name(id='url', ctx=Load()), Name(id='msg', ctx=Load())], ctx=Load()))], keywords=[]), cause=Name(id='v', ctx=Load()))])]), ExceptHandler(type=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='error', ctx=Load()), attr='HTTPError', ctx=Load()), name='v', body=[Return(value=Name(id='v', ctx=Load()))]), ExceptHandler(type=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='error', ctx=Load()), attr='URLError', ctx=Load()), name='v', body=[If(test=Name(id='warning', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='warn', ctx=Load()), args=[Name(id='warning', ctx=Load()), Attribute(value=Name(id='v', ctx=Load()), attr='reason', ctx=Load())], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='DistutilsError', ctx=Load()), args=[BinOp(left=Constant(value='Download error for %s: %s'), op=Mod(), right=Tuple(elts=[Name(id='url', ctx=Load()), Attribute(value=Name(id='v', ctx=Load()), attr='reason', ctx=Load())], ctx=Load()))], keywords=[]), cause=Name(id='v', ctx=Load()))])]), ExceptHandler(type=Attribute(value=Attribute(value=Name(id='http', ctx=Load()), attr='client', ctx=Load()), attr='BadStatusLine', ctx=Load()), name='v', body=[If(test=Name(id='warning', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='warn', ctx=Load()), args=[Name(id='warning', ctx=Load()), Attribute(value=Name(id='v', ctx=Load()), attr='line', ctx=Load())], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='DistutilsError', ctx=Load()), args=[BinOp(left=Constant(value='%s returned a bad status line. The server might be down, %s'), op=Mod(), right=Tuple(elts=[Name(id='url', ctx=Load()), Attribute(value=Name(id='v', ctx=Load()), attr='line', ctx=Load())], ctx=Load()))], keywords=[]), cause=Name(id='v', ctx=Load()))])]), ExceptHandler(type=Tuple(elts=[Attribute(value=Attribute(value=Name(id='http', ctx=Load()), attr='client', ctx=Load()), attr='HTTPException', ctx=Load()), Attribute(value=Name(id='socket', ctx=Load()), attr='error', ctx=Load())], ctx=Load()), name='v', body=[If(test=Name(id='warning', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='warn', ctx=Load()), args=[Name(id='warning', ctx=Load()), Name(id='v', ctx=Load())], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='DistutilsError', ctx=Load()), args=[BinOp(left=Constant(value='Download error for %s: %s'), op=Mod(), right=Tuple(elts=[Name(id='url', ctx=Load()), Name(id='v', ctx=Load())], ctx=Load()))], keywords=[]), cause=Name(id='v', ctx=Load()))])])], orelse=[], finalbody=[])], decorator_list=[]), FunctionDef(name='_download_url', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='scheme'), arg(arg='url'), arg(arg='tmpdir')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='name', ctx=Store()), Name(id='fragment', ctx=Store())], ctx=Store())], value=Call(func=Name(id='egg_info_for_url', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), If(test=Name(id='name', ctx=Load()), body=[While(test=Compare(left=Constant(value='..'), ops=[In()], comparators=[Name(id='name', ctx=Load())]), body=[Assign(targets=[Name(id='name', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='name', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='..'), Constant(value='.')], keywords=[]), attr='replace', ctx=Load()), args=[Constant(value='\\'), Constant(value='_')], keywords=[]))], orelse=[])], orelse=[Assign(targets=[Name(id='name', ctx=Store())], value=Constant(value='__downloaded__'))]), If(test=Call(func=Attribute(value=Name(id='name', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.egg.zip')], keywords=[]), body=[Assign(targets=[Name(id='name', ctx=Store())], value=Subscript(value=Name(id='name', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=4))), ctx=Load()))], orelse=[]), Assign(targets=[Name(id='filename', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='tmpdir', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='scheme', ctx=Load()), ops=[Eq()], comparators=[Constant(value='svn')]), Call(func=Attribute(value=Name(id='scheme', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='svn+')], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_download_svn', ctx=Load()), args=[Name(id='url', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[]))], orelse=[If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='scheme', ctx=Load()), ops=[Eq()], comparators=[Constant(value='git')]), Call(func=Attribute(value=Name(id='scheme', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='git+')], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_download_git', ctx=Load()), args=[Name(id='url', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Attribute(value=Name(id='scheme', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='hg+')], keywords=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_download_hg', ctx=Load()), args=[Name(id='url', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='scheme', ctx=Load()), ops=[Eq()], comparators=[Constant(value='file')]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='request', ctx=Load()), attr='url2pathname', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urlparse', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[]), slice=Constant(value=2), ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='url_ok', ctx=Load()), args=[Name(id='url', ctx=Load()), Constant(value=True)], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_attempt_download', ctx=Load()), args=[Name(id='url', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[]))])])])])], decorator_list=[]), FunctionDef(name='scan_url', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='process_url', ctx=Load()), args=[Name(id='url', ctx=Load()), Constant(value=True)], keywords=[]))], decorator_list=[]), FunctionDef(name='_attempt_download', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url'), arg(arg='filename')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='headers', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_download_to', ctx=Load()), args=[Name(id='url', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[])), If(test=Compare(left=Constant(value='html'), ops=[In()], comparators=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='headers', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='content-type'), Constant(value='')], keywords=[]), attr='lower', ctx=Load()), args=[], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_invalid_download_html', ctx=Load()), args=[Name(id='url', ctx=Load()), Name(id='headers', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[]))], orelse=[Return(value=Name(id='filename', ctx=Load()))])], decorator_list=[]), FunctionDef(name='_invalid_download_html', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url'), arg(arg='headers'), arg(arg='filename')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='unlink', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])), Raise(exc=Call(func=Name(id='DistutilsError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Unexpected HTML page found at '), FormattedValue(value=Name(id='url', ctx=Load()), conversion=-1)])], keywords=[]))], decorator_list=[]), FunctionDef(name='_download_svn', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url'), arg(arg='_filename')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Call(func=Name(id='DistutilsError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Invalid config, SVN download is not supported: '), FormattedValue(value=Name(id='url', ctx=Load()), conversion=-1)])], keywords=[]))], decorator_list=[]), FunctionDef(name='_vcs_split_rev_from_url', args=arguments(posonlyargs=[], args=[arg(arg='url'), arg(arg='pop_prefix')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Assign(targets=[Tuple(elts=[Name(id='scheme', ctx=Store()), Name(id='netloc', ctx=Store()), Name(id='path', ctx=Store()), Name(id='query', ctx=Store()), Name(id='frag', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urlsplit', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), Assign(targets=[Name(id='scheme', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='scheme', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='+'), Constant(value=1)], keywords=[]), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())), Assign(targets=[Name(id='path', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='path', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='#'), Constant(value=1)], keywords=[]), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='rev', ctx=Store())], value=Constant(value=None)), If(test=Compare(left=Constant(value='@'), ops=[In()], comparators=[Name(id='path', ctx=Load())]), body=[Assign(targets=[Tuple(elts=[Name(id='path', ctx=Store()), Name(id='rev', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='path', ctx=Load()), attr='rsplit', ctx=Load()), args=[Constant(value='@'), Constant(value=1)], keywords=[]))], orelse=[]), Assign(targets=[Name(id='url', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urlunsplit', ctx=Load()), args=[Tuple(elts=[Name(id='scheme', ctx=Load()), Name(id='netloc', ctx=Load()), Name(id='path', ctx=Load()), Name(id='query', ctx=Load()), Constant(value='')], ctx=Load())], keywords=[])), Return(value=Tuple(elts=[Name(id='url', ctx=Load()), Name(id='rev', ctx=Load())], ctx=Load()))], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='_download_git', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url'), arg(arg='filename')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='filename', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='filename', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='#'), Constant(value=1)], keywords=[]), slice=Constant(value=0), ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='url', ctx=Store()), Name(id='rev', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_vcs_split_rev_from_url', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[keyword(arg='pop_prefix', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Doing git clone from %s to %s'), Name(id='url', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='system', ctx=Load()), args=[BinOp(left=Constant(value='git clone --quiet %s %s'), op=Mod(), right=Tuple(elts=[Name(id='url', ctx=Load()), Name(id='filename', ctx=Load())], ctx=Load()))], keywords=[])), If(test=Compare(left=Name(id='rev', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Checking out %s'), Name(id='rev', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='system', ctx=Load()), args=[BinOp(left=Constant(value='git -C %s checkout --quiet %s'), op=Mod(), right=Tuple(elts=[Name(id='filename', ctx=Load()), Name(id='rev', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), Return(value=Name(id='filename', ctx=Load()))], decorator_list=[]), FunctionDef(name='_download_hg', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url'), arg(arg='filename')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='filename', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='filename', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='#'), Constant(value=1)], keywords=[]), slice=Constant(value=0), ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='url', ctx=Store()), Name(id='rev', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_vcs_split_rev_from_url', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[keyword(arg='pop_prefix', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Doing hg clone from %s to %s'), Name(id='url', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='system', ctx=Load()), args=[BinOp(left=Constant(value='hg clone --quiet %s %s'), op=Mod(), right=Tuple(elts=[Name(id='url', ctx=Load()), Name(id='filename', ctx=Load())], ctx=Load()))], keywords=[])), If(test=Compare(left=Name(id='rev', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Updating to %s'), Name(id='rev', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='system', ctx=Load()), args=[BinOp(left=Constant(value='hg --cwd %s up -C -r %s -q'), op=Mod(), right=Tuple(elts=[Name(id='filename', ctx=Load()), Name(id='rev', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), Return(value=Name(id='filename', ctx=Load()))], decorator_list=[]), FunctionDef(name='debug', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='msg')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='debug', ctx=Load()), args=[Name(id='msg', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='info', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='msg')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Name(id='msg', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='warn', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='msg')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='warn', ctx=Load()), args=[Name(id='msg', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='entity_sub', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='&(#(\\d+|x[\\da-fA-F]+)|[\\w.:-]+);?')], keywords=[]), attr='sub', ctx=Load())), FunctionDef(name='decode_entity', args=arguments(posonlyargs=[], args=[arg(arg='match')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='what', ctx=Store())], value=Call(func=Attribute(value=Name(id='match', ctx=Load()), attr='group', ctx=Load()), args=[Constant(value=0)], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='html', ctx=Load()), attr='unescape', ctx=Load()), args=[Name(id='what', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='htmldecode', args=arguments(posonlyargs=[], args=[arg(arg='text')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Decode HTML entities in the given text.\n\n    >>> htmldecode(\n    ...     \'https://../package_name-0.1.2.tar.gz\'\n    ...     \'?tokena=A&amp;tokenb=B">package_name-0.1.2.tar.gz\')\n    \'https://../package_name-0.1.2.tar.gz?tokena=A&tokenb=B">package_name-0.1.2.tar.gz\'\n    ')), Return(value=Call(func=Name(id='entity_sub', ctx=Load()), args=[Name(id='decode_entity', ctx=Load()), Name(id='text', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='socket_timeout', args=arguments(posonlyargs=[], args=[arg(arg='timeout')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=15)]), body=[FunctionDef(name='_socket_timeout', args=arguments(posonlyargs=[], args=[arg(arg='func')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='_socket_timeout', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Name(id='old_timeout', ctx=Store())], value=Call(func=Attribute(value=Name(id='socket', ctx=Load()), attr='getdefaulttimeout', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='socket', ctx=Load()), attr='setdefaulttimeout', ctx=Load()), args=[Name(id='timeout', ctx=Load())], keywords=[])), Try(body=[Return(value=Call(func=Name(id='func', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='socket', ctx=Load()), attr='setdefaulttimeout', ctx=Load()), args=[Name(id='old_timeout', ctx=Load())], keywords=[]))])], decorator_list=[]), Return(value=Name(id='_socket_timeout', ctx=Load()))], decorator_list=[]), Return(value=Name(id='_socket_timeout', ctx=Load()))], decorator_list=[]), FunctionDef(name='_encode_auth', args=arguments(posonlyargs=[], args=[arg(arg='auth')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n    Encode auth from a URL suitable for an HTTP header.\n    >>> str(_encode_auth('username%3Apassword'))\n    'dXNlcm5hbWU6cGFzc3dvcmQ='\n\n    Long auth strings should not cause a newline to be inserted.\n    >>> long_auth = 'username:' + 'password'*10\n    >>> chr(10) in str(_encode_auth(long_auth))\n    False\n    ")), Assign(targets=[Name(id='auth_s', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='unquote', ctx=Load()), args=[Name(id='auth', ctx=Load())], keywords=[])), Assign(targets=[Name(id='auth_bytes', ctx=Store())], value=Call(func=Attribute(value=Name(id='auth_s', ctx=Load()), attr='encode', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='encoded_bytes', ctx=Store())], value=Call(func=Attribute(value=Name(id='base64', ctx=Load()), attr='b64encode', ctx=Load()), args=[Name(id='auth_bytes', ctx=Load())], keywords=[])), Assign(targets=[Name(id='encoded', ctx=Store())], value=Call(func=Attribute(value=Name(id='encoded_bytes', ctx=Load()), attr='decode', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='encoded', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='\n'), Constant(value='')], keywords=[]))], decorator_list=[]), ClassDef(name='Credential', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    A username/password pair. Use like a namedtuple.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='username'), arg(arg='password')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='username', ctx=Store())], value=Name(id='username', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='password', ctx=Store())], value=Name(id='password', ctx=Load()))], decorator_list=[]), FunctionDef(name='__iter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Yield(value=Attribute(value=Name(id='self', ctx=Load()), attr='username', ctx=Load()))), Expr(value=Yield(value=Attribute(value=Name(id='self', ctx=Load()), attr='password', ctx=Load())))], decorator_list=[]), FunctionDef(name='__str__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BinOp(left=Constant(value='%(username)s:%(password)s'), op=Mod(), right=Call(func=Name(id='vars', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])))], decorator_list=[])], decorator_list=[]), ClassDef(name='PyPIConfig', bases=[Attribute(value=Name(id='configparser', ctx=Load()), attr='RawConfigParser', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Load from ~/.pypirc\n        ')), Assign(targets=[Name(id='defaults', ctx=Store())], value=Call(func=Attribute(value=Name(id='dict', ctx=Load()), attr='fromkeys', ctx=Load()), args=[List(elts=[Constant(value='username'), Constant(value='password'), Constant(value='repository')], ctx=Load()), Constant(value='')], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='defaults', ctx=Load())], keywords=[])), Assign(targets=[Name(id='rc', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='expanduser', ctx=Load()), args=[Constant(value='~')], keywords=[]), Constant(value='.pypirc')], keywords=[])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='rc', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='read', ctx=Load()), args=[Name(id='rc', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='creds_by_repository', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='sections_with_repositories', ctx=Store())], value=ListComp(elt=Name(id='section', ctx=Load()), generators=[comprehension(target=Name(id='section', ctx=Store()), iter=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='sections', ctx=Load()), args=[], keywords=[]), ifs=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='section', ctx=Load()), Constant(value='repository')], keywords=[]), attr='strip', ctx=Load()), args=[], keywords=[])], is_async=0)])), Return(value=Call(func=Name(id='dict', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_get_repo_cred', ctx=Load()), Name(id='sections_with_repositories', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='_get_repo_cred', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='section')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='repo', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='section', ctx=Load()), Constant(value='repository')], keywords=[]), attr='strip', ctx=Load()), args=[], keywords=[])), Return(value=Tuple(elts=[Name(id='repo', ctx=Load()), Call(func=Name(id='Credential', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='section', ctx=Load()), Constant(value='username')], keywords=[]), attr='strip', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='section', ctx=Load()), Constant(value='password')], keywords=[]), attr='strip', ctx=Load()), args=[], keywords=[])], keywords=[])], ctx=Load()))], decorator_list=[]), FunctionDef(name='find_credential', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        If the URL indicated appears to be a repository defined in this\n        config, return the credential for that repository.\n        ')), For(target=Tuple(elts=[Name(id='repository', ctx=Store()), Name(id='cred', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='creds_by_repository', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Call(func=Attribute(value=Name(id='url', ctx=Load()), attr='startswith', ctx=Load()), args=[Name(id='repository', ctx=Load())], keywords=[]), body=[Return(value=Name(id='cred', ctx=Load()))], orelse=[])], orelse=[])], decorator_list=[])], decorator_list=[]), FunctionDef(name='open_with_auth', args=arguments(posonlyargs=[], args=[arg(arg='url'), arg(arg='opener')], kwonlyargs=[], kw_defaults=[], defaults=[Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='request', ctx=Load()), attr='urlopen', ctx=Load())]), body=[Expr(value=Constant(value='Open a urllib2 request, handling HTTP authentication')), Assign(targets=[Name(id='parsed', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urlparse', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='scheme', ctx=Store()), Name(id='netloc', ctx=Store()), Name(id='path', ctx=Store()), Name(id='params', ctx=Store()), Name(id='query', ctx=Store()), Name(id='frag', ctx=Store())], ctx=Store())], value=Name(id='parsed', ctx=Load())), If(test=Call(func=Attribute(value=Name(id='netloc', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value=':')], keywords=[]), body=[Raise(exc=Call(func=Attribute(value=Attribute(value=Name(id='http', ctx=Load()), attr='client', ctx=Load()), attr='InvalidURL', ctx=Load()), args=[Constant(value="nonnumeric port: ''")], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='scheme', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='http'), Constant(value='https')], ctx=Load())]), body=[Assign(targets=[Tuple(elts=[Name(id='auth', ctx=Store()), Name(id='address', ctx=Store())], ctx=Store())], value=Call(func=Name(id='_splituser', ctx=Load()), args=[Name(id='netloc', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='auth', ctx=Store())], value=Constant(value=None))]), If(test=UnaryOp(op=Not(), operand=Name(id='auth', ctx=Load())), body=[Assign(targets=[Name(id='cred', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='PyPIConfig', ctx=Load()), args=[], keywords=[]), attr='find_credential', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), If(test=Name(id='cred', ctx=Load()), body=[Assign(targets=[Name(id='auth', ctx=Store())], value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='cred', ctx=Load())], keywords=[])), Assign(targets=[Name(id='info', ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='cred', ctx=Load()), attr='username', ctx=Load()), Name(id='url', ctx=Load())], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='Authenticating as %s for %s (from .pypirc)'), Starred(value=Name(id='info', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), If(test=Name(id='auth', ctx=Load()), body=[Assign(targets=[Name(id='auth', ctx=Store())], value=BinOp(left=Constant(value='Basic '), op=Add(), right=Call(func=Name(id='_encode_auth', ctx=Load()), args=[Name(id='auth', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='parts', ctx=Store())], value=Tuple(elts=[Name(id='scheme', ctx=Load()), Name(id='address', ctx=Load()), Name(id='path', ctx=Load()), Name(id='params', ctx=Load()), Name(id='query', ctx=Load()), Name(id='frag', ctx=Load())], ctx=Load())), Assign(targets=[Name(id='new_url', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urlunparse', ctx=Load()), args=[Name(id='parts', ctx=Load())], keywords=[])), Assign(targets=[Name(id='request', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='request', ctx=Load()), attr='Request', ctx=Load()), args=[Name(id='new_url', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='request', ctx=Load()), attr='add_header', ctx=Load()), args=[Constant(value='Authorization'), Name(id='auth', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='request', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='request', ctx=Load()), attr='Request', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='request', ctx=Load()), attr='add_header', ctx=Load()), args=[Constant(value='User-Agent'), Name(id='user_agent', ctx=Load())], keywords=[])), Assign(targets=[Name(id='fp', ctx=Store())], value=Call(func=Name(id='opener', ctx=Load()), args=[Name(id='request', ctx=Load())], keywords=[])), If(test=Name(id='auth', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='s2', ctx=Store()), Name(id='h2', ctx=Store()), Name(id='path2', ctx=Store()), Name(id='param2', ctx=Store()), Name(id='query2', ctx=Store()), Name(id='frag2', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urlparse', ctx=Load()), args=[Attribute(value=Name(id='fp', ctx=Load()), attr='url', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='s2', ctx=Load()), ops=[Eq()], comparators=[Name(id='scheme', ctx=Load())]), Compare(left=Name(id='h2', ctx=Load()), ops=[Eq()], comparators=[Name(id='address', ctx=Load())])]), body=[Assign(targets=[Name(id='parts', ctx=Store())], value=Tuple(elts=[Name(id='s2', ctx=Load()), Name(id='netloc', ctx=Load()), Name(id='path2', ctx=Load()), Name(id='param2', ctx=Load()), Name(id='query2', ctx=Load()), Name(id='frag2', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Name(id='fp', ctx=Load()), attr='url', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urlunparse', ctx=Load()), args=[Name(id='parts', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Return(value=Name(id='fp', ctx=Load()))], decorator_list=[]), FunctionDef(name='_splituser', args=arguments(posonlyargs=[], args=[arg(arg='host')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="splituser('user[:passwd]@host[:port]')\n    --> 'user[:passwd]', 'host[:port]'.")), Assign(targets=[Tuple(elts=[Name(id='user', ctx=Store()), Name(id='delim', ctx=Store()), Name(id='host', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='host', ctx=Load()), attr='rpartition', ctx=Load()), args=[Constant(value='@')], keywords=[])), Return(value=Tuple(elts=[IfExp(test=Name(id='delim', ctx=Load()), body=Name(id='user', ctx=Load()), orelse=Constant(value=None)), Name(id='host', ctx=Load())], ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='open_with_auth', ctx=Store())], value=Call(func=Call(func=Name(id='socket_timeout', ctx=Load()), args=[Name(id='_SOCKET_TIMEOUT', ctx=Load())], keywords=[]), args=[Name(id='open_with_auth', ctx=Load())], keywords=[])), FunctionDef(name='fix_sf_url', args=arguments(posonlyargs=[], args=[arg(arg='url')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Name(id='url', ctx=Load()))], decorator_list=[]), FunctionDef(name='local_open', args=arguments(posonlyargs=[], args=[arg(arg='url')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Read a local path, with special support for directories')), Assign(targets=[Tuple(elts=[Name(id='scheme', ctx=Store()), Name(id='server', ctx=Store()), Name(id='path', ctx=Store()), Name(id='param', ctx=Store()), Name(id='query', ctx=Store()), Name(id='frag', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='parse', ctx=Load()), attr='urlparse', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), Assign(targets=[Name(id='filename', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='request', ctx=Load()), attr='url2pathname', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isfile', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='request', ctx=Load()), attr='urlopen', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Name(id='path', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='/')], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])]), body=[Assign(targets=[Name(id='files', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='f', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='filepath', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='filename', ctx=Load()), Name(id='f', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='f', ctx=Load()), ops=[Eq()], comparators=[Constant(value='index.html')]), body=[With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='filepath', ctx=Load()), Constant(value='r')], keywords=[]), optional_vars=Name(id='fp', ctx=Store()))], body=[Assign(targets=[Name(id='body', ctx=Store())], value=Call(func=Attribute(value=Name(id='fp', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]))]), Break()], orelse=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[Name(id='filepath', ctx=Load())], keywords=[]), body=[AugAssign(target=Name(id='f', ctx=Store()), op=Add(), value=Constant(value='/'))], orelse=[])]), Expr(value=Call(func=Attribute(value=Name(id='files', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='<a href="{name}">{name}</a>'), attr='format', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Name(id='f', ctx=Load()))])], keywords=[]))], orelse=[Assign(targets=[Name(id='tmpl', ctx=Store())], value=Constant(value='<html><head><title>{url}</title></head><body>{files}</body></html>')), Assign(targets=[Name(id='body', ctx=Store())], value=Call(func=Attribute(value=Name(id='tmpl', ctx=Load()), attr='format', ctx=Load()), args=[], keywords=[keyword(arg='url', value=Name(id='url', ctx=Load())), keyword(arg='files', value=Call(func=Attribute(value=Constant(value='\n'), attr='join', ctx=Load()), args=[Name(id='files', ctx=Load())], keywords=[]))]))]), Assign(targets=[Tuple(elts=[Name(id='status', ctx=Store()), Name(id='message', ctx=Store())], ctx=Store())], value=Tuple(elts=[Constant(value=200), Constant(value='OK')], ctx=Load()))], orelse=[Assign(targets=[Tuple(elts=[Name(id='status', ctx=Store()), Name(id='message', ctx=Store()), Name(id='body', ctx=Store())], ctx=Store())], value=Tuple(elts=[Constant(value=404), Constant(value='Path not found'), Constant(value='Not found')], ctx=Load()))])]), Assign(targets=[Name(id='headers', ctx=Store())], value=Dict(keys=[Constant(value='content-type')], values=[Constant(value='text/html')])), Assign(targets=[Name(id='body_stream', ctx=Store())], value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='StringIO', ctx=Load()), args=[Name(id='body', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='urllib', ctx=Load()), attr='error', ctx=Load()), attr='HTTPError', ctx=Load()), args=[Name(id='url', ctx=Load()), Name(id='status', ctx=Load()), Name(id='message', ctx=Load()), Name(id='headers', ctx=Load()), Name(id='body_stream', ctx=Load())], keywords=[]))], decorator_list=[])], type_ignores=[])