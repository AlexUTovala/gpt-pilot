Module(body=[Expr(value=Constant(value="distutils.command.build\n\nImplements the Distutils 'build' command.")), Import(names=[alias(name='sys')]), Import(names=[alias(name='os')]), ImportFrom(module='core', names=[alias(name='Command')], level=2), ImportFrom(module='errors', names=[alias(name='DistutilsOptionError')], level=2), ImportFrom(module='util', names=[alias(name='get_platform')], level=2), FunctionDef(name='show_compilers', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[ImportFrom(module='ccompiler', names=[alias(name='show_compilers')], level=2), Expr(value=Call(func=Name(id='show_compilers', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), ClassDef(name='build', bases=[Name(id='Command', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='description', ctx=Store())], value=Constant(value='build everything needed to install')), Assign(targets=[Name(id='user_options', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='build-base='), Constant(value='b'), Constant(value='base directory for build library')], ctx=Load()), Tuple(elts=[Constant(value='build-purelib='), Constant(value=None), Constant(value='build directory for platform-neutral distributions')], ctx=Load()), Tuple(elts=[Constant(value='build-platlib='), Constant(value=None), Constant(value='build directory for platform-specific distributions')], ctx=Load()), Tuple(elts=[Constant(value='build-lib='), Constant(value=None), BinOp(left=Constant(value='build directory for all distribution (defaults to either '), op=Add(), right=Constant(value='build-purelib or build-platlib'))], ctx=Load()), Tuple(elts=[Constant(value='build-scripts='), Constant(value=None), Constant(value='build directory for scripts')], ctx=Load()), Tuple(elts=[Constant(value='build-temp='), Constant(value='t'), Constant(value='temporary build directory')], ctx=Load()), Tuple(elts=[Constant(value='plat-name='), Constant(value='p'), BinOp(left=Constant(value='platform name to build for, if supported (default: %s)'), op=Mod(), right=Call(func=Name(id='get_platform', ctx=Load()), args=[], keywords=[]))], ctx=Load()), Tuple(elts=[Constant(value='compiler='), Constant(value='c'), Constant(value='specify the compiler type')], ctx=Load()), Tuple(elts=[Constant(value='parallel='), Constant(value='j'), Constant(value='number of parallel build jobs')], ctx=Load()), Tuple(elts=[Constant(value='debug'), Constant(value='g'), Constant(value='compile extensions and libraries with debugging information')], ctx=Load()), Tuple(elts=[Constant(value='force'), Constant(value='f'), Constant(value='forcibly build everything (ignore file timestamps)')], ctx=Load()), Tuple(elts=[Constant(value='executable='), Constant(value='e'), Constant(value='specify final destination interpreter path (build.py)')], ctx=Load())], ctx=Load())), Assign(targets=[Name(id='boolean_options', ctx=Store())], value=List(elts=[Constant(value='debug'), Constant(value='force')], ctx=Load())), Assign(targets=[Name(id='help_options', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='help-compiler'), Constant(value=None), Constant(value='list available compilers'), Name(id='show_compilers', ctx=Load())], ctx=Load())], ctx=Load())), FunctionDef(name='initialize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_base', ctx=Store())], value=Constant(value='build')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_purelib', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_platlib', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_lib', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_temp', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_scripts', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='compiler', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='plat_name', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='debug', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='force', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='executable', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='parallel', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='finalize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='plat_name', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='plat_name', ctx=Store())], value=Call(func=Name(id='get_platform', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='os', ctx=Load()), attr='name', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='nt')]), body=[Raise(exc=Call(func=Name(id='DistutilsOptionError', ctx=Load()), args=[Constant(value="--plat-name only supported on Windows (try using './configure --help' on your platform)")], keywords=[]))], orelse=[])]), Assign(targets=[Name(id='plat_specifier', ctx=Store())], value=Call(func=Attribute(value=Constant(value='.{}-{}'), attr='format', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='plat_name', ctx=Load()), Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='implementation', ctx=Load()), attr='cache_tag', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='sys', ctx=Load()), Constant(value='gettotalrefcount')], keywords=[]), body=[AugAssign(target=Name(id='plat_specifier', ctx=Store()), op=Add(), value=Constant(value='-pydebug'))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='build_purelib', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_purelib', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='build_base', ctx=Load()), Constant(value='lib')], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='build_platlib', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_platlib', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='build_base', ctx=Load()), BinOp(left=Constant(value='lib'), op=Add(), right=Name(id='plat_specifier', ctx=Load()))], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='build_lib', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='has_ext_modules', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_lib', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='build_platlib', ctx=Load()))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_lib', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='build_purelib', ctx=Load()))])], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='build_temp', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_temp', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='build_base', ctx=Load()), BinOp(left=Constant(value='temp'), op=Add(), right=Name(id='plat_specifier', ctx=Load()))], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='build_scripts', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_scripts', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='build_base', ctx=Load()), BinOp(left=Constant(value='scripts-%d.%d'), op=Mod(), right=Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), slice=Slice(upper=Constant(value=2)), ctx=Load()))], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='executable', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Attribute(value=Name(id='sys', ctx=Load()), attr='executable', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='executable', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normpath', ctx=Load()), args=[Attribute(value=Name(id='sys', ctx=Load()), attr='executable', ctx=Load())], keywords=[]))], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='parallel', ctx=Load()), Name(id='str', ctx=Load())], keywords=[]), body=[Try(body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='parallel', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='parallel', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ValueError', ctx=Load()), body=[Raise(exc=Call(func=Name(id='DistutilsOptionError', ctx=Load()), args=[Constant(value='parallel should be an integer')], keywords=[]))])], orelse=[], finalbody=[])], orelse=[])], decorator_list=[]), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='cmd_name', ctx=Store()), iter=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_sub_commands', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_command', ctx=Load()), args=[Name(id='cmd_name', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='has_pure_modules', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='has_pure_modules', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='has_c_libraries', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='has_c_libraries', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='has_ext_modules', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='has_ext_modules', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='has_scripts', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='has_scripts', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='sub_commands', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='build_py'), Name(id='has_pure_modules', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='build_clib'), Name(id='has_c_libraries', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='build_ext'), Name(id='has_ext_modules', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='build_scripts'), Name(id='has_scripts', ctx=Load())], ctx=Load())], ctx=Load()))], decorator_list=[])], type_ignores=[])