Module(body=[Expr(value=Constant(value="distutils.command.build_scripts\n\nImplements the Distutils 'build_scripts' command.")), Import(names=[alias(name='os')]), Import(names=[alias(name='re')]), ImportFrom(module='stat', names=[alias(name='ST_MODE')], level=0), ImportFrom(module='distutils', names=[alias(name='sysconfig')], level=0), ImportFrom(module='core', names=[alias(name='Command')], level=2), ImportFrom(module='dep_util', names=[alias(name='newer')], level=2), ImportFrom(module='util', names=[alias(name='convert_path')], level=2), ImportFrom(module='distutils._log', names=[alias(name='log')], level=0), Import(names=[alias(name='tokenize')]), Assign(targets=[Name(id='shebang_pattern', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='^#!.*python[0-9.]*([ \t].*)?$')], keywords=[])), Expr(value=Constant(value='\nPattern matching a Python interpreter indicated in first line of a script.\n')), Assign(targets=[Name(id='first_line_re', ctx=Store())], value=Name(id='shebang_pattern', ctx=Load())), ClassDef(name='build_scripts', bases=[Name(id='Command', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='description', ctx=Store())], value=Constant(value='"build" scripts (copy and fixup #! line)')), Assign(targets=[Name(id='user_options', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='build-dir='), Constant(value='d'), Constant(value='directory to "build" (copy) to')], ctx=Load()), Tuple(elts=[Constant(value='force'), Constant(value='f'), Constant(value='forcibly build everything (ignore file timestamps')], ctx=Load()), Tuple(elts=[Constant(value='executable='), Constant(value='e'), Constant(value='specify final destination interpreter path')], ctx=Load())], ctx=Load())), Assign(targets=[Name(id='boolean_options', ctx=Store())], value=List(elts=[Constant(value='force')], ctx=Load())), FunctionDef(name='initialize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_dir', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='scripts', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='force', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='executable', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='finalize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='set_undefined_options', ctx=Load()), args=[Constant(value='build'), Tuple(elts=[Constant(value='build_scripts'), Constant(value='build_dir')], ctx=Load()), Tuple(elts=[Constant(value='force'), Constant(value='force')], ctx=Load()), Tuple(elts=[Constant(value='executable'), Constant(value='executable')], ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='scripts', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='scripts', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_source_files', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='scripts', ctx=Load()))], decorator_list=[]), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='scripts', ctx=Load())), body=[Return()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='copy_scripts', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='copy_scripts', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Copy each script listed in ``self.scripts``.\n\n        If a script is marked as a Python script (first line matches\n        \'shebang_pattern\', i.e. starts with ``#!`` and contains\n        "python"), then adjust in the copy the first line to refer to\n        the current Python interpreter.\n        ')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='mkpath', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='build_dir', ctx=Load())], keywords=[])), Assign(targets=[Name(id='outfiles', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='updated_files', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='script', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='scripts', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_copy_script', ctx=Load()), args=[Name(id='script', ctx=Load()), Name(id='outfiles', ctx=Load()), Name(id='updated_files', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_change_modes', ctx=Load()), args=[Name(id='outfiles', ctx=Load())], keywords=[])), Return(value=Tuple(elts=[Name(id='outfiles', ctx=Load()), Name(id='updated_files', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='_copy_script', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='script'), arg(arg='outfiles'), arg(arg='updated_files')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='shebang_match', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='script', ctx=Store())], value=Call(func=Name(id='convert_path', ctx=Load()), args=[Name(id='script', ctx=Load())], keywords=[])), Assign(targets=[Name(id='outfile', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='build_dir', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Name(id='script', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='outfiles', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='outfile', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='force', ctx=Load())), UnaryOp(op=Not(), operand=Call(func=Name(id='newer', ctx=Load()), args=[Name(id='script', ctx=Load()), Name(id='outfile', ctx=Load())], keywords=[]))]), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='not copying %s (up-to-date)'), Name(id='script', ctx=Load())], keywords=[])), Return()], orelse=[]), Try(body=[Assign(targets=[Name(id='f', ctx=Store())], value=Call(func=Attribute(value=Name(id='tokenize', ctx=Load()), attr='open', ctx=Load()), args=[Name(id='script', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='OSError', ctx=Load()), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load())), body=[Raise()], orelse=[]), Assign(targets=[Name(id='f', ctx=Store())], value=Constant(value=None))])], orelse=[Assign(targets=[Name(id='first_line', ctx=Store())], value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='readline', ctx=Load()), args=[], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='first_line', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='warn', ctx=Load()), args=[BinOp(left=Constant(value='%s is an empty file (skipping)'), op=Mod(), right=Name(id='script', ctx=Load()))], keywords=[])), Return()], orelse=[]), Assign(targets=[Name(id='shebang_match', ctx=Store())], value=Call(func=Attribute(value=Name(id='shebang_pattern', ctx=Load()), attr='match', ctx=Load()), args=[Name(id='first_line', ctx=Load())], keywords=[]))], finalbody=[]), Expr(value=Call(func=Attribute(value=Name(id='updated_files', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='outfile', ctx=Load())], keywords=[])), If(test=Name(id='shebang_match', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='copying and adjusting %s -> %s'), Name(id='script', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='build_dir', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load())), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='sysconfig', ctx=Load()), attr='python_build', ctx=Load())), body=[Assign(targets=[Name(id='executable', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='executable', ctx=Load()))], orelse=[Assign(targets=[Name(id='executable', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='sysconfig', ctx=Load()), attr='get_config_var', ctx=Load()), args=[Constant(value='BINDIR')], keywords=[]), BinOp(left=Constant(value='python%s%s'), op=Mod(), right=Tuple(elts=[Call(func=Attribute(value=Name(id='sysconfig', ctx=Load()), attr='get_config_var', ctx=Load()), args=[Constant(value='VERSION')], keywords=[]), Call(func=Attribute(value=Name(id='sysconfig', ctx=Load()), attr='get_config_var', ctx=Load()), args=[Constant(value='EXE')], keywords=[])], ctx=Load()))], keywords=[]))]), Assign(targets=[Name(id='post_interp', ctx=Store())], value=BoolOp(op=Or(), values=[Call(func=Attribute(value=Name(id='shebang_match', ctx=Load()), attr='group', ctx=Load()), args=[Constant(value=1)], keywords=[]), Constant(value='')])), Assign(targets=[Name(id='shebang', ctx=Store())], value=BinOp(left=BinOp(left=BinOp(left=Constant(value='#!'), op=Add(), right=Name(id='executable', ctx=Load())), op=Add(), right=Name(id='post_interp', ctx=Load())), op=Add(), right=Constant(value='\n'))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_validate_shebang', ctx=Load()), args=[Name(id='shebang', ctx=Load()), Attribute(value=Name(id='f', ctx=Load()), attr='encoding', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='outfile', ctx=Load()), Constant(value='w')], keywords=[keyword(arg='encoding', value=Attribute(value=Name(id='f', ctx=Load()), attr='encoding', ctx=Load()))]), optional_vars=Name(id='outf', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='outf', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='shebang', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='outf', ctx=Load()), attr='writelines', ctx=Load()), args=[Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='readlines', ctx=Load()), args=[], keywords=[])], keywords=[]))])], orelse=[]), If(test=Name(id='f', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], orelse=[])], orelse=[If(test=Name(id='f', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='copy_file', ctx=Load()), args=[Name(id='script', ctx=Load()), Name(id='outfile', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='_change_modes', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='outfiles')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='os', ctx=Load()), attr='name', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='posix')]), body=[Return()], orelse=[]), For(target=Name(id='file', ctx=Store()), iter=Name(id='outfiles', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_change_mode', ctx=Load()), args=[Name(id='file', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='_change_mode', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='file')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='changing mode of %s'), Name(id='file', ctx=Load())], keywords=[])), Return()], orelse=[]), Assign(targets=[Name(id='oldmode', ctx=Store())], value=BinOp(left=Subscript(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='stat', ctx=Load()), args=[Name(id='file', ctx=Load())], keywords=[]), slice=Name(id='ST_MODE', ctx=Load()), ctx=Load()), op=BitAnd(), right=Constant(value=4095))), Assign(targets=[Name(id='newmode', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='oldmode', ctx=Load()), op=BitOr(), right=Constant(value=365)), op=BitAnd(), right=Constant(value=4095))), If(test=Compare(left=Name(id='newmode', ctx=Load()), ops=[NotEq()], comparators=[Name(id='oldmode', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='changing mode of %s from %o to %o'), Name(id='file', ctx=Load()), Name(id='oldmode', ctx=Load()), Name(id='newmode', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='chmod', ctx=Load()), args=[Name(id='file', ctx=Load()), Name(id='newmode', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='_validate_shebang', args=arguments(posonlyargs=[], args=[arg(arg='shebang'), arg(arg='encoding')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='shebang', ctx=Load()), attr='encode', ctx=Load()), args=[Constant(value='utf-8')], keywords=[]))], handlers=[ExceptHandler(type=Name(id='UnicodeEncodeError', ctx=Load()), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='The shebang ({!r}) is not encodable to utf-8'), attr='format', ctx=Load()), args=[Name(id='shebang', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[], finalbody=[]), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='shebang', ctx=Load()), attr='encode', ctx=Load()), args=[Name(id='encoding', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='UnicodeEncodeError', ctx=Load()), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='The shebang ({!r}) is not encodable to the script encoding ({})'), attr='format', ctx=Load()), args=[Name(id='shebang', ctx=Load()), Name(id='encoding', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[Name(id='staticmethod', ctx=Load())])], decorator_list=[])], type_ignores=[])