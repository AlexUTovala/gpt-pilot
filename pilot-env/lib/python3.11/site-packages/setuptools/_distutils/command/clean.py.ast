Module(body=[Expr(value=Constant(value="distutils.command.clean\n\nImplements the Distutils 'clean' command.")), Import(names=[alias(name='os')]), ImportFrom(module='core', names=[alias(name='Command')], level=2), ImportFrom(module='dir_util', names=[alias(name='remove_tree')], level=2), ImportFrom(module='distutils._log', names=[alias(name='log')], level=0), ClassDef(name='clean', bases=[Name(id='Command', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='description', ctx=Store())], value=Constant(value="clean up temporary files from 'build' command")), Assign(targets=[Name(id='user_options', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='build-base='), Constant(value='b'), Constant(value="base build directory (default: 'build.build-base')")], ctx=Load()), Tuple(elts=[Constant(value='build-lib='), Constant(value=None), Constant(value="build directory for all modules (default: 'build.build-lib')")], ctx=Load()), Tuple(elts=[Constant(value='build-temp='), Constant(value='t'), Constant(value="temporary build directory (default: 'build.build-temp')")], ctx=Load()), Tuple(elts=[Constant(value='build-scripts='), Constant(value=None), Constant(value="build directory for scripts (default: 'build.build-scripts')")], ctx=Load()), Tuple(elts=[Constant(value='bdist-base='), Constant(value=None), Constant(value='temporary directory for built distributions')], ctx=Load()), Tuple(elts=[Constant(value='all'), Constant(value='a'), Constant(value='remove all build output, not just temporary by-products')], ctx=Load())], ctx=Load())), Assign(targets=[Name(id='boolean_options', ctx=Store())], value=List(elts=[Constant(value='all')], ctx=Load())), FunctionDef(name='initialize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_base', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_lib', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_temp', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='build_scripts', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='bdist_base', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='all', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='finalize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='set_undefined_options', ctx=Load()), args=[Constant(value='build'), Tuple(elts=[Constant(value='build_base'), Constant(value='build_base')], ctx=Load()), Tuple(elts=[Constant(value='build_lib'), Constant(value='build_lib')], ctx=Load()), Tuple(elts=[Constant(value='build_scripts'), Constant(value='build_scripts')], ctx=Load()), Tuple(elts=[Constant(value='build_temp'), Constant(value='build_temp')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='set_undefined_options', ctx=Load()), args=[Constant(value='bdist'), Tuple(elts=[Constant(value='bdist_base'), Constant(value='bdist_base')], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='build_temp', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Name(id='remove_tree', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='build_temp', ctx=Load())], keywords=[keyword(arg='dry_run', value=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load()))]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value="'%s' does not exist -- can't clean it"), Attribute(value=Name(id='self', ctx=Load()), attr='build_temp', ctx=Load())], keywords=[]))]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='all', ctx=Load()), body=[For(target=Name(id='directory', ctx=Store()), iter=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='build_lib', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='bdist_base', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='build_scripts', ctx=Load())], ctx=Load()), body=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='directory', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Name(id='remove_tree', ctx=Load()), args=[Name(id='directory', ctx=Load())], keywords=[keyword(arg='dry_run', value=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load()))]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='warning', ctx=Load()), args=[Constant(value="'%s' does not exist -- can't clean it"), Name(id='directory', ctx=Load())], keywords=[]))])], orelse=[])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load())), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='rmdir', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='build_base', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value="removing '%s'"), Attribute(value=Name(id='self', ctx=Load()), attr='build_base', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='OSError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], orelse=[])], decorator_list=[])], decorator_list=[])], type_ignores=[])