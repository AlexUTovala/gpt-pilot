Module(body=[Expr(value=Constant(value="distutils.command.bdist\n\nImplements the Distutils 'bdist' command (create a built [binary]\ndistribution).")), Import(names=[alias(name='os')]), Import(names=[alias(name='warnings')]), ImportFrom(module='core', names=[alias(name='Command')], level=2), ImportFrom(module='errors', names=[alias(name='DistutilsPlatformError'), alias(name='DistutilsOptionError')], level=2), ImportFrom(module='util', names=[alias(name='get_platform')], level=2), FunctionDef(name='show_formats', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Print list of available formats (arguments to "--format" option).')), ImportFrom(module='fancy_getopt', names=[alias(name='FancyGetopt')], level=2), Assign(targets=[Name(id='formats', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='format', ctx=Store()), iter=Attribute(value=Name(id='bdist', ctx=Load()), attr='format_commands', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='formats', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[BinOp(left=Constant(value='formats='), op=Add(), right=Name(id='format', ctx=Load())), Constant(value=None), Subscript(value=Subscript(value=Attribute(value=Name(id='bdist', ctx=Load()), attr='format_commands', ctx=Load()), slice=Name(id='format', ctx=Load()), ctx=Load()), slice=Constant(value=1), ctx=Load())], ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='pretty_printer', ctx=Store())], value=Call(func=Name(id='FancyGetopt', ctx=Load()), args=[Name(id='formats', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='pretty_printer', ctx=Load()), attr='print_help', ctx=Load()), args=[Constant(value='List of available distribution formats:')], keywords=[]))], decorator_list=[]), ClassDef(name='ListCompat', bases=[Name(id='dict', ctx=Load())], keywords=[], body=[FunctionDef(name='append', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='item')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='warnings', ctx=Load()), attr='warn', ctx=Load()), args=[Constant(value='format_commands is now a dict. append is deprecated.'), Name(id='DeprecationWarning', ctx=Load())], keywords=[keyword(arg='stacklevel', value=Constant(value=2))]))], decorator_list=[])], decorator_list=[]), ClassDef(name='bdist', bases=[Name(id='Command', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='description', ctx=Store())], value=Constant(value='create a built (binary) distribution')), Assign(targets=[Name(id='user_options', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='bdist-base='), Constant(value='b'), Constant(value='temporary directory for creating built distributions')], ctx=Load()), Tuple(elts=[Constant(value='plat-name='), Constant(value='p'), BinOp(left=Constant(value='platform name to embed in generated filenames (default: %s)'), op=Mod(), right=Call(func=Name(id='get_platform', ctx=Load()), args=[], keywords=[]))], ctx=Load()), Tuple(elts=[Constant(value='formats='), Constant(value=None), Constant(value='formats for distribution (comma-separated list)')], ctx=Load()), Tuple(elts=[Constant(value='dist-dir='), Constant(value='d'), Constant(value='directory to put final built distributions in [default: dist]')], ctx=Load()), Tuple(elts=[Constant(value='skip-build'), Constant(value=None), Constant(value='skip rebuilding everything (for testing/debugging)')], ctx=Load()), Tuple(elts=[Constant(value='owner='), Constant(value='u'), Constant(value='Owner name used when creating a tar file [default: current user]')], ctx=Load()), Tuple(elts=[Constant(value='group='), Constant(value='g'), Constant(value='Group name used when creating a tar file [default: current group]')], ctx=Load())], ctx=Load())), Assign(targets=[Name(id='boolean_options', ctx=Store())], value=List(elts=[Constant(value='skip-build')], ctx=Load())), Assign(targets=[Name(id='help_options', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='help-formats'), Constant(value=None), Constant(value='lists available distribution formats'), Name(id='show_formats', ctx=Load())], ctx=Load())], ctx=Load())), Assign(targets=[Name(id='no_format_option', ctx=Store())], value=Tuple(elts=[Constant(value='bdist_rpm')], ctx=Load())), Assign(targets=[Name(id='default_format', ctx=Store())], value=Dict(keys=[Constant(value='posix'), Constant(value='nt')], values=[Constant(value='gztar'), Constant(value='zip')])), Assign(targets=[Name(id='format_commands', ctx=Store())], value=Call(func=Name(id='ListCompat', ctx=Load()), args=[Dict(keys=[Constant(value='rpm'), Constant(value='gztar'), Constant(value='bztar'), Constant(value='xztar'), Constant(value='ztar'), Constant(value='tar'), Constant(value='zip')], values=[Tuple(elts=[Constant(value='bdist_rpm'), Constant(value='RPM distribution')], ctx=Load()), Tuple(elts=[Constant(value='bdist_dumb'), Constant(value="gzip'ed tar file")], ctx=Load()), Tuple(elts=[Constant(value='bdist_dumb'), Constant(value="bzip2'ed tar file")], ctx=Load()), Tuple(elts=[Constant(value='bdist_dumb'), Constant(value="xz'ed tar file")], ctx=Load()), Tuple(elts=[Constant(value='bdist_dumb'), Constant(value='compressed tar file')], ctx=Load()), Tuple(elts=[Constant(value='bdist_dumb'), Constant(value='tar file')], ctx=Load()), Tuple(elts=[Constant(value='bdist_dumb'), Constant(value='ZIP file')], ctx=Load())])], keywords=[])), Assign(targets=[Name(id='format_command', ctx=Store())], value=Name(id='format_commands', ctx=Load())), FunctionDef(name='initialize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='bdist_base', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='plat_name', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='formats', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='dist_dir', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='skip_build', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='group', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='owner', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='finalize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='plat_name', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='skip_build', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='plat_name', ctx=Store())], value=Call(func=Name(id='get_platform', ctx=Load()), args=[], keywords=[]))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='plat_name', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_finalized_command', ctx=Load()), args=[Constant(value='build')], keywords=[]), attr='plat_name', ctx=Load()))])], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='bdist_base', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='build_base', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_finalized_command', ctx=Load()), args=[Constant(value='build')], keywords=[]), attr='build_base', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='bdist_base', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='build_base', ctx=Load()), BinOp(left=Constant(value='bdist.'), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='plat_name', ctx=Load()))], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='ensure_string_list', ctx=Load()), args=[Constant(value='formats')], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='formats', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Try(body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='formats', ctx=Store())], value=List(elts=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='default_format', ctx=Load()), slice=Attribute(value=Name(id='os', ctx=Load()), attr='name', ctx=Load()), ctx=Load())], ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Raise(exc=Call(func=Name(id='DistutilsPlatformError', ctx=Load()), args=[BinOp(left=Constant(value="don't know how to create built distributions on platform %s"), op=Mod(), right=Attribute(value=Name(id='os', ctx=Load()), attr='name', ctx=Load()))], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='dist_dir', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='dist_dir', ctx=Store())], value=Constant(value='dist'))], orelse=[])], decorator_list=[]), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='commands', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='format', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='formats', ctx=Load()), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='commands', ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='format_commands', ctx=Load()), slice=Name(id='format', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Raise(exc=Call(func=Name(id='DistutilsOptionError', ctx=Load()), args=[BinOp(left=Constant(value="invalid format '%s'"), op=Mod(), right=Name(id='format', ctx=Load()))], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='formats', ctx=Load())], keywords=[])], keywords=[]), body=[Assign(targets=[Name(id='cmd_name', ctx=Store())], value=Subscript(value=Name(id='commands', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='sub_cmd', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='reinitialize_command', ctx=Load()), args=[Name(id='cmd_name', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='cmd_name', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='no_format_option', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='sub_cmd', ctx=Load()), attr='format', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='formats', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='cmd_name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='bdist_dumb')]), body=[Assign(targets=[Attribute(value=Name(id='sub_cmd', ctx=Load()), attr='owner', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='owner', ctx=Load())), Assign(targets=[Attribute(value=Name(id='sub_cmd', ctx=Load()), attr='group', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='group', ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='cmd_name', ctx=Load()), ops=[In()], comparators=[Subscript(value=Name(id='commands', ctx=Load()), slice=Slice(lower=BinOp(left=Name(id='i', ctx=Load()), op=Add(), right=Constant(value=1))), ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='sub_cmd', ctx=Load()), attr='keep_temp', ctx=Store())], value=Constant(value=1))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_command', ctx=Load()), args=[Name(id='cmd_name', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[])], type_ignores=[])