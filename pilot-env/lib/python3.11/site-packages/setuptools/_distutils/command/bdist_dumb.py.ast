Module(body=[Expr(value=Constant(value='distutils.command.bdist_dumb\n\nImplements the Distutils \'bdist_dumb\' command (create a "dumb" built\ndistribution -- i.e., just an archive to be unpacked under $prefix or\n$exec_prefix).')), Import(names=[alias(name='os')]), ImportFrom(module='core', names=[alias(name='Command')], level=2), ImportFrom(module='util', names=[alias(name='get_platform')], level=2), ImportFrom(module='dir_util', names=[alias(name='remove_tree'), alias(name='ensure_relative')], level=2), ImportFrom(module='errors', names=[alias(name='DistutilsPlatformError')], level=2), ImportFrom(module='sysconfig', names=[alias(name='get_python_version')], level=2), ImportFrom(module='distutils._log', names=[alias(name='log')], level=0), ClassDef(name='bdist_dumb', bases=[Name(id='Command', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='description', ctx=Store())], value=Constant(value='create a "dumb" built distribution')), Assign(targets=[Name(id='user_options', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='bdist-dir='), Constant(value='d'), Constant(value='temporary directory for creating the distribution')], ctx=Load()), Tuple(elts=[Constant(value='plat-name='), Constant(value='p'), BinOp(left=Constant(value='platform name to embed in generated filenames (default: %s)'), op=Mod(), right=Call(func=Name(id='get_platform', ctx=Load()), args=[], keywords=[]))], ctx=Load()), Tuple(elts=[Constant(value='format='), Constant(value='f'), Constant(value='archive format to create (tar, gztar, bztar, xztar, ztar, zip)')], ctx=Load()), Tuple(elts=[Constant(value='keep-temp'), Constant(value='k'), BinOp(left=Constant(value='keep the pseudo-installation tree around after '), op=Add(), right=Constant(value='creating the distribution archive'))], ctx=Load()), Tuple(elts=[Constant(value='dist-dir='), Constant(value='d'), Constant(value='directory to put final built distributions in')], ctx=Load()), Tuple(elts=[Constant(value='skip-build'), Constant(value=None), Constant(value='skip rebuilding everything (for testing/debugging)')], ctx=Load()), Tuple(elts=[Constant(value='relative'), Constant(value=None), Constant(value='build the archive using relative paths (default: false)')], ctx=Load()), Tuple(elts=[Constant(value='owner='), Constant(value='u'), Constant(value='Owner name used when creating a tar file [default: current user]')], ctx=Load()), Tuple(elts=[Constant(value='group='), Constant(value='g'), Constant(value='Group name used when creating a tar file [default: current group]')], ctx=Load())], ctx=Load())), Assign(targets=[Name(id='boolean_options', ctx=Store())], value=List(elts=[Constant(value='keep-temp'), Constant(value='skip-build'), Constant(value='relative')], ctx=Load())), Assign(targets=[Name(id='default_format', ctx=Store())], value=Dict(keys=[Constant(value='posix'), Constant(value='nt')], values=[Constant(value='gztar'), Constant(value='zip')])), FunctionDef(name='initialize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='plat_name', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='format', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='keep_temp', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='dist_dir', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='skip_build', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='relative', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='owner', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='group', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='finalize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='bdist_base', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_finalized_command', ctx=Load()), args=[Constant(value='bdist')], keywords=[]), attr='bdist_base', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='bdist_base', ctx=Load()), Constant(value='dumb')], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='format', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Try(body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='format', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='default_format', ctx=Load()), slice=Attribute(value=Name(id='os', ctx=Load()), attr='name', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Raise(exc=Call(func=Name(id='DistutilsPlatformError', ctx=Load()), args=[BinOp(left=Constant(value="don't know how to create dumb built distributions on platform %s"), op=Mod(), right=Attribute(value=Name(id='os', ctx=Load()), attr='name', ctx=Load()))], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='set_undefined_options', ctx=Load()), args=[Constant(value='bdist'), Tuple(elts=[Constant(value='dist_dir'), Constant(value='dist_dir')], ctx=Load()), Tuple(elts=[Constant(value='plat_name'), Constant(value='plat_name')], ctx=Load()), Tuple(elts=[Constant(value='skip_build'), Constant(value='skip_build')], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='skip_build', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_command', ctx=Load()), args=[Constant(value='build')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='install', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='reinitialize_command', ctx=Load()), args=[Constant(value='install')], keywords=[keyword(arg='reinit_subcommands', value=Constant(value=1))])), Assign(targets=[Attribute(value=Name(id='install', ctx=Load()), attr='root', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Load())), Assign(targets=[Attribute(value=Name(id='install', ctx=Load()), attr='skip_build', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='skip_build', ctx=Load())), Assign(targets=[Attribute(value=Name(id='install', ctx=Load()), attr='warn_dir', ctx=Store())], value=Constant(value=0)), Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='installing to %s'), Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_command', ctx=Load()), args=[Constant(value='install')], keywords=[])), Assign(targets=[Name(id='archive_basename', ctx=Store())], value=Call(func=Attribute(value=Constant(value='{}.{}'), attr='format', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='get_fullname', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='plat_name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='pseudoinstall_root', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='dist_dir', ctx=Load()), Name(id='archive_basename', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='relative', ctx=Load())), body=[Assign(targets=[Name(id='archive_root', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Load()))], orelse=[If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='has_ext_modules', ctx=Load()), args=[], keywords=[]), Compare(left=Attribute(value=Name(id='install', ctx=Load()), attr='install_base', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='install', ctx=Load()), attr='install_platbase', ctx=Load())])]), body=[Raise(exc=Call(func=Name(id='DistutilsPlatformError', ctx=Load()), args=[BinOp(left=Constant(value="can't make a dumb built distribution where base and platbase are different (%s, %s)"), op=Mod(), right=Tuple(elts=[Call(func=Name(id='repr', ctx=Load()), args=[Attribute(value=Name(id='install', ctx=Load()), attr='install_base', ctx=Load())], keywords=[]), Call(func=Name(id='repr', ctx=Load()), args=[Attribute(value=Name(id='install', ctx=Load()), attr='install_platbase', ctx=Load())], keywords=[])], ctx=Load()))], keywords=[]))], orelse=[Assign(targets=[Name(id='archive_root', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Load()), Call(func=Name(id='ensure_relative', ctx=Load()), args=[Attribute(value=Name(id='install', ctx=Load()), attr='install_base', ctx=Load())], keywords=[])], keywords=[]))])]), Assign(targets=[Name(id='filename', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='make_archive', ctx=Load()), args=[Name(id='pseudoinstall_root', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='format', ctx=Load())], keywords=[keyword(arg='root_dir', value=Name(id='archive_root', ctx=Load())), keyword(arg='owner', value=Attribute(value=Name(id='self', ctx=Load()), attr='owner', ctx=Load())), keyword(arg='group', value=Attribute(value=Name(id='self', ctx=Load()), attr='group', ctx=Load()))])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='has_ext_modules', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='pyversion', ctx=Store())], value=Call(func=Name(id='get_python_version', ctx=Load()), args=[], keywords=[]))], orelse=[Assign(targets=[Name(id='pyversion', ctx=Store())], value=Constant(value='any'))]), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='dist_files', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Constant(value='bdist_dumb'), Name(id='pyversion', ctx=Load()), Name(id='filename', ctx=Load())], ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='keep_temp', ctx=Load())), body=[Expr(value=Call(func=Name(id='remove_tree', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='bdist_dir', ctx=Load())], keywords=[keyword(arg='dry_run', value=Attribute(value=Name(id='self', ctx=Load()), attr='dry_run', ctx=Load()))]))], orelse=[])], decorator_list=[])], decorator_list=[])], type_ignores=[])