Module(body=[Expr(value=Constant(value="distutils.command.check\n\nImplements the Distutils 'check' command.\n")), Import(names=[alias(name='contextlib')]), ImportFrom(module='core', names=[alias(name='Command')], level=2), ImportFrom(module='errors', names=[alias(name='DistutilsSetupError')], level=2), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='contextlib', ctx=Load()), attr='suppress', ctx=Load()), args=[Name(id='ImportError', ctx=Load())], keywords=[]))], body=[Import(names=[alias(name='docutils.utils')]), Import(names=[alias(name='docutils.parsers.rst')]), Import(names=[alias(name='docutils.frontend')]), Import(names=[alias(name='docutils.nodes')]), ClassDef(name='SilentReporter', bases=[Attribute(value=Attribute(value=Name(id='docutils', ctx=Load()), attr='utils', ctx=Load()), attr='Reporter', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='source'), arg(arg='report_level'), arg(arg='halt_level'), arg(arg='stream'), arg(arg='debug'), arg(arg='encoding'), arg(arg='error_handler')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=0), Constant(value='ascii'), Constant(value='replace')]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='messages', ctx=Store())], value=List(elts=[], ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='source', ctx=Load()), Name(id='report_level', ctx=Load()), Name(id='halt_level', ctx=Load()), Name(id='stream', ctx=Load()), Name(id='debug', ctx=Load()), Name(id='encoding', ctx=Load()), Name(id='error_handler', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='system_message', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='level'), arg(arg='message')], vararg=arg(arg='children'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='messages', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='level', ctx=Load()), Name(id='message', ctx=Load()), Name(id='children', ctx=Load()), Name(id='kwargs', ctx=Load())], ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='docutils', ctx=Load()), attr='nodes', ctx=Load()), attr='system_message', ctx=Load()), args=[Name(id='message', ctx=Load()), Starred(value=Name(id='children', ctx=Load()), ctx=Load())], keywords=[keyword(arg='level', value=Name(id='level', ctx=Load())), keyword(arg='type', value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='levels', ctx=Load()), slice=Name(id='level', ctx=Load()), ctx=Load())), keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[])], decorator_list=[])]), ClassDef(name='check', bases=[Name(id='Command', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='This command checks the meta-data of the package.')), Assign(targets=[Name(id='description', ctx=Store())], value=Constant(value='perform some checks on the package')), Assign(targets=[Name(id='user_options', ctx=Store())], value=List(elts=[Tuple(elts=[Constant(value='metadata'), Constant(value='m'), Constant(value='Verify meta-data')], ctx=Load()), Tuple(elts=[Constant(value='restructuredtext'), Constant(value='r'), Constant(value='Checks if long string meta-data syntax are reStructuredText-compliant')], ctx=Load()), Tuple(elts=[Constant(value='strict'), Constant(value='s'), Constant(value='Will exit with an error if a check fails')], ctx=Load())], ctx=Load())), Assign(targets=[Name(id='boolean_options', ctx=Store())], value=List(elts=[Constant(value='metadata'), Constant(value='restructuredtext'), Constant(value='strict')], ctx=Load())), FunctionDef(name='initialize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Sets default values for options.')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='restructuredtext', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='metadata', ctx=Store())], value=Constant(value=1)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='strict', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_warnings', ctx=Store())], value=Constant(value=0))], decorator_list=[]), FunctionDef(name='finalize_options', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[]), FunctionDef(name='warn', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='msg')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Counts the number of warnings that occurs.')), AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_warnings', ctx=Store()), op=Add(), value=Constant(value=1)), Return(value=Call(func=Attribute(value=Name(id='Command', ctx=Load()), attr='warn', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='msg', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Runs the command.')), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='metadata', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_metadata', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='restructuredtext', ctx=Load()), body=[If(test=Compare(left=Constant(value='docutils'), ops=[In()], comparators=[Call(func=Name(id='globals', ctx=Load()), args=[], keywords=[])]), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_restructuredtext', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Name(id='TypeError', ctx=Load()), name='exc', body=[Raise(exc=Call(func=Name(id='DistutilsSetupError', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='exc', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[], finalbody=[])], orelse=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='strict', ctx=Load()), body=[Raise(exc=Call(func=Name(id='DistutilsSetupError', ctx=Load()), args=[Constant(value='The docutils package is needed.')], keywords=[]))], orelse=[])])], orelse=[]), If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='strict', ctx=Load()), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_warnings', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)])]), body=[Raise(exc=Call(func=Name(id='DistutilsSetupError', ctx=Load()), args=[Constant(value='Please correct your package.')], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='check_metadata', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Ensures that all required elements of meta-data are supplied.\n\n        Required fields:\n            name, version\n\n        Warns if any are missing.\n        ')), Assign(targets=[Name(id='metadata', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='metadata', ctx=Load())), Assign(targets=[Name(id='missing', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='attr', ctx=Store()), iter=Tuple(elts=[Constant(value='name'), Constant(value='version')], ctx=Load()), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='metadata', ctx=Load()), Name(id='attr', ctx=Load()), Constant(value=None)], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='missing', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='attr', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), If(test=Name(id='missing', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='warn', ctx=Load()), args=[BinOp(left=Constant(value='missing required meta-data: %s'), op=Mod(), right=Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[Name(id='missing', ctx=Load())], keywords=[]))], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='check_restructuredtext', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Checks if the long string fields are reST-compliant.')), Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='get_long_description', ctx=Load()), args=[], keywords=[])), For(target=Name(id='warning', ctx=Store()), iter=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_check_rst_data', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='line', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='warning', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='line')], keywords=[])), If(test=Compare(left=Name(id='line', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='warning', ctx=Store())], value=Subscript(value=Name(id='warning', ctx=Load()), slice=Constant(value=1), ctx=Load()))], orelse=[Assign(targets=[Name(id='warning', ctx=Store())], value=Call(func=Attribute(value=Constant(value='{} (line {})'), attr='format', ctx=Load()), args=[Subscript(value=Name(id='warning', ctx=Load()), slice=Constant(value=1), ctx=Load()), Name(id='line', ctx=Load())], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='warn', ctx=Load()), args=[Name(id='warning', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='_check_rst_data', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="Returns warnings when the provided data doesn't compile.")), Assign(targets=[Name(id='source_path', ctx=Store())], value=BoolOp(op=Or(), values=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='script_name', ctx=Load()), Constant(value='setup.py')])), Assign(targets=[Name(id='parser', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='docutils', ctx=Load()), attr='parsers', ctx=Load()), attr='rst', ctx=Load()), attr='Parser', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='settings', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='docutils', ctx=Load()), attr='frontend', ctx=Load()), attr='OptionParser', ctx=Load()), args=[], keywords=[keyword(arg='components', value=Tuple(elts=[Attribute(value=Attribute(value=Attribute(value=Name(id='docutils', ctx=Load()), attr='parsers', ctx=Load()), attr='rst', ctx=Load()), attr='Parser', ctx=Load())], ctx=Load()))]), attr='get_default_values', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='settings', ctx=Load()), attr='tab_width', ctx=Store())], value=Constant(value=4)), Assign(targets=[Attribute(value=Name(id='settings', ctx=Load()), attr='pep_references', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='settings', ctx=Load()), attr='rfc_references', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='reporter', ctx=Store())], value=Call(func=Name(id='SilentReporter', ctx=Load()), args=[Name(id='source_path', ctx=Load()), Attribute(value=Name(id='settings', ctx=Load()), attr='report_level', ctx=Load()), Attribute(value=Name(id='settings', ctx=Load()), attr='halt_level', ctx=Load())], keywords=[keyword(arg='stream', value=Attribute(value=Name(id='settings', ctx=Load()), attr='warning_stream', ctx=Load())), keyword(arg='debug', value=Attribute(value=Name(id='settings', ctx=Load()), attr='debug', ctx=Load())), keyword(arg='encoding', value=Attribute(value=Name(id='settings', ctx=Load()), attr='error_encoding', ctx=Load())), keyword(arg='error_handler', value=Attribute(value=Name(id='settings', ctx=Load()), attr='error_encoding_error_handler', ctx=Load()))])), Assign(targets=[Name(id='document', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='docutils', ctx=Load()), attr='nodes', ctx=Load()), attr='document', ctx=Load()), args=[Name(id='settings', ctx=Load()), Name(id='reporter', ctx=Load())], keywords=[keyword(arg='source', value=Name(id='source_path', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='document', ctx=Load()), attr='note_source', ctx=Load()), args=[Name(id='source_path', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='parse', ctx=Load()), args=[Name(id='data', ctx=Load()), Name(id='document', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), name='e', body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='reporter', ctx=Load()), attr='messages', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), BinOp(left=Constant(value='Could not finish the parsing: %s.'), op=Mod(), right=Name(id='e', ctx=Load())), Constant(value=''), Dict(keys=[], values=[])], ctx=Load())], keywords=[]))])], orelse=[], finalbody=[]), Return(value=Attribute(value=Name(id='reporter', ctx=Load()), attr='messages', ctx=Load()))], decorator_list=[])], decorator_list=[])], type_ignores=[])