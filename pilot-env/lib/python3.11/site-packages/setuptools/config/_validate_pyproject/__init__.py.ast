Module(body=[ImportFrom(module='functools', names=[alias(name='reduce')], level=0), ImportFrom(module='typing', names=[alias(name='Any'), alias(name='Callable'), alias(name='Dict')], level=0), ImportFrom(names=[alias(name='formats')], level=1), ImportFrom(module='error_reporting', names=[alias(name='detailed_errors'), alias(name='ValidationError')], level=1), ImportFrom(module='extra_validations', names=[alias(name='EXTRA_VALIDATIONS')], level=1), ImportFrom(module='fastjsonschema_exceptions', names=[alias(name='JsonSchemaException'), alias(name='JsonSchemaValueException')], level=1), ImportFrom(module='fastjsonschema_validations', names=[alias(name='validate', asname='_validate')], level=1), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='validate'), Constant(value='FORMAT_FUNCTIONS'), Constant(value='EXTRA_VALIDATIONS'), Constant(value='ValidationError'), Constant(value='JsonSchemaException'), Constant(value='JsonSchemaValueException')], ctx=Load())), AnnAssign(target=Name(id='FORMAT_FUNCTIONS', ctx=Store()), annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Subscript(value=Name(id='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='str', ctx=Load())], ctx=Load()), Name(id='bool', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()), value=DictComp(key=Call(func=Attribute(value=Attribute(value=Name(id='fn', ctx=Load()), attr='__name__', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='_'), Constant(value='-')], keywords=[]), value=Name(id='fn', ctx=Load()), generators=[comprehension(target=Name(id='fn', ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='formats', ctx=Load()), attr='__dict__', ctx=Load()), attr='values', ctx=Load()), args=[], keywords=[]), ifs=[BoolOp(op=And(), values=[Call(func=Name(id='callable', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[]), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='fn', ctx=Load()), attr='__name__', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='_')], keywords=[]))])], is_async=0)]), simple=1), FunctionDef(name='validate', args=arguments(posonlyargs=[], args=[arg(arg='data', annotation=Name(id='Any', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Validate the given ``data`` object using JSON Schema\n    This function raises ``ValidationError`` if ``data`` is invalid.\n    ')), With(items=[withitem(context_expr=Call(func=Name(id='detailed_errors', ctx=Load()), args=[], keywords=[]))], body=[Expr(value=Call(func=Name(id='_validate', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[keyword(arg='custom_formats', value=Name(id='FORMAT_FUNCTIONS', ctx=Load()))]))]), Expr(value=Call(func=Name(id='reduce', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='acc'), arg(arg='fn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='fn', ctx=Load()), args=[Name(id='acc', ctx=Load())], keywords=[])), Name(id='EXTRA_VALIDATIONS', ctx=Load()), Name(id='data', ctx=Load())], keywords=[])), Return(value=Constant(value=True))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], type_ignores=[])