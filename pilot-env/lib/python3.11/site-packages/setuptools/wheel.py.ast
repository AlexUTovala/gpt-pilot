Module(body=[Expr(value=Constant(value='Wheels support.')), Import(names=[alias(name='email')]), Import(names=[alias(name='itertools')]), Import(names=[alias(name='functools')]), Import(names=[alias(name='os')]), Import(names=[alias(name='posixpath')]), Import(names=[alias(name='re')]), Import(names=[alias(name='zipfile')]), Import(names=[alias(name='contextlib')]), ImportFrom(module='distutils.util', names=[alias(name='get_platform')], level=0), Import(names=[alias(name='setuptools')]), ImportFrom(module='setuptools.extern.packaging.version', names=[alias(name='Version', asname='parse_version')], level=0), ImportFrom(module='setuptools.extern.packaging.tags', names=[alias(name='sys_tags')], level=0), ImportFrom(module='setuptools.extern.packaging.utils', names=[alias(name='canonicalize_name')], level=0), ImportFrom(module='setuptools.command.egg_info', names=[alias(name='write_requirements'), alias(name='_egg_basename')], level=0), ImportFrom(module='setuptools.archive_util', names=[alias(name='_unpack_zipfile_obj')], level=0), Assign(targets=[Name(id='WHEEL_NAME', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='^(?P<project_name>.+?)-(?P<version>\\d.*?)\n    ((-(?P<build>\\d.*?))?-(?P<py_version>.+?)-(?P<abi>.+?)-(?P<platform>.+?)\n    )\\.whl$'), Attribute(value=Name(id='re', ctx=Load()), attr='VERBOSE', ctx=Load())], keywords=[]), attr='match', ctx=Load())), Assign(targets=[Name(id='NAMESPACE_PACKAGE_INIT', ctx=Store())], value=Constant(value="__import__('pkg_resources').declare_namespace(__name__)\n")), FunctionDef(name='_get_supported_tags', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=SetComp(elt=Tuple(elts=[Attribute(value=Name(id='t', ctx=Load()), attr='interpreter', ctx=Load()), Attribute(value=Name(id='t', ctx=Load()), attr='abi', ctx=Load()), Attribute(value=Name(id='t', ctx=Load()), attr='platform', ctx=Load())], ctx=Load()), generators=[comprehension(target=Name(id='t', ctx=Store()), iter=Call(func=Name(id='sys_tags', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[Call(func=Attribute(value=Name(id='functools', ctx=Load()), attr='lru_cache', ctx=Load()), args=[], keywords=[keyword(arg='maxsize', value=Constant(value=None))])]), FunctionDef(name='unpack', args=arguments(posonlyargs=[], args=[arg(arg='src_dir'), arg(arg='dst_dir')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Move everything under `src_dir` to `dst_dir`, and delete the former.')), For(target=Tuple(elts=[Name(id='dirpath', ctx=Store()), Name(id='dirnames', ctx=Store()), Name(id='filenames', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='walk', ctx=Load()), args=[Name(id='src_dir', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='subdir', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='relpath', ctx=Load()), args=[Name(id='dirpath', ctx=Load()), Name(id='src_dir', ctx=Load())], keywords=[])), For(target=Name(id='f', ctx=Store()), iter=Name(id='filenames', ctx=Load()), body=[Assign(targets=[Name(id='src', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dirpath', ctx=Load()), Name(id='f', ctx=Load())], keywords=[])), Assign(targets=[Name(id='dst', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dst_dir', ctx=Load()), Name(id='subdir', ctx=Load()), Name(id='f', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='renames', ctx=Load()), args=[Name(id='src', ctx=Load()), Name(id='dst', ctx=Load())], keywords=[]))], orelse=[]), For(target=Tuple(elts=[Name(id='n', ctx=Store()), Name(id='d', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='reversed', ctx=Load()), args=[Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='dirnames', ctx=Load())], keywords=[])], keywords=[])], keywords=[]), body=[Assign(targets=[Name(id='src', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dirpath', ctx=Load()), Name(id='d', ctx=Load())], keywords=[])), Assign(targets=[Name(id='dst', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dst_dir', ctx=Load()), Name(id='subdir', ctx=Load()), Name(id='d', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='dst', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='renames', ctx=Load()), args=[Name(id='src', ctx=Load()), Name(id='dst', ctx=Load())], keywords=[])), Delete(targets=[Subscript(value=Name(id='dirnames', ctx=Load()), slice=Name(id='n', ctx=Load()), ctx=Del())])], orelse=[])], orelse=[])], orelse=[]), For(target=Tuple(elts=[Name(id='dirpath', ctx=Store()), Name(id='dirnames', ctx=Store()), Name(id='filenames', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='walk', ctx=Load()), args=[Name(id='src_dir', ctx=Load())], keywords=[keyword(arg='topdown', value=Constant(value=True))]), body=[Assert(test=UnaryOp(op=Not(), operand=Name(id='filenames', ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='rmdir', ctx=Load()), args=[Name(id='dirpath', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='disable_info_traces', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Temporarily disable info traces.\n    ')), ImportFrom(module='distutils', names=[alias(name='log')], level=0), Assign(targets=[Name(id='saved', ctx=Store())], value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='set_threshold', ctx=Load()), args=[Attribute(value=Name(id='log', ctx=Load()), attr='WARN', ctx=Load())], keywords=[])), Try(body=[Expr(value=Yield())], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='log', ctx=Load()), attr='set_threshold', ctx=Load()), args=[Name(id='saved', ctx=Load())], keywords=[]))])], decorator_list=[Attribute(value=Name(id='contextlib', ctx=Load()), attr='contextmanager', ctx=Load())]), ClassDef(name='Wheel', bases=[], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='filename')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='match', ctx=Store())], value=Call(func=Name(id='WHEEL_NAME', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])], keywords=[])), If(test=Compare(left=Name(id='match', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='invalid wheel name: %r'), op=Mod(), right=Name(id='filename', ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Store())], value=Name(id='filename', ctx=Load())), For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='match', ctx=Load()), attr='groupdict', ctx=Load()), args=[], keywords=[]), attr='items', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='k', ctx=Load()), Name(id='v', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='tags', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='List tags (py_version, abi, platform) supported by this wheel.')), Return(value=Call(func=Attribute(value=Name(id='itertools', ctx=Load()), attr='product', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='py_version', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='abi', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='platform', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='is_compatible', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Is the wheel compatible with the current platform?')), Return(value=Call(func=Name(id='next', ctx=Load()), args=[GeneratorExp(elt=Constant(value=True), generators=[comprehension(target=Name(id='t', ctx=Store()), iter=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='tags', ctx=Load()), args=[], keywords=[]), ifs=[Compare(left=Name(id='t', ctx=Load()), ops=[In()], comparators=[Call(func=Name(id='_get_supported_tags', ctx=Load()), args=[], keywords=[])])], is_async=0)]), Constant(value=False)], keywords=[]))], decorator_list=[]), FunctionDef(name='egg_name', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BinOp(left=Call(func=Name(id='_egg_basename', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='project_name', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='version', ctx=Load())], keywords=[keyword(arg='platform', value=IfExp(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='platform', ctx=Load()), ops=[Eq()], comparators=[Constant(value='any')]), body=Constant(value=None), orelse=Call(func=Name(id='get_platform', ctx=Load()), args=[], keywords=[])))]), op=Add(), right=Constant(value='.egg')))], decorator_list=[]), FunctionDef(name='get_dist_info', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='zf')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='member', ctx=Store()), iter=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='namelist', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='dirname', ctx=Store())], value=Call(func=Attribute(value=Name(id='posixpath', ctx=Load()), attr='dirname', ctx=Load()), args=[Name(id='member', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Name(id='dirname', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.dist-info')], keywords=[]), Call(func=Attribute(value=Call(func=Name(id='canonicalize_name', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[]), attr='startswith', ctx=Load()), args=[Call(func=Name(id='canonicalize_name', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='project_name', ctx=Load())], keywords=[])], keywords=[])]), body=[Return(value=Name(id='dirname', ctx=Load()))], orelse=[])], orelse=[]), Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='unsupported wheel format. .dist-info not found')], keywords=[]))], decorator_list=[]), FunctionDef(name='install_as_egg', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='destination_eggdir')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Install wheel as an egg directory.')), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='zipfile', ctx=Load()), attr='ZipFile', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load())], keywords=[]), optional_vars=Name(id='zf', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_install_as_egg', ctx=Load()), args=[Name(id='destination_eggdir', ctx=Load()), Name(id='zf', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='_install_as_egg', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='destination_eggdir'), arg(arg='zf')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='dist_basename', ctx=Store())], value=BinOp(left=Constant(value='%s-%s'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='project_name', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='version', ctx=Load())], ctx=Load()))), Assign(targets=[Name(id='dist_info', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_dist_info', ctx=Load()), args=[Name(id='zf', ctx=Load())], keywords=[])), Assign(targets=[Name(id='dist_data', ctx=Store())], value=BinOp(left=Constant(value='%s.data'), op=Mod(), right=Name(id='dist_basename', ctx=Load()))), Assign(targets=[Name(id='egg_info', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='destination_eggdir', ctx=Load()), Constant(value='EGG-INFO')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_convert_metadata', ctx=Load()), args=[Name(id='zf', ctx=Load()), Name(id='destination_eggdir', ctx=Load()), Name(id='dist_info', ctx=Load()), Name(id='egg_info', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_move_data_entries', ctx=Load()), args=[Name(id='destination_eggdir', ctx=Load()), Name(id='dist_data', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_fix_namespace_packages', ctx=Load()), args=[Name(id='egg_info', ctx=Load()), Name(id='destination_eggdir', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_convert_metadata', args=arguments(posonlyargs=[], args=[arg(arg='zf'), arg(arg='destination_eggdir'), arg(arg='dist_info'), arg(arg='egg_info')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Import(names=[alias(name='pkg_resources')]), FunctionDef(name='get_metadata', args=arguments(posonlyargs=[], args=[arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='zf', ctx=Load()), attr='open', ctx=Load()), args=[Call(func=Attribute(value=Name(id='posixpath', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dist_info', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])], keywords=[]), optional_vars=Name(id='fp', ctx=Store()))], body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='fp', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), attr='decode', ctx=Load()), args=[Constant(value='utf-8')], keywords=[])), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='email', ctx=Load()), attr='parser', ctx=Load()), attr='Parser', ctx=Load()), args=[], keywords=[]), attr='parsestr', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))])], decorator_list=[]), Assign(targets=[Name(id='wheel_metadata', ctx=Store())], value=Call(func=Name(id='get_metadata', ctx=Load()), args=[Constant(value='WHEEL')], keywords=[])), Assign(targets=[Name(id='wheel_version', ctx=Store())], value=Call(func=Name(id='parse_version', ctx=Load()), args=[Call(func=Attribute(value=Name(id='wheel_metadata', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='Wheel-Version')], keywords=[])], keywords=[])), Assign(targets=[Name(id='wheel_v1', ctx=Store())], value=Compare(left=Call(func=Name(id='parse_version', ctx=Load()), args=[Constant(value='1.0')], keywords=[]), ops=[LtE(), Lt()], comparators=[Name(id='wheel_version', ctx=Load()), Call(func=Name(id='parse_version', ctx=Load()), args=[Constant(value='2.0dev0')], keywords=[])])), If(test=UnaryOp(op=Not(), operand=Name(id='wheel_v1', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='unsupported wheel format version: %s'), op=Mod(), right=Name(id='wheel_version', ctx=Load()))], keywords=[]))], orelse=[]), Expr(value=Call(func=Name(id='_unpack_zipfile_obj', ctx=Load()), args=[Name(id='zf', ctx=Load()), Name(id='destination_eggdir', ctx=Load())], keywords=[])), Assign(targets=[Name(id='dist_info', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='destination_eggdir', ctx=Load()), Name(id='dist_info', ctx=Load())], keywords=[])), Assign(targets=[Name(id='dist', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='pkg_resources', ctx=Load()), attr='Distribution', ctx=Load()), attr='from_location', ctx=Load()), args=[Name(id='destination_eggdir', ctx=Load()), Name(id='dist_info', ctx=Load())], keywords=[keyword(arg='metadata', value=Call(func=Attribute(value=Name(id='pkg_resources', ctx=Load()), attr='PathMetadata', ctx=Load()), args=[Name(id='destination_eggdir', ctx=Load()), Name(id='dist_info', ctx=Load())], keywords=[]))])), FunctionDef(name='raw_req', args=arguments(posonlyargs=[], args=[arg(arg='req')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='req', ctx=Load()), attr='marker', ctx=Store())], value=Constant(value=None)), Return(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='req', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='install_requires', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Name(id='raw_req', ctx=Load()), Call(func=Attribute(value=Name(id='dist', ctx=Load()), attr='requires', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[])), Assign(targets=[Name(id='extras_require', ctx=Store())], value=DictComp(key=Name(id='extra', ctx=Load()), value=ListComp(elt=Name(id='req', ctx=Load()), generators=[comprehension(target=Name(id='req', ctx=Store()), iter=Call(func=Name(id='map', ctx=Load()), args=[Name(id='raw_req', ctx=Load()), Call(func=Attribute(value=Name(id='dist', ctx=Load()), attr='requires', ctx=Load()), args=[Tuple(elts=[Name(id='extra', ctx=Load())], ctx=Load())], keywords=[])], keywords=[]), ifs=[Compare(left=Name(id='req', ctx=Load()), ops=[NotIn()], comparators=[Name(id='install_requires', ctx=Load())])], is_async=0)]), generators=[comprehension(target=Name(id='extra', ctx=Store()), iter=Attribute(value=Name(id='dist', ctx=Load()), attr='extras', ctx=Load()), ifs=[], is_async=0)])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='rename', ctx=Load()), args=[Name(id='dist_info', ctx=Load()), Name(id='egg_info', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='rename', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='egg_info', ctx=Load()), Constant(value='METADATA')], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='egg_info', ctx=Load()), Constant(value='PKG-INFO')], keywords=[])], keywords=[])), Assign(targets=[Name(id='setup_dist', ctx=Store())], value=Call(func=Attribute(value=Name(id='setuptools', ctx=Load()), attr='Distribution', ctx=Load()), args=[], keywords=[keyword(arg='attrs', value=Call(func=Name(id='dict', ctx=Load()), args=[], keywords=[keyword(arg='install_requires', value=Name(id='install_requires', ctx=Load())), keyword(arg='extras_require', value=Name(id='extras_require', ctx=Load()))]))])), With(items=[withitem(context_expr=Call(func=Name(id='disable_info_traces', ctx=Load()), args=[], keywords=[]))], body=[Expr(value=Call(func=Name(id='write_requirements', ctx=Load()), args=[Call(func=Attribute(value=Name(id='setup_dist', ctx=Load()), attr='get_command_obj', ctx=Load()), args=[Constant(value='egg_info')], keywords=[]), Constant(value=None), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='egg_info', ctx=Load()), Constant(value='requires.txt')], keywords=[])], keywords=[]))])], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='_move_data_entries', args=arguments(posonlyargs=[], args=[arg(arg='destination_eggdir'), arg(arg='dist_data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Move data entries to their correct location.')), Assign(targets=[Name(id='dist_data', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='destination_eggdir', ctx=Load()), Name(id='dist_data', ctx=Load())], keywords=[])), Assign(targets=[Name(id='dist_data_scripts', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dist_data', ctx=Load()), Constant(value='scripts')], keywords=[])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='dist_data_scripts', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='egg_info_scripts', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='destination_eggdir', ctx=Load()), Constant(value='EGG-INFO'), Constant(value='scripts')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='mkdir', ctx=Load()), args=[Name(id='egg_info_scripts', ctx=Load())], keywords=[])), For(target=Name(id='entry', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='dist_data_scripts', ctx=Load())], keywords=[]), body=[If(test=Call(func=Attribute(value=Name(id='entry', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.pyc')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='unlink', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dist_data_scripts', ctx=Load()), Name(id='entry', ctx=Load())], keywords=[])], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='rename', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dist_data_scripts', ctx=Load()), Name(id='entry', ctx=Load())], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='egg_info_scripts', ctx=Load()), Name(id='entry', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='rmdir', ctx=Load()), args=[Name(id='dist_data_scripts', ctx=Load())], keywords=[]))], orelse=[]), For(target=Name(id='subdir', ctx=Store()), iter=Call(func=Name(id='filter', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), GeneratorExp(elt=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dist_data', ctx=Load()), Name(id='d', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='d', ctx=Store()), iter=Tuple(elts=[Constant(value='data'), Constant(value='headers'), Constant(value='purelib'), Constant(value='platlib')], ctx=Load()), ifs=[], is_async=0)])], keywords=[]), body=[Expr(value=Call(func=Name(id='unpack', ctx=Load()), args=[Name(id='subdir', ctx=Load()), Name(id='destination_eggdir', ctx=Load())], keywords=[]))], orelse=[]), If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='dist_data', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='rmdir', ctx=Load()), args=[Name(id='dist_data', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='_fix_namespace_packages', args=arguments(posonlyargs=[], args=[arg(arg='egg_info'), arg(arg='destination_eggdir')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='namespace_packages', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='egg_info', ctx=Load()), Constant(value='namespace_packages.txt')], keywords=[])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='namespace_packages', ctx=Load())], keywords=[]), body=[With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='namespace_packages', ctx=Load())], keywords=[]), optional_vars=Name(id='fp', ctx=Store()))], body=[Assign(targets=[Name(id='namespace_packages', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='fp', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), attr='split', ctx=Load()), args=[], keywords=[]))]), For(target=Name(id='mod', ctx=Store()), iter=Name(id='namespace_packages', ctx=Load()), body=[Assign(targets=[Name(id='mod_dir', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='destination_eggdir', ctx=Load()), Starred(value=Call(func=Attribute(value=Name(id='mod', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[]), ctx=Load())], keywords=[])), Assign(targets=[Name(id='mod_init', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='mod_dir', ctx=Load()), Constant(value='__init__.py')], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='mod_dir', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='mkdir', ctx=Load()), args=[Name(id='mod_dir', ctx=Load())], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='mod_init', ctx=Load())], keywords=[])), body=[With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='mod_init', ctx=Load()), Constant(value='w')], keywords=[]), optional_vars=Name(id='fp', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='fp', ctx=Load()), attr='write', ctx=Load()), args=[Name(id='NAMESPACE_PACKAGE_INIT', ctx=Load())], keywords=[]))])], orelse=[])], orelse=[])], orelse=[])], decorator_list=[Name(id='staticmethod', ctx=Load())])], decorator_list=[])], type_ignores=[])