Module(body=[Import(names=[alias(name='sys')]), FunctionDef(name='disable_importlib_metadata_finder', args=arguments(posonlyargs=[], args=[arg(arg='metadata')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n    Ensure importlib_metadata doesn't provide older, incompatible\n    Distributions.\n\n    Workaround for #3102.\n    ")), Try(body=[Import(names=[alias(name='importlib_metadata')])], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Return()]), ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[ImportFrom(module='warnings', names=[alias(name='SetuptoolsWarning')], level=1), Expr(value=Call(func=Attribute(value=Name(id='SetuptoolsWarning', ctx=Load()), attr='emit', ctx=Load()), args=[Constant(value='Incompatibility problem.'), Constant(value='\n            `importlib-metadata` version is incompatible with `setuptools`.\n            This problem is likely to be solved by installing an updated version of\n            `importlib-metadata`.\n            ')], keywords=[keyword(arg='see_url', value=Constant(value='https://github.com/python/importlib_metadata/issues/396'))])), Raise()])], orelse=[], finalbody=[]), If(test=Compare(left=Name(id='importlib_metadata', ctx=Load()), ops=[Is()], comparators=[Name(id='metadata', ctx=Load())]), body=[Return()], orelse=[]), Assign(targets=[Name(id='to_remove', ctx=Store())], value=ListComp(elt=Name(id='ob', ctx=Load()), generators=[comprehension(target=Name(id='ob', ctx=Store()), iter=Attribute(value=Name(id='sys', ctx=Load()), attr='meta_path', ctx=Load()), ifs=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='ob', ctx=Load()), Attribute(value=Name(id='importlib_metadata', ctx=Load()), attr='MetadataPathFinder', ctx=Load())], keywords=[])], is_async=0)])), For(target=Name(id='item', ctx=Store()), iter=Name(id='to_remove', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='meta_path', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='item', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[Lt()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=10)], ctx=Load())]), body=[ImportFrom(module='setuptools.extern', names=[alias(name='importlib_metadata', asname='metadata')], level=0), Expr(value=Call(func=Name(id='disable_importlib_metadata_finder', ctx=Load()), args=[Name(id='metadata', ctx=Load())], keywords=[]))], orelse=[Import(names=[alias(name='importlib.metadata', asname='metadata')])]), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), ops=[Lt()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=9)], ctx=Load())]), body=[ImportFrom(module='setuptools.extern', names=[alias(name='importlib_resources', asname='resources')], level=0)], orelse=[Import(names=[alias(name='importlib.resources', asname='resources')])])], type_ignores=[])