Module(body=[Expr(value=Constant(value='\nCompatibility layer with Python 3.8/3.9\n')), ImportFrom(module='typing', names=[alias(name='TYPE_CHECKING'), alias(name='Any'), alias(name='Optional')], level=0), If(test=Name(id='TYPE_CHECKING', ctx=Load()), body=[ImportFrom(names=[alias(name='Distribution'), alias(name='EntryPoint')], level=1)], orelse=[Assign(targets=[Name(id='Distribution', ctx=Store()), Name(id='EntryPoint', ctx=Store())], value=Name(id='Any', ctx=Load()))]), FunctionDef(name='normalized_name', args=arguments(posonlyargs=[], args=[arg(arg='dist', annotation=Name(id='Distribution', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n    Honor name normalization for distributions that don't provide ``_normalized_name``.\n    ")), Try(body=[Return(value=Attribute(value=Name(id='dist', ctx=Load()), attr='_normalized_name', ctx=Load()))], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[ImportFrom(names=[alias(name='Prepared')], level=1), Return(value=Call(func=Attribute(value=Name(id='Prepared', ctx=Load()), attr='normalize', ctx=Load()), args=[BoolOp(op=Or(), values=[Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='dist', ctx=Load()), Constant(value='name'), Constant(value=None)], keywords=[]), Subscript(value=Attribute(value=Name(id='dist', ctx=Load()), attr='metadata', ctx=Load()), slice=Constant(value='Name'), ctx=Load())])], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='ep_matches', args=arguments(posonlyargs=[], args=[arg(arg='ep', annotation=Name(id='EntryPoint', ctx=Load()))], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='params'), defaults=[]), body=[Expr(value=Constant(value='\n    Workaround for ``EntryPoint`` objects without the ``matches`` method.\n    ')), Try(body=[Return(value=Call(func=Attribute(value=Name(id='ep', ctx=Load()), attr='matches', ctx=Load()), args=[], keywords=[keyword(value=Name(id='params', ctx=Load()))]))], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[ImportFrom(names=[alias(name='EntryPoint')], level=1), Return(value=Call(func=Attribute(value=Call(func=Name(id='EntryPoint', ctx=Load()), args=[Attribute(value=Name(id='ep', ctx=Load()), attr='name', ctx=Load()), Attribute(value=Name(id='ep', ctx=Load()), attr='value', ctx=Load()), Attribute(value=Name(id='ep', ctx=Load()), attr='group', ctx=Load())], keywords=[]), attr='matches', ctx=Load()), args=[], keywords=[keyword(value=Name(id='params', ctx=Load()))]))])], orelse=[], finalbody=[])], decorator_list=[], returns=Name(id='bool', ctx=Load()))], type_ignores=[])