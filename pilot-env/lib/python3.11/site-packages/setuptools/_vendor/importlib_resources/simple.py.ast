Module(body=[Expr(value=Constant(value='\nInterface adapters for low-level readers.\n')), Import(names=[alias(name='abc')]), Import(names=[alias(name='io')]), Import(names=[alias(name='itertools')]), ImportFrom(module='typing', names=[alias(name='BinaryIO'), alias(name='List')], level=0), ImportFrom(module='abc', names=[alias(name='Traversable'), alias(name='TraversableResources')], level=1), ClassDef(name='SimpleReader', bases=[Attribute(value=Name(id='abc', ctx=Load()), attr='ABC', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    The minimum, low-level interface required from a resource\n    provider.\n    ')), FunctionDef(name='package', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        The name of the package for which this reader loads resources.\n        '))], decorator_list=[Name(id='property', ctx=Load()), Attribute(value=Name(id='abc', ctx=Load()), attr='abstractmethod', ctx=Load())], returns=Name(id='str', ctx=Load())), FunctionDef(name='children', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Obtain an iterable of SimpleReader for available\n        child containers (e.g. directories).\n        '))], decorator_list=[Attribute(value=Name(id='abc', ctx=Load()), attr='abstractmethod', ctx=Load())], returns=Subscript(value=Name(id='List', ctx=Load()), slice=Constant(value='SimpleReader'), ctx=Load())), FunctionDef(name='resources', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Obtain available named resources for this virtual package.\n        '))], decorator_list=[Attribute(value=Name(id='abc', ctx=Load()), attr='abstractmethod', ctx=Load())], returns=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), FunctionDef(name='open_binary', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='resource', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Obtain a File-like for a named resource.\n        '))], decorator_list=[Attribute(value=Name(id='abc', ctx=Load()), attr='abstractmethod', ctx=Load())], returns=Name(id='BinaryIO', ctx=Load())), FunctionDef(name='name', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='package', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[]), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())])], decorator_list=[]), ClassDef(name='ResourceContainer', bases=[Name(id='Traversable', ctx=Load())], keywords=[], body=[Expr(value=Constant(value="\n    Traversable container for a package's resources via its reader.\n    ")), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='reader', annotation=Name(id='SimpleReader', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='reader', ctx=Store())], value=Name(id='reader', ctx=Load()))], decorator_list=[]), FunctionDef(name='is_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=True))], decorator_list=[]), FunctionDef(name='is_file', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=False))], decorator_list=[]), FunctionDef(name='iterdir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='files', ctx=Store())], value=GeneratorExp(elt=Call(func=Name(id='ResourceHandle', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='name', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='name', ctx=Store()), iter=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='reader', ctx=Load()), attr='resources', ctx=Load()), ifs=[], is_async=0)])), Assign(targets=[Name(id='dirs', ctx=Store())], value=Call(func=Name(id='map', ctx=Load()), args=[Name(id='ResourceContainer', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='reader', ctx=Load()), attr='children', ctx=Load()), args=[], keywords=[])], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='itertools', ctx=Load()), attr='chain', ctx=Load()), args=[Name(id='files', ctx=Load()), Name(id='dirs', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='open', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Raise(exc=Call(func=Name(id='IsADirectoryError', ctx=Load()), args=[], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='ResourceHandle', bases=[Name(id='Traversable', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    Handle to a named resource in a ResourceReader.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='parent', annotation=Name(id='ResourceContainer', ctx=Load())), arg(arg='name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='parent', ctx=Store())], value=Name(id='parent', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store())], value=Name(id='name', ctx=Load()))], decorator_list=[]), FunctionDef(name='is_file', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=True))], decorator_list=[]), FunctionDef(name='is_dir', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=False))], decorator_list=[]), FunctionDef(name='open', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='mode')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value='r')]), body=[Assign(targets=[Name(id='stream', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='parent', ctx=Load()), attr='reader', ctx=Load()), attr='open_binary', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], keywords=[])), If(test=Compare(left=Constant(value='b'), ops=[NotIn()], comparators=[Name(id='mode', ctx=Load())]), body=[Assign(targets=[Name(id='stream', ctx=Store())], value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='TextIOWrapper', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], orelse=[]), Return(value=Name(id='stream', ctx=Load()))], decorator_list=[]), FunctionDef(name='joinpath', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='Cannot traverse into a resource')], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='TraversableReader', bases=[Name(id='TraversableResources', ctx=Load()), Name(id='SimpleReader', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    A TraversableResources based on SimpleReader. Resource providers\n    may derive from this class to provide the TraversableResources\n    interface by supplying the SimpleReader interface.\n    ')), FunctionDef(name='files', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='ResourceContainer', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[])], type_ignores=[])