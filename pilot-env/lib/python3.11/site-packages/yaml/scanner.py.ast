Module(body=[Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='Scanner'), Constant(value='ScannerError')], ctx=Load())), ImportFrom(module='error', names=[alias(name='MarkedYAMLError')], level=1), ImportFrom(module='tokens', names=[alias(name='*')], level=1), ClassDef(name='ScannerError', bases=[Name(id='MarkedYAMLError', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='SimpleKey', bases=[], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='token_number'), arg(arg='required'), arg(arg='index'), arg(arg='line'), arg(arg='column'), arg(arg='mark')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='token_number', ctx=Store())], value=Name(id='token_number', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='required', ctx=Store())], value=Name(id='required', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Store())], value=Name(id='index', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='line', ctx=Store())], value=Name(id='line', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='column', ctx=Store())], value=Name(id='column', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='mark', ctx=Store())], value=Name(id='mark', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='Scanner', bases=[], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Initialize the scanner.')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='done', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Store())], value=List(elts=[], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_stream_start', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='tokens_taken', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='indent', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=1))), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='indents', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=Constant(value=True)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='possible_simple_keys', ctx=Store())], value=Dict(keys=[], values=[]))], decorator_list=[]), FunctionDef(name='check_token', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='choices'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[While(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='need_more_tokens', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_more_tokens', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), body=[If(test=UnaryOp(op=Not(), operand=Name(id='choices', ctx=Load())), body=[Return(value=Constant(value=True))], orelse=[]), For(target=Name(id='choice', ctx=Store()), iter=Name(id='choices', ctx=Load()), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), slice=Constant(value=0), ctx=Load()), Name(id='choice', ctx=Load())], keywords=[]), body=[Return(value=Constant(value=True))], orelse=[])], orelse=[])], orelse=[]), Return(value=Constant(value=False))], decorator_list=[]), FunctionDef(name='peek_token', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[While(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='need_more_tokens', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_more_tokens', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), body=[Return(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), slice=Constant(value=0), ctx=Load()))], orelse=[Return(value=Constant(value=None))])], decorator_list=[]), FunctionDef(name='get_token', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[While(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='need_more_tokens', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_more_tokens', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), body=[AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='tokens_taken', ctx=Store()), op=Add(), value=Constant(value=1)), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value=0)], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='need_more_tokens', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='done', ctx=Load()), body=[Return(value=Constant(value=False))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load())), body=[Return(value=Constant(value=True))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='stale_possible_simple_keys', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='next_possible_simple_key', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='tokens_taken', ctx=Load())]), body=[Return(value=Constant(value=True))], orelse=[])], decorator_list=[]), FunctionDef(name='fetch_more_tokens', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_to_next_token', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='stale_possible_simple_keys', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='unwind_indent', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='column', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='\x00')]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_stream_end', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='%')]), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_directive', ctx=Load()), args=[], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_directive', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='-')]), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_document_start', ctx=Load()), args=[], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_document_start', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='.')]), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_document_end', ctx=Load()), args=[], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_document_end', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='[')]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_flow_sequence_start', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='{')]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_flow_mapping_start', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value=']')]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_flow_sequence_end', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='}')]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_flow_mapping_end', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value=',')]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_flow_entry', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='-')]), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_block_entry', ctx=Load()), args=[], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_block_entry', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='?')]), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_key', ctx=Load()), args=[], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_key', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value=':')]), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_value', ctx=Load()), args=[], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_value', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='*')]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_alias', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='&')]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_anchor', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='!')]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_tag', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='|')]), UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load()))]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_literal', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='>')]), UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load()))]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_folded', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value="'")]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_single', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='"')]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_double', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_plain', ctx=Load()), args=[], keywords=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_plain', ctx=Load()), args=[], keywords=[]))], orelse=[]), Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning for the next token'), Constant(value=None), BinOp(left=Constant(value='found character %r that cannot start any token'), op=Mod(), right=Name(id='ch', ctx=Load())), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='next_possible_simple_key', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='min_token_number', ctx=Store())], value=Constant(value=None)), For(target=Name(id='level', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='possible_simple_keys', ctx=Load()), body=[Assign(targets=[Name(id='key', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='possible_simple_keys', ctx=Load()), slice=Name(id='level', ctx=Load()), ctx=Load())), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='min_token_number', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Name(id='key', ctx=Load()), attr='token_number', ctx=Load()), ops=[Lt()], comparators=[Name(id='min_token_number', ctx=Load())])]), body=[Assign(targets=[Name(id='min_token_number', ctx=Store())], value=Attribute(value=Name(id='key', ctx=Load()), attr='token_number', ctx=Load()))], orelse=[])], orelse=[]), Return(value=Name(id='min_token_number', ctx=Load()))], decorator_list=[]), FunctionDef(name='stale_possible_simple_keys', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='level', ctx=Store()), iter=Call(func=Name(id='list', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='possible_simple_keys', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='key', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='possible_simple_keys', ctx=Load()), slice=Name(id='level', ctx=Load()), ctx=Load())), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='key', ctx=Load()), attr='line', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='line', ctx=Load())]), Compare(left=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Load()), op=Sub(), right=Attribute(value=Name(id='key', ctx=Load()), attr='index', ctx=Load())), ops=[Gt()], comparators=[Constant(value=1024)])]), body=[If(test=Attribute(value=Name(id='key', ctx=Load()), attr='required', ctx=Load()), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning a simple key'), Attribute(value=Name(id='key', ctx=Load()), attr='mark', ctx=Load()), Constant(value="could not find expected ':'"), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='possible_simple_keys', ctx=Load()), slice=Name(id='level', ctx=Load()), ctx=Del())])], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='save_possible_simple_key', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='required', ctx=Store())], value=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load())), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='indent', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='column', ctx=Load())])])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='remove_possible_simple_key', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='token_number', ctx=Store())], value=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='tokens_taken', ctx=Load()), op=Add(), right=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='key', ctx=Store())], value=Call(func=Name(id='SimpleKey', ctx=Load()), args=[Name(id='token_number', ctx=Load()), Name(id='required', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='line', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='column', ctx=Load()), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='possible_simple_keys', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load()), ctx=Store())], value=Name(id='key', ctx=Load()))], orelse=[])], decorator_list=[]), FunctionDef(name='remove_possible_simple_key', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='possible_simple_keys', ctx=Load())]), body=[Assign(targets=[Name(id='key', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='possible_simple_keys', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load()), ctx=Load())), If(test=Attribute(value=Name(id='key', ctx=Load()), attr='required', ctx=Load()), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning a simple key'), Attribute(value=Name(id='key', ctx=Load()), attr='mark', ctx=Load()), Constant(value="could not find expected ':'"), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='possible_simple_keys', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load()), ctx=Del())])], orelse=[])], decorator_list=[]), FunctionDef(name='unwind_indent', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='column')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load()), body=[Return()], orelse=[]), While(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='indent', ctx=Load()), ops=[Gt()], comparators=[Name(id='column', ctx=Load())]), body=[Assign(targets=[Name(id='mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='indent', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='indents', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='BlockEndToken', ctx=Load()), args=[Name(id='mark', ctx=Load()), Name(id='mark', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='add_indent', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='column')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='indent', ctx=Load()), ops=[Lt()], comparators=[Name(id='column', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='indents', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='indent', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='indent', ctx=Store())], value=Name(id='column', ctx=Load())), Return(value=Constant(value=True))], orelse=[]), Return(value=Constant(value=False))], decorator_list=[]), FunctionDef(name='fetch_stream_start', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='StreamStartToken', ctx=Load()), args=[Name(id='mark', ctx=Load()), Name(id='mark', ctx=Load())], keywords=[keyword(arg='encoding', value=Attribute(value=Name(id='self', ctx=Load()), attr='encoding', ctx=Load()))])], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_stream_end', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='unwind_indent', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='remove_possible_simple_key', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='possible_simple_keys', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='StreamEndToken', ctx=Load()), args=[Name(id='mark', ctx=Load()), Name(id='mark', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='done', ctx=Store())], value=Constant(value=True))], decorator_list=[]), FunctionDef(name='fetch_directive', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='unwind_indent', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='remove_possible_simple_key', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=Constant(value=False)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_directive', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_document_start', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_document_indicator', ctx=Load()), args=[Name(id='DocumentStartToken', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_document_end', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_document_indicator', ctx=Load()), args=[Name(id='DocumentEndToken', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_document_indicator', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='TokenClass')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='unwind_indent', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='remove_possible_simple_key', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='start_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[Constant(value=3)], keywords=[])), Assign(targets=[Name(id='end_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='TokenClass', ctx=Load()), args=[Name(id='start_mark', ctx=Load()), Name(id='end_mark', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_flow_sequence_start', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_flow_collection_start', ctx=Load()), args=[Name(id='FlowSequenceStartToken', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_flow_mapping_start', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_flow_collection_start', ctx=Load()), args=[Name(id='FlowMappingStartToken', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_flow_collection_start', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='TokenClass')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='save_possible_simple_key', ctx=Load()), args=[], keywords=[])), AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Store()), op=Add(), value=Constant(value=1)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='start_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='end_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='TokenClass', ctx=Load()), args=[Name(id='start_mark', ctx=Load()), Name(id='end_mark', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_flow_sequence_end', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_flow_collection_end', ctx=Load()), args=[Name(id='FlowSequenceEndToken', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_flow_mapping_end', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_flow_collection_end', ctx=Load()), args=[Name(id='FlowMappingEndToken', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_flow_collection_end', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='TokenClass')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='remove_possible_simple_key', ctx=Load()), args=[], keywords=[])), AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Store()), op=Sub(), value=Constant(value=1)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='start_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='end_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='TokenClass', ctx=Load()), args=[Name(id='start_mark', ctx=Load()), Name(id='end_mark', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_flow_entry', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=Constant(value=True)), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='remove_possible_simple_key', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='start_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='end_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='FlowEntryToken', ctx=Load()), args=[Name(id='start_mark', ctx=Load()), Name(id='end_mark', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_block_entry', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load())), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value=None), Constant(value=None), Constant(value='sequence entries are not allowed here'), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='add_indent', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='column', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='BlockSequenceStartToken', ctx=Load()), args=[Name(id='mark', ctx=Load()), Name(id='mark', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[Pass()]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=Constant(value=True)), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='remove_possible_simple_key', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='start_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='end_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='BlockEntryToken', ctx=Load()), args=[Name(id='start_mark', ctx=Load()), Name(id='end_mark', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_key', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load())), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value=None), Constant(value=None), Constant(value='mapping keys are not allowed here'), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='add_indent', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='column', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='BlockMappingStartToken', ctx=Load()), args=[Name(id='mark', ctx=Load()), Name(id='mark', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='remove_possible_simple_key', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='start_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='end_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='KeyToken', ctx=Load()), args=[Name(id='start_mark', ctx=Load()), Name(id='end_mark', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_value', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='possible_simple_keys', ctx=Load())]), body=[Assign(targets=[Name(id='key', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='possible_simple_keys', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load()), ctx=Load())), Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='possible_simple_keys', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load()), ctx=Del())]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='insert', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='key', ctx=Load()), attr='token_number', ctx=Load()), op=Sub(), right=Attribute(value=Name(id='self', ctx=Load()), attr='tokens_taken', ctx=Load())), Call(func=Name(id='KeyToken', ctx=Load()), args=[Attribute(value=Name(id='key', ctx=Load()), attr='mark', ctx=Load()), Attribute(value=Name(id='key', ctx=Load()), attr='mark', ctx=Load())], keywords=[])], keywords=[])), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load())), body=[If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='add_indent', ctx=Load()), args=[Attribute(value=Name(id='key', ctx=Load()), attr='column', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='insert', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='key', ctx=Load()), attr='token_number', ctx=Load()), op=Sub(), right=Attribute(value=Name(id='self', ctx=Load()), attr='tokens_taken', ctx=Load())), Call(func=Name(id='BlockMappingStartToken', ctx=Load()), args=[Attribute(value=Name(id='key', ctx=Load()), attr='mark', ctx=Load()), Attribute(value=Name(id='key', ctx=Load()), attr='mark', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=Constant(value=False))], orelse=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load())), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value=None), Constant(value=None), Constant(value='mapping values are not allowed here'), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load())), body=[If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='add_indent', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='column', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='BlockMappingStartToken', ctx=Load()), args=[Name(id='mark', ctx=Load()), Name(id='mark', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='remove_possible_simple_key', ctx=Load()), args=[], keywords=[]))]), Assign(targets=[Name(id='start_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='end_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='ValueToken', ctx=Load()), args=[Name(id='start_mark', ctx=Load()), Name(id='end_mark', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_alias', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='save_possible_simple_key', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=Constant(value=False)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_anchor', ctx=Load()), args=[Name(id='AliasToken', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_anchor', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='save_possible_simple_key', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=Constant(value=False)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_anchor', ctx=Load()), args=[Name(id='AnchorToken', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_tag', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='save_possible_simple_key', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=Constant(value=False)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_tag', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_literal', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_block_scalar', ctx=Load()), args=[], keywords=[keyword(arg='style', value=Constant(value='|'))]))], decorator_list=[]), FunctionDef(name='fetch_folded', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_block_scalar', ctx=Load()), args=[], keywords=[keyword(arg='style', value=Constant(value='>'))]))], decorator_list=[]), FunctionDef(name='fetch_block_scalar', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='style')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=Constant(value=True)), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='remove_possible_simple_key', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_block_scalar', ctx=Load()), args=[Name(id='style', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_single', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_flow_scalar', ctx=Load()), args=[], keywords=[keyword(arg='style', value=Constant(value="'"))]))], decorator_list=[]), FunctionDef(name='fetch_double', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fetch_flow_scalar', ctx=Load()), args=[], keywords=[keyword(arg='style', value=Constant(value='"'))]))], decorator_list=[]), FunctionDef(name='fetch_flow_scalar', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='style')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='save_possible_simple_key', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=Constant(value=False)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_flow_scalar', ctx=Load()), args=[Name(id='style', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='fetch_plain', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='save_possible_simple_key', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=Constant(value=False)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='tokens', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_plain', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='check_directive', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='column', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Return(value=Constant(value=True))], orelse=[])], decorator_list=[]), FunctionDef(name='check_document_start', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='column', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), args=[Constant(value=3)], keywords=[]), ops=[Eq()], comparators=[Constant(value='---')]), Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Constant(value=3)], keywords=[]), ops=[In()], comparators=[Constant(value='\x00 \t\r\n\x85\u2028\u2029')])]), body=[Return(value=Constant(value=True))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='check_document_end', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='column', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), args=[Constant(value=3)], keywords=[]), ops=[Eq()], comparators=[Constant(value='...')]), Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Constant(value=3)], keywords=[]), ops=[In()], comparators=[Constant(value='\x00 \t\r\n\x85\u2028\u2029')])]), body=[Return(value=Constant(value=True))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='check_block_entry', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Constant(value=1)], keywords=[]), ops=[In()], comparators=[Constant(value='\x00 \t\r\n\x85\u2028\u2029')]))], decorator_list=[]), FunctionDef(name='check_key', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load()), body=[Return(value=Constant(value=True))], orelse=[Return(value=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Constant(value=1)], keywords=[]), ops=[In()], comparators=[Constant(value='\x00 \t\r\n\x85\u2028\u2029')]))])], decorator_list=[]), FunctionDef(name='check_value', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load()), body=[Return(value=Constant(value=True))], orelse=[Return(value=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Constant(value=1)], keywords=[]), ops=[In()], comparators=[Constant(value='\x00 \t\r\n\x85\u2028\u2029')]))])], decorator_list=[]), FunctionDef(name='check_plain', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), Return(value=BoolOp(op=Or(), values=[Compare(left=Name(id='ch', ctx=Load()), ops=[NotIn()], comparators=[Constant(value='\x00 \t\r\n\x85\u2028\u2029-?:,[]{}#&*!|>\'"%@`')]), BoolOp(op=And(), values=[Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Constant(value=1)], keywords=[]), ops=[NotIn()], comparators=[Constant(value='\x00 \t\r\n\x85\u2028\u2029')]), BoolOp(op=Or(), values=[Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='-')]), BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load())), Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Constant(value='?:')])])])])]))], decorator_list=[]), FunctionDef(name='scan_to_next_token', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value='\ufeff')])]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='found', ctx=Store())], value=Constant(value=False)), While(test=UnaryOp(op=Not(), operand=Name(id='found', ctx=Load())), body=[While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value=' ')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value='#')]), body=[While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[NotIn()], comparators=[Constant(value='\x00\r\n\x85\u2028\u2029')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[])], orelse=[]), If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_line_break', ctx=Load()), args=[], keywords=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load())), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=Constant(value=True))], orelse=[])], orelse=[Assign(targets=[Name(id='found', ctx=Store())], value=Constant(value=True))])], orelse=[])], decorator_list=[]), FunctionDef(name='scan_directive', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='start_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='name', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_directive_name', ctx=Load()), args=[Name(id='start_mark', ctx=Load())], keywords=[])), Assign(targets=[Name(id='value', ctx=Store())], value=Constant(value=None)), If(test=Compare(left=Name(id='name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='YAML')]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_yaml_directive_value', ctx=Load()), args=[Name(id='start_mark', ctx=Load())], keywords=[])), Assign(targets=[Name(id='end_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=Compare(left=Name(id='name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='TAG')]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_tag_directive_value', ctx=Load()), args=[Name(id='start_mark', ctx=Load())], keywords=[])), Assign(targets=[Name(id='end_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[]))], orelse=[Assign(targets=[Name(id='end_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[NotIn()], comparators=[Constant(value='\x00\r\n\x85\u2028\u2029')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[])])]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_directive_ignored_line', ctx=Load()), args=[Name(id='start_mark', ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='DirectiveToken', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='value', ctx=Load()), Name(id='start_mark', ctx=Load()), Name(id='end_mark', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='scan_directive_name', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='start_mark')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='length', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), While(test=BoolOp(op=Or(), values=[Compare(left=Constant(value='0'), ops=[LtE(), LtE()], comparators=[Name(id='ch', ctx=Load()), Constant(value='9')]), Compare(left=Constant(value='A'), ops=[LtE(), LtE()], comparators=[Name(id='ch', ctx=Load()), Constant(value='Z')]), Compare(left=Constant(value='a'), ops=[LtE(), LtE()], comparators=[Name(id='ch', ctx=Load()), Constant(value='z')]), Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Constant(value='-_')])]), body=[AugAssign(target=Name(id='length', ctx=Store()), op=Add(), value=Constant(value=1)), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='length', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning a directive'), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value='expected alphabetic or numeric character, but found %r'), op=Mod(), right=Name(id='ch', ctx=Load())), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[NotIn()], comparators=[Constant(value='\x00 \r\n\x85\u2028\u2029')]), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning a directive'), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value='expected alphabetic or numeric character, but found %r'), op=Mod(), right=Name(id='ch', ctx=Load())), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='scan_yaml_directive_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='start_mark')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value=' ')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='major', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_yaml_directive_number', ctx=Load()), args=[Name(id='start_mark', ctx=Load())], keywords=[])), If(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[NotEq()], comparators=[Constant(value='.')]), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning a directive'), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value="expected a digit or '.', but found %r"), op=Mod(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='minor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_yaml_directive_number', ctx=Load()), args=[Name(id='start_mark', ctx=Load())], keywords=[])), If(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[NotIn()], comparators=[Constant(value='\x00 \r\n\x85\u2028\u2029')]), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning a directive'), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value="expected a digit or ' ', but found %r"), op=Mod(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Return(value=Tuple(elts=[Name(id='major', ctx=Load()), Name(id='minor', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='scan_yaml_directive_number', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='start_mark')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=UnaryOp(op=Not(), operand=Compare(left=Constant(value='0'), ops=[LtE(), LtE()], comparators=[Name(id='ch', ctx=Load()), Constant(value='9')])), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning a directive'), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value='expected a digit, but found %r'), op=Mod(), right=Name(id='ch', ctx=Load())), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='length', ctx=Store())], value=Constant(value=0)), While(test=Compare(left=Constant(value='0'), ops=[LtE(), LtE()], comparators=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[]), Constant(value='9')]), body=[AugAssign(target=Name(id='length', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[]), Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), Return(value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='scan_tag_directive_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='start_mark')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value=' ')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='handle', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_tag_directive_handle', ctx=Load()), args=[Name(id='start_mark', ctx=Load())], keywords=[])), While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value=' ')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='prefix', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_tag_directive_prefix', ctx=Load()), args=[Name(id='start_mark', ctx=Load())], keywords=[])), Return(value=Tuple(elts=[Name(id='handle', ctx=Load()), Name(id='prefix', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='scan_tag_directive_handle', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='start_mark')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_tag_handle', ctx=Load()), args=[Constant(value='directive'), Name(id='start_mark', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[NotEq()], comparators=[Constant(value=' ')]), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning a directive'), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value="expected ' ', but found %r"), op=Mod(), right=Name(id='ch', ctx=Load())), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='scan_tag_directive_prefix', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='start_mark')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_tag_uri', ctx=Load()), args=[Constant(value='directive'), Name(id='start_mark', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[NotIn()], comparators=[Constant(value='\x00 \r\n\x85\u2028\u2029')]), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning a directive'), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value="expected ' ', but found %r"), op=Mod(), right=Name(id='ch', ctx=Load())), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='scan_directive_ignored_line', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='start_mark')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value=' ')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value='#')]), body=[While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[NotIn()], comparators=[Constant(value='\x00\r\n\x85\u2028\u2029')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[NotIn()], comparators=[Constant(value='\x00\r\n\x85\u2028\u2029')]), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning a directive'), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value='expected a comment or a line break, but found %r'), op=Mod(), right=Name(id='ch', ctx=Load())), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_line_break', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='scan_anchor', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='TokenClass')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='start_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='indicator', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='indicator', ctx=Load()), ops=[Eq()], comparators=[Constant(value='*')]), body=[Assign(targets=[Name(id='name', ctx=Store())], value=Constant(value='alias'))], orelse=[Assign(targets=[Name(id='name', ctx=Store())], value=Constant(value='anchor'))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='length', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), While(test=BoolOp(op=Or(), values=[Compare(left=Constant(value='0'), ops=[LtE(), LtE()], comparators=[Name(id='ch', ctx=Load()), Constant(value='9')]), Compare(left=Constant(value='A'), ops=[LtE(), LtE()], comparators=[Name(id='ch', ctx=Load()), Constant(value='Z')]), Compare(left=Constant(value='a'), ops=[LtE(), LtE()], comparators=[Name(id='ch', ctx=Load()), Constant(value='z')]), Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Constant(value='-_')])]), body=[AugAssign(target=Name(id='length', ctx=Store()), op=Add(), value=Constant(value=1)), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='length', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[BinOp(left=Constant(value='while scanning an %s'), op=Mod(), right=Name(id='name', ctx=Load())), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value='expected alphabetic or numeric character, but found %r'), op=Mod(), right=Name(id='ch', ctx=Load())), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[NotIn()], comparators=[Constant(value='\x00 \t\r\n\x85\u2028\u2029?:,]}%@`')]), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[BinOp(left=Constant(value='while scanning an %s'), op=Mod(), right=Name(id='name', ctx=Load())), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value='expected alphabetic or numeric character, but found %r'), op=Mod(), right=Name(id='ch', ctx=Load())), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='end_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Name(id='TokenClass', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='start_mark', ctx=Load()), Name(id='end_mark', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='scan_tag', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='start_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Constant(value=1)], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='<')]), body=[Assign(targets=[Name(id='handle', ctx=Store())], value=Constant(value=None)), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[Constant(value=2)], keywords=[])), Assign(targets=[Name(id='suffix', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_tag_uri', ctx=Load()), args=[Constant(value='tag'), Name(id='start_mark', ctx=Load())], keywords=[])), If(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[NotEq()], comparators=[Constant(value='>')]), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while parsing a tag'), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value="expected '>', but found %r"), op=Mod(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Constant(value='\x00 \t\r\n\x85\u2028\u2029')]), body=[Assign(targets=[Name(id='handle', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='suffix', ctx=Store())], value=Constant(value='!')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[Assign(targets=[Name(id='length', ctx=Store())], value=Constant(value=1)), Assign(targets=[Name(id='use_handle', ctx=Store())], value=Constant(value=False)), While(test=Compare(left=Name(id='ch', ctx=Load()), ops=[NotIn()], comparators=[Constant(value='\x00 \r\n\x85\u2028\u2029')]), body=[If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='!')]), body=[Assign(targets=[Name(id='use_handle', ctx=Store())], value=Constant(value=True)), Break()], orelse=[]), AugAssign(target=Name(id='length', ctx=Store()), op=Add(), value=Constant(value=1)), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='handle', ctx=Store())], value=Constant(value='!')), If(test=Name(id='use_handle', ctx=Load()), body=[Assign(targets=[Name(id='handle', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_tag_handle', ctx=Load()), args=[Constant(value='tag'), Name(id='start_mark', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='handle', ctx=Store())], value=Constant(value='!')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))]), Assign(targets=[Name(id='suffix', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_tag_uri', ctx=Load()), args=[Constant(value='tag'), Name(id='start_mark', ctx=Load())], keywords=[]))])]), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[NotIn()], comparators=[Constant(value='\x00 \r\n\x85\u2028\u2029')]), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning a tag'), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value="expected ' ', but found %r"), op=Mod(), right=Name(id='ch', ctx=Load())), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='value', ctx=Store())], value=Tuple(elts=[Name(id='handle', ctx=Load()), Name(id='suffix', ctx=Load())], ctx=Load())), Assign(targets=[Name(id='end_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Name(id='TagToken', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='start_mark', ctx=Load()), Name(id='end_mark', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='scan_block_scalar', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='style')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='style', ctx=Load()), ops=[Eq()], comparators=[Constant(value='>')]), body=[Assign(targets=[Name(id='folded', ctx=Store())], value=Constant(value=True))], orelse=[Assign(targets=[Name(id='folded', ctx=Store())], value=Constant(value=False))]), Assign(targets=[Name(id='chunks', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='start_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='chomping', ctx=Store()), Name(id='increment', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_block_scalar_indicators', ctx=Load()), args=[Name(id='start_mark', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_block_scalar_ignored_line', ctx=Load()), args=[Name(id='start_mark', ctx=Load())], keywords=[])), Assign(targets=[Name(id='min_indent', ctx=Store())], value=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='indent', ctx=Load()), op=Add(), right=Constant(value=1))), If(test=Compare(left=Name(id='min_indent', ctx=Load()), ops=[Lt()], comparators=[Constant(value=1)]), body=[Assign(targets=[Name(id='min_indent', ctx=Store())], value=Constant(value=1))], orelse=[]), If(test=Compare(left=Name(id='increment', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Tuple(elts=[Name(id='breaks', ctx=Store()), Name(id='max_indent', ctx=Store()), Name(id='end_mark', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_block_scalar_indentation', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='indent', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Name(id='min_indent', ctx=Load()), Name(id='max_indent', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='indent', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='min_indent', ctx=Load()), op=Add(), right=Name(id='increment', ctx=Load())), op=Sub(), right=Constant(value=1))), Assign(targets=[Tuple(elts=[Name(id='breaks', ctx=Store()), Name(id='end_mark', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_block_scalar_breaks', ctx=Load()), args=[Name(id='indent', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='line_break', ctx=Store())], value=Constant(value='')), While(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='column', ctx=Load()), ops=[Eq()], comparators=[Name(id='indent', ctx=Load())]), Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[NotEq()], comparators=[Constant(value='\x00')])]), body=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='extend', ctx=Load()), args=[Name(id='breaks', ctx=Load())], keywords=[])), Assign(targets=[Name(id='leading_non_space', ctx=Store())], value=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[NotIn()], comparators=[Constant(value=' \t')])), Assign(targets=[Name(id='length', ctx=Store())], value=Constant(value=0)), While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[]), ops=[NotIn()], comparators=[Constant(value='\x00\r\n\x85\u2028\u2029')]), body=[AugAssign(target=Name(id='length', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), Assign(targets=[Name(id='line_break', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_line_break', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='breaks', ctx=Store()), Name(id='end_mark', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_block_scalar_breaks', ctx=Load()), args=[Name(id='indent', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='column', ctx=Load()), ops=[Eq()], comparators=[Name(id='indent', ctx=Load())]), Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[NotEq()], comparators=[Constant(value='\x00')])]), body=[If(test=BoolOp(op=And(), values=[Name(id='folded', ctx=Load()), Compare(left=Name(id='line_break', ctx=Load()), ops=[Eq()], comparators=[Constant(value='\n')]), Name(id='leading_non_space', ctx=Load()), Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[NotIn()], comparators=[Constant(value=' \t')])]), body=[If(test=UnaryOp(op=Not(), operand=Name(id='breaks', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value=' ')], keywords=[]))], orelse=[])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='line_break', ctx=Load())], keywords=[]))])], orelse=[Break()])], orelse=[]), If(test=Compare(left=Name(id='chomping', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=False)]), body=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='line_break', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='chomping', ctx=Load()), ops=[Is()], comparators=[Constant(value=True)]), body=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='extend', ctx=Load()), args=[Name(id='breaks', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='ScalarToken', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Name(id='chunks', ctx=Load())], keywords=[]), Constant(value=False), Name(id='start_mark', ctx=Load()), Name(id='end_mark', ctx=Load()), Name(id='style', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='scan_block_scalar_indicators', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='start_mark')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='chomping', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='increment', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Constant(value='+-')]), body=[If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='+')]), body=[Assign(targets=[Name(id='chomping', ctx=Store())], value=Constant(value=True))], orelse=[Assign(targets=[Name(id='chomping', ctx=Store())], value=Constant(value=False))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Constant(value='0123456789')]), body=[Assign(targets=[Name(id='increment', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Name(id='ch', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='increment', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning a block scalar'), Name(id='start_mark', ctx=Load()), Constant(value='expected indentation indicator in the range 1-9, but found 0'), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[])], orelse=[If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Constant(value='0123456789')]), body=[Assign(targets=[Name(id='increment', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Name(id='ch', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='increment', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning a block scalar'), Name(id='start_mark', ctx=Load()), Constant(value='expected indentation indicator in the range 1-9, but found 0'), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Constant(value='+-')]), body=[If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='+')]), body=[Assign(targets=[Name(id='chomping', ctx=Store())], value=Constant(value=True))], orelse=[Assign(targets=[Name(id='chomping', ctx=Store())], value=Constant(value=False))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[])], orelse=[])]), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[NotIn()], comparators=[Constant(value='\x00 \r\n\x85\u2028\u2029')]), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning a block scalar'), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value='expected chomping or indentation indicators, but found %r'), op=Mod(), right=Name(id='ch', ctx=Load())), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Return(value=Tuple(elts=[Name(id='chomping', ctx=Load()), Name(id='increment', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='scan_block_scalar_ignored_line', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='start_mark')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value=' ')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value='#')]), body=[While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[NotIn()], comparators=[Constant(value='\x00\r\n\x85\u2028\u2029')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[NotIn()], comparators=[Constant(value='\x00\r\n\x85\u2028\u2029')]), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning a block scalar'), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value='expected a comment or a line break, but found %r'), op=Mod(), right=Name(id='ch', ctx=Load())), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_line_break', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='scan_block_scalar_indentation', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='chunks', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='max_indent', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='end_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[In()], comparators=[Constant(value=' \r\n\x85\u2028\u2029')]), body=[If(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[NotEq()], comparators=[Constant(value=' ')]), body=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_line_break', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='end_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='column', ctx=Load()), ops=[Gt()], comparators=[Name(id='max_indent', ctx=Load())]), body=[Assign(targets=[Name(id='max_indent', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='column', ctx=Load()))], orelse=[])])], orelse=[]), Return(value=Tuple(elts=[Name(id='chunks', ctx=Load()), Name(id='max_indent', ctx=Load()), Name(id='end_mark', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='scan_block_scalar_breaks', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='indent')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='chunks', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='end_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), While(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='column', ctx=Load()), ops=[Lt()], comparators=[Name(id='indent', ctx=Load())]), Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value=' ')])]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[]), While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[In()], comparators=[Constant(value='\r\n\x85\u2028\u2029')]), body=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_line_break', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='end_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), While(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='column', ctx=Load()), ops=[Lt()], comparators=[Name(id='indent', ctx=Load())]), Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value=' ')])]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[])], orelse=[]), Return(value=Tuple(elts=[Name(id='chunks', ctx=Load()), Name(id='end_mark', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='scan_flow_scalar', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='style')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='style', ctx=Load()), ops=[Eq()], comparators=[Constant(value='"')]), body=[Assign(targets=[Name(id='double', ctx=Store())], value=Constant(value=True))], orelse=[Assign(targets=[Name(id='double', ctx=Store())], value=Constant(value=False))]), Assign(targets=[Name(id='chunks', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='start_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='quote', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='extend', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_flow_scalar_non_spaces', ctx=Load()), args=[Name(id='double', ctx=Load()), Name(id='start_mark', ctx=Load())], keywords=[])], keywords=[])), While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[NotEq()], comparators=[Name(id='quote', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='extend', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_flow_scalar_spaces', ctx=Load()), args=[Name(id='double', ctx=Load()), Name(id='start_mark', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='extend', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_flow_scalar_non_spaces', ctx=Load()), args=[Name(id='double', ctx=Load()), Name(id='start_mark', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='end_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Name(id='ScalarToken', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Name(id='chunks', ctx=Load())], keywords=[]), Constant(value=False), Name(id='start_mark', ctx=Load()), Name(id='end_mark', ctx=Load()), Name(id='style', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='ESCAPE_REPLACEMENTS', ctx=Store())], value=Dict(keys=[Constant(value='0'), Constant(value='a'), Constant(value='b'), Constant(value='t'), Constant(value='\t'), Constant(value='n'), Constant(value='v'), Constant(value='f'), Constant(value='r'), Constant(value='e'), Constant(value=' '), Constant(value='"'), Constant(value='\\'), Constant(value='/'), Constant(value='N'), Constant(value='_'), Constant(value='L'), Constant(value='P')], values=[Constant(value='\x00'), Constant(value='\x07'), Constant(value='\x08'), Constant(value='\t'), Constant(value='\t'), Constant(value='\n'), Constant(value='\x0b'), Constant(value='\x0c'), Constant(value='\r'), Constant(value='\x1b'), Constant(value=' '), Constant(value='"'), Constant(value='\\'), Constant(value='/'), Constant(value='\x85'), Constant(value='\xa0'), Constant(value='\u2028'), Constant(value='\u2029')])), Assign(targets=[Name(id='ESCAPE_CODES', ctx=Store())], value=Dict(keys=[Constant(value='x'), Constant(value='u'), Constant(value='U')], values=[Constant(value=2), Constant(value=4), Constant(value=8)])), FunctionDef(name='scan_flow_scalar_non_spaces', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='double'), arg(arg='start_mark')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='chunks', ctx=Store())], value=List(elts=[], ctx=Load())), While(test=Constant(value=True), body=[Assign(targets=[Name(id='length', ctx=Store())], value=Constant(value=0)), While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[]), ops=[NotIn()], comparators=[Constant(value='\'"\\\x00 \t\r\n\x85\u2028\u2029')]), body=[AugAssign(target=Name(id='length', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[]), If(test=Name(id='length', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='double', ctx=Load())), Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value="'")]), Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Constant(value=1)], keywords=[]), ops=[Eq()], comparators=[Constant(value="'")])]), body=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value="'")], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[Constant(value=2)], keywords=[]))], orelse=[If(test=BoolOp(op=Or(), values=[BoolOp(op=And(), values=[Name(id='double', ctx=Load()), Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value="'")])]), BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='double', ctx=Load())), Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Constant(value='"\\')])])]), body=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='ch', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[Name(id='double', ctx=Load()), Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='\\')])]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='ESCAPE_REPLACEMENTS', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='ESCAPE_REPLACEMENTS', ctx=Load()), slice=Name(id='ch', ctx=Load()), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='ESCAPE_CODES', ctx=Load())]), body=[Assign(targets=[Name(id='length', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='ESCAPE_CODES', ctx=Load()), slice=Name(id='ch', ctx=Load()), ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[])), For(target=Name(id='k', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[]), body=[If(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='k', ctx=Load())], keywords=[]), ops=[NotIn()], comparators=[Constant(value='0123456789ABCDEFabcdef')]), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning a double-quoted scalar'), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value='expected escape sequence of %d hexadecimal numbers, but found %r'), op=Mod(), right=Tuple(elts=[Name(id='length', ctx=Load()), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='k', ctx=Load())], keywords=[])], ctx=Load())), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='code', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[]), Constant(value=16)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='chr', ctx=Load()), args=[Name(id='code', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Constant(value='\r\n\x85\u2028\u2029')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_line_break', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='extend', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_flow_scalar_breaks', ctx=Load()), args=[Name(id='double', ctx=Load()), Name(id='start_mark', ctx=Load())], keywords=[])], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning a double-quoted scalar'), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value='found unknown escape character %r'), op=Mod(), right=Name(id='ch', ctx=Load())), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))])])])], orelse=[Return(value=Name(id='chunks', ctx=Load()))])])])], orelse=[])], decorator_list=[]), FunctionDef(name='scan_flow_scalar_spaces', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='double'), arg(arg='start_mark')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='chunks', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='length', ctx=Store())], value=Constant(value=0)), While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[]), ops=[In()], comparators=[Constant(value=' \t')]), body=[AugAssign(target=Name(id='length', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[]), Assign(targets=[Name(id='whitespaces', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='\x00')]), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning a quoted scalar'), Name(id='start_mark', ctx=Load()), Constant(value='found unexpected end of stream'), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Constant(value='\r\n\x85\u2028\u2029')]), body=[Assign(targets=[Name(id='line_break', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_line_break', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='breaks', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_flow_scalar_breaks', ctx=Load()), args=[Name(id='double', ctx=Load()), Name(id='start_mark', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='line_break', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='\n')]), body=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='line_break', ctx=Load())], keywords=[]))], orelse=[If(test=UnaryOp(op=Not(), operand=Name(id='breaks', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value=' ')], keywords=[]))], orelse=[])]), Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='extend', ctx=Load()), args=[Name(id='breaks', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='whitespaces', ctx=Load())], keywords=[]))])]), Return(value=Name(id='chunks', ctx=Load()))], decorator_list=[]), FunctionDef(name='scan_flow_scalar_breaks', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='double'), arg(arg='start_mark')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='chunks', ctx=Store())], value=List(elts=[], ctx=Load())), While(test=Constant(value=True), body=[Assign(targets=[Name(id='prefix', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), args=[Constant(value=3)], keywords=[])), If(test=BoolOp(op=And(), values=[BoolOp(op=Or(), values=[Compare(left=Name(id='prefix', ctx=Load()), ops=[Eq()], comparators=[Constant(value='---')]), Compare(left=Name(id='prefix', ctx=Load()), ops=[Eq()], comparators=[Constant(value='...')])]), Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Constant(value=3)], keywords=[]), ops=[In()], comparators=[Constant(value='\x00 \t\r\n\x85\u2028\u2029')])]), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[Constant(value='while scanning a quoted scalar'), Name(id='start_mark', ctx=Load()), Constant(value='found unexpected document separator'), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[In()], comparators=[Constant(value=' \t')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[In()], comparators=[Constant(value='\r\n\x85\u2028\u2029')]), body=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_line_break', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[Return(value=Name(id='chunks', ctx=Load()))])], orelse=[])], decorator_list=[]), FunctionDef(name='scan_plain', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='chunks', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='start_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='end_mark', ctx=Store())], value=Name(id='start_mark', ctx=Load())), Assign(targets=[Name(id='indent', ctx=Store())], value=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='indent', ctx=Load()), op=Add(), right=Constant(value=1))), Assign(targets=[Name(id='spaces', ctx=Store())], value=List(elts=[], ctx=Load())), While(test=Constant(value=True), body=[Assign(targets=[Name(id='length', ctx=Store())], value=Constant(value=0)), If(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value='#')]), body=[Break()], orelse=[]), While(test=Constant(value=True), body=[Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Constant(value='\x00 \t\r\n\x85\u2028\u2029')]), BoolOp(op=And(), values=[Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value=':')]), Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[BinOp(left=Name(id='length', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[]), ops=[In()], comparators=[BinOp(left=Constant(value='\x00 \t\r\n\x85\u2028\u2029'), op=Add(), right=IfExp(test=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load()), body=Constant(value=',[]{}', kind='u'), orelse=Constant(value='', kind='u')))])]), BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load()), Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Constant(value=',?[]{}')])])]), body=[Break()], orelse=[]), AugAssign(target=Name(id='length', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[]), If(test=Compare(left=Name(id='length', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Break()], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=Constant(value=False)), Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='extend', ctx=Load()), args=[Name(id='spaces', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), Assign(targets=[Name(id='end_mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='spaces', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_plain_spaces', ctx=Load()), args=[Name(id='indent', ctx=Load()), Name(id='start_mark', ctx=Load())], keywords=[])), If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Name(id='spaces', ctx=Load())), Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value='#')]), BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='flow_level', ctx=Load())), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='column', ctx=Load()), ops=[Lt()], comparators=[Name(id='indent', ctx=Load())])])]), body=[Break()], orelse=[])], orelse=[]), Return(value=Call(func=Name(id='ScalarToken', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Name(id='chunks', ctx=Load())], keywords=[]), Constant(value=True), Name(id='start_mark', ctx=Load()), Name(id='end_mark', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='scan_plain_spaces', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='indent'), arg(arg='start_mark')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='chunks', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='length', ctx=Store())], value=Constant(value=0)), While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[]), ops=[In()], comparators=[Constant(value=' ')]), body=[AugAssign(target=Name(id='length', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[]), Assign(targets=[Name(id='whitespaces', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Constant(value='\r\n\x85\u2028\u2029')]), body=[Assign(targets=[Name(id='line_break', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_line_break', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='allow_simple_key', ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='prefix', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), args=[Constant(value=3)], keywords=[])), If(test=BoolOp(op=And(), values=[BoolOp(op=Or(), values=[Compare(left=Name(id='prefix', ctx=Load()), ops=[Eq()], comparators=[Constant(value='---')]), Compare(left=Name(id='prefix', ctx=Load()), ops=[Eq()], comparators=[Constant(value='...')])]), Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Constant(value=3)], keywords=[]), ops=[In()], comparators=[Constant(value='\x00 \t\r\n\x85\u2028\u2029')])]), body=[Return()], orelse=[]), Assign(targets=[Name(id='breaks', ctx=Store())], value=List(elts=[], ctx=Load())), While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[In()], comparators=[Constant(value=' \r\n\x85\u2028\u2029')]), body=[If(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value=' ')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='breaks', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_line_break', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='prefix', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), args=[Constant(value=3)], keywords=[])), If(test=BoolOp(op=And(), values=[BoolOp(op=Or(), values=[Compare(left=Name(id='prefix', ctx=Load()), ops=[Eq()], comparators=[Constant(value='---')]), Compare(left=Name(id='prefix', ctx=Load()), ops=[Eq()], comparators=[Constant(value='...')])]), Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Constant(value=3)], keywords=[]), ops=[In()], comparators=[Constant(value='\x00 \t\r\n\x85\u2028\u2029')])]), body=[Return()], orelse=[])])], orelse=[]), If(test=Compare(left=Name(id='line_break', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='\n')]), body=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='line_break', ctx=Load())], keywords=[]))], orelse=[If(test=UnaryOp(op=Not(), operand=Name(id='breaks', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value=' ')], keywords=[]))], orelse=[])]), Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='extend', ctx=Load()), args=[Name(id='breaks', ctx=Load())], keywords=[]))], orelse=[If(test=Name(id='whitespaces', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='whitespaces', ctx=Load())], keywords=[]))], orelse=[])]), Return(value=Name(id='chunks', ctx=Load()))], decorator_list=[]), FunctionDef(name='scan_tag_handle', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name'), arg(arg='start_mark')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='!')]), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[BinOp(left=Constant(value='while scanning a %s'), op=Mod(), right=Name(id='name', ctx=Load())), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value="expected '!', but found %r"), op=Mod(), right=Name(id='ch', ctx=Load())), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='length', ctx=Store())], value=Constant(value=1)), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[NotEq()], comparators=[Constant(value=' ')]), body=[While(test=BoolOp(op=Or(), values=[Compare(left=Constant(value='0'), ops=[LtE(), LtE()], comparators=[Name(id='ch', ctx=Load()), Constant(value='9')]), Compare(left=Constant(value='A'), ops=[LtE(), LtE()], comparators=[Name(id='ch', ctx=Load()), Constant(value='Z')]), Compare(left=Constant(value='a'), ops=[LtE(), LtE()], comparators=[Name(id='ch', ctx=Load()), Constant(value='z')]), Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Constant(value='-_')])]), body=[AugAssign(target=Name(id='length', ctx=Store()), op=Add(), value=Constant(value=1)), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='!')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[BinOp(left=Constant(value='while scanning a %s'), op=Mod(), right=Name(id='name', ctx=Load())), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value="expected '!', but found %r"), op=Mod(), right=Name(id='ch', ctx=Load())), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), AugAssign(target=Name(id='length', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[]), Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), Return(value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='scan_tag_uri', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name'), arg(arg='start_mark')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='chunks', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='length', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), While(test=BoolOp(op=Or(), values=[Compare(left=Constant(value='0'), ops=[LtE(), LtE()], comparators=[Name(id='ch', ctx=Load()), Constant(value='9')]), Compare(left=Constant(value='A'), ops=[LtE(), LtE()], comparators=[Name(id='ch', ctx=Load()), Constant(value='Z')]), Compare(left=Constant(value='a'), ops=[LtE(), LtE()], comparators=[Name(id='ch', ctx=Load()), Constant(value='z')]), Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Constant(value="-;/?:@&=+$,_.!~*'()[]%")])]), body=[If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[Eq()], comparators=[Constant(value='%')]), body=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), Assign(targets=[Name(id='length', ctx=Store())], value=Constant(value=0)), Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scan_uri_escapes', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='start_mark', ctx=Load())], keywords=[])], keywords=[]))], orelse=[AugAssign(target=Name(id='length', ctx=Store()), op=Add(), value=Constant(value=1))]), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[]))], orelse=[]), If(test=Name(id='length', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='chunks', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[Name(id='length', ctx=Load())], keywords=[])), Assign(targets=[Name(id='length', ctx=Store())], value=Constant(value=0))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='chunks', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[BinOp(left=Constant(value='while parsing a %s'), op=Mod(), right=Name(id='name', ctx=Load())), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value='expected URI, but found %r'), op=Mod(), right=Name(id='ch', ctx=Load())), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Name(id='chunks', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='scan_uri_escapes', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name'), arg(arg='start_mark')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='codes', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='mark', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])), While(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value='%')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[])), For(target=Name(id='k', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=2)], keywords=[]), body=[If(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='k', ctx=Load())], keywords=[]), ops=[NotIn()], comparators=[Constant(value='0123456789ABCDEFabcdef')]), body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[BinOp(left=Constant(value='while scanning a %s'), op=Mod(), right=Name(id='name', ctx=Load())), Name(id='start_mark', ctx=Load()), BinOp(left=Constant(value='expected URI escape sequence of 2 hexadecimal numbers, but found %r'), op=Mod(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[Name(id='k', ctx=Load())], keywords=[])), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_mark', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='codes', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='int', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), args=[Constant(value=2)], keywords=[]), Constant(value=16)], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[Constant(value=2)], keywords=[]))], orelse=[]), Try(body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='bytes', ctx=Load()), args=[Name(id='codes', ctx=Load())], keywords=[]), attr='decode', ctx=Load()), args=[Constant(value='utf-8')], keywords=[]))], handlers=[ExceptHandler(type=Name(id='UnicodeDecodeError', ctx=Load()), name='exc', body=[Raise(exc=Call(func=Name(id='ScannerError', ctx=Load()), args=[BinOp(left=Constant(value='while scanning a %s'), op=Mod(), right=Name(id='name', ctx=Load())), Name(id='start_mark', ctx=Load()), Call(func=Name(id='str', ctx=Load()), args=[Name(id='exc', ctx=Load())], keywords=[]), Name(id='mark', ctx=Load())], keywords=[]))])], orelse=[], finalbody=[]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='scan_line_break', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='peek', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Constant(value='\r\n\x85')]), body=[If(test=Compare(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), args=[Constant(value=2)], keywords=[]), ops=[Eq()], comparators=[Constant(value='\r\n')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[Constant(value=2)], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[]))]), Return(value=Constant(value='\n'))], orelse=[If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Constant(value='\u2028\u2029')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='forward', ctx=Load()), args=[], keywords=[])), Return(value=Name(id='ch', ctx=Load()))], orelse=[])]), Return(value=Constant(value=''))], decorator_list=[])], decorator_list=[])], type_ignores=[])