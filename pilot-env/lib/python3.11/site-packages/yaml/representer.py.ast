Module(body=[Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='BaseRepresenter'), Constant(value='SafeRepresenter'), Constant(value='Representer'), Constant(value='RepresenterError')], ctx=Load())), ImportFrom(module='error', names=[alias(name='*')], level=1), ImportFrom(module='nodes', names=[alias(name='*')], level=1), Import(names=[alias(name='datetime'), alias(name='copyreg'), alias(name='types'), alias(name='base64'), alias(name='collections')]), ClassDef(name='RepresenterError', bases=[Name(id='YAMLError', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='BaseRepresenter', bases=[], keywords=[], body=[Assign(targets=[Name(id='yaml_representers', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='yaml_multi_representers', ctx=Store())], value=Dict(keys=[], values=[])), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='default_style'), arg(arg='default_flow_style'), arg(arg='sort_keys')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=False), Constant(value=True)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='default_style', ctx=Store())], value=Name(id='default_style', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='sort_keys', ctx=Store())], value=Name(id='sort_keys', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='default_flow_style', ctx=Store())], value=Name(id='default_flow_style', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='represented_objects', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='object_keeper', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='alias_key', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='represent', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_data', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='serialize', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='represented_objects', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='object_keeper', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='alias_key', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='represent_data', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='ignore_aliases', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='alias_key', ctx=Store())], value=Constant(value=None))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='alias_key', ctx=Store())], value=Call(func=Name(id='id', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='alias_key', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='alias_key', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='represented_objects', ctx=Load())]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='represented_objects', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='alias_key', ctx=Load()), ctx=Load())), Return(value=Name(id='node', ctx=Load()))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='object_keeper', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='data_types', ctx=Store())], value=Attribute(value=Call(func=Name(id='type', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]), attr='__mro__', ctx=Load())), If(test=Compare(left=Subscript(value=Name(id='data_types', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='yaml_representers', ctx=Load())]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='yaml_representers', ctx=Load()), slice=Subscript(value=Name(id='data_types', ctx=Load()), slice=Constant(value=0), ctx=Load()), ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='data', ctx=Load())], keywords=[]))], orelse=[For(target=Name(id='data_type', ctx=Store()), iter=Name(id='data_types', ctx=Load()), body=[If(test=Compare(left=Name(id='data_type', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='yaml_multi_representers', ctx=Load())]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='yaml_multi_representers', ctx=Load()), slice=Name(id='data_type', ctx=Load()), ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='data', ctx=Load())], keywords=[])), Break()], orelse=[])], orelse=[If(test=Compare(left=Constant(value=None), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='yaml_multi_representers', ctx=Load())]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='yaml_multi_representers', ctx=Load()), slice=Constant(value=None), ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='data', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Constant(value=None), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='yaml_representers', ctx=Load())]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='yaml_representers', ctx=Load()), slice=Constant(value=None), ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='data', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Name(id='ScalarNode', ctx=Load()), args=[Constant(value=None), Call(func=Name(id='str', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[])], keywords=[]))])])])]), Return(value=Name(id='node', ctx=Load()))], decorator_list=[]), FunctionDef(name='add_representer', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='data_type'), arg(arg='representer')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Compare(left=Constant(value='yaml_representers'), ops=[In()], comparators=[Attribute(value=Name(id='cls', ctx=Load()), attr='__dict__', ctx=Load())])), body=[Assign(targets=[Attribute(value=Name(id='cls', ctx=Load()), attr='yaml_representers', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='yaml_representers', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Attribute(value=Name(id='cls', ctx=Load()), attr='yaml_representers', ctx=Load()), slice=Name(id='data_type', ctx=Load()), ctx=Store())], value=Name(id='representer', ctx=Load()))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='add_multi_representer', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='data_type'), arg(arg='representer')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Compare(left=Constant(value='yaml_multi_representers'), ops=[In()], comparators=[Attribute(value=Name(id='cls', ctx=Load()), attr='__dict__', ctx=Load())])), body=[Assign(targets=[Attribute(value=Name(id='cls', ctx=Load()), attr='yaml_multi_representers', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='cls', ctx=Load()), attr='yaml_multi_representers', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Attribute(value=Name(id='cls', ctx=Load()), attr='yaml_multi_representers', ctx=Load()), slice=Name(id='data_type', ctx=Load()), ctx=Store())], value=Name(id='representer', ctx=Load()))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='represent_scalar', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='tag'), arg(arg='value'), arg(arg='style')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='style', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='style', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='default_style', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Name(id='ScalarNode', ctx=Load()), args=[Name(id='tag', ctx=Load()), Name(id='value', ctx=Load())], keywords=[keyword(arg='style', value=Name(id='style', ctx=Load()))])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='alias_key', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='represented_objects', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='alias_key', ctx=Load()), ctx=Store())], value=Name(id='node', ctx=Load()))], orelse=[]), Return(value=Name(id='node', ctx=Load()))], decorator_list=[]), FunctionDef(name='represent_sequence', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='tag'), arg(arg='sequence'), arg(arg='flow_style')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Name(id='SequenceNode', ctx=Load()), args=[Name(id='tag', ctx=Load()), Name(id='value', ctx=Load())], keywords=[keyword(arg='flow_style', value=Name(id='flow_style', ctx=Load()))])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='alias_key', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='represented_objects', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='alias_key', ctx=Load()), ctx=Store())], value=Name(id='node', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='best_style', ctx=Store())], value=Constant(value=True)), For(target=Name(id='item', ctx=Store()), iter=Name(id='sequence', ctx=Load()), body=[Assign(targets=[Name(id='node_item', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_data', ctx=Load()), args=[Name(id='item', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='node_item', ctx=Load()), Name(id='ScalarNode', ctx=Load())], keywords=[]), UnaryOp(op=Not(), operand=Attribute(value=Name(id='node_item', ctx=Load()), attr='style', ctx=Load()))])), body=[Assign(targets=[Name(id='best_style', ctx=Store())], value=Constant(value=False))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='node_item', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='flow_style', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='default_flow_style', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='flow_style', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='default_flow_style', ctx=Load()))], orelse=[Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='flow_style', ctx=Store())], value=Name(id='best_style', ctx=Load()))])], orelse=[]), Return(value=Name(id='node', ctx=Load()))], decorator_list=[]), FunctionDef(name='represent_mapping', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='tag'), arg(arg='mapping'), arg(arg='flow_style')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Name(id='MappingNode', ctx=Load()), args=[Name(id='tag', ctx=Load()), Name(id='value', ctx=Load())], keywords=[keyword(arg='flow_style', value=Name(id='flow_style', ctx=Load()))])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='alias_key', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='represented_objects', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='alias_key', ctx=Load()), ctx=Store())], value=Name(id='node', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='best_style', ctx=Store())], value=Constant(value=True)), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='mapping', ctx=Load()), Constant(value='items')], keywords=[]), body=[Assign(targets=[Name(id='mapping', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='mapping', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[])], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='sort_keys', ctx=Load()), body=[Try(body=[Assign(targets=[Name(id='mapping', ctx=Store())], value=Call(func=Name(id='sorted', ctx=Load()), args=[Name(id='mapping', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='TypeError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], orelse=[])], orelse=[]), For(target=Tuple(elts=[Name(id='item_key', ctx=Store()), Name(id='item_value', ctx=Store())], ctx=Store()), iter=Name(id='mapping', ctx=Load()), body=[Assign(targets=[Name(id='node_key', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_data', ctx=Load()), args=[Name(id='item_key', ctx=Load())], keywords=[])), Assign(targets=[Name(id='node_value', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_data', ctx=Load()), args=[Name(id='item_value', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='node_key', ctx=Load()), Name(id='ScalarNode', ctx=Load())], keywords=[]), UnaryOp(op=Not(), operand=Attribute(value=Name(id='node_key', ctx=Load()), attr='style', ctx=Load()))])), body=[Assign(targets=[Name(id='best_style', ctx=Store())], value=Constant(value=False))], orelse=[]), If(test=UnaryOp(op=Not(), operand=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='node_value', ctx=Load()), Name(id='ScalarNode', ctx=Load())], keywords=[]), UnaryOp(op=Not(), operand=Attribute(value=Name(id='node_value', ctx=Load()), attr='style', ctx=Load()))])), body=[Assign(targets=[Name(id='best_style', ctx=Store())], value=Constant(value=False))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='node_key', ctx=Load()), Name(id='node_value', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='flow_style', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='default_flow_style', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='flow_style', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='default_flow_style', ctx=Load()))], orelse=[Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='flow_style', ctx=Store())], value=Name(id='best_style', ctx=Load()))])], orelse=[]), Return(value=Name(id='node', ctx=Load()))], decorator_list=[]), FunctionDef(name='ignore_aliases', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=False))], decorator_list=[])], decorator_list=[]), ClassDef(name='SafeRepresenter', bases=[Name(id='BaseRepresenter', ctx=Load())], keywords=[], body=[FunctionDef(name='ignore_aliases', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='data', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return(value=Constant(value=True))], orelse=[]), If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='data', ctx=Load()), Name(id='tuple', ctx=Load())], keywords=[]), Compare(left=Name(id='data', ctx=Load()), ops=[Eq()], comparators=[Tuple(elts=[], ctx=Load())])]), body=[Return(value=Constant(value=True))], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='data', ctx=Load()), Tuple(elts=[Name(id='str', ctx=Load()), Name(id='bytes', ctx=Load()), Name(id='bool', ctx=Load()), Name(id='int', ctx=Load()), Name(id='float', ctx=Load())], ctx=Load())], keywords=[]), body=[Return(value=Constant(value=True))], orelse=[])], decorator_list=[]), FunctionDef(name='represent_none', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_scalar', ctx=Load()), args=[Constant(value='tag:yaml.org,2002:null'), Constant(value='null')], keywords=[]))], decorator_list=[]), FunctionDef(name='represent_str', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_scalar', ctx=Load()), args=[Constant(value='tag:yaml.org,2002:str'), Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='represent_binary', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='base64', ctx=Load()), Constant(value='encodebytes')], keywords=[]), body=[Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='base64', ctx=Load()), attr='encodebytes', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]), attr='decode', ctx=Load()), args=[Constant(value='ascii')], keywords=[]))], orelse=[Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='base64', ctx=Load()), attr='encodestring', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]), attr='decode', ctx=Load()), args=[Constant(value='ascii')], keywords=[]))]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_scalar', ctx=Load()), args=[Constant(value='tag:yaml.org,2002:binary'), Name(id='data', ctx=Load())], keywords=[keyword(arg='style', value=Constant(value='|'))]))], decorator_list=[]), FunctionDef(name='represent_bool', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Name(id='data', ctx=Load()), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Constant(value='true'))], orelse=[Assign(targets=[Name(id='value', ctx=Store())], value=Constant(value='false'))]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_scalar', ctx=Load()), args=[Constant(value='tag:yaml.org,2002:bool'), Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='represent_int', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_scalar', ctx=Load()), args=[Constant(value='tag:yaml.org,2002:int'), Call(func=Name(id='str', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='inf_value', ctx=Store())], value=Constant(value=1e+300)), While(test=Compare(left=Call(func=Name(id='repr', ctx=Load()), args=[Name(id='inf_value', ctx=Load())], keywords=[]), ops=[NotEq()], comparators=[Call(func=Name(id='repr', ctx=Load()), args=[BinOp(left=Name(id='inf_value', ctx=Load()), op=Mult(), right=Name(id='inf_value', ctx=Load()))], keywords=[])]), body=[AugAssign(target=Name(id='inf_value', ctx=Store()), op=Mult(), value=Name(id='inf_value', ctx=Load()))], orelse=[]), FunctionDef(name='represent_float', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='data', ctx=Load()), ops=[NotEq()], comparators=[Name(id='data', ctx=Load())]), BoolOp(op=And(), values=[Compare(left=Name(id='data', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0.0)]), Compare(left=Name(id='data', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1.0)])])]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Constant(value='.nan'))], orelse=[If(test=Compare(left=Name(id='data', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='inf_value', ctx=Load())]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Constant(value='.inf'))], orelse=[If(test=Compare(left=Name(id='data', ctx=Load()), ops=[Eq()], comparators=[UnaryOp(op=USub(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='inf_value', ctx=Load()))]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Constant(value='-.inf'))], orelse=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='repr', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]), attr='lower', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Constant(value='.'), ops=[NotIn()], comparators=[Name(id='value', ctx=Load())]), Compare(left=Constant(value='e'), ops=[In()], comparators=[Name(id='value', ctx=Load())])]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='e'), Constant(value='.0e'), Constant(value=1)], keywords=[]))], orelse=[])])])]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_scalar', ctx=Load()), args=[Constant(value='tag:yaml.org,2002:float'), Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='represent_list', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_sequence', ctx=Load()), args=[Constant(value='tag:yaml.org,2002:seq'), Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='represent_dict', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_mapping', ctx=Load()), args=[Constant(value='tag:yaml.org,2002:map'), Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='represent_set', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Name(id='key', ctx=Store()), iter=Name(id='data', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='value', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store())], value=Constant(value=None))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_mapping', ctx=Load()), args=[Constant(value='tag:yaml.org,2002:set'), Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='represent_date', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='isoformat', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_scalar', ctx=Load()), args=[Constant(value='tag:yaml.org,2002:timestamp'), Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='represent_datetime', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='isoformat', ctx=Load()), args=[Constant(value=' ')], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_scalar', ctx=Load()), args=[Constant(value='tag:yaml.org,2002:timestamp'), Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='represent_yaml_object', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='tag'), arg(arg='data'), arg(arg='cls'), arg(arg='flow_style')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='data', ctx=Load()), Constant(value='__getstate__')], keywords=[]), body=[Assign(targets=[Name(id='state', ctx=Store())], value=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='__getstate__', ctx=Load()), args=[], keywords=[]))], orelse=[Assign(targets=[Name(id='state', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='data', ctx=Load()), attr='__dict__', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[]))]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_mapping', ctx=Load()), args=[Name(id='tag', ctx=Load()), Name(id='state', ctx=Load())], keywords=[keyword(arg='flow_style', value=Name(id='flow_style', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='represent_undefined', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Call(func=Name(id='RepresenterError', ctx=Load()), args=[Constant(value='cannot represent an object'), Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), Expr(value=Call(func=Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='add_representer', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Constant(value=None)], keywords=[]), Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='represent_none', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='add_representer', ctx=Load()), args=[Name(id='str', ctx=Load()), Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='represent_str', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='add_representer', ctx=Load()), args=[Name(id='bytes', ctx=Load()), Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='represent_binary', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='add_representer', ctx=Load()), args=[Name(id='bool', ctx=Load()), Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='represent_bool', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='add_representer', ctx=Load()), args=[Name(id='int', ctx=Load()), Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='represent_int', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='add_representer', ctx=Load()), args=[Name(id='float', ctx=Load()), Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='represent_float', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='add_representer', ctx=Load()), args=[Name(id='list', ctx=Load()), Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='represent_list', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='add_representer', ctx=Load()), args=[Name(id='tuple', ctx=Load()), Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='represent_list', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='add_representer', ctx=Load()), args=[Name(id='dict', ctx=Load()), Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='represent_dict', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='add_representer', ctx=Load()), args=[Name(id='set', ctx=Load()), Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='represent_set', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='add_representer', ctx=Load()), args=[Attribute(value=Name(id='datetime', ctx=Load()), attr='date', ctx=Load()), Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='represent_date', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='add_representer', ctx=Load()), args=[Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='represent_datetime', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='add_representer', ctx=Load()), args=[Constant(value=None), Attribute(value=Name(id='SafeRepresenter', ctx=Load()), attr='represent_undefined', ctx=Load())], keywords=[])), ClassDef(name='Representer', bases=[Name(id='SafeRepresenter', ctx=Load())], keywords=[], body=[FunctionDef(name='represent_complex', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='data', ctx=Load()), attr='imag', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0.0)]), body=[Assign(targets=[Name(id='data', ctx=Store())], value=BinOp(left=Constant(value='%r'), op=Mod(), right=Attribute(value=Name(id='data', ctx=Load()), attr='real', ctx=Load())))], orelse=[If(test=Compare(left=Attribute(value=Name(id='data', ctx=Load()), attr='real', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0.0)]), body=[Assign(targets=[Name(id='data', ctx=Store())], value=BinOp(left=Constant(value='%rj'), op=Mod(), right=Attribute(value=Name(id='data', ctx=Load()), attr='imag', ctx=Load())))], orelse=[If(test=Compare(left=Attribute(value=Name(id='data', ctx=Load()), attr='imag', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), body=[Assign(targets=[Name(id='data', ctx=Store())], value=BinOp(left=Constant(value='%r+%rj'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='data', ctx=Load()), attr='real', ctx=Load()), Attribute(value=Name(id='data', ctx=Load()), attr='imag', ctx=Load())], ctx=Load())))], orelse=[Assign(targets=[Name(id='data', ctx=Store())], value=BinOp(left=Constant(value='%r%rj'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='data', ctx=Load()), attr='real', ctx=Load()), Attribute(value=Name(id='data', ctx=Load()), attr='imag', ctx=Load())], ctx=Load())))])])]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_scalar', ctx=Load()), args=[Constant(value='tag:yaml.org,2002:python/complex'), Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='represent_tuple', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_sequence', ctx=Load()), args=[Constant(value='tag:yaml.org,2002:python/tuple'), Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='represent_name', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='name', ctx=Store())], value=BinOp(left=Constant(value='%s.%s'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='data', ctx=Load()), attr='__module__', ctx=Load()), Attribute(value=Name(id='data', ctx=Load()), attr='__name__', ctx=Load())], ctx=Load()))), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_scalar', ctx=Load()), args=[BinOp(left=Constant(value='tag:yaml.org,2002:python/name:'), op=Add(), right=Name(id='name', ctx=Load())), Constant(value='')], keywords=[]))], decorator_list=[]), FunctionDef(name='represent_module', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_scalar', ctx=Load()), args=[BinOp(left=Constant(value='tag:yaml.org,2002:python/module:'), op=Add(), right=Attribute(value=Name(id='data', ctx=Load()), attr='__name__', ctx=Load())), Constant(value='')], keywords=[]))], decorator_list=[]), FunctionDef(name='represent_object', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='cls', ctx=Store())], value=Call(func=Name(id='type', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='cls', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='copyreg', ctx=Load()), attr='dispatch_table', ctx=Load())]), body=[Assign(targets=[Name(id='reduce', ctx=Store())], value=Call(func=Subscript(value=Attribute(value=Name(id='copyreg', ctx=Load()), attr='dispatch_table', ctx=Load()), slice=Name(id='cls', ctx=Load()), ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='data', ctx=Load()), Constant(value='__reduce_ex__')], keywords=[]), body=[Assign(targets=[Name(id='reduce', ctx=Store())], value=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='__reduce_ex__', ctx=Load()), args=[Constant(value=2)], keywords=[]))], orelse=[If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='data', ctx=Load()), Constant(value='__reduce__')], keywords=[]), body=[Assign(targets=[Name(id='reduce', ctx=Store())], value=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='__reduce__', ctx=Load()), args=[], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='RepresenterError', ctx=Load()), args=[Constant(value='cannot represent an object'), Name(id='data', ctx=Load())], keywords=[]))])])]), Assign(targets=[Name(id='reduce', ctx=Store())], value=Subscript(value=BinOp(left=Call(func=Name(id='list', ctx=Load()), args=[Name(id='reduce', ctx=Load())], keywords=[]), op=Add(), right=BinOp(left=List(elts=[Constant(value=None)], ctx=Load()), op=Mult(), right=Constant(value=5))), slice=Slice(upper=Constant(value=5)), ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='function', ctx=Store()), Name(id='args', ctx=Store()), Name(id='state', ctx=Store()), Name(id='listitems', ctx=Store()), Name(id='dictitems', ctx=Store())], ctx=Store())], value=Name(id='reduce', ctx=Load())), Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='state', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='state', ctx=Store())], value=Dict(keys=[], values=[]))], orelse=[]), If(test=Compare(left=Name(id='listitems', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='listitems', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Name(id='listitems', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='dictitems', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='dictitems', ctx=Store())], value=Call(func=Name(id='dict', ctx=Load()), args=[Name(id='dictitems', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='function', ctx=Load()), attr='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__newobj__')]), body=[Assign(targets=[Name(id='function', ctx=Store())], value=Subscript(value=Name(id='args', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='args', ctx=Store())], value=Subscript(value=Name(id='args', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load())), Assign(targets=[Name(id='tag', ctx=Store())], value=Constant(value='tag:yaml.org,2002:python/object/new:')), Assign(targets=[Name(id='newobj', ctx=Store())], value=Constant(value=True))], orelse=[Assign(targets=[Name(id='tag', ctx=Store())], value=Constant(value='tag:yaml.org,2002:python/object/apply:')), Assign(targets=[Name(id='newobj', ctx=Store())], value=Constant(value=False))]), Assign(targets=[Name(id='function_name', ctx=Store())], value=BinOp(left=Constant(value='%s.%s'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='function', ctx=Load()), attr='__module__', ctx=Load()), Attribute(value=Name(id='function', ctx=Load()), attr='__name__', ctx=Load())], ctx=Load()))), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='args', ctx=Load())), UnaryOp(op=Not(), operand=Name(id='listitems', ctx=Load())), UnaryOp(op=Not(), operand=Name(id='dictitems', ctx=Load())), Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='state', ctx=Load()), Name(id='dict', ctx=Load())], keywords=[]), Name(id='newobj', ctx=Load())]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_mapping', ctx=Load()), args=[BinOp(left=Constant(value='tag:yaml.org,2002:python/object:'), op=Add(), right=Name(id='function_name', ctx=Load())), Name(id='state', ctx=Load())], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='listitems', ctx=Load())), UnaryOp(op=Not(), operand=Name(id='dictitems', ctx=Load())), Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='state', ctx=Load()), Name(id='dict', ctx=Load())], keywords=[]), UnaryOp(op=Not(), operand=Name(id='state', ctx=Load()))]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_sequence', ctx=Load()), args=[BinOp(left=Name(id='tag', ctx=Load()), op=Add(), right=Name(id='function_name', ctx=Load())), Name(id='args', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='value', ctx=Store())], value=Dict(keys=[], values=[])), If(test=Name(id='args', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='value', ctx=Load()), slice=Constant(value='args'), ctx=Store())], value=Name(id='args', ctx=Load()))], orelse=[]), If(test=BoolOp(op=Or(), values=[Name(id='state', ctx=Load()), UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='state', ctx=Load()), Name(id='dict', ctx=Load())], keywords=[]))]), body=[Assign(targets=[Subscript(value=Name(id='value', ctx=Load()), slice=Constant(value='state'), ctx=Store())], value=Name(id='state', ctx=Load()))], orelse=[]), If(test=Name(id='listitems', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='value', ctx=Load()), slice=Constant(value='listitems'), ctx=Store())], value=Name(id='listitems', ctx=Load()))], orelse=[]), If(test=Name(id='dictitems', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='value', ctx=Load()), slice=Constant(value='dictitems'), ctx=Store())], value=Name(id='dictitems', ctx=Load()))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_mapping', ctx=Load()), args=[BinOp(left=Name(id='tag', ctx=Load()), op=Add(), right=Name(id='function_name', ctx=Load())), Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='represent_ordered_dict', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='data_type', ctx=Store())], value=Call(func=Name(id='type', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[])), Assign(targets=[Name(id='tag', ctx=Store())], value=BinOp(left=Constant(value='tag:yaml.org,2002:python/object/apply:%s.%s'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='data_type', ctx=Load()), attr='__module__', ctx=Load()), Attribute(value=Name(id='data_type', ctx=Load()), attr='__name__', ctx=Load())], ctx=Load()))), Assign(targets=[Name(id='items', ctx=Store())], value=ListComp(elt=List(elts=[Name(id='key', ctx=Load()), Name(id='value', ctx=Load())], ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='key', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='represent_sequence', ctx=Load()), args=[Name(id='tag', ctx=Load()), List(elts=[Name(id='items', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), Expr(value=Call(func=Attribute(value=Name(id='Representer', ctx=Load()), attr='add_representer', ctx=Load()), args=[Name(id='complex', ctx=Load()), Attribute(value=Name(id='Representer', ctx=Load()), attr='represent_complex', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='Representer', ctx=Load()), attr='add_representer', ctx=Load()), args=[Name(id='tuple', ctx=Load()), Attribute(value=Name(id='Representer', ctx=Load()), attr='represent_tuple', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='Representer', ctx=Load()), attr='add_multi_representer', ctx=Load()), args=[Name(id='type', ctx=Load()), Attribute(value=Name(id='Representer', ctx=Load()), attr='represent_name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='Representer', ctx=Load()), attr='add_representer', ctx=Load()), args=[Attribute(value=Name(id='collections', ctx=Load()), attr='OrderedDict', ctx=Load()), Attribute(value=Name(id='Representer', ctx=Load()), attr='represent_ordered_dict', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='Representer', ctx=Load()), attr='add_representer', ctx=Load()), args=[Attribute(value=Name(id='types', ctx=Load()), attr='FunctionType', ctx=Load()), Attribute(value=Name(id='Representer', ctx=Load()), attr='represent_name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='Representer', ctx=Load()), attr='add_representer', ctx=Load()), args=[Attribute(value=Name(id='types', ctx=Load()), attr='BuiltinFunctionType', ctx=Load()), Attribute(value=Name(id='Representer', ctx=Load()), attr='represent_name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='Representer', ctx=Load()), attr='add_representer', ctx=Load()), args=[Attribute(value=Name(id='types', ctx=Load()), attr='ModuleType', ctx=Load()), Attribute(value=Name(id='Representer', ctx=Load()), attr='represent_module', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='Representer', ctx=Load()), attr='add_multi_representer', ctx=Load()), args=[Name(id='object', ctx=Load()), Attribute(value=Name(id='Representer', ctx=Load()), attr='represent_object', ctx=Load())], keywords=[]))], type_ignores=[])