Module(body=[ImportFrom(module='fractions', names=[alias(name='Fraction')], level=0), Import(names=[alias(name='re')]), ImportFrom(module='jsonschema._utils', names=[alias(name='ensure_list'), alias(name='equal'), alias(name='extras_msg'), alias(name='find_additional_properties'), alias(name='find_evaluated_item_indexes_by_schema'), alias(name='find_evaluated_property_keys_by_schema'), alias(name='unbool'), alias(name='uniq')], level=0), ImportFrom(module='jsonschema.exceptions', names=[alias(name='FormatError'), alias(name='ValidationError')], level=0), FunctionDef(name='patternProperties', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='patternProperties'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='object')], keywords=[])), body=[Return()], orelse=[]), For(target=Tuple(elts=[Name(id='pattern', ctx=Store()), Name(id='subschema', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='patternProperties', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='instance', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='search', ctx=Load()), args=[Name(id='pattern', ctx=Load()), Name(id='k', ctx=Load())], keywords=[]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Name(id='v', ctx=Load()), Name(id='subschema', ctx=Load())], keywords=[keyword(arg='path', value=Name(id='k', ctx=Load())), keyword(arg='schema_path', value=Name(id='pattern', ctx=Load()))])))], orelse=[])], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='propertyNames', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='propertyNames'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='object')], keywords=[])), body=[Return()], orelse=[]), For(target=Name(id='property', ctx=Store()), iter=Name(id='instance', ctx=Load()), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[], keywords=[keyword(arg='instance', value=Name(id='property', ctx=Load())), keyword(arg='schema', value=Name(id='propertyNames', ctx=Load()))])))], orelse=[])], decorator_list=[]), FunctionDef(name='additionalProperties', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='aP'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='object')], keywords=[])), body=[Return()], orelse=[]), Assign(targets=[Name(id='extras', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[Call(func=Name(id='find_additional_properties', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='schema', ctx=Load())], keywords=[])], keywords=[])), If(test=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='aP', ctx=Load()), Constant(value='object')], keywords=[]), body=[For(target=Name(id='extra', ctx=Store()), iter=Name(id='extras', ctx=Load()), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Subscript(value=Name(id='instance', ctx=Load()), slice=Name(id='extra', ctx=Load()), ctx=Load()), Name(id='aP', ctx=Load())], keywords=[keyword(arg='path', value=Name(id='extra', ctx=Load()))])))], orelse=[])], orelse=[If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='aP', ctx=Load())), Name(id='extras', ctx=Load())]), body=[If(test=Compare(left=Constant(value='patternProperties'), ops=[In()], comparators=[Name(id='schema', ctx=Load())]), body=[Assign(targets=[Name(id='verb', ctx=Store())], value=IfExp(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='extras', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), body=Constant(value='does'), orelse=Constant(value='do'))), Assign(targets=[Name(id='joined', ctx=Store())], value=Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='repr', ctx=Load()), args=[Name(id='each', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='each', ctx=Store()), iter=Call(func=Name(id='sorted', ctx=Load()), args=[Name(id='extras', ctx=Load())], keywords=[]), ifs=[], is_async=0)])], keywords=[])), Assign(targets=[Name(id='patterns', ctx=Store())], value=Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='repr', ctx=Load()), args=[Name(id='each', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='each', ctx=Store()), iter=Call(func=Name(id='sorted', ctx=Load()), args=[Subscript(value=Name(id='schema', ctx=Load()), slice=Constant(value='patternProperties'), ctx=Load())], keywords=[]), ifs=[], is_async=0)])], keywords=[])), Assign(targets=[Name(id='error', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='joined', ctx=Load()), conversion=-1), Constant(value=' '), FormattedValue(value=Name(id='verb', ctx=Load()), conversion=-1), Constant(value=' not match any of the regexes: '), FormattedValue(value=Name(id='patterns', ctx=Load()), conversion=-1)])), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[Name(id='error', ctx=Load())], keywords=[])))], orelse=[Assign(targets=[Name(id='error', ctx=Store())], value=Constant(value='Additional properties are not allowed (%s %s unexpected)')), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[BinOp(left=Name(id='error', ctx=Load()), op=Mod(), right=Call(func=Name(id='extras_msg', ctx=Load()), args=[Call(func=Name(id='sorted', ctx=Load()), args=[Name(id='extras', ctx=Load())], keywords=[keyword(arg='key', value=Name(id='str', ctx=Load()))])], keywords=[]))], keywords=[])))])], orelse=[])])], decorator_list=[]), FunctionDef(name='items', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='items'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='array')], keywords=[])), body=[Return()], orelse=[]), Assign(targets=[Name(id='prefix', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='schema', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='prefixItems'), List(elts=[], ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='total', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[])), Assign(targets=[Name(id='extra', ctx=Store())], value=BinOp(left=Name(id='total', ctx=Load()), op=Sub(), right=Name(id='prefix', ctx=Load()))), If(test=Compare(left=Name(id='extra', ctx=Load()), ops=[LtE()], comparators=[Constant(value=0)]), body=[Return()], orelse=[]), If(test=Compare(left=Name(id='items', ctx=Load()), ops=[Is()], comparators=[Constant(value=False)]), body=[Assign(targets=[Name(id='rest', ctx=Store())], value=IfExp(test=Compare(left=Name(id='extra', ctx=Load()), ops=[NotEq()], comparators=[Constant(value=1)]), body=Subscript(value=Name(id='instance', ctx=Load()), slice=Slice(lower=Name(id='prefix', ctx=Load())), ctx=Load()), orelse=Subscript(value=Name(id='instance', ctx=Load()), slice=Name(id='prefix', ctx=Load()), ctx=Load()))), Assign(targets=[Name(id='item', ctx=Store())], value=IfExp(test=Compare(left=Name(id='prefix', ctx=Load()), ops=[NotEq()], comparators=[Constant(value=1)]), body=Constant(value='items'), orelse=Constant(value='item'))), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Expected at most '), FormattedValue(value=Name(id='prefix', ctx=Load()), conversion=-1), Constant(value=' '), FormattedValue(value=Name(id='item', ctx=Load()), conversion=-1), Constant(value=' but found '), FormattedValue(value=Name(id='extra', ctx=Load()), conversion=-1), Constant(value=' extra: '), FormattedValue(value=Name(id='rest', ctx=Load()), conversion=114)])], keywords=[])))], orelse=[For(target=Name(id='index', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='prefix', ctx=Load()), Name(id='total', ctx=Load())], keywords=[]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[], keywords=[keyword(arg='instance', value=Subscript(value=Name(id='instance', ctx=Load()), slice=Name(id='index', ctx=Load()), ctx=Load())), keyword(arg='schema', value=Name(id='items', ctx=Load())), keyword(arg='path', value=Name(id='index', ctx=Load()))])))], orelse=[])])], decorator_list=[]), FunctionDef(name='const', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='const'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='equal', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='const', ctx=Load())], keywords=[])), body=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='const', ctx=Load()), conversion=114), Constant(value=' was expected')])], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='contains', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='contains'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='array')], keywords=[])), body=[Return()], orelse=[]), Assign(targets=[Name(id='matches', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='min_contains', ctx=Store())], value=Call(func=Attribute(value=Name(id='schema', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='minContains'), Constant(value=1)], keywords=[])), Assign(targets=[Name(id='max_contains', ctx=Store())], value=Call(func=Attribute(value=Name(id='schema', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='maxContains'), Call(func=Name(id='len', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[])], keywords=[])), For(target=Name(id='each', ctx=Store()), iter=Name(id='instance', ctx=Load()), body=[If(test=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='evolve', ctx=Load()), args=[], keywords=[keyword(arg='schema', value=Name(id='contains', ctx=Load()))]), attr='is_valid', ctx=Load()), args=[Name(id='each', ctx=Load())], keywords=[]), body=[AugAssign(target=Name(id='matches', ctx=Store()), op=Add(), value=Constant(value=1)), If(test=Compare(left=Name(id='matches', ctx=Load()), ops=[Gt()], comparators=[Name(id='max_contains', ctx=Load())]), body=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Too many items match the given schema (expected at most '), FormattedValue(value=Name(id='max_contains', ctx=Load()), conversion=-1), Constant(value=')')])], keywords=[keyword(arg='validator', value=Constant(value='maxContains')), keyword(arg='validator_value', value=Name(id='max_contains', ctx=Load()))]))), Return()], orelse=[])], orelse=[])], orelse=[]), If(test=Compare(left=Name(id='matches', ctx=Load()), ops=[Lt()], comparators=[Name(id='min_contains', ctx=Load())]), body=[If(test=UnaryOp(op=Not(), operand=Name(id='matches', ctx=Load())), body=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' does not contain items matching the given schema')])], keywords=[])))], orelse=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Too few items match the given schema (expected at least '), FormattedValue(value=Name(id='min_contains', ctx=Load()), conversion=-1), Constant(value=' but only '), FormattedValue(value=Name(id='matches', ctx=Load()), conversion=-1), Constant(value=' matched)')])], keywords=[keyword(arg='validator', value=Constant(value='minContains')), keyword(arg='validator_value', value=Name(id='min_contains', ctx=Load()))])))])], orelse=[])], decorator_list=[]), FunctionDef(name='exclusiveMinimum', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='minimum'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='number')], keywords=[])), body=[Return()], orelse=[]), If(test=Compare(left=Name(id='instance', ctx=Load()), ops=[LtE()], comparators=[Name(id='minimum', ctx=Load())]), body=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' is less than or equal to the minimum of '), FormattedValue(value=Name(id='minimum', ctx=Load()), conversion=114)])], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='exclusiveMaximum', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='maximum'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='number')], keywords=[])), body=[Return()], orelse=[]), If(test=Compare(left=Name(id='instance', ctx=Load()), ops=[GtE()], comparators=[Name(id='maximum', ctx=Load())]), body=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' is greater than or equal to the maximum of '), FormattedValue(value=Name(id='maximum', ctx=Load()), conversion=114)])], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='minimum', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='minimum'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='number')], keywords=[])), body=[Return()], orelse=[]), If(test=Compare(left=Name(id='instance', ctx=Load()), ops=[Lt()], comparators=[Name(id='minimum', ctx=Load())]), body=[Assign(targets=[Name(id='message', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' is less than the minimum of '), FormattedValue(value=Name(id='minimum', ctx=Load()), conversion=114)])), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='maximum', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='maximum'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='number')], keywords=[])), body=[Return()], orelse=[]), If(test=Compare(left=Name(id='instance', ctx=Load()), ops=[Gt()], comparators=[Name(id='maximum', ctx=Load())]), body=[Assign(targets=[Name(id='message', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' is greater than the maximum of '), FormattedValue(value=Name(id='maximum', ctx=Load()), conversion=114)])), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='multipleOf', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='dB'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='number')], keywords=[])), body=[Return()], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='dB', ctx=Load()), Name(id='float', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='quotient', ctx=Store())], value=BinOp(left=Name(id='instance', ctx=Load()), op=Div(), right=Name(id='dB', ctx=Load()))), Try(body=[Assign(targets=[Name(id='failed', ctx=Store())], value=Compare(left=Call(func=Name(id='int', ctx=Load()), args=[Name(id='quotient', ctx=Load())], keywords=[]), ops=[NotEq()], comparators=[Name(id='quotient', ctx=Load())]))], handlers=[ExceptHandler(type=Name(id='OverflowError', ctx=Load()), body=[Assign(targets=[Name(id='failed', ctx=Store())], value=Compare(left=Attribute(value=BinOp(left=Call(func=Name(id='Fraction', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), op=Div(), right=Call(func=Name(id='Fraction', ctx=Load()), args=[Name(id='dB', ctx=Load())], keywords=[])), attr='denominator', ctx=Load()), ops=[NotEq()], comparators=[Constant(value=1)]))])], orelse=[], finalbody=[])], orelse=[Assign(targets=[Name(id='failed', ctx=Store())], value=BinOp(left=Name(id='instance', ctx=Load()), op=Mod(), right=Name(id='dB', ctx=Load())))]), If(test=Name(id='failed', ctx=Load()), body=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' is not a multiple of '), FormattedValue(value=Name(id='dB', ctx=Load()), conversion=-1)])], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='minItems', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='mI'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='array')], keywords=[]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), ops=[Lt()], comparators=[Name(id='mI', ctx=Load())])]), body=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' is too short')])], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='maxItems', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='mI'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='array')], keywords=[]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Name(id='mI', ctx=Load())])]), body=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' is too long')])], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='uniqueItems', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='uI'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Name(id='uI', ctx=Load()), Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='array')], keywords=[]), UnaryOp(op=Not(), operand=Call(func=Name(id='uniq', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]))]), body=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' has non-unique elements')])], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='pattern', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='patrn'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='string')], keywords=[]), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='search', ctx=Load()), args=[Name(id='patrn', ctx=Load()), Name(id='instance', ctx=Load())], keywords=[]))]), body=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' does not match '), FormattedValue(value=Name(id='patrn', ctx=Load()), conversion=114)])], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='format', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='format'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='validator', ctx=Load()), attr='format_checker', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Try(body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='validator', ctx=Load()), attr='format_checker', ctx=Load()), attr='check', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='format', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='FormatError', ctx=Load()), name='error', body=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[Attribute(value=Name(id='error', ctx=Load()), attr='message', ctx=Load())], keywords=[keyword(arg='cause', value=Attribute(value=Name(id='error', ctx=Load()), attr='cause', ctx=Load()))])))])], orelse=[], finalbody=[])], orelse=[])], decorator_list=[]), FunctionDef(name='minLength', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='mL'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='string')], keywords=[]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), ops=[Lt()], comparators=[Name(id='mL', ctx=Load())])]), body=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' is too short')])], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='maxLength', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='mL'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='string')], keywords=[]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Name(id='mL', ctx=Load())])]), body=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' is too long')])], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='dependentRequired', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='dependentRequired'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='object')], keywords=[])), body=[Return()], orelse=[]), For(target=Tuple(elts=[Name(id='property', ctx=Store()), Name(id='dependency', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='dependentRequired', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Compare(left=Name(id='property', ctx=Load()), ops=[NotIn()], comparators=[Name(id='instance', ctx=Load())]), body=[Continue()], orelse=[]), For(target=Name(id='each', ctx=Store()), iter=Name(id='dependency', ctx=Load()), body=[If(test=Compare(left=Name(id='each', ctx=Load()), ops=[NotIn()], comparators=[Name(id='instance', ctx=Load())]), body=[Assign(targets=[Name(id='message', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='each', ctx=Load()), conversion=114), Constant(value=' is a dependency of '), FormattedValue(value=Name(id='property', ctx=Load()), conversion=114)])), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[])))], orelse=[])], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='dependentSchemas', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='dependentSchemas'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='object')], keywords=[])), body=[Return()], orelse=[]), For(target=Tuple(elts=[Name(id='property', ctx=Store()), Name(id='dependency', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='dependentSchemas', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Compare(left=Name(id='property', ctx=Load()), ops=[NotIn()], comparators=[Name(id='instance', ctx=Load())]), body=[Continue()], orelse=[]), Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='dependency', ctx=Load())], keywords=[keyword(arg='schema_path', value=Name(id='property', ctx=Load()))])))], orelse=[])], decorator_list=[]), FunctionDef(name='enum', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='enums'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='instance', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), Compare(left=Name(id='instance', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)])]), body=[Assign(targets=[Name(id='unbooled', ctx=Store())], value=Call(func=Name(id='unbool', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='all', ctx=Load()), args=[GeneratorExp(elt=Compare(left=Name(id='unbooled', ctx=Load()), ops=[NotEq()], comparators=[Call(func=Name(id='unbool', ctx=Load()), args=[Name(id='each', ctx=Load())], keywords=[])]), generators=[comprehension(target=Name(id='each', ctx=Store()), iter=Name(id='enums', ctx=Load()), ifs=[], is_async=0)])], keywords=[]), body=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' is not one of '), FormattedValue(value=Name(id='enums', ctx=Load()), conversion=114)])], keywords=[])))], orelse=[])], orelse=[If(test=Compare(left=Name(id='instance', ctx=Load()), ops=[NotIn()], comparators=[Name(id='enums', ctx=Load())]), body=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' is not one of '), FormattedValue(value=Name(id='enums', ctx=Load()), conversion=114)])], keywords=[])))], orelse=[])])], decorator_list=[]), FunctionDef(name='ref', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='ref'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='_validate_reference', ctx=Load()), args=[], keywords=[keyword(arg='ref', value=Name(id='ref', ctx=Load())), keyword(arg='instance', value=Name(id='instance', ctx=Load()))])))], decorator_list=[]), FunctionDef(name='dynamicRef', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='dynamicRef'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='_validate_reference', ctx=Load()), args=[], keywords=[keyword(arg='ref', value=Name(id='dynamicRef', ctx=Load())), keyword(arg='instance', value=Name(id='instance', ctx=Load()))])))], decorator_list=[]), FunctionDef(name='type', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='types'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='types', ctx=Store())], value=Call(func=Name(id='ensure_list', ctx=Load()), args=[Name(id='types', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='any', ctx=Load()), args=[GeneratorExp(elt=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='type', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='type', ctx=Store()), iter=Name(id='types', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), body=[Assign(targets=[Name(id='reprs', ctx=Store())], value=Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='repr', ctx=Load()), args=[Name(id='type', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='type', ctx=Store()), iter=Name(id='types', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' is not of type '), FormattedValue(value=Name(id='reprs', ctx=Load()), conversion=-1)])], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='properties', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='properties'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='object')], keywords=[])), body=[Return()], orelse=[]), For(target=Tuple(elts=[Name(id='property', ctx=Store()), Name(id='subschema', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='properties', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Compare(left=Name(id='property', ctx=Load()), ops=[In()], comparators=[Name(id='instance', ctx=Load())]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Subscript(value=Name(id='instance', ctx=Load()), slice=Name(id='property', ctx=Load()), ctx=Load()), Name(id='subschema', ctx=Load())], keywords=[keyword(arg='path', value=Name(id='property', ctx=Load())), keyword(arg='schema_path', value=Name(id='property', ctx=Load()))])))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='required', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='required'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='object')], keywords=[])), body=[Return()], orelse=[]), For(target=Name(id='property', ctx=Store()), iter=Name(id='required', ctx=Load()), body=[If(test=Compare(left=Name(id='property', ctx=Load()), ops=[NotIn()], comparators=[Name(id='instance', ctx=Load())]), body=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='property', ctx=Load()), conversion=114), Constant(value=' is a required property')])], keywords=[])))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='minProperties', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='mP'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='object')], keywords=[]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), ops=[Lt()], comparators=[Name(id='mP', ctx=Load())])]), body=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' does not have enough properties')])], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='maxProperties', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='mP'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='object')], keywords=[])), body=[Return()], orelse=[]), If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='object')], keywords=[]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Name(id='mP', ctx=Load())])]), body=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' has too many properties')])], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='allOf', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='allOf'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Tuple(elts=[Name(id='index', ctx=Store()), Name(id='subschema', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='allOf', ctx=Load())], keywords=[]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='subschema', ctx=Load())], keywords=[keyword(arg='schema_path', value=Name(id='index', ctx=Load()))])))], orelse=[])], decorator_list=[]), FunctionDef(name='anyOf', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='anyOf'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='all_errors', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Tuple(elts=[Name(id='index', ctx=Store()), Name(id='subschema', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='anyOf', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='errs', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='subschema', ctx=Load())], keywords=[keyword(arg='schema_path', value=Name(id='index', ctx=Load()))])], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='errs', ctx=Load())), body=[Break()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='all_errors', ctx=Load()), attr='extend', ctx=Load()), args=[Name(id='errs', ctx=Load())], keywords=[]))], orelse=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' is not valid under any of the given schemas')])], keywords=[keyword(arg='context', value=Name(id='all_errors', ctx=Load()))])))])], decorator_list=[]), FunctionDef(name='oneOf', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='oneOf'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='subschemas', ctx=Store())], value=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='oneOf', ctx=Load())], keywords=[])), Assign(targets=[Name(id='all_errors', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Tuple(elts=[Name(id='index', ctx=Store()), Name(id='subschema', ctx=Store())], ctx=Store()), iter=Name(id='subschemas', ctx=Load()), body=[Assign(targets=[Name(id='errs', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='subschema', ctx=Load())], keywords=[keyword(arg='schema_path', value=Name(id='index', ctx=Load()))])], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='errs', ctx=Load())), body=[Assign(targets=[Name(id='first_valid', ctx=Store())], value=Name(id='subschema', ctx=Load())), Break()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='all_errors', ctx=Load()), attr='extend', ctx=Load()), args=[Name(id='errs', ctx=Load())], keywords=[]))], orelse=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' is not valid under any of the given schemas')])], keywords=[keyword(arg='context', value=Name(id='all_errors', ctx=Load()))])))]), Assign(targets=[Name(id='more_valid', ctx=Store())], value=ListComp(elt=Name(id='each', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='_', ctx=Store()), Name(id='each', ctx=Store())], ctx=Store()), iter=Name(id='subschemas', ctx=Load()), ifs=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='evolve', ctx=Load()), args=[], keywords=[keyword(arg='schema', value=Name(id='each', ctx=Load()))]), attr='is_valid', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[])], is_async=0)])), If(test=Name(id='more_valid', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='more_valid', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='first_valid', ctx=Load())], keywords=[])), Assign(targets=[Name(id='reprs', ctx=Store())], value=Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='repr', ctx=Load()), args=[Name(id='schema', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='schema', ctx=Store()), iter=Name(id='more_valid', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' is valid under each of '), FormattedValue(value=Name(id='reprs', ctx=Load()), conversion=-1)])], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='not_', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='not_schema'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='evolve', ctx=Load()), args=[], keywords=[keyword(arg='schema', value=Name(id='not_schema', ctx=Load()))]), attr='is_valid', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='message', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' should not be valid under '), FormattedValue(value=Name(id='not_schema', ctx=Load()), conversion=114)])), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='if_', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='if_schema'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='evolve', ctx=Load()), args=[], keywords=[keyword(arg='schema', value=Name(id='if_schema', ctx=Load()))]), attr='is_valid', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), body=[If(test=Compare(left=Constant(value='then'), ops=[In()], comparators=[Name(id='schema', ctx=Load())]), body=[Assign(targets=[Name(id='then', ctx=Store())], value=Subscript(value=Name(id='schema', ctx=Load()), slice=Constant(value='then'), ctx=Load())), Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='then', ctx=Load())], keywords=[keyword(arg='schema_path', value=Constant(value='then'))])))], orelse=[])], orelse=[If(test=Compare(left=Constant(value='else'), ops=[In()], comparators=[Name(id='schema', ctx=Load())]), body=[Assign(targets=[Name(id='else_', ctx=Store())], value=Subscript(value=Name(id='schema', ctx=Load()), slice=Constant(value='else'), ctx=Load())), Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='else_', ctx=Load())], keywords=[keyword(arg='schema_path', value=Constant(value='else'))])))], orelse=[])])], decorator_list=[]), FunctionDef(name='unevaluatedItems', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='unevaluatedItems'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='array')], keywords=[])), body=[Return()], orelse=[]), Assign(targets=[Name(id='evaluated_item_indexes', ctx=Store())], value=Call(func=Name(id='find_evaluated_item_indexes_by_schema', ctx=Load()), args=[Name(id='validator', ctx=Load()), Name(id='instance', ctx=Load()), Name(id='schema', ctx=Load())], keywords=[])), Assign(targets=[Name(id='unevaluated_items', ctx=Store())], value=ListComp(elt=Name(id='item', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='index', ctx=Store()), Name(id='item', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), ifs=[Compare(left=Name(id='index', ctx=Load()), ops=[NotIn()], comparators=[Name(id='evaluated_item_indexes', ctx=Load())])], is_async=0)])), If(test=Name(id='unevaluated_items', ctx=Load()), body=[Assign(targets=[Name(id='error', ctx=Store())], value=Constant(value='Unevaluated items are not allowed (%s %s unexpected)')), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[BinOp(left=Name(id='error', ctx=Load()), op=Mod(), right=Call(func=Name(id='extras_msg', ctx=Load()), args=[Name(id='unevaluated_items', ctx=Load())], keywords=[]))], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='unevaluatedProperties', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='unevaluatedProperties'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='object')], keywords=[])), body=[Return()], orelse=[]), Assign(targets=[Name(id='evaluated_keys', ctx=Store())], value=Call(func=Name(id='find_evaluated_property_keys_by_schema', ctx=Load()), args=[Name(id='validator', ctx=Load()), Name(id='instance', ctx=Load()), Name(id='schema', ctx=Load())], keywords=[])), Assign(targets=[Name(id='unevaluated_keys', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='property', ctx=Store()), iter=Name(id='instance', ctx=Load()), body=[If(test=Compare(left=Name(id='property', ctx=Load()), ops=[NotIn()], comparators=[Name(id='evaluated_keys', ctx=Load())]), body=[For(target=Name(id='_', ctx=Store()), iter=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Subscript(value=Name(id='instance', ctx=Load()), slice=Name(id='property', ctx=Load()), ctx=Load()), Name(id='unevaluatedProperties', ctx=Load())], keywords=[keyword(arg='path', value=Name(id='property', ctx=Load())), keyword(arg='schema_path', value=Name(id='property', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Name(id='unevaluated_keys', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='property', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[]), If(test=Name(id='unevaluated_keys', ctx=Load()), body=[If(test=Compare(left=Name(id='unevaluatedProperties', ctx=Load()), ops=[Is()], comparators=[Constant(value=False)]), body=[Assign(targets=[Name(id='error', ctx=Store())], value=Constant(value='Unevaluated properties are not allowed (%s %s unexpected)')), Assign(targets=[Name(id='extras', ctx=Store())], value=Call(func=Name(id='sorted', ctx=Load()), args=[Name(id='unevaluated_keys', ctx=Load())], keywords=[keyword(arg='key', value=Name(id='str', ctx=Load()))])), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[BinOp(left=Name(id='error', ctx=Load()), op=Mod(), right=Call(func=Name(id='extras_msg', ctx=Load()), args=[Name(id='extras', ctx=Load())], keywords=[]))], keywords=[])))], orelse=[Assign(targets=[Name(id='error', ctx=Store())], value=Constant(value='Unevaluated properties are not valid under the given schema (%s %s unevaluated and invalid)')), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[BinOp(left=Name(id='error', ctx=Load()), op=Mod(), right=Call(func=Name(id='extras_msg', ctx=Load()), args=[Name(id='unevaluated_keys', ctx=Load())], keywords=[]))], keywords=[])))])], orelse=[])], decorator_list=[]), FunctionDef(name='prefixItems', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='prefixItems'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='array')], keywords=[])), body=[Return()], orelse=[]), For(target=Tuple(elts=[Tuple(elts=[Name(id='index', ctx=Store()), Name(id='item', ctx=Store())], ctx=Store()), Name(id='subschema', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='zip', ctx=Load()), args=[Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), Name(id='prefixItems', ctx=Load())], keywords=[]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[], keywords=[keyword(arg='instance', value=Name(id='item', ctx=Load())), keyword(arg='schema', value=Name(id='subschema', ctx=Load())), keyword(arg='schema_path', value=Name(id='index', ctx=Load())), keyword(arg='path', value=Name(id='index', ctx=Load()))])))], orelse=[])], decorator_list=[])], type_ignores=[])