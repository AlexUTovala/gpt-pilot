Module(body=[ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), ImportFrom(module='contextlib', names=[alias(name='suppress')], level=0), ImportFrom(module='uuid', names=[alias(name='UUID')], level=0), Import(names=[alias(name='datetime')]), Import(names=[alias(name='ipaddress')]), Import(names=[alias(name='re')]), Import(names=[alias(name='typing')]), Import(names=[alias(name='warnings')]), ImportFrom(module='jsonschema.exceptions', names=[alias(name='FormatError')], level=0), Assign(targets=[Name(id='_FormatCheckCallable', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='object', ctx=Load())], ctx=Load()), Name(id='bool', ctx=Load())], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='_F', ctx=Store())], value=Call(func=Attribute(value=Name(id='typing', ctx=Load()), attr='TypeVar', ctx=Load()), args=[Constant(value='_F')], keywords=[keyword(arg='bound', value=Name(id='_FormatCheckCallable', ctx=Load()))])), Assign(targets=[Name(id='_RaisesType', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Union', ctx=Load()), slice=Tuple(elts=[Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Type', ctx=Load()), slice=Name(id='Exception', ctx=Load()), ctx=Load()), Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Tuple', ctx=Load()), slice=Tuple(elts=[Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Type', ctx=Load()), slice=Name(id='Exception', ctx=Load()), ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='_RE_DATE', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Constant(value='^\\d{4}-\\d{2}-\\d{2}$'), Attribute(value=Name(id='re', ctx=Load()), attr='ASCII', ctx=Load())], keywords=[])), ClassDef(name='FormatChecker', bases=[], keywords=[], body=[Expr(value=Constant(value='\n    A ``format`` property checker.\n\n    JSON Schema does not mandate that the ``format`` property actually do any\n    validation. If validation is desired however, instances of this class can\n    be hooked into validators to enable format validation.\n\n    `FormatChecker` objects always return ``True`` when asked about\n    formats that they do not know how to validate.\n\n    To add a check for a custom format use the `FormatChecker.checks`\n    decorator.\n\n    Arguments:\n\n        formats:\n\n            The known formats to validate. This argument can be used to\n            limit which formats will be used during validation.\n    ')), AnnAssign(target=Name(id='checkers', ctx=Store()), annotation=Subscript(value=Name(id='dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Subscript(value=Name(id='tuple', ctx=Load()), slice=Tuple(elts=[Name(id='_FormatCheckCallable', ctx=Load()), Name(id='_RaisesType', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()), value=Dict(keys=[], values=[]), simple=1), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='formats', annotation=BinOp(left=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Iterable', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), op=BitOr(), right=Constant(value=None)))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='formats', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='formats', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='checkers', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='checkers', ctx=Store())], value=DictComp(key=Name(id='k', ctx=Load()), value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='checkers', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Load()), generators=[comprehension(target=Name(id='k', ctx=Store()), iter=Name(id='formats', ctx=Load()), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=JoinedStr(values=[Constant(value='<FormatChecker checkers='), FormattedValue(value=Call(func=Name(id='sorted', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='checkers', ctx=Load())], keywords=[]), conversion=-1), Constant(value='>')]))], decorator_list=[]), FunctionDef(name='checks', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='format', annotation=Name(id='str', ctx=Load())), arg(arg='raises', annotation=Name(id='_RaisesType', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Tuple(elts=[], ctx=Load())]), body=[Expr(value=Constant(value='\n        Register a decorated function as validating a new format.\n\n        Arguments:\n\n            format:\n\n                The format that the decorated function will check.\n\n            raises:\n\n                The exception(s) raised by the decorated function when an\n                invalid instance is found.\n\n                The exception object will be accessible as the\n                `jsonschema.exceptions.ValidationError.cause` attribute of the\n                resulting validation error.\n        ')), FunctionDef(name='_checks', args=arguments(posonlyargs=[], args=[arg(arg='func', annotation=Name(id='_F', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='checkers', ctx=Load()), slice=Name(id='format', ctx=Load()), ctx=Store())], value=Tuple(elts=[Name(id='func', ctx=Load()), Name(id='raises', ctx=Load())], ctx=Load())), Return(value=Name(id='func', ctx=Load()))], decorator_list=[], returns=Name(id='_F', ctx=Load())), Return(value=Name(id='_checks', ctx=Load()))], decorator_list=[], returns=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='_F', ctx=Load())], ctx=Load()), Name(id='_F', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='cls_checks', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='format', annotation=Name(id='str', ctx=Load())), arg(arg='raises', annotation=Name(id='_RaisesType', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Tuple(elts=[], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='warnings', ctx=Load()), attr='warn', ctx=Load()), args=[Constant(value='FormatChecker.cls_checks is deprecated. Call FormatChecker.checks on a specific FormatChecker instance instead.'), Name(id='DeprecationWarning', ctx=Load())], keywords=[keyword(arg='stacklevel', value=Constant(value=2))])), Return(value=Call(func=Attribute(value=Name(id='cls', ctx=Load()), attr='_cls_checks', ctx=Load()), args=[], keywords=[keyword(arg='format', value=Name(id='format', ctx=Load())), keyword(arg='raises', value=Name(id='raises', ctx=Load()))]))], decorator_list=[Name(id='classmethod', ctx=Load())], returns=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='_F', ctx=Load())], ctx=Load()), Name(id='_F', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='_cls_checks', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='format', annotation=Name(id='str', ctx=Load())), arg(arg='raises', annotation=Name(id='_RaisesType', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Tuple(elts=[], ctx=Load())]), body=[FunctionDef(name='_checks', args=arguments(posonlyargs=[], args=[arg(arg='func', annotation=Name(id='_F', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='cls', ctx=Load()), attr='checkers', ctx=Load()), slice=Name(id='format', ctx=Load()), ctx=Store())], value=Tuple(elts=[Name(id='func', ctx=Load()), Name(id='raises', ctx=Load())], ctx=Load())), Return(value=Name(id='func', ctx=Load()))], decorator_list=[], returns=Name(id='_F', ctx=Load())), Return(value=Name(id='_checks', ctx=Load()))], decorator_list=[Name(id='classmethod', ctx=Load())], returns=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='_F', ctx=Load())], ctx=Load()), Name(id='_F', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='check', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance', annotation=Name(id='object', ctx=Load())), arg(arg='format', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Check whether the instance conforms to the given format.\n\n        Arguments:\n\n            instance (*any primitive type*, i.e. str, number, bool):\n\n                The instance to check\n\n            format:\n\n                The format that instance should conform to\n\n        Raises:\n\n            FormatError:\n\n                if the instance does not conform to ``format``\n        ')), If(test=Compare(left=Name(id='format', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='checkers', ctx=Load())]), body=[Return()], orelse=[]), Assign(targets=[Tuple(elts=[Name(id='func', ctx=Store()), Name(id='raises', ctx=Store())], ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='checkers', ctx=Load()), slice=Name(id='format', ctx=Load()), ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='result', ctx=Store()), Name(id='cause', ctx=Store())], ctx=Store())], value=Tuple(elts=[Constant(value=None), Constant(value=None)], ctx=Load())), Try(body=[Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Name(id='func', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='raises', ctx=Load()), name='e', body=[Assign(targets=[Name(id='cause', ctx=Store())], value=Name(id='e', ctx=Load()))])], orelse=[], finalbody=[]), If(test=UnaryOp(op=Not(), operand=Name(id='result', ctx=Load())), body=[Raise(exc=Call(func=Name(id='FormatError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' is not a '), FormattedValue(value=Name(id='format', ctx=Load()), conversion=114)])], keywords=[keyword(arg='cause', value=Name(id='cause', ctx=Load()))]))], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='conforms', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='instance', annotation=Name(id='object', ctx=Load())), arg(arg='format', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Check whether the instance conforms to the given format.\n\n        Arguments:\n\n            instance (*any primitive type*, i.e. str, number, bool):\n\n                The instance to check\n\n            format:\n\n                The format that instance should conform to\n\n        Returns:\n\n            bool: whether it conformed\n        ')), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='format', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='FormatError', ctx=Load()), body=[Return(value=Constant(value=False))])], orelse=[Return(value=Constant(value=True))], finalbody=[])], decorator_list=[], returns=Name(id='bool', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='draft3_format_checker', ctx=Store())], value=Call(func=Name(id='FormatChecker', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='draft4_format_checker', ctx=Store())], value=Call(func=Name(id='FormatChecker', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='draft6_format_checker', ctx=Store())], value=Call(func=Name(id='FormatChecker', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='draft7_format_checker', ctx=Store())], value=Call(func=Name(id='FormatChecker', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='draft201909_format_checker', ctx=Store())], value=Call(func=Name(id='FormatChecker', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='draft202012_format_checker', ctx=Store())], value=Call(func=Name(id='FormatChecker', ctx=Load()), args=[], keywords=[])), AnnAssign(target=Name(id='_draft_checkers', ctx=Store()), annotation=Subscript(value=Name(id='dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='FormatChecker', ctx=Load())], ctx=Load()), ctx=Load()), value=Call(func=Name(id='dict', ctx=Load()), args=[], keywords=[keyword(arg='draft3', value=Name(id='draft3_format_checker', ctx=Load())), keyword(arg='draft4', value=Name(id='draft4_format_checker', ctx=Load())), keyword(arg='draft6', value=Name(id='draft6_format_checker', ctx=Load())), keyword(arg='draft7', value=Name(id='draft7_format_checker', ctx=Load())), keyword(arg='draft201909', value=Name(id='draft201909_format_checker', ctx=Load())), keyword(arg='draft202012', value=Name(id='draft202012_format_checker', ctx=Load()))]), simple=1), FunctionDef(name='_checks_drafts', args=arguments(posonlyargs=[], args=[arg(arg='name'), arg(arg='draft3'), arg(arg='draft4'), arg(arg='draft6'), arg(arg='draft7'), arg(arg='draft201909'), arg(arg='draft202012'), arg(arg='raises')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Tuple(elts=[], ctx=Load())]), body=[Assign(targets=[Name(id='draft3', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='draft3', ctx=Load()), Name(id='name', ctx=Load())])), Assign(targets=[Name(id='draft4', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='draft4', ctx=Load()), Name(id='name', ctx=Load())])), Assign(targets=[Name(id='draft6', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='draft6', ctx=Load()), Name(id='name', ctx=Load())])), Assign(targets=[Name(id='draft7', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='draft7', ctx=Load()), Name(id='name', ctx=Load())])), Assign(targets=[Name(id='draft201909', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='draft201909', ctx=Load()), Name(id='name', ctx=Load())])), Assign(targets=[Name(id='draft202012', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='draft202012', ctx=Load()), Name(id='name', ctx=Load())])), FunctionDef(name='wrap', args=arguments(posonlyargs=[], args=[arg(arg='func', annotation=Name(id='_F', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Name(id='draft3', ctx=Load()), body=[Assign(targets=[Name(id='func', ctx=Store())], value=Call(func=Call(func=Attribute(value=Subscript(value=Name(id='_draft_checkers', ctx=Load()), slice=Constant(value='draft3'), ctx=Load()), attr='checks', ctx=Load()), args=[Name(id='draft3', ctx=Load()), Name(id='raises', ctx=Load())], keywords=[]), args=[Name(id='func', ctx=Load())], keywords=[]))], orelse=[]), If(test=Name(id='draft4', ctx=Load()), body=[Assign(targets=[Name(id='func', ctx=Store())], value=Call(func=Call(func=Attribute(value=Subscript(value=Name(id='_draft_checkers', ctx=Load()), slice=Constant(value='draft4'), ctx=Load()), attr='checks', ctx=Load()), args=[Name(id='draft4', ctx=Load()), Name(id='raises', ctx=Load())], keywords=[]), args=[Name(id='func', ctx=Load())], keywords=[]))], orelse=[]), If(test=Name(id='draft6', ctx=Load()), body=[Assign(targets=[Name(id='func', ctx=Store())], value=Call(func=Call(func=Attribute(value=Subscript(value=Name(id='_draft_checkers', ctx=Load()), slice=Constant(value='draft6'), ctx=Load()), attr='checks', ctx=Load()), args=[Name(id='draft6', ctx=Load()), Name(id='raises', ctx=Load())], keywords=[]), args=[Name(id='func', ctx=Load())], keywords=[]))], orelse=[]), If(test=Name(id='draft7', ctx=Load()), body=[Assign(targets=[Name(id='func', ctx=Store())], value=Call(func=Call(func=Attribute(value=Subscript(value=Name(id='_draft_checkers', ctx=Load()), slice=Constant(value='draft7'), ctx=Load()), attr='checks', ctx=Load()), args=[Name(id='draft7', ctx=Load()), Name(id='raises', ctx=Load())], keywords=[]), args=[Name(id='func', ctx=Load())], keywords=[]))], orelse=[]), If(test=Name(id='draft201909', ctx=Load()), body=[Assign(targets=[Name(id='func', ctx=Store())], value=Call(func=Call(func=Attribute(value=Subscript(value=Name(id='_draft_checkers', ctx=Load()), slice=Constant(value='draft201909'), ctx=Load()), attr='checks', ctx=Load()), args=[Name(id='draft201909', ctx=Load()), Name(id='raises', ctx=Load())], keywords=[]), args=[Name(id='func', ctx=Load())], keywords=[]))], orelse=[]), If(test=Name(id='draft202012', ctx=Load()), body=[Assign(targets=[Name(id='func', ctx=Store())], value=Call(func=Call(func=Attribute(value=Subscript(value=Name(id='_draft_checkers', ctx=Load()), slice=Constant(value='draft202012'), ctx=Load()), attr='checks', ctx=Load()), args=[Name(id='draft202012', ctx=Load()), Name(id='raises', ctx=Load())], keywords=[]), args=[Name(id='func', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Call(func=Attribute(value=Name(id='FormatChecker', ctx=Load()), attr='_cls_checks', ctx=Load()), args=[BoolOp(op=Or(), values=[Name(id='draft202012', ctx=Load()), Name(id='draft201909', ctx=Load()), Name(id='draft7', ctx=Load()), Name(id='draft6', ctx=Load()), Name(id='draft4', ctx=Load()), Name(id='draft3', ctx=Load())]), Name(id='raises', ctx=Load())], keywords=[]), args=[Name(id='func', ctx=Load())], keywords=[])), Return(value=Name(id='func', ctx=Load()))], decorator_list=[], returns=Name(id='_F', ctx=Load())), Return(value=Name(id='wrap', ctx=Load()))], decorator_list=[], returns=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Name(id='_F', ctx=Load())], ctx=Load()), Name(id='_F', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='is_email', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Return(value=Compare(left=Constant(value='@'), ops=[In()], comparators=[Name(id='instance', ctx=Load())]))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='idn-email'))]), Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='email'))])], returns=Name(id='bool', ctx=Load())), FunctionDef(name='is_ipv4', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Return(value=Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='ipaddress', ctx=Load()), attr='IPv4Address', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='draft3', value=Constant(value='ip-address')), keyword(arg='draft4', value=Constant(value='ipv4')), keyword(arg='draft6', value=Constant(value='ipv4')), keyword(arg='draft7', value=Constant(value='ipv4')), keyword(arg='draft201909', value=Constant(value='ipv4')), keyword(arg='draft202012', value=Constant(value='ipv4')), keyword(arg='raises', value=Attribute(value=Name(id='ipaddress', ctx=Load()), attr='AddressValueError', ctx=Load()))])], returns=Name(id='bool', ctx=Load())), FunctionDef(name='is_ipv6', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Assign(targets=[Name(id='address', ctx=Store())], value=Call(func=Attribute(value=Name(id='ipaddress', ctx=Load()), attr='IPv6Address', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[])), Return(value=UnaryOp(op=Not(), operand=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='address', ctx=Load()), Constant(value='scope_id'), Constant(value='')], keywords=[])))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='ipv6')), keyword(arg='raises', value=Attribute(value=Name(id='ipaddress', ctx=Load()), attr='AddressValueError', ctx=Load()))])], returns=Name(id='bool', ctx=Load())), With(items=[withitem(context_expr=Call(func=Name(id='suppress', ctx=Load()), args=[Name(id='ImportError', ctx=Load())], keywords=[]))], body=[ImportFrom(module='fqdn', names=[alias(name='FQDN')], level=0), FunctionDef(name='is_host_name', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Return(value=Attribute(value=Call(func=Name(id='FQDN', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[keyword(arg='min_labels', value=Constant(value=1))]), attr='is_valid', ctx=Load()))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='draft3', value=Constant(value='host-name')), keyword(arg='draft4', value=Constant(value='hostname')), keyword(arg='draft6', value=Constant(value='hostname')), keyword(arg='draft7', value=Constant(value='hostname')), keyword(arg='draft201909', value=Constant(value='hostname')), keyword(arg='draft202012', value=Constant(value='hostname'))])], returns=Name(id='bool', ctx=Load()))]), With(items=[withitem(context_expr=Call(func=Name(id='suppress', ctx=Load()), args=[Name(id='ImportError', ctx=Load())], keywords=[]))], body=[Import(names=[alias(name='idna')]), FunctionDef(name='is_idn_host_name', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='idna', ctx=Load()), attr='encode', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[])), Return(value=Constant(value=True))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='draft7', value=Constant(value='idn-hostname')), keyword(arg='draft201909', value=Constant(value='idn-hostname')), keyword(arg='draft202012', value=Constant(value='idn-hostname')), keyword(arg='raises', value=Tuple(elts=[Attribute(value=Name(id='idna', ctx=Load()), attr='IDNAError', ctx=Load()), Name(id='UnicodeError', ctx=Load())], ctx=Load()))])], returns=Name(id='bool', ctx=Load()))]), Try(body=[Import(names=[alias(name='rfc3987')])], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[With(items=[withitem(context_expr=Call(func=Name(id='suppress', ctx=Load()), args=[Name(id='ImportError', ctx=Load())], keywords=[]))], body=[ImportFrom(module='rfc3986_validator', names=[alias(name='validate_rfc3986')], level=0), FunctionDef(name='is_uri', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Return(value=Call(func=Name(id='validate_rfc3986', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[keyword(arg='rule', value=Constant(value='URI'))]))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='uri'))])], returns=Name(id='bool', ctx=Load())), FunctionDef(name='is_uri_reference', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Return(value=Call(func=Name(id='validate_rfc3986', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[keyword(arg='rule', value=Constant(value='URI_reference'))]))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='draft6', value=Constant(value='uri-reference')), keyword(arg='draft7', value=Constant(value='uri-reference')), keyword(arg='draft201909', value=Constant(value='uri-reference')), keyword(arg='draft202012', value=Constant(value='uri-reference')), keyword(arg='raises', value=Name(id='ValueError', ctx=Load()))])], returns=Name(id='bool', ctx=Load()))])])], orelse=[FunctionDef(name='is_iri', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='rfc3987', ctx=Load()), attr='parse', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[keyword(arg='rule', value=Constant(value='IRI'))]))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='draft7', value=Constant(value='iri')), keyword(arg='draft201909', value=Constant(value='iri')), keyword(arg='draft202012', value=Constant(value='iri')), keyword(arg='raises', value=Name(id='ValueError', ctx=Load()))])], returns=Name(id='bool', ctx=Load())), FunctionDef(name='is_iri_reference', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='rfc3987', ctx=Load()), attr='parse', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[keyword(arg='rule', value=Constant(value='IRI_reference'))]))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='draft7', value=Constant(value='iri-reference')), keyword(arg='draft201909', value=Constant(value='iri-reference')), keyword(arg='draft202012', value=Constant(value='iri-reference')), keyword(arg='raises', value=Name(id='ValueError', ctx=Load()))])], returns=Name(id='bool', ctx=Load())), FunctionDef(name='is_uri', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='rfc3987', ctx=Load()), attr='parse', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[keyword(arg='rule', value=Constant(value='URI'))]))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='uri')), keyword(arg='raises', value=Name(id='ValueError', ctx=Load()))])], returns=Name(id='bool', ctx=Load())), FunctionDef(name='is_uri_reference', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='rfc3987', ctx=Load()), attr='parse', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[keyword(arg='rule', value=Constant(value='URI_reference'))]))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='draft6', value=Constant(value='uri-reference')), keyword(arg='draft7', value=Constant(value='uri-reference')), keyword(arg='draft201909', value=Constant(value='uri-reference')), keyword(arg='draft202012', value=Constant(value='uri-reference')), keyword(arg='raises', value=Name(id='ValueError', ctx=Load()))])], returns=Name(id='bool', ctx=Load()))], finalbody=[]), With(items=[withitem(context_expr=Call(func=Name(id='suppress', ctx=Load()), args=[Name(id='ImportError', ctx=Load())], keywords=[]))], body=[ImportFrom(module='rfc3339_validator', names=[alias(name='validate_rfc3339')], level=0), FunctionDef(name='is_datetime', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Return(value=Call(func=Name(id='validate_rfc3339', ctx=Load()), args=[Call(func=Attribute(value=Name(id='instance', ctx=Load()), attr='upper', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='date-time'))])], returns=Name(id='bool', ctx=Load())), FunctionDef(name='is_time', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Return(value=Call(func=Name(id='is_datetime', ctx=Load()), args=[BinOp(left=Constant(value='1970-01-01T'), op=Add(), right=Name(id='instance', ctx=Load()))], keywords=[]))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='draft7', value=Constant(value='time')), keyword(arg='draft201909', value=Constant(value='time')), keyword(arg='draft202012', value=Constant(value='time'))])], returns=Name(id='bool', ctx=Load()))]), FunctionDef(name='is_regex', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Return(value=Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='compile', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='regex')), keyword(arg='raises', value=Attribute(value=Name(id='re', ctx=Load()), attr='error', ctx=Load()))])], returns=Name(id='bool', ctx=Load())), FunctionDef(name='is_date', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Return(value=Call(func=Name(id='bool', ctx=Load()), args=[BoolOp(op=And(), values=[Call(func=Attribute(value=Name(id='_RE_DATE', ctx=Load()), attr='fullmatch', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='datetime', ctx=Load()), attr='date', ctx=Load()), attr='fromisoformat', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[])])], keywords=[]))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='draft3', value=Constant(value='date')), keyword(arg='draft7', value=Constant(value='date')), keyword(arg='draft201909', value=Constant(value='date')), keyword(arg='draft202012', value=Constant(value='date')), keyword(arg='raises', value=Name(id='ValueError', ctx=Load()))])], returns=Name(id='bool', ctx=Load())), FunctionDef(name='is_draft3_time', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Return(value=Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), attr='strptime', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='%H:%M:%S')], keywords=[])], keywords=[]))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='draft3', value=Constant(value='time')), keyword(arg='raises', value=Name(id='ValueError', ctx=Load()))])], returns=Name(id='bool', ctx=Load())), With(items=[withitem(context_expr=Call(func=Name(id='suppress', ctx=Load()), args=[Name(id='ImportError', ctx=Load())], keywords=[]))], body=[ImportFrom(module='webcolors', names=[alias(name='CSS21_NAMES_TO_HEX')], level=0), Import(names=[alias(name='webcolors')]), FunctionDef(name='is_css_color_code', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='webcolors', ctx=Load()), attr='normalize_hex', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='bool', ctx=Load())), FunctionDef(name='is_css21_color', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), Compare(left=Call(func=Attribute(value=Name(id='instance', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), ops=[In()], comparators=[Name(id='CSS21_NAMES_TO_HEX', ctx=Load())])]), body=[Return(value=Constant(value=True))], orelse=[]), Return(value=Call(func=Name(id='is_css_color_code', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='draft3', value=Constant(value='color')), keyword(arg='raises', value=Tuple(elts=[Name(id='ValueError', ctx=Load()), Name(id='TypeError', ctx=Load())], ctx=Load()))])], returns=Name(id='bool', ctx=Load()))]), With(items=[withitem(context_expr=Call(func=Name(id='suppress', ctx=Load()), args=[Name(id='ImportError', ctx=Load())], keywords=[]))], body=[Import(names=[alias(name='jsonpointer')]), FunctionDef(name='is_json_pointer', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Return(value=Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='jsonpointer', ctx=Load()), attr='JsonPointer', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='draft6', value=Constant(value='json-pointer')), keyword(arg='draft7', value=Constant(value='json-pointer')), keyword(arg='draft201909', value=Constant(value='json-pointer')), keyword(arg='draft202012', value=Constant(value='json-pointer')), keyword(arg='raises', value=Attribute(value=Name(id='jsonpointer', ctx=Load()), attr='JsonPointerException', ctx=Load()))])], returns=Name(id='bool', ctx=Load())), FunctionDef(name='is_relative_json_pointer', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='instance', ctx=Load())), body=[Return(value=Constant(value=False))], orelse=[]), Assign(targets=[Tuple(elts=[Name(id='non_negative_integer', ctx=Store()), Name(id='rest', ctx=Store())], ctx=Store())], value=Tuple(elts=[List(elts=[], ctx=Load()), Constant(value='')], ctx=Load())), For(target=Tuple(elts=[Name(id='i', ctx=Store()), Name(id='character', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), body=[If(test=Call(func=Attribute(value=Name(id='character', ctx=Load()), attr='isdigit', ctx=Load()), args=[], keywords=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='i', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), Compare(left=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='instance', ctx=Load()), slice=BinOp(left=Name(id='i', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=0)])]), body=[Return(value=Constant(value=False))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='non_negative_integer', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='character', ctx=Load())], keywords=[])), Continue()], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='non_negative_integer', ctx=Load())), body=[Return(value=Constant(value=False))], orelse=[]), Assign(targets=[Name(id='rest', ctx=Store())], value=Subscript(value=Name(id='instance', ctx=Load()), slice=Slice(lower=Name(id='i', ctx=Load())), ctx=Load())), Break()], orelse=[]), Return(value=BoolOp(op=Or(), values=[Compare(left=Name(id='rest', ctx=Load()), ops=[Eq()], comparators=[Constant(value='#')]), Call(func=Name(id='bool', ctx=Load()), args=[Call(func=Attribute(value=Name(id='jsonpointer', ctx=Load()), attr='JsonPointer', ctx=Load()), args=[Name(id='rest', ctx=Load())], keywords=[])], keywords=[])]))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='draft7', value=Constant(value='relative-json-pointer')), keyword(arg='draft201909', value=Constant(value='relative-json-pointer')), keyword(arg='draft202012', value=Constant(value='relative-json-pointer')), keyword(arg='raises', value=Attribute(value=Name(id='jsonpointer', ctx=Load()), attr='JsonPointerException', ctx=Load()))])], returns=Name(id='bool', ctx=Load()))]), With(items=[withitem(context_expr=Call(func=Name(id='suppress', ctx=Load()), args=[Name(id='ImportError', ctx=Load())], keywords=[]))], body=[Import(names=[alias(name='uri_template')]), FunctionDef(name='is_uri_template', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='uri_template', ctx=Load()), attr='validate', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='draft6', value=Constant(value='uri-template')), keyword(arg='draft7', value=Constant(value='uri-template')), keyword(arg='draft201909', value=Constant(value='uri-template')), keyword(arg='draft202012', value=Constant(value='uri-template'))])], returns=Name(id='bool', ctx=Load()))]), With(items=[withitem(context_expr=Call(func=Name(id='suppress', ctx=Load()), args=[Name(id='ImportError', ctx=Load())], keywords=[]))], body=[Import(names=[alias(name='isoduration')]), FunctionDef(name='is_duration', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='isoduration', ctx=Load()), attr='parse_duration', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='instance', ctx=Load()), attr='endswith', ctx=Load()), args=[Call(func=Name(id='tuple', ctx=Load()), args=[Constant(value='DMYWHMS')], keywords=[])], keywords=[]))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='draft201909', value=Constant(value='duration')), keyword(arg='draft202012', value=Constant(value='duration')), keyword(arg='raises', value=Attribute(value=Name(id='isoduration', ctx=Load()), attr='DurationParsingException', ctx=Load()))])], returns=Name(id='bool', ctx=Load()))]), FunctionDef(name='is_uuid', args=arguments(posonlyargs=[], args=[arg(arg='instance', annotation=Name(id='object', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='str', ctx=Load())], keywords=[])), body=[Return(value=Constant(value=True))], orelse=[]), Expr(value=Call(func=Name(id='UUID', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='all', ctx=Load()), args=[GeneratorExp(elt=Compare(left=Subscript(value=Name(id='instance', ctx=Load()), slice=Name(id='position', ctx=Load()), ctx=Load()), ops=[Eq()], comparators=[Constant(value='-')]), generators=[comprehension(target=Name(id='position', ctx=Store()), iter=Tuple(elts=[Constant(value=8), Constant(value=13), Constant(value=18), Constant(value=23)], ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], decorator_list=[Call(func=Name(id='_checks_drafts', ctx=Load()), args=[], keywords=[keyword(arg='draft201909', value=Constant(value='uuid')), keyword(arg='draft202012', value=Constant(value='uuid')), keyword(arg='raises', value=Name(id='ValueError', ctx=Load()))])], returns=Name(id='bool', ctx=Load()))], type_ignores=[])