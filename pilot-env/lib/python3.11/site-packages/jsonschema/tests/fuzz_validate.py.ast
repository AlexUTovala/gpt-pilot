Module(body=[Expr(value=Constant(value='\nFuzzing setup for OSS-Fuzz.\n\nSee https://github.com/google/oss-fuzz/tree/master/projects/jsonschema for the\nother half of the setup here.\n')), Import(names=[alias(name='sys')]), ImportFrom(module='hypothesis', names=[alias(name='given'), alias(name='strategies')], level=0), Import(names=[alias(name='jsonschema')]), Assign(targets=[Name(id='PRIM', ctx=Store())], value=Call(func=Attribute(value=Name(id='strategies', ctx=Load()), attr='one_of', ctx=Load()), args=[Call(func=Attribute(value=Name(id='strategies', ctx=Load()), attr='booleans', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='strategies', ctx=Load()), attr='integers', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='strategies', ctx=Load()), attr='floats', ctx=Load()), args=[], keywords=[keyword(arg='allow_nan', value=Constant(value=False)), keyword(arg='allow_infinity', value=Constant(value=False))]), Call(func=Attribute(value=Name(id='strategies', ctx=Load()), attr='text', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='DICT', ctx=Store())], value=Call(func=Attribute(value=Name(id='strategies', ctx=Load()), attr='recursive', ctx=Load()), args=[], keywords=[keyword(arg='base', value=Call(func=Attribute(value=Name(id='strategies', ctx=Load()), attr='one_of', ctx=Load()), args=[Call(func=Attribute(value=Name(id='strategies', ctx=Load()), attr='booleans', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='strategies', ctx=Load()), attr='dictionaries', ctx=Load()), args=[Call(func=Attribute(value=Name(id='strategies', ctx=Load()), attr='text', ctx=Load()), args=[], keywords=[]), Name(id='PRIM', ctx=Load())], keywords=[])], keywords=[])), keyword(arg='extend', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='inner')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='strategies', ctx=Load()), attr='dictionaries', ctx=Load()), args=[Call(func=Attribute(value=Name(id='strategies', ctx=Load()), attr='text', ctx=Load()), args=[], keywords=[]), Name(id='inner', ctx=Load())], keywords=[])))])), FunctionDef(name='test_schemas', args=arguments(posonlyargs=[], args=[arg(arg='obj1'), arg(arg='obj2')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='jsonschema', ctx=Load()), attr='validate', ctx=Load()), args=[], keywords=[keyword(arg='instance', value=Name(id='obj1', ctx=Load())), keyword(arg='schema', value=Name(id='obj2', ctx=Load()))]))], handlers=[ExceptHandler(type=Attribute(value=Attribute(value=Name(id='jsonschema', ctx=Load()), attr='exceptions', ctx=Load()), attr='ValidationError', ctx=Load()), body=[Pass()]), ExceptHandler(type=Attribute(value=Attribute(value=Name(id='jsonschema', ctx=Load()), attr='exceptions', ctx=Load()), attr='SchemaError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], decorator_list=[Call(func=Name(id='given', ctx=Load()), args=[], keywords=[keyword(arg='obj1', value=Name(id='DICT', ctx=Load())), keyword(arg='obj2', value=Name(id='DICT', ctx=Load()))])]), FunctionDef(name='main', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='atheris', ctx=Load()), attr='instrument_all', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='atheris', ctx=Load()), attr='Setup', ctx=Load()), args=[Attribute(value=Name(id='sys', ctx=Load()), attr='argv', ctx=Load()), Attribute(value=Attribute(value=Name(id='test_schemas', ctx=Load()), attr='hypothesis', ctx=Load()), attr='fuzz_one_input', ctx=Load())], keywords=[keyword(arg='enable_python_coverage', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Name(id='atheris', ctx=Load()), attr='Fuzz', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Import(names=[alias(name='atheris')]), Expr(value=Call(func=Name(id='main', ctx=Load()), args=[], keywords=[]))], orelse=[])], type_ignores=[])