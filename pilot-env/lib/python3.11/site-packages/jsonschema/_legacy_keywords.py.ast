Module(body=[ImportFrom(module='referencing.jsonschema', names=[alias(name='lookup_recursive_ref')], level=0), ImportFrom(module='jsonschema', names=[alias(name='_utils')], level=0), ImportFrom(module='jsonschema.exceptions', names=[alias(name='ValidationError')], level=0), FunctionDef(name='ignore_ref_siblings', args=arguments(posonlyargs=[], args=[arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n    Ignore siblings of ``$ref`` if it is present.\n\n    Otherwise, return all keywords.\n\n    Suitable for use with `create`'s ``applicable_validators`` argument.\n    ")), Assign(targets=[Name(id='ref', ctx=Store())], value=Call(func=Attribute(value=Name(id='schema', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='$ref')], keywords=[])), If(test=Compare(left=Name(id='ref', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=List(elts=[Tuple(elts=[Constant(value='$ref'), Name(id='ref', ctx=Load())], ctx=Load())], ctx=Load()))], orelse=[Return(value=Call(func=Attribute(value=Name(id='schema', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]))])], decorator_list=[]), FunctionDef(name='dependencies_draft3', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='dependencies'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='object')], keywords=[])), body=[Return()], orelse=[]), For(target=Tuple(elts=[Name(id='property', ctx=Store()), Name(id='dependency', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='dependencies', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Compare(left=Name(id='property', ctx=Load()), ops=[NotIn()], comparators=[Name(id='instance', ctx=Load())]), body=[Continue()], orelse=[]), If(test=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='dependency', ctx=Load()), Constant(value='object')], keywords=[]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='dependency', ctx=Load())], keywords=[keyword(arg='schema_path', value=Name(id='property', ctx=Load()))])))], orelse=[If(test=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='dependency', ctx=Load()), Constant(value='string')], keywords=[]), body=[If(test=Compare(left=Name(id='dependency', ctx=Load()), ops=[NotIn()], comparators=[Name(id='instance', ctx=Load())]), body=[Assign(targets=[Name(id='message', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='dependency', ctx=Load()), conversion=114), Constant(value=' is a dependency of '), FormattedValue(value=Name(id='property', ctx=Load()), conversion=114)])), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[])))], orelse=[])], orelse=[For(target=Name(id='each', ctx=Store()), iter=Name(id='dependency', ctx=Load()), body=[If(test=Compare(left=Name(id='each', ctx=Load()), ops=[NotIn()], comparators=[Name(id='instance', ctx=Load())]), body=[Assign(targets=[Name(id='message', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='each', ctx=Load()), conversion=114), Constant(value=' is a dependency of '), FormattedValue(value=Name(id='property', ctx=Load()), conversion=114)])), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[])))], orelse=[])], orelse=[])])])], orelse=[])], decorator_list=[]), FunctionDef(name='dependencies_draft4_draft6_draft7', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='dependencies'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Support for the ``dependencies`` keyword from pre-draft 2019-09.\n\n    In later drafts, the keyword was split into separate\n    ``dependentRequired`` and ``dependentSchemas`` validators.\n    ')), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='object')], keywords=[])), body=[Return()], orelse=[]), For(target=Tuple(elts=[Name(id='property', ctx=Store()), Name(id='dependency', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='dependencies', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Compare(left=Name(id='property', ctx=Load()), ops=[NotIn()], comparators=[Name(id='instance', ctx=Load())]), body=[Continue()], orelse=[]), If(test=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='dependency', ctx=Load()), Constant(value='array')], keywords=[]), body=[For(target=Name(id='each', ctx=Store()), iter=Name(id='dependency', ctx=Load()), body=[If(test=Compare(left=Name(id='each', ctx=Load()), ops=[NotIn()], comparators=[Name(id='instance', ctx=Load())]), body=[Assign(targets=[Name(id='message', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='each', ctx=Load()), conversion=114), Constant(value=' is a dependency of '), FormattedValue(value=Name(id='property', ctx=Load()), conversion=114)])), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[])))], orelse=[])], orelse=[])], orelse=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='dependency', ctx=Load())], keywords=[keyword(arg='schema_path', value=Name(id='property', ctx=Load()))])))])], orelse=[])], decorator_list=[]), FunctionDef(name='disallow_draft3', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='disallow'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='disallowed', ctx=Store()), iter=Call(func=Attribute(value=Name(id='_utils', ctx=Load()), attr='ensure_list', ctx=Load()), args=[Name(id='disallow', ctx=Load())], keywords=[]), body=[If(test=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='evolve', ctx=Load()), args=[], keywords=[keyword(arg='schema', value=Dict(keys=[Constant(value='type')], values=[List(elts=[Name(id='disallowed', ctx=Load())], ctx=Load())]))]), attr='is_valid', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='message', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='disallowed', ctx=Load()), conversion=114), Constant(value=' is disallowed for '), FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114)])), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[])))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='extends_draft3', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='extends'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='extends', ctx=Load()), Constant(value='object')], keywords=[]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='extends', ctx=Load())], keywords=[]))), Return()], orelse=[]), For(target=Tuple(elts=[Name(id='index', ctx=Store()), Name(id='subschema', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='extends', ctx=Load())], keywords=[]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='subschema', ctx=Load())], keywords=[keyword(arg='schema_path', value=Name(id='index', ctx=Load()))])))], orelse=[])], decorator_list=[]), FunctionDef(name='items_draft3_draft4', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='items'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='array')], keywords=[])), body=[Return()], orelse=[]), If(test=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='items', ctx=Load()), Constant(value='object')], keywords=[]), body=[For(target=Tuple(elts=[Name(id='index', ctx=Store()), Name(id='item', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Name(id='item', ctx=Load()), Name(id='items', ctx=Load())], keywords=[keyword(arg='path', value=Name(id='index', ctx=Load()))])))], orelse=[])], orelse=[For(target=Tuple(elts=[Tuple(elts=[Name(id='index', ctx=Store()), Name(id='item', ctx=Store())], ctx=Store()), Name(id='subschema', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='zip', ctx=Load()), args=[Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), Name(id='items', ctx=Load())], keywords=[]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Name(id='item', ctx=Load()), Name(id='subschema', ctx=Load())], keywords=[keyword(arg='path', value=Name(id='index', ctx=Load())), keyword(arg='schema_path', value=Name(id='index', ctx=Load()))])))], orelse=[])])], decorator_list=[]), FunctionDef(name='additionalItems', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='aI'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='array')], keywords=[])), Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Call(func=Attribute(value=Name(id='schema', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='items'), Dict(keys=[], values=[])], keywords=[]), Constant(value='object')], keywords=[])]), body=[Return()], orelse=[]), Assign(targets=[Name(id='len_items', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='schema', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='items'), List(elts=[], ctx=Load())], keywords=[])], keywords=[])), If(test=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='aI', ctx=Load()), Constant(value='object')], keywords=[]), body=[For(target=Tuple(elts=[Name(id='index', ctx=Store()), Name(id='item', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Subscript(value=Name(id='instance', ctx=Load()), slice=Slice(lower=Name(id='len_items', ctx=Load())), ctx=Load())], keywords=[keyword(arg='start', value=Name(id='len_items', ctx=Load()))]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Name(id='item', ctx=Load()), Name(id='aI', ctx=Load())], keywords=[keyword(arg='path', value=Name(id='index', ctx=Load()))])))], orelse=[])], orelse=[If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='aI', ctx=Load())), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='schema', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='items'), List(elts=[], ctx=Load())], keywords=[])], keywords=[])])]), body=[Assign(targets=[Name(id='error', ctx=Store())], value=Constant(value='Additional items are not allowed (%s %s unexpected)')), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[BinOp(left=Name(id='error', ctx=Load()), op=Mod(), right=Call(func=Attribute(value=Name(id='_utils', ctx=Load()), attr='extras_msg', ctx=Load()), args=[Subscript(value=Name(id='instance', ctx=Load()), slice=Slice(lower=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='schema', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='items'), List(elts=[], ctx=Load())], keywords=[])], keywords=[])), ctx=Load())], keywords=[]))], keywords=[])))], orelse=[])])], decorator_list=[]), FunctionDef(name='items_draft6_draft7_draft201909', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='items'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='array')], keywords=[])), body=[Return()], orelse=[]), If(test=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='items', ctx=Load()), Constant(value='array')], keywords=[]), body=[For(target=Tuple(elts=[Tuple(elts=[Name(id='index', ctx=Store()), Name(id='item', ctx=Store())], ctx=Store()), Name(id='subschema', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='zip', ctx=Load()), args=[Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), Name(id='items', ctx=Load())], keywords=[]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Name(id='item', ctx=Load()), Name(id='subschema', ctx=Load())], keywords=[keyword(arg='path', value=Name(id='index', ctx=Load())), keyword(arg='schema_path', value=Name(id='index', ctx=Load()))])))], orelse=[])], orelse=[For(target=Tuple(elts=[Name(id='index', ctx=Store()), Name(id='item', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Name(id='item', ctx=Load()), Name(id='items', ctx=Load())], keywords=[keyword(arg='path', value=Name(id='index', ctx=Load()))])))], orelse=[])])], decorator_list=[]), FunctionDef(name='minimum_draft3_draft4', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='minimum'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='number')], keywords=[])), body=[Return()], orelse=[]), If(test=Call(func=Attribute(value=Name(id='schema', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='exclusiveMinimum'), Constant(value=False)], keywords=[]), body=[Assign(targets=[Name(id='failed', ctx=Store())], value=Compare(left=Name(id='instance', ctx=Load()), ops=[LtE()], comparators=[Name(id='minimum', ctx=Load())])), Assign(targets=[Name(id='cmp', ctx=Store())], value=Constant(value='less than or equal to'))], orelse=[Assign(targets=[Name(id='failed', ctx=Store())], value=Compare(left=Name(id='instance', ctx=Load()), ops=[Lt()], comparators=[Name(id='minimum', ctx=Load())])), Assign(targets=[Name(id='cmp', ctx=Store())], value=Constant(value='less than'))]), If(test=Name(id='failed', ctx=Load()), body=[Assign(targets=[Name(id='message', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' is '), FormattedValue(value=Name(id='cmp', ctx=Load()), conversion=-1), Constant(value=' the minimum of '), FormattedValue(value=Name(id='minimum', ctx=Load()), conversion=114)])), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='maximum_draft3_draft4', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='maximum'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='number')], keywords=[])), body=[Return()], orelse=[]), If(test=Call(func=Attribute(value=Name(id='schema', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='exclusiveMaximum'), Constant(value=False)], keywords=[]), body=[Assign(targets=[Name(id='failed', ctx=Store())], value=Compare(left=Name(id='instance', ctx=Load()), ops=[GtE()], comparators=[Name(id='maximum', ctx=Load())])), Assign(targets=[Name(id='cmp', ctx=Store())], value=Constant(value='greater than or equal to'))], orelse=[Assign(targets=[Name(id='failed', ctx=Store())], value=Compare(left=Name(id='instance', ctx=Load()), ops=[Gt()], comparators=[Name(id='maximum', ctx=Load())])), Assign(targets=[Name(id='cmp', ctx=Store())], value=Constant(value='greater than'))]), If(test=Name(id='failed', ctx=Load()), body=[Assign(targets=[Name(id='message', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' is '), FormattedValue(value=Name(id='cmp', ctx=Load()), conversion=-1), Constant(value=' the maximum of '), FormattedValue(value=Name(id='maximum', ctx=Load()), conversion=114)])), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='properties_draft3', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='properties'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='object')], keywords=[])), body=[Return()], orelse=[]), For(target=Tuple(elts=[Name(id='property', ctx=Store()), Name(id='subschema', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='properties', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Compare(left=Name(id='property', ctx=Load()), ops=[In()], comparators=[Name(id='instance', ctx=Load())]), body=[Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Subscript(value=Name(id='instance', ctx=Load()), slice=Name(id='property', ctx=Load()), ctx=Load()), Name(id='subschema', ctx=Load())], keywords=[keyword(arg='path', value=Name(id='property', ctx=Load())), keyword(arg='schema_path', value=Name(id='property', ctx=Load()))])))], orelse=[If(test=Call(func=Attribute(value=Name(id='subschema', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='required'), Constant(value=False)], keywords=[]), body=[Assign(targets=[Name(id='error', ctx=Store())], value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='property', ctx=Load()), conversion=114), Constant(value=' is a required property')])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='error', ctx=Load()), attr='_set', ctx=Load()), args=[], keywords=[keyword(arg='validator', value=Constant(value='required')), keyword(arg='validator_value', value=Subscript(value=Name(id='subschema', ctx=Load()), slice=Constant(value='required'), ctx=Load())), keyword(arg='instance', value=Name(id='instance', ctx=Load())), keyword(arg='schema', value=Name(id='schema', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='error', ctx=Load()), attr='path', ctx=Load()), attr='appendleft', ctx=Load()), args=[Name(id='property', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='error', ctx=Load()), attr='schema_path', ctx=Load()), attr='extend', ctx=Load()), args=[List(elts=[Name(id='property', ctx=Load()), Constant(value='required')], ctx=Load())], keywords=[])), Expr(value=Yield(value=Name(id='error', ctx=Load())))], orelse=[])])], orelse=[])], decorator_list=[]), FunctionDef(name='type_draft3', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='types'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='types', ctx=Store())], value=Call(func=Attribute(value=Name(id='_utils', ctx=Load()), attr='ensure_list', ctx=Load()), args=[Name(id='types', ctx=Load())], keywords=[])), Assign(targets=[Name(id='all_errors', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Tuple(elts=[Name(id='index', ctx=Store()), Name(id='type', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='types', ctx=Load())], keywords=[]), body=[If(test=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='type', ctx=Load()), Constant(value='object')], keywords=[]), body=[Assign(targets=[Name(id='errors', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='type', ctx=Load())], keywords=[keyword(arg='schema_path', value=Name(id='index', ctx=Load()))])], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='errors', ctx=Load())), body=[Return()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='all_errors', ctx=Load()), attr='extend', ctx=Load()), args=[Name(id='errors', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='type', ctx=Load())], keywords=[]), body=[Return()], orelse=[])])], orelse=[Assign(targets=[Name(id='reprs', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='type', ctx=Store()), iter=Name(id='types', ctx=Load()), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='reprs', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Subscript(value=Name(id='type', ctx=Load()), slice=Constant(value='name'), ctx=Load())], keywords=[])], keywords=[]))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='reprs', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Name(id='type', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' is not of type '), FormattedValue(value=Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[Name(id='reprs', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[keyword(arg='context', value=Name(id='all_errors', ctx=Load()))])))])], decorator_list=[]), FunctionDef(name='contains_draft6_draft7', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='contains'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='array')], keywords=[])), body=[Return()], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='any', ctx=Load()), args=[GeneratorExp(elt=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='evolve', ctx=Load()), args=[], keywords=[keyword(arg='schema', value=Name(id='contains', ctx=Load()))]), attr='is_valid', ctx=Load()), args=[Name(id='element', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='element', ctx=Store()), iter=Name(id='instance', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), body=[Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[JoinedStr(values=[Constant(value='None of '), FormattedValue(value=Name(id='instance', ctx=Load()), conversion=114), Constant(value=' are valid under the given schema')])], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='recursiveRef', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='recursiveRef'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='resolved', ctx=Store())], value=Call(func=Name(id='lookup_recursive_ref', ctx=Load()), args=[Attribute(value=Name(id='validator', ctx=Load()), attr='_resolver', ctx=Load())], keywords=[])), Expr(value=YieldFrom(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Name(id='instance', ctx=Load()), Attribute(value=Name(id='resolved', ctx=Load()), attr='contents', ctx=Load())], keywords=[keyword(arg='resolver', value=Attribute(value=Name(id='resolved', ctx=Load()), attr='resolver', ctx=Load()))])))], decorator_list=[]), FunctionDef(name='find_evaluated_item_indexes_by_schema', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n    Get all indexes of items that get evaluated under the current schema.\n\n    Covers all keywords related to unevaluatedItems: items, prefixItems, if,\n    then, else, contains, unevaluatedItems, allOf, oneOf, anyOf\n    ')), If(test=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='schema', ctx=Load()), Constant(value='boolean')], keywords=[]), body=[Return(value=List(elts=[], ctx=Load()))], orelse=[]), Assign(targets=[Name(id='evaluated_indexes', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=Compare(left=Constant(value='$ref'), ops=[In()], comparators=[Name(id='schema', ctx=Load())]), body=[Assign(targets=[Name(id='resolved', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='validator', ctx=Load()), attr='_resolver', ctx=Load()), attr='lookup', ctx=Load()), args=[Subscript(value=Name(id='schema', ctx=Load()), slice=Constant(value='$ref'), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='evaluated_indexes', ctx=Load()), attr='extend', ctx=Load()), args=[Call(func=Name(id='find_evaluated_item_indexes_by_schema', ctx=Load()), args=[Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='evolve', ctx=Load()), args=[], keywords=[keyword(arg='schema', value=Attribute(value=Name(id='resolved', ctx=Load()), attr='contents', ctx=Load())), keyword(arg='_resolver', value=Attribute(value=Name(id='resolved', ctx=Load()), attr='resolver', ctx=Load()))]), Name(id='instance', ctx=Load()), Attribute(value=Name(id='resolved', ctx=Load()), attr='contents', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), If(test=Compare(left=Constant(value='items'), ops=[In()], comparators=[Name(id='schema', ctx=Load())]), body=[If(test=Compare(left=Constant(value='additionalItems'), ops=[In()], comparators=[Name(id='schema', ctx=Load())]), body=[Return(value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='range', ctx=Load()), args=[Constant(value=0), Call(func=Name(id='len', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[]), If(test=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Subscript(value=Name(id='schema', ctx=Load()), slice=Constant(value='items'), ctx=Load()), Constant(value='object')], keywords=[]), body=[Return(value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='range', ctx=Load()), args=[Constant(value=0), Call(func=Name(id='len', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[]), AugAssign(target=Name(id='evaluated_indexes', ctx=Store()), op=Add(), value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='range', ctx=Load()), args=[Constant(value=0), Call(func=Name(id='len', ctx=Load()), args=[Subscript(value=Name(id='schema', ctx=Load()), slice=Constant(value='items'), ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[]), If(test=Compare(left=Constant(value='if'), ops=[In()], comparators=[Name(id='schema', ctx=Load())]), body=[If(test=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='evolve', ctx=Load()), args=[], keywords=[keyword(arg='schema', value=Subscript(value=Name(id='schema', ctx=Load()), slice=Constant(value='if'), ctx=Load()))]), attr='is_valid', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), body=[AugAssign(target=Name(id='evaluated_indexes', ctx=Store()), op=Add(), value=Call(func=Name(id='find_evaluated_item_indexes_by_schema', ctx=Load()), args=[Name(id='validator', ctx=Load()), Name(id='instance', ctx=Load()), Subscript(value=Name(id='schema', ctx=Load()), slice=Constant(value='if'), ctx=Load())], keywords=[])), If(test=Compare(left=Constant(value='then'), ops=[In()], comparators=[Name(id='schema', ctx=Load())]), body=[AugAssign(target=Name(id='evaluated_indexes', ctx=Store()), op=Add(), value=Call(func=Name(id='find_evaluated_item_indexes_by_schema', ctx=Load()), args=[Name(id='validator', ctx=Load()), Name(id='instance', ctx=Load()), Subscript(value=Name(id='schema', ctx=Load()), slice=Constant(value='then'), ctx=Load())], keywords=[]))], orelse=[])], orelse=[If(test=Compare(left=Constant(value='else'), ops=[In()], comparators=[Name(id='schema', ctx=Load())]), body=[AugAssign(target=Name(id='evaluated_indexes', ctx=Store()), op=Add(), value=Call(func=Name(id='find_evaluated_item_indexes_by_schema', ctx=Load()), args=[Name(id='validator', ctx=Load()), Name(id='instance', ctx=Load()), Subscript(value=Name(id='schema', ctx=Load()), slice=Constant(value='else'), ctx=Load())], keywords=[]))], orelse=[])])], orelse=[]), For(target=Name(id='keyword', ctx=Store()), iter=List(elts=[Constant(value='contains'), Constant(value='unevaluatedItems')], ctx=Load()), body=[If(test=Compare(left=Name(id='keyword', ctx=Load()), ops=[In()], comparators=[Name(id='schema', ctx=Load())]), body=[For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), body=[If(test=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='evolve', ctx=Load()), args=[], keywords=[keyword(arg='schema', value=Subscript(value=Name(id='schema', ctx=Load()), slice=Name(id='keyword', ctx=Load()), ctx=Load()))]), attr='is_valid', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='evaluated_indexes', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='k', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], orelse=[]), For(target=Name(id='keyword', ctx=Store()), iter=List(elts=[Constant(value='allOf'), Constant(value='oneOf'), Constant(value='anyOf')], ctx=Load()), body=[If(test=Compare(left=Name(id='keyword', ctx=Load()), ops=[In()], comparators=[Name(id='schema', ctx=Load())]), body=[For(target=Name(id='subschema', ctx=Store()), iter=Subscript(value=Name(id='schema', ctx=Load()), slice=Name(id='keyword', ctx=Load()), ctx=Load()), body=[Assign(targets=[Name(id='errs', ctx=Store())], value=Call(func=Name(id='next', ctx=Load()), args=[Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='descend', ctx=Load()), args=[Name(id='instance', ctx=Load()), Name(id='subschema', ctx=Load())], keywords=[]), Constant(value=None)], keywords=[])), If(test=Compare(left=Name(id='errs', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[AugAssign(target=Name(id='evaluated_indexes', ctx=Store()), op=Add(), value=Call(func=Name(id='find_evaluated_item_indexes_by_schema', ctx=Load()), args=[Name(id='validator', ctx=Load()), Name(id='instance', ctx=Load()), Name(id='subschema', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], orelse=[]), Return(value=Name(id='evaluated_indexes', ctx=Load()))], decorator_list=[]), FunctionDef(name='unevaluatedItems_draft2019', args=arguments(posonlyargs=[], args=[arg(arg='validator'), arg(arg='unevaluatedItems'), arg(arg='instance'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='validator', ctx=Load()), attr='is_type', ctx=Load()), args=[Name(id='instance', ctx=Load()), Constant(value='array')], keywords=[])), body=[Return()], orelse=[]), Assign(targets=[Name(id='evaluated_item_indexes', ctx=Store())], value=Call(func=Name(id='find_evaluated_item_indexes_by_schema', ctx=Load()), args=[Name(id='validator', ctx=Load()), Name(id='instance', ctx=Load()), Name(id='schema', ctx=Load())], keywords=[])), Assign(targets=[Name(id='unevaluated_items', ctx=Store())], value=ListComp(elt=Name(id='item', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='index', ctx=Store()), Name(id='item', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]), ifs=[Compare(left=Name(id='index', ctx=Load()), ops=[NotIn()], comparators=[Name(id='evaluated_item_indexes', ctx=Load())])], is_async=0)])), If(test=Name(id='unevaluated_items', ctx=Load()), body=[Assign(targets=[Name(id='error', ctx=Store())], value=Constant(value='Unevaluated items are not allowed (%s %s unexpected)')), Expr(value=Yield(value=Call(func=Name(id='ValidationError', ctx=Load()), args=[BinOp(left=Name(id='error', ctx=Load()), op=Mod(), right=Call(func=Attribute(value=Name(id='_utils', ctx=Load()), attr='extras_msg', ctx=Load()), args=[Name(id='unevaluated_items', ctx=Load())], keywords=[]))], keywords=[])))], orelse=[])], decorator_list=[])], type_ignores=[])