Module(body=[Expr(value=Constant(value='\nAn unused schema registry should not cause slower validation.\n\n"Unused" here means one where no reference resolution is occurring anyhow.\n\nSee https://github.com/python-jsonschema/jsonschema/issues/1088.\n')), ImportFrom(module='pyperf', names=[alias(name='Runner')], level=0), ImportFrom(module='referencing', names=[alias(name='Registry')], level=0), ImportFrom(module='referencing.jsonschema', names=[alias(name='DRAFT201909')], level=0), ImportFrom(module='jsonschema', names=[alias(name='Draft201909Validator')], level=0), Assign(targets=[Name(id='registry', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Registry', ctx=Load()), args=[], keywords=[]), attr='with_resource', ctx=Load()), args=[Constant(value='urn:example:foo'), Call(func=Attribute(value=Name(id='DRAFT201909', ctx=Load()), attr='create_resource', ctx=Load()), args=[Dict(keys=[], values=[])], keywords=[])], keywords=[])), Assign(targets=[Name(id='schema', ctx=Store())], value=Dict(keys=[Constant(value='$ref')], values=[Constant(value='https://json-schema.org/draft/2019-09/schema')])), Assign(targets=[Name(id='instance', ctx=Store())], value=Dict(keys=[Constant(value='maxLength')], values=[Constant(value=4)])), Assign(targets=[Name(id='no_registry', ctx=Store())], value=Call(func=Name(id='Draft201909Validator', ctx=Load()), args=[Name(id='schema', ctx=Load())], keywords=[])), Assign(targets=[Name(id='with_useless_registry', ctx=Store())], value=Call(func=Name(id='Draft201909Validator', ctx=Load()), args=[Name(id='schema', ctx=Load())], keywords=[keyword(arg='registry', value=Name(id='registry', ctx=Load()))])), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Assign(targets=[Name(id='runner', ctx=Store())], value=Call(func=Name(id='Runner', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='runner', ctx=Load()), attr='bench_func', ctx=Load()), args=[Constant(value='no registry'), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='no_registry', ctx=Load()), attr='is_valid', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='runner', ctx=Load()), attr='bench_func', ctx=Load()), args=[Constant(value='useless registry'), Lambda(args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='with_useless_registry', ctx=Load()), attr='is_valid', ctx=Load()), args=[Name(id='instance', ctx=Load())], keywords=[]))], keywords=[]))], orelse=[])], type_ignores=[])