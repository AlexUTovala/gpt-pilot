Module(body=[Expr(value=Constant(value="\nLightweight connection pooling for peewee.\n\nIn a multi-threaded application, up to `max_connections` will be opened. Each\nthread (or, if using gevent, greenlet) will have it's own connection.\n\nIn a single-threaded application, only one connection will be created. It will\nbe continually recycled until either it exceeds the stale timeout or is closed\nexplicitly (using `.manual_close()`).\n\nBy default, all your application needs to do is ensure that connections are\nclosed when you are finished with them, and they will be returned to the pool.\nFor web applications, this typically means that at the beginning of a request,\nyou will open a connection, and when you return a response, you will close the\nconnection.\n\nSimple Postgres pool example code:\n\n    # Use the special postgresql extensions.\n    from playhouse.pool import PooledPostgresqlExtDatabase\n\n    db = PooledPostgresqlExtDatabase(\n        'my_app',\n        max_connections=32,\n        stale_timeout=300,  # 5 minutes.\n        user='postgres')\n\n    class BaseModel(Model):\n        class Meta:\n            database = db\n\nThat's it!\n")), Import(names=[alias(name='heapq')]), Import(names=[alias(name='logging')]), Import(names=[alias(name='random')]), Import(names=[alias(name='time')]), ImportFrom(module='collections', names=[alias(name='namedtuple')], level=0), ImportFrom(module='itertools', names=[alias(name='chain')], level=0), Try(body=[ImportFrom(module='psycopg2.extensions', names=[alias(name='TRANSACTION_STATUS_IDLE')], level=0), ImportFrom(module='psycopg2.extensions', names=[alias(name='TRANSACTION_STATUS_INERROR')], level=0), ImportFrom(module='psycopg2.extensions', names=[alias(name='TRANSACTION_STATUS_UNKNOWN')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Assign(targets=[Name(id='TRANSACTION_STATUS_IDLE', ctx=Store()), Name(id='TRANSACTION_STATUS_INERROR', ctx=Store()), Name(id='TRANSACTION_STATUS_UNKNOWN', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[]), ImportFrom(module='peewee', names=[alias(name='MySQLDatabase')], level=0), ImportFrom(module='peewee', names=[alias(name='PostgresqlDatabase')], level=0), ImportFrom(module='peewee', names=[alias(name='SqliteDatabase')], level=0), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Constant(value='peewee.pool')], keywords=[])), FunctionDef(name='make_int', args=arguments(posonlyargs=[], args=[arg(arg='val')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='val', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='val', ctx=Load()), Tuple(elts=[Name(id='int', ctx=Load()), Name(id='float', ctx=Load())], ctx=Load())], keywords=[]))]), body=[Return(value=Call(func=Name(id='int', ctx=Load()), args=[Name(id='val', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='val', ctx=Load()))], decorator_list=[]), ClassDef(name='MaxConnectionsExceeded', bases=[Name(id='ValueError', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), Assign(targets=[Name(id='PoolConnection', ctx=Store())], value=Call(func=Name(id='namedtuple', ctx=Load()), args=[Constant(value='PoolConnection'), Tuple(elts=[Constant(value='timestamp'), Constant(value='connection'), Constant(value='checked_out')], ctx=Load())], keywords=[])), ClassDef(name='PooledDatabase', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database'), arg(arg='max_connections'), arg(arg='stale_timeout'), arg(arg='timeout')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=20), Constant(value=None), Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_max_connections', ctx=Store())], value=Call(func=Name(id='make_int', ctx=Load()), args=[Name(id='max_connections', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_stale_timeout', ctx=Store())], value=Call(func=Name(id='make_int', ctx=Load()), args=[Name(id='stale_timeout', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_wait_timeout', ctx=Store())], value=Call(func=Name(id='make_int', ctx=Load()), args=[Name(id='timeout', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_wait_timeout', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_wait_timeout', ctx=Store())], value=Call(func=Name(id='float', ctx=Load()), args=[Constant(value='inf')], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_connections', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_in_use', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='conn_key', ctx=Store())], value=Name(id='id', ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='PooledDatabase', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='init', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database'), arg(arg='max_connections'), arg(arg='stale_timeout'), arg(arg='timeout')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='connect_kwargs'), defaults=[Constant(value=None), Constant(value=None), Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='PooledDatabase', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='init', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[keyword(value=Name(id='connect_kwargs', ctx=Load()))])), If(test=Compare(left=Name(id='max_connections', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_max_connections', ctx=Store())], value=Call(func=Name(id='make_int', ctx=Load()), args=[Name(id='max_connections', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='stale_timeout', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_stale_timeout', ctx=Store())], value=Call(func=Name(id='make_int', ctx=Load()), args=[Name(id='stale_timeout', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='timeout', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_wait_timeout', ctx=Store())], value=Call(func=Name(id='make_int', ctx=Load()), args=[Name(id='timeout', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_wait_timeout', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_wait_timeout', ctx=Store())], value=Call(func=Name(id='float', ctx=Load()), args=[Constant(value='inf')], keywords=[]))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='connect', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='reuse_if_open')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_wait_timeout', ctx=Load())), body=[Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='PooledDatabase', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='connect', ctx=Load()), args=[Name(id='reuse_if_open', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='expires', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_wait_timeout', ctx=Load()))), While(test=Compare(left=Name(id='expires', ctx=Load()), ops=[Gt()], comparators=[Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[])]), body=[Try(body=[Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='PooledDatabase', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='connect', ctx=Load()), args=[Name(id='reuse_if_open', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='MaxConnectionsExceeded', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='sleep', ctx=Load()), args=[Constant(value=0.1)], keywords=[]))])], orelse=[Return(value=Name(id='ret', ctx=Load()))], finalbody=[])], orelse=[]), Raise(exc=Call(func=Name(id='MaxConnectionsExceeded', ctx=Load()), args=[Constant(value='Max connections exceeded, timed out attempting to connect.')], keywords=[]))], decorator_list=[]), FunctionDef(name='_connect', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[While(test=Constant(value=True), body=[Try(body=[Assign(targets=[Tuple(elts=[Name(id='ts', ctx=Store()), Name(id='conn', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='heapq', ctx=Load()), attr='heappop', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_connections', ctx=Load())], keywords=[])), Assign(targets=[Name(id='key', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='conn_key', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='IndexError', ctx=Load()), body=[Assign(targets=[Name(id='ts', ctx=Store()), Name(id='conn', ctx=Store())], value=Constant(value=None)), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='No connection available in pool.')], keywords=[])), Break()])], orelse=[If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_is_closed', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Connection %s was closed.'), Name(id='key', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ts', ctx=Store()), Name(id='conn', ctx=Store())], value=Constant(value=None))], orelse=[If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_stale_timeout', ctx=Load()), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_is_stale', ctx=Load()), args=[Name(id='ts', ctx=Load())], keywords=[])]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Connection %s was stale, closing.'), Name(id='key', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_close', ctx=Load()), args=[Name(id='conn', ctx=Load()), Constant(value=True)], keywords=[])), Assign(targets=[Name(id='ts', ctx=Store()), Name(id='conn', ctx=Store())], value=Constant(value=None))], orelse=[Break()])])], finalbody=[])], orelse=[]), If(test=Compare(left=Name(id='conn', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_max_connections', ctx=Load()), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_in_use', ctx=Load())], keywords=[]), ops=[GtE()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_max_connections', ctx=Load())])]), body=[Raise(exc=Call(func=Name(id='MaxConnectionsExceeded', ctx=Load()), args=[Constant(value='Exceeded maximum connections.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='PooledDatabase', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='_connect', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='ts', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), op=Sub(), right=BinOp(left=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='random', ctx=Load()), args=[], keywords=[]), op=Div(), right=Constant(value=1000)))), Assign(targets=[Name(id='key', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='conn_key', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Created new connection %s.'), Name(id='key', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_in_use', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store())], value=Call(func=Name(id='PoolConnection', ctx=Load()), args=[Name(id='ts', ctx=Load()), Name(id='conn', ctx=Load()), Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[])], keywords=[])), Return(value=Name(id='conn', ctx=Load()))], decorator_list=[]), FunctionDef(name='_is_stale', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='timestamp')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=BinOp(left=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), op=Sub(), right=Name(id='timestamp', ctx=Load())), ops=[Gt()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_stale_timeout', ctx=Load())]))], decorator_list=[]), FunctionDef(name='_is_closed', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=False))], decorator_list=[]), FunctionDef(name='_can_reuse', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=True))], decorator_list=[]), FunctionDef(name='_close', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn'), arg(arg='close_conn')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Assign(targets=[Name(id='key', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='conn_key', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[])), If(test=Name(id='close_conn', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='PooledDatabase', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='_close', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='key', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_in_use', ctx=Load())]), body=[Assign(targets=[Name(id='pool_conn', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_in_use', ctx=Load()), attr='pop', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_stale_timeout', ctx=Load()), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_is_stale', ctx=Load()), args=[Attribute(value=Name(id='pool_conn', ctx=Load()), attr='timestamp', ctx=Load())], keywords=[])]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Closing stale connection %s.'), Name(id='key', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='PooledDatabase', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='_close', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_can_reuse', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Returning %s to pool.'), Name(id='key', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='heapq', ctx=Load()), attr='heappush', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_connections', ctx=Load()), Tuple(elts=[Attribute(value=Name(id='pool_conn', ctx=Load()), attr='timestamp', ctx=Load()), Name(id='conn', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='Closed %s.'), Name(id='key', ctx=Load())], keywords=[]))])])], orelse=[])])], decorator_list=[]), FunctionDef(name='manual_close', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Close the underlying connection without returning it to the pool.\n        ')), If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_closed', ctx=Load()), args=[], keywords=[]), body=[Return(value=Constant(value=False))], orelse=[]), Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='connection', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_in_use', ctx=Load()), attr='pop', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='conn_key', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_close', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[keyword(arg='close_conn', value=Constant(value=True))]))], decorator_list=[]), FunctionDef(name='close_idle', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[For(target=Tuple(elts=[Name(id='_', ctx=Store()), Name(id='conn', ctx=Store())], ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_connections', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_close', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[keyword(arg='close_conn', value=Constant(value=True))]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_connections', ctx=Store())], value=List(elts=[], ctx=Load()))])], decorator_list=[]), FunctionDef(name='close_stale', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='age')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=600)]), body=[With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[Assign(targets=[Name(id='in_use', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='cutoff', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), op=Sub(), right=Name(id='age', ctx=Load()))), Assign(targets=[Name(id='n', ctx=Store())], value=Constant(value=0)), For(target=Tuple(elts=[Name(id='key', ctx=Store()), Name(id='pool_conn', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_in_use', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Compare(left=Attribute(value=Name(id='pool_conn', ctx=Load()), attr='checked_out', ctx=Load()), ops=[Lt()], comparators=[Name(id='cutoff', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_close', ctx=Load()), args=[Attribute(value=Name(id='pool_conn', ctx=Load()), attr='connection', ctx=Load())], keywords=[keyword(arg='close_conn', value=Constant(value=True))])), AugAssign(target=Name(id='n', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[Assign(targets=[Subscript(value=Name(id='in_use', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store())], value=Name(id='pool_conn', ctx=Load()))])], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_in_use', ctx=Store())], value=Name(id='in_use', ctx=Load()))]), Return(value=Name(id='n', ctx=Load()))], decorator_list=[]), FunctionDef(name='close_all', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[For(target=Tuple(elts=[Name(id='_', ctx=Store()), Name(id='conn', ctx=Store())], ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='_connections', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_close', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[keyword(arg='close_conn', value=Constant(value=True))]))], orelse=[]), For(target=Name(id='pool_conn', ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_in_use', ctx=Load()), attr='values', ctx=Load()), args=[], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_close', ctx=Load()), args=[Attribute(value=Name(id='pool_conn', ctx=Load()), attr='connection', ctx=Load())], keywords=[keyword(arg='close_conn', value=Constant(value=True))]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_connections', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_in_use', ctx=Store())], value=Dict(keys=[], values=[]))])], decorator_list=[])], decorator_list=[]), ClassDef(name='PooledMySQLDatabase', bases=[Name(id='PooledDatabase', ctx=Load()), Name(id='MySQLDatabase', ctx=Load())], keywords=[], body=[FunctionDef(name='_is_closed', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='ping', ctx=Load()), args=[Constant(value=False)], keywords=[]))], handlers=[ExceptHandler(body=[Return(value=Constant(value=True))])], orelse=[Return(value=Constant(value=False))], finalbody=[])], decorator_list=[])], decorator_list=[]), ClassDef(name='_PooledPostgresqlDatabase', bases=[Name(id='PooledDatabase', ctx=Load())], keywords=[], body=[FunctionDef(name='_is_closed', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='conn', ctx=Load()), attr='closed', ctx=Load()), body=[Return(value=Constant(value=True))], orelse=[]), Assign(targets=[Name(id='txn_status', ctx=Store())], value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='get_transaction_status', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='txn_status', ctx=Load()), ops=[Eq()], comparators=[Name(id='TRANSACTION_STATUS_UNKNOWN', ctx=Load())]), body=[Return(value=Constant(value=True))], orelse=[If(test=Compare(left=Name(id='txn_status', ctx=Load()), ops=[NotEq()], comparators=[Name(id='TRANSACTION_STATUS_IDLE', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='rollback', ctx=Load()), args=[], keywords=[]))], orelse=[])]), Return(value=Constant(value=False))], decorator_list=[]), FunctionDef(name='_can_reuse', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='txn_status', ctx=Store())], value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='get_transaction_status', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='txn_status', ctx=Load()), ops=[Eq()], comparators=[Name(id='TRANSACTION_STATUS_UNKNOWN', ctx=Load())]), body=[Return(value=Constant(value=False))], orelse=[If(test=Compare(left=Name(id='txn_status', ctx=Load()), ops=[Eq()], comparators=[Name(id='TRANSACTION_STATUS_INERROR', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=Compare(left=Name(id='txn_status', ctx=Load()), ops=[NotEq()], comparators=[Name(id='TRANSACTION_STATUS_IDLE', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='conn', ctx=Load()), attr='rollback', ctx=Load()), args=[], keywords=[]))], orelse=[])])]), Return(value=Constant(value=True))], decorator_list=[])], decorator_list=[]), ClassDef(name='PooledPostgresqlDatabase', bases=[Name(id='_PooledPostgresqlDatabase', ctx=Load()), Name(id='PostgresqlDatabase', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), Try(body=[ImportFrom(module='playhouse.postgres_ext', names=[alias(name='PostgresqlExtDatabase')], level=0), ClassDef(name='PooledPostgresqlExtDatabase', bases=[Name(id='_PooledPostgresqlDatabase', ctx=Load()), Name(id='PostgresqlExtDatabase', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[])], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Assign(targets=[Name(id='PooledPostgresqlExtDatabase', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[]), ClassDef(name='_PooledSqliteDatabase', bases=[Name(id='PooledDatabase', ctx=Load())], keywords=[], body=[FunctionDef(name='_is_closed', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Expr(value=Attribute(value=Name(id='conn', ctx=Load()), attr='total_changes', ctx=Load()))], handlers=[ExceptHandler(body=[Return(value=Constant(value=True))])], orelse=[Return(value=Constant(value=False))], finalbody=[])], decorator_list=[])], decorator_list=[]), ClassDef(name='PooledSqliteDatabase', bases=[Name(id='_PooledSqliteDatabase', ctx=Load()), Name(id='SqliteDatabase', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), Try(body=[ImportFrom(module='playhouse.sqlite_ext', names=[alias(name='SqliteExtDatabase')], level=0), ClassDef(name='PooledSqliteExtDatabase', bases=[Name(id='_PooledSqliteDatabase', ctx=Load()), Name(id='SqliteExtDatabase', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[])], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Assign(targets=[Name(id='PooledSqliteExtDatabase', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[]), Try(body=[ImportFrom(module='playhouse.sqlite_ext', names=[alias(name='CSqliteExtDatabase')], level=0), ClassDef(name='PooledCSqliteExtDatabase', bases=[Name(id='_PooledSqliteDatabase', ctx=Load()), Name(id='CSqliteExtDatabase', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[])], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Assign(targets=[Name(id='PooledCSqliteExtDatabase', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[])], type_ignores=[])