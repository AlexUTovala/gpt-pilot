Module(body=[Try(body=[ImportFrom(module='collections', names=[alias(name='OrderedDict')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Assign(targets=[Name(id='OrderedDict', ctx=Store())], value=Name(id='dict', ctx=Load()))])], orelse=[], finalbody=[]), ImportFrom(module='collections', names=[alias(name='namedtuple')], level=0), ImportFrom(module='inspect', names=[alias(name='isclass')], level=0), Import(names=[alias(name='re')]), Import(names=[alias(name='warnings')]), ImportFrom(module='peewee', names=[alias(name='*')], level=0), ImportFrom(module='peewee', names=[alias(name='_StringField')], level=0), ImportFrom(module='peewee', names=[alias(name='_query_val_transform')], level=0), ImportFrom(module='peewee', names=[alias(name='CommaNodeList')], level=0), ImportFrom(module='peewee', names=[alias(name='SCOPE_VALUES')], level=0), ImportFrom(module='peewee', names=[alias(name='make_snake_case')], level=0), ImportFrom(module='peewee', names=[alias(name='text_type')], level=0), Try(body=[ImportFrom(module='pymysql.constants', names=[alias(name='FIELD_TYPE')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Try(body=[ImportFrom(module='MySQLdb.constants', names=[alias(name='FIELD_TYPE')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Assign(targets=[Name(id='FIELD_TYPE', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[])])], orelse=[], finalbody=[]), Try(body=[ImportFrom(module='playhouse', names=[alias(name='postgres_ext')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Assign(targets=[Name(id='postgres_ext', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[]), Try(body=[ImportFrom(module='playhouse.cockroachdb', names=[alias(name='CockroachDatabase')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Assign(targets=[Name(id='CockroachDatabase', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[]), Assign(targets=[Name(id='RESERVED_WORDS', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[List(elts=[Constant(value='and'), Constant(value='as'), Constant(value='assert'), Constant(value='break'), Constant(value='class'), Constant(value='continue'), Constant(value='def'), Constant(value='del'), Constant(value='elif'), Constant(value='else'), Constant(value='except'), Constant(value='exec'), Constant(value='finally'), Constant(value='for'), Constant(value='from'), Constant(value='global'), Constant(value='if'), Constant(value='import'), Constant(value='in'), Constant(value='is'), Constant(value='lambda'), Constant(value='not'), Constant(value='or'), Constant(value='pass'), Constant(value='print'), Constant(value='raise'), Constant(value='return'), Constant(value='try'), Constant(value='while'), Constant(value='with'), Constant(value='yield')], ctx=Load())], keywords=[])), ClassDef(name='UnknownField', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='Column', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    Store metadata about a database column.\n    ')), Assign(targets=[Name(id='primary_key_types', ctx=Store())], value=Tuple(elts=[Name(id='IntegerField', ctx=Load()), Name(id='AutoField', ctx=Load())], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name'), arg(arg='field_class'), arg(arg='raw_column_type'), arg(arg='nullable'), arg(arg='primary_key'), arg(arg='column_name'), arg(arg='index'), arg(arg='unique'), arg(arg='default'), arg(arg='extra_parameters')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=None), Constant(value=False), Constant(value=False), Constant(value=None), Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store())], value=Name(id='name', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='field_class', ctx=Store())], value=Name(id='field_class', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='raw_column_type', ctx=Store())], value=Name(id='raw_column_type', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='nullable', ctx=Store())], value=Name(id='nullable', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='primary_key', ctx=Store())], value=Name(id='primary_key', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='column_name', ctx=Store())], value=Name(id='column_name', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Store())], value=Name(id='index', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='unique', ctx=Store())], value=Name(id='unique', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='default', ctx=Store())], value=Name(id='default', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='extra_parameters', ctx=Store())], value=Name(id='extra_parameters', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='related_name', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='to_field', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='attrs', ctx=Store())], value=List(elts=[Constant(value='field_class'), Constant(value='raw_column_type'), Constant(value='nullable'), Constant(value='primary_key'), Constant(value='column_name')], ctx=Load())), Assign(targets=[Name(id='keyword_args', ctx=Store())], value=Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[GeneratorExp(elt=BinOp(left=Constant(value='%s=%s'), op=Mod(), right=Tuple(elts=[Name(id='attr', ctx=Load()), Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='attr', ctx=Load())], keywords=[])], ctx=Load())), generators=[comprehension(target=Name(id='attr', ctx=Store()), iter=Name(id='attrs', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), Return(value=BinOp(left=Constant(value='Column(%s, %s)'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), Name(id='keyword_args', ctx=Load())], ctx=Load())))], decorator_list=[]), FunctionDef(name='get_field_parameters', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='params', ctx=Store())], value=Dict(keys=[], values=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='extra_parameters', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='params', ctx=Load()), attr='update', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='extra_parameters', ctx=Load())], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='nullable', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='null'), ctx=Store())], value=Constant(value=True))], orelse=[]), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='field_class', ctx=Load()), ops=[Is()], comparators=[Name(id='ForeignKeyField', ctx=Load())]), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='column_name', ctx=Load())])]), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='column_name'), ctx=Store())], value=BinOp(left=Constant(value="'%s'"), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='column_name', ctx=Load())))], orelse=[]), If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='primary_key', ctx=Load()), UnaryOp(op=Not(), operand=Call(func=Name(id='issubclass', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='field_class', ctx=Load()), Name(id='AutoField', ctx=Load())], keywords=[]))]), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='primary_key'), ctx=Store())], value=Constant(value=True))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='default', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='constraints'), ctx=Store())], value=BinOp(left=Constant(value='[SQL("DEFAULT %s")]'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='default', ctx=Load())))], orelse=[]), If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_foreign_key', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='model'), ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Load())), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='to_field', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='field'), ctx=Store())], value=BinOp(left=Constant(value="'%s'"), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='to_field', ctx=Load())))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='related_name', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='backref'), ctx=Store())], value=BinOp(left=Constant(value="'%s'"), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='related_name', ctx=Load())))], orelse=[])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_primary_key', ctx=Load()), args=[], keywords=[])), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='unique', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='unique'), ctx=Store())], value=Constant(value='True'))], orelse=[If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='index', ctx=Load()), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_foreign_key', ctx=Load()), args=[], keywords=[]))]), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='index'), ctx=Store())], value=Constant(value='True'))], orelse=[])])], orelse=[]), Return(value=Name(id='params', ctx=Load()))], decorator_list=[]), FunctionDef(name='is_primary_key', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='field_class', ctx=Load()), ops=[Is()], comparators=[Name(id='AutoField', ctx=Load())]), Attribute(value=Name(id='self', ctx=Load()), attr='primary_key', ctx=Load())]))], decorator_list=[]), FunctionDef(name='is_foreign_key', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='field_class', ctx=Load()), ops=[Is()], comparators=[Name(id='ForeignKeyField', ctx=Load())]))], decorator_list=[]), FunctionDef(name='is_self_referential_fk', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='field_class', ctx=Load()), ops=[Is()], comparators=[Name(id='ForeignKeyField', ctx=Load())]), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Load()), ops=[Eq()], comparators=[Constant(value="'self'")])]))], decorator_list=[]), FunctionDef(name='set_foreign_key', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='foreign_key'), arg(arg='model_names'), arg(arg='dest'), arg(arg='related_name')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='foreign_key', ctx=Store())], value=Name(id='foreign_key', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='field_class', ctx=Store())], value=Name(id='ForeignKeyField', ctx=Load())), If(test=Compare(left=Attribute(value=Name(id='foreign_key', ctx=Load()), attr='dest_table', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='foreign_key', ctx=Load()), attr='table', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Store())], value=Constant(value="'self'"))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='rel_model', ctx=Store())], value=Subscript(value=Name(id='model_names', ctx=Load()), slice=Attribute(value=Name(id='foreign_key', ctx=Load()), attr='dest_table', ctx=Load()), ctx=Load()))]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='to_field', ctx=Store())], value=BoolOp(op=Or(), values=[BoolOp(op=And(), values=[Name(id='dest', ctx=Load()), Attribute(value=Name(id='dest', ctx=Load()), attr='name', ctx=Load())]), Constant(value=None)])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='related_name', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='related_name', ctx=Load()), Constant(value=None)]))], decorator_list=[]), FunctionDef(name='get_field', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='field_params', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Tuple(elts=[Name(id='key', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_field_parameters', ctx=Load()), args=[], keywords=[]), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=BoolOp(op=And(), values=[Call(func=Name(id='isclass', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), Call(func=Name(id='issubclass', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[])]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Attribute(value=Name(id='value', ctx=Load()), attr='__name__', ctx=Load()))], orelse=[]), Assign(targets=[Subscript(value=Name(id='field_params', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store())], value=Name(id='value', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='param_str', ctx=Store())], value=Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[GeneratorExp(elt=BinOp(left=Constant(value='%s=%s'), op=Mod(), right=Tuple(elts=[Name(id='k', ctx=Load()), Name(id='v', ctx=Load())], ctx=Load())), generators=[comprehension(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='sorted', ctx=Load()), args=[Call(func=Attribute(value=Name(id='field_params', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[])], keywords=[]), ifs=[], is_async=0)])], keywords=[])), Assign(targets=[Name(id='field', ctx=Store())], value=BinOp(left=Constant(value='%s = %s(%s)'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field_class', ctx=Load()), attr='__name__', ctx=Load()), Name(id='param_str', ctx=Load())], ctx=Load()))), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='field_class', ctx=Load()), ops=[Is()], comparators=[Name(id='UnknownField', ctx=Load())]), body=[Assign(targets=[Name(id='field', ctx=Store())], value=BinOp(left=Constant(value='%s  # %s'), op=Mod(), right=Tuple(elts=[Name(id='field', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='raw_column_type', ctx=Load())], ctx=Load())))], orelse=[]), Return(value=Name(id='field', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='Metadata', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='column_map', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='extension_import', ctx=Store())], value=Constant(value='')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Store())], value=Name(id='database', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='requires_extension', ctx=Store())], value=Constant(value=False))], decorator_list=[]), FunctionDef(name='execute', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='sql')], vararg=arg(arg='params'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='execute_sql', ctx=Load()), args=[Name(id='sql', ctx=Load()), Name(id='params', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_columns', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='metadata', ctx=Store())], value=Call(func=Name(id='OrderedDict', ctx=Load()), args=[GeneratorExp(elt=Tuple(elts=[Attribute(value=Name(id='metadata', ctx=Load()), attr='name', ctx=Load()), Name(id='metadata', ctx=Load())], ctx=Load()), generators=[comprehension(target=Name(id='metadata', ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='get_columns', ctx=Load()), args=[Name(id='table', ctx=Load()), Name(id='schema', ctx=Load())], keywords=[]), ifs=[], is_async=0)])], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='column_types', ctx=Store()), Name(id='extra_params', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_column_types', ctx=Load()), args=[Name(id='table', ctx=Load()), Name(id='schema', ctx=Load())], keywords=[])), Assign(targets=[Name(id='pk_names', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_primary_keys', ctx=Load()), args=[Name(id='table', ctx=Load()), Name(id='schema', ctx=Load())], keywords=[])), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='pk_names', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), body=[Assign(targets=[Name(id='pk', ctx=Store())], value=Subscript(value=Name(id='pk_names', ctx=Load()), slice=Constant(value=0), ctx=Load())), If(test=Compare(left=Subscript(value=Name(id='column_types', ctx=Load()), slice=Name(id='pk', ctx=Load()), ctx=Load()), ops=[Is()], comparators=[Name(id='IntegerField', ctx=Load())]), body=[Assign(targets=[Subscript(value=Name(id='column_types', ctx=Load()), slice=Name(id='pk', ctx=Load()), ctx=Store())], value=Name(id='AutoField', ctx=Load()))], orelse=[If(test=Compare(left=Subscript(value=Name(id='column_types', ctx=Load()), slice=Name(id='pk', ctx=Load()), ctx=Load()), ops=[Is()], comparators=[Name(id='BigIntegerField', ctx=Load())]), body=[Assign(targets=[Subscript(value=Name(id='column_types', ctx=Load()), slice=Name(id='pk', ctx=Load()), ctx=Store())], value=Name(id='BigAutoField', ctx=Load()))], orelse=[])])], orelse=[]), Assign(targets=[Name(id='columns', ctx=Store())], value=Call(func=Name(id='OrderedDict', ctx=Load()), args=[], keywords=[])), For(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='column_data', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='metadata', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='field_class', ctx=Store())], value=Subscript(value=Name(id='column_types', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='default', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_clean_default', ctx=Load()), args=[Name(id='field_class', ctx=Load()), Attribute(value=Name(id='column_data', ctx=Load()), attr='default', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='columns', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Store())], value=Call(func=Name(id='Column', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[keyword(arg='field_class', value=Name(id='field_class', ctx=Load())), keyword(arg='raw_column_type', value=Attribute(value=Name(id='column_data', ctx=Load()), attr='data_type', ctx=Load())), keyword(arg='nullable', value=Attribute(value=Name(id='column_data', ctx=Load()), attr='null', ctx=Load())), keyword(arg='primary_key', value=Attribute(value=Name(id='column_data', ctx=Load()), attr='primary_key', ctx=Load())), keyword(arg='column_name', value=Name(id='name', ctx=Load())), keyword(arg='default', value=Name(id='default', ctx=Load())), keyword(arg='extra_parameters', value=Call(func=Attribute(value=Name(id='extra_params', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[]))]))], orelse=[]), Return(value=Name(id='columns', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_column_types', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='_clean_default', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field_class'), arg(arg='default')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='default', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Name(id='field_class', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Name(id='AutoField', ctx=Load()), Name(id='BigAutoField', ctx=Load())], ctx=Load())]), Compare(left=Call(func=Attribute(value=Name(id='default', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value='null')])]), body=[Return()], orelse=[]), If(test=BoolOp(op=And(), values=[Call(func=Name(id='issubclass', ctx=Load()), args=[Name(id='field_class', ctx=Load()), Name(id='_StringField', ctx=Load())], keywords=[]), Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='default', ctx=Load()), Name(id='text_type', ctx=Load())], keywords=[]), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='default', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value="'")], keywords=[]))]), body=[Assign(targets=[Name(id='default', ctx=Store())], value=BinOp(left=Constant(value="'%s'"), op=Mod(), right=Name(id='default', ctx=Load())))], orelse=[]), Return(value=BoolOp(op=Or(), values=[Name(id='default', ctx=Load()), Constant(value="''")]))], decorator_list=[]), FunctionDef(name='get_foreign_keys', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='get_foreign_keys', ctx=Load()), args=[Name(id='table', ctx=Load()), Name(id='schema', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_primary_keys', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='get_primary_keys', ctx=Load()), args=[Name(id='table', ctx=Load()), Name(id='schema', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_indexes', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='get_indexes', ctx=Load()), args=[Name(id='table', ctx=Load()), Name(id='schema', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='PostgresqlMetadata', bases=[Name(id='Metadata', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='column_map', ctx=Store())], value=Dict(keys=[Constant(value=16), Constant(value=17), Constant(value=20), Constant(value=21), Constant(value=23), Constant(value=25), Constant(value=700), Constant(value=701), Constant(value=1042), Constant(value=1043), Constant(value=1082), Constant(value=1114), Constant(value=1184), Constant(value=1083), Constant(value=1266), Constant(value=1700), Constant(value=2950)], values=[Name(id='BooleanField', ctx=Load()), Name(id='BlobField', ctx=Load()), Name(id='BigIntegerField', ctx=Load()), Name(id='SmallIntegerField', ctx=Load()), Name(id='IntegerField', ctx=Load()), Name(id='TextField', ctx=Load()), Name(id='FloatField', ctx=Load()), Name(id='DoubleField', ctx=Load()), Name(id='CharField', ctx=Load()), Name(id='CharField', ctx=Load()), Name(id='DateField', ctx=Load()), Name(id='DateTimeField', ctx=Load()), Name(id='DateTimeField', ctx=Load()), Name(id='TimeField', ctx=Load()), Name(id='TimeField', ctx=Load()), Name(id='DecimalField', ctx=Load()), Name(id='UUIDField', ctx=Load())])), Assign(targets=[Name(id='array_types', ctx=Store())], value=Dict(keys=[Constant(value=1000), Constant(value=1001), Constant(value=1005), Constant(value=1007), Constant(value=1009), Constant(value=1014), Constant(value=1015), Constant(value=1016), Constant(value=1115), Constant(value=1182), Constant(value=1183), Constant(value=2951)], values=[Name(id='BooleanField', ctx=Load()), Name(id='BlobField', ctx=Load()), Name(id='SmallIntegerField', ctx=Load()), Name(id='IntegerField', ctx=Load()), Name(id='TextField', ctx=Load()), Name(id='CharField', ctx=Load()), Name(id='CharField', ctx=Load()), Name(id='BigIntegerField', ctx=Load()), Name(id='DateTimeField', ctx=Load()), Name(id='DateField', ctx=Load()), Name(id='TimeField', ctx=Load()), Name(id='UUIDField', ctx=Load())])), Assign(targets=[Name(id='extension_import', ctx=Store())], value=Constant(value='from playhouse.postgres_ext import *')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='PostgresqlMetadata', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='postgres_ext', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute', ctx=Load()), args=[Constant(value='select oid, typname, format_type(oid, NULL) from pg_type;')], keywords=[])), Assign(targets=[Name(id='results', ctx=Store())], value=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[])), For(target=Tuple(elts=[Name(id='oid', ctx=Store()), Name(id='typname', ctx=Store()), Name(id='formatted_type', ctx=Store())], ctx=Store()), iter=Name(id='results', ctx=Load()), body=[If(test=Compare(left=Name(id='typname', ctx=Load()), ops=[Eq()], comparators=[Constant(value='json')]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='column_map', ctx=Load()), slice=Name(id='oid', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='postgres_ext', ctx=Load()), attr='JSONField', ctx=Load()))], orelse=[If(test=Compare(left=Name(id='typname', ctx=Load()), ops=[Eq()], comparators=[Constant(value='jsonb')]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='column_map', ctx=Load()), slice=Name(id='oid', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='postgres_ext', ctx=Load()), attr='BinaryJSONField', ctx=Load()))], orelse=[If(test=Compare(left=Name(id='typname', ctx=Load()), ops=[Eq()], comparators=[Constant(value='hstore')]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='column_map', ctx=Load()), slice=Name(id='oid', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='postgres_ext', ctx=Load()), attr='HStoreField', ctx=Load()))], orelse=[If(test=Compare(left=Name(id='typname', ctx=Load()), ops=[Eq()], comparators=[Constant(value='tsvector')]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='column_map', ctx=Load()), slice=Name(id='oid', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='postgres_ext', ctx=Load()), attr='TSVectorField', ctx=Load()))], orelse=[])])])])], orelse=[]), For(target=Name(id='oid', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='array_types', ctx=Load()), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='column_map', ctx=Load()), slice=Name(id='oid', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='postgres_ext', ctx=Load()), attr='ArrayField', ctx=Load()))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='get_column_types', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='column_types', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='extra_params', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='extension_types', ctx=Store())], value=IfExp(test=Compare(left=Name(id='postgres_ext', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Call(func=Name(id='set', ctx=Load()), args=[Tuple(elts=[Attribute(value=Name(id='postgres_ext', ctx=Load()), attr='ArrayField', ctx=Load()), Attribute(value=Name(id='postgres_ext', ctx=Load()), attr='BinaryJSONField', ctx=Load()), Attribute(value=Name(id='postgres_ext', ctx=Load()), attr='JSONField', ctx=Load()), Attribute(value=Name(id='postgres_ext', ctx=Load()), attr='TSVectorField', ctx=Load()), Attribute(value=Name(id='postgres_ext', ctx=Load()), attr='HStoreField', ctx=Load())], ctx=Load())], keywords=[]), orelse=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[]))), Assign(targets=[Name(id='identifier', ctx=Store())], value=BinOp(left=Constant(value='%s."%s"'), op=Mod(), right=Tuple(elts=[Name(id='schema', ctx=Load()), Name(id='table', ctx=Load())], ctx=Load()))), Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute', ctx=Load()), args=[Constant(value='SELECT attname, atttypid FROM pg_catalog.pg_attribute WHERE attrelid = %s::regclass AND attnum > %s'), Name(id='identifier', ctx=Load()), Constant(value=0)], keywords=[])), For(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='oid', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='column_types', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='column_map', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='oid', ctx=Load()), Name(id='UnknownField', ctx=Load())], keywords=[])), If(test=Compare(left=Subscript(value=Name(id='column_types', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Load()), ops=[In()], comparators=[Name(id='extension_types', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='requires_extension', ctx=Store())], value=Constant(value=True))], orelse=[]), If(test=Compare(left=Name(id='oid', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='array_types', ctx=Load())]), body=[Assign(targets=[Subscript(value=Name(id='extra_params', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Store())], value=Dict(keys=[Constant(value='field_class')], values=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='array_types', ctx=Load()), slice=Name(id='oid', ctx=Load()), ctx=Load())]))], orelse=[])], orelse=[]), Return(value=Tuple(elts=[Name(id='column_types', ctx=Load()), Name(id='extra_params', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='get_columns', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='schema', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='schema', ctx=Load()), Constant(value='public')])), Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='PostgresqlMetadata', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='get_columns', ctx=Load()), args=[Name(id='table', ctx=Load()), Name(id='schema', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_foreign_keys', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='schema', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='schema', ctx=Load()), Constant(value='public')])), Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='PostgresqlMetadata', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='get_foreign_keys', ctx=Load()), args=[Name(id='table', ctx=Load()), Name(id='schema', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_primary_keys', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='schema', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='schema', ctx=Load()), Constant(value='public')])), Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='PostgresqlMetadata', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='get_primary_keys', ctx=Load()), args=[Name(id='table', ctx=Load()), Name(id='schema', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_indexes', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='schema', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='schema', ctx=Load()), Constant(value='public')])), Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='PostgresqlMetadata', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='get_indexes', ctx=Load()), args=[Name(id='table', ctx=Load()), Name(id='schema', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='CockroachDBMetadata', bases=[Name(id='PostgresqlMetadata', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='column_map', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='PostgresqlMetadata', ctx=Load()), attr='column_map', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='column_map', ctx=Load()), slice=Constant(value=20), ctx=Store())], value=Name(id='IntegerField', ctx=Load())), Assign(targets=[Name(id='array_types', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='PostgresqlMetadata', ctx=Load()), attr='array_types', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='array_types', ctx=Load()), slice=Constant(value=1016), ctx=Store())], value=Name(id='IntegerField', ctx=Load())), Assign(targets=[Name(id='extension_import', ctx=Store())], value=Constant(value='from playhouse.cockroachdb import *')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='Metadata', ctx=Load()), attr='__init__', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='database', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='requires_extension', ctx=Store())], value=Constant(value=True)), If(test=Compare(left=Name(id='postgres_ext', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute', ctx=Load()), args=[Constant(value='select oid, typname, format_type(oid, NULL) from pg_type;')], keywords=[])), Assign(targets=[Name(id='results', ctx=Store())], value=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[])), For(target=Tuple(elts=[Name(id='oid', ctx=Store()), Name(id='typname', ctx=Store()), Name(id='formatted_type', ctx=Store())], ctx=Store()), iter=Name(id='results', ctx=Load()), body=[If(test=Compare(left=Name(id='typname', ctx=Load()), ops=[Eq()], comparators=[Constant(value='jsonb')]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='column_map', ctx=Load()), slice=Name(id='oid', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='postgres_ext', ctx=Load()), attr='BinaryJSONField', ctx=Load()))], orelse=[])], orelse=[]), For(target=Name(id='oid', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='array_types', ctx=Load()), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='column_map', ctx=Load()), slice=Name(id='oid', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='postgres_ext', ctx=Load()), attr='ArrayField', ctx=Load()))], orelse=[])], orelse=[])], decorator_list=[])], decorator_list=[]), ClassDef(name='MySQLMetadata', bases=[Name(id='Metadata', ctx=Load())], keywords=[], body=[If(test=Compare(left=Name(id='FIELD_TYPE', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='column_map', ctx=Store())], value=Dict(keys=[], values=[]))], orelse=[Assign(targets=[Name(id='column_map', ctx=Store())], value=Dict(keys=[Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='BLOB', ctx=Load()), Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='CHAR', ctx=Load()), Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='DATE', ctx=Load()), Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='DATETIME', ctx=Load()), Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='DECIMAL', ctx=Load()), Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='DOUBLE', ctx=Load()), Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='FLOAT', ctx=Load()), Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='INT24', ctx=Load()), Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='LONG_BLOB', ctx=Load()), Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='LONG', ctx=Load()), Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='LONGLONG', ctx=Load()), Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='MEDIUM_BLOB', ctx=Load()), Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='NEWDECIMAL', ctx=Load()), Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='SHORT', ctx=Load()), Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='STRING', ctx=Load()), Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='TIMESTAMP', ctx=Load()), Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='TIME', ctx=Load()), Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='TINY_BLOB', ctx=Load()), Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='TINY', ctx=Load()), Attribute(value=Name(id='FIELD_TYPE', ctx=Load()), attr='VAR_STRING', ctx=Load())], values=[Name(id='TextField', ctx=Load()), Name(id='CharField', ctx=Load()), Name(id='DateField', ctx=Load()), Name(id='DateTimeField', ctx=Load()), Name(id='DecimalField', ctx=Load()), Name(id='FloatField', ctx=Load()), Name(id='FloatField', ctx=Load()), Name(id='IntegerField', ctx=Load()), Name(id='TextField', ctx=Load()), Name(id='IntegerField', ctx=Load()), Name(id='BigIntegerField', ctx=Load()), Name(id='TextField', ctx=Load()), Name(id='DecimalField', ctx=Load()), Name(id='IntegerField', ctx=Load()), Name(id='CharField', ctx=Load()), Name(id='DateTimeField', ctx=Load()), Name(id='TimeField', ctx=Load()), Name(id='TextField', ctx=Load()), Name(id='IntegerField', ctx=Load()), Name(id='CharField', ctx=Load())]))]), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[If(test=Compare(left=Constant(value='password'), ops=[In()], comparators=[Name(id='kwargs', ctx=Load())]), body=[Assign(targets=[Subscript(value=Name(id='kwargs', ctx=Load()), slice=Constant(value='passwd'), ctx=Store())], value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='password')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='MySQLMetadata', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='get_column_types', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='column_types', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute', ctx=Load()), args=[BinOp(left=Constant(value='SELECT * FROM `%s` LIMIT 1'), op=Mod(), right=Name(id='table', ctx=Load()))], keywords=[])), For(target=Name(id='column_description', ctx=Store()), iter=Attribute(value=Name(id='cursor', ctx=Load()), attr='description', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='name', ctx=Store()), Name(id='type_code', ctx=Store())], ctx=Store())], value=Subscript(value=Name(id='column_description', ctx=Load()), slice=Slice(upper=Constant(value=2)), ctx=Load())), Assign(targets=[Subscript(value=Name(id='column_types', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='column_map', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='type_code', ctx=Load()), Name(id='UnknownField', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Tuple(elts=[Name(id='column_types', ctx=Load()), Dict(keys=[], values=[])], ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='SqliteMetadata', bases=[Name(id='Metadata', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='column_map', ctx=Store())], value=Dict(keys=[Constant(value='bigint'), Constant(value='blob'), Constant(value='bool'), Constant(value='boolean'), Constant(value='char'), Constant(value='date'), Constant(value='datetime'), Constant(value='decimal'), Constant(value='float'), Constant(value='integer'), Constant(value='integer unsigned'), Constant(value='int'), Constant(value='long'), Constant(value='numeric'), Constant(value='real'), Constant(value='smallinteger'), Constant(value='smallint'), Constant(value='smallint unsigned'), Constant(value='text'), Constant(value='time'), Constant(value='varchar')], values=[Name(id='BigIntegerField', ctx=Load()), Name(id='BlobField', ctx=Load()), Name(id='BooleanField', ctx=Load()), Name(id='BooleanField', ctx=Load()), Name(id='CharField', ctx=Load()), Name(id='DateField', ctx=Load()), Name(id='DateTimeField', ctx=Load()), Name(id='DecimalField', ctx=Load()), Name(id='FloatField', ctx=Load()), Name(id='IntegerField', ctx=Load()), Name(id='IntegerField', ctx=Load()), Name(id='IntegerField', ctx=Load()), Name(id='BigIntegerField', ctx=Load()), Name(id='DecimalField', ctx=Load()), Name(id='FloatField', ctx=Load()), Name(id='IntegerField', ctx=Load()), Name(id='IntegerField', ctx=Load()), Name(id='IntegerField', ctx=Load()), Name(id='TextField', ctx=Load()), Name(id='TimeField', ctx=Load()), Name(id='CharField', ctx=Load())])), Assign(targets=[Name(id='begin', ctx=Store())], value=Constant(value='(?:["\\[\\(]+)?')), Assign(targets=[Name(id='end', ctx=Store())], value=Constant(value='(?:["\\]\\)]+)?')), Assign(targets=[Name(id='re_foreign_key', ctx=Store())], value=Call(func=Attribute(value=Constant(value='(?:FOREIGN KEY\\s*)?{begin}(.+?){end}\\s+(?:.+\\s+)?references\\s+{begin}(.+?){end}\\s*\\(["|\\[]?(.+?)["|\\]]?\\)'), attr='format', ctx=Load()), args=[], keywords=[keyword(arg='begin', value=Name(id='begin', ctx=Load())), keyword(arg='end', value=Name(id='end', ctx=Load()))])), Assign(targets=[Name(id='re_varchar', ctx=Store())], value=Constant(value='^\\s*(?:var)?char\\s*\\(\\s*(\\d+)\\s*\\)\\s*$')), FunctionDef(name='_map_col', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='column_type')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='raw_column_type', ctx=Store())], value=Call(func=Attribute(value=Name(id='column_type', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='raw_column_type', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='column_map', ctx=Load())]), body=[Assign(targets=[Name(id='field_class', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='column_map', ctx=Load()), slice=Name(id='raw_column_type', ctx=Load()), ctx=Load()))], orelse=[If(test=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='search', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='re_varchar', ctx=Load()), Name(id='raw_column_type', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='field_class', ctx=Store())], value=Name(id='CharField', ctx=Load()))], orelse=[Assign(targets=[Name(id='column_type', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='\\(.+\\)'), Constant(value=''), Name(id='raw_column_type', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='column_type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='')]), body=[Assign(targets=[Name(id='field_class', ctx=Store())], value=Name(id='BareField', ctx=Load()))], orelse=[Assign(targets=[Name(id='field_class', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='column_map', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='column_type', ctx=Load()), Name(id='UnknownField', ctx=Load())], keywords=[]))])])]), Return(value=Name(id='field_class', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_column_types', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='column_types', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='columns', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='get_columns', ctx=Load()), args=[Name(id='table', ctx=Load())], keywords=[])), For(target=Name(id='column', ctx=Store()), iter=Name(id='columns', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='column_types', ctx=Load()), slice=Attribute(value=Name(id='column', ctx=Load()), attr='name', ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_map_col', ctx=Load()), args=[Attribute(value=Name(id='column', ctx=Load()), attr='data_type', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Tuple(elts=[Name(id='column_types', ctx=Load()), Dict(keys=[], values=[])], ctx=Load()))], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='_DatabaseMetadata', ctx=Store())], value=Call(func=Name(id='namedtuple', ctx=Load()), args=[Constant(value='_DatabaseMetadata'), Tuple(elts=[Constant(value='columns'), Constant(value='primary_keys'), Constant(value='foreign_keys'), Constant(value='model_names'), Constant(value='indexes')], ctx=Load())], keywords=[])), ClassDef(name='DatabaseMetadata', bases=[Name(id='_DatabaseMetadata', ctx=Load())], keywords=[], body=[FunctionDef(name='multi_column_indexes', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='accum', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='index', ctx=Store()), iter=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='indexes', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Load()), body=[If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='index', ctx=Load()), attr='columns', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=1)]), body=[Assign(targets=[Name(id='field_names', ctx=Store())], value=ListComp(elt=Attribute(value=Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Load()), slice=Name(id='column', ctx=Load()), ctx=Load()), attr='name', ctx=Load()), generators=[comprehension(target=Name(id='column', ctx=Store()), iter=Attribute(value=Name(id='index', ctx=Load()), attr='columns', ctx=Load()), ifs=[Compare(left=Name(id='column', ctx=Load()), ops=[In()], comparators=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Load())])], is_async=0)])), Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='field_names', ctx=Load()), Attribute(value=Name(id='index', ctx=Load()), attr='unique', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Return(value=Name(id='accum', ctx=Load()))], decorator_list=[]), FunctionDef(name='column_indexes', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='accum', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Name(id='index', ctx=Store()), iter=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='indexes', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Load()), body=[If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='index', ctx=Load()), attr='columns', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), body=[Assign(targets=[Subscript(value=Name(id='accum', ctx=Load()), slice=Subscript(value=Attribute(value=Name(id='index', ctx=Load()), attr='columns', ctx=Load()), slice=Constant(value=0), ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='index', ctx=Load()), attr='unique', ctx=Load()))], orelse=[])], orelse=[]), Return(value=Name(id='accum', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='Introspector', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='pk_classes', ctx=Store())], value=List(elts=[Name(id='AutoField', ctx=Load()), Name(id='IntegerField', ctx=Load())], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='metadata'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='metadata', ctx=Store())], value=Name(id='metadata', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='schema', ctx=Store())], value=Name(id='schema', ctx=Load()))], decorator_list=[]), FunctionDef(name='__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BinOp(left=Constant(value='<Introspector: %s>'), op=Mod(), right=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='metadata', ctx=Load()), attr='database', ctx=Load())))], decorator_list=[]), FunctionDef(name='from_database', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='database'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='database', ctx=Load()), Name(id='Proxy', ctx=Load())], keywords=[]), body=[If(test=Compare(left=Attribute(value=Name(id='database', ctx=Load()), attr='obj', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Cannot introspect an uninitialized Proxy.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='database', ctx=Store())], value=Attribute(value=Name(id='database', ctx=Load()), attr='obj', ctx=Load()))], orelse=[]), If(test=BoolOp(op=And(), values=[Name(id='CockroachDatabase', ctx=Load()), Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='database', ctx=Load()), Name(id='CockroachDatabase', ctx=Load())], keywords=[])]), body=[Assign(targets=[Name(id='metadata', ctx=Store())], value=Call(func=Name(id='CockroachDBMetadata', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='database', ctx=Load()), Name(id='PostgresqlDatabase', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='metadata', ctx=Store())], value=Call(func=Name(id='PostgresqlMetadata', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='database', ctx=Load()), Name(id='MySQLDatabase', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='metadata', ctx=Store())], value=Call(func=Name(id='MySQLMetadata', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='database', ctx=Load()), Name(id='SqliteDatabase', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='metadata', ctx=Store())], value=Call(func=Name(id='SqliteMetadata', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='Introspection not supported for %r'), op=Mod(), right=Name(id='database', ctx=Load()))], keywords=[]))])])])]), Return(value=Call(func=Name(id='cls', ctx=Load()), args=[Name(id='metadata', ctx=Load())], keywords=[keyword(arg='schema', value=Name(id='schema', ctx=Load()))]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='get_database_class', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='type', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='metadata', ctx=Load()), attr='database', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_database_name', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='metadata', ctx=Load()), attr='database', ctx=Load()), attr='database', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_database_kwargs', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='metadata', ctx=Load()), attr='database', ctx=Load()), attr='connect_params', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_additional_imports', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='metadata', ctx=Load()), attr='requires_extension', ctx=Load()), body=[Return(value=BinOp(left=Constant(value='\n'), op=Add(), right=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='metadata', ctx=Load()), attr='extension_import', ctx=Load())))], orelse=[]), Return(value=Constant(value=''))], decorator_list=[]), FunctionDef(name='make_model_name', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='snake_case')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[If(test=Name(id='snake_case', ctx=Load()), body=[Assign(targets=[Name(id='table', ctx=Store())], value=Call(func=Name(id='make_snake_case', ctx=Load()), args=[Name(id='table', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='[^\\w]+'), Constant(value=''), Name(id='table', ctx=Load())], keywords=[])), Assign(targets=[Name(id='model_name', ctx=Store())], value=Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[GeneratorExp(elt=Call(func=Attribute(value=Name(id='sub', ctx=Load()), attr='title', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='sub', ctx=Store()), iter=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='_')], keywords=[]), ifs=[], is_async=0)])], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Subscript(value=Name(id='model_name', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='isalpha', ctx=Load()), args=[], keywords=[])), body=[Assign(targets=[Name(id='model_name', ctx=Store())], value=BinOp(left=Constant(value='T'), op=Add(), right=Name(id='model_name', ctx=Load())))], orelse=[]), Return(value=Name(id='model_name', ctx=Load()))], decorator_list=[]), FunctionDef(name='make_column_name', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='column'), arg(arg='is_foreign_key'), arg(arg='snake_case')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=True)]), body=[Assign(targets=[Name(id='column', ctx=Store())], value=Call(func=Attribute(value=Name(id='column', ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[])), If(test=Name(id='snake_case', ctx=Load()), body=[Assign(targets=[Name(id='column', ctx=Store())], value=Call(func=Name(id='make_snake_case', ctx=Load()), args=[Name(id='column', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='column', ctx=Store())], value=Call(func=Attribute(value=Name(id='column', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])), If(test=Name(id='is_foreign_key', ctx=Load()), body=[Assign(targets=[Name(id='column', ctx=Store())], value=BoolOp(op=Or(), values=[Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='_id$'), Constant(value=''), Name(id='column', ctx=Load())], keywords=[]), Name(id='column', ctx=Load())]))], orelse=[]), Assign(targets=[Name(id='column', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='[^\\w]+'), Constant(value='_'), Name(id='column', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='column', ctx=Load()), ops=[In()], comparators=[Name(id='RESERVED_WORDS', ctx=Load())]), body=[AugAssign(target=Name(id='column', ctx=Store()), op=Add(), value=Constant(value='_'))], orelse=[]), If(test=BoolOp(op=And(), values=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='column', ctx=Load())], keywords=[]), Call(func=Attribute(value=Subscript(value=Name(id='column', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='isdigit', ctx=Load()), args=[], keywords=[])]), body=[Assign(targets=[Name(id='column', ctx=Store())], value=BinOp(left=Constant(value='_'), op=Add(), right=Name(id='column', ctx=Load())))], orelse=[]), Return(value=Name(id='column', ctx=Load()))], decorator_list=[]), FunctionDef(name='introspect', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table_names'), arg(arg='literal_column_names'), arg(arg='include_views'), arg(arg='snake_case')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=False), Constant(value=False), Constant(value=True)]), body=[Assign(targets=[Name(id='tables', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='metadata', ctx=Load()), attr='database', ctx=Load()), attr='get_tables', ctx=Load()), args=[], keywords=[keyword(arg='schema', value=Attribute(value=Name(id='self', ctx=Load()), attr='schema', ctx=Load()))])), If(test=Name(id='include_views', ctx=Load()), body=[Assign(targets=[Name(id='views', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='metadata', ctx=Load()), attr='database', ctx=Load()), attr='get_views', ctx=Load()), args=[], keywords=[keyword(arg='schema', value=Attribute(value=Name(id='self', ctx=Load()), attr='schema', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='tables', ctx=Load()), attr='extend', ctx=Load()), args=[ListComp(elt=Attribute(value=Name(id='view', ctx=Load()), attr='name', ctx=Load()), generators=[comprehension(target=Name(id='view', ctx=Store()), iter=Name(id='views', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='table_names', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='tables', ctx=Store())], value=ListComp(elt=Name(id='table', ctx=Load()), generators=[comprehension(target=Name(id='table', ctx=Store()), iter=Name(id='tables', ctx=Load()), ifs=[Compare(left=Name(id='table', ctx=Load()), ops=[In()], comparators=[Name(id='table_names', ctx=Load())])], is_async=0)]))], orelse=[]), Assign(targets=[Name(id='table_set', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[Name(id='tables', ctx=Load())], keywords=[])), Assign(targets=[Name(id='columns', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='primary_keys', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='foreign_keys', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='model_names', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='indexes', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Name(id='table', ctx=Store()), iter=Name(id='tables', ctx=Load()), body=[Assign(targets=[Name(id='table_indexes', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='metadata', ctx=Load()), attr='get_indexes', ctx=Load()), args=[Name(id='table', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='schema', ctx=Load())], keywords=[])), Assign(targets=[Name(id='table_columns', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='metadata', ctx=Load()), attr='get_columns', ctx=Load()), args=[Name(id='table', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='schema', ctx=Load())], keywords=[])), Try(body=[Assign(targets=[Subscript(value=Name(id='foreign_keys', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='metadata', ctx=Load()), attr='get_foreign_keys', ctx=Load()), args=[Name(id='table', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='schema', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ValueError', ctx=Load()), name='exc', body=[Expr(value=Call(func=Name(id='err', ctx=Load()), args=[Starred(value=Attribute(value=Name(id='exc', ctx=Load()), attr='args', ctx=Load()), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='foreign_keys', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Store())], value=List(elts=[], ctx=Load()))])], orelse=[If(test=Compare(left=Name(id='table_names', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[For(target=Name(id='foreign_key', ctx=Store()), iter=Subscript(value=Name(id='foreign_keys', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Load()), body=[If(test=Compare(left=Attribute(value=Name(id='foreign_key', ctx=Load()), attr='dest_table', ctx=Load()), ops=[NotIn()], comparators=[Name(id='table_set', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='tables', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='foreign_key', ctx=Load()), attr='dest_table', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='table_set', ctx=Load()), attr='add', ctx=Load()), args=[Attribute(value=Name(id='foreign_key', ctx=Load()), attr='dest_table', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], finalbody=[]), Assign(targets=[Subscript(value=Name(id='model_names', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='make_model_name', ctx=Load()), args=[Name(id='table', ctx=Load()), Name(id='snake_case', ctx=Load())], keywords=[])), Assign(targets=[Name(id='lower_col_names', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[GeneratorExp(elt=Call(func=Attribute(value=Name(id='column_name', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='column_name', ctx=Store()), iter=Name(id='table_columns', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), Assign(targets=[Name(id='fks', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[GeneratorExp(elt=Attribute(value=Name(id='fk_col', ctx=Load()), attr='column', ctx=Load()), generators=[comprehension(target=Name(id='fk_col', ctx=Store()), iter=Subscript(value=Name(id='foreign_keys', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Load()), ifs=[], is_async=0)])], keywords=[])), For(target=Tuple(elts=[Name(id='col_name', ctx=Store()), Name(id='column', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='table_columns', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Name(id='literal_column_names', ctx=Load()), body=[Assign(targets=[Name(id='new_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='sub', ctx=Load()), args=[Constant(value='[^\\w]+'), Constant(value='_'), Name(id='col_name', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='new_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='make_column_name', ctx=Load()), args=[Name(id='col_name', ctx=Load()), Compare(left=Name(id='col_name', ctx=Load()), ops=[In()], comparators=[Name(id='fks', ctx=Load())]), Name(id='snake_case', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='lower_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='col_name', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Name(id='lower_name', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='_id')], keywords=[]), Compare(left=Name(id='new_name', ctx=Load()), ops=[In()], comparators=[Name(id='lower_col_names', ctx=Load())])]), body=[Assign(targets=[Name(id='new_name', ctx=Store())], value=Call(func=Attribute(value=Name(id='col_name', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='column', ctx=Load()), attr='name', ctx=Store())], value=Name(id='new_name', ctx=Load()))], orelse=[]), For(target=Name(id='index', ctx=Store()), iter=Name(id='table_indexes', ctx=Load()), body=[If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='index', ctx=Load()), attr='columns', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), body=[Assign(targets=[Name(id='column', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='index', ctx=Load()), attr='columns', ctx=Load()), slice=Constant(value=0), ctx=Load())), If(test=Compare(left=Name(id='column', ctx=Load()), ops=[In()], comparators=[Name(id='table_columns', ctx=Load())]), body=[Assign(targets=[Attribute(value=Subscript(value=Name(id='table_columns', ctx=Load()), slice=Name(id='column', ctx=Load()), ctx=Load()), attr='unique', ctx=Store())], value=Attribute(value=Name(id='index', ctx=Load()), attr='unique', ctx=Load())), Assign(targets=[Attribute(value=Subscript(value=Name(id='table_columns', ctx=Load()), slice=Name(id='column', ctx=Load()), ctx=Load()), attr='index', ctx=Store())], value=Constant(value=True))], orelse=[])], orelse=[])], orelse=[]), Assign(targets=[Subscript(value=Name(id='primary_keys', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='metadata', ctx=Load()), attr='get_primary_keys', ctx=Load()), args=[Name(id='table', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='schema', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='columns', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Store())], value=Name(id='table_columns', ctx=Load())), Assign(targets=[Subscript(value=Name(id='indexes', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Store())], value=Name(id='table_indexes', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='related_names', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='sort_fn', ctx=Store())], value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='foreign_key')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Attribute(value=Name(id='foreign_key', ctx=Load()), attr='column', ctx=Load()))), For(target=Name(id='table', ctx=Store()), iter=Name(id='tables', ctx=Load()), body=[Assign(targets=[Name(id='models_referenced', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), For(target=Name(id='foreign_key', ctx=Store()), iter=Call(func=Name(id='sorted', ctx=Load()), args=[Subscript(value=Name(id='foreign_keys', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Load())], keywords=[keyword(arg='key', value=Name(id='sort_fn', ctx=Load()))]), body=[Try(body=[Assign(targets=[Name(id='column', ctx=Store())], value=Subscript(value=Subscript(value=Name(id='columns', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Load()), slice=Attribute(value=Name(id='foreign_key', ctx=Load()), attr='column', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Continue()])], orelse=[], finalbody=[]), Assign(targets=[Name(id='dest_table', ctx=Store())], value=Attribute(value=Name(id='foreign_key', ctx=Load()), attr='dest_table', ctx=Load())), If(test=Compare(left=Name(id='dest_table', ctx=Load()), ops=[In()], comparators=[Name(id='models_referenced', ctx=Load())]), body=[Assign(targets=[Subscript(value=Name(id='related_names', ctx=Load()), slice=Name(id='column', ctx=Load()), ctx=Store())], value=BinOp(left=Constant(value='%s_%s_set'), op=Mod(), right=Tuple(elts=[Name(id='dest_table', ctx=Load()), Attribute(value=Name(id='column', ctx=Load()), attr='name', ctx=Load())], ctx=Load())))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='models_referenced', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='dest_table', ctx=Load())], keywords=[]))])], orelse=[])], orelse=[]), For(target=Name(id='table', ctx=Store()), iter=Name(id='tables', ctx=Load()), body=[For(target=Name(id='foreign_key', ctx=Store()), iter=Subscript(value=Name(id='foreign_keys', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Load()), body=[Assign(targets=[Name(id='src', ctx=Store())], value=Subscript(value=Subscript(value=Name(id='columns', ctx=Load()), slice=Attribute(value=Name(id='foreign_key', ctx=Load()), attr='table', ctx=Load()), ctx=Load()), slice=Attribute(value=Name(id='foreign_key', ctx=Load()), attr='column', ctx=Load()), ctx=Load())), Try(body=[Assign(targets=[Name(id='dest', ctx=Store())], value=Subscript(value=Subscript(value=Name(id='columns', ctx=Load()), slice=Attribute(value=Name(id='foreign_key', ctx=Load()), attr='dest_table', ctx=Load()), ctx=Load()), slice=Attribute(value=Name(id='foreign_key', ctx=Load()), attr='dest_column', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Assign(targets=[Name(id='dest', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[]), Expr(value=Call(func=Attribute(value=Name(id='src', ctx=Load()), attr='set_foreign_key', ctx=Load()), args=[], keywords=[keyword(arg='foreign_key', value=Name(id='foreign_key', ctx=Load())), keyword(arg='model_names', value=Name(id='model_names', ctx=Load())), keyword(arg='dest', value=Name(id='dest', ctx=Load())), keyword(arg='related_name', value=Call(func=Attribute(value=Name(id='related_names', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='src', ctx=Load())], keywords=[]))]))], orelse=[])], orelse=[]), Return(value=Call(func=Name(id='DatabaseMetadata', ctx=Load()), args=[Name(id='columns', ctx=Load()), Name(id='primary_keys', ctx=Load()), Name(id='foreign_keys', ctx=Load()), Name(id='model_names', ctx=Load()), Name(id='indexes', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='generate_models', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='skip_invalid'), arg(arg='table_names'), arg(arg='literal_column_names'), arg(arg='bare_fields'), arg(arg='include_views')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=None), Constant(value=False), Constant(value=False), Constant(value=False)]), body=[Assign(targets=[Name(id='database', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='introspect', ctx=Load()), args=[Name(id='table_names', ctx=Load()), Name(id='literal_column_names', ctx=Load()), Name(id='include_views', ctx=Load())], keywords=[])), Assign(targets=[Name(id='models', ctx=Store())], value=Dict(keys=[], values=[])), ClassDef(name='BaseModel', bases=[Name(id='Model', ctx=Load())], keywords=[], body=[ClassDef(name='Meta', bases=[], keywords=[], body=[Assign(targets=[Name(id='database', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='metadata', ctx=Load()), attr='database', ctx=Load())), Assign(targets=[Name(id='schema', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='schema', ctx=Load()))], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='pending', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), FunctionDef(name='_create_model', args=arguments(posonlyargs=[], args=[arg(arg='table'), arg(arg='models')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='pending', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='table', ctx=Load())], keywords=[])), For(target=Name(id='foreign_key', ctx=Store()), iter=Subscript(value=Attribute(value=Name(id='database', ctx=Load()), attr='foreign_keys', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Load()), body=[Assign(targets=[Name(id='dest', ctx=Store())], value=Attribute(value=Name(id='foreign_key', ctx=Load()), attr='dest_table', ctx=Load())), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='dest', ctx=Load()), ops=[NotIn()], comparators=[Name(id='models', ctx=Load())]), Compare(left=Name(id='dest', ctx=Load()), ops=[NotEq()], comparators=[Name(id='table', ctx=Load())])]), body=[If(test=Compare(left=Name(id='dest', ctx=Load()), ops=[In()], comparators=[Name(id='pending', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='warnings', ctx=Load()), attr='warn', ctx=Load()), args=[BinOp(left=Constant(value='Possible reference cycle found between %s and %s'), op=Mod(), right=Tuple(elts=[Name(id='table', ctx=Load()), Name(id='dest', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[Expr(value=Call(func=Name(id='_create_model', ctx=Load()), args=[Name(id='dest', ctx=Load()), Name(id='models', ctx=Load())], keywords=[]))])], orelse=[])], orelse=[]), Assign(targets=[Name(id='primary_keys', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='columns', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='database', ctx=Load()), attr='columns', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Load())), For(target=Tuple(elts=[Name(id='column_name', ctx=Store()), Name(id='column', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='columns', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=Attribute(value=Name(id='column', ctx=Load()), attr='primary_key', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='primary_keys', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='column', ctx=Load()), attr='name', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='multi_column_indexes', ctx=Store())], value=Call(func=Attribute(value=Name(id='database', ctx=Load()), attr='multi_column_indexes', ctx=Load()), args=[Name(id='table', ctx=Load())], keywords=[])), Assign(targets=[Name(id='column_indexes', ctx=Store())], value=Call(func=Attribute(value=Name(id='database', ctx=Load()), attr='column_indexes', ctx=Load()), args=[Name(id='table', ctx=Load())], keywords=[])), ClassDef(name='Meta', bases=[], keywords=[], body=[Assign(targets=[Name(id='indexes', ctx=Store())], value=Name(id='multi_column_indexes', ctx=Load())), Assign(targets=[Name(id='table_name', ctx=Store())], value=Name(id='table', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='composite_key', ctx=Store())], value=Constant(value=False)), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='primary_keys', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=0)]), body=[If(test=Compare(left=Constant(value='id'), ops=[NotIn()], comparators=[Name(id='columns', ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='Meta', ctx=Load()), attr='primary_key', ctx=Store())], value=Constant(value=False))], orelse=[Assign(targets=[Name(id='primary_keys', ctx=Store())], value=Call(func=Attribute(value=Name(id='columns', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[]))])], orelse=[]), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='primary_keys', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=1)]), body=[Assign(targets=[Attribute(value=Name(id='Meta', ctx=Load()), attr='primary_key', ctx=Store())], value=Call(func=Name(id='CompositeKey', ctx=Load()), args=[Starred(value=ListComp(elt=Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='col', ctx=Store()), Name(id='field', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='columns', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), ifs=[Compare(left=Name(id='col', ctx=Load()), ops=[In()], comparators=[Name(id='primary_keys', ctx=Load())])], is_async=0)]), ctx=Load())], keywords=[])), Assign(targets=[Name(id='composite_key', ctx=Store())], value=Constant(value=True))], orelse=[]), Assign(targets=[Name(id='attrs', ctx=Store())], value=Dict(keys=[Constant(value='Meta')], values=[Name(id='Meta', ctx=Load())])), For(target=Tuple(elts=[Name(id='column_name', ctx=Store()), Name(id='column', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='columns', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='FieldClass', ctx=Store())], value=Attribute(value=Name(id='column', ctx=Load()), attr='field_class', ctx=Load())), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='FieldClass', ctx=Load()), ops=[IsNot()], comparators=[Name(id='ForeignKeyField', ctx=Load())]), Name(id='bare_fields', ctx=Load())]), body=[Assign(targets=[Name(id='FieldClass', ctx=Store())], value=Name(id='BareField', ctx=Load()))], orelse=[If(test=Compare(left=Name(id='FieldClass', ctx=Load()), ops=[Is()], comparators=[Name(id='UnknownField', ctx=Load())]), body=[Assign(targets=[Name(id='FieldClass', ctx=Store())], value=Name(id='BareField', ctx=Load()))], orelse=[])]), Assign(targets=[Name(id='params', ctx=Store())], value=Dict(keys=[Constant(value='column_name'), Constant(value='null')], values=[Name(id='column_name', ctx=Load()), Attribute(value=Name(id='column', ctx=Load()), attr='nullable', ctx=Load())])), If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='column', ctx=Load()), attr='primary_key', ctx=Load()), Name(id='composite_key', ctx=Load())]), body=[If(test=Compare(left=Name(id='FieldClass', ctx=Load()), ops=[Is()], comparators=[Name(id='AutoField', ctx=Load())]), body=[Assign(targets=[Name(id='FieldClass', ctx=Store())], value=Name(id='IntegerField', ctx=Load()))], orelse=[]), Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='primary_key'), ctx=Store())], value=Constant(value=False))], orelse=[If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='column', ctx=Load()), attr='primary_key', ctx=Load()), Compare(left=Name(id='FieldClass', ctx=Load()), ops=[IsNot()], comparators=[Name(id='AutoField', ctx=Load())])]), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='primary_key'), ctx=Store())], value=Constant(value=True))], orelse=[])]), If(test=Call(func=Attribute(value=Name(id='column', ctx=Load()), attr='is_foreign_key', ctx=Load()), args=[], keywords=[]), body=[If(test=Call(func=Attribute(value=Name(id='column', ctx=Load()), attr='is_self_referential_fk', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='model'), ctx=Store())], value=Constant(value='self'))], orelse=[Assign(targets=[Name(id='dest_table', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='column', ctx=Load()), attr='foreign_key', ctx=Load()), attr='dest_table', ctx=Load())), If(test=Compare(left=Name(id='dest_table', ctx=Load()), ops=[In()], comparators=[Name(id='models', ctx=Load())]), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='model'), ctx=Store())], value=Subscript(value=Name(id='models', ctx=Load()), slice=Name(id='dest_table', ctx=Load()), ctx=Load()))], orelse=[Assign(targets=[Name(id='FieldClass', ctx=Store())], value=Name(id='DeferredForeignKey', ctx=Load())), Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='rel_model_name'), ctx=Store())], value=Name(id='dest_table', ctx=Load()))])]), If(test=Attribute(value=Name(id='column', ctx=Load()), attr='to_field', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='field'), ctx=Store())], value=Attribute(value=Name(id='column', ctx=Load()), attr='to_field', ctx=Load()))], orelse=[]), Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='backref'), ctx=Store())], value=BinOp(left=Constant(value='%s_%s_rel'), op=Mod(), right=Tuple(elts=[Name(id='table', ctx=Load()), Name(id='column_name', ctx=Load())], ctx=Load())))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='column', ctx=Load()), attr='default', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='constraint', ctx=Store())], value=Call(func=Name(id='SQL', ctx=Load()), args=[BinOp(left=Constant(value='DEFAULT %s'), op=Mod(), right=Attribute(value=Name(id='column', ctx=Load()), attr='default', ctx=Load()))], keywords=[])), Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='constraints'), ctx=Store())], value=List(elts=[Name(id='constraint', ctx=Load())], ctx=Load()))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='column', ctx=Load()), attr='is_primary_key', ctx=Load()), args=[], keywords=[])), body=[If(test=Compare(left=Name(id='column_name', ctx=Load()), ops=[In()], comparators=[Name(id='column_indexes', ctx=Load())]), body=[If(test=Subscript(value=Name(id='column_indexes', ctx=Load()), slice=Name(id='column_name', ctx=Load()), ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='unique'), ctx=Store())], value=Constant(value=True))], orelse=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='column', ctx=Load()), attr='is_foreign_key', ctx=Load()), args=[], keywords=[])), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='index'), ctx=Store())], value=Constant(value=True))], orelse=[])])], orelse=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='index'), ctx=Store())], value=Constant(value=False))])], orelse=[]), Assign(targets=[Subscript(value=Name(id='attrs', ctx=Load()), slice=Attribute(value=Name(id='column', ctx=Load()), attr='name', ctx=Load()), ctx=Store())], value=Call(func=Name(id='FieldClass', ctx=Load()), args=[], keywords=[keyword(value=Name(id='params', ctx=Load()))]))], orelse=[]), Try(body=[Assign(targets=[Subscript(value=Name(id='models', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Store())], value=Call(func=Name(id='type', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='table', ctx=Load())], keywords=[]), Tuple(elts=[Name(id='BaseModel', ctx=Load())], ctx=Load()), Name(id='attrs', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ValueError', ctx=Load()), body=[If(test=UnaryOp(op=Not(), operand=Name(id='skip_invalid', ctx=Load())), body=[Raise()], orelse=[])])], orelse=[], finalbody=[If(test=Compare(left=Name(id='table', ctx=Load()), ops=[In()], comparators=[Name(id='pending', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='pending', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='table', ctx=Load())], keywords=[]))], orelse=[])])], decorator_list=[]), For(target=Tuple(elts=[Name(id='table', ctx=Store()), Name(id='model', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='sorted', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='database', ctx=Load()), attr='model_names', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[])], keywords=[]), body=[If(test=Compare(left=Name(id='table', ctx=Load()), ops=[NotIn()], comparators=[Name(id='models', ctx=Load())]), body=[Expr(value=Call(func=Name(id='_create_model', ctx=Load()), args=[Name(id='table', ctx=Load()), Name(id='models', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Return(value=Name(id='models', ctx=Load()))], decorator_list=[])], decorator_list=[]), FunctionDef(name='introspect', args=arguments(posonlyargs=[], args=[arg(arg='database'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='introspector', ctx=Store())], value=Call(func=Attribute(value=Name(id='Introspector', ctx=Load()), attr='from_database', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[keyword(arg='schema', value=Name(id='schema', ctx=Load()))])), Return(value=Call(func=Attribute(value=Name(id='introspector', ctx=Load()), attr='introspect', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='generate_models', args=arguments(posonlyargs=[], args=[arg(arg='database'), arg(arg='schema')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='options'), defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='introspector', ctx=Store())], value=Call(func=Attribute(value=Name(id='Introspector', ctx=Load()), attr='from_database', ctx=Load()), args=[Name(id='database', ctx=Load())], keywords=[keyword(arg='schema', value=Name(id='schema', ctx=Load()))])), Return(value=Call(func=Attribute(value=Name(id='introspector', ctx=Load()), attr='generate_models', ctx=Load()), args=[], keywords=[keyword(value=Name(id='options', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='print_model', args=arguments(posonlyargs=[], args=[arg(arg='model'), arg(arg='indexes'), arg(arg='inline_indexes')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True), Constant(value=False)]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='name', ctx=Load())], keywords=[])), For(target=Name(id='field', ctx=Store()), iter=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='sorted_fields', ctx=Load()), body=[Assign(targets=[Name(id='parts', ctx=Store())], value=List(elts=[BinOp(left=Constant(value='  %s %s'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load()), Attribute(value=Name(id='field', ctx=Load()), attr='field_type', ctx=Load())], ctx=Load()))], ctx=Load())), If(test=Attribute(value=Name(id='field', ctx=Load()), attr='primary_key', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value=' PK')], keywords=[]))], orelse=[If(test=Name(id='inline_indexes', ctx=Load()), body=[If(test=Attribute(value=Name(id='field', ctx=Load()), attr='unique', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value=' UNIQUE')], keywords=[]))], orelse=[If(test=Attribute(value=Name(id='field', ctx=Load()), attr='index', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value=' INDEX')], keywords=[]))], orelse=[])])], orelse=[])]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='field', ctx=Load()), Name(id='ForeignKeyField', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Constant(value=' FK: %s.%s'), op=Mod(), right=Tuple(elts=[Attribute(value=Attribute(value=Name(id='field', ctx=Load()), attr='rel_model', ctx=Load()), attr='__name__', ctx=Load()), Attribute(value=Attribute(value=Name(id='field', ctx=Load()), attr='rel_field', ctx=Load()), attr='name', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Name(id='parts', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), If(test=Name(id='indexes', ctx=Load()), body=[Assign(targets=[Name(id='index_list', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='fields_to_index', ctx=Load()), args=[], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='index_list', ctx=Load())), body=[Return()], orelse=[]), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='\nindex(es)')], keywords=[])), For(target=Name(id='index', ctx=Store()), iter=Name(id='index_list', ctx=Load()), body=[Assign(targets=[Name(id='parts', ctx=Store())], value=List(elts=[Constant(value='  ')], ctx=Load())), Assign(targets=[Name(id='ctx', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load()), attr='get_sql_context', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='scope_values', ctx=Load()), args=[], keywords=[keyword(arg='param', value=Constant(value='%s')), keyword(arg='quote', value=Constant(value='""'))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='CommaNodeList', ctx=Load()), args=[Attribute(value=Name(id='index', ctx=Load()), attr='_expressions', ctx=Load())], keywords=[])], keywords=[])), If(test=Attribute(value=Name(id='index', ctx=Load()), attr='_where', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value=' WHERE ')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='index', ctx=Load()), attr='_where', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Tuple(elts=[Name(id='sql', ctx=Store()), Name(id='params', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='query', ctx=Load()), args=[], keywords=[]))]), Assign(targets=[Name(id='clean', ctx=Store())], value=BinOp(left=Name(id='sql', ctx=Load()), op=Mod(), right=Call(func=Name(id='tuple', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Name(id='_query_val_transform', ctx=Load()), Name(id='params', ctx=Load())], keywords=[])], keywords=[]))), Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='clean', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='"'), Constant(value='')], keywords=[])], keywords=[])), If(test=Attribute(value=Name(id='index', ctx=Load()), attr='_unique', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='parts', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value=' UNIQUE')], keywords=[]))], orelse=[]), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Name(id='parts', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='get_table_sql', args=arguments(posonlyargs=[], args=[arg(arg='model')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='sql', ctx=Store()), Name(id='params', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_schema', ctx=Load()), attr='_create_table', ctx=Load()), args=[], keywords=[]), attr='query', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load()), attr='param', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='%s')]), body=[Assign(targets=[Name(id='sql', ctx=Store())], value=Call(func=Attribute(value=Name(id='sql', ctx=Load()), attr='replace', ctx=Load()), args=[Attribute(value=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='database', ctx=Load()), attr='param', ctx=Load()), Constant(value='%s')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='match_obj', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='match', ctx=Load()), args=[Constant(value='^(.+?\\()(.+)(\\).*)'), Name(id='sql', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='create', ctx=Store()), Name(id='columns', ctx=Store()), Name(id='extra', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='match_obj', ctx=Load()), attr='groups', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='indented', ctx=Store())], value=Call(func=Attribute(value=Constant(value=',\n'), attr='join', ctx=Load()), args=[GeneratorExp(elt=BinOp(left=Constant(value='  %s'), op=Mod(), right=Name(id='column', ctx=Load())), generators=[comprehension(target=Name(id='column', ctx=Store()), iter=Call(func=Attribute(value=Name(id='columns', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=', ')], keywords=[]), ifs=[], is_async=0)])], keywords=[])), Assign(targets=[Name(id='clean', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Constant(value='\n'), attr='join', ctx=Load()), args=[Tuple(elts=[Name(id='create', ctx=Load()), Name(id='indented', ctx=Load()), Name(id='extra', ctx=Load())], ctx=Load())], keywords=[]), attr='strip', ctx=Load()), args=[], keywords=[])), Return(value=BinOp(left=Name(id='clean', ctx=Load()), op=Mod(), right=Call(func=Name(id='tuple', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Name(id='_query_val_transform', ctx=Load()), Name(id='params', ctx=Load())], keywords=[])], keywords=[])))], decorator_list=[]), FunctionDef(name='print_table_sql', args=arguments(posonlyargs=[], args=[arg(arg='model')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Call(func=Name(id='get_table_sql', ctx=Load()), args=[Name(id='model', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[])], type_ignores=[])