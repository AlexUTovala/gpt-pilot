Module(body=[Import(names=[alias(name='logging')]), Import(names=[alias(name='weakref')]), ImportFrom(module='threading', names=[alias(name='local', asname='thread_local')], level=0), ImportFrom(module='threading', names=[alias(name='Event')], level=0), ImportFrom(module='threading', names=[alias(name='Thread')], level=0), Try(body=[ImportFrom(module='Queue', names=[alias(name='Queue')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[ImportFrom(module='queue', names=[alias(name='Queue')], level=0)])], orelse=[], finalbody=[]), Try(body=[Import(names=[alias(name='gevent')]), ImportFrom(module='gevent', names=[alias(name='Greenlet', asname='GThread')], level=0), ImportFrom(module='gevent.event', names=[alias(name='Event', asname='GEvent')], level=0), ImportFrom(module='gevent.local', names=[alias(name='local', asname='greenlet_local')], level=0), ImportFrom(module='gevent.queue', names=[alias(name='Queue', asname='GQueue')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Assign(targets=[Name(id='GThread', ctx=Store()), Name(id='GQueue', ctx=Store()), Name(id='GEvent', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[]), ImportFrom(module='peewee', names=[alias(name='__deprecated__')], level=0), ImportFrom(module='playhouse.sqlite_ext', names=[alias(name='SqliteExtDatabase')], level=0), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Constant(value='peewee.sqliteq')], keywords=[])), ClassDef(name='ResultTimeout', bases=[Name(id='Exception', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='WriterPaused', bases=[Name(id='Exception', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='ShutdownException', bases=[Name(id='Exception', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='AsyncCursor', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[Constant(value='sql'), Constant(value='params'), Constant(value='timeout'), Constant(value='_event'), Constant(value='_cursor'), Constant(value='_exc'), Constant(value='_idx'), Constant(value='_rows'), Constant(value='_ready')], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='event'), arg(arg='sql'), arg(arg='params'), arg(arg='timeout')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_event', ctx=Store())], value=Name(id='event', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='sql', ctx=Store())], value=Name(id='sql', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='params', ctx=Store())], value=Name(id='params', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='timeout', ctx=Store())], value=Name(id='timeout', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cursor', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='_exc', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='_idx', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='_rows', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_ready', ctx=Store())], value=Constant(value=False))], decorator_list=[]), FunctionDef(name='set_result', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor'), arg(arg='exc')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cursor', ctx=Store())], value=Name(id='cursor', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_exc', ctx=Store())], value=Name(id='exc', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_idx', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_rows', ctx=Store())], value=IfExp(test=Compare(left=Name(id='exc', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=Call(func=Attribute(value=Name(id='cursor', ctx=Load()), attr='fetchall', ctx=Load()), args=[], keywords=[]), orelse=List(elts=[], ctx=Load()))), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_event', ctx=Load()), attr='set', ctx=Load()), args=[], keywords=[])), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='_wait', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='timeout')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='timeout', ctx=Store())], value=IfExp(test=Compare(left=Name(id='timeout', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Name(id='timeout', ctx=Load()), orelse=Attribute(value=Name(id='self', ctx=Load()), attr='timeout', ctx=Load()))), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_event', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[keyword(arg='timeout', value=Name(id='timeout', ctx=Load()))])), Name(id='timeout', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ResultTimeout', ctx=Load()), args=[Constant(value='results not ready, timed out.')], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_exc', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Raise(exc=Attribute(value=Name(id='self', ctx=Load()), attr='_exc', ctx=Load()))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_ready', ctx=Store())], value=Constant(value=True))], decorator_list=[]), FunctionDef(name='__iter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_ready', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_wait', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_exc', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Raise(exc=Attribute(value=Name(id='self', ctx=Load()), attr='_exc', ctx=Load()))], orelse=[]), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='next', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_ready', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_wait', ctx=Load()), args=[], keywords=[]))], orelse=[]), Try(body=[Assign(targets=[Name(id='obj', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_rows', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='_idx', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='IndexError', ctx=Load()), body=[Raise(exc=Name(id='StopIteration', ctx=Load()))])], orelse=[AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_idx', ctx=Store()), op=Add(), value=Constant(value=1)), Return(value=Name(id='obj', ctx=Load()))], finalbody=[])], decorator_list=[]), Assign(targets=[Name(id='__next__', ctx=Store())], value=Name(id='next', ctx=Load())), FunctionDef(name='lastrowid', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_ready', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_wait', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_cursor', ctx=Load()), attr='lastrowid', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='rowcount', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_ready', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_wait', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_cursor', ctx=Load()), attr='rowcount', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='description', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_cursor', ctx=Load()), attr='description', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='close', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_cursor', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='fetchall', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='list', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='fetchone', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_ready', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_wait', ctx=Load()), args=[], keywords=[]))], orelse=[]), Try(body=[Return(value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='StopIteration', ctx=Load()), body=[Return(value=Constant(value=None))])], orelse=[], finalbody=[])], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='SHUTDOWN', ctx=Store())], value=Name(id='StopIteration', ctx=Load())), Assign(targets=[Name(id='PAUSE', ctx=Store())], value=Call(func=Name(id='object', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='UNPAUSE', ctx=Store())], value=Call(func=Name(id='object', ctx=Load()), args=[], keywords=[])), ClassDef(name='Writer', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[Constant(value='database'), Constant(value='queue')], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database'), arg(arg='queue')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Store())], value=Name(id='database', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='queue', ctx=Store())], value=Name(id='queue', ctx=Load()))], decorator_list=[]), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='connection', ctx=Load()), args=[], keywords=[])), Try(body=[While(test=Constant(value=True), body=[Try(body=[If(test=Compare(left=Name(id='conn', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='wait_unpause', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='connection', ctx=Load()), args=[], keywords=[]))], orelse=[])], orelse=[Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='loop', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]))])], handlers=[ExceptHandler(type=Name(id='ShutdownException', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='writer received shutdown request, exiting.')], keywords=[])), Return()])], orelse=[], finalbody=[])], orelse=[])], handlers=[], orelse=[], finalbody=[If(test=Compare(left=Name(id='conn', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='_close', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='_state', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[]))], orelse=[])])], decorator_list=[]), FunctionDef(name='wait_unpause', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='obj', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='queue', ctx=Load()), attr='get', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='obj', ctx=Load()), ops=[Is()], comparators=[Name(id='UNPAUSE', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='writer unpaused - reconnecting to database.')], keywords=[])), Return(value=Constant(value=True))], orelse=[If(test=Compare(left=Name(id='obj', ctx=Load()), ops=[Is()], comparators=[Name(id='SHUTDOWN', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ShutdownException', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=Compare(left=Name(id='obj', ctx=Load()), ops=[Is()], comparators=[Name(id='PAUSE', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load()), args=[Constant(value='writer received pause, but is already paused.')], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='obj', ctx=Load()), attr='set_result', ctx=Load()), args=[Constant(value=None), Call(func=Name(id='WriterPaused', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='warning', ctx=Load()), args=[Constant(value='writer paused, not handling %s'), Name(id='obj', ctx=Load())], keywords=[]))])])])], decorator_list=[]), FunctionDef(name='loop', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='obj', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='queue', ctx=Load()), attr='get', ctx=Load()), args=[], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='obj', ctx=Load()), Name(id='AsyncCursor', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute', ctx=Load()), args=[Name(id='obj', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='obj', ctx=Load()), ops=[Is()], comparators=[Name(id='PAUSE', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='info', ctx=Load()), args=[Constant(value='writer paused - closing database connection.')], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='_close', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='_state', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[])), Return()], orelse=[If(test=Compare(left=Name(id='obj', ctx=Load()), ops=[Is()], comparators=[Name(id='UNPAUSE', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load()), args=[Constant(value='writer received unpause, but is already running.')], keywords=[]))], orelse=[If(test=Compare(left=Name(id='obj', ctx=Load()), ops=[Is()], comparators=[Name(id='SHUTDOWN', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ShutdownException', ctx=Load()), args=[], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='error', ctx=Load()), args=[Constant(value='writer received unsupported object: %s'), Name(id='obj', ctx=Load())], keywords=[]))])])])]), Return(value=Name(id='conn', ctx=Load()))], decorator_list=[]), FunctionDef(name='execute', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='obj')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='received query %s'), Attribute(value=Name(id='obj', ctx=Load()), attr='sql', ctx=Load())], keywords=[])), Try(body=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='database', ctx=Load()), attr='_execute', ctx=Load()), args=[Attribute(value=Name(id='obj', ctx=Load()), attr='sql', ctx=Load()), Attribute(value=Name(id='obj', ctx=Load()), attr='params', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='execute_err', body=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='exc', ctx=Store())], value=Name(id='execute_err', ctx=Load()))])], orelse=[Assign(targets=[Name(id='exc', ctx=Store())], value=Constant(value=None))], finalbody=[]), Return(value=Call(func=Attribute(value=Name(id='obj', ctx=Load()), attr='set_result', ctx=Load()), args=[Name(id='cursor', ctx=Load()), Name(id='exc', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='SqliteQueueDatabase', bases=[Name(id='SqliteExtDatabase', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='WAL_MODE_ERROR_MESSAGE', ctx=Store())], value=Constant(value='SQLite must be configured to use the WAL journal mode when using this feature. WAL mode allows one or more readers to continue reading while another connection writes to the database.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database'), arg(arg='use_gevent'), arg(arg='autostart'), arg(arg='queue_max_size'), arg(arg='results_timeout')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=False), Constant(value=True), Constant(value=None), Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='kwargs', ctx=Load()), slice=Constant(value='check_same_thread'), ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='pragmas', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_validate_journal_mode', ctx=Load()), args=[Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='pragmas'), Constant(value=None)], keywords=[])], keywords=[])), Assign(targets=[Name(id='Parent', ctx=Store())], value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='SqliteQueueDatabase', ctx=Load()), Name(id='self', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_execute', ctx=Store())], value=Attribute(value=Name(id='Parent', ctx=Load()), attr='execute_sql', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='Parent', ctx=Load()), attr='__init__', ctx=Load()), args=[Name(id='database', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(arg='pragmas', value=Name(id='pragmas', ctx=Load())), keyword(value=Name(id='kwargs', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_autostart', ctx=Store())], value=Name(id='autostart', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_results_timeout', ctx=Store())], value=Name(id='results_timeout', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_is_stopped', ctx=Store())], value=Constant(value=True)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_thread_helper', ctx=Store())], value=Call(func=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_thread_impl', ctx=Load()), args=[Name(id='use_gevent', ctx=Load())], keywords=[]), args=[Name(id='queue_max_size', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_write_queue', ctx=Load()), args=[], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_autostart', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='get_thread_impl', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='use_gevent')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=IfExp(test=Name(id='use_gevent', ctx=Load()), body=Name(id='GreenletHelper', ctx=Load()), orelse=Name(id='ThreadHelper', ctx=Load())))], decorator_list=[]), FunctionDef(name='_validate_journal_mode', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='pragmas')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=UnaryOp(op=Not(), operand=Name(id='pragmas', ctx=Load())), body=[Return(value=Dict(keys=[Constant(value='journal_mode')], values=[Constant(value='wal')]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='pragmas', ctx=Load()), Name(id='dict', ctx=Load())], keywords=[])), body=[Assign(targets=[Name(id='pragmas', ctx=Store())], value=Call(func=Name(id='dict', ctx=Load()), args=[GeneratorExp(elt=Tuple(elts=[Call(func=Attribute(value=Name(id='k', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), Name(id='v', ctx=Load())], ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Name(id='pragmas', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], orelse=[]), If(test=Compare(left=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='pragmas', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='journal_mode'), Constant(value='wal')], keywords=[]), attr='lower', ctx=Load()), args=[], keywords=[]), ops=[NotEq()], comparators=[Constant(value='wal')]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='WAL_MODE_ERROR_MESSAGE', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Name(id='pragmas', ctx=Load()), slice=Constant(value='journal_mode'), ctx=Store())], value=Constant(value='wal')), Return(value=Name(id='pragmas', ctx=Load()))], decorator_list=[]), FunctionDef(name='_create_write_queue', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_write_queue', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_thread_helper', ctx=Load()), attr='queue', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='queue_size', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_write_queue', ctx=Load()), attr='qsize', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='execute_sql', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='sql'), arg(arg='params'), arg(arg='commit'), arg(arg='timeout')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None), Constant(value=None)]), body=[If(test=Compare(left=Name(id='commit', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='__deprecated__', ctx=Load()), args=[Constant(value='"commit" has been deprecated and is a no-op.')], keywords=[]))], orelse=[]), If(test=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='sql', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), attr='startswith', ctx=Load()), args=[Constant(value='select')], keywords=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_execute', ctx=Load()), args=[Name(id='sql', ctx=Load()), Name(id='params', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Name(id='AsyncCursor', ctx=Load()), args=[], keywords=[keyword(arg='event', value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_thread_helper', ctx=Load()), attr='event', ctx=Load()), args=[], keywords=[])), keyword(arg='sql', value=Name(id='sql', ctx=Load())), keyword(arg='params', value=Name(id='params', ctx=Load())), keyword(arg='timeout', value=IfExp(test=Compare(left=Name(id='timeout', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=Attribute(value=Name(id='self', ctx=Load()), attr='_results_timeout', ctx=Load()), orelse=Name(id='timeout', ctx=Load())))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_write_queue', ctx=Load()), attr='put', ctx=Load()), args=[Name(id='cursor', ctx=Load())], keywords=[])), Return(value=Name(id='cursor', ctx=Load()))], decorator_list=[]), FunctionDef(name='start', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_is_stopped', ctx=Load())), body=[Return(value=Constant(value=False))], orelse=[]), FunctionDef(name='run', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='writer', ctx=Store())], value=Call(func=Name(id='Writer', ctx=Load()), args=[Name(id='self', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_write_queue', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='writer', ctx=Load()), attr='run', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_writer', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_thread_helper', ctx=Load()), attr='thread', ctx=Load()), args=[Name(id='run', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_writer', ctx=Load()), attr='start', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_is_stopped', ctx=Store())], value=Constant(value=False)), Return(value=Constant(value=True))])], decorator_list=[]), FunctionDef(name='stop', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='debug', ctx=Load()), args=[Constant(value='environment stop requested.')], keywords=[])), With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_is_stopped', ctx=Load()), body=[Return(value=Constant(value=False))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_write_queue', ctx=Load()), attr='put', ctx=Load()), args=[Name(id='SHUTDOWN', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_writer', ctx=Load()), attr='join', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_is_stopped', ctx=Store())], value=Constant(value=True)), Return(value=Constant(value=True))])], decorator_list=[]), FunctionDef(name='is_stopped', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_is_stopped', ctx=Load()))])], decorator_list=[]), FunctionDef(name='pause', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_write_queue', ctx=Load()), attr='put', ctx=Load()), args=[Name(id='PAUSE', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='unpause', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_write_queue', ctx=Load()), attr='put', ctx=Load()), args=[Name(id='UNPAUSE', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='__unsupported__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='This method is not supported by %r.'), op=Mod(), right=Call(func=Name(id='type', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='atomic', ctx=Store()), Name(id='transaction', ctx=Store()), Name(id='savepoint', ctx=Store())], value=Name(id='__unsupported__', ctx=Load()))], decorator_list=[]), ClassDef(name='ThreadHelper', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[Constant(value='queue_max_size')], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='queue_max_size')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='queue_max_size', ctx=Store())], value=Name(id='queue_max_size', ctx=Load()))], decorator_list=[]), FunctionDef(name='event', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Event', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='queue', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='max_size')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='max_size', ctx=Store())], value=IfExp(test=Compare(left=Name(id='max_size', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Name(id='max_size', ctx=Load()), orelse=Attribute(value=Name(id='self', ctx=Load()), attr='queue_max_size', ctx=Load()))), Return(value=Call(func=Name(id='Queue', ctx=Load()), args=[], keywords=[keyword(arg='maxsize', value=BoolOp(op=Or(), values=[Name(id='max_size', ctx=Load()), Constant(value=0)]))]))], decorator_list=[]), FunctionDef(name='thread', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fn')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Name(id='thread', ctx=Store())], value=Call(func=Name(id='Thread', ctx=Load()), args=[], keywords=[keyword(arg='target', value=Name(id='fn', ctx=Load())), keyword(arg='args', value=Name(id='args', ctx=Load())), keyword(arg='kwargs', value=Name(id='kwargs', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='thread', ctx=Load()), attr='daemon', ctx=Store())], value=Constant(value=True)), Return(value=Name(id='thread', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='GreenletHelper', bases=[Name(id='ThreadHelper', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[], ctx=Load())), FunctionDef(name='event', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='GEvent', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='queue', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='max_size')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='max_size', ctx=Store())], value=IfExp(test=Compare(left=Name(id='max_size', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Name(id='max_size', ctx=Load()), orelse=Attribute(value=Name(id='self', ctx=Load()), attr='queue_max_size', ctx=Load()))), Return(value=Call(func=Name(id='GQueue', ctx=Load()), args=[], keywords=[keyword(arg='maxsize', value=BoolOp(op=Or(), values=[Name(id='max_size', ctx=Load()), Constant(value=0)]))]))], decorator_list=[]), FunctionDef(name='thread', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='fn')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[FunctionDef(name='wrap', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='a'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='k'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='gevent', ctx=Load()), attr='sleep', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Name(id='fn', ctx=Load()), args=[Starred(value=Name(id='a', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='k', ctx=Load()))]))], decorator_list=[]), Return(value=Call(func=Name(id='GThread', ctx=Load()), args=[Name(id='wrap', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[])], decorator_list=[])], type_ignores=[])