Module(body=[Import(names=[alias(name='operator')]), ImportFrom(module='peewee', names=[alias(name='*')], level=0), ImportFrom(module='peewee', names=[alias(name='sqlite3')], level=0), ImportFrom(module='peewee', names=[alias(name='Expression')], level=0), ImportFrom(module='playhouse.fields', names=[alias(name='PickleField')], level=0), Try(body=[ImportFrom(module='playhouse.sqlite_ext', names=[alias(name='CSqliteExtDatabase', asname='SqliteExtDatabase')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[ImportFrom(module='playhouse.sqlite_ext', names=[alias(name='SqliteExtDatabase')], level=0)])], orelse=[], finalbody=[]), Assign(targets=[Name(id='Sentinel', ctx=Store())], value=Call(func=Name(id='type', ctx=Load()), args=[Constant(value='Sentinel'), Tuple(elts=[Name(id='object', ctx=Load())], ctx=Load()), Dict(keys=[], values=[])], keywords=[])), ClassDef(name='KeyValue', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    Persistent dictionary.\n\n    :param Field key_field: field to use for key. Defaults to CharField.\n    :param Field value_field: field to use for value. Defaults to PickleField.\n    :param bool ordered: data should be returned in key-sorted order.\n    :param Database database: database where key/value data is stored.\n    :param str table_name: table name for data.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key_field'), arg(arg='value_field'), arg(arg='ordered'), arg(arg='database'), arg(arg='table_name')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None), Constant(value=False), Constant(value=None), Constant(value='keyvalue')]), body=[If(test=Compare(left=Name(id='key_field', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='key_field', ctx=Store())], value=Call(func=Name(id='CharField', ctx=Load()), args=[], keywords=[keyword(arg='max_length', value=Constant(value=255)), keyword(arg='primary_key', value=Constant(value=True))]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='key_field', ctx=Load()), attr='primary_key', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='key_field must have primary_key=True.')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='value_field', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='value_field', ctx=Store())], value=Call(func=Name(id='PickleField', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_key_field', ctx=Store())], value=Name(id='key_field', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_value_field', ctx=Store())], value=Name(id='value_field', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_ordered', ctx=Store())], value=Name(id='ordered', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='database', ctx=Load()), Call(func=Name(id='SqliteExtDatabase', ctx=Load()), args=[Constant(value=':memory:')], keywords=[])])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_table_name', ctx=Store())], value=Name(id='table_name', ctx=Load())), Assign(targets=[Name(id='support_on_conflict', ctx=Store())], value=BoolOp(op=Or(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), Name(id='PostgresqlDatabase', ctx=Load())], keywords=[]), BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), Name(id='SqliteDatabase', ctx=Load())], keywords=[]), Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), attr='server_version', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=3), Constant(value=24)], ctx=Load())])])])), If(test=Name(id='support_on_conflict', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='upsert', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_postgres_upsert', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='update', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_postgres_update', ctx=Load()))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='upsert', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_upsert', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='update', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_update', ctx=Load()))]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='create_model', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='key', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='key', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='value', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='value', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='create_table', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='create_model', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[ClassDef(name='KeyValue', bases=[Name(id='Model', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='key', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_key_field', ctx=Load())), Assign(targets=[Name(id='value', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_value_field', ctx=Load())), ClassDef(name='Meta', bases=[], keywords=[], body=[Assign(targets=[Name(id='database', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load())), Assign(targets=[Name(id='table_name', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_table_name', ctx=Load()))], decorator_list=[])], decorator_list=[]), Return(value=Name(id='KeyValue', ctx=Load()))], decorator_list=[]), FunctionDef(name='query', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='select'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='query', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='select', ctx=Load()), args=[Starred(value=Name(id='select', ctx=Load()), ctx=Load())], keywords=[]), attr='tuples', ctx=Load()), args=[], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_ordered', ctx=Load()), body=[Assign(targets=[Name(id='query', ctx=Store())], value=Call(func=Attribute(value=Name(id='query', ctx=Load()), attr='order_by', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='key', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='query', ctx=Load()))], decorator_list=[]), FunctionDef(name='convert_expression', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='expr')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='expr', ctx=Load()), Name(id='Expression', ctx=Load())], keywords=[])), body=[Return(value=Tuple(elts=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='key', ctx=Load()), ops=[Eq()], comparators=[Name(id='expr', ctx=Load())]), Constant(value=True)], ctx=Load()))], orelse=[]), Return(value=Tuple(elts=[Name(id='expr', ctx=Load()), Constant(value=False)], ctx=Load()))], decorator_list=[]), FunctionDef(name='__contains__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='expr', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='convert_expression', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='select', ctx=Load()), args=[], keywords=[]), attr='where', ctx=Load()), args=[Name(id='expr', ctx=Load())], keywords=[]), attr='exists', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='__len__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='expr')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='converted', ctx=Store()), Name(id='is_single', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='convert_expression', ctx=Load()), args=[Name(id='expr', ctx=Load())], keywords=[])), Assign(targets=[Name(id='query', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='query', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='value', ctx=Load())], keywords=[]), attr='where', ctx=Load()), args=[Name(id='converted', ctx=Load())], keywords=[])), Assign(targets=[Name(id='item_getter', ctx=Store())], value=Call(func=Attribute(value=Name(id='operator', ctx=Load()), attr='itemgetter', ctx=Load()), args=[Constant(value=0)], keywords=[])), Assign(targets=[Name(id='result', ctx=Store())], value=ListComp(elt=Call(func=Name(id='item_getter', ctx=Load()), args=[Name(id='row', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='row', ctx=Store()), iter=Name(id='query', ctx=Load()), ifs=[], is_async=0)])), If(test=BoolOp(op=And(), values=[Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='result', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=0)]), Name(id='is_single', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='KeyError', ctx=Load()), args=[Name(id='expr', ctx=Load())], keywords=[]))], orelse=[If(test=Name(id='is_single', ctx=Load()), body=[Return(value=Subscript(value=Name(id='result', ctx=Load()), slice=Constant(value=0), ctx=Load()))], orelse=[])]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[]), FunctionDef(name='_upsert', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='insert', ctx=Load()), args=[], keywords=[keyword(arg='key', value=Name(id='key', ctx=Load())), keyword(arg='value', value=Name(id='value', ctx=Load()))]), attr='on_conflict', ctx=Load()), args=[Constant(value='replace')], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='_postgres_upsert', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='insert', ctx=Load()), args=[], keywords=[keyword(arg='key', value=Name(id='key', ctx=Load())), keyword(arg='value', value=Name(id='value', ctx=Load()))]), attr='on_conflict', ctx=Load()), args=[], keywords=[keyword(arg='conflict_target', value=List(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='key', ctx=Load())], ctx=Load())), keyword(arg='preserve', value=List(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='value', ctx=Load())], ctx=Load()))]), attr='execute', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='__setitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='expr'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='expr', ctx=Load()), Name(id='Expression', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='update', ctx=Load()), args=[], keywords=[keyword(arg='value', value=Name(id='value', ctx=Load()))]), attr='where', ctx=Load()), args=[Name(id='expr', ctx=Load())], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='upsert', ctx=Load()), args=[Name(id='expr', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='__delitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='expr')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='converted', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='convert_expression', ctx=Load()), args=[Name(id='expr', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='delete', ctx=Load()), args=[], keywords=[]), attr='where', ctx=Load()), args=[Name(id='converted', ctx=Load())], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='__iter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='iter', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='query', ctx=Load()), args=[], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='keys', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='map', ctx=Load()), args=[Call(func=Attribute(value=Name(id='operator', ctx=Load()), attr='itemgetter', ctx=Load()), args=[Constant(value=0)], keywords=[]), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='query', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='key', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='values', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='map', ctx=Load()), args=[Call(func=Attribute(value=Name(id='operator', ctx=Load()), attr='itemgetter', ctx=Load()), args=[Constant(value=0)], keywords=[]), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='query', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='value', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='items', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='iter', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='query', ctx=Load()), args=[], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='_update', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='__data')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='mapping'), defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='__data', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='mapping', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='__data', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='insert_many', ctx=Load()), args=[Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='mapping', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[keyword(arg='fields', value=List(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='key', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='value', ctx=Load())], ctx=Load()))]), attr='on_conflict', ctx=Load()), args=[Constant(value='replace')], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='_postgres_update', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='__data')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='mapping'), defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='__data', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='mapping', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='__data', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='insert_many', ctx=Load()), args=[Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='mapping', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[keyword(arg='fields', value=List(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='key', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='value', ctx=Load())], ctx=Load()))]), attr='on_conflict', ctx=Load()), args=[], keywords=[keyword(arg='conflict_target', value=List(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='key', ctx=Load())], ctx=Load())), keyword(arg='preserve', value=List(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='value', ctx=Load())], ctx=Load()))]), attr='execute', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='get', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key'), arg(arg='default')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Try(body=[Return(value=Subscript(value=Name(id='self', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Return(value=Name(id='default', ctx=Load()))])], orelse=[], finalbody=[])], decorator_list=[]), FunctionDef(name='setdefault', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key'), arg(arg='default')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Try(body=[Return(value=Subscript(value=Name(id='self', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='self', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store())], value=Name(id='default', ctx=Load())), Return(value=Name(id='default', ctx=Load()))])], orelse=[], finalbody=[])], decorator_list=[]), FunctionDef(name='pop', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key'), arg(arg='default')], kwonlyargs=[], kw_defaults=[], defaults=[Name(id='Sentinel', ctx=Load())]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), attr='atomic', ctx=Load()), args=[], keywords=[]))], body=[Try(body=[Assign(targets=[Name(id='result', ctx=Store())], value=Subscript(value=Name(id='self', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[If(test=Compare(left=Name(id='default', ctx=Load()), ops=[Is()], comparators=[Name(id='Sentinel', ctx=Load())]), body=[Raise()], orelse=[]), Return(value=Name(id='default', ctx=Load()))])], orelse=[], finalbody=[]), Delete(targets=[Subscript(value=Name(id='self', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Del())])]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[]), FunctionDef(name='clear', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='delete', ctx=Load()), args=[], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[]))], decorator_list=[])], decorator_list=[])], type_ignores=[])