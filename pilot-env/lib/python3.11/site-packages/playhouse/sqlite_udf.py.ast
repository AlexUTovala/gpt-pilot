Module(body=[Import(names=[alias(name='datetime')]), Import(names=[alias(name='hashlib')]), Import(names=[alias(name='heapq')]), Import(names=[alias(name='math')]), Import(names=[alias(name='os')]), Import(names=[alias(name='random')]), Import(names=[alias(name='re')]), Import(names=[alias(name='sys')]), Import(names=[alias(name='threading')]), Import(names=[alias(name='zlib')]), Try(body=[ImportFrom(module='collections', names=[alias(name='Counter')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Assign(targets=[Name(id='Counter', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[]), Try(body=[ImportFrom(module='urlparse', names=[alias(name='urlparse')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[ImportFrom(module='urllib.parse', names=[alias(name='urlparse')], level=0)])], orelse=[], finalbody=[]), Try(body=[ImportFrom(module='playhouse._sqlite_ext', names=[alias(name='TableFunction')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Assign(targets=[Name(id='TableFunction', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[]), Assign(targets=[Name(id='SQLITE_DATETIME_FORMATS', ctx=Store())], value=Tuple(elts=[Constant(value='%Y-%m-%d %H:%M:%S'), Constant(value='%Y-%m-%d %H:%M:%S.%f'), Constant(value='%Y-%m-%d'), Constant(value='%H:%M:%S'), Constant(value='%H:%M:%S.%f'), Constant(value='%H:%M')], ctx=Load())), ImportFrom(module='peewee', names=[alias(name='format_date_time')], level=0), FunctionDef(name='format_date_time_sqlite', args=arguments(posonlyargs=[], args=[arg(arg='date_value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='format_date_time', ctx=Load()), args=[Name(id='date_value', ctx=Load()), Name(id='SQLITE_DATETIME_FORMATS', ctx=Load())], keywords=[]))], decorator_list=[]), Try(body=[ImportFrom(module='playhouse', names=[alias(name='_sqlite_udf', asname='cython_udf')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Assign(targets=[Name(id='cython_udf', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[]), Assign(targets=[Name(id='CONTROL_FLOW', ctx=Store())], value=Constant(value='control_flow')), Assign(targets=[Name(id='DATE', ctx=Store())], value=Constant(value='date')), Assign(targets=[Name(id='FILE', ctx=Store())], value=Constant(value='file')), Assign(targets=[Name(id='HELPER', ctx=Store())], value=Constant(value='helpers')), Assign(targets=[Name(id='MATH', ctx=Store())], value=Constant(value='math')), Assign(targets=[Name(id='STRING', ctx=Store())], value=Constant(value='string')), Assign(targets=[Name(id='AGGREGATE_COLLECTION', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='TABLE_FUNCTION_COLLECTION', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='UDF_COLLECTION', ctx=Store())], value=Dict(keys=[], values=[])), ClassDef(name='synchronized_dict', bases=[Name(id='dict', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='synchronized_dict', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Store())], value=Call(func=Attribute(value=Name(id='threading', ctx=Load()), attr='Lock', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='synchronized_dict', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__getitem__', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='__setitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='synchronized_dict', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__setitem__', ctx=Load()), args=[Name(id='key', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='__delitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Attribute(value=Name(id='self', ctx=Load()), attr='_lock', ctx=Load()))], body=[Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='synchronized_dict', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__delitem__', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[]))])], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='STATE', ctx=Store())], value=Call(func=Name(id='synchronized_dict', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='SETTINGS', ctx=Store())], value=Call(func=Name(id='synchronized_dict', ctx=Load()), args=[], keywords=[])), FunctionDef(name='aggregate', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='groups'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='decorator', args=arguments(posonlyargs=[], args=[arg(arg='klass')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='group', ctx=Store()), iter=Name(id='groups', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='AGGREGATE_COLLECTION', ctx=Load()), attr='setdefault', ctx=Load()), args=[Name(id='group', ctx=Load()), List(elts=[], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Subscript(value=Name(id='AGGREGATE_COLLECTION', ctx=Load()), slice=Name(id='group', ctx=Load()), ctx=Load()), attr='append', ctx=Load()), args=[Name(id='klass', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='klass', ctx=Load()))], decorator_list=[]), Return(value=Name(id='decorator', ctx=Load()))], decorator_list=[]), FunctionDef(name='table_function', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='groups'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='decorator', args=arguments(posonlyargs=[], args=[arg(arg='klass')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='group', ctx=Store()), iter=Name(id='groups', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='TABLE_FUNCTION_COLLECTION', ctx=Load()), attr='setdefault', ctx=Load()), args=[Name(id='group', ctx=Load()), List(elts=[], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Subscript(value=Name(id='TABLE_FUNCTION_COLLECTION', ctx=Load()), slice=Name(id='group', ctx=Load()), ctx=Load()), attr='append', ctx=Load()), args=[Name(id='klass', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='klass', ctx=Load()))], decorator_list=[]), Return(value=Name(id='decorator', ctx=Load()))], decorator_list=[]), FunctionDef(name='udf', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='groups'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='decorator', args=arguments(posonlyargs=[], args=[arg(arg='fn')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='group', ctx=Store()), iter=Name(id='groups', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='UDF_COLLECTION', ctx=Load()), attr='setdefault', ctx=Load()), args=[Name(id='group', ctx=Load()), List(elts=[], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Subscript(value=Name(id='UDF_COLLECTION', ctx=Load()), slice=Name(id='group', ctx=Load()), ctx=Load()), attr='append', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='fn', ctx=Load()))], decorator_list=[]), Return(value=Name(id='decorator', ctx=Load()))], decorator_list=[]), FunctionDef(name='register_aggregate_groups', args=arguments(posonlyargs=[], args=[arg(arg='db')], vararg=arg(arg='groups'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='seen', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), For(target=Name(id='group', ctx=Store()), iter=Name(id='groups', ctx=Load()), body=[Assign(targets=[Name(id='klasses', ctx=Store())], value=Call(func=Attribute(value=Name(id='AGGREGATE_COLLECTION', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='group', ctx=Load()), Tuple(elts=[], ctx=Load())], keywords=[])), For(target=Name(id='klass', ctx=Store()), iter=Name(id='klasses', ctx=Load()), body=[Assign(targets=[Name(id='name', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='klass', ctx=Load()), Constant(value='name'), Attribute(value=Name(id='klass', ctx=Load()), attr='__name__', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='name', ctx=Load()), ops=[NotIn()], comparators=[Name(id='seen', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='seen', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='db', ctx=Load()), attr='register_aggregate', ctx=Load()), args=[Name(id='klass', ctx=Load()), Name(id='name', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='register_table_function_groups', args=arguments(posonlyargs=[], args=[arg(arg='db')], vararg=arg(arg='groups'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='seen', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), For(target=Name(id='group', ctx=Store()), iter=Name(id='groups', ctx=Load()), body=[Assign(targets=[Name(id='klasses', ctx=Store())], value=Call(func=Attribute(value=Name(id='TABLE_FUNCTION_COLLECTION', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='group', ctx=Load()), Tuple(elts=[], ctx=Load())], keywords=[])), For(target=Name(id='klass', ctx=Store()), iter=Name(id='klasses', ctx=Load()), body=[If(test=Compare(left=Attribute(value=Name(id='klass', ctx=Load()), attr='name', ctx=Load()), ops=[NotIn()], comparators=[Name(id='seen', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='seen', ctx=Load()), attr='add', ctx=Load()), args=[Attribute(value=Name(id='klass', ctx=Load()), attr='name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='db', ctx=Load()), attr='register_table_function', ctx=Load()), args=[Name(id='klass', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='register_udf_groups', args=arguments(posonlyargs=[], args=[arg(arg='db')], vararg=arg(arg='groups'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='seen', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), For(target=Name(id='group', ctx=Store()), iter=Name(id='groups', ctx=Load()), body=[Assign(targets=[Name(id='functions', ctx=Store())], value=Call(func=Attribute(value=Name(id='UDF_COLLECTION', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='group', ctx=Load()), Tuple(elts=[], ctx=Load())], keywords=[])), For(target=Name(id='function', ctx=Store()), iter=Name(id='functions', ctx=Load()), body=[Assign(targets=[Name(id='name', ctx=Store())], value=Attribute(value=Name(id='function', ctx=Load()), attr='__name__', ctx=Load())), If(test=Compare(left=Name(id='name', ctx=Load()), ops=[NotIn()], comparators=[Name(id='seen', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='seen', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='db', ctx=Load()), attr='register_function', ctx=Load()), args=[Name(id='function', ctx=Load()), Name(id='name', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='register_groups', args=arguments(posonlyargs=[], args=[arg(arg='db')], vararg=arg(arg='groups'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Name(id='register_aggregate_groups', ctx=Load()), args=[Name(id='db', ctx=Load()), Starred(value=Name(id='groups', ctx=Load()), ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='register_table_function_groups', ctx=Load()), args=[Name(id='db', ctx=Load()), Starred(value=Name(id='groups', ctx=Load()), ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='register_udf_groups', ctx=Load()), args=[Name(id='db', ctx=Load()), Starred(value=Name(id='groups', ctx=Load()), ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='register_all', args=arguments(posonlyargs=[], args=[arg(arg='db')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Name(id='register_aggregate_groups', ctx=Load()), args=[Name(id='db', ctx=Load()), Starred(value=Name(id='AGGREGATE_COLLECTION', ctx=Load()), ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='register_table_function_groups', ctx=Load()), args=[Name(id='db', ctx=Load()), Starred(value=Name(id='TABLE_FUNCTION_COLLECTION', ctx=Load()), ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='register_udf_groups', ctx=Load()), args=[Name(id='db', ctx=Load()), Starred(value=Name(id='UDF_COLLECTION', ctx=Load()), ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='if_then_else', args=arguments(posonlyargs=[], args=[arg(arg='cond'), arg(arg='truthy'), arg(arg='falsey')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Name(id='cond', ctx=Load()), body=[Return(value=Name(id='truthy', ctx=Load()))], orelse=[]), Return(value=Name(id='falsey', ctx=Load()))], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='CONTROL_FLOW', ctx=Load())], keywords=[])]), FunctionDef(name='strip_tz', args=arguments(posonlyargs=[], args=[arg(arg='date_str')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='date_str', ctx=Store())], value=Call(func=Attribute(value=Name(id='date_str', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='T'), Constant(value=' ')], keywords=[])), Assign(targets=[Name(id='tz_idx1', ctx=Store())], value=Call(func=Attribute(value=Name(id='date_str', ctx=Load()), attr='find', ctx=Load()), args=[Constant(value='+')], keywords=[])), If(test=Compare(left=Name(id='tz_idx1', ctx=Load()), ops=[NotEq()], comparators=[UnaryOp(op=USub(), operand=Constant(value=1))]), body=[Return(value=Subscript(value=Name(id='date_str', ctx=Load()), slice=Slice(upper=Name(id='tz_idx1', ctx=Load())), ctx=Load()))], orelse=[]), Assign(targets=[Name(id='tz_idx2', ctx=Store())], value=Call(func=Attribute(value=Name(id='date_str', ctx=Load()), attr='find', ctx=Load()), args=[Constant(value='-')], keywords=[])), If(test=Compare(left=Name(id='tz_idx2', ctx=Load()), ops=[Gt()], comparators=[Constant(value=13)]), body=[Return(value=Subscript(value=Name(id='date_str', ctx=Load()), slice=Slice(upper=Name(id='tz_idx2', ctx=Load())), ctx=Load()))], orelse=[]), Return(value=Name(id='date_str', ctx=Load()))], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='DATE', ctx=Load())], keywords=[])]), FunctionDef(name='human_delta', args=arguments(posonlyargs=[], args=[arg(arg='nseconds'), arg(arg='glue')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=', ')]), body=[Assign(targets=[Name(id='parts', ctx=Store())], value=Tuple(elts=[Tuple(elts=[BinOp(left=Constant(value=86400), op=Mult(), right=Constant(value=365)), Constant(value='year')], ctx=Load()), Tuple(elts=[BinOp(left=Constant(value=86400), op=Mult(), right=Constant(value=30)), Constant(value='month')], ctx=Load()), Tuple(elts=[BinOp(left=Constant(value=86400), op=Mult(), right=Constant(value=7)), Constant(value='week')], ctx=Load()), Tuple(elts=[Constant(value=86400), Constant(value='day')], ctx=Load()), Tuple(elts=[Constant(value=3600), Constant(value='hour')], ctx=Load()), Tuple(elts=[Constant(value=60), Constant(value='minute')], ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value='second')], ctx=Load())], ctx=Load())), Assign(targets=[Name(id='accum', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Tuple(elts=[Name(id='offset', ctx=Store()), Name(id='name', ctx=Store())], ctx=Store()), iter=Name(id='parts', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='val', ctx=Store()), Name(id='nseconds', ctx=Store())], ctx=Store())], value=Call(func=Name(id='divmod', ctx=Load()), args=[Name(id='nseconds', ctx=Load()), Name(id='offset', ctx=Load())], keywords=[])), If(test=Name(id='val', ctx=Load()), body=[Assign(targets=[Name(id='suffix', ctx=Store())], value=BoolOp(op=Or(), values=[BoolOp(op=And(), values=[Compare(left=Name(id='val', ctx=Load()), ops=[NotEq()], comparators=[Constant(value=1)]), Constant(value='s')]), Constant(value='')])), Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Constant(value='%s %s%s'), op=Mod(), right=Tuple(elts=[Name(id='val', ctx=Load()), Name(id='name', ctx=Load()), Name(id='suffix', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='accum', ctx=Load())), body=[Return(value=Constant(value='0 seconds'))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='glue', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='accum', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='DATE', ctx=Load())], keywords=[])]), FunctionDef(name='file_ext', args=arguments(posonlyargs=[], args=[arg(arg='filename')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='splitext', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ValueError', ctx=Load()), body=[Return(value=Constant(value=None))])], orelse=[], finalbody=[]), Return(value=Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value=1), ctx=Load()))], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='FILE', ctx=Load())], keywords=[])]), FunctionDef(name='file_read', args=arguments(posonlyargs=[], args=[arg(arg='filename')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[]), optional_vars=Name(id='fh', ctx=Store()))], body=[Return(value=Call(func=Attribute(value=Name(id='fh', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]))])], handlers=[ExceptHandler(body=[Pass()])], orelse=[], finalbody=[])], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='FILE', ctx=Load())], keywords=[])]), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[Eq()], comparators=[Constant(value=2)]), body=[FunctionDef(name='gzip', args=arguments(posonlyargs=[], args=[arg(arg='data'), arg(arg='compression')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=9)]), body=[Return(value=Call(func=Name(id='buffer', ctx=Load()), args=[Call(func=Attribute(value=Name(id='zlib', ctx=Load()), attr='compress', ctx=Load()), args=[Name(id='data', ctx=Load()), Name(id='compression', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='HELPER', ctx=Load())], keywords=[])]), FunctionDef(name='gunzip', args=arguments(posonlyargs=[], args=[arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='zlib', ctx=Load()), attr='decompress', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='HELPER', ctx=Load())], keywords=[])])], orelse=[FunctionDef(name='gzip', args=arguments(posonlyargs=[], args=[arg(arg='data'), arg(arg='compression')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=9)]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='data', ctx=Load()), Name(id='str', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Name(id='bytes', ctx=Load()), args=[Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='encode', ctx=Load()), args=[Constant(value='raw_unicode_escape')], keywords=[])], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='zlib', ctx=Load()), attr='compress', ctx=Load()), args=[Name(id='data', ctx=Load()), Name(id='compression', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='HELPER', ctx=Load())], keywords=[])]), FunctionDef(name='gunzip', args=arguments(posonlyargs=[], args=[arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='zlib', ctx=Load()), attr='decompress', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='HELPER', ctx=Load())], keywords=[])])]), FunctionDef(name='hostname', args=arguments(posonlyargs=[], args=[arg(arg='url')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='parse_result', ctx=Store())], value=Call(func=Name(id='urlparse', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), If(test=Name(id='parse_result', ctx=Load()), body=[Return(value=Attribute(value=Name(id='parse_result', ctx=Load()), attr='netloc', ctx=Load()))], orelse=[])], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='HELPER', ctx=Load())], keywords=[])]), FunctionDef(name='toggle', args=arguments(posonlyargs=[], args=[arg(arg='key')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='key', ctx=Store())], value=Call(func=Attribute(value=Name(id='key', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='STATE', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store()), Name(id='ret', ctx=Store())], value=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='STATE', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[]))), Return(value=Name(id='ret', ctx=Load()))], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='HELPER', ctx=Load())], keywords=[])]), FunctionDef(name='setting', args=arguments(posonlyargs=[], args=[arg(arg='key'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='value', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return(value=Call(func=Attribute(value=Name(id='SETTINGS', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Subscript(value=Name(id='SETTINGS', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store())], value=Name(id='value', ctx=Load())), Return(value=Name(id='value', ctx=Load()))])], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='HELPER', ctx=Load())], keywords=[])]), FunctionDef(name='clear_settings', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='SETTINGS', ctx=Load()), attr='clear', ctx=Load()), args=[], keywords=[]))], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='HELPER', ctx=Load())], keywords=[])]), FunctionDef(name='clear_toggles', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='STATE', ctx=Load()), attr='clear', ctx=Load()), args=[], keywords=[]))], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='HELPER', ctx=Load())], keywords=[])]), FunctionDef(name='randomrange', args=arguments(posonlyargs=[], args=[arg(arg='start'), arg(arg='end'), arg(arg='step')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[If(test=Compare(left=Name(id='end', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Tuple(elts=[Name(id='start', ctx=Store()), Name(id='end', ctx=Store())], ctx=Store())], value=Tuple(elts=[Constant(value=0), Name(id='start', ctx=Load())], ctx=Load()))], orelse=[If(test=Compare(left=Name(id='step', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='step', ctx=Store())], value=Constant(value=1))], orelse=[])]), Return(value=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='randrange', ctx=Load()), args=[Name(id='start', ctx=Load()), Name(id='end', ctx=Load()), Name(id='step', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='MATH', ctx=Load())], keywords=[])]), FunctionDef(name='gauss_distribution', args=arguments(posonlyargs=[], args=[arg(arg='mean'), arg(arg='sigma')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='gauss', ctx=Load()), args=[Name(id='mean', ctx=Load()), Name(id='sigma', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ValueError', ctx=Load()), body=[Return(value=Constant(value=None))])], orelse=[], finalbody=[])], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='MATH', ctx=Load())], keywords=[])]), FunctionDef(name='sqrt', args=arguments(posonlyargs=[], args=[arg(arg='n')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='sqrt', ctx=Load()), args=[Name(id='n', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ValueError', ctx=Load()), body=[Return(value=Constant(value=None))])], orelse=[], finalbody=[])], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='MATH', ctx=Load())], keywords=[])]), FunctionDef(name='tonumber', args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Call(func=Name(id='int', ctx=Load()), args=[Name(id='s', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ValueError', ctx=Load()), body=[Try(body=[Return(value=Call(func=Name(id='float', ctx=Load()), args=[Name(id='s', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(body=[Return(value=Constant(value=None))])], orelse=[], finalbody=[])])], orelse=[], finalbody=[])], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='MATH', ctx=Load())], keywords=[])]), FunctionDef(name='substr_count', args=arguments(posonlyargs=[], args=[arg(arg='haystack'), arg(arg='needle')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Name(id='haystack', ctx=Load())), UnaryOp(op=Not(), operand=Name(id='needle', ctx=Load()))]), body=[Return(value=Constant(value=0))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='haystack', ctx=Load()), attr='count', ctx=Load()), args=[Name(id='needle', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='STRING', ctx=Load())], keywords=[])]), FunctionDef(name='strip_chars', args=arguments(posonlyargs=[], args=[arg(arg='haystack'), arg(arg='chars')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='haystack', ctx=Load()), attr='strip', ctx=Load()), args=[Name(id='chars', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='udf', ctx=Load()), args=[Name(id='STRING', ctx=Load())], keywords=[])]), FunctionDef(name='_hash', args=arguments(posonlyargs=[], args=[arg(arg='constructor')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='hash_obj', ctx=Store())], value=Call(func=Name(id='constructor', ctx=Load()), args=[], keywords=[])), For(target=Name(id='arg', ctx=Store()), iter=Name(id='args', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='hash_obj', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='arg', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='hash_obj', ctx=Load()), attr='hexdigest', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), ClassDef(name='_heap_agg', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='heap', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='ct', ctx=Store())], value=Constant(value=0))], decorator_list=[]), FunctionDef(name='process', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='step', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='ct', ctx=Store()), op=Add(), value=Constant(value=1)), Expr(value=Call(func=Attribute(value=Name(id='heapq', ctx=Load()), attr='heappush', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='heap', ctx=Load()), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='process', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='_datetime_heap_agg', bases=[Name(id='_heap_agg', ctx=Load())], keywords=[], body=[FunctionDef(name='process', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='format_date_time_sqlite', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), slice=Slice(upper=Constant(value=2)), ctx=Load()), ops=[Eq()], comparators=[Tuple(elts=[Constant(value=2), Constant(value=6)], ctx=Load())]), body=[FunctionDef(name='total_seconds', args=arguments(posonlyargs=[], args=[arg(arg='td')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BinOp(left=BinOp(left=Attribute(value=Name(id='td', ctx=Load()), attr='seconds', ctx=Load()), op=Add(), right=BinOp(left=Attribute(value=Name(id='td', ctx=Load()), attr='days', ctx=Load()), op=Mult(), right=Constant(value=86400))), op=Add(), right=BinOp(left=Attribute(value=Name(id='td', ctx=Load()), attr='microseconds', ctx=Load()), op=Div(), right=BinOp(left=Constant(value=10.0), op=Pow(), right=Constant(value=6)))))], decorator_list=[])], orelse=[Assign(targets=[Name(id='total_seconds', ctx=Store())], value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='td')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='td', ctx=Load()), attr='total_seconds', ctx=Load()), args=[], keywords=[])))]), ClassDef(name='mintdiff', bases=[Name(id='_datetime_heap_agg', ctx=Load())], keywords=[], body=[FunctionDef(name='finalize', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='dtp', ctx=Store()), Name(id='min_diff', ctx=Store())], value=Constant(value=None)), While(test=Attribute(value=Name(id='self', ctx=Load()), attr='heap', ctx=Load()), body=[If(test=Compare(left=Name(id='min_diff', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='dtp', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='dtp', ctx=Store())], value=Call(func=Attribute(value=Name(id='heapq', ctx=Load()), attr='heappop', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='heap', ctx=Load())], keywords=[])), Continue()], orelse=[])], orelse=[]), Assign(targets=[Name(id='dt', ctx=Store())], value=Call(func=Attribute(value=Name(id='heapq', ctx=Load()), attr='heappop', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='heap', ctx=Load())], keywords=[])), Assign(targets=[Name(id='diff', ctx=Store())], value=BinOp(left=Name(id='dt', ctx=Load()), op=Sub(), right=Name(id='dtp', ctx=Load()))), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='min_diff', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Name(id='min_diff', ctx=Load()), ops=[Gt()], comparators=[Name(id='diff', ctx=Load())])]), body=[Assign(targets=[Name(id='min_diff', ctx=Store())], value=Name(id='diff', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='dtp', ctx=Store())], value=Name(id='dt', ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='min_diff', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='total_seconds', ctx=Load()), args=[Name(id='min_diff', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[Call(func=Name(id='aggregate', ctx=Load()), args=[Name(id='DATE', ctx=Load())], keywords=[])]), ClassDef(name='avgtdiff', bases=[Name(id='_datetime_heap_agg', ctx=Load())], keywords=[], body=[FunctionDef(name='finalize', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='ct', ctx=Load()), ops=[Lt()], comparators=[Constant(value=1)]), body=[Return()], orelse=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='ct', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)]), body=[Return(value=Constant(value=0))], orelse=[])]), Assign(targets=[Name(id='total', ctx=Store()), Name(id='ct', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='dtp', ctx=Store())], value=Constant(value=None)), While(test=Attribute(value=Name(id='self', ctx=Load()), attr='heap', ctx=Load()), body=[If(test=Compare(left=Name(id='total', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[If(test=Compare(left=Name(id='dtp', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='dtp', ctx=Store())], value=Call(func=Attribute(value=Name(id='heapq', ctx=Load()), attr='heappop', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='heap', ctx=Load())], keywords=[])), Continue()], orelse=[])], orelse=[]), Assign(targets=[Name(id='dt', ctx=Store())], value=Call(func=Attribute(value=Name(id='heapq', ctx=Load()), attr='heappop', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='heap', ctx=Load())], keywords=[])), Assign(targets=[Name(id='diff', ctx=Store())], value=BinOp(left=Name(id='dt', ctx=Load()), op=Sub(), right=Name(id='dtp', ctx=Load()))), AugAssign(target=Name(id='ct', ctx=Store()), op=Add(), value=Constant(value=1)), AugAssign(target=Name(id='total', ctx=Store()), op=Add(), value=Call(func=Name(id='total_seconds', ctx=Load()), args=[Name(id='diff', ctx=Load())], keywords=[])), Assign(targets=[Name(id='dtp', ctx=Store())], value=Name(id='dt', ctx=Load()))], orelse=[]), Return(value=BinOp(left=Call(func=Name(id='float', ctx=Load()), args=[Name(id='total', ctx=Load())], keywords=[]), op=Div(), right=Name(id='ct', ctx=Load())))], decorator_list=[])], decorator_list=[Call(func=Name(id='aggregate', ctx=Load()), args=[Name(id='DATE', ctx=Load())], keywords=[])]), ClassDef(name='duration', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_min', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='_max', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='step', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='dt', ctx=Store())], value=Call(func=Name(id='format_date_time_sqlite', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_min', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Name(id='dt', ctx=Load()), ops=[Lt()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_min', ctx=Load())])]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_min', ctx=Store())], value=Name(id='dt', ctx=Load()))], orelse=[]), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_max', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Name(id='dt', ctx=Load()), ops=[Gt()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_max', ctx=Load())])]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_max', ctx=Store())], value=Name(id='dt', ctx=Load()))], orelse=[])], decorator_list=[]), FunctionDef(name='finalize', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_min', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_max', ctx=Load())]), body=[Assign(targets=[Name(id='td', ctx=Store())], value=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='_max', ctx=Load()), op=Sub(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_min', ctx=Load()))), Return(value=Call(func=Name(id='total_seconds', ctx=Load()), args=[Name(id='td', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Constant(value=None))], decorator_list=[])], decorator_list=[Call(func=Name(id='aggregate', ctx=Load()), args=[Name(id='DATE', ctx=Load())], keywords=[])]), ClassDef(name='mode', bases=[Name(id='object', ctx=Load())], keywords=[], body=[If(test=Name(id='Counter', ctx=Load()), body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='items', ctx=Store())], value=Call(func=Name(id='Counter', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='step', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='items', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='finalize', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='items', ctx=Load()), body=[Return(value=Subscript(value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='items', ctx=Load()), attr='most_common', ctx=Load()), args=[Constant(value=1)], keywords=[]), slice=Constant(value=0), ctx=Load()), slice=Constant(value=0), ctx=Load()))], orelse=[])], decorator_list=[])], orelse=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='items', ctx=Store())], value=List(elts=[], ctx=Load()))], decorator_list=[]), FunctionDef(name='step', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='item')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='items', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='item', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='finalize', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='items', ctx=Load()), body=[Return(value=Call(func=Name(id='max', ctx=Load()), args=[Call(func=Name(id='set', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='items', ctx=Load())], keywords=[])], keywords=[keyword(arg='key', value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='items', ctx=Load()), attr='count', ctx=Load()))]))], orelse=[])], decorator_list=[])])], decorator_list=[Call(func=Name(id='aggregate', ctx=Load()), args=[Name(id='MATH', ctx=Load())], keywords=[])]), ClassDef(name='minrange', bases=[Name(id='_heap_agg', ctx=Load())], keywords=[], body=[FunctionDef(name='finalize', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='ct', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Return()], orelse=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='ct', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)]), body=[Return(value=Constant(value=0))], orelse=[])]), Assign(targets=[Name(id='prev', ctx=Store()), Name(id='min_diff', ctx=Store())], value=Constant(value=None)), While(test=Attribute(value=Name(id='self', ctx=Load()), attr='heap', ctx=Load()), body=[If(test=Compare(left=Name(id='min_diff', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='prev', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='prev', ctx=Store())], value=Call(func=Attribute(value=Name(id='heapq', ctx=Load()), attr='heappop', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='heap', ctx=Load())], keywords=[])), Continue()], orelse=[])], orelse=[]), Assign(targets=[Name(id='curr', ctx=Store())], value=Call(func=Attribute(value=Name(id='heapq', ctx=Load()), attr='heappop', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='heap', ctx=Load())], keywords=[])), Assign(targets=[Name(id='diff', ctx=Store())], value=BinOp(left=Name(id='curr', ctx=Load()), op=Sub(), right=Name(id='prev', ctx=Load()))), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='min_diff', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Name(id='min_diff', ctx=Load()), ops=[Gt()], comparators=[Name(id='diff', ctx=Load())])]), body=[Assign(targets=[Name(id='min_diff', ctx=Store())], value=Name(id='diff', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='prev', ctx=Store())], value=Name(id='curr', ctx=Load()))], orelse=[]), Return(value=Name(id='min_diff', ctx=Load()))], decorator_list=[])], decorator_list=[Call(func=Name(id='aggregate', ctx=Load()), args=[Name(id='MATH', ctx=Load())], keywords=[])]), ClassDef(name='avgrange', bases=[Name(id='_heap_agg', ctx=Load())], keywords=[], body=[FunctionDef(name='finalize', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='ct', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Return()], orelse=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='ct', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)]), body=[Return(value=Constant(value=0))], orelse=[])]), Assign(targets=[Name(id='total', ctx=Store()), Name(id='ct', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='prev', ctx=Store())], value=Constant(value=None)), While(test=Attribute(value=Name(id='self', ctx=Load()), attr='heap', ctx=Load()), body=[If(test=Compare(left=Name(id='total', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[If(test=Compare(left=Name(id='prev', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='prev', ctx=Store())], value=Call(func=Attribute(value=Name(id='heapq', ctx=Load()), attr='heappop', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='heap', ctx=Load())], keywords=[])), Continue()], orelse=[])], orelse=[]), Assign(targets=[Name(id='curr', ctx=Store())], value=Call(func=Attribute(value=Name(id='heapq', ctx=Load()), attr='heappop', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='heap', ctx=Load())], keywords=[])), Assign(targets=[Name(id='diff', ctx=Store())], value=BinOp(left=Name(id='curr', ctx=Load()), op=Sub(), right=Name(id='prev', ctx=Load()))), AugAssign(target=Name(id='ct', ctx=Store()), op=Add(), value=Constant(value=1)), AugAssign(target=Name(id='total', ctx=Store()), op=Add(), value=Name(id='diff', ctx=Load())), Assign(targets=[Name(id='prev', ctx=Store())], value=Name(id='curr', ctx=Load()))], orelse=[]), Return(value=BinOp(left=Call(func=Name(id='float', ctx=Load()), args=[Name(id='total', ctx=Load())], keywords=[]), op=Div(), right=Name(id='ct', ctx=Load())))], decorator_list=[])], decorator_list=[Call(func=Name(id='aggregate', ctx=Load()), args=[Name(id='MATH', ctx=Load())], keywords=[])]), ClassDef(name='_range', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='name', ctx=Store())], value=Constant(value='range')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_min', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='_max', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='step', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_min', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Name(id='value', ctx=Load()), ops=[Lt()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_min', ctx=Load())])]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_min', ctx=Store())], value=Name(id='value', ctx=Load()))], orelse=[]), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_max', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Name(id='value', ctx=Load()), ops=[Gt()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_max', ctx=Load())])]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_max', ctx=Store())], value=Name(id='value', ctx=Load()))], orelse=[])], decorator_list=[]), FunctionDef(name='finalize', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_min', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_max', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Return(value=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='_max', ctx=Load()), op=Sub(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_min', ctx=Load())))], orelse=[]), Return(value=Constant(value=None))], decorator_list=[])], decorator_list=[Call(func=Name(id='aggregate', ctx=Load()), args=[Name(id='MATH', ctx=Load())], keywords=[])]), ClassDef(name='stddev', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='n', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='values', ctx=Store())], value=List(elts=[], ctx=Load()))], decorator_list=[]), FunctionDef(name='step', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='v')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='n', ctx=Store()), op=Add(), value=Constant(value=1)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='values', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='finalize', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='n', ctx=Load()), ops=[LtE()], comparators=[Constant(value=1)]), body=[Return(value=Constant(value=0))], orelse=[]), Assign(targets=[Name(id='mean', ctx=Store())], value=BinOp(left=Call(func=Name(id='sum', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='values', ctx=Load())], keywords=[]), op=Div(), right=Attribute(value=Name(id='self', ctx=Load()), attr='n', ctx=Load()))), Return(value=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='sqrt', ctx=Load()), args=[BinOp(left=Call(func=Name(id='sum', ctx=Load()), args=[GeneratorExp(elt=BinOp(left=BinOp(left=Name(id='i', ctx=Load()), op=Sub(), right=Name(id='mean', ctx=Load())), op=Pow(), right=Constant(value=2)), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='values', ctx=Load()), ifs=[], is_async=0)])], keywords=[]), op=Div(), right=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='n', ctx=Load()), op=Sub(), right=Constant(value=1)))], keywords=[]))], decorator_list=[])], decorator_list=[Call(func=Name(id='aggregate', ctx=Load()), args=[Name(id='MATH', ctx=Load())], keywords=[])]), If(test=Compare(left=Name(id='cython_udf', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='damerau_levenshtein_dist', ctx=Store())], value=Call(func=Call(func=Name(id='udf', ctx=Load()), args=[Name(id='STRING', ctx=Load())], keywords=[]), args=[Attribute(value=Name(id='cython_udf', ctx=Load()), attr='damerau_levenshtein_dist', ctx=Load())], keywords=[])), Assign(targets=[Name(id='levenshtein_dist', ctx=Store())], value=Call(func=Call(func=Name(id='udf', ctx=Load()), args=[Name(id='STRING', ctx=Load())], keywords=[]), args=[Attribute(value=Name(id='cython_udf', ctx=Load()), attr='levenshtein_dist', ctx=Load())], keywords=[])), Assign(targets=[Name(id='str_dist', ctx=Store())], value=Call(func=Call(func=Name(id='udf', ctx=Load()), args=[Name(id='STRING', ctx=Load())], keywords=[]), args=[Attribute(value=Name(id='cython_udf', ctx=Load()), attr='str_dist', ctx=Load())], keywords=[])), Assign(targets=[Name(id='median', ctx=Store())], value=Call(func=Call(func=Name(id='aggregate', ctx=Load()), args=[Name(id='MATH', ctx=Load())], keywords=[]), args=[Attribute(value=Name(id='cython_udf', ctx=Load()), attr='median', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='TableFunction', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[ClassDef(name='RegexSearch', bases=[Name(id='TableFunction', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='params', ctx=Store())], value=List(elts=[Constant(value='regex'), Constant(value='search_string')], ctx=Load())), Assign(targets=[Name(id='columns', ctx=Store())], value=List(elts=[Constant(value='match')], ctx=Load())), Assign(targets=[Name(id='name', ctx=Store())], value=Constant(value='regex_search')), FunctionDef(name='initialize', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='regex'), arg(arg='search_string')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_iter', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='finditer', ctx=Load()), args=[Name(id='regex', ctx=Load()), Name(id='search_string', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='iterate', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='idx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Tuple(elts=[Call(func=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_iter', ctx=Load())], keywords=[]), attr='group', ctx=Load()), args=[Constant(value=0)], keywords=[])], ctx=Load()))], decorator_list=[])], decorator_list=[Call(func=Name(id='table_function', ctx=Load()), args=[Name(id='STRING', ctx=Load())], keywords=[])]), ClassDef(name='DateSeries', bases=[Name(id='TableFunction', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='params', ctx=Store())], value=List(elts=[Constant(value='start'), Constant(value='stop'), Constant(value='step_seconds')], ctx=Load())), Assign(targets=[Name(id='columns', ctx=Store())], value=List(elts=[Constant(value='date')], ctx=Load())), Assign(targets=[Name(id='name', ctx=Store())], value=Constant(value='date_series')), FunctionDef(name='initialize', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='start'), arg(arg='stop'), arg(arg='step_seconds')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=86400)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Store())], value=Call(func=Name(id='format_date_time_sqlite', ctx=Load()), args=[Name(id='start', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='stop', ctx=Store())], value=Call(func=Name(id='format_date_time_sqlite', ctx=Load()), args=[Name(id='stop', ctx=Load())], keywords=[])), Assign(targets=[Name(id='step_seconds', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Name(id='step_seconds', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='step_seconds', ctx=Store())], value=Call(func=Attribute(value=Name(id='datetime', ctx=Load()), attr='timedelta', ctx=Load()), args=[], keywords=[keyword(arg='seconds', value=Name(id='step_seconds', ctx=Load()))])), If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load()), attr='hour', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load()), attr='minute', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load()), attr='second', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), Compare(left=Name(id='step_seconds', ctx=Load()), ops=[GtE()], comparators=[Constant(value=86400)])]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='format', ctx=Store())], value=Constant(value='%Y-%m-%d'))], orelse=[If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load()), attr='year', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1900)]), Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load()), attr='month', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)]), Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load()), attr='day', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)]), Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stop', ctx=Load()), attr='year', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1900)]), Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stop', ctx=Load()), attr='month', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)]), Compare(left=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stop', ctx=Load()), attr='day', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)]), Compare(left=Name(id='step_seconds', ctx=Load()), ops=[Lt()], comparators=[Constant(value=86400)])]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='format', ctx=Store())], value=Constant(value='%H:%M:%S'))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='format', ctx=Store())], value=Constant(value='%Y-%m-%d %H:%M:%S'))])])], decorator_list=[]), FunctionDef(name='iterate', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='idx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load()), ops=[Gt()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='stop', ctx=Load())]), body=[Raise(exc=Name(id='StopIteration', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='current', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Load())), AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='start', ctx=Store()), op=Add(), value=Attribute(value=Name(id='self', ctx=Load()), attr='step_seconds', ctx=Load())), Return(value=Tuple(elts=[Call(func=Attribute(value=Name(id='current', ctx=Load()), attr='strftime', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='format', ctx=Load())], keywords=[])], ctx=Load()))], decorator_list=[])], decorator_list=[Call(func=Name(id='table_function', ctx=Load()), args=[Name(id='DATE', ctx=Load())], keywords=[])])], orelse=[])], type_ignores=[])