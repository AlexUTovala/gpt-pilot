Module(body=[Expr(value=Constant(value='\nCollection of postgres-specific extensions, currently including:\n\n* Support for hstore, a key/value type storage\n')), Import(names=[alias(name='json')]), Import(names=[alias(name='logging')]), Import(names=[alias(name='uuid')]), ImportFrom(module='peewee', names=[alias(name='*')], level=0), ImportFrom(module='peewee', names=[alias(name='ColumnBase')], level=0), ImportFrom(module='peewee', names=[alias(name='Expression')], level=0), ImportFrom(module='peewee', names=[alias(name='Node')], level=0), ImportFrom(module='peewee', names=[alias(name='NodeList')], level=0), ImportFrom(module='peewee', names=[alias(name='__deprecated__')], level=0), ImportFrom(module='peewee', names=[alias(name='__exception_wrapper__')], level=0), Try(body=[ImportFrom(module='psycopg2cffi', names=[alias(name='compat')], level=0), Expr(value=Call(func=Attribute(value=Name(id='compat', ctx=Load()), attr='register', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[]), Try(body=[ImportFrom(module='psycopg2.extras', names=[alias(name='register_hstore')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[FunctionDef(name='register_hstore', args=arguments(posonlyargs=[], args=[arg(arg='c'), arg(arg='globally')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[])])], orelse=[], finalbody=[]), Try(body=[ImportFrom(module='psycopg2.extras', names=[alias(name='Json')], level=0)], handlers=[ExceptHandler(body=[Assign(targets=[Name(id='Json', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[]), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Name(id='logging', ctx=Load()), attr='getLogger', ctx=Load()), args=[Constant(value='peewee')], keywords=[])), Assign(targets=[Name(id='HCONTAINS_DICT', ctx=Store())], value=Constant(value='@>')), Assign(targets=[Name(id='HCONTAINS_KEYS', ctx=Store())], value=Constant(value='?&')), Assign(targets=[Name(id='HCONTAINS_KEY', ctx=Store())], value=Constant(value='?')), Assign(targets=[Name(id='HCONTAINS_ANY_KEY', ctx=Store())], value=Constant(value='?|')), Assign(targets=[Name(id='HKEY', ctx=Store())], value=Constant(value='->')), Assign(targets=[Name(id='HUPDATE', ctx=Store())], value=Constant(value='||')), Assign(targets=[Name(id='ACONTAINS', ctx=Store())], value=Constant(value='@>')), Assign(targets=[Name(id='ACONTAINED_BY', ctx=Store())], value=Constant(value='<@')), Assign(targets=[Name(id='ACONTAINS_ANY', ctx=Store())], value=Constant(value='&&')), Assign(targets=[Name(id='TS_MATCH', ctx=Store())], value=Constant(value='@@')), Assign(targets=[Name(id='JSONB_CONTAINS', ctx=Store())], value=Constant(value='@>')), Assign(targets=[Name(id='JSONB_CONTAINED_BY', ctx=Store())], value=Constant(value='<@')), Assign(targets=[Name(id='JSONB_CONTAINS_KEY', ctx=Store())], value=Constant(value='?')), Assign(targets=[Name(id='JSONB_CONTAINS_ANY_KEY', ctx=Store())], value=Constant(value='?|')), Assign(targets=[Name(id='JSONB_CONTAINS_ALL_KEYS', ctx=Store())], value=Constant(value='?&')), Assign(targets=[Name(id='JSONB_EXISTS', ctx=Store())], value=Constant(value='?')), Assign(targets=[Name(id='JSONB_REMOVE', ctx=Store())], value=Constant(value='-')), ClassDef(name='_LookupNode', bases=[Name(id='ColumnBase', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='node'), arg(arg='parts')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Store())], value=Name(id='node', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='parts', ctx=Store())], value=Name(id='parts', ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='_LookupNode', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='clone', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Call(func=Name(id='type', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), args=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load()), Call(func=Name(id='list', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='parts', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='__hash__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='hash', ctx=Load()), args=[Tuple(elts=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__class__', ctx=Load()), attr='__name__', ctx=Load()), Call(func=Name(id='id', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])], ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='_JsonLookupBase', bases=[Name(id='_LookupNode', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='node'), arg(arg='parts'), arg(arg='as_json')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='_JsonLookupBase', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='node', ctx=Load()), Name(id='parts', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_as_json', ctx=Store())], value=Name(id='as_json', ctx=Load()))], decorator_list=[]), FunctionDef(name='clone', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Call(func=Name(id='type', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), args=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load()), Call(func=Name(id='list', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='parts', ctx=Load())], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='_as_json', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='as_json', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='as_json')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_as_json', ctx=Store())], value=Name(id='as_json', ctx=Load()))], decorator_list=[Attribute(value=Name(id='Node', ctx=Load()), attr='copy', ctx=Load())]), FunctionDef(name='concat', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='rhs', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[])), body=[Assign(targets=[Name(id='rhs', ctx=Store())], value=Call(func=Name(id='Json', ctx=Load()), args=[Name(id='rhs', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='as_json', ctx=Load()), args=[Constant(value=True)], keywords=[]), Attribute(value=Name(id='OP', ctx=Load()), attr='CONCAT', ctx=Load()), Name(id='rhs', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='contains', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='clone', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='as_json', ctx=Load()), args=[Constant(value=True)], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='other', ctx=Load()), Tuple(elts=[Name(id='list', ctx=Load()), Name(id='dict', ctx=Load())], ctx=Load())], keywords=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='clone', ctx=Load()), Name(id='JSONB_CONTAINS', ctx=Load()), Call(func=Name(id='Json', ctx=Load()), args=[Name(id='other', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='clone', ctx=Load()), Name(id='JSONB_EXISTS', ctx=Load()), Name(id='other', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='contains_any', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='keys'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='as_json', ctx=Load()), args=[Constant(value=True)], keywords=[]), Name(id='JSONB_CONTAINS_ANY_KEY', ctx=Load()), Call(func=Name(id='Value', ctx=Load()), args=[Call(func=Name(id='list', ctx=Load()), args=[Name(id='keys', ctx=Load())], keywords=[])], keywords=[keyword(arg='unpack', value=Constant(value=False))])], keywords=[]))], decorator_list=[]), FunctionDef(name='contains_all', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='keys'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='as_json', ctx=Load()), args=[Constant(value=True)], keywords=[]), Name(id='JSONB_CONTAINS_ALL_KEYS', ctx=Load()), Call(func=Name(id='Value', ctx=Load()), args=[Call(func=Name(id='list', ctx=Load()), args=[Name(id='keys', ctx=Load())], keywords=[])], keywords=[keyword(arg='unpack', value=Constant(value=False))])], keywords=[]))], decorator_list=[]), FunctionDef(name='has_key', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='as_json', ctx=Load()), args=[Constant(value=True)], keywords=[]), Name(id='JSONB_CONTAINS_KEY', ctx=Load()), Name(id='key', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='JsonLookup', bases=[Name(id='_JsonLookupBase', ctx=Load())], keywords=[], body=[FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='JsonLookup', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load()), BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='parts', ctx=Load()), op=Add(), right=List(elts=[Name(id='value', ctx=Load())], ctx=Load())), Attribute(value=Name(id='self', ctx=Load()), attr='_as_json', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load())], keywords=[])), For(target=Name(id='part', ctx=Store()), iter=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='parts', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='->')], keywords=[]), attr='sql', ctx=Load()), args=[Name(id='part', ctx=Load())], keywords=[]))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='parts', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[IfExp(test=Attribute(value=Name(id='self', ctx=Load()), attr='_as_json', ctx=Load()), body=Constant(value='->'), orelse=Constant(value='->>'))], keywords=[]), attr='sql', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='parts', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='JsonPath', bases=[Name(id='_JsonLookupBase', ctx=Load())], keywords=[], body=[FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load())], keywords=[]), attr='literal', ctx=Load()), args=[IfExp(test=Attribute(value=Name(id='self', ctx=Load()), attr='_as_json', ctx=Load()), body=Constant(value='#>'), orelse=Constant(value='#>>'))], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Name(id='Value', ctx=Load()), args=[BinOp(left=Constant(value='{%s}'), op=Mod(), right=Call(func=Attribute(value=Constant(value=','), attr='join', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Name(id='str', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='parts', ctx=Load())], keywords=[])], keywords=[]))], keywords=[])], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='ObjectSlice', bases=[Name(id='_LookupNode', ctx=Load())], keywords=[], body=[FunctionDef(name='create', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='node'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='slice', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='parts', ctx=Store())], value=List(elts=[BoolOp(op=Or(), values=[Attribute(value=Name(id='value', ctx=Load()), attr='start', ctx=Load()), Constant(value=0)]), BoolOp(op=Or(), values=[Attribute(value=Name(id='value', ctx=Load()), attr='stop', ctx=Load()), Constant(value=0)])], ctx=Load()))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='int', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='parts', ctx=Store())], value=List(elts=[Name(id='value', ctx=Load())], ctx=Load()))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='parts', ctx=Store())], value=Name(id='value', ctx=Load()))], orelse=[Assign(targets=[Name(id='parts', ctx=Store())], value=ListComp(elt=Call(func=Name(id='int', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Attribute(value=Name(id='value', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=':')], keywords=[]), ifs=[], is_async=0)]))])])]), Return(value=Call(func=Name(id='cls', ctx=Load()), args=[Name(id='node', ctx=Load()), Name(id='parts', ctx=Load())], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='node', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='parts', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[Constant(value='[')], keywords=[]), attr='sql', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='parts', ctx=Load())], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value=']')], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='literal', ctx=Load()), args=[BinOp(left=Constant(value='[%s]'), op=Mod(), right=Call(func=Attribute(value=Constant(value=':'), attr='join', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='str', ctx=Load()), args=[BinOp(left=Name(id='p', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[]), generators=[comprehension(target=Name(id='p', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='parts', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], keywords=[]))]), Return(value=Name(id='ctx', ctx=Load()))], decorator_list=[]), FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='ObjectSlice', ctx=Load()), attr='create', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='IndexedFieldMixin', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='default_index_type', ctx=Store())], value=Constant(value='GIN')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='setdefault', ctx=Load()), args=[Constant(value='index'), Constant(value=True)], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='IndexedFieldMixin', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[])], decorator_list=[]), ClassDef(name='ArrayField', bases=[Name(id='IndexedFieldMixin', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='passthrough', ctx=Store())], value=Constant(value=True)), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field_class'), arg(arg='field_kwargs'), arg(arg='dimensions'), arg(arg='convert_values')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Name(id='IntegerField', ctx=Load()), Constant(value=None), Constant(value=1), Constant(value=False)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='__field', ctx=Store())], value=Call(func=Name(id='field_class', ctx=Load()), args=[], keywords=[keyword(value=BoolOp(op=Or(), values=[Name(id='field_kwargs', ctx=Load()), Dict(keys=[], values=[])]))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='dimensions', ctx=Store())], value=Name(id='dimensions', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='convert_values', ctx=Store())], value=Name(id='convert_values', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='field_type', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__field', ctx=Load()), attr='field_type', ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ArrayField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='bind', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='model'), arg(arg='name'), arg(arg='set_attribute')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='ArrayField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='bind', ctx=Load()), args=[Name(id='model', ctx=Load()), Name(id='name', ctx=Load()), Name(id='set_attribute', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__field', ctx=Load()), attr='bind', ctx=Load()), args=[Name(id='model', ctx=Load()), BinOp(left=Constant(value='__array_%s'), op=Mod(), right=Name(id='name', ctx=Load())), Constant(value=False)], keywords=[])), Return(value=Name(id='ret', ctx=Load()))], decorator_list=[]), FunctionDef(name='ddl_datatype', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='data_type', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__field', ctx=Load()), attr='ddl_datatype', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Name(id='data_type', ctx=Load()), Call(func=Name(id='SQL', ctx=Load()), args=[BinOp(left=Constant(value='[]'), op=Mult(), right=Attribute(value=Name(id='self', ctx=Load()), attr='dimensions', ctx=Load()))], keywords=[])], ctx=Load())], keywords=[keyword(arg='glue', value=Constant(value=''))]))], decorator_list=[]), FunctionDef(name='db_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='value', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[])]), body=[Return(value=Name(id='value', ctx=Load()))], orelse=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='convert_values', ctx=Load()), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_process', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__field', ctx=Load()), attr='db_value', ctx=Load()), Name(id='value', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='dimensions', ctx=Load())], keywords=[]))], orelse=[Return(value=IfExp(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='list', ctx=Load())], keywords=[]), body=Name(id='value', ctx=Load()), orelse=Call(func=Name(id='list', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])))])])], decorator_list=[]), FunctionDef(name='python_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='convert_values', ctx=Load()), Compare(left=Name(id='value', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Assign(targets=[Name(id='conv', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__field', ctx=Load()), attr='python_value', ctx=Load())), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='list', ctx=Load())], keywords=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_process', ctx=Load()), args=[Name(id='conv', ctx=Load()), Name(id='value', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='dimensions', ctx=Load())], keywords=[]))], orelse=[Return(value=Call(func=Name(id='conv', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))])], orelse=[Return(value=Name(id='value', ctx=Load()))])], decorator_list=[]), FunctionDef(name='_process', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='conv'), arg(arg='value'), arg(arg='dimensions')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[AugAssign(target=Name(id='dimensions', ctx=Store()), op=Sub(), value=Constant(value=1)), If(test=Compare(left=Name(id='dimensions', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Return(value=ListComp(elt=Call(func=Name(id='conv', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='v', ctx=Store()), iter=Name(id='value', ctx=Load()), ifs=[], is_async=0)]))], orelse=[Return(value=ListComp(elt=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_process', ctx=Load()), args=[Name(id='conv', ctx=Load()), Name(id='v', ctx=Load()), Name(id='dimensions', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='v', ctx=Store()), iter=Name(id='value', ctx=Load()), ifs=[], is_async=0)]))])], decorator_list=[]), FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='ObjectSlice', ctx=Load()), attr='create', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_e', args=arguments(posonlyargs=[], args=[arg(arg='op')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='inner', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='rhs')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='op', ctx=Load()), Call(func=Name(id='ArrayValue', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='rhs', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), Return(value=Name(id='inner', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='__eq__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='EQ', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__ne__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='NE', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__gt__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='GT', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__ge__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='GTE', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__lt__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='LT', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__le__', ctx=Store())], value=Call(func=Name(id='_e', ctx=Load()), args=[Attribute(value=Name(id='OP', ctx=Load()), attr='LTE', ctx=Load())], keywords=[])), Assign(targets=[Name(id='__hash__', ctx=Store())], value=Attribute(value=Name(id='Field', ctx=Load()), attr='__hash__', ctx=Load())), FunctionDef(name='contains', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='items'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='ACONTAINS', ctx=Load()), Call(func=Name(id='ArrayValue', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='items', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='contains_any', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='items'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='ACONTAINS_ANY', ctx=Load()), Call(func=Name(id='ArrayValue', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='items', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='contained_by', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='items'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='ACONTAINED_BY', ctx=Load()), Call(func=Name(id='ArrayValue', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='items', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='ArrayValue', bases=[Name(id='Node', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='field'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Store())], value=Name(id='field', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='value', ctx=Store())], value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Call(func=Name(id='Value', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='value', ctx=Load())], keywords=[keyword(arg='unpack', value=Constant(value=False))])], keywords=[]), attr='literal', ctx=Load()), args=[Constant(value='::')], keywords=[]), attr='sql', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='field', ctx=Load()), attr='ddl_datatype', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='DateTimeTZField', bases=[Name(id='DateTimeField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='TIMESTAMPTZ'))], decorator_list=[]), ClassDef(name='HStoreField', bases=[Name(id='IndexedFieldMixin', ctx=Load()), Name(id='Field', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='HSTORE')), Assign(targets=[Name(id='__hash__', ctx=Store())], value=Attribute(value=Name(id='Field', ctx=Load()), attr='__hash__', ctx=Load())), FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='HKEY', ctx=Load()), Call(func=Name(id='Value', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='keys', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='akeys', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='values', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='avals', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='items', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='hstore_to_matrix', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='slice', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='slice', ctx=Load()), args=[Name(id='self', ctx=Load()), Call(func=Name(id='Value', ctx=Load()), args=[Call(func=Name(id='list', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[])], keywords=[keyword(arg='unpack', value=Constant(value=False))])], keywords=[]))], decorator_list=[]), FunctionDef(name='exists', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='exist', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='key', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='defined', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='defined', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='key', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='update', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='data'), defaults=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='HUPDATE', ctx=Load()), Name(id='data', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='delete', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='keys'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='delete', ctx=Load()), args=[Name(id='self', ctx=Load()), Call(func=Name(id='Value', ctx=Load()), args=[Call(func=Name(id='list', ctx=Load()), args=[Name(id='keys', ctx=Load())], keywords=[])], keywords=[keyword(arg='unpack', value=Constant(value=False))])], keywords=[]))], decorator_list=[]), FunctionDef(name='contains', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='dict', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='rhs', ctx=Store())], value=Call(func=Name(id='Value', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[keyword(arg='unpack', value=Constant(value=False))])), Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='HCONTAINS_DICT', ctx=Load()), Name(id='rhs', ctx=Load())], keywords=[]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Tuple(elts=[Name(id='list', ctx=Load()), Name(id='tuple', ctx=Load())], ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='rhs', ctx=Store())], value=Call(func=Name(id='Value', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[keyword(arg='unpack', value=Constant(value=False))])), Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='HCONTAINS_KEYS', ctx=Load()), Name(id='rhs', ctx=Load())], keywords=[]))], orelse=[])]), Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='HCONTAINS_KEY', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='contains_any', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='keys'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='HCONTAINS_ANY_KEY', ctx=Load()), Call(func=Name(id='Value', ctx=Load()), args=[Call(func=Name(id='list', ctx=Load()), args=[Name(id='keys', ctx=Load())], keywords=[])], keywords=[keyword(arg='unpack', value=Constant(value=False))])], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='JSONField', bases=[Name(id='Field', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='JSON')), Assign(targets=[Name(id='_json_datatype', ctx=Store())], value=Constant(value='json')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dumps')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='Json', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='Exception', ctx=Load()), args=[Constant(value='Your version of psycopg2 does not support JSON.')], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='dumps', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='dumps', ctx=Load()), Attribute(value=Name(id='json', ctx=Load()), attr='dumps', ctx=Load())])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='JSONField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='db_value', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='value', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return(value=Name(id='value', ctx=Load()))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='Json', ctx=Load())], keywords=[])), body=[Return(value=Call(func=Name(id='Cast', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='dumps', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='_json_datatype', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='value', ctx=Load()))], decorator_list=[]), FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='JsonLookup', ctx=Load()), args=[Name(id='self', ctx=Load()), List(elts=[Name(id='value', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='path', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='keys'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='JsonPath', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='keys', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='concat', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='Node', ctx=Load())], keywords=[])), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='Json', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='JSONField', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='concat', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), FunctionDef(name='cast_jsonb', args=arguments(posonlyargs=[], args=[arg(arg='node')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='NodeList', ctx=Load()), args=[Tuple(elts=[Name(id='node', ctx=Load()), Call(func=Name(id='SQL', ctx=Load()), args=[Constant(value='::jsonb')], keywords=[])], ctx=Load())], keywords=[keyword(arg='glue', value=Constant(value=''))]))], decorator_list=[]), ClassDef(name='BinaryJSONField', bases=[Name(id='IndexedFieldMixin', ctx=Load()), Name(id='JSONField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='JSONB')), Assign(targets=[Name(id='_json_datatype', ctx=Store())], value=Constant(value='jsonb')), Assign(targets=[Name(id='__hash__', ctx=Store())], value=Attribute(value=Name(id='Field', ctx=Load()), attr='__hash__', ctx=Load())), FunctionDef(name='contains', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='other', ctx=Load()), Tuple(elts=[Name(id='list', ctx=Load()), Name(id='dict', ctx=Load())], ctx=Load())], keywords=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='JSONB_CONTAINS', ctx=Load()), Call(func=Name(id='Json', ctx=Load()), args=[Name(id='other', ctx=Load())], keywords=[])], keywords=[]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='other', ctx=Load()), Name(id='JSONField', ctx=Load())], keywords=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='JSONB_CONTAINS', ctx=Load()), Name(id='other', ctx=Load())], keywords=[]))], orelse=[])]), Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Call(func=Name(id='cast_jsonb', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), Name(id='JSONB_EXISTS', ctx=Load()), Name(id='other', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='contained_by', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='other')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Call(func=Name(id='cast_jsonb', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), Name(id='JSONB_CONTAINED_BY', ctx=Load()), Call(func=Name(id='Json', ctx=Load()), args=[Name(id='other', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='contains_any', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='items'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Call(func=Name(id='cast_jsonb', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), Name(id='JSONB_CONTAINS_ANY_KEY', ctx=Load()), Call(func=Name(id='Value', ctx=Load()), args=[Call(func=Name(id='list', ctx=Load()), args=[Name(id='items', ctx=Load())], keywords=[])], keywords=[keyword(arg='unpack', value=Constant(value=False))])], keywords=[]))], decorator_list=[]), FunctionDef(name='contains_all', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='items'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Call(func=Name(id='cast_jsonb', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), Name(id='JSONB_CONTAINS_ALL_KEYS', ctx=Load()), Call(func=Name(id='Value', ctx=Load()), args=[Call(func=Name(id='list', ctx=Load()), args=[Name(id='items', ctx=Load())], keywords=[])], keywords=[keyword(arg='unpack', value=Constant(value=False))])], keywords=[]))], decorator_list=[]), FunctionDef(name='has_key', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Call(func=Name(id='cast_jsonb', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), Name(id='JSONB_CONTAINS_KEY', ctx=Load()), Name(id='key', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='remove', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='items'), kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Call(func=Name(id='cast_jsonb', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), Name(id='JSONB_REMOVE', ctx=Load()), Call(func=Name(id='Value', ctx=Load()), args=[Call(func=Name(id='list', ctx=Load()), args=[Name(id='items', ctx=Load())], keywords=[])], keywords=[keyword(arg='unpack', value=Constant(value=False))])], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='TSVectorField', bases=[Name(id='IndexedFieldMixin', ctx=Load()), Name(id='TextField', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='TSVECTOR')), Assign(targets=[Name(id='__hash__', ctx=Store())], value=Attribute(value=Name(id='Field', ctx=Load()), attr='__hash__', ctx=Load())), FunctionDef(name='match', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='query'), arg(arg='language'), arg(arg='plain')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=False)]), body=[Assign(targets=[Name(id='params', ctx=Store())], value=IfExp(test=Compare(left=Name(id='language', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Tuple(elts=[Name(id='language', ctx=Load()), Name(id='query', ctx=Load())], ctx=Load()), orelse=Tuple(elts=[Name(id='query', ctx=Load())], ctx=Load()))), Assign(targets=[Name(id='func', ctx=Store())], value=IfExp(test=Name(id='plain', ctx=Load()), body=Attribute(value=Name(id='fn', ctx=Load()), attr='plainto_tsquery', ctx=Load()), orelse=Attribute(value=Name(id='fn', ctx=Load()), attr='to_tsquery', ctx=Load()))), Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='TS_MATCH', ctx=Load()), Call(func=Name(id='func', ctx=Load()), args=[Starred(value=Name(id='params', ctx=Load()), ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[])], decorator_list=[]), FunctionDef(name='Match', args=arguments(posonlyargs=[], args=[arg(arg='field'), arg(arg='query'), arg(arg='language')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='params', ctx=Store())], value=IfExp(test=Compare(left=Name(id='language', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Tuple(elts=[Name(id='language', ctx=Load()), Name(id='query', ctx=Load())], ctx=Load()), orelse=Tuple(elts=[Name(id='query', ctx=Load())], ctx=Load()))), Assign(targets=[Name(id='field_params', ctx=Store())], value=IfExp(test=Compare(left=Name(id='language', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Tuple(elts=[Name(id='language', ctx=Load()), Name(id='field', ctx=Load())], ctx=Load()), orelse=Tuple(elts=[Name(id='field', ctx=Load())], ctx=Load()))), Return(value=Call(func=Name(id='Expression', ctx=Load()), args=[Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='to_tsvector', ctx=Load()), args=[Starred(value=Name(id='field_params', ctx=Load()), ctx=Load())], keywords=[]), Name(id='TS_MATCH', ctx=Load()), Call(func=Attribute(value=Name(id='fn', ctx=Load()), attr='to_tsquery', ctx=Load()), args=[Starred(value=Name(id='params', ctx=Load()), ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), ClassDef(name='IntervalField', bases=[Name(id='Field', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='field_type', ctx=Store())], value=Constant(value='INTERVAL'))], decorator_list=[]), ClassDef(name='FetchManyCursor', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[Constant(value='cursor'), Constant(value='array_size'), Constant(value='exhausted'), Constant(value='iterable')], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='cursor'), arg(arg='array_size')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='cursor', ctx=Store())], value=Name(id='cursor', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='array_size', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='array_size', ctx=Load()), Attribute(value=Name(id='cursor', ctx=Load()), attr='itersize', ctx=Load())])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='exhausted', ctx=Store())], value=Constant(value=False)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='iterable', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='row_gen', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='description', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cursor', ctx=Load()), attr='description', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='close', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cursor', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='row_gen', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[While(test=Constant(value=True), body=[Assign(targets=[Name(id='rows', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='cursor', ctx=Load()), attr='fetchmany', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='array_size', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='rows', ctx=Load())), body=[Return()], orelse=[]), For(target=Name(id='row', ctx=Store()), iter=Name(id='rows', ctx=Load()), body=[Expr(value=Yield(value=Name(id='row', ctx=Load())))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='fetchone', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='exhausted', ctx=Load()), body=[Return()], orelse=[]), Try(body=[Return(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='iterable', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='StopIteration', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='exhausted', ctx=Store())], value=Constant(value=True))])], orelse=[], finalbody=[])], decorator_list=[])], decorator_list=[]), ClassDef(name='ServerSideQuery', bases=[Name(id='Node', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='query'), arg(arg='array_size')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='query', ctx=Store())], value=Name(id='query', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='array_size', ctx=Store())], value=Name(id='array_size', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='__sql__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ctx')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='query', ctx=Load()), attr='__sql__', ctx=Load()), args=[Name(id='ctx', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__iter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_execute', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='query', ctx=Load()), attr='_database', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='iter', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Load()), attr='iterator', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='_execute', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='database')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='database', ctx=Load()), attr='execute', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='query', ctx=Load())], keywords=[keyword(arg='named_cursor', value=Constant(value=True)), keyword(arg='array_size', value=Attribute(value=Name(id='self', ctx=Load()), attr='array_size', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='query', ctx=Load()), attr='_get_cursor_wrapper', ctx=Load()), args=[Name(id='cursor', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_cursor_wrapper', ctx=Load()))], decorator_list=[])], decorator_list=[]), FunctionDef(name='ServerSide', args=arguments(posonlyargs=[], args=[arg(arg='query'), arg(arg='database'), arg(arg='array_size')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[If(test=Compare(left=Name(id='database', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='database', ctx=Store())], value=Attribute(value=Name(id='query', ctx=Load()), attr='_database', ctx=Load()))], orelse=[]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='database', ctx=Load()), attr='transaction', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='server_side_query', ctx=Store())], value=Call(func=Name(id='ServerSideQuery', ctx=Load()), args=[Name(id='query', ctx=Load())], keywords=[keyword(arg='array_size', value=Name(id='array_size', ctx=Load()))])), For(target=Name(id='row', ctx=Store()), iter=Name(id='server_side_query', ctx=Load()), body=[Expr(value=Yield(value=Name(id='row', ctx=Load())))], orelse=[])])], decorator_list=[]), ClassDef(name='_empty_object', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[], ctx=Load())), FunctionDef(name='__nonzero__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=False))], decorator_list=[]), Assign(targets=[Name(id='__bool__', ctx=Store())], value=Name(id='__nonzero__', ctx=Load()))], decorator_list=[]), ClassDef(name='PostgresqlExtDatabase', bases=[Name(id='PostgresqlDatabase', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_register_hstore', ctx=Store())], value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='register_hstore'), Constant(value=False)], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_server_side_cursors', ctx=Store())], value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='server_side_cursors'), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='PostgresqlExtDatabase', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='_connect', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='PostgresqlExtDatabase', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='_connect', ctx=Load()), args=[], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_register_hstore', ctx=Load()), body=[Expr(value=Call(func=Name(id='register_hstore', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[keyword(arg='globally', value=Constant(value=True))]))], orelse=[]), Return(value=Name(id='conn', ctx=Load()))], decorator_list=[]), FunctionDef(name='cursor', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='commit'), arg(arg='named_cursor')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[If(test=Compare(left=Name(id='commit', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='__deprecated__', ctx=Load()), args=[Constant(value='"commit" has been deprecated and is a no-op.')], keywords=[]))], orelse=[]), If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_closed', ctx=Load()), args=[], keywords=[]), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='autoconnect', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='connect', ctx=Load()), args=[], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='InterfaceError', ctx=Load()), args=[Constant(value='Error, database connection not opened.')], keywords=[]))])], orelse=[]), If(test=Name(id='named_cursor', ctx=Load()), body=[Assign(targets=[Name(id='curs', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='conn', ctx=Load()), attr='cursor', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='uuid', ctx=Load()), attr='uuid1', ctx=Load()), args=[], keywords=[])], keywords=[]))])), Return(value=Name(id='curs', ctx=Load()))], orelse=[]), Return(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_state', ctx=Load()), attr='conn', ctx=Load()), attr='cursor', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='execute', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='query'), arg(arg='commit'), arg(arg='named_cursor'), arg(arg='array_size')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='context_options'), defaults=[Constant(value=None), Constant(value=False), Constant(value=None)]), body=[If(test=Compare(left=Name(id='commit', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='__deprecated__', ctx=Load()), args=[Constant(value='"commit" has been deprecated and is a no-op.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='ctx', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_sql_context', ctx=Load()), args=[], keywords=[keyword(value=Name(id='context_options', ctx=Load()))])), Assign(targets=[Tuple(elts=[Name(id='sql', ctx=Store()), Name(id='params', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ctx', ctx=Load()), attr='sql', ctx=Load()), args=[Name(id='query', ctx=Load())], keywords=[]), attr='query', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='named_cursor', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='named_cursor', ctx=Load()), BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_server_side_cursors', ctx=Load()), Compare(left=Call(func=Attribute(value=Subscript(value=Name(id='sql', ctx=Load()), slice=Slice(upper=Constant(value=6)), ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value='select')])])])), Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='execute_sql', ctx=Load()), args=[Name(id='sql', ctx=Load()), Name(id='params', ctx=Load())], keywords=[])), If(test=Name(id='named_cursor', ctx=Load()), body=[Assign(targets=[Name(id='cursor', ctx=Store())], value=Call(func=Name(id='FetchManyCursor', ctx=Load()), args=[Name(id='cursor', ctx=Load()), Name(id='array_size', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='cursor', ctx=Load()))], decorator_list=[])], decorator_list=[])], type_ignores=[])