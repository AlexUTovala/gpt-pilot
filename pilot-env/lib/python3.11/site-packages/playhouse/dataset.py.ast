Module(body=[Import(names=[alias(name='csv')]), Import(names=[alias(name='datetime')]), ImportFrom(module='decimal', names=[alias(name='Decimal')], level=0), Import(names=[alias(name='json')]), Import(names=[alias(name='operator')]), Try(body=[ImportFrom(module='urlparse', names=[alias(name='urlparse')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[ImportFrom(module='urllib.parse', names=[alias(name='urlparse')], level=0)])], orelse=[], finalbody=[]), Import(names=[alias(name='sys')]), Import(names=[alias(name='uuid')]), ImportFrom(module='peewee', names=[alias(name='*')], level=0), ImportFrom(module='playhouse.db_url', names=[alias(name='connect')], level=0), ImportFrom(module='playhouse.migrate', names=[alias(name='migrate')], level=0), ImportFrom(module='playhouse.migrate', names=[alias(name='SchemaMigrator')], level=0), ImportFrom(module='playhouse.reflection', names=[alias(name='Introspector')], level=0), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[Eq()], comparators=[Constant(value=3)]), body=[Assign(targets=[Name(id='basestring', ctx=Store())], value=Name(id='str', ctx=Load())), ImportFrom(module='functools', names=[alias(name='reduce')], level=0), FunctionDef(name='open_file', args=arguments(posonlyargs=[], args=[arg(arg='f'), arg(arg='mode'), arg(arg='encoding')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='utf8')]), body=[Return(value=Call(func=Name(id='open', ctx=Load()), args=[Name(id='f', ctx=Load()), Name(id='mode', ctx=Load())], keywords=[keyword(arg='encoding', value=Name(id='encoding', ctx=Load()))]))], decorator_list=[])], orelse=[FunctionDef(name='open_file', args=arguments(posonlyargs=[], args=[arg(arg='f'), arg(arg='mode'), arg(arg='encoding')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='utf8')]), body=[Return(value=Call(func=Name(id='open', ctx=Load()), args=[Name(id='f', ctx=Load()), Name(id='mode', ctx=Load())], keywords=[]))], decorator_list=[])]), ClassDef(name='DataSet', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='url'), arg(arg='include_views')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=False)]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='url', ctx=Load()), Name(id='Database', ctx=Load())], keywords=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_url', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Store())], value=Name(id='url', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_database_path', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), attr='database', ctx=Load()))], orelse=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_url', ctx=Store())], value=Name(id='url', ctx=Load())), Assign(targets=[Name(id='parse_result', ctx=Store())], value=Call(func=Name(id='urlparse', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_database_path', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='parse_result', ctx=Load()), attr='path', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Store())], value=Call(func=Name(id='connect', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[]))]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), attr='connect', ctx=Load()), args=[], keywords=[keyword(arg='reuse_if_open', value=Constant(value=True))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_introspector', ctx=Store())], value=Call(func=Attribute(value=Name(id='Introspector', ctx=Load()), attr='from_database', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_include_views', ctx=Store())], value=Name(id='include_views', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_models', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_introspector', ctx=Load()), attr='generate_models', ctx=Load()), args=[], keywords=[keyword(arg='skip_invalid', value=Constant(value=True)), keyword(arg='literal_column_names', value=Constant(value=True)), keyword(arg='include_views', value=Attribute(value=Name(id='self', ctx=Load()), attr='_include_views', ctx=Load())), keyword(value=Name(id='kwargs', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_migrator', ctx=Store())], value=Call(func=Attribute(value=Name(id='SchemaMigrator', ctx=Load()), attr='from_database', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load())], keywords=[])), ClassDef(name='BaseModel', bases=[Name(id='Model', ctx=Load())], keywords=[], body=[ClassDef(name='Meta', bases=[], keywords=[], body=[Assign(targets=[Name(id='database', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()))], decorator_list=[])], decorator_list=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_base_model', ctx=Store())], value=Name(id='BaseModel', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_export_formats', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_export_formats', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_import_formats', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_import_formats', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BinOp(left=Constant(value='<DataSet: %s>'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_database_path', ctx=Load())))], decorator_list=[]), FunctionDef(name='get_export_formats', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Dict(keys=[Constant(value='csv'), Constant(value='json'), Constant(value='tsv')], values=[Name(id='CSVExporter', ctx=Load()), Name(id='JSONExporter', ctx=Load()), Name(id='TSVExporter', ctx=Load())]))], decorator_list=[]), FunctionDef(name='get_import_formats', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Dict(keys=[Constant(value='csv'), Constant(value='json'), Constant(value='tsv')], values=[Name(id='CSVImporter', ctx=Load()), Name(id='JSONImporter', ctx=Load()), Name(id='TSVImporter', ctx=Load())]))], decorator_list=[]), FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='table', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_models', ctx=Load())]), Compare(left=Name(id='table', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='tables', ctx=Load())])]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='update_cache', ctx=Load()), args=[Name(id='table', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='Table', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='table', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_models', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='table', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='tables', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='tables', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), attr='get_tables', ctx=Load()), args=[], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_include_views', ctx=Load()), body=[AugAssign(target=Name(id='tables', ctx=Store()), op=Add(), value=Attribute(value=Name(id='self', ctx=Load()), attr='views', ctx=Load()))], orelse=[]), Return(value=Name(id='tables', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='views', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=ListComp(elt=Attribute(value=Name(id='v', ctx=Load()), attr='name', ctx=Load()), generators=[comprehension(target=Name(id='v', ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), attr='get_views', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='__contains__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Name(id='table', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='tables', ctx=Load())]))], decorator_list=[]), FunctionDef(name='connect', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='reuse_if_open')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), attr='connect', ctx=Load()), args=[], keywords=[keyword(arg='reuse_if_open', value=Name(id='reuse_if_open', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='close', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='update_cache', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Name(id='table', ctx=Load()), body=[Assign(targets=[Name(id='dependencies', ctx=Store())], value=List(elts=[Name(id='table', ctx=Load())], ctx=Load())), If(test=Compare(left=Name(id='table', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_models', ctx=Load())]), body=[Assign(targets=[Name(id='model_class', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_models', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='dependencies', ctx=Load()), attr='extend', ctx=Load()), args=[ListComp(elt=Attribute(value=Attribute(value=Name(id='related', ctx=Load()), attr='_meta', ctx=Load()), attr='table_name', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='_', ctx=Store()), Name(id='related', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='model_class', ctx=Load()), attr='_meta', ctx=Load()), attr='model_graph', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='dependencies', ctx=Load()), attr='extend', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_table_dependencies', ctx=Load()), args=[Name(id='table', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[Assign(targets=[Name(id='dependencies', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_models', ctx=Store())], value=Dict(keys=[], values=[]))]), Assign(targets=[Name(id='updated', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_introspector', ctx=Load()), attr='generate_models', ctx=Load()), args=[], keywords=[keyword(arg='skip_invalid', value=Constant(value=True)), keyword(arg='table_names', value=Name(id='dependencies', ctx=Load())), keyword(arg='literal_column_names', value=Constant(value=True)), keyword(arg='include_views', value=Attribute(value=Name(id='self', ctx=Load()), attr='_include_views', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_models', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='updated', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='get_table_dependencies', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='stack', ctx=Store())], value=List(elts=[Name(id='table', ctx=Load())], ctx=Load())), Assign(targets=[Name(id='accum', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='seen', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), While(test=Name(id='stack', ctx=Load()), body=[Assign(targets=[Name(id='table', ctx=Store())], value=Call(func=Attribute(value=Name(id='stack', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[])), For(target=Name(id='fk_meta', ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), attr='get_foreign_keys', ctx=Load()), args=[Name(id='table', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='dest', ctx=Store())], value=Attribute(value=Name(id='fk_meta', ctx=Load()), attr='dest_table', ctx=Load())), If(test=Compare(left=Name(id='dest', ctx=Load()), ops=[NotIn()], comparators=[Name(id='seen', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='stack', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='dest', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='accum', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='dest', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[]), Return(value=Name(id='accum', ctx=Load()))], decorator_list=[]), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='connect', ctx=Load()), args=[], keywords=[])), Return(value=Name(id='self', ctx=Load()))], decorator_list=[]), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exc_type'), arg(arg='exc_val'), arg(arg='exc_tb')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), attr='is_closed', ctx=Load()), args=[], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='query', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='sql'), arg(arg='params')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), attr='execute_sql', ctx=Load()), args=[Name(id='sql', ctx=Load()), Name(id='params', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='transaction', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_database', ctx=Load()), attr='atomic', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='_check_arguments', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='filename'), arg(arg='file_obj'), arg(arg='format'), arg(arg='format_dict')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Name(id='filename', ctx=Load()), Name(id='file_obj', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='file is over-specified. Please use either filename or file_obj, but not both.')], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='filename', ctx=Load())), UnaryOp(op=Not(), operand=Name(id='file_obj', ctx=Load()))]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='A filename or file-like object must be specified.')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='format', ctx=Load()), ops=[NotIn()], comparators=[Name(id='format_dict', ctx=Load())]), body=[Assign(targets=[Name(id='valid_formats', ctx=Store())], value=Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[Call(func=Name(id='sorted', ctx=Load()), args=[Call(func=Attribute(value=Name(id='format_dict', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[])), Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='Unsupported format "%s". Use one of %s.'), op=Mod(), right=Tuple(elts=[Name(id='format', ctx=Load()), Name(id='valid_formats', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='freeze', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='query'), arg(arg='format'), arg(arg='filename'), arg(arg='file_obj'), arg(arg='encoding')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value='csv'), Constant(value=None), Constant(value=None), Constant(value='utf8')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_check_arguments', ctx=Load()), args=[Name(id='filename', ctx=Load()), Name(id='file_obj', ctx=Load()), Name(id='format', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_export_formats', ctx=Load())], keywords=[])), If(test=Name(id='filename', ctx=Load()), body=[Assign(targets=[Name(id='file_obj', ctx=Store())], value=Call(func=Name(id='open_file', ctx=Load()), args=[Name(id='filename', ctx=Load()), Constant(value='w'), Name(id='encoding', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='exporter', ctx=Store())], value=Call(func=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_export_formats', ctx=Load()), slice=Name(id='format', ctx=Load()), ctx=Load()), args=[Name(id='query', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='exporter', ctx=Load()), attr='export', ctx=Load()), args=[Name(id='file_obj', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), If(test=Name(id='filename', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='file_obj', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='thaw', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='format'), arg(arg='filename'), arg(arg='file_obj'), arg(arg='strict'), arg(arg='encoding')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value='csv'), Constant(value=None), Constant(value=None), Constant(value=False), Constant(value='utf8')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_check_arguments', ctx=Load()), args=[Name(id='filename', ctx=Load()), Name(id='file_obj', ctx=Load()), Name(id='format', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_export_formats', ctx=Load())], keywords=[])), If(test=Name(id='filename', ctx=Load()), body=[Assign(targets=[Name(id='file_obj', ctx=Store())], value=Call(func=Name(id='open_file', ctx=Load()), args=[Name(id='filename', ctx=Load()), Constant(value='r'), Name(id='encoding', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='importer', ctx=Store())], value=Call(func=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_import_formats', ctx=Load()), slice=Name(id='format', ctx=Load()), ctx=Load()), args=[Subscript(value=Name(id='self', ctx=Load()), slice=Name(id='table', ctx=Load()), ctx=Load()), Name(id='strict', ctx=Load())], keywords=[])), Assign(targets=[Name(id='count', ctx=Store())], value=Call(func=Attribute(value=Name(id='importer', ctx=Load()), attr='load', ctx=Load()), args=[Name(id='file_obj', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), If(test=Name(id='filename', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='file_obj', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Name(id='count', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='Table', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dataset'), arg(arg='name'), arg(arg='model_class')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='dataset', ctx=Store())], value=Name(id='dataset', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store())], value=Name(id='name', ctx=Load())), If(test=Compare(left=Name(id='model_class', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='model_class', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_create_model', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='model_class', ctx=Load()), attr='create_table', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='dataset', ctx=Load()), attr='_models', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Store())], value=Name(id='model_class', ctx=Load()))], orelse=[])], decorator_list=[]), FunctionDef(name='model_class', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Subscript(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='dataset', ctx=Load()), attr='_models', ctx=Load()), slice=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BinOp(left=Constant(value='<Table: %s>'), op=Mod(), right=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())))], decorator_list=[]), FunctionDef(name='__len__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='find', ctx=Load()), args=[], keywords=[]), attr='count', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='__iter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='iter', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='find', ctx=Load()), args=[], keywords=[]), attr='iterator', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='_create_model', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[ClassDef(name='Meta', bases=[], keywords=[], body=[Assign(targets=[Name(id='table_name', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()))], decorator_list=[]), Return(value=Call(func=Name(id='type', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], keywords=[]), Tuple(elts=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='dataset', ctx=Load()), attr='_base_model', ctx=Load())], ctx=Load()), Dict(keys=[Constant(value='Meta')], values=[Name(id='Meta', ctx=Load())])], keywords=[]))], decorator_list=[]), FunctionDef(name='create_index', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='columns'), arg(arg='unique')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Assign(targets=[Name(id='index', ctx=Store())], value=Call(func=Name(id='ModelIndex', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model_class', ctx=Load()), Name(id='columns', ctx=Load())], keywords=[keyword(arg='unique', value=Name(id='unique', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model_class', ctx=Load()), attr='add_index', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='dataset', ctx=Load()), attr='_database', ctx=Load()), attr='execute', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_guess_field_type', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='basestring', ctx=Load())], keywords=[]), body=[Return(value=Name(id='TextField', ctx=Load()))], orelse=[]), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Tuple(elts=[Attribute(value=Name(id='datetime', ctx=Load()), attr='date', ctx=Load()), Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load())], ctx=Load())], keywords=[]), body=[Return(value=Name(id='DateTimeField', ctx=Load()))], orelse=[If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='value', ctx=Load()), ops=[Is()], comparators=[Constant(value=True)]), Compare(left=Name(id='value', ctx=Load()), ops=[Is()], comparators=[Constant(value=False)])]), body=[Return(value=Name(id='BooleanField', ctx=Load()))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='int', ctx=Load())], keywords=[]), body=[Return(value=Name(id='IntegerField', ctx=Load()))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='float', ctx=Load())], keywords=[]), body=[Return(value=Name(id='FloatField', ctx=Load()))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='Decimal', ctx=Load())], keywords=[]), body=[Return(value=Name(id='DecimalField', ctx=Load()))], orelse=[])])])])]), Return(value=Name(id='TextField', ctx=Load()))], decorator_list=[]), FunctionDef(name='columns', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=ListComp(elt=Attribute(value=Name(id='f', ctx=Load()), attr='name', ctx=Load()), generators=[comprehension(target=Name(id='f', ctx=Store()), iter=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model_class', ctx=Load()), attr='_meta', ctx=Load()), attr='sorted_fields', ctx=Load()), ifs=[], is_async=0)]))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='_migrate_new_columns', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='new_keys', ctx=Store())], value=BinOp(left=Call(func=Name(id='set', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[]), op=Sub(), right=Call(func=Name(id='set', ctx=Load()), args=[Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model_class', ctx=Load()), attr='_meta', ctx=Load()), attr='fields', ctx=Load())], keywords=[]))), If(test=Name(id='new_keys', ctx=Load()), body=[Assign(targets=[Name(id='operations', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='key', ctx=Store()), iter=Name(id='new_keys', ctx=Load()), body=[Assign(targets=[Name(id='field_class', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_guess_field_type', ctx=Load()), args=[Subscript(value=Name(id='data', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Load())], keywords=[])), Assign(targets=[Name(id='field', ctx=Store())], value=Call(func=Name(id='field_class', ctx=Load()), args=[], keywords=[keyword(arg='null', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Name(id='operations', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='dataset', ctx=Load()), attr='_migrator', ctx=Load()), attr='add_column', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), Name(id='key', ctx=Load()), Name(id='field', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='field', ctx=Load()), attr='bind', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='model_class', ctx=Load()), Name(id='key', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Name(id='migrate', ctx=Load()), args=[Starred(value=Name(id='operations', ctx=Load()), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='dataset', ctx=Load()), attr='update_cache', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='item')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='model_class', ctx=Load()), slice=Name(id='item', ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model_class', ctx=Load()), attr='DoesNotExist', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], decorator_list=[]), FunctionDef(name='__setitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='item'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='dict', ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Table.__setitem__() value must be a dict')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='pk', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model_class', ctx=Load()), attr='_meta', ctx=Load()), attr='primary_key', ctx=Load())), Assign(targets=[Subscript(value=Name(id='value', ctx=Load()), slice=Attribute(value=Name(id='pk', ctx=Load()), attr='name', ctx=Load()), ctx=Store())], value=Name(id='item', ctx=Load())), Try(body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='dataset', ctx=Load()), attr='transaction', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='txn', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='insert', ctx=Load()), args=[], keywords=[keyword(value=Name(id='value', ctx=Load()))]))])], handlers=[ExceptHandler(type=Name(id='IntegrityError', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='dataset', ctx=Load()), attr='update_cache', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='update', ctx=Load()), args=[], keywords=[keyword(arg='columns', value=List(elts=[Attribute(value=Name(id='pk', ctx=Load()), attr='name', ctx=Load())], ctx=Load())), keyword(value=Name(id='value', ctx=Load()))]))])], orelse=[], finalbody=[])], decorator_list=[]), FunctionDef(name='__delitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='item')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Delete(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='model_class', ctx=Load()), slice=Name(id='item', ctx=Load()), ctx=Del())])], decorator_list=[]), FunctionDef(name='insert', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='data'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_migrate_new_columns', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model_class', ctx=Load()), attr='insert', ctx=Load()), args=[], keywords=[keyword(value=Name(id='data', ctx=Load()))]), attr='execute', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='_apply_where', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='query'), arg(arg='filters'), arg(arg='conjunction')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Name(id='conjunction', ctx=Store())], value=BoolOp(op=Or(), values=[Name(id='conjunction', ctx=Load()), Attribute(value=Name(id='operator', ctx=Load()), attr='and_', ctx=Load())])), If(test=Name(id='filters', ctx=Load()), body=[Assign(targets=[Name(id='expressions', ctx=Store())], value=ListComp(elt=Compare(left=Subscript(value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model_class', ctx=Load()), attr='_meta', ctx=Load()), attr='fields', ctx=Load()), slice=Name(id='column', ctx=Load()), ctx=Load()), ops=[Eq()], comparators=[Name(id='value', ctx=Load())]), generators=[comprehension(target=Tuple(elts=[Name(id='column', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='filters', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])), Assign(targets=[Name(id='query', ctx=Store())], value=Call(func=Attribute(value=Name(id='query', ctx=Load()), attr='where', ctx=Load()), args=[Call(func=Name(id='reduce', ctx=Load()), args=[Name(id='conjunction', ctx=Load()), Name(id='expressions', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Return(value=Name(id='query', ctx=Load()))], decorator_list=[]), FunctionDef(name='update', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='columns'), arg(arg='conjunction')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='data'), defaults=[Constant(value=None), Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_migrate_new_columns', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[])), Assign(targets=[Name(id='filters', ctx=Store())], value=Dict(keys=[], values=[])), If(test=Name(id='columns', ctx=Load()), body=[For(target=Name(id='column', ctx=Store()), iter=Name(id='columns', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='filters', ctx=Load()), slice=Name(id='column', ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='pop', ctx=Load()), args=[Name(id='column', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_apply_where', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model_class', ctx=Load()), attr='update', ctx=Load()), args=[], keywords=[keyword(value=Name(id='data', ctx=Load()))]), Name(id='filters', ctx=Load()), Name(id='conjunction', ctx=Load())], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='_query', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='query'), defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_apply_where', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model_class', ctx=Load()), attr='select', ctx=Load()), args=[], keywords=[]), Name(id='query', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='find', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='query'), defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_query', ctx=Load()), args=[], keywords=[keyword(value=Name(id='query', ctx=Load()))]), attr='dicts', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='find_one', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='query'), defaults=[]), body=[Try(body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='find', ctx=Load()), args=[], keywords=[keyword(value=Name(id='query', ctx=Load()))]), attr='get', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model_class', ctx=Load()), attr='DoesNotExist', ctx=Load()), body=[Return(value=Constant(value=None))])], orelse=[], finalbody=[])], decorator_list=[]), FunctionDef(name='all', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='find', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='delete', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='query'), defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_apply_where', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model_class', ctx=Load()), attr='delete', ctx=Load()), args=[], keywords=[]), Name(id='query', ctx=Load())], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='freeze', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='dataset', ctx=Load()), attr='freeze', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='all', ctx=Load()), args=[], keywords=[]), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='thaw', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='dataset', ctx=Load()), attr='thaw', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[])], decorator_list=[]), ClassDef(name='Exporter', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='query')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='query', ctx=Store())], value=Name(id='query', ctx=Load()))], decorator_list=[]), FunctionDef(name='export', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='file_obj')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='JSONExporter', bases=[Name(id='Exporter', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='query'), arg(arg='iso8601_datetimes')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='JSONExporter', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='query', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='iso8601_datetimes', ctx=Store())], value=Name(id='iso8601_datetimes', ctx=Load()))], decorator_list=[]), FunctionDef(name='_make_default', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='datetime_types', ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), Attribute(value=Name(id='datetime', ctx=Load()), attr='date', ctx=Load()), Attribute(value=Name(id='datetime', ctx=Load()), attr='time', ctx=Load())], ctx=Load())), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='iso8601_datetimes', ctx=Load()), body=[FunctionDef(name='default', args=arguments(posonlyargs=[], args=[arg(arg='o')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='o', ctx=Load()), Name(id='datetime_types', ctx=Load())], keywords=[]), body=[Return(value=Call(func=Attribute(value=Name(id='o', ctx=Load()), attr='isoformat', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='o', ctx=Load()), Tuple(elts=[Name(id='Decimal', ctx=Load()), Attribute(value=Name(id='uuid', ctx=Load()), attr='UUID', ctx=Load())], ctx=Load())], keywords=[]), body=[Return(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='o', ctx=Load())], keywords=[]))], orelse=[])]), Raise(exc=Call(func=Name(id='TypeError', ctx=Load()), args=[BinOp(left=Constant(value='Unable to serialize %r as JSON'), op=Mod(), right=Name(id='o', ctx=Load()))], keywords=[]))], decorator_list=[])], orelse=[FunctionDef(name='default', args=arguments(posonlyargs=[], args=[arg(arg='o')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='o', ctx=Load()), BinOp(left=Name(id='datetime_types', ctx=Load()), op=Add(), right=Tuple(elts=[Name(id='Decimal', ctx=Load()), Attribute(value=Name(id='uuid', ctx=Load()), attr='UUID', ctx=Load())], ctx=Load()))], keywords=[]), body=[Return(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='o', ctx=Load())], keywords=[]))], orelse=[]), Raise(exc=Call(func=Name(id='TypeError', ctx=Load()), args=[BinOp(left=Constant(value='Unable to serialize %r as JSON'), op=Mod(), right=Name(id='o', ctx=Load()))], keywords=[]))], decorator_list=[])]), Return(value=Name(id='default', ctx=Load()))], decorator_list=[]), FunctionDef(name='export', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='file_obj')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='dump', ctx=Load()), args=[Call(func=Name(id='list', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='query', ctx=Load())], keywords=[]), Name(id='file_obj', ctx=Load())], keywords=[keyword(arg='default', value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_make_default', ctx=Load()), args=[], keywords=[])), keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[])], decorator_list=[]), ClassDef(name='CSVExporter', bases=[Name(id='Exporter', ctx=Load())], keywords=[], body=[FunctionDef(name='export', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='file_obj'), arg(arg='header')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=True)]), body=[Assign(targets=[Name(id='writer', ctx=Store())], value=Call(func=Attribute(value=Name(id='csv', ctx=Load()), attr='writer', ctx=Load()), args=[Name(id='file_obj', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), Assign(targets=[Name(id='tuples', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='query', ctx=Load()), attr='tuples', ctx=Load()), args=[], keywords=[]), attr='execute', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='tuples', ctx=Load()), attr='initialize', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=And(), values=[Name(id='header', ctx=Load()), Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='tuples', ctx=Load()), Constant(value='columns'), Constant(value=None)], keywords=[])]), body=[Expr(value=Call(func=Attribute(value=Name(id='writer', ctx=Load()), attr='writerow', ctx=Load()), args=[ListComp(elt=Name(id='column', ctx=Load()), generators=[comprehension(target=Name(id='column', ctx=Store()), iter=Attribute(value=Name(id='tuples', ctx=Load()), attr='columns', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], orelse=[]), For(target=Name(id='row', ctx=Store()), iter=Name(id='tuples', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='writer', ctx=Load()), attr='writerow', ctx=Load()), args=[Name(id='row', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[]), ClassDef(name='TSVExporter', bases=[Name(id='CSVExporter', ctx=Load())], keywords=[], body=[FunctionDef(name='export', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='file_obj'), arg(arg='header')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=True)]), body=[Expr(value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='setdefault', ctx=Load()), args=[Constant(value='delimiter'), Constant(value='\t')], keywords=[])), Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='TSVExporter', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='export', ctx=Load()), args=[Name(id='file_obj', ctx=Load()), Name(id='header', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[])], decorator_list=[]), ClassDef(name='Importer', bases=[Name(id='object', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='table'), arg(arg='strict')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Store())], value=Name(id='table', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='strict', ctx=Store())], value=Name(id='strict', ctx=Load())), Assign(targets=[Name(id='model', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), attr='model_class', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='columns', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Load()), attr='update', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='model', ctx=Load()), attr='_meta', ctx=Load()), attr='fields', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='load', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='file_obj')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='JSONImporter', bases=[Name(id='Importer', ctx=Load())], keywords=[], body=[FunctionDef(name='load', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='file_obj')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='load', ctx=Load()), args=[Name(id='file_obj', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), Assign(targets=[Name(id='count', ctx=Store())], value=Constant(value=0)), For(target=Name(id='row', ctx=Store()), iter=Name(id='data', ctx=Load()), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='strict', ctx=Load()), body=[Assign(targets=[Name(id='obj', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Name(id='key', ctx=Store()), iter=Name(id='row', ctx=Load()), body=[Assign(targets=[Name(id='field', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='field', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='obj', ctx=Load()), slice=Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Name(id='field', ctx=Load()), attr='python_value', ctx=Load()), args=[Subscript(value=Name(id='row', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[Assign(targets=[Name(id='obj', ctx=Store())], value=Name(id='row', ctx=Load()))]), If(test=Name(id='obj', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), attr='insert', ctx=Load()), args=[], keywords=[keyword(value=Name(id='obj', ctx=Load()))])), AugAssign(target=Name(id='count', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[])], orelse=[]), Return(value=Name(id='count', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='CSVImporter', bases=[Name(id='Importer', ctx=Load())], keywords=[], body=[FunctionDef(name='load', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='file_obj'), arg(arg='header')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=True)]), body=[Assign(targets=[Name(id='count', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='reader', ctx=Store())], value=Call(func=Attribute(value=Name(id='csv', ctx=Load()), attr='reader', ctx=Load()), args=[Name(id='file_obj', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), If(test=Name(id='header', ctx=Load()), body=[Try(body=[Assign(targets=[Name(id='header_keys', ctx=Store())], value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='reader', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='StopIteration', ctx=Load()), body=[Return(value=Name(id='count', ctx=Load()))])], orelse=[], finalbody=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='strict', ctx=Load()), body=[Assign(targets=[Name(id='header_fields', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Tuple(elts=[Name(id='idx', ctx=Store()), Name(id='key', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='header_keys', ctx=Load())], keywords=[]), body=[If(test=Compare(left=Name(id='key', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='header_fields', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='idx', ctx=Load()), Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='columns', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Load())], ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[Assign(targets=[Name(id='header_fields', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='header_keys', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[Assign(targets=[Name(id='header_fields', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='enumerate', ctx=Load()), args=[Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='model', ctx=Load()), attr='_meta', ctx=Load()), attr='sorted_fields', ctx=Load())], keywords=[])], keywords=[]))]), If(test=UnaryOp(op=Not(), operand=Name(id='header_fields', ctx=Load())), body=[Return(value=Name(id='count', ctx=Load()))], orelse=[]), For(target=Name(id='row', ctx=Store()), iter=Name(id='reader', ctx=Load()), body=[Assign(targets=[Name(id='obj', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Tuple(elts=[Name(id='idx', ctx=Store()), Name(id='field', ctx=Store())], ctx=Store()), iter=Name(id='header_fields', ctx=Load()), body=[If(test=Attribute(value=Name(id='self', ctx=Load()), attr='strict', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='obj', ctx=Load()), slice=Attribute(value=Name(id='field', ctx=Load()), attr='name', ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Name(id='field', ctx=Load()), attr='python_value', ctx=Load()), args=[Subscript(value=Name(id='row', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Subscript(value=Name(id='obj', ctx=Load()), slice=Name(id='field', ctx=Load()), ctx=Store())], value=Subscript(value=Name(id='row', ctx=Load()), slice=Name(id='idx', ctx=Load()), ctx=Load()))])], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='table', ctx=Load()), attr='insert', ctx=Load()), args=[], keywords=[keyword(value=Name(id='obj', ctx=Load()))])), AugAssign(target=Name(id='count', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[]), Return(value=Name(id='count', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='TSVImporter', bases=[Name(id='CSVImporter', ctx=Load())], keywords=[], body=[FunctionDef(name='load', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='file_obj'), arg(arg='header')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[Constant(value=True)]), body=[Expr(value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='setdefault', ctx=Load()), args=[Constant(value='delimiter'), Constant(value='\t')], keywords=[])), Return(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='TSVImporter', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='load', ctx=Load()), args=[Name(id='file_obj', ctx=Load()), Name(id='header', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[])], decorator_list=[])], type_ignores=[])