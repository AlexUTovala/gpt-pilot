Module(body=[Expr(value=Constant(value='Library to easily read single chars and key strokes')), Assign(targets=[Name(id='__version__', ctx=Store())], value=Constant(value='4.0.5')), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='readchar'), Constant(value='readkey'), Constant(value='key'), Constant(value='config')], ctx=Load())), ImportFrom(module='sys', names=[alias(name='platform')], level=0), ImportFrom(module='_config', names=[alias(name='config')], level=1), If(test=Call(func=Attribute(value=Name(id='platform', ctx=Load()), attr='startswith', ctx=Load()), args=[Tuple(elts=[Constant(value='linux'), Constant(value='darwin'), Constant(value='freebsd'), Constant(value='openbsd')], ctx=Load())], keywords=[]), body=[ImportFrom(names=[alias(name='_posix_key', asname='key')], level=1), ImportFrom(module='_posix_read', names=[alias(name='readchar'), alias(name='readkey')], level=1)], orelse=[If(test=Compare(left=Name(id='platform', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='win32'), Constant(value='cygwin')], ctx=Load())]), body=[ImportFrom(names=[alias(name='_win_key', asname='key')], level=1), ImportFrom(module='_win_read', names=[alias(name='readchar'), alias(name='readkey')], level=1)], orelse=[Raise(exc=Call(func=Name(id='NotImplementedError', ctx=Load()), args=[JoinedStr(values=[Constant(value='The platform '), FormattedValue(value=Name(id='platform', ctx=Load()), conversion=-1), Constant(value=' is not supported yet')])], keywords=[]))])])], type_ignores=[])