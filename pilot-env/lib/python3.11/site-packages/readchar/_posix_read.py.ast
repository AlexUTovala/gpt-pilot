Module(body=[Import(names=[alias(name='sys')]), Import(names=[alias(name='termios')]), ImportFrom(module='_config', names=[alias(name='config')], level=1), FunctionDef(name='readchar', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Reads a single character from the input stream.\n    Blocks until a character is available.')), Assign(targets=[Name(id='fd', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdin', ctx=Load()), attr='fileno', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='old_settings', ctx=Store())], value=Call(func=Attribute(value=Name(id='termios', ctx=Load()), attr='tcgetattr', ctx=Load()), args=[Name(id='fd', ctx=Load())], keywords=[])), Assign(targets=[Name(id='term', ctx=Store())], value=Call(func=Attribute(value=Name(id='termios', ctx=Load()), attr='tcgetattr', ctx=Load()), args=[Name(id='fd', ctx=Load())], keywords=[])), Try(body=[AugAssign(target=Subscript(value=Name(id='term', ctx=Load()), slice=Constant(value=3), ctx=Store()), op=BitAnd(), value=UnaryOp(op=Invert(), operand=BinOp(left=BinOp(left=BinOp(left=Attribute(value=Name(id='termios', ctx=Load()), attr='ICANON', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='termios', ctx=Load()), attr='ECHO', ctx=Load())), op=BitOr(), right=Attribute(value=Name(id='termios', ctx=Load()), attr='IGNBRK', ctx=Load())), op=BitOr(), right=Attribute(value=Name(id='termios', ctx=Load()), attr='BRKINT', ctx=Load())))), Expr(value=Call(func=Attribute(value=Name(id='termios', ctx=Load()), attr='tcsetattr', ctx=Load()), args=[Name(id='fd', ctx=Load()), Attribute(value=Name(id='termios', ctx=Load()), attr='TCSAFLUSH', ctx=Load()), Name(id='term', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdin', ctx=Load()), attr='read', ctx=Load()), args=[Constant(value=1)], keywords=[]))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='termios', ctx=Load()), attr='tcsetattr', ctx=Load()), args=[Name(id='fd', ctx=Load()), Attribute(value=Name(id='termios', ctx=Load()), attr='TCSADRAIN', ctx=Load()), Name(id='old_settings', ctx=Load())], keywords=[]))]), Return(value=Name(id='ch', ctx=Load()))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='readkey', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get a keypress. If an escaped key is pressed, the full sequence is\n    read and returned as noted in `_posix_key.py`.')), Assign(targets=[Name(id='c1', ctx=Store())], value=Call(func=Name(id='readchar', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='c1', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='config', ctx=Load()), attr='INTERRUPT_KEYS', ctx=Load())]), body=[Raise(exc=Name(id='KeyboardInterrupt', ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='c1', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='\x1b')]), body=[Return(value=Name(id='c1', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='c2', ctx=Store())], value=Call(func=Name(id='readchar', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='c2', ctx=Load()), ops=[NotIn()], comparators=[Constant(value='O[')]), body=[Return(value=BinOp(left=Name(id='c1', ctx=Load()), op=Add(), right=Name(id='c2', ctx=Load())))], orelse=[]), Assign(targets=[Name(id='c3', ctx=Store())], value=Call(func=Name(id='readchar', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='c3', ctx=Load()), ops=[NotIn()], comparators=[Constant(value='12356')]), body=[Return(value=BinOp(left=BinOp(left=Name(id='c1', ctx=Load()), op=Add(), right=Name(id='c2', ctx=Load())), op=Add(), right=Name(id='c3', ctx=Load())))], orelse=[]), Assign(targets=[Name(id='c4', ctx=Store())], value=Call(func=Name(id='readchar', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='c4', ctx=Load()), ops=[NotIn()], comparators=[Constant(value='01345789')]), body=[Return(value=BinOp(left=BinOp(left=BinOp(left=Name(id='c1', ctx=Load()), op=Add(), right=Name(id='c2', ctx=Load())), op=Add(), right=Name(id='c3', ctx=Load())), op=Add(), right=Name(id='c4', ctx=Load())))], orelse=[]), Assign(targets=[Name(id='c5', ctx=Store())], value=Call(func=Name(id='readchar', ctx=Load()), args=[], keywords=[])), Return(value=BinOp(left=BinOp(left=BinOp(left=BinOp(left=Name(id='c1', ctx=Load()), op=Add(), right=Name(id='c2', ctx=Load())), op=Add(), right=Name(id='c3', ctx=Load())), op=Add(), right=Name(id='c4', ctx=Load())), op=Add(), right=Name(id='c5', ctx=Load())))], decorator_list=[], returns=Name(id='str', ctx=Load()))], type_ignores=[])