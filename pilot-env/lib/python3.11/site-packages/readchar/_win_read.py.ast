Module(body=[Import(names=[alias(name='msvcrt')]), ImportFrom(module='_config', names=[alias(name='config')], level=1), FunctionDef(name='readchar', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Reads a single character from the input stream.\n    Blocks until a character is available.')), Return(value=Call(func=Name(id='chr', ctx=Load()), args=[Call(func=Attribute(value=Name(id='int', ctx=Load()), attr='from_bytes', ctx=Load()), args=[Call(func=Attribute(value=Name(id='msvcrt', ctx=Load()), attr='getch', ctx=Load()), args=[], keywords=[]), Constant(value='big')], keywords=[])], keywords=[]))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='readkey', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Reads the next keypress. If an escaped key is pressed, the full\n    sequence is read and returned as noted in `_win_key.py`.')), Assign(targets=[Name(id='ch', ctx=Store())], value=Call(func=Name(id='readchar', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='config', ctx=Load()), attr='INTERRUPT_KEYS', ctx=Load())]), body=[Raise(exc=Name(id='KeyboardInterrupt', ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='ch', ctx=Load()), ops=[NotIn()], comparators=[Constant(value='\x00Ã ')]), body=[Return(value=Name(id='ch', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='ch2', ctx=Store())], value=Call(func=Name(id='readchar', ctx=Load()), args=[], keywords=[])), Return(value=BinOp(left=Constant(value='\x00'), op=Add(), right=Name(id='ch2', ctx=Load())))], decorator_list=[], returns=Name(id='str', ctx=Load()))], type_ignores=[])