Module(body=[Expr(value=Constant(value='\nThis module contains provisional support for SOCKS proxies from within\nurllib3. This module supports SOCKS4, SOCKS4A (an extension of SOCKS4), and\nSOCKS5. To enable its functionality, either install PySocks or install this\nmodule with the ``socks`` extra.\n\nThe SOCKS implementation supports the full range of urllib3 features. It also\nsupports the following SOCKS features:\n\n- SOCKS4A (``proxy_url=\'socks4a://...``)\n- SOCKS4 (``proxy_url=\'socks4://...``)\n- SOCKS5 with remote DNS (``proxy_url=\'socks5h://...``)\n- SOCKS5 with local DNS (``proxy_url=\'socks5://...``)\n- Usernames and passwords for the SOCKS proxy\n\n.. note::\n   It is recommended to use ``socks5h://`` or ``socks4a://`` schemes in\n   your ``proxy_url`` to ensure that DNS resolution is done from the remote\n   server instead of client-side when connecting to a domain name.\n\nSOCKS4 supports IPv4 and domain names with the SOCKS4A extension. SOCKS5\nsupports IPv4, IPv6, and domain names.\n\nWhen connecting to a SOCKS4 proxy the ``username`` portion of the ``proxy_url``\nwill be sent as the ``userid`` section of the SOCKS request:\n\n.. code-block:: python\n\n    proxy_url="socks4a://<userid>@proxy-host"\n\nWhen connecting to a SOCKS5 proxy the ``username`` and ``password`` portion\nof the ``proxy_url`` will be sent as the username/password to authenticate\nwith the proxy:\n\n.. code-block:: python\n\n    proxy_url="socks5h://<username>:<password>@proxy-host"\n\n')), ImportFrom(module='__future__', names=[alias(name='absolute_import')], level=0), Try(body=[Import(names=[alias(name='socks')])], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Import(names=[alias(name='warnings')]), ImportFrom(module='exceptions', names=[alias(name='DependencyWarning')], level=2), Expr(value=Call(func=Attribute(value=Name(id='warnings', ctx=Load()), attr='warn', ctx=Load()), args=[Constant(value='SOCKS support in urllib3 requires the installation of optional dependencies: specifically, PySocks.  For more information, see https://urllib3.readthedocs.io/en/1.26.x/contrib.html#socks-proxies'), Name(id='DependencyWarning', ctx=Load())], keywords=[])), Raise()])], orelse=[], finalbody=[]), ImportFrom(module='socket', names=[alias(name='error', asname='SocketError')], level=0), ImportFrom(module='socket', names=[alias(name='timeout', asname='SocketTimeout')], level=0), ImportFrom(module='connection', names=[alias(name='HTTPConnection'), alias(name='HTTPSConnection')], level=2), ImportFrom(module='connectionpool', names=[alias(name='HTTPConnectionPool'), alias(name='HTTPSConnectionPool')], level=2), ImportFrom(module='exceptions', names=[alias(name='ConnectTimeoutError'), alias(name='NewConnectionError')], level=2), ImportFrom(module='poolmanager', names=[alias(name='PoolManager')], level=2), ImportFrom(module='util.url', names=[alias(name='parse_url')], level=2), Try(body=[Import(names=[alias(name='ssl')])], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Assign(targets=[Name(id='ssl', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[]), ClassDef(name='SOCKSConnection', bases=[Name(id='HTTPConnection', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    A plain-text HTTP connection that connects via a SOCKS proxy.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_socks_options', ctx=Store())], value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='_socks_options')], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='SOCKSConnection', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='_new_conn', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Establish a new connection via the SOCKS proxy.\n        ')), Assign(targets=[Name(id='extra_kw', ctx=Store())], value=Dict(keys=[], values=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='source_address', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='extra_kw', ctx=Load()), slice=Constant(value='source_address'), ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='source_address', ctx=Load()))], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='socket_options', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='extra_kw', ctx=Load()), slice=Constant(value='socket_options'), ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='socket_options', ctx=Load()))], orelse=[]), Try(body=[Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Name(id='socks', ctx=Load()), attr='create_connection', ctx=Load()), args=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='host', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='port', ctx=Load())], ctx=Load())], keywords=[keyword(arg='proxy_type', value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_socks_options', ctx=Load()), slice=Constant(value='socks_version'), ctx=Load())), keyword(arg='proxy_addr', value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_socks_options', ctx=Load()), slice=Constant(value='proxy_host'), ctx=Load())), keyword(arg='proxy_port', value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_socks_options', ctx=Load()), slice=Constant(value='proxy_port'), ctx=Load())), keyword(arg='proxy_username', value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_socks_options', ctx=Load()), slice=Constant(value='username'), ctx=Load())), keyword(arg='proxy_password', value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_socks_options', ctx=Load()), slice=Constant(value='password'), ctx=Load())), keyword(arg='proxy_rdns', value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_socks_options', ctx=Load()), slice=Constant(value='rdns'), ctx=Load())), keyword(arg='timeout', value=Attribute(value=Name(id='self', ctx=Load()), attr='timeout', ctx=Load())), keyword(value=Name(id='extra_kw', ctx=Load()))]))], handlers=[ExceptHandler(type=Name(id='SocketTimeout', ctx=Load()), body=[Raise(exc=Call(func=Name(id='ConnectTimeoutError', ctx=Load()), args=[Name(id='self', ctx=Load()), BinOp(left=Constant(value='Connection to %s timed out. (connect timeout=%s)'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='host', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='timeout', ctx=Load())], ctx=Load()))], keywords=[]))]), ExceptHandler(type=Attribute(value=Name(id='socks', ctx=Load()), attr='ProxyError', ctx=Load()), name='e', body=[If(test=Attribute(value=Name(id='e', ctx=Load()), attr='socket_err', ctx=Load()), body=[Assign(targets=[Name(id='error', ctx=Store())], value=Attribute(value=Name(id='e', ctx=Load()), attr='socket_err', ctx=Load())), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='error', ctx=Load()), Name(id='SocketTimeout', ctx=Load())], keywords=[]), body=[Raise(exc=Call(func=Name(id='ConnectTimeoutError', ctx=Load()), args=[Name(id='self', ctx=Load()), BinOp(left=Constant(value='Connection to %s timed out. (connect timeout=%s)'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='host', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='timeout', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='NewConnectionError', ctx=Load()), args=[Name(id='self', ctx=Load()), BinOp(left=Constant(value='Failed to establish a new connection: %s'), op=Mod(), right=Name(id='error', ctx=Load()))], keywords=[]))])], orelse=[Raise(exc=Call(func=Name(id='NewConnectionError', ctx=Load()), args=[Name(id='self', ctx=Load()), BinOp(left=Constant(value='Failed to establish a new connection: %s'), op=Mod(), right=Name(id='e', ctx=Load()))], keywords=[]))])]), ExceptHandler(type=Name(id='SocketError', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='NewConnectionError', ctx=Load()), args=[Name(id='self', ctx=Load()), BinOp(left=Constant(value='Failed to establish a new connection: %s'), op=Mod(), right=Name(id='e', ctx=Load()))], keywords=[]))])], orelse=[], finalbody=[]), Return(value=Name(id='conn', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='SOCKSHTTPSConnection', bases=[Name(id='SOCKSConnection', ctx=Load()), Name(id='HTTPSConnection', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[]), ClassDef(name='SOCKSHTTPConnectionPool', bases=[Name(id='HTTPConnectionPool', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='ConnectionCls', ctx=Store())], value=Name(id='SOCKSConnection', ctx=Load()))], decorator_list=[]), ClassDef(name='SOCKSHTTPSConnectionPool', bases=[Name(id='HTTPSConnectionPool', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='ConnectionCls', ctx=Store())], value=Name(id='SOCKSHTTPSConnection', ctx=Load()))], decorator_list=[]), ClassDef(name='SOCKSProxyManager', bases=[Name(id='PoolManager', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    A version of the urllib3 ProxyManager that routes connections via the\n    defined SOCKS proxy.\n    ')), Assign(targets=[Name(id='pool_classes_by_scheme', ctx=Store())], value=Dict(keys=[Constant(value='http'), Constant(value='https')], values=[Name(id='SOCKSHTTPConnectionPool', ctx=Load()), Name(id='SOCKSHTTPSConnectionPool', ctx=Load())])), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='proxy_url'), arg(arg='username'), arg(arg='password'), arg(arg='num_pools'), arg(arg='headers')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='connection_pool_kw'), defaults=[Constant(value=None), Constant(value=None), Constant(value=10), Constant(value=None)]), body=[Assign(targets=[Name(id='parsed', ctx=Store())], value=Call(func=Name(id='parse_url', ctx=Load()), args=[Name(id='proxy_url', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='username', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Name(id='password', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Name(id='parsed', ctx=Load()), attr='auth', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Assign(targets=[Name(id='split', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='parsed', ctx=Load()), attr='auth', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=':')], keywords=[])), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='split', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=2)]), body=[Assign(targets=[Tuple(elts=[Name(id='username', ctx=Store()), Name(id='password', ctx=Store())], ctx=Store())], value=Name(id='split', ctx=Load()))], orelse=[])], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='parsed', ctx=Load()), attr='scheme', ctx=Load()), ops=[Eq()], comparators=[Constant(value='socks5')]), body=[Assign(targets=[Name(id='socks_version', ctx=Store())], value=Attribute(value=Name(id='socks', ctx=Load()), attr='PROXY_TYPE_SOCKS5', ctx=Load())), Assign(targets=[Name(id='rdns', ctx=Store())], value=Constant(value=False))], orelse=[If(test=Compare(left=Attribute(value=Name(id='parsed', ctx=Load()), attr='scheme', ctx=Load()), ops=[Eq()], comparators=[Constant(value='socks5h')]), body=[Assign(targets=[Name(id='socks_version', ctx=Store())], value=Attribute(value=Name(id='socks', ctx=Load()), attr='PROXY_TYPE_SOCKS5', ctx=Load())), Assign(targets=[Name(id='rdns', ctx=Store())], value=Constant(value=True))], orelse=[If(test=Compare(left=Attribute(value=Name(id='parsed', ctx=Load()), attr='scheme', ctx=Load()), ops=[Eq()], comparators=[Constant(value='socks4')]), body=[Assign(targets=[Name(id='socks_version', ctx=Store())], value=Attribute(value=Name(id='socks', ctx=Load()), attr='PROXY_TYPE_SOCKS4', ctx=Load())), Assign(targets=[Name(id='rdns', ctx=Store())], value=Constant(value=False))], orelse=[If(test=Compare(left=Attribute(value=Name(id='parsed', ctx=Load()), attr='scheme', ctx=Load()), ops=[Eq()], comparators=[Constant(value='socks4a')]), body=[Assign(targets=[Name(id='socks_version', ctx=Store())], value=Attribute(value=Name(id='socks', ctx=Load()), attr='PROXY_TYPE_SOCKS4', ctx=Load())), Assign(targets=[Name(id='rdns', ctx=Store())], value=Constant(value=True))], orelse=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='Unable to determine SOCKS version from %s'), op=Mod(), right=Name(id='proxy_url', ctx=Load()))], keywords=[]))])])])]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='proxy_url', ctx=Store())], value=Name(id='proxy_url', ctx=Load())), Assign(targets=[Name(id='socks_options', ctx=Store())], value=Dict(keys=[Constant(value='socks_version'), Constant(value='proxy_host'), Constant(value='proxy_port'), Constant(value='username'), Constant(value='password'), Constant(value='rdns')], values=[Name(id='socks_version', ctx=Load()), Attribute(value=Name(id='parsed', ctx=Load()), attr='host', ctx=Load()), Attribute(value=Name(id='parsed', ctx=Load()), attr='port', ctx=Load()), Name(id='username', ctx=Load()), Name(id='password', ctx=Load()), Name(id='rdns', ctx=Load())])), Assign(targets=[Subscript(value=Name(id='connection_pool_kw', ctx=Load()), slice=Constant(value='_socks_options'), ctx=Store())], value=Name(id='socks_options', ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='SOCKSProxyManager', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Name(id='num_pools', ctx=Load()), Name(id='headers', ctx=Load())], keywords=[keyword(value=Name(id='connection_pool_kw', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='pool_classes_by_scheme', ctx=Store())], value=Attribute(value=Name(id='SOCKSProxyManager', ctx=Load()), attr='pool_classes_by_scheme', ctx=Load()))], decorator_list=[])], decorator_list=[])], type_ignores=[])