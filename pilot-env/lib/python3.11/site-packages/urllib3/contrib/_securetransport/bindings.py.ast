Module(body=[Expr(value=Constant(value='\nThis module uses ctypes to bind a whole bunch of functions and constants from\nSecureTransport. The goal here is to provide the low-level API to\nSecureTransport. These are essentially the C-level functions and constants, and\nthey\'re pretty gross to work with.\n\nThis code is a bastardised version of the code found in Will Bond\'s oscrypto\nlibrary. An enormous debt is owed to him for blazing this trail for us. For\nthat reason, this code should be considered to be covered both by urllib3\'s\nlicense and by oscrypto\'s:\n\n    Copyright (c) 2015-2016 Will Bond <will@wbond.net>\n\n    Permission is hereby granted, free of charge, to any person obtaining a\n    copy of this software and associated documentation files (the "Software"),\n    to deal in the Software without restriction, including without limitation\n    the rights to use, copy, modify, merge, publish, distribute, sublicense,\n    and/or sell copies of the Software, and to permit persons to whom the\n    Software is furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n    DEALINGS IN THE SOFTWARE.\n')), ImportFrom(module='__future__', names=[alias(name='absolute_import')], level=0), Import(names=[alias(name='platform')]), ImportFrom(module='ctypes', names=[alias(name='CDLL'), alias(name='CFUNCTYPE'), alias(name='POINTER'), alias(name='c_bool'), alias(name='c_byte'), alias(name='c_char_p'), alias(name='c_int32'), alias(name='c_long'), alias(name='c_size_t'), alias(name='c_uint32'), alias(name='c_ulong'), alias(name='c_void_p')], level=0), ImportFrom(module='ctypes.util', names=[alias(name='find_library')], level=0), ImportFrom(module='urllib3.packages.six', names=[alias(name='raise_from')], level=0), If(test=Compare(left=Call(func=Attribute(value=Name(id='platform', ctx=Load()), attr='system', ctx=Load()), args=[], keywords=[]), ops=[NotEq()], comparators=[Constant(value='Darwin')]), body=[Raise(exc=Call(func=Name(id='ImportError', ctx=Load()), args=[Constant(value='Only macOS is supported')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='version', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='platform', ctx=Load()), attr='mac_ver', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='version_info', ctx=Store())], value=Call(func=Name(id='tuple', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Name(id='int', ctx=Load()), Call(func=Attribute(value=Name(id='version', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='.')], keywords=[])], keywords=[])], keywords=[])), If(test=Compare(left=Name(id='version_info', ctx=Load()), ops=[Lt()], comparators=[Tuple(elts=[Constant(value=10), Constant(value=8)], ctx=Load())]), body=[Raise(exc=Call(func=Name(id='OSError', ctx=Load()), args=[BinOp(left=Constant(value='Only OS X 10.8 and newer are supported, not %s.%s'), op=Mod(), right=Tuple(elts=[Subscript(value=Name(id='version_info', ctx=Load()), slice=Constant(value=0), ctx=Load()), Subscript(value=Name(id='version_info', ctx=Load()), slice=Constant(value=1), ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), FunctionDef(name='load_cdll', args=arguments(posonlyargs=[], args=[arg(arg='name'), arg(arg='macos10_16_path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Loads a CDLL by name, falling back to known path on 10.16+')), Try(body=[If(test=Compare(left=Name(id='version_info', ctx=Load()), ops=[GtE()], comparators=[Tuple(elts=[Constant(value=10), Constant(value=16)], ctx=Load())]), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Name(id='macos10_16_path', ctx=Load()))], orelse=[Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Name(id='find_library', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[]))]), If(test=UnaryOp(op=Not(), operand=Name(id='path', ctx=Load())), body=[Raise(exc=Name(id='OSError', ctx=Load()))], orelse=[]), Return(value=Call(func=Name(id='CDLL', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[keyword(arg='use_errno', value=Constant(value=True))]))], handlers=[ExceptHandler(type=Name(id='OSError', ctx=Load()), body=[Expr(value=Call(func=Name(id='raise_from', ctx=Load()), args=[Call(func=Name(id='ImportError', ctx=Load()), args=[BinOp(left=Constant(value='The library %s failed to load'), op=Mod(), right=Name(id='name', ctx=Load()))], keywords=[]), Constant(value=None)], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[]), Assign(targets=[Name(id='Security', ctx=Store())], value=Call(func=Name(id='load_cdll', ctx=Load()), args=[Constant(value='Security'), Constant(value='/System/Library/Frameworks/Security.framework/Security')], keywords=[])), Assign(targets=[Name(id='CoreFoundation', ctx=Store())], value=Call(func=Name(id='load_cdll', ctx=Load()), args=[Constant(value='CoreFoundation'), Constant(value='/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation')], keywords=[])), Assign(targets=[Name(id='Boolean', ctx=Store())], value=Name(id='c_bool', ctx=Load())), Assign(targets=[Name(id='CFIndex', ctx=Store())], value=Name(id='c_long', ctx=Load())), Assign(targets=[Name(id='CFStringEncoding', ctx=Store())], value=Name(id='c_uint32', ctx=Load())), Assign(targets=[Name(id='CFData', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='CFString', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='CFArray', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='CFMutableArray', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='CFDictionary', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='CFError', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='CFType', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='CFTypeID', ctx=Store())], value=Name(id='c_ulong', ctx=Load())), Assign(targets=[Name(id='CFTypeRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='CFType', ctx=Load())], keywords=[])), Assign(targets=[Name(id='CFAllocatorRef', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='OSStatus', ctx=Store())], value=Name(id='c_int32', ctx=Load())), Assign(targets=[Name(id='CFDataRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='CFData', ctx=Load())], keywords=[])), Assign(targets=[Name(id='CFStringRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='CFString', ctx=Load())], keywords=[])), Assign(targets=[Name(id='CFArrayRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='CFArray', ctx=Load())], keywords=[])), Assign(targets=[Name(id='CFMutableArrayRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='CFMutableArray', ctx=Load())], keywords=[])), Assign(targets=[Name(id='CFDictionaryRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='CFDictionary', ctx=Load())], keywords=[])), Assign(targets=[Name(id='CFArrayCallBacks', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='CFDictionaryKeyCallBacks', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='CFDictionaryValueCallBacks', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='SecCertificateRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='c_void_p', ctx=Load())], keywords=[])), Assign(targets=[Name(id='SecExternalFormat', ctx=Store())], value=Name(id='c_uint32', ctx=Load())), Assign(targets=[Name(id='SecExternalItemType', ctx=Store())], value=Name(id='c_uint32', ctx=Load())), Assign(targets=[Name(id='SecIdentityRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='c_void_p', ctx=Load())], keywords=[])), Assign(targets=[Name(id='SecItemImportExportFlags', ctx=Store())], value=Name(id='c_uint32', ctx=Load())), Assign(targets=[Name(id='SecItemImportExportKeyParameters', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Name(id='SecKeychainRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='c_void_p', ctx=Load())], keywords=[])), Assign(targets=[Name(id='SSLProtocol', ctx=Store())], value=Name(id='c_uint32', ctx=Load())), Assign(targets=[Name(id='SSLCipherSuite', ctx=Store())], value=Name(id='c_uint32', ctx=Load())), Assign(targets=[Name(id='SSLContextRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='c_void_p', ctx=Load())], keywords=[])), Assign(targets=[Name(id='SecTrustRef', ctx=Store())], value=Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='c_void_p', ctx=Load())], keywords=[])), Assign(targets=[Name(id='SSLConnectionRef', ctx=Store())], value=Name(id='c_uint32', ctx=Load())), Assign(targets=[Name(id='SecTrustResultType', ctx=Store())], value=Name(id='c_uint32', ctx=Load())), Assign(targets=[Name(id='SecTrustOptionFlags', ctx=Store())], value=Name(id='c_uint32', ctx=Load())), Assign(targets=[Name(id='SSLProtocolSide', ctx=Store())], value=Name(id='c_uint32', ctx=Load())), Assign(targets=[Name(id='SSLConnectionType', ctx=Store())], value=Name(id='c_uint32', ctx=Load())), Assign(targets=[Name(id='SSLSessionOption', ctx=Store())], value=Name(id='c_uint32', ctx=Load())), Try(body=[Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecItemImport', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFDataRef', ctx=Load()), Name(id='CFStringRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='SecExternalFormat', ctx=Load())], keywords=[]), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='SecExternalItemType', ctx=Load())], keywords=[]), Name(id='SecItemImportExportFlags', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='SecItemImportExportKeyParameters', ctx=Load())], keywords=[]), Name(id='SecKeychainRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='CFArrayRef', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecItemImport', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecCertificateGetTypeID', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecCertificateGetTypeID', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFTypeID', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecIdentityGetTypeID', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecIdentityGetTypeID', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFTypeID', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecKeyGetTypeID', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecKeyGetTypeID', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFTypeID', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecCertificateCreateWithData', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFAllocatorRef', ctx=Load()), Name(id='CFDataRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecCertificateCreateWithData', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='SecCertificateRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecCertificateCopyData', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SecCertificateRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecCertificateCopyData', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFDataRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecCopyErrorMessageString', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='OSStatus', ctx=Load()), Name(id='c_void_p', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecCopyErrorMessageString', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFStringRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecIdentityCreateWithCertificate', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFTypeRef', ctx=Load()), Name(id='SecCertificateRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='SecIdentityRef', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecIdentityCreateWithCertificate', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecKeychainCreate', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='c_char_p', ctx=Load()), Name(id='c_uint32', ctx=Load()), Name(id='c_void_p', ctx=Load()), Name(id='Boolean', ctx=Load()), Name(id='c_void_p', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='SecKeychainRef', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecKeychainCreate', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecKeychainDelete', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SecKeychainRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecKeychainDelete', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecPKCS12Import', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFDataRef', ctx=Load()), Name(id='CFDictionaryRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='CFArrayRef', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecPKCS12Import', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Name(id='SSLReadFunc', ctx=Store())], value=Call(func=Name(id='CFUNCTYPE', ctx=Load()), args=[Name(id='OSStatus', ctx=Load()), Name(id='SSLConnectionRef', ctx=Load()), Name(id='c_void_p', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='c_size_t', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='SSLWriteFunc', ctx=Store())], value=Call(func=Name(id='CFUNCTYPE', ctx=Load()), args=[Name(id='OSStatus', ctx=Load()), Name(id='SSLConnectionRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='c_byte', ctx=Load())], keywords=[]), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='c_size_t', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetIOFuncs', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Name(id='SSLReadFunc', ctx=Load()), Name(id='SSLWriteFunc', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetIOFuncs', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetPeerID', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Name(id='c_char_p', ctx=Load()), Name(id='c_size_t', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetPeerID', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetCertificate', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Name(id='CFArrayRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetCertificate', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetCertificateAuthorities', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Name(id='CFTypeRef', ctx=Load()), Name(id='Boolean', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetCertificateAuthorities', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetConnection', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Name(id='SSLConnectionRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetConnection', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetPeerDomainName', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Name(id='c_char_p', ctx=Load()), Name(id='c_size_t', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetPeerDomainName', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLHandshake', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLHandshake', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLRead', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Name(id='c_char_p', ctx=Load()), Name(id='c_size_t', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='c_size_t', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLRead', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLWrite', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Name(id='c_char_p', ctx=Load()), Name(id='c_size_t', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='c_size_t', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLWrite', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLClose', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLClose', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLGetNumberSupportedCiphers', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='c_size_t', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLGetNumberSupportedCiphers', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLGetSupportedCiphers', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='SSLCipherSuite', ctx=Load())], keywords=[]), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='c_size_t', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLGetSupportedCiphers', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetEnabledCiphers', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='SSLCipherSuite', ctx=Load())], keywords=[]), Name(id='c_size_t', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetEnabledCiphers', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLGetNumberEnabledCiphers', ctx=Load()), attr='argtype', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='c_size_t', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLGetNumberEnabledCiphers', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLGetEnabledCiphers', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='SSLCipherSuite', ctx=Load())], keywords=[]), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='c_size_t', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLGetEnabledCiphers', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLGetNegotiatedCipher', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='SSLCipherSuite', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLGetNegotiatedCipher', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLGetNegotiatedProtocolVersion', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='SSLProtocol', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLGetNegotiatedProtocolVersion', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLCopyPeerTrust', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='SecTrustRef', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLCopyPeerTrust', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustSetAnchorCertificates', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SecTrustRef', ctx=Load()), Name(id='CFArrayRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustSetAnchorCertificates', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustSetAnchorCertificatesOnly', ctx=Load()), attr='argstypes', ctx=Store())], value=List(elts=[Name(id='SecTrustRef', ctx=Load()), Name(id='Boolean', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustSetAnchorCertificatesOnly', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustEvaluate', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SecTrustRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='SecTrustResultType', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustEvaluate', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustGetCertificateCount', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SecTrustRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustGetCertificateCount', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFIndex', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustGetCertificateAtIndex', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SecTrustRef', ctx=Load()), Name(id='CFIndex', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustGetCertificateAtIndex', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='SecCertificateRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLCreateContext', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFAllocatorRef', ctx=Load()), Name(id='SSLProtocolSide', ctx=Load()), Name(id='SSLConnectionType', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLCreateContext', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='SSLContextRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetSessionOption', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Name(id='SSLSessionOption', ctx=Load()), Name(id='Boolean', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetSessionOption', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetProtocolVersionMin', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Name(id='SSLProtocol', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetProtocolVersionMin', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetProtocolVersionMax', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Name(id='SSLProtocol', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetProtocolVersionMax', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Try(body=[Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetALPNProtocols', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='SSLContextRef', ctx=Load()), Name(id='CFArrayRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SSLSetALPNProtocols', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='OSStatus', ctx=Load()))], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[]), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecCopyErrorMessageString', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='OSStatus', ctx=Load()), Name(id='c_void_p', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='Security', ctx=Load()), attr='SecCopyErrorMessageString', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFStringRef', ctx=Load())), Assign(targets=[Attribute(value=Name(id='Security', ctx=Load()), attr='SSLReadFunc', ctx=Store())], value=Name(id='SSLReadFunc', ctx=Load())), Assign(targets=[Attribute(value=Name(id='Security', ctx=Load()), attr='SSLWriteFunc', ctx=Store())], value=Name(id='SSLWriteFunc', ctx=Load())), Assign(targets=[Attribute(value=Name(id='Security', ctx=Load()), attr='SSLContextRef', ctx=Store())], value=Name(id='SSLContextRef', ctx=Load())), Assign(targets=[Attribute(value=Name(id='Security', ctx=Load()), attr='SSLProtocol', ctx=Store())], value=Name(id='SSLProtocol', ctx=Load())), Assign(targets=[Attribute(value=Name(id='Security', ctx=Load()), attr='SSLCipherSuite', ctx=Store())], value=Name(id='SSLCipherSuite', ctx=Load())), Assign(targets=[Attribute(value=Name(id='Security', ctx=Load()), attr='SecIdentityRef', ctx=Store())], value=Name(id='SecIdentityRef', ctx=Load())), Assign(targets=[Attribute(value=Name(id='Security', ctx=Load()), attr='SecKeychainRef', ctx=Store())], value=Name(id='SecKeychainRef', ctx=Load())), Assign(targets=[Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustRef', ctx=Store())], value=Name(id='SecTrustRef', ctx=Load())), Assign(targets=[Attribute(value=Name(id='Security', ctx=Load()), attr='SecTrustResultType', ctx=Store())], value=Name(id='SecTrustResultType', ctx=Load())), Assign(targets=[Attribute(value=Name(id='Security', ctx=Load()), attr='SecExternalFormat', ctx=Store())], value=Name(id='SecExternalFormat', ctx=Load())), Assign(targets=[Attribute(value=Name(id='Security', ctx=Load()), attr='OSStatus', ctx=Store())], value=Name(id='OSStatus', ctx=Load())), Assign(targets=[Attribute(value=Name(id='Security', ctx=Load()), attr='kSecImportExportPassphrase', ctx=Store())], value=Call(func=Attribute(value=Name(id='CFStringRef', ctx=Load()), attr='in_dll', ctx=Load()), args=[Name(id='Security', ctx=Load()), Constant(value='kSecImportExportPassphrase')], keywords=[])), Assign(targets=[Attribute(value=Name(id='Security', ctx=Load()), attr='kSecImportItemIdentity', ctx=Store())], value=Call(func=Attribute(value=Name(id='CFStringRef', ctx=Load()), attr='in_dll', ctx=Load()), args=[Name(id='Security', ctx=Load()), Constant(value='kSecImportItemIdentity')], keywords=[])), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFRetain', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFTypeRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFRetain', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFTypeRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFRelease', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFTypeRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFRelease', ctx=Load()), attr='restype', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFGetTypeID', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFTypeRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFGetTypeID', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFTypeID', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFStringCreateWithCString', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFAllocatorRef', ctx=Load()), Name(id='c_char_p', ctx=Load()), Name(id='CFStringEncoding', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFStringCreateWithCString', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFStringRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFStringGetCStringPtr', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFStringRef', ctx=Load()), Name(id='CFStringEncoding', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFStringGetCStringPtr', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='c_char_p', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFStringGetCString', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFStringRef', ctx=Load()), Name(id='c_char_p', ctx=Load()), Name(id='CFIndex', ctx=Load()), Name(id='CFStringEncoding', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFStringGetCString', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='c_bool', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFDataCreate', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFAllocatorRef', ctx=Load()), Name(id='c_char_p', ctx=Load()), Name(id='CFIndex', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFDataCreate', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFDataRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFDataGetLength', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFDataRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFDataGetLength', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFIndex', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFDataGetBytePtr', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFDataRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFDataGetBytePtr', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFDictionaryCreate', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFAllocatorRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='CFTypeRef', ctx=Load())], keywords=[]), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='CFTypeRef', ctx=Load())], keywords=[]), Name(id='CFIndex', ctx=Load()), Name(id='CFDictionaryKeyCallBacks', ctx=Load()), Name(id='CFDictionaryValueCallBacks', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFDictionaryCreate', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFDictionaryRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFDictionaryGetValue', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFDictionaryRef', ctx=Load()), Name(id='CFTypeRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFDictionaryGetValue', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFTypeRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayCreate', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFAllocatorRef', ctx=Load()), Call(func=Name(id='POINTER', ctx=Load()), args=[Name(id='CFTypeRef', ctx=Load())], keywords=[]), Name(id='CFIndex', ctx=Load()), Name(id='CFArrayCallBacks', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayCreate', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFArrayRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayCreateMutable', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFAllocatorRef', ctx=Load()), Name(id='CFIndex', ctx=Load()), Name(id='CFArrayCallBacks', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayCreateMutable', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFMutableArrayRef', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayAppendValue', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFMutableArrayRef', ctx=Load()), Name(id='c_void_p', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayAppendValue', ctx=Load()), attr='restype', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayGetCount', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFArrayRef', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayGetCount', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='CFIndex', ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayGetValueAtIndex', ctx=Load()), attr='argtypes', ctx=Store())], value=List(elts=[Name(id='CFArrayRef', ctx=Load()), Name(id='CFIndex', ctx=Load())], ctx=Load())), Assign(targets=[Attribute(value=Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayGetValueAtIndex', ctx=Load()), attr='restype', ctx=Store())], value=Name(id='c_void_p', ctx=Load())), Assign(targets=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='kCFAllocatorDefault', ctx=Store())], value=Call(func=Attribute(value=Name(id='CFAllocatorRef', ctx=Load()), attr='in_dll', ctx=Load()), args=[Name(id='CoreFoundation', ctx=Load()), Constant(value='kCFAllocatorDefault')], keywords=[])), Assign(targets=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='kCFTypeArrayCallBacks', ctx=Store())], value=Call(func=Attribute(value=Name(id='c_void_p', ctx=Load()), attr='in_dll', ctx=Load()), args=[Name(id='CoreFoundation', ctx=Load()), Constant(value='kCFTypeArrayCallBacks')], keywords=[])), Assign(targets=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='kCFTypeDictionaryKeyCallBacks', ctx=Store())], value=Call(func=Attribute(value=Name(id='c_void_p', ctx=Load()), attr='in_dll', ctx=Load()), args=[Name(id='CoreFoundation', ctx=Load()), Constant(value='kCFTypeDictionaryKeyCallBacks')], keywords=[])), Assign(targets=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='kCFTypeDictionaryValueCallBacks', ctx=Store())], value=Call(func=Attribute(value=Name(id='c_void_p', ctx=Load()), attr='in_dll', ctx=Load()), args=[Name(id='CoreFoundation', ctx=Load()), Constant(value='kCFTypeDictionaryValueCallBacks')], keywords=[])), Assign(targets=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFTypeRef', ctx=Store())], value=Name(id='CFTypeRef', ctx=Load())), Assign(targets=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFArrayRef', ctx=Store())], value=Name(id='CFArrayRef', ctx=Load())), Assign(targets=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFStringRef', ctx=Store())], value=Name(id='CFStringRef', ctx=Load())), Assign(targets=[Attribute(value=Name(id='CoreFoundation', ctx=Load()), attr='CFDictionaryRef', ctx=Store())], value=Name(id='CFDictionaryRef', ctx=Load()))], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[Raise(exc=Call(func=Name(id='ImportError', ctx=Load()), args=[Constant(value='Error initializing ctypes')], keywords=[]))])], orelse=[], finalbody=[]), ClassDef(name='CFConst', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    A class object that acts as essentially a namespace for CoreFoundation\n    constants.\n    ')), Assign(targets=[Name(id='kCFStringEncodingUTF8', ctx=Store())], value=Call(func=Name(id='CFStringEncoding', ctx=Load()), args=[Constant(value=134217984)], keywords=[]))], decorator_list=[]), ClassDef(name='SecurityConst', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='\n    A class object that acts as essentially a namespace for Security constants.\n    ')), Assign(targets=[Name(id='kSSLSessionOptionBreakOnServerAuth', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='kSSLProtocol2', ctx=Store())], value=Constant(value=1)), Assign(targets=[Name(id='kSSLProtocol3', ctx=Store())], value=Constant(value=2)), Assign(targets=[Name(id='kTLSProtocol1', ctx=Store())], value=Constant(value=4)), Assign(targets=[Name(id='kTLSProtocol11', ctx=Store())], value=Constant(value=7)), Assign(targets=[Name(id='kTLSProtocol12', ctx=Store())], value=Constant(value=8)), Assign(targets=[Name(id='kTLSProtocol13', ctx=Store())], value=Constant(value=10)), Assign(targets=[Name(id='kTLSProtocolMaxSupported', ctx=Store())], value=Constant(value=999)), Assign(targets=[Name(id='kSSLClientSide', ctx=Store())], value=Constant(value=1)), Assign(targets=[Name(id='kSSLStreamType', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='kSecFormatPEMSequence', ctx=Store())], value=Constant(value=10)), Assign(targets=[Name(id='kSecTrustResultInvalid', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='kSecTrustResultProceed', ctx=Store())], value=Constant(value=1)), Assign(targets=[Name(id='kSecTrustResultDeny', ctx=Store())], value=Constant(value=3)), Assign(targets=[Name(id='kSecTrustResultUnspecified', ctx=Store())], value=Constant(value=4)), Assign(targets=[Name(id='kSecTrustResultRecoverableTrustFailure', ctx=Store())], value=Constant(value=5)), Assign(targets=[Name(id='kSecTrustResultFatalTrustFailure', ctx=Store())], value=Constant(value=6)), Assign(targets=[Name(id='kSecTrustResultOtherError', ctx=Store())], value=Constant(value=7)), Assign(targets=[Name(id='errSSLProtocol', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=9800))), Assign(targets=[Name(id='errSSLWouldBlock', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=9803))), Assign(targets=[Name(id='errSSLClosedGraceful', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=9805))), Assign(targets=[Name(id='errSSLClosedNoNotify', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=9816))), Assign(targets=[Name(id='errSSLClosedAbort', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=9806))), Assign(targets=[Name(id='errSSLXCertChainInvalid', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=9807))), Assign(targets=[Name(id='errSSLCrypto', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=9809))), Assign(targets=[Name(id='errSSLInternal', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=9810))), Assign(targets=[Name(id='errSSLCertExpired', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=9814))), Assign(targets=[Name(id='errSSLCertNotYetValid', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=9815))), Assign(targets=[Name(id='errSSLUnknownRootCert', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=9812))), Assign(targets=[Name(id='errSSLNoRootCert', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=9813))), Assign(targets=[Name(id='errSSLHostNameMismatch', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=9843))), Assign(targets=[Name(id='errSSLPeerHandshakeFail', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=9824))), Assign(targets=[Name(id='errSSLPeerUserCancelled', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=9839))), Assign(targets=[Name(id='errSSLWeakPeerEphemeralDHKey', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=9850))), Assign(targets=[Name(id='errSSLServerAuthCompleted', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=9841))), Assign(targets=[Name(id='errSSLRecordOverflow', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=9847))), Assign(targets=[Name(id='errSecVerifyFailed', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=67808))), Assign(targets=[Name(id='errSecNoTrustSettings', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=25263))), Assign(targets=[Name(id='errSecItemNotFound', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=25300))), Assign(targets=[Name(id='errSecInvalidTrustSettings', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=25262))), Assign(targets=[Name(id='TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384', ctx=Store())], value=Constant(value=49196)), Assign(targets=[Name(id='TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384', ctx=Store())], value=Constant(value=49200)), Assign(targets=[Name(id='TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256', ctx=Store())], value=Constant(value=49195)), Assign(targets=[Name(id='TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256', ctx=Store())], value=Constant(value=49199)), Assign(targets=[Name(id='TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256', ctx=Store())], value=Constant(value=52393)), Assign(targets=[Name(id='TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256', ctx=Store())], value=Constant(value=52392)), Assign(targets=[Name(id='TLS_DHE_RSA_WITH_AES_256_GCM_SHA384', ctx=Store())], value=Constant(value=159)), Assign(targets=[Name(id='TLS_DHE_RSA_WITH_AES_128_GCM_SHA256', ctx=Store())], value=Constant(value=158)), Assign(targets=[Name(id='TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384', ctx=Store())], value=Constant(value=49188)), Assign(targets=[Name(id='TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384', ctx=Store())], value=Constant(value=49192)), Assign(targets=[Name(id='TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA', ctx=Store())], value=Constant(value=49162)), Assign(targets=[Name(id='TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA', ctx=Store())], value=Constant(value=49172)), Assign(targets=[Name(id='TLS_DHE_RSA_WITH_AES_256_CBC_SHA256', ctx=Store())], value=Constant(value=107)), Assign(targets=[Name(id='TLS_DHE_RSA_WITH_AES_256_CBC_SHA', ctx=Store())], value=Constant(value=57)), Assign(targets=[Name(id='TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256', ctx=Store())], value=Constant(value=49187)), Assign(targets=[Name(id='TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256', ctx=Store())], value=Constant(value=49191)), Assign(targets=[Name(id='TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA', ctx=Store())], value=Constant(value=49161)), Assign(targets=[Name(id='TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA', ctx=Store())], value=Constant(value=49171)), Assign(targets=[Name(id='TLS_DHE_RSA_WITH_AES_128_CBC_SHA256', ctx=Store())], value=Constant(value=103)), Assign(targets=[Name(id='TLS_DHE_RSA_WITH_AES_128_CBC_SHA', ctx=Store())], value=Constant(value=51)), Assign(targets=[Name(id='TLS_RSA_WITH_AES_256_GCM_SHA384', ctx=Store())], value=Constant(value=157)), Assign(targets=[Name(id='TLS_RSA_WITH_AES_128_GCM_SHA256', ctx=Store())], value=Constant(value=156)), Assign(targets=[Name(id='TLS_RSA_WITH_AES_256_CBC_SHA256', ctx=Store())], value=Constant(value=61)), Assign(targets=[Name(id='TLS_RSA_WITH_AES_128_CBC_SHA256', ctx=Store())], value=Constant(value=60)), Assign(targets=[Name(id='TLS_RSA_WITH_AES_256_CBC_SHA', ctx=Store())], value=Constant(value=53)), Assign(targets=[Name(id='TLS_RSA_WITH_AES_128_CBC_SHA', ctx=Store())], value=Constant(value=47)), Assign(targets=[Name(id='TLS_AES_128_GCM_SHA256', ctx=Store())], value=Constant(value=4865)), Assign(targets=[Name(id='TLS_AES_256_GCM_SHA384', ctx=Store())], value=Constant(value=4866)), Assign(targets=[Name(id='TLS_AES_128_CCM_8_SHA256', ctx=Store())], value=Constant(value=4869)), Assign(targets=[Name(id='TLS_AES_128_CCM_SHA256', ctx=Store())], value=Constant(value=4868))], decorator_list=[])], type_ignores=[])