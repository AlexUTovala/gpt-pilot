Module(body=[Expr(value=Constant(value='Submit failure or test session information to a pastebin service.')), Import(names=[alias(name='tempfile')]), ImportFrom(module='io', names=[alias(name='StringIO')], level=0), ImportFrom(module='typing', names=[alias(name='IO')], level=0), ImportFrom(module='typing', names=[alias(name='Union')], level=0), Import(names=[alias(name='pytest')]), ImportFrom(module='_pytest.config', names=[alias(name='Config')], level=0), ImportFrom(module='_pytest.config', names=[alias(name='create_terminal_writer')], level=0), ImportFrom(module='_pytest.config.argparsing', names=[alias(name='Parser')], level=0), ImportFrom(module='_pytest.stash', names=[alias(name='StashKey')], level=0), ImportFrom(module='_pytest.terminal', names=[alias(name='TerminalReporter')], level=0), Assign(targets=[Name(id='pastebinfile_key', ctx=Store())], value=Call(func=Subscript(value=Name(id='StashKey', ctx=Load()), slice=Subscript(value=Name(id='IO', ctx=Load()), slice=Name(id='bytes', ctx=Load()), ctx=Load()), ctx=Load()), args=[], keywords=[])), FunctionDef(name='pytest_addoption', args=arguments(posonlyargs=[], args=[arg(arg='parser', annotation=Name(id='Parser', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='group', ctx=Store())], value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='getgroup', ctx=Load()), args=[Constant(value='terminal reporting')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='group', ctx=Load()), attr='_addoption', ctx=Load()), args=[Constant(value='--pastebin')], keywords=[keyword(arg='metavar', value=Constant(value='mode')), keyword(arg='action', value=Constant(value='store')), keyword(arg='dest', value=Constant(value='pastebin')), keyword(arg='default', value=Constant(value=None)), keyword(arg='choices', value=List(elts=[Constant(value='failed'), Constant(value='all')], ctx=Load())), keyword(arg='help', value=Constant(value='Send failed|all info to bpaste.net pastebin service'))]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='pytest_configure', args=arguments(posonlyargs=[], args=[arg(arg='config', annotation=Name(id='Config', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='option', ctx=Load()), attr='pastebin', ctx=Load()), ops=[Eq()], comparators=[Constant(value='all')]), body=[Assign(targets=[Name(id='tr', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='pluginmanager', ctx=Load()), attr='getplugin', ctx=Load()), args=[Constant(value='terminalreporter')], keywords=[])), If(test=Compare(left=Name(id='tr', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='config', ctx=Load()), attr='stash', ctx=Load()), slice=Name(id='pastebinfile_key', ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='TemporaryFile', ctx=Load()), args=[Constant(value='w+b')], keywords=[])), Assign(targets=[Name(id='oldwrite', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='tr', ctx=Load()), attr='_tw', ctx=Load()), attr='write', ctx=Load())), FunctionDef(name='tee_write', args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Call(func=Name(id='oldwrite', ctx=Load()), args=[Name(id='s', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='s', ctx=Load()), Name(id='str', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='s', ctx=Store())], value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='encode', ctx=Load()), args=[Constant(value='utf-8')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='config', ctx=Load()), attr='stash', ctx=Load()), slice=Name(id='pastebinfile_key', ctx=Load()), ctx=Load()), attr='write', ctx=Load()), args=[Name(id='s', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Attribute(value=Attribute(value=Name(id='tr', ctx=Load()), attr='_tw', ctx=Load()), attr='write', ctx=Store())], value=Name(id='tee_write', ctx=Load()))], orelse=[])], orelse=[])], decorator_list=[Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='hookimpl', ctx=Load()), args=[], keywords=[keyword(arg='trylast', value=Constant(value=True))])], returns=Constant(value=None)), FunctionDef(name='pytest_unconfigure', args=arguments(posonlyargs=[], args=[arg(arg='config', annotation=Name(id='Config', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='pastebinfile_key', ctx=Load()), ops=[In()], comparators=[Attribute(value=Name(id='config', ctx=Load()), attr='stash', ctx=Load())]), body=[Assign(targets=[Name(id='pastebinfile', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='config', ctx=Load()), attr='stash', ctx=Load()), slice=Name(id='pastebinfile_key', ctx=Load()), ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='pastebinfile', ctx=Load()), attr='seek', ctx=Load()), args=[Constant(value=0)], keywords=[])), Assign(targets=[Name(id='sessionlog', ctx=Store())], value=Call(func=Attribute(value=Name(id='pastebinfile', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='pastebinfile', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Delete(targets=[Subscript(value=Attribute(value=Name(id='config', ctx=Load()), attr='stash', ctx=Load()), slice=Name(id='pastebinfile_key', ctx=Load()), ctx=Del())]), Assign(targets=[Name(id='tr', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='pluginmanager', ctx=Load()), attr='getplugin', ctx=Load()), args=[Constant(value='terminalreporter')], keywords=[])), Delete(targets=[Subscript(value=Attribute(value=Attribute(value=Name(id='tr', ctx=Load()), attr='_tw', ctx=Load()), attr='__dict__', ctx=Load()), slice=Constant(value='write'), ctx=Del())]), Expr(value=Call(func=Attribute(value=Name(id='tr', ctx=Load()), attr='write_sep', ctx=Load()), args=[Constant(value='='), Constant(value='Sending information to Paste Service')], keywords=[])), Assign(targets=[Name(id='pastebinurl', ctx=Store())], value=Call(func=Name(id='create_new_paste', ctx=Load()), args=[Name(id='sessionlog', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='tr', ctx=Load()), attr='write_line', ctx=Load()), args=[BinOp(left=Constant(value='pastebin session-log: %s\n'), op=Mod(), right=Name(id='pastebinurl', ctx=Load()))], keywords=[]))], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='create_new_paste', args=arguments(posonlyargs=[], args=[arg(arg='contents', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='bytes', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Create a new paste using the bpaste.net service.\n\n    :contents: Paste contents string.\n    :returns: URL to the pasted contents, or an error message.\n    ')), Import(names=[alias(name='re')]), ImportFrom(module='urllib.request', names=[alias(name='urlopen')], level=0), ImportFrom(module='urllib.parse', names=[alias(name='urlencode')], level=0), Assign(targets=[Name(id='params', ctx=Store())], value=Dict(keys=[Constant(value='code'), Constant(value='lexer'), Constant(value='expiry')], values=[Name(id='contents', ctx=Load()), Constant(value='text'), Constant(value='1week')])), Assign(targets=[Name(id='url', ctx=Store())], value=Constant(value='https://bpa.st')), Try(body=[AnnAssign(target=Name(id='response', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='urlopen', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[keyword(arg='data', value=Call(func=Attribute(value=Call(func=Name(id='urlencode', ctx=Load()), args=[Name(id='params', ctx=Load())], keywords=[]), attr='encode', ctx=Load()), args=[Constant(value='ascii')], keywords=[]))]), attr='read', ctx=Load()), args=[], keywords=[]), attr='decode', ctx=Load()), args=[Constant(value='utf-8')], keywords=[]), simple=1)], handlers=[ExceptHandler(type=Name(id='OSError', ctx=Load()), name='exc_info', body=[Return(value=BinOp(left=Constant(value='bad response: %s'), op=Mod(), right=Name(id='exc_info', ctx=Load())))])], orelse=[], finalbody=[]), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='re', ctx=Load()), attr='search', ctx=Load()), args=[Constant(value='href="/raw/(\\w+)"'), Name(id='response', ctx=Load())], keywords=[])), If(test=Name(id='m', ctx=Load()), body=[Return(value=JoinedStr(values=[FormattedValue(value=Name(id='url', ctx=Load()), conversion=-1), Constant(value='/show/'), FormattedValue(value=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='group', ctx=Load()), args=[Constant(value=1)], keywords=[]), conversion=-1)]))], orelse=[Return(value=BinOp(left=BinOp(left=Constant(value="bad response: invalid format ('"), op=Add(), right=Name(id='response', ctx=Load())), op=Add(), right=Constant(value="')")))])], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='pytest_terminal_summary', args=arguments(posonlyargs=[], args=[arg(arg='terminalreporter', annotation=Name(id='TerminalReporter', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='terminalreporter', ctx=Load()), attr='config', ctx=Load()), attr='option', ctx=Load()), attr='pastebin', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='failed')]), body=[Return()], orelse=[]), If(test=Compare(left=Constant(value='failed'), ops=[In()], comparators=[Attribute(value=Name(id='terminalreporter', ctx=Load()), attr='stats', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='terminalreporter', ctx=Load()), attr='write_sep', ctx=Load()), args=[Constant(value='='), Constant(value='Sending information to Paste Service')], keywords=[])), For(target=Name(id='rep', ctx=Store()), iter=Subscript(value=Attribute(value=Name(id='terminalreporter', ctx=Load()), attr='stats', ctx=Load()), slice=Constant(value='failed'), ctx=Load()), body=[Try(body=[Assign(targets=[Name(id='msg', ctx=Store())], value=Attribute(value=Subscript(value=Attribute(value=Attribute(value=Attribute(value=Name(id='rep', ctx=Load()), attr='longrepr', ctx=Load()), attr='reprtraceback', ctx=Load()), attr='reprentries', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), attr='reprfileloc', ctx=Load()))], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[Assign(targets=[Name(id='msg', ctx=Store())], value=Call(func=Attribute(value=Name(id='terminalreporter', ctx=Load()), attr='_getfailureheadline', ctx=Load()), args=[Name(id='rep', ctx=Load())], keywords=[]))])], orelse=[], finalbody=[]), Assign(targets=[Name(id='file', ctx=Store())], value=Call(func=Name(id='StringIO', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='tw', ctx=Store())], value=Call(func=Name(id='create_terminal_writer', ctx=Load()), args=[Attribute(value=Name(id='terminalreporter', ctx=Load()), attr='config', ctx=Load()), Name(id='file', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='rep', ctx=Load()), attr='toterminal', ctx=Load()), args=[Name(id='tw', ctx=Load())], keywords=[])), Assign(targets=[Name(id='s', ctx=Store())], value=Call(func=Attribute(value=Name(id='file', ctx=Load()), attr='getvalue', ctx=Load()), args=[], keywords=[])), Assert(test=Call(func=Name(id='len', ctx=Load()), args=[Name(id='s', ctx=Load())], keywords=[])), Assign(targets=[Name(id='pastebinurl', ctx=Store())], value=Call(func=Name(id='create_new_paste', ctx=Load()), args=[Name(id='s', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='terminalreporter', ctx=Load()), attr='write_line', ctx=Load()), args=[JoinedStr(values=[FormattedValue(value=Name(id='msg', ctx=Load()), conversion=-1), Constant(value=' --> '), FormattedValue(value=Name(id='pastebinurl', ctx=Load()), conversion=-1)])], keywords=[]))], orelse=[])], orelse=[])], decorator_list=[], returns=Constant(value=None))], type_ignores=[])