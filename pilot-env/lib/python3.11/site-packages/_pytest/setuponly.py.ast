Module(body=[ImportFrom(module='typing', names=[alias(name='Generator')], level=0), ImportFrom(module='typing', names=[alias(name='Optional')], level=0), ImportFrom(module='typing', names=[alias(name='Union')], level=0), Import(names=[alias(name='pytest')]), ImportFrom(module='_pytest._io.saferepr', names=[alias(name='saferepr')], level=0), ImportFrom(module='_pytest.config', names=[alias(name='Config')], level=0), ImportFrom(module='_pytest.config', names=[alias(name='ExitCode')], level=0), ImportFrom(module='_pytest.config.argparsing', names=[alias(name='Parser')], level=0), ImportFrom(module='_pytest.fixtures', names=[alias(name='FixtureDef')], level=0), ImportFrom(module='_pytest.fixtures', names=[alias(name='SubRequest')], level=0), ImportFrom(module='_pytest.scope', names=[alias(name='Scope')], level=0), FunctionDef(name='pytest_addoption', args=arguments(posonlyargs=[], args=[arg(arg='parser', annotation=Name(id='Parser', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='group', ctx=Store())], value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='getgroup', ctx=Load()), args=[Constant(value='debugconfig')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='group', ctx=Load()), attr='addoption', ctx=Load()), args=[Constant(value='--setuponly'), Constant(value='--setup-only')], keywords=[keyword(arg='action', value=Constant(value='store_true')), keyword(arg='help', value=Constant(value='Only setup fixtures, do not execute tests'))])), Expr(value=Call(func=Attribute(value=Name(id='group', ctx=Load()), attr='addoption', ctx=Load()), args=[Constant(value='--setupshow'), Constant(value='--setup-show')], keywords=[keyword(arg='action', value=Constant(value='store_true')), keyword(arg='help', value=Constant(value='Show setup of fixtures while executing tests'))]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='pytest_fixture_setup', args=arguments(posonlyargs=[], args=[arg(arg='fixturedef', annotation=Subscript(value=Name(id='FixtureDef', ctx=Load()), slice=Name(id='object', ctx=Load()), ctx=Load())), arg(arg='request', annotation=Name(id='SubRequest', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Yield()), If(test=Attribute(value=Attribute(value=Attribute(value=Name(id='request', ctx=Load()), attr='config', ctx=Load()), attr='option', ctx=Load()), attr='setupshow', ctx=Load()), body=[If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='request', ctx=Load()), Constant(value='param')], keywords=[]), body=[If(test=Attribute(value=Name(id='fixturedef', ctx=Load()), attr='ids', ctx=Load()), body=[If(test=Call(func=Name(id='callable', ctx=Load()), args=[Attribute(value=Name(id='fixturedef', ctx=Load()), attr='ids', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='param', ctx=Store())], value=Call(func=Attribute(value=Name(id='fixturedef', ctx=Load()), attr='ids', ctx=Load()), args=[Attribute(value=Name(id='request', ctx=Load()), attr='param', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='param', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='fixturedef', ctx=Load()), attr='ids', ctx=Load()), slice=Attribute(value=Name(id='request', ctx=Load()), attr='param_index', ctx=Load()), ctx=Load()))])], orelse=[Assign(targets=[Name(id='param', ctx=Store())], value=Attribute(value=Name(id='request', ctx=Load()), attr='param', ctx=Load()))]), Assign(targets=[Attribute(value=Name(id='fixturedef', ctx=Load()), attr='cached_param', ctx=Store())], value=Name(id='param', ctx=Load()))], orelse=[]), Expr(value=Call(func=Name(id='_show_fixture_action', ctx=Load()), args=[Name(id='fixturedef', ctx=Load()), Constant(value='SETUP')], keywords=[]))], orelse=[])], decorator_list=[Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='hookimpl', ctx=Load()), args=[], keywords=[keyword(arg='hookwrapper', value=Constant(value=True))])], returns=Subscript(value=Name(id='Generator', ctx=Load()), slice=Tuple(elts=[Constant(value=None), Constant(value=None), Constant(value=None)], ctx=Load()), ctx=Load())), FunctionDef(name='pytest_fixture_post_finalizer', args=arguments(posonlyargs=[], args=[arg(arg='fixturedef', annotation=Subscript(value=Name(id='FixtureDef', ctx=Load()), slice=Name(id='object', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='fixturedef', ctx=Load()), attr='cached_result', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='config', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='fixturedef', ctx=Load()), attr='_fixturemanager', ctx=Load()), attr='config', ctx=Load())), If(test=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='option', ctx=Load()), attr='setupshow', ctx=Load()), body=[Expr(value=Call(func=Name(id='_show_fixture_action', ctx=Load()), args=[Name(id='fixturedef', ctx=Load()), Constant(value='TEARDOWN')], keywords=[])), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='fixturedef', ctx=Load()), Constant(value='cached_param')], keywords=[]), body=[Delete(targets=[Attribute(value=Name(id='fixturedef', ctx=Load()), attr='cached_param', ctx=Del())])], orelse=[])], orelse=[])], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='_show_fixture_action', args=arguments(posonlyargs=[], args=[arg(arg='fixturedef', annotation=Subscript(value=Name(id='FixtureDef', ctx=Load()), slice=Name(id='object', ctx=Load()), ctx=Load())), arg(arg='msg', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='config', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='fixturedef', ctx=Load()), attr='_fixturemanager', ctx=Load()), attr='config', ctx=Load())), Assign(targets=[Name(id='capman', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='pluginmanager', ctx=Load()), attr='getplugin', ctx=Load()), args=[Constant(value='capturemanager')], keywords=[])), If(test=Name(id='capman', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='capman', ctx=Load()), attr='suspend_global_capture', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='tw', ctx=Store())], value=Call(func=Attribute(value=Name(id='config', ctx=Load()), attr='get_terminal_writer', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='tw', ctx=Load()), attr='line', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='scope_indent', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='reversed', ctx=Load()), args=[Name(id='Scope', ctx=Load())], keywords=[])], keywords=[]), attr='index', ctx=Load()), args=[Attribute(value=Name(id='fixturedef', ctx=Load()), attr='_scope', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='tw', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=BinOp(left=Constant(value=' '), op=Mult(), right=Constant(value=2)), op=Mult(), right=Name(id='scope_indent', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='tw', ctx=Load()), attr='write', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='{step} {scope} {fixture}'), attr='format', ctx=Load()), args=[], keywords=[keyword(arg='step', value=Call(func=Attribute(value=Name(id='msg', ctx=Load()), attr='ljust', ctx=Load()), args=[Constant(value=8)], keywords=[])), keyword(arg='scope', value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='fixturedef', ctx=Load()), attr='scope', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='upper', ctx=Load()), args=[], keywords=[])), keyword(arg='fixture', value=Attribute(value=Name(id='fixturedef', ctx=Load()), attr='argname', ctx=Load()))])], keywords=[])), If(test=Compare(left=Name(id='msg', ctx=Load()), ops=[Eq()], comparators=[Constant(value='SETUP')]), body=[Assign(targets=[Name(id='deps', ctx=Store())], value=Call(func=Name(id='sorted', ctx=Load()), args=[GeneratorExp(elt=Name(id='arg', ctx=Load()), generators=[comprehension(target=Name(id='arg', ctx=Store()), iter=Attribute(value=Name(id='fixturedef', ctx=Load()), attr='argnames', ctx=Load()), ifs=[Compare(left=Name(id='arg', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='request')])], is_async=0)])], keywords=[])), If(test=Name(id='deps', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='tw', ctx=Load()), attr='write', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=' (fixtures used: {})'), attr='format', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[Name(id='deps', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[])], orelse=[]), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='fixturedef', ctx=Load()), Constant(value='cached_param')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='tw', ctx=Load()), attr='write', ctx=Load()), args=[JoinedStr(values=[Constant(value='['), FormattedValue(value=Call(func=Name(id='saferepr', ctx=Load()), args=[Attribute(value=Name(id='fixturedef', ctx=Load()), attr='cached_param', ctx=Load())], keywords=[keyword(arg='maxsize', value=Constant(value=42))]), conversion=-1), Constant(value=']')])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='tw', ctx=Load()), attr='flush', ctx=Load()), args=[], keywords=[])), If(test=Name(id='capman', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='capman', ctx=Load()), attr='resume_global_capture', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='pytest_cmdline_main', args=arguments(posonlyargs=[], args=[arg(arg='config', annotation=Name(id='Config', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='option', ctx=Load()), attr='setuponly', ctx=Load()), body=[Assign(targets=[Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='option', ctx=Load()), attr='setupshow', ctx=Store())], value=Constant(value=True))], orelse=[]), Return(value=Constant(value=None))], decorator_list=[Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='hookimpl', ctx=Load()), args=[], keywords=[keyword(arg='tryfirst', value=Constant(value=True))])], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='int', ctx=Load()), Name(id='ExitCode', ctx=Load())], ctx=Load()), ctx=Load()), ctx=Load()))], type_ignores=[])