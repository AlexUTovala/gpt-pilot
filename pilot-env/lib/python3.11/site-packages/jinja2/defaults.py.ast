Module(body=[Import(names=[alias(name='typing', asname='t')]), ImportFrom(module='filters', names=[alias(name='FILTERS', asname='DEFAULT_FILTERS')], level=1), ImportFrom(module='tests', names=[alias(name='TESTS', asname='DEFAULT_TESTS')], level=1), ImportFrom(module='utils', names=[alias(name='Cycler')], level=1), ImportFrom(module='utils', names=[alias(name='generate_lorem_ipsum')], level=1), ImportFrom(module='utils', names=[alias(name='Joiner')], level=1), ImportFrom(module='utils', names=[alias(name='Namespace')], level=1), If(test=Attribute(value=Name(id='t', ctx=Load()), attr='TYPE_CHECKING', ctx=Load()), body=[Import(names=[alias(name='typing_extensions', asname='te')])], orelse=[]), Assign(targets=[Name(id='BLOCK_START_STRING', ctx=Store())], value=Constant(value='{%')), Assign(targets=[Name(id='BLOCK_END_STRING', ctx=Store())], value=Constant(value='%}')), Assign(targets=[Name(id='VARIABLE_START_STRING', ctx=Store())], value=Constant(value='{{')), Assign(targets=[Name(id='VARIABLE_END_STRING', ctx=Store())], value=Constant(value='}}')), Assign(targets=[Name(id='COMMENT_START_STRING', ctx=Store())], value=Constant(value='{#')), Assign(targets=[Name(id='COMMENT_END_STRING', ctx=Store())], value=Constant(value='#}')), AnnAssign(target=Name(id='LINE_STATEMENT_PREFIX', ctx=Store()), annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), value=Constant(value=None), simple=1), AnnAssign(target=Name(id='LINE_COMMENT_PREFIX', ctx=Store()), annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), value=Constant(value=None), simple=1), Assign(targets=[Name(id='TRIM_BLOCKS', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='LSTRIP_BLOCKS', ctx=Store())], value=Constant(value=False)), AnnAssign(target=Name(id='NEWLINE_SEQUENCE', ctx=Store()), annotation=Constant(value="te.Literal['\\n', '\\r\\n', '\\r']"), value=Constant(value='\n'), simple=1), Assign(targets=[Name(id='KEEP_TRAILING_NEWLINE', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='DEFAULT_NAMESPACE', ctx=Store())], value=Dict(keys=[Constant(value='range'), Constant(value='dict'), Constant(value='lipsum'), Constant(value='cycler'), Constant(value='joiner'), Constant(value='namespace')], values=[Name(id='range', ctx=Load()), Name(id='dict', ctx=Load()), Name(id='generate_lorem_ipsum', ctx=Load()), Name(id='Cycler', ctx=Load()), Name(id='Joiner', ctx=Load()), Name(id='Namespace', ctx=Load())])), AnnAssign(target=Name(id='DEFAULT_POLICIES', ctx=Store()), annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Attribute(value=Name(id='t', ctx=Load()), attr='Any', ctx=Load())], ctx=Load()), ctx=Load()), value=Dict(keys=[Constant(value='compiler.ascii_str'), Constant(value='urlize.rel'), Constant(value='urlize.target'), Constant(value='urlize.extra_schemes'), Constant(value='truncate.leeway'), Constant(value='json.dumps_function'), Constant(value='json.dumps_kwargs'), Constant(value='ext.i18n.trimmed')], values=[Constant(value=True), Constant(value='noopener'), Constant(value=None), Constant(value=None), Constant(value=5), Constant(value=None), Dict(keys=[Constant(value='sort_keys')], values=[Constant(value=True)]), Constant(value=False)]), simple=1)], type_ignores=[])