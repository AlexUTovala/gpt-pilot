Module(body=[Import(names=[alias(name='inspect')]), Import(names=[alias(name='typing', asname='t')]), ImportFrom(module='functools', names=[alias(name='WRAPPER_ASSIGNMENTS')], level=0), ImportFrom(module='functools', names=[alias(name='wraps')], level=0), ImportFrom(module='utils', names=[alias(name='_PassArg')], level=1), ImportFrom(module='utils', names=[alias(name='pass_eval_context')], level=1), Assign(targets=[Name(id='V', ctx=Store())], value=Call(func=Attribute(value=Name(id='t', ctx=Load()), attr='TypeVar', ctx=Load()), args=[Constant(value='V')], keywords=[])), FunctionDef(name='async_variant', args=arguments(posonlyargs=[], args=[arg(arg='normal_func')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='decorator', args=arguments(posonlyargs=[], args=[arg(arg='async_func')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='pass_arg', ctx=Store())], value=Call(func=Attribute(value=Name(id='_PassArg', ctx=Load()), attr='from_obj', ctx=Load()), args=[Name(id='normal_func', ctx=Load())], keywords=[])), Assign(targets=[Name(id='need_eval_context', ctx=Store())], value=Compare(left=Name(id='pass_arg', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])), If(test=Compare(left=Name(id='pass_arg', ctx=Load()), ops=[Is()], comparators=[Attribute(value=Name(id='_PassArg', ctx=Load()), attr='environment', ctx=Load())]), body=[FunctionDef(name='is_async', args=arguments(posonlyargs=[], args=[arg(arg='args', annotation=Attribute(value=Name(id='t', ctx=Load()), attr='Any', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='t', ctx=Load()), attr='cast', ctx=Load()), args=[Name(id='bool', ctx=Load()), Attribute(value=Subscript(value=Name(id='args', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='is_async', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='bool', ctx=Load()))], orelse=[FunctionDef(name='is_async', args=arguments(posonlyargs=[], args=[arg(arg='args', annotation=Attribute(value=Name(id='t', ctx=Load()), attr='Any', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='t', ctx=Load()), attr='cast', ctx=Load()), args=[Name(id='bool', ctx=Load()), Attribute(value=Attribute(value=Subscript(value=Name(id='args', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='environment', ctx=Load()), attr='is_async', ctx=Load())], keywords=[]))], decorator_list=[], returns=Name(id='bool', ctx=Load()))]), Assign(targets=[Name(id='async_func_attrs', ctx=Store())], value=Tuple(elts=[Constant(value='__module__'), Constant(value='__name__'), Constant(value='__qualname__')], ctx=Load())), Assign(targets=[Name(id='normal_func_attrs', ctx=Store())], value=Call(func=Name(id='tuple', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Name(id='set', ctx=Load()), args=[Name(id='WRAPPER_ASSIGNMENTS', ctx=Load())], keywords=[]), attr='difference', ctx=Load()), args=[Name(id='async_func_attrs', ctx=Load())], keywords=[])], keywords=[])), FunctionDef(name='wrapper', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Name(id='b', ctx=Store())], value=Call(func=Name(id='is_async', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[])), If(test=Name(id='need_eval_context', ctx=Load()), body=[Assign(targets=[Name(id='args', ctx=Store())], value=Subscript(value=Name(id='args', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load()))], orelse=[]), If(test=Name(id='b', ctx=Load()), body=[Return(value=Call(func=Name(id='async_func', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], orelse=[]), Return(value=Call(func=Name(id='normal_func', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[Call(func=Name(id='wraps', ctx=Load()), args=[Name(id='normal_func', ctx=Load())], keywords=[keyword(arg='assigned', value=Name(id='normal_func_attrs', ctx=Load()))]), Call(func=Name(id='wraps', ctx=Load()), args=[Name(id='async_func', ctx=Load())], keywords=[keyword(arg='assigned', value=Name(id='async_func_attrs', ctx=Load())), keyword(arg='updated', value=Tuple(elts=[], ctx=Load()))])]), If(test=Name(id='need_eval_context', ctx=Load()), body=[Assign(targets=[Name(id='wrapper', ctx=Store())], value=Call(func=Name(id='pass_eval_context', ctx=Load()), args=[Name(id='wrapper', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='wrapper', ctx=Load()), attr='jinja_async_variant', ctx=Store())], value=Constant(value=True)), Return(value=Name(id='wrapper', ctx=Load()))], decorator_list=[]), Return(value=Name(id='decorator', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='_common_primitives', ctx=Store())], value=Set(elts=[Name(id='int', ctx=Load()), Name(id='float', ctx=Load()), Name(id='bool', ctx=Load()), Name(id='str', ctx=Load()), Name(id='list', ctx=Load()), Name(id='dict', ctx=Load()), Name(id='tuple', ctx=Load()), Call(func=Name(id='type', ctx=Load()), args=[Constant(value=None)], keywords=[])])), AsyncFunctionDef(name='auto_await', args=arguments(posonlyargs=[], args=[arg(arg='value', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Union', ctx=Load()), slice=Tuple(elts=[Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Awaitable', ctx=Load()), slice=Constant(value='V'), ctx=Load()), Constant(value='V')], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Call(func=Name(id='type', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), ops=[In()], comparators=[Name(id='_common_primitives', ctx=Load())]), body=[Return(value=Call(func=Attribute(value=Name(id='t', ctx=Load()), attr='cast', ctx=Load()), args=[Constant(value='V'), Name(id='value', ctx=Load())], keywords=[]))], orelse=[]), If(test=Call(func=Attribute(value=Name(id='inspect', ctx=Load()), attr='isawaitable', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), body=[Return(value=Await(value=Call(func=Attribute(value=Name(id='t', ctx=Load()), attr='cast', ctx=Load()), args=[Constant(value='t.Awaitable[V]'), Name(id='value', ctx=Load())], keywords=[])))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='t', ctx=Load()), attr='cast', ctx=Load()), args=[Constant(value='V'), Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value='V')), AsyncFunctionDef(name='auto_aiter', args=arguments(posonlyargs=[], args=[arg(arg='iterable', annotation=Constant(value='t.Union[t.AsyncIterable[V], t.Iterable[V]]'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='iterable', ctx=Load()), Constant(value='__aiter__')], keywords=[]), body=[AsyncFor(target=Name(id='item', ctx=Store()), iter=Call(func=Attribute(value=Name(id='t', ctx=Load()), attr='cast', ctx=Load()), args=[Constant(value='t.AsyncIterable[V]'), Name(id='iterable', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Name(id='item', ctx=Load())))], orelse=[])], orelse=[For(target=Name(id='item', ctx=Store()), iter=Call(func=Attribute(value=Name(id='t', ctx=Load()), attr='cast', ctx=Load()), args=[Constant(value='t.Iterable[V]'), Name(id='iterable', ctx=Load())], keywords=[]), body=[Expr(value=Yield(value=Name(id='item', ctx=Load())))], orelse=[])])], decorator_list=[], returns=Constant(value='t.AsyncIterator[V]')), AsyncFunctionDef(name='auto_to_list', args=arguments(posonlyargs=[], args=[arg(arg='value', annotation=Constant(value='t.Union[t.AsyncIterable[V], t.Iterable[V]]'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=ListComp(elt=Name(id='x', ctx=Load()), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Call(func=Name(id='auto_aiter', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), ifs=[], is_async=1)]))], decorator_list=[], returns=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='List', ctx=Load()), slice=Constant(value='V'), ctx=Load()))], type_ignores=[])