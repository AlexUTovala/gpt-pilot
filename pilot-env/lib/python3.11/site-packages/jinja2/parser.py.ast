Module(body=[Expr(value=Constant(value='Parse tokens from the lexer into nodes for the compiler.')), Import(names=[alias(name='typing')]), Import(names=[alias(name='typing', asname='t')]), ImportFrom(names=[alias(name='nodes')], level=1), ImportFrom(module='exceptions', names=[alias(name='TemplateAssertionError')], level=1), ImportFrom(module='exceptions', names=[alias(name='TemplateSyntaxError')], level=1), ImportFrom(module='lexer', names=[alias(name='describe_token')], level=1), ImportFrom(module='lexer', names=[alias(name='describe_token_expr')], level=1), If(test=Attribute(value=Name(id='t', ctx=Load()), attr='TYPE_CHECKING', ctx=Load()), body=[Import(names=[alias(name='typing_extensions', asname='te')]), ImportFrom(module='environment', names=[alias(name='Environment')], level=1)], orelse=[]), Assign(targets=[Name(id='_ImportInclude', ctx=Store())], value=Call(func=Attribute(value=Name(id='t', ctx=Load()), attr='TypeVar', ctx=Load()), args=[Constant(value='_ImportInclude'), Attribute(value=Name(id='nodes', ctx=Load()), attr='Import', ctx=Load()), Attribute(value=Name(id='nodes', ctx=Load()), attr='Include', ctx=Load())], keywords=[])), Assign(targets=[Name(id='_MacroCall', ctx=Store())], value=Call(func=Attribute(value=Name(id='t', ctx=Load()), attr='TypeVar', ctx=Load()), args=[Constant(value='_MacroCall'), Attribute(value=Name(id='nodes', ctx=Load()), attr='Macro', ctx=Load()), Attribute(value=Name(id='nodes', ctx=Load()), attr='CallBlock', ctx=Load())], keywords=[])), Assign(targets=[Name(id='_statement_keywords', ctx=Store())], value=Call(func=Name(id='frozenset', ctx=Load()), args=[List(elts=[Constant(value='for'), Constant(value='if'), Constant(value='block'), Constant(value='extends'), Constant(value='print'), Constant(value='macro'), Constant(value='include'), Constant(value='from'), Constant(value='import'), Constant(value='set'), Constant(value='with'), Constant(value='autoescape')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='_compare_operators', ctx=Store())], value=Call(func=Name(id='frozenset', ctx=Load()), args=[List(elts=[Constant(value='eq'), Constant(value='ne'), Constant(value='lt'), Constant(value='lteq'), Constant(value='gt'), Constant(value='gteq')], ctx=Load())], keywords=[])), AnnAssign(target=Name(id='_math_nodes', ctx=Store()), annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Type', ctx=Load()), slice=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()), value=Dict(keys=[Constant(value='add'), Constant(value='sub'), Constant(value='mul'), Constant(value='div'), Constant(value='floordiv'), Constant(value='mod')], values=[Attribute(value=Name(id='nodes', ctx=Load()), attr='Add', ctx=Load()), Attribute(value=Name(id='nodes', ctx=Load()), attr='Sub', ctx=Load()), Attribute(value=Name(id='nodes', ctx=Load()), attr='Mul', ctx=Load()), Attribute(value=Name(id='nodes', ctx=Load()), attr='Div', ctx=Load()), Attribute(value=Name(id='nodes', ctx=Load()), attr='FloorDiv', ctx=Load()), Attribute(value=Name(id='nodes', ctx=Load()), attr='Mod', ctx=Load())]), simple=1), ClassDef(name='Parser', bases=[], keywords=[], body=[Expr(value=Constant(value="This is the central parsing class Jinja uses.  It's passed to\n    extensions and can be used to parse expressions or statements.\n    ")), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='environment', annotation=Constant(value='Environment')), arg(arg='source', annotation=Name(id='str', ctx=Load())), arg(arg='name', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='filename', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='state', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None), Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='environment', ctx=Store())], value=Name(id='environment', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Store())], value=Call(func=Attribute(value=Name(id='environment', ctx=Load()), attr='_tokenize', ctx=Load()), args=[Name(id='source', ctx=Load()), Name(id='name', ctx=Load()), Name(id='filename', ctx=Load()), Name(id='state', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store())], value=Name(id='name', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Store())], value=Name(id='filename', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='closed', ctx=Store())], value=Constant(value=False)), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='extensions', ctx=Store()), annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Callable', ctx=Load()), slice=Tuple(elts=[List(elts=[Constant(value='Parser')], ctx=Load()), Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Union', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='nodes', ctx=Load()), attr='Node', ctx=Load()), Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='List', ctx=Load()), slice=Attribute(value=Name(id='nodes', ctx=Load()), attr='Node', ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()), value=Dict(keys=[], values=[]), simple=0), For(target=Name(id='extension', ctx=Store()), iter=Call(func=Attribute(value=Name(id='environment', ctx=Load()), attr='iter_extensions', ctx=Load()), args=[], keywords=[]), body=[For(target=Name(id='tag', ctx=Store()), iter=Attribute(value=Name(id='extension', ctx=Load()), attr='tags', ctx=Load()), body=[Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='extensions', ctx=Load()), slice=Name(id='tag', ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='extension', ctx=Load()), attr='parse', ctx=Load()))], orelse=[])], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_last_identifier', ctx=Store())], value=Constant(value=0)), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_tag_stack', ctx=Store()), annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), value=List(elts=[], ctx=Load()), simple=0), AnnAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_end_token_stack', ctx=Store()), annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='List', ctx=Load()), slice=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load()), ctx=Load()), value=List(elts=[], ctx=Load()), simple=0)], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='fail', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='msg', annotation=Name(id='str', ctx=Load())), arg(arg='lineno', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Name(id='int', ctx=Load()), ctx=Load())), arg(arg='exc', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Type', ctx=Load()), slice=Name(id='TemplateSyntaxError', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Name(id='TemplateSyntaxError', ctx=Load())]), body=[Expr(value=Constant(value='Convenience method that raises `exc` with the message, passed\n        line number or last line number as well as the current name and\n        filename.\n        ')), If(test=Compare(left=Name(id='lineno', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load()))], orelse=[]), Raise(exc=Call(func=Name(id='exc', ctx=Load()), args=[Name(id='msg', ctx=Load()), Name(id='lineno', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='filename', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value='te.NoReturn')), FunctionDef(name='_fail_ut_eof', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='end_token_stack', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='List', ctx=Load()), slice=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load()), ctx=Load())), arg(arg='lineno', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Name(id='int', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[AnnAssign(target=Name(id='expected', ctx=Store()), annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Set', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[]), simple=1), For(target=Name(id='exprs', ctx=Store()), iter=Name(id='end_token_stack', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='expected', ctx=Load()), attr='update', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Name(id='describe_token_expr', ctx=Load()), Name(id='exprs', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), If(test=Name(id='end_token_stack', ctx=Load()), body=[AnnAssign(target=Name(id='currently_looking', ctx=Store()), annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), value=Call(func=Attribute(value=Constant(value=' or '), attr='join', ctx=Load()), args=[Call(func=Name(id='map', ctx=Load()), args=[Name(id='repr', ctx=Load()), Call(func=Name(id='map', ctx=Load()), args=[Name(id='describe_token_expr', ctx=Load()), Subscript(value=Name(id='end_token_stack', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())], keywords=[])], keywords=[])], keywords=[]), simple=1)], orelse=[Assign(targets=[Name(id='currently_looking', ctx=Store())], value=Constant(value=None))]), If(test=Compare(left=Name(id='name', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='message', ctx=Store())], value=List(elts=[Constant(value='Unexpected end of template.')], ctx=Load()))], orelse=[Assign(targets=[Name(id='message', ctx=Store())], value=List(elts=[JoinedStr(values=[Constant(value='Encountered unknown tag '), FormattedValue(value=Name(id='name', ctx=Load()), conversion=114), Constant(value='.')])], ctx=Load()))]), If(test=Name(id='currently_looking', ctx=Load()), body=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='name', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Name(id='name', ctx=Load()), ops=[In()], comparators=[Name(id='expected', ctx=Load())])]), body=[Expr(value=Call(func=Attribute(value=Name(id='message', ctx=Load()), attr='append', ctx=Load()), args=[JoinedStr(values=[Constant(value='You probably made a nesting mistake. Jinja is expecting this tag, but currently looking for '), FormattedValue(value=Name(id='currently_looking', ctx=Load()), conversion=-1), Constant(value='.')])], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='message', ctx=Load()), attr='append', ctx=Load()), args=[JoinedStr(values=[Constant(value='Jinja was looking for the following tags: '), FormattedValue(value=Name(id='currently_looking', ctx=Load()), conversion=-1), Constant(value='.')])], keywords=[]))])], orelse=[]), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_tag_stack', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='message', ctx=Load()), attr='append', ctx=Load()), args=[JoinedStr(values=[Constant(value='The innermost block that needs to be closed is '), FormattedValue(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_tag_stack', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), conversion=114), Constant(value='.')])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=' '), attr='join', ctx=Load()), args=[Name(id='message', ctx=Load())], keywords=[]), Name(id='lineno', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value='te.NoReturn')), FunctionDef(name='fail_unknown_tag', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='name', annotation=Name(id='str', ctx=Load())), arg(arg='lineno', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Name(id='int', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='Called if the parser encounters an unknown tag.  Tries to fail\n        with a human readable error message that could help to identify\n        the problem.\n        ')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_fail_ut_eof', ctx=Load()), args=[Name(id='name', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_end_token_stack', ctx=Load()), Name(id='lineno', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value='te.NoReturn')), FunctionDef(name='fail_eof', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='end_tokens', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load()), ctx=Load())), arg(arg='lineno', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Name(id='int', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[Expr(value=Constant(value='Like fail_unknown_tag but for end of template situations.')), Assign(targets=[Name(id='stack', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_end_token_stack', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='end_tokens', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='stack', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='end_tokens', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_fail_ut_eof', ctx=Load()), args=[Constant(value=None), Name(id='stack', ctx=Load()), Name(id='lineno', ctx=Load())], keywords=[]))], decorator_list=[], returns=Constant(value='te.NoReturn')), FunctionDef(name='is_tuple_end', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='extra_end_rules', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='Are we at the end of a tuple?')), If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='variable_end'), Constant(value='block_end'), Constant(value='rparen')], ctx=Load())]), body=[Return(value=Constant(value=True))], orelse=[If(test=Compare(left=Name(id='extra_end_rules', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='test_any', ctx=Load()), args=[Name(id='extra_end_rules', ctx=Load())], keywords=[]))], orelse=[])]), Return(value=Constant(value=False))], decorator_list=[], returns=Name(id='bool', ctx=Load())), FunctionDef(name='free_identifier', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='lineno', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Name(id='int', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='Return a new free identifier as :class:`~jinja2.nodes.InternalName`.')), AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_last_identifier', ctx=Store()), op=Add(), value=Constant(value=1)), Assign(targets=[Name(id='rv', ctx=Store())], value=Call(func=Attribute(value=Name(id='object', ctx=Load()), attr='__new__', ctx=Load()), args=[Attribute(value=Name(id='nodes', ctx=Load()), attr='InternalName', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='nodes', ctx=Load()), attr='Node', ctx=Load()), attr='__init__', ctx=Load()), args=[Name(id='rv', ctx=Load()), JoinedStr(values=[Constant(value='fi'), FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='_last_identifier', ctx=Load()), conversion=-1)])], keywords=[keyword(arg='lineno', value=Name(id='lineno', ctx=Load()))])), Return(value=Name(id='rv', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='InternalName', ctx=Load())), FunctionDef(name='parse_statement', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Parse a single statement.')), Assign(targets=[Name(id='token', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load())), If(test=Compare(left=Attribute(value=Name(id='token', ctx=Load()), attr='type', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='name')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Constant(value='tag name expected'), Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_tag_stack', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='token', ctx=Load()), attr='value', ctx=Load())], keywords=[])), Assign(targets=[Name(id='pop_tag', ctx=Store())], value=Constant(value=True)), Try(body=[If(test=Compare(left=Attribute(value=Name(id='token', ctx=Load()), attr='value', ctx=Load()), ops=[In()], comparators=[Name(id='_statement_keywords', ctx=Load())]), body=[Assign(targets=[Name(id='f', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='self', ctx=Load()), JoinedStr(values=[Constant(value='parse_'), FormattedValue(value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='value', ctx=Load()), conversion=-1)])], keywords=[])), Return(value=Call(func=Name(id='f', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='token', ctx=Load()), attr='value', ctx=Load()), ops=[Eq()], comparators=[Constant(value='call')]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_call_block', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='token', ctx=Load()), attr='value', ctx=Load()), ops=[Eq()], comparators=[Constant(value='filter')]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_filter_block', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='ext', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='extensions', ctx=Load()), attr='get', ctx=Load()), args=[Attribute(value=Name(id='token', ctx=Load()), attr='value', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='ext', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Return(value=Call(func=Name(id='ext', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_tag_stack', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='pop_tag', ctx=Store())], value=Constant(value=False)), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail_unknown_tag', ctx=Load()), args=[Attribute(value=Name(id='token', ctx=Load()), attr='value', ctx=Load()), Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load())], keywords=[]))], handlers=[], orelse=[], finalbody=[If(test=Name(id='pop_tag', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_tag_stack', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[]))], orelse=[])])], decorator_list=[], returns=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Union', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='nodes', ctx=Load()), attr='Node', ctx=Load()), Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='List', ctx=Load()), slice=Attribute(value=Name(id='nodes', ctx=Load()), attr='Node', ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='parse_statements', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='end_tokens', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load())), arg(arg='drop_needle', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Expr(value=Constant(value='Parse multiple statements into a list until one of the end tokens\n        is reached.  This is used to parse the body of statements as it also\n        parses template data if appropriate.  The parser checks first if the\n        current token is a colon and skips it if there is one.  Then it checks\n        for the block end and parses until if one of the `end_tokens` is\n        reached.  Per default the active token in the stream at the end of\n        the call is the matched end token.  If this is not wanted `drop_needle`\n        can be set to `True` and the end token is removed.\n        ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='skip_if', ctx=Load()), args=[Constant(value='colon')], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='block_end')], keywords=[])), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='subparse', ctx=Load()), args=[Name(id='end_tokens', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='eof')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail_eof', ctx=Load()), args=[Name(id='end_tokens', ctx=Load())], keywords=[]))], orelse=[]), If(test=Name(id='drop_needle', ctx=Load()), body=[Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[], returns=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='List', ctx=Load()), slice=Attribute(value=Name(id='nodes', ctx=Load()), attr='Node', ctx=Load()), ctx=Load())), FunctionDef(name='parse_set', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Parse an assign statement.')), Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]), attr='lineno', ctx=Load())), Assign(targets=[Name(id='target', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_assign_target', ctx=Load()), args=[], keywords=[keyword(arg='with_namespace', value=Constant(value=True))])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='skip_if', ctx=Load()), args=[Constant(value='assign')], keywords=[]), body=[Assign(targets=[Name(id='expr', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_tuple', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Assign', ctx=Load()), args=[Name(id='target', ctx=Load()), Name(id='expr', ctx=Load())], keywords=[keyword(arg='lineno', value=Name(id='lineno', ctx=Load()))]))], orelse=[]), Assign(targets=[Name(id='filter_node', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_filter', ctx=Load()), args=[Constant(value=None)], keywords=[])), Assign(targets=[Name(id='body', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_statements', ctx=Load()), args=[Tuple(elts=[Constant(value='name:endset')], ctx=Load())], keywords=[keyword(arg='drop_needle', value=Constant(value=True))])), Return(value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='AssignBlock', ctx=Load()), args=[Name(id='target', ctx=Load()), Name(id='filter_node', ctx=Load()), Name(id='body', ctx=Load())], keywords=[keyword(arg='lineno', value=Name(id='lineno', ctx=Load()))]))], decorator_list=[], returns=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Union', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='nodes', ctx=Load()), attr='Assign', ctx=Load()), Attribute(value=Name(id='nodes', ctx=Load()), attr='AssignBlock', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='parse_for', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Parse a for loop.')), Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='name:for')], keywords=[]), attr='lineno', ctx=Load())), Assign(targets=[Name(id='target', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_assign_target', ctx=Load()), args=[], keywords=[keyword(arg='extra_end_rules', value=Tuple(elts=[Constant(value='name:in')], ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='name:in')], keywords=[])), Assign(targets=[Name(id='iter', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_tuple', ctx=Load()), args=[], keywords=[keyword(arg='with_condexpr', value=Constant(value=False)), keyword(arg='extra_end_rules', value=Tuple(elts=[Constant(value='name:recursive')], ctx=Load()))])), Assign(targets=[Name(id='test', ctx=Store())], value=Constant(value=None)), If(test=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='skip_if', ctx=Load()), args=[Constant(value='name:if')], keywords=[]), body=[Assign(targets=[Name(id='test', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='recursive', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='skip_if', ctx=Load()), args=[Constant(value='name:recursive')], keywords=[])), Assign(targets=[Name(id='body', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_statements', ctx=Load()), args=[Tuple(elts=[Constant(value='name:endfor'), Constant(value='name:else')], ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]), attr='value', ctx=Load()), ops=[Eq()], comparators=[Constant(value='endfor')]), body=[Assign(targets=[Name(id='else_', ctx=Store())], value=List(elts=[], ctx=Load()))], orelse=[Assign(targets=[Name(id='else_', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_statements', ctx=Load()), args=[Tuple(elts=[Constant(value='name:endfor')], ctx=Load())], keywords=[keyword(arg='drop_needle', value=Constant(value=True))]))]), Return(value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='For', ctx=Load()), args=[Name(id='target', ctx=Load()), Name(id='iter', ctx=Load()), Name(id='body', ctx=Load()), Name(id='else_', ctx=Load()), Name(id='test', ctx=Load()), Name(id='recursive', ctx=Load())], keywords=[keyword(arg='lineno', value=Name(id='lineno', ctx=Load()))]))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='For', ctx=Load())), FunctionDef(name='parse_if', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Parse an if construct.')), Assign(targets=[Name(id='node', ctx=Store()), Name(id='result', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='If', ctx=Load()), args=[], keywords=[keyword(arg='lineno', value=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='name:if')], keywords=[]), attr='lineno', ctx=Load()))])), While(test=Constant(value=True), body=[Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='test', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_tuple', ctx=Load()), args=[], keywords=[keyword(arg='with_condexpr', value=Constant(value=False))])), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='body', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_statements', ctx=Load()), args=[Tuple(elts=[Constant(value='name:elif'), Constant(value='name:else'), Constant(value='name:endif')], ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='elif_', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='else_', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='token', ctx=Store())], value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), If(test=Call(func=Attribute(value=Name(id='token', ctx=Load()), attr='test', ctx=Load()), args=[Constant(value='name:elif')], keywords=[]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='If', ctx=Load()), args=[], keywords=[keyword(arg='lineno', value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='result', ctx=Load()), attr='elif_', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[])), Continue()], orelse=[If(test=Call(func=Attribute(value=Name(id='token', ctx=Load()), attr='test', ctx=Load()), args=[Constant(value='name:else')], keywords=[]), body=[Assign(targets=[Attribute(value=Name(id='result', ctx=Load()), attr='else_', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_statements', ctx=Load()), args=[Tuple(elts=[Constant(value='name:endif')], ctx=Load())], keywords=[keyword(arg='drop_needle', value=Constant(value=True))]))], orelse=[])]), Break()], orelse=[]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='If', ctx=Load())), FunctionDef(name='parse_with', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='With', ctx=Load()), args=[], keywords=[keyword(arg='lineno', value=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]), attr='lineno', ctx=Load()))])), AnnAssign(target=Name(id='targets', ctx=Store()), annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='List', ctx=Load()), slice=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()), ctx=Load()), value=List(elts=[], ctx=Load()), simple=1), AnnAssign(target=Name(id='values', ctx=Store()), annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='List', ctx=Load()), slice=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()), ctx=Load()), value=List(elts=[], ctx=Load()), simple=1), While(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='block_end')]), body=[If(test=Name(id='targets', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='comma')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='target', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_assign_target', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='set_ctx', ctx=Load()), args=[Constant(value='param')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='targets', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='target', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='assign')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='values', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='targets', ctx=Store())], value=Name(id='targets', ctx=Load())), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='values', ctx=Store())], value=Name(id='values', ctx=Load())), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='body', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_statements', ctx=Load()), args=[Tuple(elts=[Constant(value='name:endwith')], ctx=Load())], keywords=[keyword(arg='drop_needle', value=Constant(value=True))])), Return(value=Name(id='node', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='With', ctx=Load())), FunctionDef(name='parse_autoescape', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='ScopedEvalContextModifier', ctx=Load()), args=[], keywords=[keyword(arg='lineno', value=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]), attr='lineno', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='options', ctx=Store())], value=List(elts=[Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Keyword', ctx=Load()), args=[Constant(value='autoescape'), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[])], keywords=[])], ctx=Load())), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='body', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_statements', ctx=Load()), args=[Tuple(elts=[Constant(value='name:endautoescape')], ctx=Load())], keywords=[keyword(arg='drop_needle', value=Constant(value=True))])), Return(value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Scope', ctx=Load()), args=[List(elts=[Name(id='node', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Scope', ctx=Load())), FunctionDef(name='parse_block', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Block', ctx=Load()), args=[], keywords=[keyword(arg='lineno', value=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]), attr='lineno', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='name', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='name')], keywords=[]), attr='value', ctx=Load())), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='scoped', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='skip_if', ctx=Load()), args=[Constant(value='name:scoped')], keywords=[])), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='required', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='skip_if', ctx=Load()), args=[Constant(value='name:required')], keywords=[])), If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='sub')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Constant(value='Block names in Jinja have to be valid Python identifiers and may not contain hyphens, use an underscore instead.')], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='body', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_statements', ctx=Load()), args=[Tuple(elts=[Constant(value='name:endblock')], ctx=Load())], keywords=[keyword(arg='drop_needle', value=Constant(value=True))])), If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='node', ctx=Load()), attr='required', ctx=Load()), UnaryOp(op=Not(), operand=Call(func=Name(id='all', ctx=Load()), args=[GeneratorExp(elt=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='child', ctx=Load()), Attribute(value=Name(id='nodes', ctx=Load()), attr='TemplateData', ctx=Load())], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='child', ctx=Load()), attr='data', ctx=Load()), attr='isspace', ctx=Load()), args=[], keywords=[])]), generators=[comprehension(target=Name(id='body', ctx=Store()), iter=Attribute(value=Name(id='node', ctx=Load()), attr='body', ctx=Load()), ifs=[], is_async=0), comprehension(target=Name(id='child', ctx=Store()), iter=Attribute(value=Name(id='body', ctx=Load()), attr='nodes', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Constant(value='Required blocks can only contain comments or whitespace')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='skip_if', ctx=Load()), args=[BinOp(left=Constant(value='name:'), op=Add(), right=Attribute(value=Name(id='node', ctx=Load()), attr='name', ctx=Load()))], keywords=[])), Return(value=Name(id='node', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Block', ctx=Load())), FunctionDef(name='parse_extends', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Extends', ctx=Load()), args=[], keywords=[keyword(arg='lineno', value=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]), attr='lineno', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='template', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[])), Return(value=Name(id='node', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Extends', ctx=Load())), FunctionDef(name='parse_import_context', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='node', annotation=Name(id='_ImportInclude', ctx=Load())), arg(arg='default', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='test_any', ctx=Load()), args=[Constant(value='name:with'), Constant(value='name:without')], keywords=[]), Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='look', ctx=Load()), args=[], keywords=[]), attr='test', ctx=Load()), args=[Constant(value='name:context')], keywords=[])]), body=[Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='with_context', ctx=Store())], value=Compare(left=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]), attr='value', ctx=Load()), ops=[Eq()], comparators=[Constant(value='with')])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='skip', ctx=Load()), args=[], keywords=[]))], orelse=[Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='with_context', ctx=Store())], value=Name(id='default', ctx=Load()))]), Return(value=Name(id='node', ctx=Load()))], decorator_list=[], returns=Name(id='_ImportInclude', ctx=Load())), FunctionDef(name='parse_include', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Include', ctx=Load()), args=[], keywords=[keyword(arg='lineno', value=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]), attr='lineno', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='template', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='test', ctx=Load()), args=[Constant(value='name:ignore')], keywords=[]), Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='look', ctx=Load()), args=[], keywords=[]), attr='test', ctx=Load()), args=[Constant(value='name:missing')], keywords=[])]), body=[Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='ignore_missing', ctx=Store())], value=Constant(value=True)), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='skip', ctx=Load()), args=[Constant(value=2)], keywords=[]))], orelse=[Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='ignore_missing', ctx=Store())], value=Constant(value=False))]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_import_context', ctx=Load()), args=[Name(id='node', ctx=Load()), Constant(value=True)], keywords=[]))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Include', ctx=Load())), FunctionDef(name='parse_import', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Import', ctx=Load()), args=[], keywords=[keyword(arg='lineno', value=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]), attr='lineno', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='template', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='name:as')], keywords=[])), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='target', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_assign_target', ctx=Load()), args=[], keywords=[keyword(arg='name_only', value=Constant(value=True))]), attr='name', ctx=Load())), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_import_context', ctx=Load()), args=[Name(id='node', ctx=Load()), Constant(value=False)], keywords=[]))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Import', ctx=Load())), FunctionDef(name='parse_from', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='FromImport', ctx=Load()), args=[], keywords=[keyword(arg='lineno', value=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]), attr='lineno', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='template', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='name:import')], keywords=[])), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='names', ctx=Store())], value=List(elts=[], ctx=Load())), FunctionDef(name='parse_context', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='value', ctx=Load()), ops=[In()], comparators=[Set(elts=[Constant(value='with'), Constant(value='without')])]), Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='look', ctx=Load()), args=[], keywords=[]), attr='test', ctx=Load()), args=[Constant(value='name:context')], keywords=[])]), body=[Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='with_context', ctx=Store())], value=Compare(left=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]), attr='value', ctx=Load()), ops=[Eq()], comparators=[Constant(value='with')])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='skip', ctx=Load()), args=[], keywords=[])), Return(value=Constant(value=True))], orelse=[]), Return(value=Constant(value=False))], decorator_list=[], returns=Name(id='bool', ctx=Load())), While(test=Constant(value=True), body=[If(test=Attribute(value=Name(id='node', ctx=Load()), attr='names', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='comma')], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='name')]), body=[If(test=Call(func=Name(id='parse_context', ctx=Load()), args=[], keywords=[]), body=[Break()], orelse=[]), Assign(targets=[Name(id='target', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_assign_target', ctx=Load()), args=[], keywords=[keyword(arg='name_only', value=Constant(value=True))])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='target', ctx=Load()), attr='name', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='_')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Constant(value='names starting with an underline can not be imported'), Attribute(value=Name(id='target', ctx=Load()), attr='lineno', ctx=Load())], keywords=[keyword(arg='exc', value=Name(id='TemplateAssertionError', ctx=Load()))]))], orelse=[]), If(test=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='skip_if', ctx=Load()), args=[Constant(value='name:as')], keywords=[]), body=[Assign(targets=[Name(id='alias', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_assign_target', ctx=Load()), args=[], keywords=[keyword(arg='name_only', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='node', ctx=Load()), attr='names', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Attribute(value=Name(id='target', ctx=Load()), attr='name', ctx=Load()), Attribute(value=Name(id='alias', ctx=Load()), attr='name', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='node', ctx=Load()), attr='names', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='target', ctx=Load()), attr='name', ctx=Load())], keywords=[]))]), If(test=BoolOp(op=Or(), values=[Call(func=Name(id='parse_context', ctx=Load()), args=[], keywords=[]), Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='comma')])]), body=[Break()], orelse=[])], orelse=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='name')], keywords=[]))])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='node', ctx=Load()), Constant(value='with_context')], keywords=[])), body=[Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='with_context', ctx=Store())], value=Constant(value=False))], orelse=[]), Return(value=Name(id='node', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='FromImport', ctx=Load())), FunctionDef(name='parse_signature', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='node', annotation=Name(id='_MacroCall', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='args', ctx=Store()), Attribute(value=Name(id='node', ctx=Load()), attr='args', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='defaults', ctx=Store()), Attribute(value=Name(id='node', ctx=Load()), attr='defaults', ctx=Store())], value=List(elts=[], ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='lparen')], keywords=[])), While(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='rparen')]), body=[If(test=Name(id='args', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='comma')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='arg', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_assign_target', ctx=Load()), args=[], keywords=[keyword(arg='name_only', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Name(id='arg', ctx=Load()), attr='set_ctx', ctx=Load()), args=[Constant(value='param')], keywords=[])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='skip_if', ctx=Load()), args=[Constant(value='assign')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='defaults', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[If(test=Name(id='defaults', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Constant(value='non-default argument follows default argument')], keywords=[]))], orelse=[])]), Expr(value=Call(func=Attribute(value=Name(id='args', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='arg', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='rparen')], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='parse_call_block', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='CallBlock', ctx=Load()), args=[], keywords=[keyword(arg='lineno', value=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]), attr='lineno', ctx=Load()))])), If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='lparen')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_signature', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='args', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='defaults', ctx=Store())], value=List(elts=[], ctx=Load()))]), Assign(targets=[Name(id='call_node', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='call_node', ctx=Load()), Attribute(value=Name(id='nodes', ctx=Load()), attr='Call', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Constant(value='expected call'), Attribute(value=Name(id='node', ctx=Load()), attr='lineno', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='call', ctx=Store())], value=Name(id='call_node', ctx=Load())), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='body', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_statements', ctx=Load()), args=[Tuple(elts=[Constant(value='name:endcall')], ctx=Load())], keywords=[keyword(arg='drop_needle', value=Constant(value=True))])), Return(value=Name(id='node', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='CallBlock', ctx=Load())), FunctionDef(name='parse_filter_block', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='FilterBlock', ctx=Load()), args=[], keywords=[keyword(arg='lineno', value=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]), attr='lineno', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='filter', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_filter', ctx=Load()), args=[Constant(value=None)], keywords=[keyword(arg='start_inline', value=Constant(value=True))])), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='body', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_statements', ctx=Load()), args=[Tuple(elts=[Constant(value='name:endfilter')], ctx=Load())], keywords=[keyword(arg='drop_needle', value=Constant(value=True))])), Return(value=Name(id='node', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='FilterBlock', ctx=Load())), FunctionDef(name='parse_macro', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Macro', ctx=Load()), args=[], keywords=[keyword(arg='lineno', value=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]), attr='lineno', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='name', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_assign_target', ctx=Load()), args=[], keywords=[keyword(arg='name_only', value=Constant(value=True))]), attr='name', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_signature', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='body', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_statements', ctx=Load()), args=[Tuple(elts=[Constant(value='name:endmacro')], ctx=Load())], keywords=[keyword(arg='drop_needle', value=Constant(value=True))])), Return(value=Name(id='node', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Macro', ctx=Load())), FunctionDef(name='parse_print', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Output', ctx=Load()), args=[], keywords=[keyword(arg='lineno', value=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]), attr='lineno', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='node', ctx=Load()), attr='nodes', ctx=Store())], value=List(elts=[], ctx=Load())), While(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='block_end')]), body=[If(test=Attribute(value=Name(id='node', ctx=Load()), attr='nodes', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='comma')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='node', ctx=Load()), attr='nodes', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Return(value=Name(id='node', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Output', ctx=Load())), FunctionDef(name='parse_assign_target', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='with_tuple', annotation=Name(id='bool', ctx=Load())), arg(arg='name_only', annotation=Constant(value='te.Literal[True]'))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=Ellipsis), Constant(value=Ellipsis)]), body=[Expr(value=Constant(value=Ellipsis))], decorator_list=[Attribute(value=Name(id='typing', ctx=Load()), attr='overload', ctx=Load())], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Name', ctx=Load())), FunctionDef(name='parse_assign_target', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='with_tuple', annotation=Name(id='bool', ctx=Load())), arg(arg='name_only', annotation=Name(id='bool', ctx=Load())), arg(arg='extra_end_rules', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load()), ctx=Load())), arg(arg='with_namespace', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True), Constant(value=False), Constant(value=None), Constant(value=False)]), body=[Expr(value=Constant(value=Ellipsis))], decorator_list=[Attribute(value=Name(id='typing', ctx=Load()), attr='overload', ctx=Load())], returns=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Union', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='nodes', ctx=Load()), attr='NSRef', ctx=Load()), Attribute(value=Name(id='nodes', ctx=Load()), attr='Name', ctx=Load()), Attribute(value=Name(id='nodes', ctx=Load()), attr='Tuple', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='parse_assign_target', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='with_tuple', annotation=Name(id='bool', ctx=Load())), arg(arg='name_only', annotation=Name(id='bool', ctx=Load())), arg(arg='extra_end_rules', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load()), ctx=Load())), arg(arg='with_namespace', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True), Constant(value=False), Constant(value=None), Constant(value=False)]), body=[Expr(value=Constant(value='Parse an assignment target.  As Jinja allows assignments to\n        tuples, this function can parse all allowed assignment targets.  Per\n        default assignments to tuples are parsed, that can be disable however\n        by setting `with_tuple` to `False`.  If only assignments to names are\n        wanted `name_only` can be set to `True`.  The `extra_end_rules`\n        parameter is forwarded to the tuple parsing function.  If\n        `with_namespace` is enabled, a namespace assignment may be parsed.\n        ')), AnnAssign(target=Name(id='target', ctx=Store()), annotation=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()), simple=1), If(test=BoolOp(op=And(), values=[Name(id='with_namespace', ctx=Load()), Compare(left=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='look', ctx=Load()), args=[], keywords=[]), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='dot')])]), body=[Assign(targets=[Name(id='token', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='name')], keywords=[])), Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), Assign(targets=[Name(id='attr', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='name')], keywords=[])), Assign(targets=[Name(id='target', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='NSRef', ctx=Load()), args=[Attribute(value=Name(id='token', ctx=Load()), attr='value', ctx=Load()), Attribute(value=Name(id='attr', ctx=Load()), attr='value', ctx=Load())], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load()))]))], orelse=[If(test=Name(id='name_only', ctx=Load()), body=[Assign(targets=[Name(id='token', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='name')], keywords=[])), Assign(targets=[Name(id='target', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Name', ctx=Load()), args=[Attribute(value=Name(id='token', ctx=Load()), attr='value', ctx=Load()), Constant(value='store')], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load()))]))], orelse=[If(test=Name(id='with_tuple', ctx=Load()), body=[Assign(targets=[Name(id='target', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_tuple', ctx=Load()), args=[], keywords=[keyword(arg='simplified', value=Constant(value=True)), keyword(arg='extra_end_rules', value=Name(id='extra_end_rules', ctx=Load()))]))], orelse=[Assign(targets=[Name(id='target', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_primary', ctx=Load()), args=[], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='set_ctx', ctx=Load()), args=[Constant(value='store')], keywords=[]))])]), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='can_assign', ctx=Load()), args=[], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[JoinedStr(values=[Constant(value="can't assign to "), FormattedValue(value=Call(func=Attribute(value=Attribute(value=Call(func=Name(id='type', ctx=Load()), args=[Name(id='target', ctx=Load())], keywords=[]), attr='__name__', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), conversion=114)]), Attribute(value=Name(id='target', ctx=Load()), attr='lineno', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='target', ctx=Load()))], decorator_list=[], returns=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Union', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='nodes', ctx=Load()), attr='NSRef', ctx=Load()), Attribute(value=Name(id='nodes', ctx=Load()), attr='Name', ctx=Load()), Attribute(value=Name(id='nodes', ctx=Load()), attr='Tuple', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='parse_expression', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='with_condexpr', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Expr(value=Constant(value='Parse an expression.  Per default all expressions are parsed, if\n        the optional `with_condexpr` parameter is set to `False` conditional\n        expressions are not parsed.\n        ')), If(test=Name(id='with_condexpr', ctx=Load()), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_condexpr', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_or', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load())), FunctionDef(name='parse_condexpr', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load())), Assign(targets=[Name(id='expr1', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_or', ctx=Load()), args=[], keywords=[])), AnnAssign(target=Name(id='expr3', ctx=Store()), annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()), ctx=Load()), simple=1), While(test=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='skip_if', ctx=Load()), args=[Constant(value='name:if')], keywords=[]), body=[Assign(targets=[Name(id='expr2', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_or', ctx=Load()), args=[], keywords=[])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='skip_if', ctx=Load()), args=[Constant(value='name:else')], keywords=[]), body=[Assign(targets=[Name(id='expr3', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_condexpr', ctx=Load()), args=[], keywords=[]))], orelse=[Assign(targets=[Name(id='expr3', ctx=Store())], value=Constant(value=None))]), Assign(targets=[Name(id='expr1', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='CondExpr', ctx=Load()), args=[Name(id='expr2', ctx=Load()), Name(id='expr1', ctx=Load()), Name(id='expr3', ctx=Load())], keywords=[keyword(arg='lineno', value=Name(id='lineno', ctx=Load()))])), Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load()))], orelse=[]), Return(value=Name(id='expr1', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load())), FunctionDef(name='parse_or', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load())), Assign(targets=[Name(id='left', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_and', ctx=Load()), args=[], keywords=[])), While(test=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='skip_if', ctx=Load()), args=[Constant(value='name:or')], keywords=[]), body=[Assign(targets=[Name(id='right', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_and', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='left', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Or', ctx=Load()), args=[Name(id='left', ctx=Load()), Name(id='right', ctx=Load())], keywords=[keyword(arg='lineno', value=Name(id='lineno', ctx=Load()))])), Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load()))], orelse=[]), Return(value=Name(id='left', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load())), FunctionDef(name='parse_and', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load())), Assign(targets=[Name(id='left', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_not', ctx=Load()), args=[], keywords=[])), While(test=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='skip_if', ctx=Load()), args=[Constant(value='name:and')], keywords=[]), body=[Assign(targets=[Name(id='right', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_not', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='left', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='And', ctx=Load()), args=[Name(id='left', ctx=Load()), Name(id='right', ctx=Load())], keywords=[keyword(arg='lineno', value=Name(id='lineno', ctx=Load()))])), Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load()))], orelse=[]), Return(value=Name(id='left', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load())), FunctionDef(name='parse_not', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='test', ctx=Load()), args=[Constant(value='name:not')], keywords=[]), body=[Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]), attr='lineno', ctx=Load())), Return(value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Not', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_not', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='lineno', value=Name(id='lineno', ctx=Load()))]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_compare', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load())), FunctionDef(name='parse_compare', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load())), Assign(targets=[Name(id='expr', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_math1', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='ops', ctx=Store())], value=List(elts=[], ctx=Load())), While(test=Constant(value=True), body=[Assign(targets=[Name(id='token_type', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load())), If(test=Compare(left=Name(id='token_type', ctx=Load()), ops=[In()], comparators=[Name(id='_compare_operators', ctx=Load())]), body=[Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ops', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Operand', ctx=Load()), args=[Name(id='token_type', ctx=Load()), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_math1', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[]))], orelse=[If(test=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='skip_if', ctx=Load()), args=[Constant(value='name:in')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='ops', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Operand', ctx=Load()), args=[Constant(value='in'), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_math1', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='test', ctx=Load()), args=[Constant(value='name:not')], keywords=[]), Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='look', ctx=Load()), args=[], keywords=[]), attr='test', ctx=Load()), args=[Constant(value='name:in')], keywords=[])]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='skip', ctx=Load()), args=[Constant(value=2)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ops', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Operand', ctx=Load()), args=[Constant(value='notin'), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_math1', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[]))], orelse=[Break()])])]), Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load()))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='ops', ctx=Load())), body=[Return(value=Name(id='expr', ctx=Load()))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Compare', ctx=Load()), args=[Name(id='expr', ctx=Load()), Name(id='ops', ctx=Load())], keywords=[keyword(arg='lineno', value=Name(id='lineno', ctx=Load()))]))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load())), FunctionDef(name='parse_math1', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load())), Assign(targets=[Name(id='left', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_concat', ctx=Load()), args=[], keywords=[])), While(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='add'), Constant(value='sub')], ctx=Load())]), body=[Assign(targets=[Name(id='cls', ctx=Store())], value=Subscript(value=Name(id='_math_nodes', ctx=Load()), slice=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ctx=Load())), Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), Assign(targets=[Name(id='right', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_concat', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='left', ctx=Store())], value=Call(func=Name(id='cls', ctx=Load()), args=[Name(id='left', ctx=Load()), Name(id='right', ctx=Load())], keywords=[keyword(arg='lineno', value=Name(id='lineno', ctx=Load()))])), Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load()))], orelse=[]), Return(value=Name(id='left', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load())), FunctionDef(name='parse_concat', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load())), Assign(targets=[Name(id='args', ctx=Store())], value=List(elts=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_math2', ctx=Load()), args=[], keywords=[])], ctx=Load())), While(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='tilde')]), body=[Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='args', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_math2', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), body=[Return(value=Subscript(value=Name(id='args', ctx=Load()), slice=Constant(value=0), ctx=Load()))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Concat', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[keyword(arg='lineno', value=Name(id='lineno', ctx=Load()))]))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load())), FunctionDef(name='parse_math2', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load())), Assign(targets=[Name(id='left', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_pow', ctx=Load()), args=[], keywords=[])), While(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='mul'), Constant(value='div'), Constant(value='floordiv'), Constant(value='mod')], ctx=Load())]), body=[Assign(targets=[Name(id='cls', ctx=Store())], value=Subscript(value=Name(id='_math_nodes', ctx=Load()), slice=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ctx=Load())), Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), Assign(targets=[Name(id='right', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_pow', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='left', ctx=Store())], value=Call(func=Name(id='cls', ctx=Load()), args=[Name(id='left', ctx=Load()), Name(id='right', ctx=Load())], keywords=[keyword(arg='lineno', value=Name(id='lineno', ctx=Load()))])), Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load()))], orelse=[]), Return(value=Name(id='left', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load())), FunctionDef(name='parse_pow', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load())), Assign(targets=[Name(id='left', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_unary', ctx=Load()), args=[], keywords=[])), While(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='pow')]), body=[Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), Assign(targets=[Name(id='right', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_unary', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='left', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Pow', ctx=Load()), args=[Name(id='left', ctx=Load()), Name(id='right', ctx=Load())], keywords=[keyword(arg='lineno', value=Name(id='lineno', ctx=Load()))])), Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load()))], orelse=[]), Return(value=Name(id='left', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load())), FunctionDef(name='parse_unary', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='with_filter', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Assign(targets=[Name(id='token_type', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load())), Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load())), AnnAssign(target=Name(id='node', ctx=Store()), annotation=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()), simple=1), If(test=Compare(left=Name(id='token_type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='sub')]), body=[Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Neg', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_unary', ctx=Load()), args=[Constant(value=False)], keywords=[])], keywords=[keyword(arg='lineno', value=Name(id='lineno', ctx=Load()))]))], orelse=[If(test=Compare(left=Name(id='token_type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='add')]), body=[Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Pos', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_unary', ctx=Load()), args=[Constant(value=False)], keywords=[])], keywords=[keyword(arg='lineno', value=Name(id='lineno', ctx=Load()))]))], orelse=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_primary', ctx=Load()), args=[], keywords=[]))])]), Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_postfix', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[])), If(test=Name(id='with_filter', ctx=Load()), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_filter_expr', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='node', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load())), FunctionDef(name='parse_primary', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='token', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load())), AnnAssign(target=Name(id='node', ctx=Store()), annotation=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()), simple=1), If(test=Compare(left=Attribute(value=Name(id='token', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='name')]), body=[If(test=Compare(left=Attribute(value=Name(id='token', ctx=Load()), attr='value', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='true'), Constant(value='false'), Constant(value='True'), Constant(value='False')], ctx=Load())]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Const', ctx=Load()), args=[Compare(left=Attribute(value=Name(id='token', ctx=Load()), attr='value', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='true'), Constant(value='True')], ctx=Load())])], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load()))]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='token', ctx=Load()), attr='value', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='none'), Constant(value='None')], ctx=Load())]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Const', ctx=Load()), args=[Constant(value=None)], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load()))]))], orelse=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Name', ctx=Load()), args=[Attribute(value=Name(id='token', ctx=Load()), attr='value', ctx=Load()), Constant(value='load')], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load()))]))])]), Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='token', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='string')]), body=[Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), Assign(targets=[Name(id='buf', ctx=Store())], value=List(elts=[Attribute(value=Name(id='token', ctx=Load()), attr='value', ctx=Load())], ctx=Load())), Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load())), While(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='string')]), body=[Expr(value=Call(func=Attribute(value=Name(id='buf', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='value', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Const', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=''), attr='join', ctx=Load()), args=[Name(id='buf', ctx=Load())], keywords=[])], keywords=[keyword(arg='lineno', value=Name(id='lineno', ctx=Load()))]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='token', ctx=Load()), attr='type', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='integer'), Constant(value='float')], ctx=Load())]), body=[Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Const', ctx=Load()), args=[Attribute(value=Name(id='token', ctx=Load()), attr='value', ctx=Load())], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load()))]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='token', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='lparen')]), body=[Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_tuple', ctx=Load()), args=[], keywords=[keyword(arg='explicit_parentheses', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='rparen')], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='token', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='lbracket')]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_list', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='token', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='lbrace')]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_dict', ctx=Load()), args=[], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[JoinedStr(values=[Constant(value='unexpected '), FormattedValue(value=Call(func=Name(id='describe_token', ctx=Load()), args=[Name(id='token', ctx=Load())], keywords=[]), conversion=114)]), Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load())], keywords=[]))])])])])])]), Return(value=Name(id='node', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load())), FunctionDef(name='parse_tuple', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='simplified', annotation=Name(id='bool', ctx=Load())), arg(arg='with_condexpr', annotation=Name(id='bool', ctx=Load())), arg(arg='extra_end_rules', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load()), ctx=Load())), arg(arg='explicit_parentheses', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=True), Constant(value=None), Constant(value=False)]), body=[Expr(value=Constant(value="Works like `parse_expression` but if multiple expressions are\n        delimited by a comma a :class:`~jinja2.nodes.Tuple` node is created.\n        This method could also return a regular expression instead of a tuple\n        if no commas where found.\n\n        The default parsing mode is a full tuple.  If `simplified` is `True`\n        only names and literals are parsed.  The `no_condexpr` parameter is\n        forwarded to :meth:`parse_expression`.\n\n        Because tuples do not require delimiters and may end in a bogus comma\n        an extra hint is needed that marks the end of a tuple.  For example\n        for loops support tuples between `for` and `in`.  In that case the\n        `extra_end_rules` is set to ``['name:in']``.\n\n        `explicit_parentheses` is true if the parsing was triggered by an\n        expression in parentheses.  This is used to figure out if an empty\n        tuple is a valid expression or not.\n        ")), Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load())), If(test=Name(id='simplified', ctx=Load()), body=[Assign(targets=[Name(id='parse', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='parse_primary', ctx=Load()))], orelse=[If(test=Name(id='with_condexpr', ctx=Load()), body=[Assign(targets=[Name(id='parse', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()))], orelse=[FunctionDef(name='parse', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[keyword(arg='with_condexpr', value=Constant(value=False))]))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()))])]), AnnAssign(target=Name(id='args', ctx=Store()), annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='List', ctx=Load()), slice=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()), ctx=Load()), value=List(elts=[], ctx=Load()), simple=1), Assign(targets=[Name(id='is_tuple', ctx=Store())], value=Constant(value=False)), While(test=Constant(value=True), body=[If(test=Name(id='args', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='comma')], keywords=[]))], orelse=[]), If(test=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='is_tuple_end', ctx=Load()), args=[Name(id='extra_end_rules', ctx=Load())], keywords=[]), body=[Break()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='args', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='parse', ctx=Load()), args=[], keywords=[])], keywords=[])), If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='comma')]), body=[Assign(targets=[Name(id='is_tuple', ctx=Store())], value=Constant(value=True))], orelse=[Break()]), Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load()))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='is_tuple', ctx=Load())), body=[If(test=Name(id='args', ctx=Load()), body=[Return(value=Subscript(value=Name(id='args', ctx=Load()), slice=Constant(value=0), ctx=Load()))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='explicit_parentheses', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[JoinedStr(values=[Constant(value='Expected an expression, got '), FormattedValue(value=Call(func=Name(id='describe_token', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load())], keywords=[]), conversion=114)])], keywords=[]))], orelse=[])], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Tuple', ctx=Load()), args=[Name(id='args', ctx=Load()), Constant(value='load')], keywords=[keyword(arg='lineno', value=Name(id='lineno', ctx=Load()))]))], decorator_list=[], returns=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Union', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='nodes', ctx=Load()), attr='Tuple', ctx=Load()), Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='parse_list', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='token', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='lbracket')], keywords=[])), AnnAssign(target=Name(id='items', ctx=Store()), annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='List', ctx=Load()), slice=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()), ctx=Load()), value=List(elts=[], ctx=Load()), simple=1), While(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='rbracket')]), body=[If(test=Name(id='items', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='comma')], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='rbracket')]), body=[Break()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='items', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='rbracket')], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='List', ctx=Load()), args=[Name(id='items', ctx=Load())], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load()))]))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='List', ctx=Load())), FunctionDef(name='parse_dict', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='token', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='lbrace')], keywords=[])), AnnAssign(target=Name(id='items', ctx=Store()), annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='List', ctx=Load()), slice=Attribute(value=Name(id='nodes', ctx=Load()), attr='Pair', ctx=Load()), ctx=Load()), value=List(elts=[], ctx=Load()), simple=1), While(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='rbrace')]), body=[If(test=Name(id='items', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='comma')], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='rbrace')]), body=[Break()], orelse=[]), Assign(targets=[Name(id='key', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='colon')], keywords=[])), Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='items', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Pair', ctx=Load()), args=[Name(id='key', ctx=Load()), Name(id='value', ctx=Load())], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='key', ctx=Load()), attr='lineno', ctx=Load()))])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='rbrace')], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Dict', ctx=Load()), args=[Name(id='items', ctx=Load())], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load()))]))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Dict', ctx=Load())), FunctionDef(name='parse_postfix', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='node', annotation=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[While(test=Constant(value=True), body=[Assign(targets=[Name(id='token_type', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load())), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='token_type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='dot')]), Compare(left=Name(id='token_type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='lbracket')])]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_subscript', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='token_type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='lparen')]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_call', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[]))], orelse=[Break()])])], orelse=[]), Return(value=Name(id='node', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load())), FunctionDef(name='parse_filter_expr', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='node', annotation=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[While(test=Constant(value=True), body=[Assign(targets=[Name(id='token_type', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load())), If(test=Compare(left=Name(id='token_type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='pipe')]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_filter', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='token_type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='name')]), Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='value', ctx=Load()), ops=[Eq()], comparators=[Constant(value='is')])]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_test', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='token_type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='lparen')]), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_call', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[]))], orelse=[Break()])])])], orelse=[]), Return(value=Name(id='node', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load())), FunctionDef(name='parse_subscript', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='node', annotation=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='token', ctx=Store())], value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), AnnAssign(target=Name(id='arg', ctx=Store()), annotation=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()), simple=1), If(test=Compare(left=Attribute(value=Name(id='token', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='dot')]), body=[Assign(targets=[Name(id='attr_token', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load())), Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='attr_token', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='name')]), body=[Return(value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Getattr', ctx=Load()), args=[Name(id='node', ctx=Load()), Attribute(value=Name(id='attr_token', ctx=Load()), attr='value', ctx=Load()), Constant(value='load')], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load()))]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='attr_token', ctx=Load()), attr='type', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='integer')]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Constant(value='expected name or number'), Attribute(value=Name(id='attr_token', ctx=Load()), attr='lineno', ctx=Load())], keywords=[]))], orelse=[])]), Assign(targets=[Name(id='arg', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Const', ctx=Load()), args=[Attribute(value=Name(id='attr_token', ctx=Load()), attr='value', ctx=Load())], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='attr_token', ctx=Load()), attr='lineno', ctx=Load()))])), Return(value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Getitem', ctx=Load()), args=[Name(id='node', ctx=Load()), Name(id='arg', ctx=Load()), Constant(value='load')], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load()))]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='token', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='lbracket')]), body=[AnnAssign(target=Name(id='args', ctx=Store()), annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='List', ctx=Load()), slice=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()), ctx=Load()), value=List(elts=[], ctx=Load()), simple=1), While(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='rbracket')]), body=[If(test=Name(id='args', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='comma')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='args', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_subscribed', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='rbracket')], keywords=[])), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), body=[Assign(targets=[Name(id='arg', ctx=Store())], value=Subscript(value=Name(id='args', ctx=Load()), slice=Constant(value=0), ctx=Load()))], orelse=[Assign(targets=[Name(id='arg', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Tuple', ctx=Load()), args=[Name(id='args', ctx=Load()), Constant(value='load')], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load()))]))]), Return(value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Getitem', ctx=Load()), args=[Name(id='node', ctx=Load()), Name(id='arg', ctx=Load()), Constant(value='load')], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load()))]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Constant(value='expected subscript expression'), Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load())], keywords=[]))], decorator_list=[], returns=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Union', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='nodes', ctx=Load()), attr='Getattr', ctx=Load()), Attribute(value=Name(id='nodes', ctx=Load()), attr='Getitem', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='parse_subscribed', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='lineno', ctx=Load())), AnnAssign(target=Name(id='args', ctx=Store()), annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='List', ctx=Load()), slice=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()), ctx=Load()), ctx=Load()), simple=1), If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='colon')]), body=[Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), Assign(targets=[Name(id='args', ctx=Store())], value=List(elts=[Constant(value=None)], ctx=Load()))], orelse=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='colon')]), body=[Return(value=Name(id='node', ctx=Load()))], orelse=[]), Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), Assign(targets=[Name(id='args', ctx=Store())], value=List(elts=[Name(id='node', ctx=Load())], ctx=Load()))]), If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='colon')]), body=[Expr(value=Call(func=Attribute(value=Name(id='args', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value=None)], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[NotIn()], comparators=[Tuple(elts=[Constant(value='rbracket'), Constant(value='comma')], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='args', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='args', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value=None)], keywords=[]))])]), If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='colon')]), body=[Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[NotIn()], comparators=[Tuple(elts=[Constant(value='rbracket'), Constant(value='comma')], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='args', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='args', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value=None)], keywords=[]))])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='args', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value=None)], keywords=[]))]), Return(value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Slice', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(arg='lineno', value=Name(id='lineno', ctx=Load()))]))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load())), FunctionDef(name='parse_call_args', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='token', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='lparen')], keywords=[])), Assign(targets=[Name(id='args', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='kwargs', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='dyn_args', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='dyn_kwargs', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='require_comma', ctx=Store())], value=Constant(value=False)), FunctionDef(name='ensure', args=arguments(posonlyargs=[], args=[arg(arg='expr', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Name(id='expr', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Constant(value='invalid syntax for function call expression'), Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[], returns=Constant(value=None)), While(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='rparen')]), body=[If(test=Name(id='require_comma', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='comma')], keywords=[])), If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='rparen')]), body=[Break()], orelse=[])], orelse=[]), If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='mul')]), body=[Expr(value=Call(func=Name(id='ensure', ctx=Load()), args=[BoolOp(op=And(), values=[Compare(left=Name(id='dyn_args', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Name(id='dyn_kwargs', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])])], keywords=[])), Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), Assign(targets=[Name(id='dyn_args', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='pow')]), body=[Expr(value=Call(func=Name(id='ensure', ctx=Load()), args=[Compare(left=Name(id='dyn_kwargs', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])], keywords=[])), Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), Assign(targets=[Name(id='dyn_kwargs', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='name')]), Compare(left=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='look', ctx=Load()), args=[], keywords=[]), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='assign')])]), body=[Expr(value=Call(func=Name(id='ensure', ctx=Load()), args=[Compare(left=Name(id='dyn_kwargs', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])], keywords=[])), Assign(targets=[Name(id='key', ctx=Store())], value=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='value', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='skip', ctx=Load()), args=[Constant(value=2)], keywords=[])), Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Keyword', ctx=Load()), args=[Name(id='key', ctx=Load()), Name(id='value', ctx=Load())], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='value', ctx=Load()), attr='lineno', ctx=Load()))])], keywords=[]))], orelse=[Expr(value=Call(func=Name(id='ensure', ctx=Load()), args=[BoolOp(op=And(), values=[Compare(left=Name(id='dyn_args', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Name(id='dyn_kwargs', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), UnaryOp(op=Not(), operand=Name(id='kwargs', ctx=Load()))])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='args', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_expression', ctx=Load()), args=[], keywords=[])], keywords=[]))])])]), Assign(targets=[Name(id='require_comma', ctx=Store())], value=Constant(value=True))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='rparen')], keywords=[])), Return(value=Tuple(elts=[Name(id='args', ctx=Load()), Name(id='kwargs', ctx=Load()), Name(id='dyn_args', ctx=Load()), Name(id='dyn_kwargs', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='t', ctx=Load()), attr='Tuple', ctx=Load())), FunctionDef(name='parse_call', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='node', annotation=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='token', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='args', ctx=Store()), Name(id='kwargs', ctx=Store()), Name(id='dyn_args', ctx=Store()), Name(id='dyn_kwargs', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_call_args', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Call', ctx=Load()), args=[Name(id='node', ctx=Load()), Name(id='args', ctx=Load()), Name(id='kwargs', ctx=Load()), Name(id='dyn_args', ctx=Load()), Name(id='dyn_kwargs', ctx=Load())], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load()))]))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Call', ctx=Load())), FunctionDef(name='parse_filter', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='node', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()), ctx=Load())), arg(arg='start_inline', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[While(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='pipe')]), Name(id='start_inline', ctx=Load())]), body=[If(test=UnaryOp(op=Not(), operand=Name(id='start_inline', ctx=Load())), body=[Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='token', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='name')], keywords=[])), Assign(targets=[Name(id='name', ctx=Store())], value=Attribute(value=Name(id='token', ctx=Load()), attr='value', ctx=Load())), While(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='dot')]), body=[Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), AugAssign(target=Name(id='name', ctx=Store()), op=Add(), value=BinOp(left=Constant(value='.'), op=Add(), right=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='name')], keywords=[]), attr='value', ctx=Load())))], orelse=[]), If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='lparen')]), body=[Assign(targets=[Tuple(elts=[Name(id='args', ctx=Store()), Name(id='kwargs', ctx=Store()), Name(id='dyn_args', ctx=Store()), Name(id='dyn_kwargs', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_call_args', ctx=Load()), args=[], keywords=[]))], orelse=[Assign(targets=[Name(id='args', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='kwargs', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='dyn_args', ctx=Store()), Name(id='dyn_kwargs', ctx=Store())], value=Constant(value=None))]), Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Filter', ctx=Load()), args=[Name(id='node', ctx=Load()), Name(id='name', ctx=Load()), Name(id='args', ctx=Load()), Name(id='kwargs', ctx=Load()), Name(id='dyn_args', ctx=Load()), Name(id='dyn_kwargs', ctx=Load())], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load()))])), Assign(targets=[Name(id='start_inline', ctx=Store())], value=Constant(value=False))], orelse=[]), Return(value=Name(id='node', ctx=Load()))], decorator_list=[], returns=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()), ctx=Load())), FunctionDef(name='parse_test', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='node', annotation=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='token', ctx=Store())], value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), If(test=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='test', ctx=Load()), args=[Constant(value='name:not')], keywords=[]), body=[Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), Assign(targets=[Name(id='negated', ctx=Store())], value=Constant(value=True))], orelse=[Assign(targets=[Name(id='negated', ctx=Store())], value=Constant(value=False))]), Assign(targets=[Name(id='name', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='name')], keywords=[]), attr='value', ctx=Load())), While(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='dot')]), body=[Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), AugAssign(target=Name(id='name', ctx=Store()), op=Add(), value=BinOp(left=Constant(value='.'), op=Add(), right=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='name')], keywords=[]), attr='value', ctx=Load())))], orelse=[]), Assign(targets=[Name(id='dyn_args', ctx=Store()), Name(id='dyn_kwargs', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='kwargs', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='lparen')]), body=[Assign(targets=[Tuple(elts=[Name(id='args', ctx=Store()), Name(id='kwargs', ctx=Store()), Name(id='dyn_args', ctx=Store()), Name(id='dyn_kwargs', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_call_args', ctx=Load()), args=[], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='type', ctx=Load()), ops=[In()], comparators=[Set(elts=[Constant(value='name'), Constant(value='string'), Constant(value='integer'), Constant(value='float'), Constant(value='lparen'), Constant(value='lbracket'), Constant(value='lbrace')])]), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='test_any', ctx=Load()), args=[Constant(value='name:else'), Constant(value='name:or'), Constant(value='name:and')], keywords=[]))]), body=[If(test=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='test', ctx=Load()), args=[Constant(value='name:is')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Constant(value='You cannot chain multiple tests with is')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='arg_node', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_primary', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='arg_node', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_postfix', ctx=Load()), args=[Name(id='arg_node', ctx=Load())], keywords=[])), Assign(targets=[Name(id='args', ctx=Store())], value=List(elts=[Name(id='arg_node', ctx=Load())], ctx=Load()))], orelse=[Assign(targets=[Name(id='args', ctx=Store())], value=List(elts=[], ctx=Load()))])]), Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Test', ctx=Load()), args=[Name(id='node', ctx=Load()), Name(id='name', ctx=Load()), Name(id='args', ctx=Load()), Name(id='kwargs', ctx=Load()), Name(id='dyn_args', ctx=Load()), Name(id='dyn_kwargs', ctx=Load())], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load()))])), If(test=Name(id='negated', ctx=Load()), body=[Assign(targets=[Name(id='node', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Not', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load()))]))], orelse=[]), Return(value=Name(id='node', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Expr', ctx=Load())), FunctionDef(name='subparse', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='end_tokens', annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Optional', ctx=Load()), slice=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[AnnAssign(target=Name(id='body', ctx=Store()), annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='List', ctx=Load()), slice=Attribute(value=Name(id='nodes', ctx=Load()), attr='Node', ctx=Load()), ctx=Load()), value=List(elts=[], ctx=Load()), simple=1), AnnAssign(target=Name(id='data_buffer', ctx=Store()), annotation=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='List', ctx=Load()), slice=Attribute(value=Name(id='nodes', ctx=Load()), attr='Node', ctx=Load()), ctx=Load()), value=List(elts=[], ctx=Load()), simple=1), Assign(targets=[Name(id='add_data', ctx=Store())], value=Attribute(value=Name(id='data_buffer', ctx=Load()), attr='append', ctx=Load())), If(test=Compare(left=Name(id='end_tokens', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_end_token_stack', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='end_tokens', ctx=Load())], keywords=[]))], orelse=[]), FunctionDef(name='flush_data', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Name(id='data_buffer', ctx=Load()), body=[Assign(targets=[Name(id='lineno', ctx=Store())], value=Attribute(value=Subscript(value=Name(id='data_buffer', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='lineno', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='body', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Output', ctx=Load()), args=[Subscript(value=Name(id='data_buffer', ctx=Load()), slice=Slice(), ctx=Load())], keywords=[keyword(arg='lineno', value=Name(id='lineno', ctx=Load()))])], keywords=[])), Delete(targets=[Subscript(value=Name(id='data_buffer', ctx=Load()), slice=Slice(), ctx=Del())])], orelse=[])], decorator_list=[], returns=Constant(value=None)), Try(body=[While(test=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), body=[Assign(targets=[Name(id='token', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load())), If(test=Compare(left=Attribute(value=Name(id='token', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='data')]), body=[If(test=Attribute(value=Name(id='token', ctx=Load()), attr='value', ctx=Load()), body=[Expr(value=Call(func=Name(id='add_data', ctx=Load()), args=[Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='TemplateData', ctx=Load()), args=[Attribute(value=Name(id='token', ctx=Load()), attr='value', ctx=Load())], keywords=[keyword(arg='lineno', value=Attribute(value=Name(id='token', ctx=Load()), attr='lineno', ctx=Load()))])], keywords=[]))], orelse=[]), Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='token', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='variable_begin')]), body=[Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='add_data', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_tuple', ctx=Load()), args=[], keywords=[keyword(arg='with_condexpr', value=Constant(value=True))])], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='variable_end')], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='token', ctx=Load()), attr='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='block_begin')]), body=[Expr(value=Call(func=Name(id='flush_data', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Name(id='next', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='end_tokens', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='current', ctx=Load()), attr='test_any', ctx=Load()), args=[Starred(value=Name(id='end_tokens', ctx=Load()), ctx=Load())], keywords=[])]), body=[Return(value=Name(id='body', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='rv', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='parse_statement', ctx=Load()), args=[], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='rv', ctx=Load()), Name(id='list', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='body', ctx=Load()), attr='extend', ctx=Load()), args=[Name(id='rv', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='body', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='rv', ctx=Load())], keywords=[]))]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='stream', ctx=Load()), attr='expect', ctx=Load()), args=[Constant(value='block_end')], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='AssertionError', ctx=Load()), args=[Constant(value='internal parsing error')], keywords=[]))])])])], orelse=[]), Expr(value=Call(func=Name(id='flush_data', ctx=Load()), args=[], keywords=[]))], handlers=[], orelse=[], finalbody=[If(test=Compare(left=Name(id='end_tokens', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_end_token_stack', ctx=Load()), attr='pop', ctx=Load()), args=[], keywords=[]))], orelse=[])]), Return(value=Name(id='body', ctx=Load()))], decorator_list=[], returns=Subscript(value=Attribute(value=Name(id='t', ctx=Load()), attr='List', ctx=Load()), slice=Attribute(value=Name(id='nodes', ctx=Load()), attr='Node', ctx=Load()), ctx=Load())), FunctionDef(name='parse', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Parse the whole template into a `Template` node.')), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Attribute(value=Name(id='nodes', ctx=Load()), attr='Template', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='subparse', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='lineno', value=Constant(value=1))])), Expr(value=Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='set_environment', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='environment', ctx=Load())], keywords=[])), Return(value=Name(id='result', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='nodes', ctx=Load()), attr='Template', ctx=Load()))], decorator_list=[])], type_ignores=[])