Module(body=[Expr(value=Constant(value='Sun OS Solaris platform implementation.')), Import(names=[alias(name='errno')]), Import(names=[alias(name='functools')]), Import(names=[alias(name='os')]), Import(names=[alias(name='socket')]), Import(names=[alias(name='subprocess')]), Import(names=[alias(name='sys')]), ImportFrom(module='collections', names=[alias(name='namedtuple')], level=0), ImportFrom(module='socket', names=[alias(name='AF_INET')], level=0), ImportFrom(names=[alias(name='_common')], level=1), ImportFrom(names=[alias(name='_psposix')], level=1), ImportFrom(names=[alias(name='_psutil_posix', asname='cext_posix')], level=1), ImportFrom(names=[alias(name='_psutil_sunos', asname='cext')], level=1), ImportFrom(module='_common', names=[alias(name='AF_INET6')], level=1), ImportFrom(module='_common', names=[alias(name='AccessDenied')], level=1), ImportFrom(module='_common', names=[alias(name='NoSuchProcess')], level=1), ImportFrom(module='_common', names=[alias(name='ZombieProcess')], level=1), ImportFrom(module='_common', names=[alias(name='debug')], level=1), ImportFrom(module='_common', names=[alias(name='get_procfs_path')], level=1), ImportFrom(module='_common', names=[alias(name='isfile_strict')], level=1), ImportFrom(module='_common', names=[alias(name='memoize_when_activated')], level=1), ImportFrom(module='_common', names=[alias(name='sockfam_to_enum')], level=1), ImportFrom(module='_common', names=[alias(name='socktype_to_enum')], level=1), ImportFrom(module='_common', names=[alias(name='usage_percent')], level=1), ImportFrom(module='_compat', names=[alias(name='PY3')], level=1), ImportFrom(module='_compat', names=[alias(name='FileNotFoundError')], level=1), ImportFrom(module='_compat', names=[alias(name='PermissionError')], level=1), ImportFrom(module='_compat', names=[alias(name='ProcessLookupError')], level=1), ImportFrom(module='_compat', names=[alias(name='b')], level=1), Assign(targets=[Name(id='__extra__all__', ctx=Store())], value=List(elts=[Constant(value='CONN_IDLE'), Constant(value='CONN_BOUND'), Constant(value='PROCFS_PATH')], ctx=Load())), Assign(targets=[Name(id='PAGE_SIZE', ctx=Store())], value=Call(func=Attribute(value=Name(id='cext_posix', ctx=Load()), attr='getpagesize', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='AF_LINK', ctx=Store())], value=Attribute(value=Name(id='cext_posix', ctx=Load()), attr='AF_LINK', ctx=Load())), Assign(targets=[Name(id='IS_64_BIT', ctx=Store())], value=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='maxsize', ctx=Load()), ops=[Gt()], comparators=[BinOp(left=Constant(value=2), op=Pow(), right=Constant(value=32))])), Assign(targets=[Name(id='CONN_IDLE', ctx=Store())], value=Constant(value='IDLE')), Assign(targets=[Name(id='CONN_BOUND', ctx=Store())], value=Constant(value='BOUND')), Assign(targets=[Name(id='PROC_STATUSES', ctx=Store())], value=Dict(keys=[Attribute(value=Name(id='cext', ctx=Load()), attr='SSLEEP', ctx=Load()), Attribute(value=Name(id='cext', ctx=Load()), attr='SRUN', ctx=Load()), Attribute(value=Name(id='cext', ctx=Load()), attr='SZOMB', ctx=Load()), Attribute(value=Name(id='cext', ctx=Load()), attr='SSTOP', ctx=Load()), Attribute(value=Name(id='cext', ctx=Load()), attr='SIDL', ctx=Load()), Attribute(value=Name(id='cext', ctx=Load()), attr='SONPROC', ctx=Load()), Attribute(value=Name(id='cext', ctx=Load()), attr='SWAIT', ctx=Load())], values=[Attribute(value=Name(id='_common', ctx=Load()), attr='STATUS_SLEEPING', ctx=Load()), Attribute(value=Name(id='_common', ctx=Load()), attr='STATUS_RUNNING', ctx=Load()), Attribute(value=Name(id='_common', ctx=Load()), attr='STATUS_ZOMBIE', ctx=Load()), Attribute(value=Name(id='_common', ctx=Load()), attr='STATUS_STOPPED', ctx=Load()), Attribute(value=Name(id='_common', ctx=Load()), attr='STATUS_IDLE', ctx=Load()), Attribute(value=Name(id='_common', ctx=Load()), attr='STATUS_RUNNING', ctx=Load()), Attribute(value=Name(id='_common', ctx=Load()), attr='STATUS_WAITING', ctx=Load())])), Assign(targets=[Name(id='TCP_STATUSES', ctx=Store())], value=Dict(keys=[Attribute(value=Name(id='cext', ctx=Load()), attr='TCPS_ESTABLISHED', ctx=Load()), Attribute(value=Name(id='cext', ctx=Load()), attr='TCPS_SYN_SENT', ctx=Load()), Attribute(value=Name(id='cext', ctx=Load()), attr='TCPS_SYN_RCVD', ctx=Load()), Attribute(value=Name(id='cext', ctx=Load()), attr='TCPS_FIN_WAIT_1', ctx=Load()), Attribute(value=Name(id='cext', ctx=Load()), attr='TCPS_FIN_WAIT_2', ctx=Load()), Attribute(value=Name(id='cext', ctx=Load()), attr='TCPS_TIME_WAIT', ctx=Load()), Attribute(value=Name(id='cext', ctx=Load()), attr='TCPS_CLOSED', ctx=Load()), Attribute(value=Name(id='cext', ctx=Load()), attr='TCPS_CLOSE_WAIT', ctx=Load()), Attribute(value=Name(id='cext', ctx=Load()), attr='TCPS_LAST_ACK', ctx=Load()), Attribute(value=Name(id='cext', ctx=Load()), attr='TCPS_LISTEN', ctx=Load()), Attribute(value=Name(id='cext', ctx=Load()), attr='TCPS_CLOSING', ctx=Load()), Attribute(value=Name(id='cext', ctx=Load()), attr='PSUTIL_CONN_NONE', ctx=Load()), Attribute(value=Name(id='cext', ctx=Load()), attr='TCPS_IDLE', ctx=Load()), Attribute(value=Name(id='cext', ctx=Load()), attr='TCPS_BOUND', ctx=Load())], values=[Attribute(value=Name(id='_common', ctx=Load()), attr='CONN_ESTABLISHED', ctx=Load()), Attribute(value=Name(id='_common', ctx=Load()), attr='CONN_SYN_SENT', ctx=Load()), Attribute(value=Name(id='_common', ctx=Load()), attr='CONN_SYN_RECV', ctx=Load()), Attribute(value=Name(id='_common', ctx=Load()), attr='CONN_FIN_WAIT1', ctx=Load()), Attribute(value=Name(id='_common', ctx=Load()), attr='CONN_FIN_WAIT2', ctx=Load()), Attribute(value=Name(id='_common', ctx=Load()), attr='CONN_TIME_WAIT', ctx=Load()), Attribute(value=Name(id='_common', ctx=Load()), attr='CONN_CLOSE', ctx=Load()), Attribute(value=Name(id='_common', ctx=Load()), attr='CONN_CLOSE_WAIT', ctx=Load()), Attribute(value=Name(id='_common', ctx=Load()), attr='CONN_LAST_ACK', ctx=Load()), Attribute(value=Name(id='_common', ctx=Load()), attr='CONN_LISTEN', ctx=Load()), Attribute(value=Name(id='_common', ctx=Load()), attr='CONN_CLOSING', ctx=Load()), Attribute(value=Name(id='_common', ctx=Load()), attr='CONN_NONE', ctx=Load()), Name(id='CONN_IDLE', ctx=Load()), Name(id='CONN_BOUND', ctx=Load())])), Assign(targets=[Name(id='proc_info_map', ctx=Store())], value=Call(func=Name(id='dict', ctx=Load()), args=[], keywords=[keyword(arg='ppid', value=Constant(value=0)), keyword(arg='rss', value=Constant(value=1)), keyword(arg='vms', value=Constant(value=2)), keyword(arg='create_time', value=Constant(value=3)), keyword(arg='nice', value=Constant(value=4)), keyword(arg='num_threads', value=Constant(value=5)), keyword(arg='status', value=Constant(value=6)), keyword(arg='ttynr', value=Constant(value=7)), keyword(arg='uid', value=Constant(value=8)), keyword(arg='euid', value=Constant(value=9)), keyword(arg='gid', value=Constant(value=10)), keyword(arg='egid', value=Constant(value=11))])), Assign(targets=[Name(id='scputimes', ctx=Store())], value=Call(func=Name(id='namedtuple', ctx=Load()), args=[Constant(value='scputimes'), List(elts=[Constant(value='user'), Constant(value='system'), Constant(value='idle'), Constant(value='iowait')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='pcputimes', ctx=Store())], value=Call(func=Name(id='namedtuple', ctx=Load()), args=[Constant(value='pcputimes'), List(elts=[Constant(value='user'), Constant(value='system'), Constant(value='children_user'), Constant(value='children_system')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='svmem', ctx=Store())], value=Call(func=Name(id='namedtuple', ctx=Load()), args=[Constant(value='svmem'), List(elts=[Constant(value='total'), Constant(value='available'), Constant(value='percent'), Constant(value='used'), Constant(value='free')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='pmem', ctx=Store())], value=Call(func=Name(id='namedtuple', ctx=Load()), args=[Constant(value='pmem'), List(elts=[Constant(value='rss'), Constant(value='vms')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='pfullmem', ctx=Store())], value=Name(id='pmem', ctx=Load())), Assign(targets=[Name(id='pmmap_grouped', ctx=Store())], value=Call(func=Name(id='namedtuple', ctx=Load()), args=[Constant(value='pmmap_grouped'), List(elts=[Constant(value='path'), Constant(value='rss'), Constant(value='anonymous'), Constant(value='locked')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='pmmap_ext', ctx=Store())], value=Call(func=Name(id='namedtuple', ctx=Load()), args=[Constant(value='pmmap_ext'), BinOp(left=Constant(value='addr perms '), op=Add(), right=Call(func=Attribute(value=Constant(value=' '), attr='join', ctx=Load()), args=[Attribute(value=Name(id='pmmap_grouped', ctx=Load()), attr='_fields', ctx=Load())], keywords=[]))], keywords=[])), FunctionDef(name='virtual_memory', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Report virtual memory metrics.')), Assign(targets=[Name(id='total', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='sysconf', ctx=Load()), args=[Constant(value='SC_PHYS_PAGES')], keywords=[]), op=Mult(), right=Name(id='PAGE_SIZE', ctx=Load()))), Assign(targets=[Name(id='free', ctx=Store()), Name(id='avail', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='sysconf', ctx=Load()), args=[Constant(value='SC_AVPHYS_PAGES')], keywords=[]), op=Mult(), right=Name(id='PAGE_SIZE', ctx=Load()))), Assign(targets=[Name(id='used', ctx=Store())], value=BinOp(left=Name(id='total', ctx=Load()), op=Sub(), right=Name(id='free', ctx=Load()))), Assign(targets=[Name(id='percent', ctx=Store())], value=Call(func=Name(id='usage_percent', ctx=Load()), args=[Name(id='used', ctx=Load()), Name(id='total', ctx=Load())], keywords=[keyword(arg='round_', value=Constant(value=1))])), Return(value=Call(func=Name(id='svmem', ctx=Load()), args=[Name(id='total', ctx=Load()), Name(id='avail', ctx=Load()), Name(id='percent', ctx=Load()), Name(id='used', ctx=Load()), Name(id='free', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='swap_memory', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Report swap memory metrics.')), Assign(targets=[Tuple(elts=[Name(id='sin', ctx=Store()), Name(id='sout', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='cext', ctx=Load()), attr='swap_mem', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='subprocess', ctx=Load()), attr='Popen', ctx=Load()), args=[List(elts=[Constant(value='/usr/bin/env'), BinOp(left=Constant(value='PATH=/usr/sbin:/sbin:%s'), op=Mod(), right=Subscript(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), slice=Constant(value='PATH'), ctx=Load())), Constant(value='swap'), Constant(value='-l')], ctx=Load())], keywords=[keyword(arg='stdout', value=Attribute(value=Name(id='subprocess', ctx=Load()), attr='PIPE', ctx=Load()))])), Assign(targets=[Tuple(elts=[Name(id='stdout', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='communicate', ctx=Load()), args=[], keywords=[])), If(test=Name(id='PY3', ctx=Load()), body=[Assign(targets=[Name(id='stdout', ctx=Store())], value=Call(func=Attribute(value=Name(id='stdout', ctx=Load()), attr='decode', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='encoding', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='p', ctx=Load()), attr='returncode', ctx=Load()), ops=[NotEq()], comparators=[Constant(value=0)]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[BinOp(left=Constant(value="'swap -l' failed (retcode=%s)"), op=Mod(), right=Attribute(value=Name(id='p', ctx=Load()), attr='returncode', ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='lines', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='stdout', ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[]), attr='split', ctx=Load()), args=[Constant(value='\n')], keywords=[]), slice=Slice(lower=Constant(value=1)), ctx=Load())), If(test=UnaryOp(op=Not(), operand=Name(id='lines', ctx=Load())), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='no swap device(s) configured')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='total', ctx=Store()), Name(id='free', ctx=Store())], value=Constant(value=0)), For(target=Name(id='line', ctx=Store()), iter=Name(id='lines', ctx=Load()), body=[Assign(targets=[Name(id='line', ctx=Store())], value=Call(func=Attribute(value=Name(id='line', ctx=Load()), attr='split', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='t', ctx=Store()), Name(id='f', ctx=Store())], ctx=Store())], value=Subscript(value=Name(id='line', ctx=Load()), slice=Slice(lower=Constant(value=3), upper=Constant(value=5)), ctx=Load())), AugAssign(target=Name(id='total', ctx=Store()), op=Add(), value=Call(func=Name(id='int', ctx=Load()), args=[BinOp(left=Call(func=Name(id='int', ctx=Load()), args=[Name(id='t', ctx=Load())], keywords=[]), op=Mult(), right=Constant(value=512))], keywords=[])), AugAssign(target=Name(id='free', ctx=Store()), op=Add(), value=Call(func=Name(id='int', ctx=Load()), args=[BinOp(left=Call(func=Name(id='int', ctx=Load()), args=[Name(id='f', ctx=Load())], keywords=[]), op=Mult(), right=Constant(value=512))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='used', ctx=Store())], value=BinOp(left=Name(id='total', ctx=Load()), op=Sub(), right=Name(id='free', ctx=Load()))), Assign(targets=[Name(id='percent', ctx=Store())], value=Call(func=Name(id='usage_percent', ctx=Load()), args=[Name(id='used', ctx=Load()), Name(id='total', ctx=Load())], keywords=[keyword(arg='round_', value=Constant(value=1))])), Return(value=Call(func=Attribute(value=Name(id='_common', ctx=Load()), attr='sswap', ctx=Load()), args=[Name(id='total', ctx=Load()), Name(id='used', ctx=Load()), Name(id='free', ctx=Load()), Name(id='percent', ctx=Load()), BinOp(left=Name(id='sin', ctx=Load()), op=Mult(), right=Name(id='PAGE_SIZE', ctx=Load())), BinOp(left=Name(id='sout', ctx=Load()), op=Mult(), right=Name(id='PAGE_SIZE', ctx=Load()))], keywords=[]))], decorator_list=[]), FunctionDef(name='cpu_times', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Return system-wide CPU times as a named tuple.')), Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Attribute(value=Name(id='cext', ctx=Load()), attr='per_cpu_times', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Name(id='scputimes', ctx=Load()), args=[Starred(value=ListComp(elt=Call(func=Name(id='sum', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Call(func=Name(id='zip', ctx=Load()), args=[Starred(value=Name(id='ret', ctx=Load()), ctx=Load())], keywords=[]), ifs=[], is_async=0)]), ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='per_cpu_times', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Return system per-CPU times as a list of named tuples.')), Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Attribute(value=Name(id='cext', ctx=Load()), attr='per_cpu_times', ctx=Load()), args=[], keywords=[])), Return(value=ListComp(elt=Call(func=Name(id='scputimes', ctx=Load()), args=[Starred(value=Name(id='x', ctx=Load()), ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Name(id='ret', ctx=Load()), ifs=[], is_async=0)]))], decorator_list=[]), FunctionDef(name='cpu_count_logical', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Return the number of logical CPUs in the system.')), Try(body=[Return(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='sysconf', ctx=Load()), args=[Constant(value='SC_NPROCESSORS_ONLN')], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ValueError', ctx=Load()), body=[Return(value=Constant(value=None))])], orelse=[], finalbody=[])], decorator_list=[]), FunctionDef(name='cpu_count_cores', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Return the number of CPU cores in the system.')), Return(value=Call(func=Attribute(value=Name(id='cext', ctx=Load()), attr='cpu_count_cores', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='cpu_stats', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Return various CPU stats as a named tuple.')), Assign(targets=[Tuple(elts=[Name(id='ctx_switches', ctx=Store()), Name(id='interrupts', ctx=Store()), Name(id='syscalls', ctx=Store()), Name(id='traps', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='cext', ctx=Load()), attr='cpu_stats', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='soft_interrupts', ctx=Store())], value=Constant(value=0)), Return(value=Call(func=Attribute(value=Name(id='_common', ctx=Load()), attr='scpustats', ctx=Load()), args=[Name(id='ctx_switches', ctx=Load()), Name(id='interrupts', ctx=Load()), Name(id='soft_interrupts', ctx=Load()), Name(id='syscalls', ctx=Load())], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='disk_io_counters', ctx=Store())], value=Attribute(value=Name(id='cext', ctx=Load()), attr='disk_io_counters', ctx=Load())), Assign(targets=[Name(id='disk_usage', ctx=Store())], value=Attribute(value=Name(id='_psposix', ctx=Load()), attr='disk_usage', ctx=Load())), FunctionDef(name='disk_partitions', args=arguments(posonlyargs=[], args=[arg(arg='all')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Expr(value=Constant(value='Return system disk partitions.')), Assign(targets=[Name(id='retlist', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='partitions', ctx=Store())], value=Call(func=Attribute(value=Name(id='cext', ctx=Load()), attr='disk_partitions', ctx=Load()), args=[], keywords=[])), For(target=Name(id='partition', ctx=Store()), iter=Name(id='partitions', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='device', ctx=Store()), Name(id='mountpoint', ctx=Store()), Name(id='fstype', ctx=Store()), Name(id='opts', ctx=Store())], ctx=Store())], value=Name(id='partition', ctx=Load())), If(test=Compare(left=Name(id='device', ctx=Load()), ops=[Eq()], comparators=[Constant(value='none')]), body=[Assign(targets=[Name(id='device', ctx=Store())], value=Constant(value=''))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='all', ctx=Load())), body=[Try(body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Call(func=Name(id='disk_usage', ctx=Load()), args=[Name(id='mountpoint', ctx=Load())], keywords=[]), attr='total', ctx=Load())), body=[Continue()], orelse=[])], handlers=[ExceptHandler(type=Name(id='OSError', ctx=Load()), name='err', body=[Expr(value=Call(func=Name(id='debug', ctx=Load()), args=[BinOp(left=Constant(value='skipping %r: %s'), op=Mod(), right=Tuple(elts=[Name(id='mountpoint', ctx=Load()), Name(id='err', ctx=Load())], ctx=Load()))], keywords=[])), Continue()])], orelse=[], finalbody=[])], orelse=[]), Assign(targets=[Name(id='maxfile', ctx=Store()), Name(id='maxpath', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='ntuple', ctx=Store())], value=Call(func=Attribute(value=Name(id='_common', ctx=Load()), attr='sdiskpart', ctx=Load()), args=[Name(id='device', ctx=Load()), Name(id='mountpoint', ctx=Load()), Name(id='fstype', ctx=Load()), Name(id='opts', ctx=Load()), Name(id='maxfile', ctx=Load()), Name(id='maxpath', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='retlist', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='ntuple', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='retlist', ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='net_io_counters', ctx=Store())], value=Attribute(value=Name(id='cext', ctx=Load()), attr='net_io_counters', ctx=Load())), Assign(targets=[Name(id='net_if_addrs', ctx=Store())], value=Attribute(value=Name(id='cext_posix', ctx=Load()), attr='net_if_addrs', ctx=Load())), FunctionDef(name='net_connections', args=arguments(posonlyargs=[], args=[arg(arg='kind'), arg(arg='_pid')], kwonlyargs=[], kw_defaults=[], defaults=[UnaryOp(op=USub(), operand=Constant(value=1))]), body=[Expr(value=Constant(value='Return socket connections.  If pid == -1 return system-wide\n    connections (as opposed to connections opened by one process only).\n    Only INET sockets are returned (UNIX are not).\n    ')), Assign(targets=[Name(id='cmap', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='_common', ctx=Load()), attr='conn_tmap', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='_pid', ctx=Load()), ops=[Eq()], comparators=[UnaryOp(op=USub(), operand=Constant(value=1))]), body=[Expr(value=Call(func=Attribute(value=Name(id='cmap', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='unix'), Constant(value=0)], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='kind', ctx=Load()), ops=[NotIn()], comparators=[Name(id='cmap', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='invalid %r kind argument; choose between %s'), op=Mod(), right=Tuple(elts=[Name(id='kind', ctx=Load()), Call(func=Attribute(value=Constant(value=', '), attr='join', ctx=Load()), args=[ListComp(elt=Call(func=Name(id='repr', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Name(id='cmap', ctx=Load()), ifs=[], is_async=0)])], keywords=[])], ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Tuple(elts=[Name(id='families', ctx=Store()), Name(id='types', ctx=Store())], ctx=Store())], value=Subscript(value=Attribute(value=Name(id='_common', ctx=Load()), attr='conn_tmap', ctx=Load()), slice=Name(id='kind', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='rawlist', ctx=Store())], value=Call(func=Attribute(value=Name(id='cext', ctx=Load()), attr='net_connections', ctx=Load()), args=[Name(id='_pid', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), For(target=Name(id='item', ctx=Store()), iter=Name(id='rawlist', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='fd', ctx=Store()), Name(id='fam', ctx=Store()), Name(id='type_', ctx=Store()), Name(id='laddr', ctx=Store()), Name(id='raddr', ctx=Store()), Name(id='status', ctx=Store()), Name(id='pid', ctx=Store())], ctx=Store())], value=Name(id='item', ctx=Load())), If(test=Compare(left=Name(id='fam', ctx=Load()), ops=[NotIn()], comparators=[Name(id='families', ctx=Load())]), body=[Continue()], orelse=[]), If(test=Compare(left=Name(id='type_', ctx=Load()), ops=[NotIn()], comparators=[Name(id='types', ctx=Load())]), body=[Continue()], orelse=[]), If(test=Compare(left=Name(id='fam', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Name(id='AF_INET', ctx=Load()), Name(id='AF_INET6', ctx=Load())], ctx=Load())]), body=[If(test=Name(id='laddr', ctx=Load()), body=[Assign(targets=[Name(id='laddr', ctx=Store())], value=Call(func=Attribute(value=Name(id='_common', ctx=Load()), attr='addr', ctx=Load()), args=[Starred(value=Name(id='laddr', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[]), If(test=Name(id='raddr', ctx=Load()), body=[Assign(targets=[Name(id='raddr', ctx=Store())], value=Call(func=Attribute(value=Name(id='_common', ctx=Load()), attr='addr', ctx=Load()), args=[Starred(value=Name(id='raddr', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Assign(targets=[Name(id='status', ctx=Store())], value=Subscript(value=Name(id='TCP_STATUSES', ctx=Load()), slice=Name(id='status', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='fam', ctx=Store())], value=Call(func=Name(id='sockfam_to_enum', ctx=Load()), args=[Name(id='fam', ctx=Load())], keywords=[])), Assign(targets=[Name(id='type_', ctx=Store())], value=Call(func=Name(id='socktype_to_enum', ctx=Load()), args=[Name(id='type_', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='_pid', ctx=Load()), ops=[Eq()], comparators=[UnaryOp(op=USub(), operand=Constant(value=1))]), body=[Assign(targets=[Name(id='nt', ctx=Store())], value=Call(func=Attribute(value=Name(id='_common', ctx=Load()), attr='sconn', ctx=Load()), args=[Name(id='fd', ctx=Load()), Name(id='fam', ctx=Load()), Name(id='type_', ctx=Load()), Name(id='laddr', ctx=Load()), Name(id='raddr', ctx=Load()), Name(id='status', ctx=Load()), Name(id='pid', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='nt', ctx=Store())], value=Call(func=Attribute(value=Name(id='_common', ctx=Load()), attr='pconn', ctx=Load()), args=[Name(id='fd', ctx=Load()), Name(id='fam', ctx=Load()), Name(id='type_', ctx=Load()), Name(id='laddr', ctx=Load()), Name(id='raddr', ctx=Load()), Name(id='status', ctx=Load())], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='ret', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='nt', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='list', ctx=Load()), args=[Name(id='ret', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='net_if_stats', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get NIC stats (isup, duplex, speed, mtu).')), Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Attribute(value=Name(id='cext', ctx=Load()), attr='net_if_stats', ctx=Load()), args=[], keywords=[])), For(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='items', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='ret', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='isup', ctx=Store()), Name(id='duplex', ctx=Store()), Name(id='speed', ctx=Store()), Name(id='mtu', ctx=Store())], ctx=Store())], value=Name(id='items', ctx=Load())), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='_common', ctx=Load()), Constant(value='NicDuplex')], keywords=[]), body=[Assign(targets=[Name(id='duplex', ctx=Store())], value=Call(func=Attribute(value=Name(id='_common', ctx=Load()), attr='NicDuplex', ctx=Load()), args=[Name(id='duplex', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Name(id='ret', ctx=Load()), slice=Name(id='name', ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Name(id='_common', ctx=Load()), attr='snicstats', ctx=Load()), args=[Name(id='isup', ctx=Load()), Name(id='duplex', ctx=Load()), Name(id='speed', ctx=Load()), Name(id='mtu', ctx=Load()), Constant(value='')], keywords=[]))], orelse=[]), Return(value=Name(id='ret', ctx=Load()))], decorator_list=[]), FunctionDef(name='boot_time', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='The system boot time expressed in seconds since the epoch.')), Return(value=Call(func=Attribute(value=Name(id='cext', ctx=Load()), attr='boot_time', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='users', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Return currently connected users as a list of namedtuples.')), Assign(targets=[Name(id='retlist', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='rawlist', ctx=Store())], value=Call(func=Attribute(value=Name(id='cext', ctx=Load()), attr='users', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='localhost', ctx=Store())], value=Tuple(elts=[Constant(value=':0.0'), Constant(value=':0')], ctx=Load())), For(target=Name(id='item', ctx=Store()), iter=Name(id='rawlist', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='user', ctx=Store()), Name(id='tty', ctx=Store()), Name(id='hostname', ctx=Store()), Name(id='tstamp', ctx=Store()), Name(id='user_process', ctx=Store()), Name(id='pid', ctx=Store())], ctx=Store())], value=Name(id='item', ctx=Load())), If(test=UnaryOp(op=Not(), operand=Name(id='user_process', ctx=Load())), body=[Continue()], orelse=[]), If(test=Compare(left=Name(id='hostname', ctx=Load()), ops=[In()], comparators=[Name(id='localhost', ctx=Load())]), body=[Assign(targets=[Name(id='hostname', ctx=Store())], value=Constant(value='localhost'))], orelse=[]), Assign(targets=[Name(id='nt', ctx=Store())], value=Call(func=Attribute(value=Name(id='_common', ctx=Load()), attr='suser', ctx=Load()), args=[Name(id='user', ctx=Load()), Name(id='tty', ctx=Load()), Name(id='hostname', ctx=Load()), Name(id='tstamp', ctx=Load()), Name(id='pid', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='retlist', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='nt', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='retlist', ctx=Load()))], decorator_list=[]), FunctionDef(name='pids', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Returns a list of PIDs currently running on the system.')), Return(value=ListComp(elt=Call(func=Name(id='int', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Call(func=Name(id='b', ctx=Load()), args=[Call(func=Name(id='get_procfs_path', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[]), ifs=[Call(func=Attribute(value=Name(id='x', ctx=Load()), attr='isdigit', ctx=Load()), args=[], keywords=[])], is_async=0)]))], decorator_list=[]), FunctionDef(name='pid_exists', args=arguments(posonlyargs=[], args=[arg(arg='pid')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Check for the existence of a unix pid.')), Return(value=Call(func=Attribute(value=Name(id='_psposix', ctx=Load()), attr='pid_exists', ctx=Load()), args=[Name(id='pid', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='wrap_exceptions', args=arguments(posonlyargs=[], args=[arg(arg='fun')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Call callable into a try/except clause and translate ENOENT,\n    EACCES and EPERM in NoSuchProcess or AccessDenied exceptions.\n    ')), FunctionDef(name='wrapper', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Try(body=[Return(value=Call(func=Name(id='fun', ctx=Load()), args=[Name(id='self', ctx=Load()), Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], handlers=[ExceptHandler(type=Tuple(elts=[Name(id='FileNotFoundError', ctx=Load()), Name(id='ProcessLookupError', ctx=Load())], ctx=Load()), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='pid_exists', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='NoSuchProcess', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_name', ctx=Load())], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='ZombieProcess', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_name', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_ppid', ctx=Load())], keywords=[]))])]), ExceptHandler(type=Name(id='PermissionError', ctx=Load()), body=[Raise(exc=Call(func=Name(id='AccessDenied', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_name', ctx=Load())], keywords=[]))]), ExceptHandler(type=Name(id='OSError', ctx=Load()), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[If(test=Compare(left=Constant(value=0), ops=[In()], comparators=[Call(func=Name(id='pids', ctx=Load()), args=[], keywords=[])]), body=[Raise(exc=Call(func=Name(id='AccessDenied', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_name', ctx=Load())], keywords=[]))], orelse=[Raise()])], orelse=[]), Raise()])], orelse=[], finalbody=[])], decorator_list=[Call(func=Attribute(value=Name(id='functools', ctx=Load()), attr='wraps', ctx=Load()), args=[Name(id='fun', ctx=Load())], keywords=[])]), Return(value=Name(id='wrapper', ctx=Load()))], decorator_list=[]), ClassDef(name='Process', bases=[], keywords=[], body=[Expr(value=Constant(value='Wrapper class around underlying C implementation.')), Assign(targets=[Name(id='__slots__', ctx=Store())], value=List(elts=[Constant(value='pid'), Constant(value='_name'), Constant(value='_ppid'), Constant(value='_procfs_path'), Constant(value='_cache')], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='pid')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Store())], value=Name(id='pid', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_name', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_ppid', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_procfs_path', ctx=Store())], value=Call(func=Name(id='get_procfs_path', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='_assert_alive', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Raise NSP if the process disappeared on us.')), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='stat', ctx=Load()), args=[BinOp(left=Constant(value='%s/%s'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='_procfs_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load())], ctx=Load()))], keywords=[]))], decorator_list=[]), FunctionDef(name='oneshot_enter', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_name_and_args', ctx=Load()), attr='cache_activate', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_basic_info', ctx=Load()), attr='cache_activate', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_cred', ctx=Load()), attr='cache_activate', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='oneshot_exit', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_name_and_args', ctx=Load()), attr='cache_deactivate', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_basic_info', ctx=Load()), attr='cache_deactivate', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_cred', ctx=Load()), attr='cache_deactivate', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_proc_name_and_args', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='cext', ctx=Load()), attr='proc_name_and_args', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_procfs_path', ctx=Load())], keywords=[]))], decorator_list=[Name(id='wrap_exceptions', ctx=Load()), Name(id='memoize_when_activated', ctx=Load())]), FunctionDef(name='_proc_basic_info', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[BinOp(left=Constant(value='%s/%s/psinfo'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='_procfs_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load())], ctx=Load()))], keywords=[]))]), body=[Raise(exc=Call(func=Name(id='AccessDenied', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Attribute(value=Name(id='cext', ctx=Load()), attr='proc_basic_info', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_procfs_path', ctx=Load())], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='ret', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='proc_info_map', ctx=Load())], keywords=[])])), Return(value=Name(id='ret', ctx=Load()))], decorator_list=[Name(id='wrap_exceptions', ctx=Load()), Name(id='memoize_when_activated', ctx=Load())]), FunctionDef(name='_proc_cred', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='cext', ctx=Load()), attr='proc_cred', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_procfs_path', ctx=Load())], keywords=[]))], decorator_list=[Name(id='wrap_exceptions', ctx=Load()), Name(id='memoize_when_activated', ctx=Load())]), FunctionDef(name='name', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Subscript(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_name_and_args', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load()))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='exe', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Return(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='readlink', ctx=Load()), args=[BinOp(left=Constant(value='%s/%s/path/a.out'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='_procfs_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load())], ctx=Load()))], keywords=[]))], handlers=[ExceptHandler(type=Name(id='OSError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='cmdline', ctx=Load()), args=[], keywords=[])), Return(value=Constant(value=''))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='cmdline', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Subscript(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_name_and_args', ctx=Load()), args=[], keywords=[]), slice=Constant(value=1), ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=' ')], keywords=[]))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='environ', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='cext', ctx=Load()), attr='proc_environ', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_procfs_path', ctx=Load())], keywords=[]))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='create_time', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Subscript(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_basic_info', ctx=Load()), args=[], keywords=[]), slice=Subscript(value=Name(id='proc_info_map', ctx=Load()), slice=Constant(value='create_time'), ctx=Load()), ctx=Load()))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='num_threads', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Subscript(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_basic_info', ctx=Load()), args=[], keywords=[]), slice=Subscript(value=Name(id='proc_info_map', ctx=Load()), slice=Constant(value='num_threads'), ctx=Load()), ctx=Load()))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='nice_get', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Subscript(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_basic_info', ctx=Load()), args=[], keywords=[]), slice=Subscript(value=Name(id='proc_info_map', ctx=Load()), slice=Constant(value='nice'), ctx=Load()), ctx=Load()))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='nice_set', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='value')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value=2), Constant(value=3)], ctx=Load())]), body=[Raise(exc=Call(func=Name(id='AccessDenied', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_name', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='cext_posix', ctx=Load()), attr='setpriority', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='ppid', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_ppid', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_basic_info', ctx=Load()), args=[], keywords=[]), slice=Subscript(value=Name(id='proc_info_map', ctx=Load()), slice=Constant(value='ppid'), ctx=Load()), ctx=Load())), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_ppid', ctx=Load()))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='uids', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Assign(targets=[Tuple(elts=[Name(id='real', ctx=Store()), Name(id='effective', ctx=Store()), Name(id='saved', ctx=Store()), Name(id='_', ctx=Store()), Name(id='_', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_cred', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Name(id='AccessDenied', ctx=Load()), body=[Assign(targets=[Name(id='real', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_basic_info', ctx=Load()), args=[], keywords=[]), slice=Subscript(value=Name(id='proc_info_map', ctx=Load()), slice=Constant(value='uid'), ctx=Load()), ctx=Load())), Assign(targets=[Name(id='effective', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_basic_info', ctx=Load()), args=[], keywords=[]), slice=Subscript(value=Name(id='proc_info_map', ctx=Load()), slice=Constant(value='euid'), ctx=Load()), ctx=Load())), Assign(targets=[Name(id='saved', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[]), Return(value=Call(func=Attribute(value=Name(id='_common', ctx=Load()), attr='puids', ctx=Load()), args=[Name(id='real', ctx=Load()), Name(id='effective', ctx=Load()), Name(id='saved', ctx=Load())], keywords=[]))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='gids', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Assign(targets=[Tuple(elts=[Name(id='_', ctx=Store()), Name(id='_', ctx=Store()), Name(id='_', ctx=Store()), Name(id='real', ctx=Store()), Name(id='effective', ctx=Store()), Name(id='saved', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_cred', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Name(id='AccessDenied', ctx=Load()), body=[Assign(targets=[Name(id='real', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_basic_info', ctx=Load()), args=[], keywords=[]), slice=Subscript(value=Name(id='proc_info_map', ctx=Load()), slice=Constant(value='gid'), ctx=Load()), ctx=Load())), Assign(targets=[Name(id='effective', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_basic_info', ctx=Load()), args=[], keywords=[]), slice=Subscript(value=Name(id='proc_info_map', ctx=Load()), slice=Constant(value='egid'), ctx=Load()), ctx=Load())), Assign(targets=[Name(id='saved', ctx=Store())], value=Constant(value=None))])], orelse=[], finalbody=[]), Return(value=Call(func=Attribute(value=Name(id='_common', ctx=Load()), attr='puids', ctx=Load()), args=[Name(id='real', ctx=Load()), Name(id='effective', ctx=Load()), Name(id='saved', ctx=Load())], keywords=[]))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='cpu_times', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Assign(targets=[Name(id='times', ctx=Store())], value=Call(func=Attribute(value=Name(id='cext', ctx=Load()), attr='proc_cpu_times', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_procfs_path', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='OSError', ctx=Load()), name='err', body=[If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='err', ctx=Load()), attr='errno', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='errno', ctx=Load()), attr='EOVERFLOW', ctx=Load())]), UnaryOp(op=Not(), operand=Name(id='IS_64_BIT', ctx=Load()))]), body=[Assign(targets=[Name(id='times', ctx=Store())], value=Tuple(elts=[Constant(value=0.0), Constant(value=0.0), Constant(value=0.0), Constant(value=0.0)], ctx=Load()))], orelse=[Raise()])])], orelse=[], finalbody=[]), Return(value=Call(func=Attribute(value=Name(id='_common', ctx=Load()), attr='pcputimes', ctx=Load()), args=[Starred(value=Name(id='times', ctx=Load()), ctx=Load())], keywords=[]))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='cpu_num', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='cext', ctx=Load()), attr='proc_cpu_num', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_procfs_path', ctx=Load())], keywords=[]))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='terminal', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='procfs_path', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_procfs_path', ctx=Load())), Assign(targets=[Name(id='hit_enoent', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='tty', ctx=Store())], value=Call(func=Name(id='wrap_exceptions', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_basic_info', ctx=Load()), args=[], keywords=[]), slice=Subscript(value=Name(id='proc_info_map', ctx=Load()), slice=Constant(value='ttynr'), ctx=Load()), ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='tty', ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='cext', ctx=Load()), attr='PRNODEV', ctx=Load())]), body=[For(target=Name(id='x', ctx=Store()), iter=Tuple(elts=[Constant(value=0), Constant(value=1), Constant(value=2), Constant(value=255)], ctx=Load()), body=[Try(body=[Return(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='readlink', ctx=Load()), args=[BinOp(left=Constant(value='%s/%d/path/%d'), op=Mod(), right=Tuple(elts=[Name(id='procfs_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Name(id='x', ctx=Load())], ctx=Load()))], keywords=[]))], handlers=[ExceptHandler(type=Name(id='FileNotFoundError', ctx=Load()), body=[Assign(targets=[Name(id='hit_enoent', ctx=Store())], value=Constant(value=True)), Continue()])], orelse=[], finalbody=[])], orelse=[])], orelse=[]), If(test=Name(id='hit_enoent', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_assert_alive', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='cwd', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='procfs_path', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_procfs_path', ctx=Load())), Try(body=[Return(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='readlink', ctx=Load()), args=[BinOp(left=Constant(value='%s/%s/path/cwd'), op=Mod(), right=Tuple(elts=[Name(id='procfs_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load())], ctx=Load()))], keywords=[]))], handlers=[ExceptHandler(type=Name(id='FileNotFoundError', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='stat', ctx=Load()), args=[BinOp(left=Constant(value='%s/%s'), op=Mod(), right=Tuple(elts=[Name(id='procfs_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load())], ctx=Load()))], keywords=[])), Return(value=Constant(value=''))])], orelse=[], finalbody=[])], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='memory_info', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_basic_info', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='rss', ctx=Store())], value=BinOp(left=Subscript(value=Name(id='ret', ctx=Load()), slice=Subscript(value=Name(id='proc_info_map', ctx=Load()), slice=Constant(value='rss'), ctx=Load()), ctx=Load()), op=Mult(), right=Constant(value=1024))), Assign(targets=[Name(id='vms', ctx=Store())], value=BinOp(left=Subscript(value=Name(id='ret', ctx=Load()), slice=Subscript(value=Name(id='proc_info_map', ctx=Load()), slice=Constant(value='vms'), ctx=Load()), ctx=Load()), op=Mult(), right=Constant(value=1024))), Return(value=Call(func=Name(id='pmem', ctx=Load()), args=[Name(id='rss', ctx=Load()), Name(id='vms', ctx=Load())], keywords=[]))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), Assign(targets=[Name(id='memory_full_info', ctx=Store())], value=Name(id='memory_info', ctx=Load())), FunctionDef(name='status', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='code', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_proc_basic_info', ctx=Load()), args=[], keywords=[]), slice=Subscript(value=Name(id='proc_info_map', ctx=Load()), slice=Constant(value='status'), ctx=Load()), ctx=Load())), Return(value=Call(func=Attribute(value=Name(id='PROC_STATUSES', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='code', ctx=Load()), Constant(value='?')], keywords=[]))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='threads', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='procfs_path', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_procfs_path', ctx=Load())), Assign(targets=[Name(id='ret', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='tids', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[BinOp(left=Constant(value='%s/%d/lwp'), op=Mod(), right=Tuple(elts=[Name(id='procfs_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load())], ctx=Load()))], keywords=[])), Assign(targets=[Name(id='hit_enoent', ctx=Store())], value=Constant(value=False)), For(target=Name(id='tid', ctx=Store()), iter=Name(id='tids', ctx=Load()), body=[Assign(targets=[Name(id='tid', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Name(id='tid', ctx=Load())], keywords=[])), Try(body=[Assign(targets=[Tuple(elts=[Name(id='utime', ctx=Store()), Name(id='stime', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='cext', ctx=Load()), attr='query_process_thread', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Name(id='tid', ctx=Load()), Name(id='procfs_path', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='EnvironmentError', ctx=Load()), name='err', body=[If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='err', ctx=Load()), attr='errno', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='errno', ctx=Load()), attr='EOVERFLOW', ctx=Load())]), UnaryOp(op=Not(), operand=Name(id='IS_64_BIT', ctx=Load()))]), body=[Continue()], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='err', ctx=Load()), attr='errno', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='errno', ctx=Load()), attr='ENOENT', ctx=Load())]), body=[Assign(targets=[Name(id='hit_enoent', ctx=Store())], value=Constant(value=True)), Continue()], orelse=[]), Raise()])], orelse=[Assign(targets=[Name(id='nt', ctx=Store())], value=Call(func=Attribute(value=Name(id='_common', ctx=Load()), attr='pthread', ctx=Load()), args=[Name(id='tid', ctx=Load()), Name(id='utime', ctx=Load()), Name(id='stime', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ret', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='nt', ctx=Load())], keywords=[]))], finalbody=[])], orelse=[]), If(test=Name(id='hit_enoent', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_assert_alive', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Name(id='ret', ctx=Load()))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='open_files', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='retlist', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='hit_enoent', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='procfs_path', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_procfs_path', ctx=Load())), Assign(targets=[Name(id='pathdir', ctx=Store())], value=BinOp(left=Constant(value='%s/%d/path'), op=Mod(), right=Tuple(elts=[Name(id='procfs_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load())], ctx=Load()))), For(target=Name(id='fd', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[BinOp(left=Constant(value='%s/%d/fd'), op=Mod(), right=Tuple(elts=[Name(id='procfs_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load())], ctx=Load()))], keywords=[]), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='pathdir', ctx=Load()), Name(id='fd', ctx=Load())], keywords=[])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='islink', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]), body=[Try(body=[Assign(targets=[Name(id='file', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='readlink', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='FileNotFoundError', ctx=Load()), body=[Assign(targets=[Name(id='hit_enoent', ctx=Store())], value=Constant(value=True)), Continue()])], orelse=[If(test=Call(func=Name(id='isfile_strict', ctx=Load()), args=[Name(id='file', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='retlist', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='_common', ctx=Load()), attr='popenfile', ctx=Load()), args=[Name(id='file', ctx=Load()), Call(func=Name(id='int', ctx=Load()), args=[Name(id='fd', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[])], finalbody=[])], orelse=[])], orelse=[]), If(test=Name(id='hit_enoent', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_assert_alive', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Name(id='retlist', ctx=Load()))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='_get_unix_sockets', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='pid')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="Get UNIX sockets used by process by parsing 'pfiles' output.")), Assign(targets=[Name(id='cmd', ctx=Store())], value=List(elts=[Constant(value='pfiles'), Call(func=Name(id='str', ctx=Load()), args=[Name(id='pid', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='subprocess', ctx=Load()), attr='Popen', ctx=Load()), args=[Name(id='cmd', ctx=Load())], keywords=[keyword(arg='stdout', value=Attribute(value=Name(id='subprocess', ctx=Load()), attr='PIPE', ctx=Load())), keyword(arg='stderr', value=Attribute(value=Name(id='subprocess', ctx=Load()), attr='PIPE', ctx=Load()))])), Assign(targets=[Tuple(elts=[Name(id='stdout', ctx=Store()), Name(id='stderr', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='communicate', ctx=Load()), args=[], keywords=[])), If(test=Name(id='PY3', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='stdout', ctx=Store()), Name(id='stderr', ctx=Store())], ctx=Store())], value=GeneratorExp(elt=Call(func=Attribute(value=Name(id='x', ctx=Load()), attr='decode', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='encoding', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Tuple(elts=[Name(id='stdout', ctx=Load()), Name(id='stderr', ctx=Load())], ctx=Load()), ifs=[], is_async=0)]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='p', ctx=Load()), attr='returncode', ctx=Load()), ops=[NotEq()], comparators=[Constant(value=0)]), body=[If(test=Compare(left=Constant(value='permission denied'), ops=[In()], comparators=[Call(func=Attribute(value=Name(id='stderr', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])]), body=[Raise(exc=Call(func=Name(id='AccessDenied', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_name', ctx=Load())], keywords=[]))], orelse=[]), If(test=Compare(left=Constant(value='no such process'), ops=[In()], comparators=[Call(func=Attribute(value=Name(id='stderr', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])]), body=[Raise(exc=Call(func=Name(id='NoSuchProcess', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_name', ctx=Load())], keywords=[]))], orelse=[]), Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[BinOp(left=Constant(value='%r command error\n%s'), op=Mod(), right=Tuple(elts=[Name(id='cmd', ctx=Load()), Name(id='stderr', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='lines', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='stdout', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='\n')], keywords=[]), slice=Slice(lower=Constant(value=2)), ctx=Load())), For(target=Tuple(elts=[Name(id='i', ctx=Store()), Name(id='line', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='lines', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='line', ctx=Store())], value=Call(func=Attribute(value=Name(id='line', ctx=Load()), attr='lstrip', ctx=Load()), args=[], keywords=[])), If(test=Call(func=Attribute(value=Name(id='line', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='sockname: AF_UNIX')], keywords=[]), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='line', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=' '), Constant(value=2)], keywords=[]), slice=Constant(value=2), ctx=Load())), Assign(targets=[Name(id='type', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='lines', ctx=Load()), slice=BinOp(left=Name(id='i', ctx=Load()), op=Sub(), right=Constant(value=2)), ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='SOCK_STREAM')]), body=[Assign(targets=[Name(id='type', ctx=Store())], value=Attribute(value=Name(id='socket', ctx=Load()), attr='SOCK_STREAM', ctx=Load()))], orelse=[If(test=Compare(left=Name(id='type', ctx=Load()), ops=[Eq()], comparators=[Constant(value='SOCK_DGRAM')]), body=[Assign(targets=[Name(id='type', ctx=Store())], value=Attribute(value=Name(id='socket', ctx=Load()), attr='SOCK_DGRAM', ctx=Load()))], orelse=[Assign(targets=[Name(id='type', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=1)))])]), Expr(value=Yield(value=Tuple(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), Attribute(value=Name(id='socket', ctx=Load()), attr='AF_UNIX', ctx=Load()), Name(id='type', ctx=Load()), Name(id='path', ctx=Load()), Constant(value=''), Attribute(value=Name(id='_common', ctx=Load()), attr='CONN_NONE', ctx=Load())], ctx=Load())))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='connections', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='kind')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='inet')]), body=[Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Name(id='net_connections', ctx=Load()), args=[Name(id='kind', ctx=Load())], keywords=[keyword(arg='_pid', value=Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()))])), If(test=UnaryOp(op=Not(), operand=Name(id='ret', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='stat', ctx=Load()), args=[BinOp(left=Constant(value='%s/%s'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='_procfs_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='kind', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='all'), Constant(value='unix')], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='ret', ctx=Load()), attr='extend', ctx=Load()), args=[ListComp(elt=Call(func=Attribute(value=Name(id='_common', ctx=Load()), attr='pconn', ctx=Load()), args=[Starred(value=Name(id='conn', ctx=Load()), ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='conn', ctx=Store()), iter=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_unix_sockets', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load())], keywords=[]), ifs=[], is_async=0)])], keywords=[]))], orelse=[]), Return(value=Name(id='ret', ctx=Load()))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), Assign(targets=[Name(id='nt_mmap_grouped', ctx=Store())], value=Call(func=Name(id='namedtuple', ctx=Load()), args=[Constant(value='mmap'), Constant(value='path rss anon locked')], keywords=[])), Assign(targets=[Name(id='nt_mmap_ext', ctx=Store())], value=Call(func=Name(id='namedtuple', ctx=Load()), args=[Constant(value='mmap'), Constant(value='addr perms path rss anon locked')], keywords=[])), FunctionDef(name='memory_maps', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='toaddr', args=arguments(posonlyargs=[], args=[arg(arg='start'), arg(arg='end')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BinOp(left=Constant(value='%s-%s'), op=Mod(), right=Tuple(elts=[Call(func=Attribute(value=Subscript(value=Call(func=Name(id='hex', ctx=Load()), args=[Name(id='start', ctx=Load())], keywords=[]), slice=Slice(lower=Constant(value=2)), ctx=Load()), attr='strip', ctx=Load()), args=[Constant(value='L')], keywords=[]), Call(func=Attribute(value=Subscript(value=Call(func=Name(id='hex', ctx=Load()), args=[Name(id='end', ctx=Load())], keywords=[]), slice=Slice(lower=Constant(value=2)), ctx=Load()), attr='strip', ctx=Load()), args=[Constant(value='L')], keywords=[])], ctx=Load())))], decorator_list=[]), Assign(targets=[Name(id='procfs_path', ctx=Store())], value=Attribute(value=Name(id='self', ctx=Load()), attr='_procfs_path', ctx=Load())), Assign(targets=[Name(id='retlist', ctx=Store())], value=List(elts=[], ctx=Load())), Try(body=[Assign(targets=[Name(id='rawlist', ctx=Store())], value=Call(func=Attribute(value=Name(id='cext', ctx=Load()), attr='proc_memory_maps', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Name(id='procfs_path', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='OSError', ctx=Load()), name='err', body=[If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='err', ctx=Load()), attr='errno', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='errno', ctx=Load()), attr='EOVERFLOW', ctx=Load())]), UnaryOp(op=Not(), operand=Name(id='IS_64_BIT', ctx=Load()))]), body=[Return(value=List(elts=[], ctx=Load()))], orelse=[Raise()])])], orelse=[], finalbody=[]), Assign(targets=[Name(id='hit_enoent', ctx=Store())], value=Constant(value=False)), For(target=Name(id='item', ctx=Store()), iter=Name(id='rawlist', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='addr', ctx=Store()), Name(id='addrsize', ctx=Store()), Name(id='perm', ctx=Store()), Name(id='name', ctx=Store()), Name(id='rss', ctx=Store()), Name(id='anon', ctx=Store()), Name(id='locked', ctx=Store())], ctx=Store())], value=Name(id='item', ctx=Load())), Assign(targets=[Name(id='addr', ctx=Store())], value=Call(func=Name(id='toaddr', ctx=Load()), args=[Name(id='addr', ctx=Load()), Name(id='addrsize', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='name', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='[')], keywords=[])), body=[Try(body=[Assign(targets=[Name(id='name', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='readlink', ctx=Load()), args=[BinOp(left=Constant(value='%s/%s/path/%s'), op=Mod(), right=Tuple(elts=[Name(id='procfs_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Name(id='name', ctx=Load())], ctx=Load()))], keywords=[]))], handlers=[ExceptHandler(type=Name(id='OSError', ctx=Load()), name='err', body=[If(test=Compare(left=Attribute(value=Name(id='err', ctx=Load()), attr='errno', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='errno', ctx=Load()), attr='ENOENT', ctx=Load())]), body=[Assign(targets=[Name(id='name', ctx=Store())], value=BinOp(left=Constant(value='%s/%s/path/%s'), op=Mod(), right=Tuple(elts=[Name(id='procfs_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Name(id='name', ctx=Load())], ctx=Load()))), Assign(targets=[Name(id='hit_enoent', ctx=Store())], value=Constant(value=True))], orelse=[Raise()])])], orelse=[], finalbody=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='retlist', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='addr', ctx=Load()), Name(id='perm', ctx=Load()), Name(id='name', ctx=Load()), Name(id='rss', ctx=Load()), Name(id='anon', ctx=Load()), Name(id='locked', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[]), If(test=Name(id='hit_enoent', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_assert_alive', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Name(id='retlist', ctx=Load()))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='num_fds', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[BinOp(left=Constant(value='%s/%s/fd'), op=Mod(), right=Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='_procfs_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load())], ctx=Load()))], keywords=[])], keywords=[]))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='num_ctx_switches', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='_common', ctx=Load()), attr='pctxsw', ctx=Load()), args=[Starred(value=Call(func=Attribute(value=Name(id='cext', ctx=Load()), attr='proc_num_ctx_switches', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_procfs_path', ctx=Load())], keywords=[]), ctx=Load())], keywords=[]))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())]), FunctionDef(name='wait', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='timeout')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Return(value=Call(func=Attribute(value=Name(id='_psposix', ctx=Load()), attr='wait_pid', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='pid', ctx=Load()), Name(id='timeout', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_name', ctx=Load())], keywords=[]))], decorator_list=[Name(id='wrap_exceptions', ctx=Load())])], decorator_list=[])], type_ignores=[])