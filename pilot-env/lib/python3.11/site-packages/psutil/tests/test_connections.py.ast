Module(body=[Expr(value=Constant(value='Tests for net_connections() and Process.connections() APIs.')), Import(names=[alias(name='os')]), Import(names=[alias(name='socket')]), Import(names=[alias(name='textwrap')]), Import(names=[alias(name='unittest')]), ImportFrom(module='contextlib', names=[alias(name='closing')], level=0), ImportFrom(module='socket', names=[alias(name='AF_INET')], level=0), ImportFrom(module='socket', names=[alias(name='AF_INET6')], level=0), ImportFrom(module='socket', names=[alias(name='SOCK_DGRAM')], level=0), ImportFrom(module='socket', names=[alias(name='SOCK_STREAM')], level=0), Import(names=[alias(name='psutil')]), ImportFrom(module='psutil', names=[alias(name='FREEBSD')], level=0), ImportFrom(module='psutil', names=[alias(name='LINUX')], level=0), ImportFrom(module='psutil', names=[alias(name='MACOS')], level=0), ImportFrom(module='psutil', names=[alias(name='NETBSD')], level=0), ImportFrom(module='psutil', names=[alias(name='OPENBSD')], level=0), ImportFrom(module='psutil', names=[alias(name='POSIX')], level=0), ImportFrom(module='psutil', names=[alias(name='SUNOS')], level=0), ImportFrom(module='psutil', names=[alias(name='WINDOWS')], level=0), ImportFrom(module='psutil._common', names=[alias(name='supports_ipv6')], level=0), ImportFrom(module='psutil._compat', names=[alias(name='PY3')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='AF_UNIX')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='HAS_CONNECTIONS_UNIX')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='SKIP_SYSCONS')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='PsutilTestCase')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='bind_socket')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='bind_unix_socket')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='check_connection_ntuple')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='create_sockets')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='reap_children')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='retry_on_failure')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='serialrun')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='skip_on_access_denied')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='tcp_socketpair')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='unix_socketpair')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='wait_for_file')], level=0), Assign(targets=[Name(id='thisproc', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='SOCK_SEQPACKET', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='socket', ctx=Load()), Constant(value='SOCK_SEQPACKET'), Call(func=Name(id='object', ctx=Load()), args=[], keywords=[])], keywords=[])), ClassDef(name='ConnectionTestCase', bases=[Name(id='PsutilTestCase', ctx=Load())], keywords=[], body=[FunctionDef(name='setUp', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=BoolOp(op=Or(), values=[Name(id='NETBSD', ctx=Load()), Name(id='FREEBSD', ctx=Load())])), body=[Assign(targets=[Name(id='cons', ctx=Store())], value=Call(func=Attribute(value=Name(id='thisproc', ctx=Load()), attr='connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='all'))])), Assert(test=UnaryOp(op=Not(), operand=Name(id='cons', ctx=Load())), msg=Name(id='cons', ctx=Load()))], orelse=[])], decorator_list=[]), FunctionDef(name='tearDown', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=BoolOp(op=Or(), values=[Name(id='FREEBSD', ctx=Load()), Name(id='NETBSD', ctx=Load())])), body=[Assign(targets=[Name(id='cons', ctx=Store())], value=Call(func=Attribute(value=Name(id='thisproc', ctx=Load()), attr='connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='all'))])), Assert(test=UnaryOp(op=Not(), operand=Name(id='cons', ctx=Load())), msg=Name(id='cons', ctx=Load()))], orelse=[])], decorator_list=[]), FunctionDef(name='compare_procsys_connections', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='pid'), arg(arg='proc_cons'), arg(arg='kind')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='all')]), body=[Expr(value=Constant(value='Given a process PID and its list of connections compare\n        those against system-wide connections retrieved via\n        psutil.net_connections.\n        ')), Try(body=[Assign(targets=[Name(id='sys_cons', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='net_connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Name(id='kind', ctx=Load()))]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), body=[If(test=Name(id='MACOS', ctx=Load()), body=[Return()], orelse=[Raise()])])], orelse=[], finalbody=[]), Assign(targets=[Name(id='sys_cons', ctx=Store())], value=ListComp(elt=Subscript(value=Name(id='c', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()), generators=[comprehension(target=Name(id='c', ctx=Store()), iter=Name(id='sys_cons', ctx=Load()), ifs=[Compare(left=Attribute(value=Name(id='c', ctx=Load()), attr='pid', ctx=Load()), ops=[Eq()], comparators=[Name(id='pid', ctx=Load())])], is_async=0)])), Expr(value=Call(func=Attribute(value=Name(id='sys_cons', ctx=Load()), attr='sort', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='proc_cons', ctx=Load()), attr='sort', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='proc_cons', ctx=Load()), Name(id='sys_cons', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[Name(id='serialrun', ctx=Load())]), ClassDef(name='TestBasicOperations', bases=[Name(id='ConnectionTestCase', ctx=Load())], keywords=[], body=[FunctionDef(name='test_system', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Name(id='create_sockets', ctx=Load()), args=[], keywords=[]))], body=[For(target=Name(id='conn', ctx=Store()), iter=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='net_connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='all'))]), body=[Expr(value=Call(func=Name(id='check_connection_ntuple', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]))], orelse=[])])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[Name(id='SKIP_SYSCONS', ctx=Load()), Constant(value='requires root')], keywords=[])]), FunctionDef(name='test_process', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Name(id='create_sockets', ctx=Load()), args=[], keywords=[]))], body=[For(target=Name(id='conn', ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[]), attr='connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='all'))]), body=[Expr(value=Call(func=Name(id='check_connection_ntuple', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]))], orelse=[])])], decorator_list=[]), FunctionDef(name='test_invalid_kind', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Attribute(value=Name(id='thisproc', ctx=Load()), attr='connections', ctx=Load())], keywords=[keyword(arg='kind', value=Constant(value='???'))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='net_connections', ctx=Load())], keywords=[keyword(arg='kind', value=Constant(value='???'))]))], decorator_list=[])], decorator_list=[]), ClassDef(name='TestUnconnectedSockets', bases=[Name(id='ConnectionTestCase', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Tests sockets which are open but not connected to anything.')), FunctionDef(name='get_conn_from_sock', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='sock')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='cons', ctx=Store())], value=Call(func=Attribute(value=Name(id='thisproc', ctx=Load()), attr='connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='all'))])), Assign(targets=[Name(id='smap', ctx=Store())], value=Call(func=Name(id='dict', ctx=Load()), args=[ListComp(elt=Tuple(elts=[Attribute(value=Name(id='c', ctx=Load()), attr='fd', ctx=Load()), Name(id='c', ctx=Load())], ctx=Load()), generators=[comprehension(target=Name(id='c', ctx=Store()), iter=Name(id='cons', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), If(test=BoolOp(op=Or(), values=[Name(id='NETBSD', ctx=Load()), Name(id='FREEBSD', ctx=Load())]), body=[Return(value=Subscript(value=Name(id='smap', ctx=Load()), slice=Call(func=Attribute(value=Name(id='sock', ctx=Load()), attr='fileno', ctx=Load()), args=[], keywords=[]), ctx=Load()))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='cons', ctx=Load())], keywords=[]), Constant(value=1)], keywords=[])), If(test=Compare(left=Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='fd', ctx=Load()), ops=[NotEq()], comparators=[UnaryOp(op=USub(), operand=Constant(value=1))]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Subscript(value=Name(id='smap', ctx=Load()), slice=Call(func=Attribute(value=Name(id='sock', ctx=Load()), attr='fileno', ctx=Load()), args=[], keywords=[]), ctx=Load()), attr='fd', ctx=Load()), Call(func=Attribute(value=Name(id='sock', ctx=Load()), attr='fileno', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Return(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=0), ctx=Load()))])], decorator_list=[]), FunctionDef(name='check_socket', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='sock')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Given a socket, makes sure it matches the one obtained\n        via psutil. It assumes this process created one connection\n        only (the one supposed to be checked).\n        ')), Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_conn_from_sock', ctx=Load()), args=[Name(id='sock', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='check_connection_ntuple', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='conn', ctx=Load()), attr='fd', ctx=Load()), ops=[NotEq()], comparators=[UnaryOp(op=USub(), operand=Constant(value=1))]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='fd', ctx=Load()), Call(func=Attribute(value=Name(id='sock', ctx=Load()), attr='fileno', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='family', ctx=Load()), Attribute(value=Name(id='sock', ctx=Load()), attr='family', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='type', ctx=Load()), Call(func=Attribute(value=Name(id='sock', ctx=Load()), attr='getsockopt', ctx=Load()), args=[Attribute(value=Name(id='socket', ctx=Load()), attr='SOL_SOCKET', ctx=Load()), Attribute(value=Name(id='socket', ctx=Load()), attr='SO_TYPE', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='laddr', ctx=Store())], value=Call(func=Attribute(value=Name(id='sock', ctx=Load()), attr='getsockname', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='laddr', ctx=Load())), Name(id='PY3', ctx=Load()), Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='laddr', ctx=Load()), Name(id='bytes', ctx=Load())], keywords=[])]), body=[Assign(targets=[Name(id='laddr', ctx=Store())], value=Call(func=Attribute(value=Name(id='laddr', ctx=Load()), attr='decode', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='sock', ctx=Load()), attr='family', ctx=Load()), ops=[Eq()], comparators=[Name(id='AF_INET6', ctx=Load())]), body=[Assign(targets=[Name(id='laddr', ctx=Store())], value=Subscript(value=Name(id='laddr', ctx=Load()), slice=Slice(upper=Constant(value=2)), ctx=Load()))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='laddr', ctx=Load()), Name(id='laddr', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='sock', ctx=Load()), attr='family', ctx=Load()), ops=[Eq()], comparators=[Name(id='AF_UNIX', ctx=Load())]), Name(id='HAS_CONNECTIONS_UNIX', ctx=Load())]), body=[Assign(targets=[Name(id='cons', ctx=Store())], value=Call(func=Attribute(value=Name(id='thisproc', ctx=Load()), attr='connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='all'))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='compare_procsys_connections', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getpid', ctx=Load()), args=[], keywords=[]), Name(id='cons', ctx=Load())], keywords=[keyword(arg='kind', value=Constant(value='all'))]))], orelse=[]), Return(value=Name(id='conn', ctx=Load()))], decorator_list=[]), FunctionDef(name='test_tcp_v4', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='addr', ctx=Store())], value=Tuple(elts=[Constant(value='127.0.0.1'), Constant(value=0)], ctx=Load())), With(items=[withitem(context_expr=Call(func=Name(id='closing', ctx=Load()), args=[Call(func=Name(id='bind_socket', ctx=Load()), args=[Name(id='AF_INET', ctx=Load()), Name(id='SOCK_STREAM', ctx=Load())], keywords=[keyword(arg='addr', value=Name(id='addr', ctx=Load()))])], keywords=[]), optional_vars=Name(id='sock', ctx=Store()))], body=[Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_socket', ctx=Load()), args=[Name(id='sock', ctx=Load())], keywords=[])), Assert(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='conn', ctx=Load()), attr='raddr', ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='status', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='CONN_LISTEN', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_tcp_v6', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='addr', ctx=Store())], value=Tuple(elts=[Constant(value='::1'), Constant(value=0)], ctx=Load())), With(items=[withitem(context_expr=Call(func=Name(id='closing', ctx=Load()), args=[Call(func=Name(id='bind_socket', ctx=Load()), args=[Name(id='AF_INET6', ctx=Load()), Name(id='SOCK_STREAM', ctx=Load())], keywords=[keyword(arg='addr', value=Name(id='addr', ctx=Load()))])], keywords=[]), optional_vars=Name(id='sock', ctx=Store()))], body=[Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_socket', ctx=Load()), args=[Name(id='sock', ctx=Load())], keywords=[])), Assert(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='conn', ctx=Load()), attr='raddr', ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='status', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='CONN_LISTEN', ctx=Load())], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Call(func=Name(id='supports_ipv6', ctx=Load()), args=[], keywords=[])), Constant(value='IPv6 not supported')], keywords=[])]), FunctionDef(name='test_udp_v4', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='addr', ctx=Store())], value=Tuple(elts=[Constant(value='127.0.0.1'), Constant(value=0)], ctx=Load())), With(items=[withitem(context_expr=Call(func=Name(id='closing', ctx=Load()), args=[Call(func=Name(id='bind_socket', ctx=Load()), args=[Name(id='AF_INET', ctx=Load()), Name(id='SOCK_DGRAM', ctx=Load())], keywords=[keyword(arg='addr', value=Name(id='addr', ctx=Load()))])], keywords=[]), optional_vars=Name(id='sock', ctx=Store()))], body=[Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_socket', ctx=Load()), args=[Name(id='sock', ctx=Load())], keywords=[])), Assert(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='conn', ctx=Load()), attr='raddr', ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='status', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='CONN_NONE', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_udp_v6', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='addr', ctx=Store())], value=Tuple(elts=[Constant(value='::1'), Constant(value=0)], ctx=Load())), With(items=[withitem(context_expr=Call(func=Name(id='closing', ctx=Load()), args=[Call(func=Name(id='bind_socket', ctx=Load()), args=[Name(id='AF_INET6', ctx=Load()), Name(id='SOCK_DGRAM', ctx=Load())], keywords=[keyword(arg='addr', value=Name(id='addr', ctx=Load()))])], keywords=[]), optional_vars=Name(id='sock', ctx=Store()))], body=[Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_socket', ctx=Load()), args=[Name(id='sock', ctx=Load())], keywords=[])), Assert(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='conn', ctx=Load()), attr='raddr', ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='status', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='CONN_NONE', ctx=Load())], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Call(func=Name(id='supports_ipv6', ctx=Load()), args=[], keywords=[])), Constant(value='IPv6 not supported')], keywords=[])]), FunctionDef(name='test_unix_tcp', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='testfn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_testfn', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='closing', ctx=Load()), args=[Call(func=Name(id='bind_unix_socket', ctx=Load()), args=[Name(id='testfn', ctx=Load())], keywords=[keyword(arg='type', value=Name(id='SOCK_STREAM', ctx=Load()))])], keywords=[]), optional_vars=Name(id='sock', ctx=Store()))], body=[Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_socket', ctx=Load()), args=[Name(id='sock', ctx=Load())], keywords=[])), Assert(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='conn', ctx=Load()), attr='raddr', ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='status', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='CONN_NONE', ctx=Load())], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='POSIX', ctx=Load())), Constant(value='POSIX only')], keywords=[])]), FunctionDef(name='test_unix_udp', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='testfn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_testfn', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='closing', ctx=Load()), args=[Call(func=Name(id='bind_unix_socket', ctx=Load()), args=[Name(id='testfn', ctx=Load())], keywords=[keyword(arg='type', value=Name(id='SOCK_STREAM', ctx=Load()))])], keywords=[]), optional_vars=Name(id='sock', ctx=Store()))], body=[Assign(targets=[Name(id='conn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='check_socket', ctx=Load()), args=[Name(id='sock', ctx=Load())], keywords=[])), Assert(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='conn', ctx=Load()), attr='raddr', ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='status', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='CONN_NONE', ctx=Load())], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='POSIX', ctx=Load())), Constant(value='POSIX only')], keywords=[])])], decorator_list=[Name(id='serialrun', ctx=Load())]), ClassDef(name='TestConnectedSocket', bases=[Name(id='ConnectionTestCase', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Test socket pairs which are actually connected to\n    each other.\n    ')), FunctionDef(name='test_tcp', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='addr', ctx=Store())], value=Tuple(elts=[Constant(value='127.0.0.1'), Constant(value=0)], ctx=Load())), Assert(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='thisproc', ctx=Load()), attr='connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='tcp4'))]))), Assign(targets=[Tuple(elts=[Name(id='server', ctx=Store()), Name(id='client', ctx=Store())], ctx=Store())], value=Call(func=Name(id='tcp_socketpair', ctx=Load()), args=[Name(id='AF_INET', ctx=Load())], keywords=[keyword(arg='addr', value=Name(id='addr', ctx=Load()))])), Try(body=[Assign(targets=[Name(id='cons', ctx=Store())], value=Call(func=Attribute(value=Name(id='thisproc', ctx=Load()), attr='connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='tcp4'))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='cons', ctx=Load())], keywords=[]), Constant(value=2)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='status', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='CONN_ESTABLISHED', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=1), ctx=Load()), attr='status', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='CONN_ESTABLISHED', ctx=Load())], keywords=[]))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='server', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='client', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[Name(id='SUNOS', ctx=Load()), Constant(value='unreliable on SUONS')], keywords=[])]), FunctionDef(name='test_unix', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='testfn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_testfn', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='server', ctx=Store()), Name(id='client', ctx=Store())], ctx=Store())], value=Call(func=Name(id='unix_socketpair', ctx=Load()), args=[Name(id='testfn', ctx=Load())], keywords=[])), Try(body=[Assign(targets=[Name(id='cons', ctx=Store())], value=Call(func=Attribute(value=Name(id='thisproc', ctx=Load()), attr='connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='unix'))])), Assert(test=UnaryOp(op=Not(), operand=BoolOp(op=And(), values=[Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='laddr', ctx=Load()), Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='raddr', ctx=Load())]))), Assert(test=UnaryOp(op=Not(), operand=BoolOp(op=And(), values=[Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=1), ctx=Load()), attr='laddr', ctx=Load()), Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=1), ctx=Load()), attr='raddr', ctx=Load())]))), If(test=BoolOp(op=Or(), values=[Name(id='NETBSD', ctx=Load()), Name(id='FREEBSD', ctx=Load())]), body=[Assign(targets=[Name(id='cons', ctx=Store())], value=ListComp(elt=Name(id='c', ctx=Load()), generators=[comprehension(target=Name(id='c', ctx=Store()), iter=Name(id='cons', ctx=Load()), ifs=[Compare(left=Attribute(value=Name(id='c', ctx=Load()), attr='raddr', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='/var/run/log')])], is_async=0)]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='cons', ctx=Load())], keywords=[]), Constant(value=2)], keywords=[keyword(arg='msg', value=Name(id='cons', ctx=Load()))])), If(test=BoolOp(op=Or(), values=[Name(id='LINUX', ctx=Load()), Name(id='FREEBSD', ctx=Load()), Name(id='SUNOS', ctx=Load()), Name(id='OPENBSD', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='raddr', ctx=Load()), Constant(value='')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=1), ctx=Load()), attr='raddr', ctx=Load()), Constant(value='')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='testfn', ctx=Load()), BoolOp(op=Or(), values=[Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='laddr', ctx=Load()), Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=1), ctx=Load()), attr='laddr', ctx=Load())])], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[BoolOp(op=Or(), values=[Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='laddr', ctx=Load()), Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=1), ctx=Load()), attr='laddr', ctx=Load())]), Name(id='testfn', ctx=Load())], keywords=[]))])], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='server', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='client', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='POSIX', ctx=Load())), Constant(value='POSIX only')], keywords=[])])], decorator_list=[Name(id='serialrun', ctx=Load())]), ClassDef(name='TestFilters', bases=[Name(id='ConnectionTestCase', ctx=Load())], keywords=[], body=[FunctionDef(name='test_filters', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='check', args=arguments(posonlyargs=[], args=[arg(arg='kind'), arg(arg='families'), arg(arg='types')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='conn', ctx=Store()), iter=Call(func=Attribute(value=Name(id='thisproc', ctx=Load()), attr='connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Name(id='kind', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='family', ctx=Load()), Name(id='families', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='type', ctx=Load()), Name(id='types', ctx=Load())], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='SKIP_SYSCONS', ctx=Load())), body=[For(target=Name(id='conn', ctx=Store()), iter=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='net_connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Name(id='kind', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='family', ctx=Load()), Name(id='families', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='type', ctx=Load()), Name(id='types', ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], decorator_list=[]), With(items=[withitem(context_expr=Call(func=Name(id='create_sockets', ctx=Load()), args=[], keywords=[]))], body=[Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Constant(value='all'), List(elts=[Name(id='AF_INET', ctx=Load()), Name(id='AF_INET6', ctx=Load()), Name(id='AF_UNIX', ctx=Load())], ctx=Load()), List(elts=[Name(id='SOCK_STREAM', ctx=Load()), Name(id='SOCK_DGRAM', ctx=Load()), Name(id='SOCK_SEQPACKET', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Constant(value='inet'), List(elts=[Name(id='AF_INET', ctx=Load()), Name(id='AF_INET6', ctx=Load())], ctx=Load()), List(elts=[Name(id='SOCK_STREAM', ctx=Load()), Name(id='SOCK_DGRAM', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Constant(value='inet4'), List(elts=[Name(id='AF_INET', ctx=Load())], ctx=Load()), List(elts=[Name(id='SOCK_STREAM', ctx=Load()), Name(id='SOCK_DGRAM', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Constant(value='tcp'), List(elts=[Name(id='AF_INET', ctx=Load()), Name(id='AF_INET6', ctx=Load())], ctx=Load()), List(elts=[Name(id='SOCK_STREAM', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Constant(value='tcp4'), List(elts=[Name(id='AF_INET', ctx=Load())], ctx=Load()), List(elts=[Name(id='SOCK_STREAM', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Constant(value='tcp6'), List(elts=[Name(id='AF_INET6', ctx=Load())], ctx=Load()), List(elts=[Name(id='SOCK_STREAM', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Constant(value='udp'), List(elts=[Name(id='AF_INET', ctx=Load()), Name(id='AF_INET6', ctx=Load())], ctx=Load()), List(elts=[Name(id='SOCK_DGRAM', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Constant(value='udp4'), List(elts=[Name(id='AF_INET', ctx=Load())], ctx=Load()), List(elts=[Name(id='SOCK_DGRAM', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Constant(value='udp6'), List(elts=[Name(id='AF_INET6', ctx=Load())], ctx=Load()), List(elts=[Name(id='SOCK_DGRAM', ctx=Load())], ctx=Load())], keywords=[])), If(test=Name(id='HAS_CONNECTIONS_UNIX', ctx=Load()), body=[Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Constant(value='unix'), List(elts=[Name(id='AF_UNIX', ctx=Load())], ctx=Load()), List(elts=[Name(id='SOCK_STREAM', ctx=Load()), Name(id='SOCK_DGRAM', ctx=Load()), Name(id='SOCK_SEQPACKET', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[])])], decorator_list=[]), FunctionDef(name='test_combos', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Name(id='reap_children', ctx=Load()), args=[], keywords=[])), FunctionDef(name='check_conn', args=arguments(posonlyargs=[], args=[arg(arg='proc'), arg(arg='conn'), arg(arg='family'), arg(arg='type'), arg(arg='laddr'), arg(arg='raddr'), arg(arg='status'), arg(arg='kinds')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='all_kinds', ctx=Store())], value=Tuple(elts=[Constant(value='all'), Constant(value='inet'), Constant(value='inet4'), Constant(value='inet6'), Constant(value='tcp'), Constant(value='tcp4'), Constant(value='tcp6'), Constant(value='udp'), Constant(value='udp4'), Constant(value='udp6')], ctx=Load())), Expr(value=Call(func=Name(id='check_connection_ntuple', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='family', ctx=Load()), Name(id='family', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='type', ctx=Load()), Name(id='type', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='laddr', ctx=Load()), Name(id='laddr', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='raddr', ctx=Load()), Name(id='raddr', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='status', ctx=Load()), Name(id='status', ctx=Load())], keywords=[])), For(target=Name(id='kind', ctx=Store()), iter=Name(id='all_kinds', ctx=Load()), body=[Assign(targets=[Name(id='cons', ctx=Store())], value=Call(func=Attribute(value=Name(id='proc', ctx=Load()), attr='connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Name(id='kind', ctx=Load()))])), If(test=Compare(left=Name(id='kind', ctx=Load()), ops=[In()], comparators=[Name(id='kinds', ctx=Load())]), body=[Assert(test=Name(id='cons', ctx=Load()))], orelse=[Assert(test=UnaryOp(op=Not(), operand=Name(id='cons', ctx=Load())), msg=Name(id='cons', ctx=Load()))])], orelse=[]), If(test=Name(id='HAS_CONNECTIONS_UNIX', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='compare_procsys_connections', ctx=Load()), args=[Attribute(value=Name(id='proc', ctx=Load()), attr='pid', ctx=Load()), List(elts=[Name(id='conn', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), Assign(targets=[Name(id='tcp_template', ctx=Store())], value=Call(func=Attribute(value=Name(id='textwrap', ctx=Load()), attr='dedent', ctx=Load()), args=[Constant(value="\n            import socket, time\n            s = socket.socket({family}, socket.SOCK_STREAM)\n            s.bind(('{addr}', 0))\n            s.listen(5)\n            with open('{testfn}', 'w') as f:\n                f.write(str(s.getsockname()[:2]))\n            time.sleep(60)\n            ")], keywords=[])), Assign(targets=[Name(id='udp_template', ctx=Store())], value=Call(func=Attribute(value=Name(id='textwrap', ctx=Load()), attr='dedent', ctx=Load()), args=[Constant(value="\n            import socket, time\n            s = socket.socket({family}, socket.SOCK_DGRAM)\n            s.bind(('{addr}', 0))\n            with open('{testfn}', 'w') as f:\n                f.write(str(s.getsockname()[:2]))\n            time.sleep(60)\n            ")], keywords=[])), Assign(targets=[Name(id='testfile', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_testfn', ctx=Load()), args=[], keywords=[keyword(arg='dir', value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[]))])], keywords=[])), Assign(targets=[Name(id='tcp4_template', ctx=Store())], value=Call(func=Attribute(value=Name(id='tcp_template', ctx=Load()), attr='format', ctx=Load()), args=[], keywords=[keyword(arg='family', value=Call(func=Name(id='int', ctx=Load()), args=[Name(id='AF_INET', ctx=Load())], keywords=[])), keyword(arg='addr', value=Constant(value='127.0.0.1')), keyword(arg='testfn', value=Name(id='testfile', ctx=Load()))])), Assign(targets=[Name(id='udp4_template', ctx=Store())], value=Call(func=Attribute(value=Name(id='udp_template', ctx=Load()), attr='format', ctx=Load()), args=[], keywords=[keyword(arg='family', value=Call(func=Name(id='int', ctx=Load()), args=[Name(id='AF_INET', ctx=Load())], keywords=[])), keyword(arg='addr', value=Constant(value='127.0.0.1')), keyword(arg='testfn', value=Name(id='testfile', ctx=Load()))])), Assign(targets=[Name(id='tcp6_template', ctx=Store())], value=Call(func=Attribute(value=Name(id='tcp_template', ctx=Load()), attr='format', ctx=Load()), args=[], keywords=[keyword(arg='family', value=Call(func=Name(id='int', ctx=Load()), args=[Name(id='AF_INET6', ctx=Load())], keywords=[])), keyword(arg='addr', value=Constant(value='::1')), keyword(arg='testfn', value=Name(id='testfile', ctx=Load()))])), Assign(targets=[Name(id='udp6_template', ctx=Store())], value=Call(func=Attribute(value=Name(id='udp_template', ctx=Load()), attr='format', ctx=Load()), args=[], keywords=[keyword(arg='family', value=Call(func=Name(id='int', ctx=Load()), args=[Name(id='AF_INET6', ctx=Load())], keywords=[])), keyword(arg='addr', value=Constant(value='::1')), keyword(arg='testfn', value=Name(id='testfile', ctx=Load()))])), Assign(targets=[Name(id='tcp4_proc', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='pyrun', ctx=Load()), args=[Name(id='tcp4_template', ctx=Load())], keywords=[])), Assign(targets=[Name(id='tcp4_addr', ctx=Store())], value=Call(func=Name(id='eval', ctx=Load()), args=[Call(func=Name(id='wait_for_file', ctx=Load()), args=[Name(id='testfile', ctx=Load())], keywords=[keyword(arg='delete', value=Constant(value=True))])], keywords=[])), Assign(targets=[Name(id='udp4_proc', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='pyrun', ctx=Load()), args=[Name(id='udp4_template', ctx=Load())], keywords=[])), Assign(targets=[Name(id='udp4_addr', ctx=Store())], value=Call(func=Name(id='eval', ctx=Load()), args=[Call(func=Name(id='wait_for_file', ctx=Load()), args=[Name(id='testfile', ctx=Load())], keywords=[keyword(arg='delete', value=Constant(value=True))])], keywords=[])), If(test=Call(func=Name(id='supports_ipv6', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='tcp6_proc', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='pyrun', ctx=Load()), args=[Name(id='tcp6_template', ctx=Load())], keywords=[])), Assign(targets=[Name(id='tcp6_addr', ctx=Store())], value=Call(func=Name(id='eval', ctx=Load()), args=[Call(func=Name(id='wait_for_file', ctx=Load()), args=[Name(id='testfile', ctx=Load())], keywords=[keyword(arg='delete', value=Constant(value=True))])], keywords=[])), Assign(targets=[Name(id='udp6_proc', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='pyrun', ctx=Load()), args=[Name(id='udp6_template', ctx=Load())], keywords=[])), Assign(targets=[Name(id='udp6_addr', ctx=Store())], value=Call(func=Name(id='eval', ctx=Load()), args=[Call(func=Name(id='wait_for_file', ctx=Load()), args=[Name(id='testfile', ctx=Load())], keywords=[keyword(arg='delete', value=Constant(value=True))])], keywords=[]))], orelse=[Assign(targets=[Name(id='tcp6_proc', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='udp6_proc', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='tcp6_addr', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='udp6_addr', ctx=Store())], value=Constant(value=None))]), For(target=Name(id='p', ctx=Store()), iter=Call(func=Attribute(value=Name(id='thisproc', ctx=Load()), attr='children', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='cons', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='connections', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='cons', ctx=Load())], keywords=[]), Constant(value=1)], keywords=[])), For(target=Name(id='conn', ctx=Store()), iter=Name(id='cons', ctx=Load()), body=[If(test=Compare(left=Attribute(value=Name(id='p', ctx=Load()), attr='pid', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='tcp4_proc', ctx=Load()), attr='pid', ctx=Load())]), body=[Expr(value=Call(func=Name(id='check_conn', ctx=Load()), args=[Name(id='p', ctx=Load()), Name(id='conn', ctx=Load()), Name(id='AF_INET', ctx=Load()), Name(id='SOCK_STREAM', ctx=Load()), Name(id='tcp4_addr', ctx=Load()), Tuple(elts=[], ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='CONN_LISTEN', ctx=Load()), Tuple(elts=[Constant(value='all'), Constant(value='inet'), Constant(value='inet4'), Constant(value='tcp'), Constant(value='tcp4')], ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='p', ctx=Load()), attr='pid', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='udp4_proc', ctx=Load()), attr='pid', ctx=Load())]), body=[Expr(value=Call(func=Name(id='check_conn', ctx=Load()), args=[Name(id='p', ctx=Load()), Name(id='conn', ctx=Load()), Name(id='AF_INET', ctx=Load()), Name(id='SOCK_DGRAM', ctx=Load()), Name(id='udp4_addr', ctx=Load()), Tuple(elts=[], ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='CONN_NONE', ctx=Load()), Tuple(elts=[Constant(value='all'), Constant(value='inet'), Constant(value='inet4'), Constant(value='udp'), Constant(value='udp4')], ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='p', ctx=Load()), attr='pid', ctx=Load()), ops=[Eq()], comparators=[Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='tcp6_proc', ctx=Load()), Constant(value='pid'), Constant(value=None)], keywords=[])]), body=[Expr(value=Call(func=Name(id='check_conn', ctx=Load()), args=[Name(id='p', ctx=Load()), Name(id='conn', ctx=Load()), Name(id='AF_INET6', ctx=Load()), Name(id='SOCK_STREAM', ctx=Load()), Name(id='tcp6_addr', ctx=Load()), Tuple(elts=[], ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='CONN_LISTEN', ctx=Load()), Tuple(elts=[Constant(value='all'), Constant(value='inet'), Constant(value='inet6'), Constant(value='tcp'), Constant(value='tcp6')], ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Attribute(value=Name(id='p', ctx=Load()), attr='pid', ctx=Load()), ops=[Eq()], comparators=[Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='udp6_proc', ctx=Load()), Constant(value='pid'), Constant(value=None)], keywords=[])]), body=[Expr(value=Call(func=Name(id='check_conn', ctx=Load()), args=[Name(id='p', ctx=Load()), Name(id='conn', ctx=Load()), Name(id='AF_INET6', ctx=Load()), Name(id='SOCK_DGRAM', ctx=Load()), Name(id='udp6_addr', ctx=Load()), Tuple(elts=[], ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='CONN_NONE', ctx=Load()), Tuple(elts=[Constant(value='all'), Constant(value='inet'), Constant(value='inet6'), Constant(value='udp'), Constant(value='udp6')], ctx=Load())], keywords=[]))], orelse=[])])])])], orelse=[])], orelse=[])], decorator_list=[Call(func=Name(id='skip_on_access_denied', ctx=Load()), args=[], keywords=[keyword(arg='only_if', value=Name(id='MACOS', ctx=Load()))])]), FunctionDef(name='test_count', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Name(id='create_sockets', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='cons', ctx=Store())], value=Call(func=Attribute(value=Name(id='thisproc', ctx=Load()), attr='connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='tcp'))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='cons', ctx=Load())], keywords=[]), IfExp(test=Call(func=Name(id='supports_ipv6', ctx=Load()), args=[], keywords=[]), body=Constant(value=2), orelse=Constant(value=1))], keywords=[])), For(target=Name(id='conn', ctx=Store()), iter=Name(id='cons', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='family', ctx=Load()), Tuple(elts=[Name(id='AF_INET', ctx=Load()), Name(id='AF_INET6', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='type', ctx=Load()), Name(id='SOCK_STREAM', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='cons', ctx=Store())], value=Call(func=Attribute(value=Name(id='thisproc', ctx=Load()), attr='connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='tcp4'))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='cons', ctx=Load())], keywords=[]), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='family', ctx=Load()), Name(id='AF_INET', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='type', ctx=Load()), Name(id='SOCK_STREAM', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='supports_ipv6', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='cons', ctx=Store())], value=Call(func=Attribute(value=Name(id='thisproc', ctx=Load()), attr='connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='tcp6'))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='cons', ctx=Load())], keywords=[]), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='family', ctx=Load()), Name(id='AF_INET6', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='type', ctx=Load()), Name(id='SOCK_STREAM', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='cons', ctx=Store())], value=Call(func=Attribute(value=Name(id='thisproc', ctx=Load()), attr='connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='udp'))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='cons', ctx=Load())], keywords=[]), IfExp(test=Call(func=Name(id='supports_ipv6', ctx=Load()), args=[], keywords=[]), body=Constant(value=2), orelse=Constant(value=1))], keywords=[])), For(target=Name(id='conn', ctx=Store()), iter=Name(id='cons', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='family', ctx=Load()), Tuple(elts=[Name(id='AF_INET', ctx=Load()), Name(id='AF_INET6', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='type', ctx=Load()), Name(id='SOCK_DGRAM', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='cons', ctx=Store())], value=Call(func=Attribute(value=Name(id='thisproc', ctx=Load()), attr='connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='udp4'))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='cons', ctx=Load())], keywords=[]), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='family', ctx=Load()), Name(id='AF_INET', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='type', ctx=Load()), Name(id='SOCK_DGRAM', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='supports_ipv6', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='cons', ctx=Store())], value=Call(func=Attribute(value=Name(id='thisproc', ctx=Load()), attr='connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='udp6'))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='cons', ctx=Load())], keywords=[]), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='family', ctx=Load()), Name(id='AF_INET6', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Subscript(value=Name(id='cons', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='type', ctx=Load()), Name(id='SOCK_DGRAM', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='cons', ctx=Store())], value=Call(func=Attribute(value=Name(id='thisproc', ctx=Load()), attr='connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='inet'))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='cons', ctx=Load())], keywords=[]), IfExp(test=Call(func=Name(id='supports_ipv6', ctx=Load()), args=[], keywords=[]), body=Constant(value=4), orelse=Constant(value=2))], keywords=[])), For(target=Name(id='conn', ctx=Store()), iter=Name(id='cons', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='family', ctx=Load()), Tuple(elts=[Name(id='AF_INET', ctx=Load()), Name(id='AF_INET6', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='type', ctx=Load()), Tuple(elts=[Name(id='SOCK_STREAM', ctx=Load()), Name(id='SOCK_DGRAM', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[]), If(test=Call(func=Name(id='supports_ipv6', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='cons', ctx=Store())], value=Call(func=Attribute(value=Name(id='thisproc', ctx=Load()), attr='connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='inet6'))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='cons', ctx=Load())], keywords=[]), Constant(value=2)], keywords=[])), For(target=Name(id='conn', ctx=Store()), iter=Name(id='cons', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='family', ctx=Load()), Name(id='AF_INET6', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='type', ctx=Load()), Tuple(elts=[Name(id='SOCK_STREAM', ctx=Load()), Name(id='SOCK_DGRAM', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), If(test=BoolOp(op=And(), values=[Name(id='HAS_CONNECTIONS_UNIX', ctx=Load()), UnaryOp(op=Not(), operand=BoolOp(op=Or(), values=[Name(id='FREEBSD', ctx=Load()), Name(id='NETBSD', ctx=Load())]))]), body=[Assign(targets=[Name(id='cons', ctx=Store())], value=Call(func=Attribute(value=Name(id='thisproc', ctx=Load()), attr='connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='unix'))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='cons', ctx=Load())], keywords=[]), Constant(value=3)], keywords=[])), For(target=Name(id='conn', ctx=Store()), iter=Name(id='cons', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='family', ctx=Load()), Name(id='AF_UNIX', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='type', ctx=Load()), Tuple(elts=[Name(id='SOCK_STREAM', ctx=Load()), Name(id='SOCK_DGRAM', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[])], orelse=[])])], decorator_list=[])], decorator_list=[]), ClassDef(name='TestSystemWideConnections', bases=[Name(id='ConnectionTestCase', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Tests for net_connections().')), FunctionDef(name='test_it', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='check', args=arguments(posonlyargs=[], args=[arg(arg='cons'), arg(arg='families'), arg(arg='types_')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='conn', ctx=Store()), iter=Name(id='cons', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='family', ctx=Load()), Name(id='families', ctx=Load())], keywords=[keyword(arg='msg', value=Name(id='conn', ctx=Load()))])), If(test=Compare(left=Attribute(value=Name(id='conn', ctx=Load()), attr='family', ctx=Load()), ops=[NotEq()], comparators=[Name(id='AF_UNIX', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Attribute(value=Name(id='conn', ctx=Load()), attr='type', ctx=Load()), Name(id='types_', ctx=Load())], keywords=[keyword(arg='msg', value=Name(id='conn', ctx=Load()))]))], orelse=[]), Expr(value=Call(func=Name(id='check_connection_ntuple', ctx=Load()), args=[Name(id='conn', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), With(items=[withitem(context_expr=Call(func=Name(id='create_sockets', ctx=Load()), args=[], keywords=[]))], body=[ImportFrom(module='psutil._common', names=[alias(name='conn_tmap')], level=0), For(target=Tuple(elts=[Name(id='kind', ctx=Store()), Name(id='groups', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='conn_tmap', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Name(id='kind', ctx=Load()), ops=[Eq()], comparators=[Constant(value='unix')]), UnaryOp(op=Not(), operand=Name(id='HAS_CONNECTIONS_UNIX', ctx=Load()))]), body=[Continue()], orelse=[]), Assign(targets=[Tuple(elts=[Name(id='families', ctx=Store()), Name(id='types_', ctx=Store())], ctx=Store())], value=Name(id='groups', ctx=Load())), Assign(targets=[Name(id='cons', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='net_connections', ctx=Load()), args=[Name(id='kind', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='cons', ctx=Load())], keywords=[]), Call(func=Name(id='len', ctx=Load()), args=[Call(func=Name(id='set', ctx=Load()), args=[Name(id='cons', ctx=Load())], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Name(id='cons', ctx=Load()), Name(id='families', ctx=Load()), Name(id='types_', ctx=Load())], keywords=[]))], orelse=[])])], decorator_list=[]), FunctionDef(name='test_multi_sockets_procs', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Name(id='create_sockets', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='socks', ctx=Store()))], body=[Assign(targets=[Name(id='expected', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Name(id='socks', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='pids', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='times', ctx=Store())], value=Constant(value=10)), Assign(targets=[Name(id='fnames', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='times', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='fname', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_testfn', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='fnames', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='fname', ctx=Load())], keywords=[])), Assign(targets=[Name(id='src', ctx=Store())], value=Call(func=Attribute(value=Name(id='textwrap', ctx=Load()), attr='dedent', ctx=Load()), args=[BinOp(left=Constant(value='                import time, os\n                from psutil.tests import create_sockets\n                with create_sockets():\n                    with open(r\'%s\', \'w\') as f:\n                        f.write("hello")\n                    time.sleep(60)\n                '), op=Mod(), right=Name(id='fname', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='sproc', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='pyrun', ctx=Load()), args=[Name(id='src', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='pids', ctx=Load()), attr='append', ctx=Load()), args=[Attribute(value=Name(id='sproc', ctx=Load()), attr='pid', ctx=Load())], keywords=[]))], orelse=[]), For(target=Name(id='fname', ctx=Store()), iter=Name(id='fnames', ctx=Load()), body=[Expr(value=Call(func=Name(id='wait_for_file', ctx=Load()), args=[Name(id='fname', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='syscons', ctx=Store())], value=ListComp(elt=Name(id='x', ctx=Load()), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='net_connections', ctx=Load()), args=[], keywords=[keyword(arg='kind', value=Constant(value='all'))]), ifs=[Compare(left=Attribute(value=Name(id='x', ctx=Load()), attr='pid', ctx=Load()), ops=[In()], comparators=[Name(id='pids', ctx=Load())])], is_async=0)])), For(target=Name(id='pid', ctx=Store()), iter=Name(id='pids', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[ListComp(elt=Name(id='x', ctx=Load()), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Name(id='syscons', ctx=Load()), ifs=[Compare(left=Attribute(value=Name(id='x', ctx=Load()), attr='pid', ctx=Load()), ops=[Eq()], comparators=[Name(id='pid', ctx=Load())])], is_async=0)])], keywords=[]), Name(id='expected', ctx=Load())], keywords=[])), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[Name(id='pid', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='connections', ctx=Load()), args=[Constant(value='all')], keywords=[])], keywords=[]), Name(id='expected', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[Call(func=Name(id='retry_on_failure', ctx=Load()), args=[], keywords=[])])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[Name(id='SKIP_SYSCONS', ctx=Load()), Constant(value='requires root')], keywords=[])]), ClassDef(name='TestMisc', bases=[Name(id='PsutilTestCase', ctx=Load())], keywords=[], body=[FunctionDef(name='test_connection_constants', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='ints', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='strs', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='name', ctx=Store()), iter=Call(func=Name(id='dir', ctx=Load()), args=[Name(id='psutil', ctx=Load())], keywords=[]), body=[If(test=Call(func=Attribute(value=Name(id='name', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='CONN_')], keywords=[]), body=[Assign(targets=[Name(id='num', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='psutil', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='str_', ctx=Store())], value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='num', ctx=Load())], keywords=[])), Assert(test=Call(func=Attribute(value=Name(id='str_', ctx=Load()), attr='isupper', ctx=Load()), args=[], keywords=[]), msg=Name(id='str_', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertNotIn', ctx=Load()), args=[Name(id='str', ctx=Load()), Name(id='strs', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertNotIn', ctx=Load()), args=[Name(id='num', ctx=Load()), Name(id='ints', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ints', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='num', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='strs', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='str_', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), If(test=Name(id='SUNOS', ctx=Load()), body=[Expr(value=Attribute(value=Name(id='psutil', ctx=Load()), attr='CONN_IDLE', ctx=Load())), Expr(value=Attribute(value=Name(id='psutil', ctx=Load()), attr='CONN_BOUND', ctx=Load()))], orelse=[]), If(test=Name(id='WINDOWS', ctx=Load()), body=[Expr(value=Attribute(value=Name(id='psutil', ctx=Load()), attr='CONN_DELETE_TCB', ctx=Load()))], orelse=[])], decorator_list=[])], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[ImportFrom(module='psutil.tests.runner', names=[alias(name='run_from_name')], level=0), Expr(value=Call(func=Name(id='run_from_name', ctx=Load()), args=[Name(id='__file__', ctx=Load())], keywords=[]))], orelse=[])], type_ignores=[])