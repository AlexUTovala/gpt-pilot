Module(body=[Expr(value=Constant(value='Miscellaneous tests.')), Import(names=[alias(name='ast')]), Import(names=[alias(name='collections')]), Import(names=[alias(name='errno')]), Import(names=[alias(name='json')]), Import(names=[alias(name='os')]), Import(names=[alias(name='pickle')]), Import(names=[alias(name='socket')]), Import(names=[alias(name='stat')]), Import(names=[alias(name='unittest')]), Import(names=[alias(name='psutil')]), Import(names=[alias(name='psutil.tests')]), ImportFrom(module='psutil', names=[alias(name='LINUX')], level=0), ImportFrom(module='psutil', names=[alias(name='POSIX')], level=0), ImportFrom(module='psutil', names=[alias(name='WINDOWS')], level=0), ImportFrom(module='psutil._common', names=[alias(name='bcat')], level=0), ImportFrom(module='psutil._common', names=[alias(name='cat')], level=0), ImportFrom(module='psutil._common', names=[alias(name='debug')], level=0), ImportFrom(module='psutil._common', names=[alias(name='isfile_strict')], level=0), ImportFrom(module='psutil._common', names=[alias(name='memoize')], level=0), ImportFrom(module='psutil._common', names=[alias(name='memoize_when_activated')], level=0), ImportFrom(module='psutil._common', names=[alias(name='parse_environ_block')], level=0), ImportFrom(module='psutil._common', names=[alias(name='supports_ipv6')], level=0), ImportFrom(module='psutil._common', names=[alias(name='wrap_numbers')], level=0), ImportFrom(module='psutil._compat', names=[alias(name='PY3')], level=0), ImportFrom(module='psutil._compat', names=[alias(name='FileNotFoundError')], level=0), ImportFrom(module='psutil._compat', names=[alias(name='redirect_stderr')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='APPVEYOR')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='CI_TESTING')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='HAS_BATTERY')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='HAS_MEMORY_MAPS')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='HAS_NET_IO_COUNTERS')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='HAS_SENSORS_BATTERY')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='HAS_SENSORS_FANS')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='HAS_SENSORS_TEMPERATURES')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='PYTHON_EXE')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='PYTHON_EXE_ENV')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='SCRIPTS_DIR')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='PsutilTestCase')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='mock')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='reload_module')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='sh')], level=0), ClassDef(name='TestSpecialMethods', bases=[Name(id='PsutilTestCase', ctx=Load())], keywords=[], body=[FunctionDef(name='test_check_pid_range', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='OverflowError', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='psutil', ctx=Load()), attr='_psplatform', ctx=Load()), attr='cext', ctx=Load()), attr='check_pid_range', ctx=Load()), args=[BinOp(left=Constant(value=2), op=Pow(), right=Constant(value=128))], keywords=[]))]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[BinOp(left=Constant(value=2), op=Pow(), right=Constant(value=128))], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_process__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='func')], kwonlyargs=[], kw_defaults=[], defaults=[Name(id='repr', ctx=Load())]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_testproc', ctx=Load()), args=[], keywords=[]), attr='pid', ctx=Load())], keywords=[])), Assign(targets=[Name(id='r', ctx=Store())], value=Call(func=Name(id='func', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Constant(value='psutil.Process'), Name(id='r', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[BinOp(left=Constant(value='pid=%s'), op=Mod(), right=Attribute(value=Name(id='p', ctx=Load()), attr='pid', ctx=Load())), Name(id='r', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[BinOp(left=Constant(value="name='%s'"), op=Mod(), right=Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='name', ctx=Load()), args=[], keywords=[])], keywords=[])), Call(func=Attribute(value=Name(id='r', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value="name=u'"), Constant(value="name='")], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Constant(value='status='), Name(id='r', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertNotIn', ctx=Load()), args=[Constant(value='exitcode='), Name(id='r', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='terminate', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='r', ctx=Store())], value=Call(func=Name(id='func', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Constant(value="status='terminated'"), Name(id='r', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Constant(value='exitcode='), Name(id='r', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), attr='object', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), Constant(value='name')], keywords=[keyword(arg='side_effect', value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='ZombieProcess', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getpid', ctx=Load()), args=[], keywords=[])], keywords=[]))]))], body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='r', ctx=Store())], value=Call(func=Name(id='func', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[BinOp(left=Constant(value='pid=%s'), op=Mod(), right=Attribute(value=Name(id='p', ctx=Load()), attr='pid', ctx=Load())), Name(id='r', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Constant(value="status='zombie'"), Name(id='r', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertNotIn', ctx=Load()), args=[Constant(value='name='), Name(id='r', ctx=Load())], keywords=[]))]), With(items=[withitem(context_expr=Call(func=Attribute(value=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), attr='object', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), Constant(value='name')], keywords=[keyword(arg='side_effect', value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getpid', ctx=Load()), args=[], keywords=[])], keywords=[]))]))], body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='r', ctx=Store())], value=Call(func=Name(id='func', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[BinOp(left=Constant(value='pid=%s'), op=Mod(), right=Attribute(value=Name(id='p', ctx=Load()), attr='pid', ctx=Load())), Name(id='r', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Constant(value='terminated'), Name(id='r', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertNotIn', ctx=Load()), args=[Constant(value='name='), Name(id='r', ctx=Load())], keywords=[]))]), With(items=[withitem(context_expr=Call(func=Attribute(value=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), attr='object', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), Constant(value='name')], keywords=[keyword(arg='side_effect', value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getpid', ctx=Load()), args=[], keywords=[])], keywords=[]))]))], body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='r', ctx=Store())], value=Call(func=Name(id='func', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[BinOp(left=Constant(value='pid=%s'), op=Mod(), right=Attribute(value=Name(id='p', ctx=Load()), attr='pid', ctx=Load())), Name(id='r', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertNotIn', ctx=Load()), args=[Constant(value='name='), Name(id='r', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_process__str__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='test_process__repr__', ctx=Load()), args=[], keywords=[keyword(arg='func', value=Name(id='str', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='test_error__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Error', ctx=Load()), args=[], keywords=[])], keywords=[]), Constant(value='psutil.Error()')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_error__str__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Error', ctx=Load()), args=[], keywords=[])], keywords=[]), Constant(value='')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_no_such_process__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), args=[Constant(value=321)], keywords=[])], keywords=[]), Constant(value="psutil.NoSuchProcess(pid=321, msg='process no longer exists')")], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), args=[Constant(value=321)], keywords=[keyword(arg='name', value=Constant(value='name')), keyword(arg='msg', value=Constant(value='msg'))])], keywords=[]), Constant(value="psutil.NoSuchProcess(pid=321, name='name', msg='msg')")], keywords=[]))], decorator_list=[]), FunctionDef(name='test_no_such_process__str__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), args=[Constant(value=321)], keywords=[])], keywords=[]), Constant(value='process no longer exists (pid=321)')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), args=[Constant(value=321)], keywords=[keyword(arg='name', value=Constant(value='name')), keyword(arg='msg', value=Constant(value='msg'))])], keywords=[]), Constant(value="msg (pid=321, name='name')")], keywords=[]))], decorator_list=[]), FunctionDef(name='test_zombie_process__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='ZombieProcess', ctx=Load()), args=[Constant(value=321)], keywords=[])], keywords=[]), Constant(value='psutil.ZombieProcess(pid=321, msg="PID still exists but it\'s a zombie")')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='ZombieProcess', ctx=Load()), args=[Constant(value=321)], keywords=[keyword(arg='name', value=Constant(value='name')), keyword(arg='ppid', value=Constant(value=320)), keyword(arg='msg', value=Constant(value='foo'))])], keywords=[]), Constant(value="psutil.ZombieProcess(pid=321, ppid=320, name='name', msg='foo')")], keywords=[]))], decorator_list=[]), FunctionDef(name='test_zombie_process__str__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='ZombieProcess', ctx=Load()), args=[Constant(value=321)], keywords=[])], keywords=[]), Constant(value="PID still exists but it's a zombie (pid=321)")], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='ZombieProcess', ctx=Load()), args=[Constant(value=321)], keywords=[keyword(arg='name', value=Constant(value='name')), keyword(arg='ppid', value=Constant(value=320)), keyword(arg='msg', value=Constant(value='foo'))])], keywords=[]), Constant(value="foo (pid=321, ppid=320, name='name')")], keywords=[]))], decorator_list=[]), FunctionDef(name='test_access_denied__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), args=[Constant(value=321)], keywords=[])], keywords=[]), Constant(value='psutil.AccessDenied(pid=321)')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), args=[Constant(value=321)], keywords=[keyword(arg='name', value=Constant(value='name')), keyword(arg='msg', value=Constant(value='msg'))])], keywords=[]), Constant(value="psutil.AccessDenied(pid=321, name='name', msg='msg')")], keywords=[]))], decorator_list=[]), FunctionDef(name='test_access_denied__str__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), args=[Constant(value=321)], keywords=[])], keywords=[]), Constant(value='(pid=321)')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), args=[Constant(value=321)], keywords=[keyword(arg='name', value=Constant(value='name')), keyword(arg='msg', value=Constant(value='msg'))])], keywords=[]), Constant(value="msg (pid=321, name='name')")], keywords=[]))], decorator_list=[]), FunctionDef(name='test_timeout_expired__repr__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='TimeoutExpired', ctx=Load()), args=[Constant(value=5)], keywords=[])], keywords=[]), Constant(value="psutil.TimeoutExpired(seconds=5, msg='timeout after 5 seconds')")], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='TimeoutExpired', ctx=Load()), args=[Constant(value=5)], keywords=[keyword(arg='pid', value=Constant(value=321)), keyword(arg='name', value=Constant(value='name'))])], keywords=[]), Constant(value="psutil.TimeoutExpired(pid=321, name='name', seconds=5, msg='timeout after 5 seconds')")], keywords=[]))], decorator_list=[]), FunctionDef(name='test_timeout_expired__str__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='TimeoutExpired', ctx=Load()), args=[Constant(value=5)], keywords=[])], keywords=[]), Constant(value='timeout after 5 seconds')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='TimeoutExpired', ctx=Load()), args=[Constant(value=5)], keywords=[keyword(arg='pid', value=Constant(value=321)), keyword(arg='name', value=Constant(value='name'))])], keywords=[]), Constant(value="timeout after 5 seconds (pid=321, name='name')")], keywords=[]))], decorator_list=[]), FunctionDef(name='test_process__eq__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p1', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='p2', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='p1', ctx=Load()), Name(id='p2', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='p2', ctx=Load()), attr='_ident', ctx=Store())], value=Tuple(elts=[Constant(value=0), Constant(value=0)], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertNotEqual', ctx=Load()), args=[Name(id='p1', ctx=Load()), Name(id='p2', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertNotEqual', ctx=Load()), args=[Name(id='p1', ctx=Load()), Constant(value='foo')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_process__hash__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='s', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[List(elts=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='s', ctx=Load())], keywords=[]), Constant(value=1)], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='TestMisc', bases=[Name(id='PsutilTestCase', ctx=Load())], keywords=[], body=[FunctionDef(name='test__all__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='dir_psutil', ctx=Store())], value=Call(func=Name(id='dir', ctx=Load()), args=[Name(id='psutil', ctx=Load())], keywords=[])), For(target=Name(id='name', ctx=Store()), iter=Name(id='dir_psutil', ctx=Load()), body=[If(test=Compare(left=Name(id='name', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='long'), Constant(value='tests'), Constant(value='test'), Constant(value='PermissionError'), Constant(value='ProcessLookupError')], ctx=Load())]), body=[Continue()], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='name', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='_')], keywords=[])), body=[Try(body=[Expr(value=Call(func=Name(id='__import__', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[If(test=Compare(left=Name(id='name', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='psutil', ctx=Load()), attr='__all__', ctx=Load())]), body=[Assign(targets=[Name(id='fun', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='psutil', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='fun', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Continue()], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='fun', ctx=Load()), attr='__doc__', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Constant(value='deprecated'), ops=[NotIn()], comparators=[Call(func=Attribute(value=Attribute(value=Name(id='fun', ctx=Load()), attr='__doc__', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])])]), body=[Raise(exc=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[BinOp(left=Constant(value='%r not in psutil.__all__'), op=Mod(), right=Name(id='name', ctx=Load()))], keywords=[]))], orelse=[])], orelse=[])])], orelse=[], finalbody=[])], orelse=[])], orelse=[]), For(target=Name(id='name', ctx=Store()), iter=Attribute(value=Name(id='psutil', ctx=Load()), attr='__all__', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='dir_psutil', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_version', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='.'), attr='join', ctx=Load()), args=[ListComp(elt=Call(func=Name(id='str', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Attribute(value=Name(id='psutil', ctx=Load()), attr='version_info', ctx=Load()), ifs=[], is_async=0)])], keywords=[]), Attribute(value=Name(id='psutil', ctx=Load()), attr='__version__', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_process_as_dict_no_new_names', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='p', ctx=Load()), attr='foo', ctx=Store())], value=Constant(value='1')), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertNotIn', ctx=Load()), args=[Constant(value='foo'), Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='as_dict', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_serialization', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='check', args=arguments(posonlyargs=[], args=[arg(arg='ret')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='json', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='loads', ctx=Load()), args=[Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='dumps', ctx=Load()), args=[Name(id='ret', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='a', ctx=Store())], value=Call(func=Attribute(value=Name(id='pickle', ctx=Load()), attr='dumps', ctx=Load()), args=[Name(id='ret', ctx=Load())], keywords=[])), Assign(targets=[Name(id='b', ctx=Store())], value=Call(func=Attribute(value=Name(id='pickle', ctx=Load()), attr='loads', ctx=Load()), args=[Name(id='a', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='ret', ctx=Load()), Name(id='b', ctx=Load())], keywords=[]))], decorator_list=[]), Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[]), attr='as_dict', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='virtual_memory', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='swap_memory', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='cpu_times', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='cpu_times_percent', ctx=Load()), args=[], keywords=[keyword(arg='interval', value=Constant(value=0))])], keywords=[])), Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='net_io_counters', ctx=Load()), args=[], keywords=[])], keywords=[])), If(test=BoolOp(op=And(), values=[Name(id='LINUX', ctx=Load()), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Constant(value='/proc/diskstats')], keywords=[]))]), body=[Pass()], orelse=[If(test=UnaryOp(op=Not(), operand=Name(id='APPVEYOR', ctx=Load())), body=[Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='disk_io_counters', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[])]), Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='disk_partitions', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='disk_usage', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Name(id='check', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='users', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_ad_on_process_creation', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), attr='object', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), Constant(value='create_time')], keywords=[keyword(arg='side_effect', value=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()))]), optional_vars=Name(id='meth', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assert(test=Attribute(value=Name(id='meth', ctx=Load()), attr='called', ctx=Load()))]), With(items=[withitem(context_expr=Call(func=Attribute(value=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), attr='object', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), Constant(value='create_time')], keywords=[keyword(arg='side_effect', value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='ZombieProcess', ctx=Load()), args=[Constant(value=1)], keywords=[]))]), optional_vars=Name(id='meth', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assert(test=Attribute(value=Name(id='meth', ctx=Load()), attr='called', ctx=Load()))]), With(items=[withitem(context_expr=Call(func=Attribute(value=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), attr='object', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), Constant(value='create_time')], keywords=[keyword(arg='side_effect', value=Name(id='ValueError', ctx=Load()))]), optional_vars=Name(id='meth', ctx=Store()))], body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[]))]), Assert(test=Attribute(value=Name(id='meth', ctx=Load()), attr='called', ctx=Load()))])], decorator_list=[]), FunctionDef(name='test_sanity_version_check', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil._psplatform.cext.version')], keywords=[keyword(arg='return_value', value=Constant(value='0.0.0'))]))], body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='ImportError', ctx=Load())], keywords=[]), optional_vars=Name(id='cm', ctx=Store()))], body=[Expr(value=Call(func=Name(id='reload_module', ctx=Load()), args=[Name(id='psutil', ctx=Load())], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Constant(value='version conflict'), Call(func=Attribute(value=Call(func=Name(id='str', ctx=Load()), args=[Attribute(value=Name(id='cm', ctx=Load()), attr='exception', ctx=Load())], keywords=[]), attr='lower', ctx=Load()), args=[], keywords=[])], keywords=[]))])], decorator_list=[])], decorator_list=[]), ClassDef(name='TestMemoizeDecorator', bases=[Name(id='PsutilTestCase', ctx=Load())], keywords=[], body=[FunctionDef(name='setUp', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='calls', ctx=Store())], value=List(elts=[], ctx=Load()))], decorator_list=[]), Assign(targets=[Name(id='tearDown', ctx=Store())], value=Name(id='setUp', ctx=Load())), FunctionDef(name='run_against', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='obj'), arg(arg='expected_retval')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[For(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=2)], keywords=[]), body=[Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Name(id='obj', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='calls', ctx=Load()), List(elts=[Tuple(elts=[Tuple(elts=[], ctx=Load()), Dict(keys=[], values=[])], ctx=Load())], ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='expected_retval', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='ret', ctx=Load()), Name(id='expected_retval', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), For(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=2)], keywords=[]), body=[Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Name(id='obj', ctx=Load()), args=[Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='calls', ctx=Load()), List(elts=[Tuple(elts=[Tuple(elts=[], ctx=Load()), Dict(keys=[], values=[])], ctx=Load()), Tuple(elts=[Tuple(elts=[Constant(value=1)], ctx=Load()), Dict(keys=[], values=[])], ctx=Load())], ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='expected_retval', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='ret', ctx=Load()), Name(id='expected_retval', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), For(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=2)], keywords=[]), body=[Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Name(id='obj', ctx=Load()), args=[Constant(value=1)], keywords=[keyword(arg='bar', value=Constant(value=2))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='calls', ctx=Load()), List(elts=[Tuple(elts=[Tuple(elts=[], ctx=Load()), Dict(keys=[], values=[])], ctx=Load()), Tuple(elts=[Tuple(elts=[Constant(value=1)], ctx=Load()), Dict(keys=[], values=[])], ctx=Load()), Tuple(elts=[Tuple(elts=[Constant(value=1)], ctx=Load()), Dict(keys=[Constant(value='bar')], values=[Constant(value=2)])], ctx=Load())], ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='expected_retval', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='ret', ctx=Load()), Name(id='expected_retval', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='calls', ctx=Load())], keywords=[]), Constant(value=3)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='obj', ctx=Load()), attr='cache_clear', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Name(id='obj', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='expected_retval', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='ret', ctx=Load()), Name(id='expected_retval', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='calls', ctx=Load())], keywords=[]), Constant(value=4)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='obj', ctx=Load()), attr='__doc__', ctx=Load()), Constant(value='My docstring.')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_function', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='foo', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Constant(value='My docstring.')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='baseclass', ctx=Load()), attr='calls', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='args', ctx=Load()), Name(id='kwargs', ctx=Load())], ctx=Load())], keywords=[])), Return(value=Constant(value=22))], decorator_list=[Name(id='memoize', ctx=Load())]), Assign(targets=[Name(id='baseclass', ctx=Store())], value=Name(id='self', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_against', ctx=Load()), args=[Name(id='foo', ctx=Load())], keywords=[keyword(arg='expected_retval', value=Constant(value=22))]))], decorator_list=[]), FunctionDef(name='test_class', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[ClassDef(name='Foo', bases=[], keywords=[], body=[Expr(value=Constant(value='My docstring.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='baseclass', ctx=Load()), attr='calls', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='args', ctx=Load()), Name(id='kwargs', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='bar', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=22))], decorator_list=[])], decorator_list=[Name(id='memoize', ctx=Load())]), Assign(targets=[Name(id='baseclass', ctx=Store())], value=Name(id='self', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_against', ctx=Load()), args=[Name(id='Foo', ctx=Load())], keywords=[keyword(arg='expected_retval', value=Constant(value=None))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Name(id='Foo', ctx=Load()), args=[], keywords=[]), attr='bar', ctx=Load()), args=[], keywords=[]), Constant(value=22)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_class_singleton', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[ClassDef(name='Bar', bases=[], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Pass()], decorator_list=[])], decorator_list=[Name(id='memoize', ctx=Load())]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIs', ctx=Load()), args=[Call(func=Name(id='Bar', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='Bar', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='id', ctx=Load()), args=[Call(func=Name(id='Bar', ctx=Load()), args=[], keywords=[])], keywords=[]), Call(func=Name(id='id', ctx=Load()), args=[Call(func=Name(id='Bar', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='id', ctx=Load()), args=[Call(func=Name(id='Bar', ctx=Load()), args=[Constant(value=1)], keywords=[])], keywords=[]), Call(func=Name(id='id', ctx=Load()), args=[Call(func=Name(id='Bar', ctx=Load()), args=[Constant(value=1)], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='id', ctx=Load()), args=[Call(func=Name(id='Bar', ctx=Load()), args=[Constant(value=1)], keywords=[keyword(arg='foo', value=Constant(value=3))])], keywords=[]), Call(func=Name(id='id', ctx=Load()), args=[Call(func=Name(id='Bar', ctx=Load()), args=[Constant(value=1)], keywords=[keyword(arg='foo', value=Constant(value=3))])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertNotEqual', ctx=Load()), args=[Call(func=Name(id='id', ctx=Load()), args=[Call(func=Name(id='Bar', ctx=Load()), args=[Constant(value=1)], keywords=[])], keywords=[]), Call(func=Name(id='id', ctx=Load()), args=[Call(func=Name(id='Bar', ctx=Load()), args=[Constant(value=2)], keywords=[])], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_staticmethod', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[ClassDef(name='Foo', bases=[], keywords=[], body=[FunctionDef(name='bar', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Constant(value='My docstring.')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='baseclass', ctx=Load()), attr='calls', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='args', ctx=Load()), Name(id='kwargs', ctx=Load())], ctx=Load())], keywords=[])), Return(value=Constant(value=22))], decorator_list=[Name(id='staticmethod', ctx=Load()), Name(id='memoize', ctx=Load())])], decorator_list=[]), Assign(targets=[Name(id='baseclass', ctx=Store())], value=Name(id='self', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_against', ctx=Load()), args=[Attribute(value=Call(func=Name(id='Foo', ctx=Load()), args=[], keywords=[]), attr='bar', ctx=Load())], keywords=[keyword(arg='expected_retval', value=Constant(value=22))]))], decorator_list=[]), FunctionDef(name='test_classmethod', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[ClassDef(name='Foo', bases=[], keywords=[], body=[FunctionDef(name='bar', args=arguments(posonlyargs=[], args=[arg(arg='cls')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Constant(value='My docstring.')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='baseclass', ctx=Load()), attr='calls', ctx=Load()), attr='append', ctx=Load()), args=[Tuple(elts=[Name(id='args', ctx=Load()), Name(id='kwargs', ctx=Load())], ctx=Load())], keywords=[])), Return(value=Constant(value=22))], decorator_list=[Name(id='classmethod', ctx=Load()), Name(id='memoize', ctx=Load())])], decorator_list=[]), Assign(targets=[Name(id='baseclass', ctx=Store())], value=Name(id='self', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='run_against', ctx=Load()), args=[Attribute(value=Call(func=Name(id='Foo', ctx=Load()), args=[], keywords=[]), attr='bar', ctx=Load())], keywords=[keyword(arg='expected_retval', value=Constant(value=22))]))], decorator_list=[]), FunctionDef(name='test_original', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='foo', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Constant(value='Foo docstring.')), Expr(value=Call(func=Attribute(value=Name(id='calls', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value=None)], keywords=[])), Return(value=Tuple(elts=[Name(id='args', ctx=Load()), Name(id='kwargs', ctx=Load())], ctx=Load()))], decorator_list=[Name(id='memoize', ctx=Load())]), Assign(targets=[Name(id='calls', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=2)], keywords=[]), body=[Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Name(id='foo', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='expected', ctx=Store())], value=Tuple(elts=[Tuple(elts=[], ctx=Load()), Dict(keys=[], values=[])], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='ret', ctx=Load()), Name(id='expected', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='calls', ctx=Load())], keywords=[]), Constant(value=1)], keywords=[]))], orelse=[]), For(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=2)], keywords=[]), body=[Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Name(id='foo', ctx=Load()), args=[Constant(value=1)], keywords=[])), Assign(targets=[Name(id='expected', ctx=Store())], value=Tuple(elts=[Tuple(elts=[Constant(value=1)], ctx=Load()), Dict(keys=[], values=[])], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='ret', ctx=Load()), Name(id='expected', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='calls', ctx=Load())], keywords=[]), Constant(value=2)], keywords=[]))], orelse=[]), For(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=2)], keywords=[]), body=[Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Name(id='foo', ctx=Load()), args=[Constant(value=1)], keywords=[keyword(arg='bar', value=Constant(value=2))])), Assign(targets=[Name(id='expected', ctx=Store())], value=Tuple(elts=[Tuple(elts=[Constant(value=1)], ctx=Load()), Dict(keys=[Constant(value='bar')], values=[Constant(value=2)])], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='ret', ctx=Load()), Name(id='expected', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='calls', ctx=Load())], keywords=[]), Constant(value=3)], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='foo', ctx=Load()), attr='cache_clear', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Name(id='foo', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='expected', ctx=Store())], value=Tuple(elts=[Tuple(elts=[], ctx=Load()), Dict(keys=[], values=[])], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='ret', ctx=Load()), Name(id='expected', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='calls', ctx=Load())], keywords=[]), Constant(value=4)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='foo', ctx=Load()), attr='__doc__', ctx=Load()), Constant(value='Foo docstring.')], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='TestCommonModule', bases=[Name(id='PsutilTestCase', ctx=Load())], keywords=[], body=[FunctionDef(name='test_memoize_when_activated', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[ClassDef(name='Foo', bases=[], keywords=[], body=[FunctionDef(name='foo', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='calls', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value=None)], keywords=[]))], decorator_list=[Name(id='memoize_when_activated', ctx=Load())])], decorator_list=[]), Assign(targets=[Name(id='f', ctx=Store())], value=Call(func=Name(id='Foo', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='calls', ctx=Store())], value=List(elts=[], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='foo', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='foo', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='calls', ctx=Load())], keywords=[]), Constant(value=2)], keywords=[])), Assign(targets=[Name(id='calls', ctx=Store())], value=List(elts=[], ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='f', ctx=Load()), attr='foo', ctx=Load()), attr='cache_activate', ctx=Load()), args=[Name(id='f', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='foo', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='foo', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='calls', ctx=Load())], keywords=[]), Constant(value=1)], keywords=[])), Assign(targets=[Name(id='calls', ctx=Store())], value=List(elts=[], ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='f', ctx=Load()), attr='foo', ctx=Load()), attr='cache_deactivate', ctx=Load()), args=[Name(id='f', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='foo', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='foo', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='calls', ctx=Load())], keywords=[]), Constant(value=2)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_parse_environ_block', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='k', args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=IfExp(test=Name(id='WINDOWS', ctx=Load()), body=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='upper', ctx=Load()), args=[], keywords=[]), orelse=Name(id='s', ctx=Load())))], decorator_list=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='parse_environ_block', ctx=Load()), args=[Constant(value='a=1\x00')], keywords=[]), Dict(keys=[Call(func=Name(id='k', ctx=Load()), args=[Constant(value='a')], keywords=[])], values=[Constant(value='1')])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='parse_environ_block', ctx=Load()), args=[Constant(value='a=1\x00b=2\x00\x00')], keywords=[]), Dict(keys=[Call(func=Name(id='k', ctx=Load()), args=[Constant(value='a')], keywords=[]), Call(func=Name(id='k', ctx=Load()), args=[Constant(value='b')], keywords=[])], values=[Constant(value='1'), Constant(value='2')])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='parse_environ_block', ctx=Load()), args=[Constant(value='a=1\x00b=\x00\x00')], keywords=[]), Dict(keys=[Call(func=Name(id='k', ctx=Load()), args=[Constant(value='a')], keywords=[]), Call(func=Name(id='k', ctx=Load()), args=[Constant(value='b')], keywords=[])], values=[Constant(value='1'), Constant(value='')])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='parse_environ_block', ctx=Load()), args=[Constant(value='a=1\x00b=2\x00\x00c=3\x00')], keywords=[]), Dict(keys=[Call(func=Name(id='k', ctx=Load()), args=[Constant(value='a')], keywords=[]), Call(func=Name(id='k', ctx=Load()), args=[Constant(value='b')], keywords=[])], values=[Constant(value='1'), Constant(value='2')])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='parse_environ_block', ctx=Load()), args=[Constant(value='xxx\x00a=1\x00')], keywords=[]), Dict(keys=[Call(func=Name(id='k', ctx=Load()), args=[Constant(value='a')], keywords=[])], values=[Constant(value='1')])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='parse_environ_block', ctx=Load()), args=[Constant(value='a=1\x00=b=2\x00')], keywords=[]), Dict(keys=[Call(func=Name(id='k', ctx=Load()), args=[Constant(value='a')], keywords=[])], values=[Constant(value='1')])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='parse_environ_block', ctx=Load()), args=[Constant(value='a=1\x00b=2')], keywords=[]), Dict(keys=[Call(func=Name(id='k', ctx=Load()), args=[Constant(value='a')], keywords=[])], values=[Constant(value='1')])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_supports_ipv6', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='addCleanup', ctx=Load()), args=[Attribute(value=Name(id='supports_ipv6', ctx=Load()), attr='cache_clear', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='supports_ipv6', ctx=Load()), args=[], keywords=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil._common.socket')], keywords=[]), optional_vars=Name(id='s', ctx=Store()))], body=[Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='has_ipv6', ctx=Store())], value=Constant(value=False)), Expr(value=Call(func=Attribute(value=Name(id='supports_ipv6', ctx=Load()), attr='cache_clear', ctx=Load()), args=[], keywords=[])), Assert(test=UnaryOp(op=Not(), operand=Call(func=Name(id='supports_ipv6', ctx=Load()), args=[], keywords=[])))]), Expr(value=Call(func=Attribute(value=Name(id='supports_ipv6', ctx=Load()), attr='cache_clear', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil._common.socket.socket')], keywords=[keyword(arg='side_effect', value=Attribute(value=Name(id='socket', ctx=Load()), attr='error', ctx=Load()))]), optional_vars=Name(id='s', ctx=Store()))], body=[Assert(test=UnaryOp(op=Not(), operand=Call(func=Name(id='supports_ipv6', ctx=Load()), args=[], keywords=[]))), Assert(test=Attribute(value=Name(id='s', ctx=Load()), attr='called', ctx=Load()))]), Expr(value=Call(func=Attribute(value=Name(id='supports_ipv6', ctx=Load()), attr='cache_clear', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil._common.socket.socket')], keywords=[keyword(arg='side_effect', value=Attribute(value=Name(id='socket', ctx=Load()), attr='gaierror', ctx=Load()))]), optional_vars=Name(id='s', ctx=Store()))], body=[Assert(test=UnaryOp(op=Not(), operand=Call(func=Name(id='supports_ipv6', ctx=Load()), args=[], keywords=[]))), Expr(value=Call(func=Attribute(value=Name(id='supports_ipv6', ctx=Load()), attr='cache_clear', ctx=Load()), args=[], keywords=[])), Assert(test=Attribute(value=Name(id='s', ctx=Load()), attr='called', ctx=Load()))]), Expr(value=Call(func=Attribute(value=Name(id='supports_ipv6', ctx=Load()), attr='cache_clear', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil._common.socket.socket.bind')], keywords=[keyword(arg='side_effect', value=Attribute(value=Name(id='socket', ctx=Load()), attr='gaierror', ctx=Load()))]), optional_vars=Name(id='s', ctx=Store()))], body=[Assert(test=UnaryOp(op=Not(), operand=Call(func=Name(id='supports_ipv6', ctx=Load()), args=[], keywords=[]))), Expr(value=Call(func=Attribute(value=Name(id='supports_ipv6', ctx=Load()), attr='cache_clear', ctx=Load()), args=[], keywords=[])), Assert(test=Attribute(value=Name(id='s', ctx=Load()), attr='called', ctx=Load()))])], orelse=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='socket', ctx=Load()), attr='error', ctx=Load())], keywords=[]))], body=[Assign(targets=[Name(id='sock', ctx=Store())], value=Call(func=Attribute(value=Name(id='socket', ctx=Load()), attr='socket', ctx=Load()), args=[Attribute(value=Name(id='socket', ctx=Load()), attr='AF_INET6', ctx=Load()), Attribute(value=Name(id='socket', ctx=Load()), attr='SOCK_STREAM', ctx=Load())], keywords=[])), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='sock', ctx=Load()), attr='bind', ctx=Load()), args=[Tuple(elts=[Constant(value='::1'), Constant(value=0)], ctx=Load())], keywords=[]))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='sock', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))])])])], decorator_list=[]), FunctionDef(name='test_isfile_strict', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='this_file', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='abspath', ctx=Load()), args=[Name(id='__file__', ctx=Load())], keywords=[])), Assert(test=Call(func=Name(id='isfile_strict', ctx=Load()), args=[Name(id='this_file', ctx=Load())], keywords=[])), Assert(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isfile_strict', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='dirname', ctx=Load()), args=[Name(id='this_file', ctx=Load())], keywords=[])], keywords=[]))), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil._common.os.stat')], keywords=[keyword(arg='side_effect', value=Call(func=Name(id='OSError', ctx=Load()), args=[Attribute(value=Name(id='errno', ctx=Load()), attr='EPERM', ctx=Load()), Constant(value='foo')], keywords=[]))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='OSError', ctx=Load()), Name(id='isfile_strict', ctx=Load()), Name(id='this_file', ctx=Load())], keywords=[]))]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil._common.os.stat')], keywords=[keyword(arg='side_effect', value=Call(func=Name(id='OSError', ctx=Load()), args=[Attribute(value=Name(id='errno', ctx=Load()), attr='EACCES', ctx=Load()), Constant(value='foo')], keywords=[]))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='OSError', ctx=Load()), Name(id='isfile_strict', ctx=Load()), Name(id='this_file', ctx=Load())], keywords=[]))]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil._common.os.stat')], keywords=[keyword(arg='side_effect', value=Call(func=Name(id='OSError', ctx=Load()), args=[Attribute(value=Name(id='errno', ctx=Load()), attr='ENOENT', ctx=Load()), Constant(value='foo')], keywords=[]))]))], body=[Assert(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isfile_strict', ctx=Load()), args=[Name(id='this_file', ctx=Load())], keywords=[])))]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil._common.stat.S_ISREG')], keywords=[keyword(arg='return_value', value=Constant(value=False))]))], body=[Assert(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isfile_strict', ctx=Load()), args=[Name(id='this_file', ctx=Load())], keywords=[])))])], decorator_list=[]), FunctionDef(name='test_debug', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Name(id='PY3', ctx=Load()), body=[ImportFrom(module='io', names=[alias(name='StringIO')], level=0)], orelse=[ImportFrom(module='StringIO', names=[alias(name='StringIO')], level=0)]), With(items=[withitem(context_expr=Call(func=Name(id='redirect_stderr', ctx=Load()), args=[Call(func=Name(id='StringIO', ctx=Load()), args=[], keywords=[])], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Expr(value=Call(func=Name(id='debug', ctx=Load()), args=[Constant(value='hello')], keywords=[]))]), Assign(targets=[Name(id='msg', ctx=Store())], value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='getvalue', ctx=Load()), args=[], keywords=[])), Assert(test=Call(func=Attribute(value=Name(id='msg', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='psutil-debug')], keywords=[]), msg=Name(id='msg', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Constant(value='hello'), Name(id='msg', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Call(func=Attribute(value=Name(id='__file__', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='.pyc'), Constant(value='.py')], keywords=[]), Name(id='msg', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='redirect_stderr', ctx=Load()), args=[Call(func=Name(id='StringIO', ctx=Load()), args=[], keywords=[])], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Expr(value=Call(func=Name(id='debug', ctx=Load()), args=[Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='this is an error')], keywords=[])], keywords=[]))]), Assign(targets=[Name(id='msg', ctx=Store())], value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='getvalue', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Constant(value='ignoring ValueError'), Name(id='msg', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Constant(value="'this is an error'"), Name(id='msg', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='redirect_stderr', ctx=Load()), args=[Call(func=Name(id='StringIO', ctx=Load()), args=[], keywords=[])], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Assign(targets=[Name(id='exc', ctx=Store())], value=Call(func=Name(id='OSError', ctx=Load()), args=[Constant(value=2), Constant(value='no such file')], keywords=[])), Assign(targets=[Attribute(value=Name(id='exc', ctx=Load()), attr='filename', ctx=Store())], value=Constant(value='/foo')), Expr(value=Call(func=Name(id='debug', ctx=Load()), args=[Name(id='exc', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='msg', ctx=Store())], value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='getvalue', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Constant(value='no such file'), Name(id='msg', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Constant(value='/foo'), Name(id='msg', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_cat_bcat', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='testfn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_testfn', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='testfn', ctx=Load()), Constant(value='w')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='write', ctx=Load()), args=[Constant(value='foo')], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='cat', ctx=Load()), args=[Name(id='testfn', ctx=Load())], keywords=[]), Constant(value='foo')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bcat', ctx=Load()), args=[Name(id='testfn', ctx=Load())], keywords=[]), Constant(value=b'foo')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='FileNotFoundError', ctx=Load()), Name(id='cat', ctx=Load()), BinOp(left=Name(id='testfn', ctx=Load()), op=Add(), right=Constant(value='-invalid'))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='FileNotFoundError', ctx=Load()), Name(id='bcat', ctx=Load()), BinOp(left=Name(id='testfn', ctx=Load()), op=Add(), right=Constant(value='-invalid'))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='cat', ctx=Load()), args=[BinOp(left=Name(id='testfn', ctx=Load()), op=Add(), right=Constant(value='-invalid'))], keywords=[keyword(arg='fallback', value=Constant(value='bar'))]), Constant(value='bar')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='bcat', ctx=Load()), args=[BinOp(left=Name(id='testfn', ctx=Load()), op=Add(), right=Constant(value='-invalid'))], keywords=[keyword(arg='fallback', value=Constant(value='bar'))]), Constant(value='bar')], keywords=[]))], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='nt', ctx=Store())], value=Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='namedtuple', ctx=Load()), args=[Constant(value='foo'), Constant(value='a b c')], keywords=[])), ClassDef(name='TestWrapNumbers', bases=[Name(id='PsutilTestCase', ctx=Load())], keywords=[], body=[FunctionDef(name='setUp', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='wrap_numbers', ctx=Load()), attr='cache_clear', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='tearDown', ctx=Store())], value=Name(id='setUp', ctx=Load())), FunctionDef(name='test_first_call', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=5), Constant(value=5), Constant(value=5)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Name(id='input', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_input_hasnt_changed', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=5), Constant(value=5), Constant(value=5)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Name(id='input', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Name(id='input', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_increase_but_no_wrap', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=5), Constant(value=5), Constant(value=5)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Name(id='input', ctx=Load())], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=10), Constant(value=15), Constant(value=20)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Name(id='input', ctx=Load())], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=20), Constant(value=25), Constant(value=30)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Name(id='input', ctx=Load())], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=20), Constant(value=25), Constant(value=30)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Name(id='input', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_wrap', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=100)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Name(id='input', ctx=Load())], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=10)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=110)], keywords=[])])], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=10)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=110)], keywords=[])])], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=90)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=190)], keywords=[])])], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=20)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=210)], keywords=[])])], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=20)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=210)], keywords=[])])], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=50), Constant(value=100), Constant(value=20)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=150), Constant(value=100), Constant(value=210)], keywords=[])])], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=40), Constant(value=100), Constant(value=20)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=190), Constant(value=100), Constant(value=210)], keywords=[])])], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=40), Constant(value=100), Constant(value=20)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=190), Constant(value=100), Constant(value=210)], keywords=[])])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_changing_keys', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=5), Constant(value=5), Constant(value=5)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Name(id='input', ctx=Load())], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1'), Constant(value='disk2')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=5), Constant(value=5), Constant(value=5)], keywords=[]), Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=7), Constant(value=7), Constant(value=7)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Name(id='input', ctx=Load())], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=8), Constant(value=8), Constant(value=8)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Name(id='input', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_changing_keys_w_wrap', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1'), Constant(value='disk2')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=50), Constant(value=50), Constant(value=50)], keywords=[]), Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=100)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Name(id='input', ctx=Load())], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1'), Constant(value='disk2')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=50), Constant(value=50), Constant(value=50)], keywords=[]), Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=10)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Dict(keys=[Constant(value='disk1'), Constant(value='disk2')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=50), Constant(value=50), Constant(value=50)], keywords=[]), Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=110)], keywords=[])])], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=50), Constant(value=50), Constant(value=50)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Name(id='input', ctx=Load())], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1'), Constant(value='disk2')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=50), Constant(value=50), Constant(value=50)], keywords=[]), Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=100)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Name(id='input', ctx=Load())], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1'), Constant(value='disk2')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=50), Constant(value=50), Constant(value=50)], keywords=[]), Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=100)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Name(id='input', ctx=Load())], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1'), Constant(value='disk2')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=50), Constant(value=50), Constant(value=50)], keywords=[]), Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=10)], keywords=[])])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[]), Dict(keys=[Constant(value='disk1'), Constant(value='disk2')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=50), Constant(value=50), Constant(value=50)], keywords=[]), Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=110)], keywords=[])])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_real_data', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='d', ctx=Store())], value=Dict(keys=[Constant(value='nvme0n1'), Constant(value='nvme0n1p1'), Constant(value='nvme0n1p2'), Constant(value='nvme0n1p3')], values=[Tuple(elts=[Constant(value=300), Constant(value=508), Constant(value=640), Constant(value=1571), Constant(value=5970), Constant(value=1987), Constant(value=2049), Constant(value=451751), Constant(value=47048)], ctx=Load()), Tuple(elts=[Constant(value=1171), Constant(value=2), Constant(value=5600256), Constant(value=1024), Constant(value=516), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=8)], ctx=Load()), Tuple(elts=[Constant(value=54), Constant(value=54), Constant(value=2396160), Constant(value=5165056), Constant(value=4), Constant(value=24), Constant(value=30), Constant(value=1207), Constant(value=28)], ctx=Load()), Tuple(elts=[Constant(value=2389), Constant(value=4539), Constant(value=5154), Constant(value=150), Constant(value=4828), Constant(value=1844), Constant(value=2019), Constant(value=398), Constant(value=348)], ctx=Load())])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='d', ctx=Load()), Constant(value='disk_io')], keywords=[]), Name(id='d', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='d', ctx=Load()), Constant(value='disk_io')], keywords=[]), Name(id='d', ctx=Load())], keywords=[])), Assign(targets=[Name(id='d', ctx=Store())], value=Dict(keys=[Constant(value='nvme0n1'), Constant(value='nvme0n1p1'), Constant(value='nvme0n1p2'), Constant(value='nvme0n1p3')], values=[Tuple(elts=[Constant(value=100), Constant(value=508), Constant(value=640), Constant(value=1571), Constant(value=5970), Constant(value=1987), Constant(value=2049), Constant(value=451751), Constant(value=47048)], ctx=Load()), Tuple(elts=[Constant(value=1171), Constant(value=2), Constant(value=5600256), Constant(value=1024), Constant(value=516), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=8)], ctx=Load()), Tuple(elts=[Constant(value=54), Constant(value=54), Constant(value=2396160), Constant(value=5165056), Constant(value=4), Constant(value=24), Constant(value=30), Constant(value=1207), Constant(value=28)], ctx=Load()), Tuple(elts=[Constant(value=2389), Constant(value=4539), Constant(value=5154), Constant(value=150), Constant(value=4828), Constant(value=1844), Constant(value=2019), Constant(value=398), Constant(value=348)], ctx=Load())])), Assign(targets=[Name(id='out', ctx=Store())], value=Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='d', ctx=Load()), Constant(value='disk_io')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Subscript(value=Name(id='out', ctx=Load()), slice=Constant(value='nvme0n1'), ctx=Load()), slice=Constant(value=0), ctx=Load()), Constant(value=400)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_cache_first_call', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=5), Constant(value=5), Constant(value=5)], keywords=[])])), Expr(value=Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[])), Assign(targets=[Name(id='cache', ctx=Store())], value=Call(func=Attribute(value=Name(id='wrap_numbers', ctx=Load()), attr='cache_info', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='cache', ctx=Load()), slice=Constant(value=0), ctx=Load()), Dict(keys=[Constant(value='disk_io')], values=[Name(id='input', ctx=Load())])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='cache', ctx=Load()), slice=Constant(value=1), ctx=Load()), Dict(keys=[Constant(value='disk_io')], values=[Dict(keys=[], values=[])])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='cache', ctx=Load()), slice=Constant(value=2), ctx=Load()), Dict(keys=[Constant(value='disk_io')], values=[Dict(keys=[], values=[])])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_cache_call_twice', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=5), Constant(value=5), Constant(value=5)], keywords=[])])), Expr(value=Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=10), Constant(value=10), Constant(value=10)], keywords=[])])), Expr(value=Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[])), Assign(targets=[Name(id='cache', ctx=Store())], value=Call(func=Attribute(value=Name(id='wrap_numbers', ctx=Load()), attr='cache_info', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='cache', ctx=Load()), slice=Constant(value=0), ctx=Load()), Dict(keys=[Constant(value='disk_io')], values=[Name(id='input', ctx=Load())])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='cache', ctx=Load()), slice=Constant(value=1), ctx=Load()), Dict(keys=[Constant(value='disk_io')], values=[Dict(keys=[Tuple(elts=[Constant(value='disk1'), Constant(value=0)], ctx=Load()), Tuple(elts=[Constant(value='disk1'), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value='disk1'), Constant(value=2)], ctx=Load())], values=[Constant(value=0), Constant(value=0), Constant(value=0)])])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='cache', ctx=Load()), slice=Constant(value=2), ctx=Load()), Dict(keys=[Constant(value='disk_io')], values=[Dict(keys=[], values=[])])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_cache_wrap', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=100)], keywords=[])])), Expr(value=Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=10)], keywords=[])])), Expr(value=Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[])), Assign(targets=[Name(id='cache', ctx=Store())], value=Call(func=Attribute(value=Name(id='wrap_numbers', ctx=Load()), attr='cache_info', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='cache', ctx=Load()), slice=Constant(value=0), ctx=Load()), Dict(keys=[Constant(value='disk_io')], values=[Name(id='input', ctx=Load())])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='cache', ctx=Load()), slice=Constant(value=1), ctx=Load()), Dict(keys=[Constant(value='disk_io')], values=[Dict(keys=[Tuple(elts=[Constant(value='disk1'), Constant(value=0)], ctx=Load()), Tuple(elts=[Constant(value='disk1'), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value='disk1'), Constant(value=2)], ctx=Load())], values=[Constant(value=0), Constant(value=0), Constant(value=100)])])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='cache', ctx=Load()), slice=Constant(value=2), ctx=Load()), Dict(keys=[Constant(value='disk_io')], values=[Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='set', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='disk1'), Constant(value=2)], ctx=Load())], ctx=Load())], keywords=[])])])], keywords=[])), FunctionDef(name='check_cache_info', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='cache', ctx=Store())], value=Call(func=Attribute(value=Name(id='wrap_numbers', ctx=Load()), attr='cache_info', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='cache', ctx=Load()), slice=Constant(value=1), ctx=Load()), Dict(keys=[Constant(value='disk_io')], values=[Dict(keys=[Tuple(elts=[Constant(value='disk1'), Constant(value=0)], ctx=Load()), Tuple(elts=[Constant(value='disk1'), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value='disk1'), Constant(value=2)], ctx=Load())], values=[Constant(value=0), Constant(value=0), Constant(value=100)])])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='cache', ctx=Load()), slice=Constant(value=2), ctx=Load()), Dict(keys=[Constant(value='disk_io')], values=[Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='set', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='disk1'), Constant(value=2)], ctx=Load())], ctx=Load())], keywords=[])])])], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=10)], keywords=[])])), Expr(value=Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[])), Assign(targets=[Name(id='cache', ctx=Store())], value=Call(func=Attribute(value=Name(id='wrap_numbers', ctx=Load()), attr='cache_info', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='cache', ctx=Load()), slice=Constant(value=0), ctx=Load()), Dict(keys=[Constant(value='disk_io')], values=[Name(id='input', ctx=Load())])], keywords=[])), Expr(value=Call(func=Name(id='check_cache_info', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=90)], keywords=[])])), Expr(value=Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[])), Assign(targets=[Name(id='cache', ctx=Store())], value=Call(func=Attribute(value=Name(id='wrap_numbers', ctx=Load()), attr='cache_info', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='cache', ctx=Load()), slice=Constant(value=0), ctx=Load()), Dict(keys=[Constant(value='disk_io')], values=[Name(id='input', ctx=Load())])], keywords=[])), Expr(value=Call(func=Name(id='check_cache_info', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=100), Constant(value=100), Constant(value=20)], keywords=[])])), Expr(value=Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[])), Assign(targets=[Name(id='cache', ctx=Store())], value=Call(func=Attribute(value=Name(id='wrap_numbers', ctx=Load()), attr='cache_info', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='cache', ctx=Load()), slice=Constant(value=0), ctx=Load()), Dict(keys=[Constant(value='disk_io')], values=[Name(id='input', ctx=Load())])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='cache', ctx=Load()), slice=Constant(value=1), ctx=Load()), Dict(keys=[Constant(value='disk_io')], values=[Dict(keys=[Tuple(elts=[Constant(value='disk1'), Constant(value=0)], ctx=Load()), Tuple(elts=[Constant(value='disk1'), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value='disk1'), Constant(value=2)], ctx=Load())], values=[Constant(value=0), Constant(value=0), Constant(value=190)])])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='cache', ctx=Load()), slice=Constant(value=2), ctx=Load()), Dict(keys=[Constant(value='disk_io')], values=[Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='set', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='disk1'), Constant(value=2)], ctx=Load())], ctx=Load())], keywords=[])])])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_cache_changing_keys', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=5), Constant(value=5), Constant(value=5)], keywords=[])])), Expr(value=Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[])), Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1'), Constant(value='disk2')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=5), Constant(value=5), Constant(value=5)], keywords=[]), Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=7), Constant(value=7), Constant(value=7)], keywords=[])])), Expr(value=Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[])), Assign(targets=[Name(id='cache', ctx=Store())], value=Call(func=Attribute(value=Name(id='wrap_numbers', ctx=Load()), attr='cache_info', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='cache', ctx=Load()), slice=Constant(value=0), ctx=Load()), Dict(keys=[Constant(value='disk_io')], values=[Name(id='input', ctx=Load())])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='cache', ctx=Load()), slice=Constant(value=1), ctx=Load()), Dict(keys=[Constant(value='disk_io')], values=[Dict(keys=[Tuple(elts=[Constant(value='disk1'), Constant(value=0)], ctx=Load()), Tuple(elts=[Constant(value='disk1'), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value='disk1'), Constant(value=2)], ctx=Load())], values=[Constant(value=0), Constant(value=0), Constant(value=0)])])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='cache', ctx=Load()), slice=Constant(value=2), ctx=Load()), Dict(keys=[Constant(value='disk_io')], values=[Dict(keys=[], values=[])])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_cache_clear', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='input', ctx=Store())], value=Dict(keys=[Constant(value='disk1')], values=[Call(func=Name(id='nt', ctx=Load()), args=[Constant(value=5), Constant(value=5), Constant(value=5)], keywords=[])])), Expr(value=Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[])), Expr(value=Call(func=Name(id='wrap_numbers', ctx=Load()), args=[Name(id='input', ctx=Load()), Constant(value='disk_io')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='wrap_numbers', ctx=Load()), attr='cache_clear', ctx=Load()), args=[Constant(value='disk_io')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='wrap_numbers', ctx=Load()), attr='cache_info', ctx=Load()), args=[], keywords=[]), Tuple(elts=[Dict(keys=[], values=[]), Dict(keys=[], values=[]), Dict(keys=[], values=[])], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='wrap_numbers', ctx=Load()), attr='cache_clear', ctx=Load()), args=[Constant(value='disk_io')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='wrap_numbers', ctx=Load()), attr='cache_clear', ctx=Load()), args=[Constant(value='?!?')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_cache_clear_public_apis', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=BoolOp(op=Or(), values=[UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='disk_io_counters', ctx=Load()), args=[], keywords=[])), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='net_io_counters', ctx=Load()), args=[], keywords=[]))]), body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='skipTest', ctx=Load()), args=[Constant(value='no disks or NICs available')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='disk_io_counters', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='net_io_counters', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='caches', ctx=Store())], value=Call(func=Attribute(value=Name(id='wrap_numbers', ctx=Load()), attr='cache_info', ctx=Load()), args=[], keywords=[])), For(target=Name(id='cache', ctx=Store()), iter=Name(id='caches', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Constant(value='psutil.disk_io_counters'), Name(id='cache', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Constant(value='psutil.net_io_counters'), Name(id='cache', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='psutil', ctx=Load()), attr='disk_io_counters', ctx=Load()), attr='cache_clear', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='caches', ctx=Store())], value=Call(func=Attribute(value=Name(id='wrap_numbers', ctx=Load()), attr='cache_info', ctx=Load()), args=[], keywords=[])), For(target=Name(id='cache', ctx=Store()), iter=Name(id='caches', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Constant(value='psutil.net_io_counters'), Name(id='cache', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertNotIn', ctx=Load()), args=[Constant(value='psutil.disk_io_counters'), Name(id='cache', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='psutil', ctx=Load()), attr='net_io_counters', ctx=Load()), attr='cache_clear', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='caches', ctx=Store())], value=Call(func=Attribute(value=Name(id='wrap_numbers', ctx=Load()), attr='cache_info', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='caches', ctx=Load()), Tuple(elts=[Dict(keys=[], values=[]), Dict(keys=[], values=[]), Dict(keys=[], values=[])], ctx=Load())], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_NET_IO_COUNTERS', ctx=Load())), Constant(value='not supported')], keywords=[])])], decorator_list=[]), ClassDef(name='TestScripts', bases=[Name(id='PsutilTestCase', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Tests for scripts in the "scripts" directory.')), FunctionDef(name='assert_stdout', args=arguments(posonlyargs=[], args=[arg(arg='exe')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='kwargs', ctx=Load()), attr='setdefault', ctx=Load()), args=[Constant(value='env'), Name(id='PYTHON_EXE_ENV', ctx=Load())], keywords=[])), Assign(targets=[Name(id='exe', ctx=Store())], value=BinOp(left=Constant(value='%s'), op=Mod(), right=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='SCRIPTS_DIR', ctx=Load()), Name(id='exe', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='cmd', ctx=Store())], value=List(elts=[Name(id='PYTHON_EXE', ctx=Load()), Name(id='exe', ctx=Load())], ctx=Load())), For(target=Name(id='arg', ctx=Store()), iter=Name(id='args', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='cmd', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='arg', ctx=Load())], keywords=[]))], orelse=[]), Try(body=[Assign(targets=[Name(id='out', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='sh', ctx=Load()), args=[Name(id='cmd', ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]), attr='strip', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Name(id='RuntimeError', ctx=Load()), name='err', body=[If(test=Compare(left=Constant(value='AccessDenied'), ops=[In()], comparators=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='err', ctx=Load())], keywords=[])]), body=[Return(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='err', ctx=Load())], keywords=[]))], orelse=[Raise()])])], orelse=[], finalbody=[]), Assert(test=Name(id='out', ctx=Load()), msg=Name(id='out', ctx=Load())), Return(value=Name(id='out', ctx=Load()))], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='assert_syntax', args=arguments(posonlyargs=[], args=[arg(arg='exe')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='exe', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='SCRIPTS_DIR', ctx=Load()), Name(id='exe', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=IfExp(test=Name(id='PY3', ctx=Load()), body=Call(func=Name(id='open', ctx=Load()), args=[Name(id='exe', ctx=Load())], keywords=[keyword(arg='encoding', value=Constant(value='utf8'))]), orelse=Call(func=Name(id='open', ctx=Load()), args=[Name(id='exe', ctx=Load())], keywords=[])), optional_vars=Name(id='f', ctx=Store()))], body=[Assign(targets=[Name(id='src', ctx=Store())], value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='ast', ctx=Load()), attr='parse', ctx=Load()), args=[Name(id='src', ctx=Load())], keywords=[]))], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='test_coverage', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='meths', ctx=Store())], value=Call(func=Name(id='dir', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[])), For(target=Name(id='name', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='SCRIPTS_DIR', ctx=Load())], keywords=[]), body=[If(test=Call(func=Attribute(value=Name(id='name', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.py')], keywords=[]), body=[If(test=Compare(left=BinOp(left=Constant(value='test_'), op=Add(), right=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='splitext', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load())), ops=[NotIn()], comparators=[Name(id='meths', ctx=Load())]), body=[Raise(exc=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[BinOp(left=Constant(value='no test defined for %r script'), op=Mod(), right=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='SCRIPTS_DIR', ctx=Load()), Name(id='name', ctx=Load())], keywords=[]))], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='test_executable', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Tuple(elts=[Name(id='root', ctx=Store()), Name(id='dirs', ctx=Store()), Name(id='files', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='walk', ctx=Load()), args=[Name(id='SCRIPTS_DIR', ctx=Load())], keywords=[]), body=[For(target=Name(id='file', ctx=Store()), iter=Name(id='files', ctx=Load()), body=[If(test=Call(func=Attribute(value=Name(id='file', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='.py')], keywords=[]), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Name(id='file', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=BinOp(left=Attribute(value=Name(id='stat', ctx=Load()), attr='S_IXUSR', ctx=Load()), op=BitAnd(), right=Subscript(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='stat', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]), slice=Attribute(value=Name(id='stat', ctx=Load()), attr='ST_MODE', ctx=Load()), ctx=Load()))), body=[Raise(exc=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[BinOp(left=Constant(value='%r is not executable'), op=Mod(), right=Name(id='path', ctx=Load()))], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], orelse=[])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='POSIX', ctx=Load())), Constant(value='POSIX only')], keywords=[])]), FunctionDef(name='test_disk_usage', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_stdout', ctx=Load()), args=[Constant(value='disk_usage.py')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_free', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_stdout', ctx=Load()), args=[Constant(value='free.py')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_meminfo', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_stdout', ctx=Load()), args=[Constant(value='meminfo.py')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_procinfo', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_stdout', ctx=Load()), args=[Constant(value='procinfo.py'), Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getpid', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_who', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_stdout', ctx=Load()), args=[Constant(value='who.py')], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[BoolOp(op=And(), values=[Name(id='CI_TESTING', ctx=Load()), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='users', ctx=Load()), args=[], keywords=[]))]), Constant(value='no users')], keywords=[])]), FunctionDef(name='test_ps', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_stdout', ctx=Load()), args=[Constant(value='ps.py')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_pstree', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_stdout', ctx=Load()), args=[Constant(value='pstree.py')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_netstat', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_stdout', ctx=Load()), args=[Constant(value='netstat.py')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_ifconfig', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_stdout', ctx=Load()), args=[Constant(value='ifconfig.py')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_pmap', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_stdout', ctx=Load()), args=[Constant(value='pmap.py'), Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getpid', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_MEMORY_MAPS', ctx=Load())), Constant(value='not supported')], keywords=[])]), FunctionDef(name='test_procsmem', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Constant(value='uss'), ops=[NotIn()], comparators=[Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[]), attr='memory_full_info', ctx=Load()), args=[], keywords=[]), attr='_fields', ctx=Load())]), body=[Raise(exc=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='skipTest', ctx=Load()), args=[Constant(value='not supported')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_stdout', ctx=Load()), args=[Constant(value='procsmem.py')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_killall', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_syntax', ctx=Load()), args=[Constant(value='killall.py')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_nettop', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_syntax', ctx=Load()), args=[Constant(value='nettop.py')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_top', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_syntax', ctx=Load()), args=[Constant(value='top.py')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_iotop', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_syntax', ctx=Load()), args=[Constant(value='iotop.py')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_pidof', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='output', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_stdout', ctx=Load()), args=[Constant(value='pidof.py'), Call(func=Attribute(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[]), attr='name', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getpid', ctx=Load()), args=[], keywords=[])], keywords=[]), Name(id='output', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_winservices', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_stdout', ctx=Load()), args=[Constant(value='winservices.py')], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='WINDOWS', ctx=Load())), Constant(value='WINDOWS only')], keywords=[])]), FunctionDef(name='test_cpu_distribution', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_syntax', ctx=Load()), args=[Constant(value='cpu_distribution.py')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_temperatures', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='sensors_temperatures', ctx=Load()), args=[], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='skipTest', ctx=Load()), args=[Constant(value='no temperatures')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_stdout', ctx=Load()), args=[Constant(value='temperatures.py')], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_SENSORS_TEMPERATURES', ctx=Load())), Constant(value='not supported')], keywords=[])]), FunctionDef(name='test_fans', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='sensors_fans', ctx=Load()), args=[], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='skipTest', ctx=Load()), args=[Constant(value='no fans')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_stdout', ctx=Load()), args=[Constant(value='fans.py')], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_SENSORS_FANS', ctx=Load())), Constant(value='not supported')], keywords=[])]), FunctionDef(name='test_battery', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_stdout', ctx=Load()), args=[Constant(value='battery.py')], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_SENSORS_BATTERY', ctx=Load())), Constant(value='not supported')], keywords=[]), Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_BATTERY', ctx=Load())), Constant(value='no battery')], keywords=[])]), FunctionDef(name='test_sensors', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assert_stdout', ctx=Load()), args=[Constant(value='sensors.py')], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_SENSORS_BATTERY', ctx=Load())), Constant(value='not supported')], keywords=[]), Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_BATTERY', ctx=Load())), Constant(value='no battery')], keywords=[])])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='SCRIPTS_DIR', ctx=Load())], keywords=[])), Constant(value="can't locate scripts directory")], keywords=[])]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[ImportFrom(module='psutil.tests.runner', names=[alias(name='run_from_name')], level=0), Expr(value=Call(func=Name(id='run_from_name', ctx=Load()), args=[Name(id='__file__', ctx=Load())], keywords=[]))], orelse=[])], type_ignores=[])