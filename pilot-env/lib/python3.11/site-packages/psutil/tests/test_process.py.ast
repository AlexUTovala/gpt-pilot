Module(body=[Expr(value=Constant(value='Tests for psutil.Process class.')), Import(names=[alias(name='collections')]), Import(names=[alias(name='errno')]), Import(names=[alias(name='getpass')]), Import(names=[alias(name='itertools')]), Import(names=[alias(name='os')]), Import(names=[alias(name='signal')]), Import(names=[alias(name='socket')]), Import(names=[alias(name='stat')]), Import(names=[alias(name='subprocess')]), Import(names=[alias(name='sys')]), Import(names=[alias(name='textwrap')]), Import(names=[alias(name='time')]), Import(names=[alias(name='types')]), Import(names=[alias(name='unittest')]), Import(names=[alias(name='psutil')]), ImportFrom(module='psutil', names=[alias(name='AIX')], level=0), ImportFrom(module='psutil', names=[alias(name='BSD')], level=0), ImportFrom(module='psutil', names=[alias(name='LINUX')], level=0), ImportFrom(module='psutil', names=[alias(name='MACOS')], level=0), ImportFrom(module='psutil', names=[alias(name='NETBSD')], level=0), ImportFrom(module='psutil', names=[alias(name='OPENBSD')], level=0), ImportFrom(module='psutil', names=[alias(name='OSX')], level=0), ImportFrom(module='psutil', names=[alias(name='POSIX')], level=0), ImportFrom(module='psutil', names=[alias(name='SUNOS')], level=0), ImportFrom(module='psutil', names=[alias(name='WINDOWS')], level=0), ImportFrom(module='psutil._common', names=[alias(name='open_text')], level=0), ImportFrom(module='psutil._compat', names=[alias(name='PY3')], level=0), ImportFrom(module='psutil._compat', names=[alias(name='FileNotFoundError')], level=0), ImportFrom(module='psutil._compat', names=[alias(name='long')], level=0), ImportFrom(module='psutil._compat', names=[alias(name='super')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='APPVEYOR')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='CI_TESTING')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='GITHUB_ACTIONS')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='GLOBAL_TIMEOUT')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='HAS_CPU_AFFINITY')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='HAS_ENVIRON')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='HAS_IONICE')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='HAS_MEMORY_MAPS')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='HAS_PROC_CPU_NUM')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='HAS_PROC_IO_COUNTERS')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='HAS_RLIMIT')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='HAS_THREADS')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='MACOS_11PLUS')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='PYPY')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='PYTHON_EXE')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='PYTHON_EXE_ENV')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='PsutilTestCase')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='ThreadTask')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='call_until')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='copyload_shared_lib')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='create_exe')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='mock')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='process_namespace')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='reap_children')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='retry_on_failure')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='sh')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='skip_on_access_denied')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='skip_on_not_implemented')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='wait_for_pid')], level=0), ClassDef(name='TestProcess', bases=[Name(id='PsutilTestCase', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Tests for psutil.Process class.')), FunctionDef(name='spawn_psproc', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Assign(targets=[Name(id='sproc', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_testproc', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), Return(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[Attribute(value=Name(id='sproc', ctx=Load()), attr='pid', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_pid', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='p', ctx=Load()), attr='pid', ctx=Load()), Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getpid', ctx=Load()), args=[], keywords=[])], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='AttributeError', ctx=Load())], keywords=[]))], body=[Assign(targets=[Attribute(value=Name(id='p', ctx=Load()), attr='pid', ctx=Store())], value=Constant(value=33))])], decorator_list=[]), FunctionDef(name='test_kill', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='kill', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='code', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[])), If(test=Name(id='WINDOWS', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='code', ctx=Load()), Attribute(value=Name(id='signal', ctx=Load()), attr='SIGTERM', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='code', ctx=Load()), UnaryOp(op=USub(), operand=Attribute(value=Name(id='signal', ctx=Load()), attr='SIGKILL', ctx=Load()))], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertProcessGone', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_terminate', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='terminate', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='code', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[])), If(test=Name(id='WINDOWS', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='code', ctx=Load()), Attribute(value=Name(id='signal', ctx=Load()), attr='SIGTERM', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='code', ctx=Load()), UnaryOp(op=USub(), operand=Attribute(value=Name(id='signal', ctx=Load()), attr='SIGTERM', ctx=Load()))], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertProcessGone', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_send_signal', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='sig', ctx=Store())], value=IfExp(test=Name(id='POSIX', ctx=Load()), body=Attribute(value=Name(id='signal', ctx=Load()), attr='SIGKILL', ctx=Load()), orelse=Attribute(value=Name(id='signal', ctx=Load()), attr='SIGTERM', ctx=Load()))), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='send_signal', ctx=Load()), args=[Name(id='sig', ctx=Load())], keywords=[])), Assign(targets=[Name(id='code', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[])), If(test=Name(id='WINDOWS', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='code', ctx=Load()), Name(id='sig', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='code', ctx=Load()), UnaryOp(op=USub(), operand=Name(id='sig', ctx=Load()))], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertProcessGone', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_send_signal_mocked', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='sig', ctx=Store())], value=Attribute(value=Name(id='signal', ctx=Load()), attr='SIGTERM', ctx=Load())), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil.os.kill')], keywords=[keyword(arg='side_effect', value=Call(func=Name(id='OSError', ctx=Load()), args=[Attribute(value=Name(id='errno', ctx=Load()), attr='ESRCH', ctx=Load()), Constant(value='')], keywords=[]))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='send_signal', ctx=Load()), Name(id='sig', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil.os.kill')], keywords=[keyword(arg='side_effect', value=Call(func=Name(id='OSError', ctx=Load()), args=[Attribute(value=Name(id='errno', ctx=Load()), attr='EPERM', ctx=Load()), Constant(value='')], keywords=[]))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='send_signal', ctx=Load()), Name(id='sig', ctx=Load())], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='POSIX', ctx=Load())), Constant(value='not POSIX')], keywords=[])]), FunctionDef(name='test_wait_exited', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='cmd', ctx=Store())], value=List(elts=[Name(id='PYTHON_EXE', ctx=Load()), Constant(value='-c'), Constant(value='pass')], ctx=Load())), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[Name(id='cmd', ctx=Load())], keywords=[])), Assign(targets=[Name(id='code', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='code', ctx=Load()), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertProcessGone', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cmd', ctx=Store())], value=List(elts=[Name(id='PYTHON_EXE', ctx=Load()), Constant(value='-c'), Constant(value='1 / 0')], ctx=Load())), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[Name(id='cmd', ctx=Load())], keywords=[keyword(arg='stderr', value=Attribute(value=Name(id='subprocess', ctx=Load()), attr='PIPE', ctx=Load()))])), Assign(targets=[Name(id='code', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='code', ctx=Load()), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertProcessGone', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cmd', ctx=Store())], value=List(elts=[Name(id='PYTHON_EXE', ctx=Load()), Constant(value='-c'), Constant(value='import sys; sys.exit(5);')], ctx=Load())), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[Name(id='cmd', ctx=Load())], keywords=[])), Assign(targets=[Name(id='code', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='code', ctx=Load()), Constant(value=5)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertProcessGone', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cmd', ctx=Store())], value=List(elts=[Name(id='PYTHON_EXE', ctx=Load()), Constant(value='-c'), Constant(value='import os; os._exit(5);')], ctx=Load())), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[Name(id='cmd', ctx=Load())], keywords=[])), Assign(targets=[Name(id='code', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='code', ctx=Load()), Constant(value=5)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertProcessGone', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_wait_stopped', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), If(test=Name(id='POSIX', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='send_signal', ctx=Load()), args=[Attribute(value=Name(id='signal', ctx=Load()), attr='SIGSTOP', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='TimeoutExpired', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load())], keywords=[keyword(arg='timeout', value=Constant(value=0.001))])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='send_signal', ctx=Load()), args=[Attribute(value=Name(id='signal', ctx=Load()), attr='SIGCONT', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='TimeoutExpired', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load())], keywords=[keyword(arg='timeout', value=Constant(value=0.001))])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='send_signal', ctx=Load()), args=[Attribute(value=Name(id='signal', ctx=Load()), attr='SIGTERM', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[]), UnaryOp(op=USub(), operand=Attribute(value=Name(id='signal', ctx=Load()), attr='SIGTERM', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[]), UnaryOp(op=USub(), operand=Attribute(value=Name(id='signal', ctx=Load()), attr='SIGTERM', ctx=Load()))], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='suspend', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='TimeoutExpired', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load())], keywords=[keyword(arg='timeout', value=Constant(value=0.001))])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='resume', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='TimeoutExpired', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load())], keywords=[keyword(arg='timeout', value=Constant(value=0.001))])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='terminate', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='signal', ctx=Load()), attr='SIGTERM', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='signal', ctx=Load()), attr='SIGTERM', ctx=Load())], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[Name(id='NETBSD', ctx=Load()), Constant(value='fails on NETBSD')], keywords=[])]), FunctionDef(name='test_wait_non_children', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='child', ctx=Store()), Name(id='grandchild', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_children_pair', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='TimeoutExpired', ctx=Load()), Attribute(value=Name(id='child', ctx=Load()), attr='wait', ctx=Load()), Constant(value=0.01)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='TimeoutExpired', ctx=Load()), Attribute(value=Name(id='grandchild', ctx=Load()), attr='wait', ctx=Load()), Constant(value=0.01)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='child', ctx=Load()), attr='terminate', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='grandchild', ctx=Load()), attr='terminate', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='child_ret', ctx=Store())], value=Call(func=Attribute(value=Name(id='child', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='grandchild_ret', ctx=Store())], value=Call(func=Attribute(value=Name(id='grandchild', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[])), If(test=Name(id='POSIX', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='child_ret', ctx=Load()), UnaryOp(op=USub(), operand=Attribute(value=Name(id='signal', ctx=Load()), attr='SIGTERM', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='grandchild_ret', ctx=Load()), Constant(value=None)], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='child_ret', ctx=Load()), Attribute(value=Name(id='signal', ctx=Load()), attr='SIGTERM', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='child_ret', ctx=Load()), Attribute(value=Name(id='signal', ctx=Load()), attr='SIGTERM', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_wait_timeout', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='name', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='TimeoutExpired', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), Constant(value=0.01)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='TimeoutExpired', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]))], decorator_list=[]), FunctionDef(name='test_wait_timeout_nonblocking', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='TimeoutExpired', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='kill', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='stop_at', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), op=Add(), right=Name(id='GLOBAL_TIMEOUT', ctx=Load()))), While(test=Compare(left=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[]), ops=[Lt()], comparators=[Name(id='stop_at', ctx=Load())]), body=[Try(body=[Assign(targets=[Name(id='code', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), args=[Constant(value=0)], keywords=[])), Break()], handlers=[ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='TimeoutExpired', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], orelse=[Raise(exc=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Constant(value='timeout')], keywords=[]))]), If(test=Name(id='POSIX', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='code', ctx=Load()), UnaryOp(op=USub(), operand=Attribute(value=Name(id='signal', ctx=Load()), attr='SIGKILL', ctx=Load()))], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='code', ctx=Load()), Attribute(value=Name(id='signal', ctx=Load()), attr='SIGTERM', ctx=Load())], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertProcessGone', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_cpu_percent', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_percent', ctx=Load()), args=[], keywords=[keyword(arg='interval', value=Constant(value=0.001))])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_percent', ctx=Load()), args=[], keywords=[keyword(arg='interval', value=Constant(value=0.001))])), For(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=100)], keywords=[]), body=[Assign(targets=[Name(id='percent', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_percent', ctx=Load()), args=[], keywords=[keyword(arg='interval', value=Constant(value=None))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIsInstance', ctx=Load()), args=[Name(id='percent', ctx=Load()), Name(id='float', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Name(id='percent', ctx=Load()), Constant(value=0.0)], keywords=[]))], orelse=[]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_percent', ctx=Load()), args=[], keywords=[keyword(arg='interval', value=UnaryOp(op=USub(), operand=Constant(value=1)))]))])], decorator_list=[]), FunctionDef(name='test_cpu_percent_numcpus_none', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil.cpu_count')], keywords=[keyword(arg='return_value', value=Constant(value=None))]), optional_vars=Name(id='m', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[]), attr='cpu_percent', ctx=Load()), args=[], keywords=[])), Assert(test=Attribute(value=Name(id='m', ctx=Load()), attr='called', ctx=Load()))])], decorator_list=[]), FunctionDef(name='test_cpu_times', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='times', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[]), attr='cpu_times', ctx=Load()), args=[], keywords=[])), Assert(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='times', ctx=Load()), attr='user', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0.0)]), Compare(left=Attribute(value=Name(id='times', ctx=Load()), attr='system', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0.0)])]), msg=Name(id='times', ctx=Load())), Assert(test=Compare(left=Attribute(value=Name(id='times', ctx=Load()), attr='children_user', ctx=Load()), ops=[GtE()], comparators=[Constant(value=0.0)]), msg=Name(id='times', ctx=Load())), Assert(test=Compare(left=Attribute(value=Name(id='times', ctx=Load()), attr='children_system', ctx=Load()), ops=[GtE()], comparators=[Constant(value=0.0)]), msg=Name(id='times', ctx=Load())), If(test=Name(id='LINUX', ctx=Load()), body=[Assert(test=Compare(left=Attribute(value=Name(id='times', ctx=Load()), attr='iowait', ctx=Load()), ops=[GtE()], comparators=[Constant(value=0.0)]), msg=Name(id='times', ctx=Load()))], orelse=[]), For(target=Name(id='name', ctx=Store()), iter=Attribute(value=Name(id='times', ctx=Load()), attr='_fields', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='strftime', ctx=Load()), args=[Constant(value='%H:%M:%S'), Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='localtime', ctx=Load()), args=[Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='times', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_cpu_times_2', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='user_time', ctx=Store()), Name(id='kernel_time', ctx=Store())], ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[]), attr='cpu_times', ctx=Load()), args=[], keywords=[]), slice=Slice(upper=Constant(value=2)), ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='utime', ctx=Store()), Name(id='ktime', ctx=Store())], ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='times', ctx=Load()), args=[], keywords=[]), slice=Slice(upper=Constant(value=2)), ctx=Load())), If(test=Compare(left=BinOp(left=Call(func=Name(id='max', ctx=Load()), args=[List(elts=[Name(id='user_time', ctx=Load()), Name(id='utime', ctx=Load())], ctx=Load())], keywords=[]), op=Sub(), right=Call(func=Name(id='min', ctx=Load()), args=[List(elts=[Name(id='user_time', ctx=Load()), Name(id='utime', ctx=Load())], ctx=Load())], keywords=[])), ops=[Gt()], comparators=[Constant(value=0.1)]), body=[Raise(exc=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[BinOp(left=Constant(value='expected: %s, found: %s'), op=Mod(), right=Tuple(elts=[Name(id='utime', ctx=Load()), Name(id='user_time', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), If(test=Compare(left=BinOp(left=Call(func=Name(id='max', ctx=Load()), args=[List(elts=[Name(id='kernel_time', ctx=Load()), Name(id='ktime', ctx=Load())], ctx=Load())], keywords=[]), op=Sub(), right=Call(func=Name(id='min', ctx=Load()), args=[List(elts=[Name(id='kernel_time', ctx=Load()), Name(id='ktime', ctx=Load())], ctx=Load())], keywords=[])), ops=[Gt()], comparators=[Constant(value=0.1)]), body=[Raise(exc=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[BinOp(left=Constant(value='expected: %s, found: %s'), op=Mod(), right=Tuple(elts=[Name(id='ktime', ctx=Load()), Name(id='kernel_time', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_cpu_num', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='num', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_num', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Name(id='num', ctx=Load()), Constant(value=0)], keywords=[])), If(test=Compare(left=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='cpu_count', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='num', ctx=Load()), Constant(value=0)], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_num', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='range', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='cpu_count', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_PROC_CPU_NUM', ctx=Load())), Constant(value='not supported')], keywords=[])]), FunctionDef(name='test_create_time', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='now', ctx=Store())], value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='time', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='create_time', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='create_time', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='difference', ctx=Store())], value=Call(func=Name(id='abs', ctx=Load()), args=[BinOp(left=Name(id='create_time', ctx=Load()), op=Sub(), right=Name(id='now', ctx=Load()))], keywords=[])), If(test=Compare(left=Name(id='difference', ctx=Load()), ops=[Gt()], comparators=[Constant(value=2)]), body=[Raise(exc=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[BinOp(left=Constant(value='expected: %s, found: %s, difference: %s'), op=Mod(), right=Tuple(elts=[Name(id='now', ctx=Load()), Name(id='create_time', ctx=Load()), Name(id='difference', ctx=Load())], ctx=Load()))], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='strftime', ctx=Load()), args=[Constant(value='%Y %m %d %H:%M:%S'), Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='localtime', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='create_time', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_terminal', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='terminal', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[]), attr='terminal', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='terminal', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='tty', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='realpath', ctx=Load()), args=[Call(func=Name(id='sh', ctx=Load()), args=[Constant(value='tty')], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='terminal', ctx=Load()), Name(id='tty', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='POSIX', ctx=Load())), Constant(value='POSIX only')], keywords=[])]), FunctionDef(name='test_io_counters', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='io1', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='io_counters', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='PYTHON_EXE', ctx=Load()), Constant(value='rb')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]))]), Assign(targets=[Name(id='io2', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='io_counters', ctx=Load()), args=[], keywords=[])), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='BSD', ctx=Load())), UnaryOp(op=Not(), operand=Name(id='AIX', ctx=Load()))]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreater', ctx=Load()), args=[Attribute(value=Name(id='io2', ctx=Load()), attr='read_count', ctx=Load()), Attribute(value=Name(id='io1', ctx=Load()), attr='read_count', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='io2', ctx=Load()), attr='write_count', ctx=Load()), Attribute(value=Name(id='io1', ctx=Load()), attr='write_count', ctx=Load())], keywords=[])), If(test=Name(id='LINUX', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreater', ctx=Load()), args=[Attribute(value=Name(id='io2', ctx=Load()), attr='read_chars', ctx=Load()), Attribute(value=Name(id='io1', ctx=Load()), attr='read_chars', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='io2', ctx=Load()), attr='write_chars', ctx=Load()), Attribute(value=Name(id='io1', ctx=Load()), attr='write_chars', ctx=Load())], keywords=[]))], orelse=[])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Attribute(value=Name(id='io2', ctx=Load()), attr='read_bytes', ctx=Load()), Attribute(value=Name(id='io1', ctx=Load()), attr='read_bytes', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Attribute(value=Name(id='io2', ctx=Load()), attr='write_bytes', ctx=Load()), Attribute(value=Name(id='io1', ctx=Load()), attr='write_bytes', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='io1', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='io_counters', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_testfn', ctx=Load()), args=[], keywords=[]), Constant(value='wb')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[If(test=Name(id='PY3', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='write', ctx=Load()), args=[Call(func=Name(id='bytes', ctx=Load()), args=[BinOp(left=Constant(value='x'), op=Mult(), right=Constant(value=1000000)), Constant(value='ascii')], keywords=[])], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value='x'), op=Mult(), right=Constant(value=1000000))], keywords=[]))])]), Assign(targets=[Name(id='io2', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='io_counters', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Attribute(value=Name(id='io2', ctx=Load()), attr='write_count', ctx=Load()), Attribute(value=Name(id='io1', ctx=Load()), attr='write_count', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Attribute(value=Name(id='io2', ctx=Load()), attr='write_bytes', ctx=Load()), Attribute(value=Name(id='io1', ctx=Load()), attr='write_bytes', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Attribute(value=Name(id='io2', ctx=Load()), attr='read_count', ctx=Load()), Attribute(value=Name(id='io1', ctx=Load()), attr='read_count', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Attribute(value=Name(id='io2', ctx=Load()), attr='read_bytes', ctx=Load()), Attribute(value=Name(id='io1', ctx=Load()), attr='read_bytes', ctx=Load())], keywords=[])), If(test=Name(id='LINUX', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreater', ctx=Load()), args=[Attribute(value=Name(id='io2', ctx=Load()), attr='write_chars', ctx=Load()), Attribute(value=Name(id='io1', ctx=Load()), attr='write_chars', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Attribute(value=Name(id='io2', ctx=Load()), attr='read_chars', ctx=Load()), Attribute(value=Name(id='io1', ctx=Load()), attr='read_chars', ctx=Load())], keywords=[]))], orelse=[]), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='io2', ctx=Load())], keywords=[])], keywords=[]), body=[If(test=BoolOp(op=And(), values=[Name(id='BSD', ctx=Load()), Compare(left=Name(id='i', ctx=Load()), ops=[GtE()], comparators=[Constant(value=2)])]), body=[Continue()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Subscript(value=Name(id='io2', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Subscript(value=Name(id='io2', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), Constant(value=0)], keywords=[]))], orelse=[])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_PROC_IO_COUNTERS', ctx=Load())), Constant(value='not supported')], keywords=[]), Call(func=Name(id='skip_on_not_implemented', ctx=Load()), args=[], keywords=[keyword(arg='only_if', value=Name(id='LINUX', ctx=Load()))])]), FunctionDef(name='test_ionice_linux', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='CI_TESTING', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_CLASS_NONE', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_CLASS_NONE', ctx=Load()), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_CLASS_RT', ctx=Load()), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_CLASS_BE', ctx=Load()), Constant(value=2)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_CLASS_IDLE', ctx=Load()), Constant(value=3)], keywords=[])), Assign(targets=[Name(id='init', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[], keywords=[])), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_CLASS_IDLE', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='tuple', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[], keywords=[])], keywords=[]), Tuple(elts=[Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_CLASS_IDLE', ctx=Load()), Constant(value=0)], ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_CLASS_IDLE', ctx=Load())], keywords=[keyword(arg='value', value=Constant(value=7))]))]), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_CLASS_BE', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='tuple', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[], keywords=[])], keywords=[]), Tuple(elts=[Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_CLASS_BE', ctx=Load()), Constant(value=0)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_CLASS_BE', ctx=Load())], keywords=[keyword(arg='value', value=Constant(value=7))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='tuple', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[], keywords=[])], keywords=[]), Tuple(elts=[Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_CLASS_BE', ctx=Load()), Constant(value=7)], ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_CLASS_BE', ctx=Load())], keywords=[keyword(arg='value', value=Constant(value=8))]))]), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_CLASS_RT', ctx=Load())], keywords=[keyword(arg='value', value=Constant(value=7))]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Constant(value='ioclass accepts no value'), Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_CLASS_NONE', ctx=Load()), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Constant(value='ioclass accepts no value'), Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_CLASS_IDLE', ctx=Load()), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Constant(value="'ioclass' argument must be specified"), Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load())], keywords=[keyword(arg='value', value=Constant(value=1))]))], handlers=[], orelse=[], finalbody=[Assign(targets=[Tuple(elts=[Name(id='ioclass', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store())], value=Name(id='init', ctx=Load())), If(test=Compare(left=Name(id='ioclass', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_CLASS_NONE', ctx=Load())]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Constant(value=0))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[Name(id='ioclass', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_IONICE', ctx=Load())), Constant(value='not supported')], keywords=[]), Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='LINUX', ctx=Load())), Constant(value='linux only')], keywords=[])]), FunctionDef(name='test_ionice_win', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='CI_TESTING', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_NORMAL', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='init', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[], keywords=[])), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_VERYLOW', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_VERYLOW', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_LOW', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_LOW', ctx=Load())], keywords=[])), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_HIGH', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), body=[Pass()])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_HIGH', ctx=Load())], keywords=[]))], finalbody=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='TypeError', ctx=Load()), Constant(value='value argument not accepted on Windows'), Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_NORMAL', ctx=Load())], keywords=[keyword(arg='value', value=Constant(value=1))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Constant(value='is not a valid priority'), Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), BinOp(left=Attribute(value=Name(id='psutil', ctx=Load()), attr='IOPRIO_HIGH', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[]))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ionice', ctx=Load()), args=[Name(id='init', ctx=Load())], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_IONICE', ctx=Load())), Constant(value='not supported')], keywords=[]), Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='WINDOWS', ctx=Load())), Constant(value='not supported on this win version')], keywords=[])]), FunctionDef(name='test_rlimit_get', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Import(names=[alias(name='resource')]), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getpid', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='names', ctx=Store())], value=ListComp(elt=Name(id='x', ctx=Load()), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Call(func=Name(id='dir', ctx=Load()), args=[Name(id='psutil', ctx=Load())], keywords=[]), ifs=[Call(func=Attribute(value=Name(id='x', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='RLIMIT')], keywords=[])], is_async=0)])), Assert(test=Name(id='names', ctx=Load()), msg=Name(id='names', ctx=Load())), For(target=Name(id='name', ctx=Store()), iter=Name(id='names', ctx=Load()), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='psutil', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Name(id='value', ctx=Load()), Constant(value=0)], keywords=[])), If(test=Compare(left=Name(id='name', ctx=Load()), ops=[In()], comparators=[Call(func=Name(id='dir', ctx=Load()), args=[Name(id='resource', ctx=Load())], keywords=[])]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='value', ctx=Load()), Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='resource', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])], keywords=[])), If(test=Name(id='PYPY', ctx=Load()), body=[Continue()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='rlimit', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='resource', ctx=Load()), attr='getrlimit', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])], keywords=[]))], orelse=[Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='rlimit', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='ret', ctx=Load())], keywords=[]), Constant(value=2)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Subscript(value=Name(id='ret', ctx=Load()), slice=Constant(value=0), ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Subscript(value=Name(id='ret', ctx=Load()), slice=Constant(value=1), ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]))])], orelse=[])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_RLIMIT', ctx=Load())), Constant(value='not supported')], keywords=[])]), FunctionDef(name='test_rlimit_set', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='rlimit', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='RLIMIT_NOFILE', ctx=Load()), Tuple(elts=[Constant(value=5), Constant(value=5)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='rlimit', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='RLIMIT_NOFILE', ctx=Load())], keywords=[]), Tuple(elts=[Constant(value=5), Constant(value=5)], ctx=Load())], keywords=[])), If(test=Name(id='LINUX', ctx=Load()), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Constant(value="can't use prlimit")], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='psutil', ctx=Load()), attr='_psplatform', ctx=Load()), attr='Process', ctx=Load()), args=[Constant(value=0)], keywords=[]), attr='rlimit', ctx=Load()), args=[Constant(value=0)], keywords=[]))])], orelse=[]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='rlimit', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='RLIMIT_NOFILE', ctx=Load()), Tuple(elts=[Constant(value=5), Constant(value=5), Constant(value=5)], ctx=Load())], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_RLIMIT', ctx=Load())), Constant(value='not supported')], keywords=[])]), FunctionDef(name='test_rlimit', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='testfn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_testfn', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='soft', ctx=Store()), Name(id='hard', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='rlimit', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='RLIMIT_FSIZE', ctx=Load())], keywords=[])), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='rlimit', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='RLIMIT_FSIZE', ctx=Load()), Tuple(elts=[Constant(value=1024), Name(id='hard', ctx=Load())], ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='testfn', ctx=Load()), Constant(value='wb')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value=b'X'), op=Mult(), right=Constant(value=1024))], keywords=[]))]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='IOError', ctx=Load())], keywords=[]), optional_vars=Name(id='exc', ctx=Store()))], body=[With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='testfn', ctx=Load()), Constant(value='wb')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value=b'X'), op=Mult(), right=Constant(value=1025))], keywords=[]))])]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[IfExp(test=Name(id='PY3', ctx=Load()), body=Attribute(value=Attribute(value=Name(id='exc', ctx=Load()), attr='exception', ctx=Load()), attr='errno', ctx=Load()), orelse=Subscript(value=Attribute(value=Name(id='exc', ctx=Load()), attr='exception', ctx=Load()), slice=Constant(value=0), ctx=Load())), Attribute(value=Name(id='errno', ctx=Load()), attr='EFBIG', ctx=Load())], keywords=[]))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='rlimit', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='RLIMIT_FSIZE', ctx=Load()), Tuple(elts=[Name(id='soft', ctx=Load()), Name(id='hard', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='rlimit', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='RLIMIT_FSIZE', ctx=Load())], keywords=[]), Tuple(elts=[Name(id='soft', ctx=Load()), Name(id='hard', ctx=Load())], ctx=Load())], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_RLIMIT', ctx=Load())), Constant(value='not supported')], keywords=[])]), FunctionDef(name='test_rlimit_infinity', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='soft', ctx=Store()), Name(id='hard', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='rlimit', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='RLIMIT_FSIZE', ctx=Load())], keywords=[])), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='rlimit', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='RLIMIT_FSIZE', ctx=Load()), Tuple(elts=[Constant(value=1024), Name(id='hard', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='rlimit', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='RLIMIT_FSIZE', ctx=Load()), Tuple(elts=[Attribute(value=Name(id='psutil', ctx=Load()), attr='RLIM_INFINITY', ctx=Load()), Name(id='hard', ctx=Load())], ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_testfn', ctx=Load()), args=[], keywords=[]), Constant(value='wb')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value=b'X'), op=Mult(), right=Constant(value=2048))], keywords=[]))])], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='rlimit', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='RLIMIT_FSIZE', ctx=Load()), Tuple(elts=[Name(id='soft', ctx=Load()), Name(id='hard', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='rlimit', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='RLIMIT_FSIZE', ctx=Load())], keywords=[]), Tuple(elts=[Name(id='soft', ctx=Load()), Name(id='hard', ctx=Load())], ctx=Load())], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_RLIMIT', ctx=Load())), Constant(value='not supported')], keywords=[])]), FunctionDef(name='test_rlimit_infinity_value', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='soft', ctx=Store()), Name(id='hard', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='rlimit', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='RLIMIT_FSIZE', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='RLIM_INFINITY', ctx=Load()), Name(id='hard', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='rlimit', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='RLIMIT_FSIZE', ctx=Load()), Tuple(elts=[Name(id='soft', ctx=Load()), Name(id='hard', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_RLIMIT', ctx=Load())), Constant(value='not supported')], keywords=[])]), FunctionDef(name='test_num_threads', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), If(test=Name(id='OPENBSD', ctx=Load()), body=[Try(body=[Assign(targets=[Name(id='step1', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='num_threads', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), body=[Raise(exc=Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='SkipTest', ctx=Load()), args=[Constant(value='on OpenBSD this requires root access')], keywords=[]))])], orelse=[], finalbody=[])], orelse=[Assign(targets=[Name(id='step1', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='num_threads', ctx=Load()), args=[], keywords=[]))]), With(items=[withitem(context_expr=Call(func=Name(id='ThreadTask', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='step2', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='num_threads', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='step2', ctx=Load()), BinOp(left=Name(id='step1', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_num_handles', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreater', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='num_handles', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='WINDOWS', ctx=Load())), Constant(value='WINDOWS only')], keywords=[])]), FunctionDef(name='test_threads', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), If(test=Name(id='OPENBSD', ctx=Load()), body=[Try(body=[Assign(targets=[Name(id='step1', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='threads', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), body=[Raise(exc=Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='SkipTest', ctx=Load()), args=[Constant(value='on OpenBSD this requires root access')], keywords=[]))])], orelse=[], finalbody=[])], orelse=[Assign(targets=[Name(id='step1', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='threads', ctx=Load()), args=[], keywords=[]))]), With(items=[withitem(context_expr=Call(func=Name(id='ThreadTask', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='step2', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='threads', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='step2', ctx=Load())], keywords=[]), BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='step1', ctx=Load())], keywords=[]), op=Add(), right=Constant(value=1))], keywords=[])), Assign(targets=[Name(id='athread', ctx=Store())], value=Subscript(value=Name(id='step2', ctx=Load()), slice=Constant(value=0), ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='athread', ctx=Load()), attr='id', ctx=Load()), Subscript(value=Name(id='athread', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='athread', ctx=Load()), attr='user_time', ctx=Load()), Subscript(value=Name(id='athread', ctx=Load()), slice=Constant(value=1), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='athread', ctx=Load()), attr='system_time', ctx=Load()), Subscript(value=Name(id='athread', ctx=Load()), slice=Constant(value=2), ctx=Load())], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_THREADS', ctx=Load())), Constant(value='not supported')], keywords=[])]), FunctionDef(name='test_threads_2', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), If(test=Name(id='OPENBSD', ctx=Load()), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='threads', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), body=[Raise(exc=Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='SkipTest', ctx=Load()), args=[Constant(value='on OpenBSD this requires root access')], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertAlmostEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_times', ctx=Load()), args=[], keywords=[]), attr='user', ctx=Load()), Call(func=Name(id='sum', ctx=Load()), args=[ListComp(elt=Attribute(value=Name(id='x', ctx=Load()), attr='user_time', ctx=Load()), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='threads', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])], keywords=[])], keywords=[keyword(arg='delta', value=Constant(value=0.1))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertAlmostEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_times', ctx=Load()), args=[], keywords=[]), attr='system', ctx=Load()), Call(func=Name(id='sum', ctx=Load()), args=[ListComp(elt=Attribute(value=Name(id='x', ctx=Load()), attr='system_time', ctx=Load()), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='threads', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])], keywords=[])], keywords=[keyword(arg='delta', value=Constant(value=0.1))]))], decorator_list=[Call(func=Name(id='retry_on_failure', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='skip_on_access_denied', ctx=Load()), args=[], keywords=[keyword(arg='only_if', value=Name(id='MACOS', ctx=Load()))]), Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_THREADS', ctx=Load())), Constant(value='not supported')], keywords=[])]), FunctionDef(name='test_memory_info', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='rss1', ctx=Store()), Name(id='vms1', ctx=Store())], ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='memory_info', ctx=Load()), args=[], keywords=[]), slice=Slice(upper=Constant(value=2)), ctx=Load())), Assign(targets=[Name(id='percent1', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='memory_percent', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreater', ctx=Load()), args=[Name(id='rss1', ctx=Load()), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreater', ctx=Load()), args=[Name(id='vms1', ctx=Load()), Constant(value=0)], keywords=[])), Assign(targets=[Name(id='memarr', ctx=Store())], value=BinOp(left=List(elts=[Constant(value=None)], ctx=Load()), op=Mult(), right=Constant(value=1500000))), Assign(targets=[Tuple(elts=[Name(id='rss2', ctx=Store()), Name(id='vms2', ctx=Store())], ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='memory_info', ctx=Load()), args=[], keywords=[]), slice=Slice(upper=Constant(value=2)), ctx=Load())), Assign(targets=[Name(id='percent2', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='memory_percent', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreater', ctx=Load()), args=[Name(id='rss2', ctx=Load()), Name(id='rss1', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Name(id='vms2', ctx=Load()), Name(id='vms1', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreater', ctx=Load()), args=[Name(id='percent2', ctx=Load()), Name(id='percent1', ctx=Load())], keywords=[])), Delete(targets=[Name(id='memarr', ctx=Del())]), If(test=Name(id='WINDOWS', ctx=Load()), body=[Assign(targets=[Name(id='mem', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='memory_info', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='mem', ctx=Load()), attr='rss', ctx=Load()), Attribute(value=Name(id='mem', ctx=Load()), attr='wset', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='mem', ctx=Load()), attr='vms', ctx=Load()), Attribute(value=Name(id='mem', ctx=Load()), attr='pagefile', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='mem', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='memory_info', ctx=Load()), args=[], keywords=[])), For(target=Name(id='name', ctx=Store()), iter=Attribute(value=Name(id='mem', ctx=Load()), attr='_fields', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='mem', ctx=Load()), Name(id='name', ctx=Load())], keywords=[]), Constant(value=0)], keywords=[]))], orelse=[])], decorator_list=[Call(func=Name(id='retry_on_failure', ctx=Load()), args=[], keywords=[])]), FunctionDef(name='test_memory_full_info', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='total', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='virtual_memory', ctx=Load()), args=[], keywords=[]), attr='total', ctx=Load())), Assign(targets=[Name(id='mem', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='memory_full_info', ctx=Load()), args=[], keywords=[])), For(target=Name(id='name', ctx=Store()), iter=Attribute(value=Name(id='mem', ctx=Load()), attr='_fields', ctx=Load()), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='mem', ctx=Load()), Name(id='name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Name(id='value', ctx=Load()), Constant(value=0)], keywords=[keyword(arg='msg', value=Tuple(elts=[Name(id='name', ctx=Load()), Name(id='value', ctx=Load())], ctx=Load()))])), If(test=BoolOp(op=Or(), values=[BoolOp(op=And(), values=[Compare(left=Name(id='name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='vms')]), Name(id='OSX', ctx=Load())]), Name(id='LINUX', ctx=Load())]), body=[Continue()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertLessEqual', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='total', ctx=Load())], keywords=[keyword(arg='msg', value=Tuple(elts=[Name(id='name', ctx=Load()), Name(id='value', ctx=Load()), Name(id='total', ctx=Load())], ctx=Load()))]))], orelse=[]), If(test=BoolOp(op=Or(), values=[Name(id='LINUX', ctx=Load()), Name(id='WINDOWS', ctx=Load()), Name(id='MACOS', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Attribute(value=Name(id='mem', ctx=Load()), attr='uss', ctx=Load()), Constant(value=0)], keywords=[]))], orelse=[]), If(test=Name(id='LINUX', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Attribute(value=Name(id='mem', ctx=Load()), attr='pss', ctx=Load()), Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreaterEqual', ctx=Load()), args=[Attribute(value=Name(id='mem', ctx=Load()), attr='swap', ctx=Load()), Constant(value=0)], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_memory_maps', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='maps', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='memory_maps', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='maps', ctx=Load())], keywords=[]), Call(func=Name(id='len', ctx=Load()), args=[Call(func=Name(id='set', ctx=Load()), args=[Name(id='maps', ctx=Load())], keywords=[])], keywords=[])], keywords=[])), Assign(targets=[Name(id='ext_maps', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='memory_maps', ctx=Load()), args=[], keywords=[keyword(arg='grouped', value=Constant(value=False))])), For(target=Name(id='nt', ctx=Store()), iter=Name(id='maps', ctx=Load()), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='nt', ctx=Load()), attr='path', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='[')], keywords=[])), body=[Assert(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isabs', ctx=Load()), args=[Attribute(value=Name(id='nt', ctx=Load()), attr='path', ctx=Load())], keywords=[]), msg=Attribute(value=Name(id='nt', ctx=Load()), attr='path', ctx=Load())), If(test=Name(id='POSIX', ctx=Load()), body=[Try(body=[Assert(test=BoolOp(op=Or(), values=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Attribute(value=Name(id='nt', ctx=Load()), attr='path', ctx=Load())], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='islink', ctx=Load()), args=[Attribute(value=Name(id='nt', ctx=Load()), attr='path', ctx=Load())], keywords=[])]), msg=Attribute(value=Name(id='nt', ctx=Load()), attr='path', ctx=Load()))], handlers=[ExceptHandler(type=Name(id='AssertionError', ctx=Load()), body=[If(test=UnaryOp(op=Not(), operand=Name(id='LINUX', ctx=Load())), body=[Raise()], orelse=[With(items=[withitem(context_expr=Call(func=Name(id='open_text', ctx=Load()), args=[Constant(value='/proc/self/smaps')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]))]), If(test=Compare(left=BinOp(left=Constant(value='%s (deleted)'), op=Mod(), right=Attribute(value=Name(id='nt', ctx=Load()), attr='path', ctx=Load())), ops=[NotIn()], comparators=[Name(id='data', ctx=Load())]), body=[Raise()], orelse=[])])])], orelse=[], finalbody=[])], orelse=[If(test=Compare(left=Constant(value='64'), ops=[NotIn()], comparators=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Attribute(value=Name(id='nt', ctx=Load()), attr='path', ctx=Load())], keywords=[])]), body=[Try(body=[Assign(targets=[Name(id='st', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='stat', ctx=Load()), args=[Attribute(value=Name(id='nt', ctx=Load()), attr='path', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='FileNotFoundError', ctx=Load()), body=[Pass()])], orelse=[Assert(test=Call(func=Attribute(value=Name(id='stat', ctx=Load()), attr='S_ISREG', ctx=Load()), args=[Attribute(value=Name(id='st', ctx=Load()), attr='st_mode', ctx=Load())], keywords=[]), msg=Attribute(value=Name(id='nt', ctx=Load()), attr='path', ctx=Load()))], finalbody=[])], orelse=[])])], orelse=[])], orelse=[]), For(target=Name(id='nt', ctx=Store()), iter=Name(id='ext_maps', ctx=Load()), body=[For(target=Name(id='fname', ctx=Store()), iter=Attribute(value=Name(id='nt', ctx=Load()), attr='_fields', ctx=Load()), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='nt', ctx=Load()), Name(id='fname', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='fname', ctx=Load()), ops=[Eq()], comparators=[Constant(value='path')]), body=[Continue()], orelse=[If(test=Compare(left=Name(id='fname', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='addr'), Constant(value='perms')], ctx=Load())]), body=[Assert(test=Name(id='value', ctx=Load()), msg=Name(id='value', ctx=Load()))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIsInstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Tuple(elts=[Name(id='int', ctx=Load()), Name(id='long', ctx=Load())], ctx=Load())], keywords=[])), Assert(test=Compare(left=Name(id='value', ctx=Load()), ops=[GtE()], comparators=[Constant(value=0)]), msg=Name(id='value', ctx=Load()))])])], orelse=[])], orelse=[])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_MEMORY_MAPS', ctx=Load())), Constant(value='not supported')], keywords=[])]), FunctionDef(name='test_memory_maps_lists_lib', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='copyload_shared_lib', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='path', ctx=Store()))], body=[FunctionDef(name='normpath', args=arguments(posonlyargs=[], args=[arg(arg='p')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='realpath', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normcase', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), Assign(targets=[Name(id='libpaths', ctx=Store())], value=ListComp(elt=Call(func=Name(id='normpath', ctx=Load()), args=[Attribute(value=Name(id='x', ctx=Load()), attr='path', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='memory_maps', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Call(func=Name(id='normpath', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]), Name(id='libpaths', ctx=Load())], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_MEMORY_MAPS', ctx=Load())), Constant(value='not supported')], keywords=[])]), FunctionDef(name='test_memory_percent', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='memory_percent', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='memory_percent', ctx=Load())], keywords=[keyword(arg='memtype', value=Constant(value='?!?'))])), If(test=BoolOp(op=Or(), values=[Name(id='LINUX', ctx=Load()), Name(id='MACOS', ctx=Load()), Name(id='WINDOWS', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='memory_percent', ctx=Load()), args=[], keywords=[keyword(arg='memtype', value=Constant(value='uss'))]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_is_running', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), Assert(test=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='is_running', ctx=Load()), args=[], keywords=[])), Assert(test=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='is_running', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='kill', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[])), Assert(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='is_running', ctx=Load()), args=[], keywords=[]))), Assert(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='is_running', ctx=Load()), args=[], keywords=[])))], decorator_list=[]), FunctionDef(name='test_exe', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='exe', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='exe', ctx=Load()), args=[], keywords=[])), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='exe', ctx=Load()), Name(id='PYTHON_EXE', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='AssertionError', ctx=Load()), body=[If(test=BoolOp(op=And(), values=[Name(id='WINDOWS', ctx=Load()), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='exe', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='PYTHON_EXE', ctx=Load())], keywords=[])])]), body=[Assign(targets=[Name(id='normcase', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normcase', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='normcase', ctx=Load()), args=[Name(id='exe', ctx=Load())], keywords=[]), Call(func=Name(id='normcase', ctx=Load()), args=[Name(id='PYTHON_EXE', ctx=Load())], keywords=[])], keywords=[]))], orelse=[Assign(targets=[Name(id='ver', ctx=Store())], value=BinOp(left=Constant(value='%s.%s'), op=Mod(), right=Tuple(elts=[Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), slice=Constant(value=0), ctx=Load()), Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), slice=Constant(value=1), ctx=Load())], ctx=Load()))), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='exe', ctx=Load()), attr='replace', ctx=Load()), args=[Name(id='ver', ctx=Load()), Constant(value='')], keywords=[]), Call(func=Attribute(value=Name(id='PYTHON_EXE', ctx=Load()), attr='replace', ctx=Load()), args=[Name(id='ver', ctx=Load()), Constant(value='')], keywords=[])], keywords=[]))], handlers=[ExceptHandler(type=Name(id='AssertionError', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])])])], orelse=[], finalbody=[]), Assign(targets=[Name(id='out', ctx=Store())], value=Call(func=Name(id='sh', ctx=Load()), args=[List(elts=[Name(id='exe', ctx=Load()), Constant(value='-c'), Constant(value="import os; print('hey')")], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='out', ctx=Load()), Constant(value='hey')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_cmdline', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='cmdline', ctx=Store())], value=List(elts=[Name(id='PYTHON_EXE', ctx=Load()), Constant(value='-c'), Constant(value='import time; time.sleep(60)')], ctx=Load())), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[Name(id='cmdline', ctx=Load())], keywords=[])), If(test=BoolOp(op=Or(), values=[Name(id='NETBSD', ctx=Load()), Name(id='OPENBSD', ctx=Load()), Name(id='AIX', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cmdline', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load()), Name(id='PYTHON_EXE', ctx=Load())], keywords=[]))], orelse=[If(test=BoolOp(op=And(), values=[Name(id='MACOS', ctx=Load()), Name(id='CI_TESTING', ctx=Load())]), body=[Assign(targets=[Name(id='pyexe', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cmdline', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load())), If(test=Compare(left=Name(id='pyexe', ctx=Load()), ops=[NotEq()], comparators=[Name(id='PYTHON_EXE', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=' '), attr='join', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cmdline', ctx=Load()), args=[], keywords=[]), slice=Slice(lower=Constant(value=1)), ctx=Load())], keywords=[]), Call(func=Attribute(value=Constant(value=' '), attr='join', ctx=Load()), args=[Subscript(value=Name(id='cmdline', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load())], keywords=[])], keywords=[])), Return()], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Constant(value=' '), attr='join', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cmdline', ctx=Load()), args=[], keywords=[])], keywords=[]), Call(func=Attribute(value=Constant(value=' '), attr='join', ctx=Load()), args=[Name(id='cmdline', ctx=Load())], keywords=[])], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_long_cmdline', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='testfn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_testfn', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Name(id='create_exe', ctx=Load()), args=[Name(id='testfn', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cmdline', ctx=Store())], value=BinOp(left=List(elts=[Name(id='testfn', ctx=Load())], ctx=Load()), op=Add(), right=BinOp(left=List(elts=[Constant(value='0123456789')], ctx=Load()), op=Mult(), right=Constant(value=20)))), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[Name(id='cmdline', ctx=Load())], keywords=[])), If(test=Name(id='OPENBSD', ctx=Load()), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cmdline', ctx=Load()), args=[], keywords=[]), Name(id='cmdline', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='ZombieProcess', ctx=Load()), body=[Raise(exc=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='skipTest', ctx=Load()), args=[Constant(value='OPENBSD: process turned into zombie')], keywords=[]))])], orelse=[], finalbody=[])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cmdline', ctx=Load()), args=[], keywords=[]), Name(id='cmdline', ctx=Load())], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[Name(id='PYPY', ctx=Load()), Constant(value='broken on PYPY')], keywords=[])]), FunctionDef(name='test_name', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[Name(id='PYTHON_EXE', ctx=Load())], keywords=[])), Assign(targets=[Name(id='name', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='name', ctx=Load()), args=[], keywords=[]), attr='lower', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='pyexe', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='realpath', ctx=Load()), args=[Attribute(value=Name(id='sys', ctx=Load()), attr='executable', ctx=Load())], keywords=[])], keywords=[]), attr='lower', ctx=Load()), args=[], keywords=[])), Assert(test=Call(func=Attribute(value=Name(id='pyexe', ctx=Load()), attr='startswith', ctx=Load()), args=[Name(id='name', ctx=Load())], keywords=[]), msg=Tuple(elts=[Name(id='pyexe', ctx=Load()), Name(id='name', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='test_long_name', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='testfn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_testfn', ctx=Load()), args=[], keywords=[keyword(arg='suffix', value=BinOp(left=Constant(value='0123456789'), op=Mult(), right=Constant(value=2)))])), Expr(value=Call(func=Name(id='create_exe', ctx=Load()), args=[Name(id='testfn', ctx=Load())], keywords=[])), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[Name(id='testfn', ctx=Load())], keywords=[])), If(test=Name(id='OPENBSD', ctx=Load()), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='name', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Name(id='testfn', ctx=Load())], keywords=[])], keywords=[]))], handlers=[ExceptHandler(type=Name(id='AssertionError', ctx=Load()), body=[If(test=Compare(left=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='status', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Attribute(value=Name(id='psutil', ctx=Load()), attr='STATUS_ZOMBIE', ctx=Load())]), body=[Assert(test=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Name(id='testfn', ctx=Load())], keywords=[]), attr='startswith', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='name', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[Raise()])])], orelse=[], finalbody=[])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='name', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Name(id='testfn', ctx=Load())], keywords=[])], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[Name(id='PYPY', ctx=Load()), Constant(value='unreliable on PYPY')], keywords=[])]), FunctionDef(name='test_prog_w_funky_name', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='funky_path', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_testfn', ctx=Load()), args=[], keywords=[keyword(arg='suffix', value=Constant(value='foo bar )'))])), Expr(value=Call(func=Name(id='create_exe', ctx=Load()), args=[Name(id='funky_path', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cmdline', ctx=Store())], value=List(elts=[Name(id='funky_path', ctx=Load()), Constant(value='-c'), Constant(value='import time; [time.sleep(0.01) for x in range(3000)];arg1'), Constant(value='arg2'), Constant(value=''), Constant(value='arg3'), Constant(value='')], ctx=Load())), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[Name(id='cmdline', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cmdline', ctx=Load()), args=[], keywords=[]), Name(id='cmdline', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='name', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='basename', ctx=Load()), args=[Name(id='funky_path', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normcase', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='exe', ctx=Load()), args=[], keywords=[])], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normcase', ctx=Load()), args=[Name(id='funky_path', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[Name(id='SUNOS', ctx=Load()), Constant(value='broken on SUNOS')], keywords=[]), Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[Name(id='AIX', ctx=Load()), Constant(value='broken on AIX')], keywords=[]), Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[Name(id='PYPY', ctx=Load()), Constant(value='broken on PYPY')], keywords=[])]), FunctionDef(name='test_uids', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='real', ctx=Store()), Name(id='effective', ctx=Store()), Name(id='saved', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='uids', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='real', ctx=Load()), Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getuid', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='effective', ctx=Load()), Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='geteuid', ctx=Load()), args=[], keywords=[])], keywords=[])), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='os', ctx=Load()), Constant(value='getresuid')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getresuid', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='uids', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='POSIX', ctx=Load())), Constant(value='POSIX only')], keywords=[])]), FunctionDef(name='test_gids', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='real', ctx=Store()), Name(id='effective', ctx=Store()), Name(id='saved', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='gids', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='real', ctx=Load()), Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getgid', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='effective', ctx=Load()), Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getegid', ctx=Load()), args=[], keywords=[])], keywords=[])), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='os', ctx=Load()), Constant(value='getresuid')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getresgid', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='gids', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='POSIX', ctx=Load())), Constant(value='POSIX only')], keywords=[])]), FunctionDef(name='test_nice', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='TypeError', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='nice', ctx=Load()), Constant(value='str')], keywords=[])), Assign(targets=[Name(id='init', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='nice', ctx=Load()), args=[], keywords=[])), Try(body=[If(test=Name(id='WINDOWS', ctx=Load()), body=[Assign(targets=[Name(id='highest_prio', ctx=Store())], value=Constant(value=None)), For(target=Name(id='prio', ctx=Store()), iter=List(elts=[Attribute(value=Name(id='psutil', ctx=Load()), attr='IDLE_PRIORITY_CLASS', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='BELOW_NORMAL_PRIORITY_CLASS', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='NORMAL_PRIORITY_CLASS', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='ABOVE_NORMAL_PRIORITY_CLASS', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='HIGH_PRIORITY_CLASS', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='REALTIME_PRIORITY_CLASS', ctx=Load())], ctx=Load()), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='subTest', ctx=Load()), args=[], keywords=[keyword(arg='prio', value=Name(id='prio', ctx=Load()))]))], body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='nice', ctx=Load()), args=[Name(id='prio', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), body=[Pass()])], orelse=[Assign(targets=[Name(id='new_prio', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='nice', ctx=Load()), args=[], keywords=[])), If(test=Name(id='CI_TESTING', ctx=Load()), body=[If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='new_prio', ctx=Load()), ops=[Eq()], comparators=[Name(id='prio', ctx=Load())]), Compare(left=Name(id='highest_prio', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)])]), body=[Assign(targets=[Name(id='highest_prio', ctx=Store())], value=Name(id='prio', ctx=Load()))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='new_prio', ctx=Load()), Name(id='highest_prio', ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='new_prio', ctx=Load()), Name(id='prio', ctx=Load())], keywords=[]))])], finalbody=[])])], orelse=[])], orelse=[Try(body=[If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='os', ctx=Load()), Constant(value='getpriority')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getpriority', ctx=Load()), args=[Attribute(value=Name(id='os', ctx=Load()), attr='PRIO_PROCESS', ctx=Load()), Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getpid', ctx=Load()), args=[], keywords=[])], keywords=[]), Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='nice', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='nice', ctx=Load()), args=[Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='nice', ctx=Load()), args=[], keywords=[]), Constant(value=1)], keywords=[])), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='os', ctx=Load()), Constant(value='getpriority')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getpriority', ctx=Load()), args=[Attribute(value=Name(id='os', ctx=Load()), attr='PRIO_PROCESS', ctx=Load()), Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getpid', ctx=Load()), args=[], keywords=[])], keywords=[]), Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='nice', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='MACOS', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='nice', ctx=Load()), args=[Constant(value=0)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='nice', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[]))], orelse=[])], handlers=[ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])])], handlers=[], orelse=[], finalbody=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='nice', ctx=Load()), args=[Name(id='init', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])])], decorator_list=[]), FunctionDef(name='test_status', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='status', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='psutil', ctx=Load()), attr='STATUS_RUNNING', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_username', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='username', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='username', ctx=Load()), args=[], keywords=[])), If(test=Name(id='WINDOWS', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='domain', ctx=Store()), Name(id='username', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='username', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='\\')], keywords=[])), Assign(targets=[Name(id='getpass_user', ctx=Store())], value=Call(func=Attribute(value=Name(id='getpass', ctx=Load()), attr='getuser', ctx=Load()), args=[], keywords=[])), If(test=Call(func=Attribute(value=Name(id='getpass_user', ctx=Load()), attr='endswith', ctx=Load()), args=[Constant(value='$')], keywords=[]), body=[Raise(exc=Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='SkipTest', ctx=Load()), args=[Constant(value='running as service account')], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='username', ctx=Load()), Name(id='getpass_user', ctx=Load())], keywords=[])), If(test=Compare(left=Constant(value='USERDOMAIN'), ops=[In()], comparators=[Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='domain', ctx=Load()), Subscript(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), slice=Constant(value='USERDOMAIN'), ctx=Load())], keywords=[]))], orelse=[])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='username', ctx=Load()), Call(func=Attribute(value=Name(id='getpass', ctx=Load()), attr='getuser', ctx=Load()), args=[], keywords=[])], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_cwd', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cwd', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_cwd_2', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='cmd', ctx=Store())], value=List(elts=[Name(id='PYTHON_EXE', ctx=Load()), Constant(value='-c'), Constant(value="import os, time; os.chdir('..'); time.sleep(60)")], ctx=Load())), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[Name(id='cmd', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='call_until', ctx=Load()), args=[Attribute(value=Name(id='p', ctx=Load()), attr='cwd', ctx=Load()), Constant(value='ret == os.path.dirname(os.getcwd())')], keywords=[]))], decorator_list=[]), FunctionDef(name='test_cpu_affinity', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='initial', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), args=[], keywords=[])), Assert(test=Name(id='initial', ctx=Load()), msg=Name(id='initial', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='addCleanup', ctx=Load()), args=[Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), Name(id='initial', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='os', ctx=Load()), Constant(value='sched_getaffinity')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='initial', ctx=Load()), Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='sched_getaffinity', ctx=Load()), args=[Attribute(value=Name(id='p', ctx=Load()), attr='pid', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='initial', ctx=Load())], keywords=[]), Call(func=Name(id='len', ctx=Load()), args=[Call(func=Name(id='set', ctx=Load()), args=[Name(id='initial', ctx=Load())], keywords=[])], keywords=[])], keywords=[])), Assign(targets=[Name(id='all_cpus', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='cpu_percent', ctx=Load()), args=[], keywords=[keyword(arg='percpu', value=Constant(value=True))])], keywords=[])], keywords=[])], keywords=[])), For(target=Name(id='n', ctx=Store()), iter=Name(id='all_cpus', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), args=[List(elts=[Name(id='n', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), args=[], keywords=[]), List(elts=[Name(id='n', ctx=Load())], ctx=Load())], keywords=[])), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='os', ctx=Load()), Constant(value='sched_getaffinity')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='sched_getaffinity', ctx=Load()), args=[Attribute(value=Name(id='p', ctx=Load()), attr='pid', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[]), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='p', ctx=Load()), Constant(value='num_cpu')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load()), Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='num_cpu', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), args=[List(elts=[], ctx=Load())], keywords=[])), If(test=Name(id='LINUX', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='p', ctx=Load()), attr='_proc', ctx=Load()), attr='_get_eligible_cpus', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), args=[], keywords=[]), Name(id='all_cpus', ctx=Load())], keywords=[]))]), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='os', ctx=Load()), Constant(value='sched_getaffinity')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='sched_getaffinity', ctx=Load()), args=[Attribute(value=Name(id='p', ctx=Load()), attr='pid', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='TypeError', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), args=[Name(id='initial', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), args=[Call(func=Name(id='set', ctx=Load()), args=[Name(id='all_cpus', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), args=[Call(func=Name(id='tuple', ctx=Load()), args=[Name(id='all_cpus', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_CPU_AFFINITY', ctx=Load())), Constant(value='not supported')], keywords=[])]), FunctionDef(name='test_cpu_affinity_errs', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='invalid_cpu', ctx=Store())], value=List(elts=[BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='cpu_times', ctx=Load()), args=[], keywords=[keyword(arg='percpu', value=Constant(value=True))])], keywords=[]), op=Add(), right=Constant(value=10))], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), Name(id='invalid_cpu', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), Call(func=Name(id='range', ctx=Load()), args=[Constant(value=10000), Constant(value=11000)], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='TypeError', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), List(elts=[Constant(value=0), Constant(value='1')], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), List(elts=[Constant(value=0), UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load())], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_CPU_AFFINITY', ctx=Load())), Constant(value='not supported')], keywords=[])]), FunctionDef(name='test_cpu_affinity_all_combinations', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='initial', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), args=[], keywords=[])), Assert(test=Name(id='initial', ctx=Load()), msg=Name(id='initial', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='addCleanup', ctx=Load()), args=[Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), Name(id='initial', ctx=Load())], keywords=[])), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='initial', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=12)]), body=[Assign(targets=[Name(id='initial', ctx=Store())], value=Subscript(value=Name(id='initial', ctx=Load()), slice=Slice(upper=Constant(value=12)), ctx=Load()))], orelse=[]), Assign(targets=[Name(id='combos', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='initial', ctx=Load())], keywords=[]), op=Add(), right=Constant(value=1))], keywords=[]), body=[For(target=Name(id='subset', ctx=Store()), iter=Call(func=Attribute(value=Name(id='itertools', ctx=Load()), attr='combinations', ctx=Load()), args=[Name(id='initial', ctx=Load()), Name(id='i', ctx=Load())], keywords=[]), body=[If(test=Name(id='subset', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='combos', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='list', ctx=Load()), args=[Name(id='subset', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[])], orelse=[]), For(target=Name(id='combo', ctx=Store()), iter=Name(id='combos', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), args=[Name(id='combo', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='sorted', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_affinity', ctx=Load()), args=[], keywords=[])], keywords=[]), Call(func=Name(id='sorted', ctx=Load()), args=[Name(id='combo', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_CPU_AFFINITY', ctx=Load())), Constant(value='not supported')], keywords=[])]), FunctionDef(name='test_open_files', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='testfn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_testfn', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='files', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='open_files', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertNotIn', ctx=Load()), args=[Name(id='testfn', ctx=Load()), Name(id='files', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='testfn', ctx=Load()), Constant(value='wb')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='write', ctx=Load()), args=[BinOp(left=Constant(value=b'x'), op=Mult(), right=Constant(value=1024))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='flush', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='files', ctx=Store())], value=Call(func=Name(id='call_until', ctx=Load()), args=[Attribute(value=Name(id='p', ctx=Load()), attr='open_files', ctx=Load()), BinOp(left=Constant(value='len(ret) != %i'), op=Mod(), right=Call(func=Name(id='len', ctx=Load()), args=[Name(id='files', ctx=Load())], keywords=[]))], keywords=[])), Assign(targets=[Name(id='filenames', ctx=Store())], value=ListComp(elt=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normcase', ctx=Load()), args=[Attribute(value=Name(id='x', ctx=Load()), attr='path', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Name(id='files', ctx=Load()), ifs=[], is_async=0)])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normcase', ctx=Load()), args=[Name(id='testfn', ctx=Load())], keywords=[]), Name(id='filenames', ctx=Load())], keywords=[])), If(test=Name(id='LINUX', ctx=Load()), body=[For(target=Name(id='file', ctx=Store()), iter=Name(id='files', ctx=Load()), body=[If(test=Compare(left=Attribute(value=Name(id='file', ctx=Load()), attr='path', ctx=Load()), ops=[Eq()], comparators=[Name(id='testfn', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='file', ctx=Load()), attr='position', ctx=Load()), Constant(value=1024)], keywords=[]))], orelse=[])], orelse=[])], orelse=[])]), For(target=Name(id='file', ctx=Store()), iter=Name(id='files', ctx=Load()), body=[Assert(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isfile', ctx=Load()), args=[Attribute(value=Name(id='file', ctx=Load()), attr='path', ctx=Load())], keywords=[]), msg=Name(id='file', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='cmdline', ctx=Store())], value=BinOp(left=Constant(value="import time; f = open(r'%s', 'r'); time.sleep(60);"), op=Mod(), right=Name(id='testfn', ctx=Load()))), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[List(elts=[Name(id='PYTHON_EXE', ctx=Load()), Constant(value='-c'), Name(id='cmdline', ctx=Load())], ctx=Load())], keywords=[])), For(target=Name(id='x', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=100)], keywords=[]), body=[Assign(targets=[Name(id='filenames', ctx=Store())], value=ListComp(elt=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normcase', ctx=Load()), args=[Attribute(value=Name(id='x', ctx=Load()), attr='path', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='open_files', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])), If(test=Compare(left=Name(id='testfn', ctx=Load()), ops=[In()], comparators=[Name(id='filenames', ctx=Load())]), body=[Break()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='sleep', ctx=Load()), args=[Constant(value=0.01)], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normcase', ctx=Load()), args=[Name(id='testfn', ctx=Load())], keywords=[]), Name(id='filenames', ctx=Load())], keywords=[]))]), For(target=Name(id='file', ctx=Store()), iter=Name(id='filenames', ctx=Load()), body=[Assert(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isfile', ctx=Load()), args=[Name(id='file', ctx=Load())], keywords=[]), msg=Name(id='file', ctx=Load()))], orelse=[])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[Name(id='BSD', ctx=Load()), Constant(value='broken on BSD')], keywords=[]), Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[Name(id='APPVEYOR', ctx=Load()), Constant(value='unreliable on APPVEYOR')], keywords=[])]), FunctionDef(name='test_open_files_2', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='normcase', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normcase', ctx=Load())), Assign(targets=[Name(id='testfn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_testfn', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='testfn', ctx=Load()), Constant(value='w')], keywords=[]), optional_vars=Name(id='fileobj', ctx=Store()))], body=[For(target=Name(id='file', ctx=Store()), iter=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='open_files', ctx=Load()), args=[], keywords=[]), body=[If(test=BoolOp(op=Or(), values=[Compare(left=Call(func=Name(id='normcase', ctx=Load()), args=[Attribute(value=Name(id='file', ctx=Load()), attr='path', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='normcase', ctx=Load()), args=[Attribute(value=Name(id='fileobj', ctx=Load()), attr='name', ctx=Load())], keywords=[])]), Compare(left=Attribute(value=Name(id='file', ctx=Load()), attr='fd', ctx=Load()), ops=[Eq()], comparators=[Call(func=Attribute(value=Name(id='fileobj', ctx=Load()), attr='fileno', ctx=Load()), args=[], keywords=[])])]), body=[Break()], orelse=[])], orelse=[Raise(exc=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[BinOp(left=Constant(value='no file found; files=%s'), op=Mod(), right=Call(func=Name(id='repr', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='open_files', ctx=Load()), args=[], keywords=[])], keywords=[]))], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='normcase', ctx=Load()), args=[Attribute(value=Name(id='file', ctx=Load()), attr='path', ctx=Load())], keywords=[]), Call(func=Name(id='normcase', ctx=Load()), args=[Attribute(value=Name(id='fileobj', ctx=Load()), attr='name', ctx=Load())], keywords=[])], keywords=[])), If(test=Name(id='WINDOWS', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='file', ctx=Load()), attr='fd', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='file', ctx=Load()), attr='fd', ctx=Load()), Call(func=Attribute(value=Name(id='fileobj', ctx=Load()), attr='fileno', ctx=Load()), args=[], keywords=[])], keywords=[]))]), Assign(targets=[Name(id='ntuple', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='open_files', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='ntuple', ctx=Load()), slice=Constant(value=0), ctx=Load()), Attribute(value=Name(id='ntuple', ctx=Load()), attr='path', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='ntuple', ctx=Load()), slice=Constant(value=1), ctx=Load()), Attribute(value=Name(id='ntuple', ctx=Load()), attr='fd', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertNotIn', ctx=Load()), args=[Attribute(value=Name(id='fileobj', ctx=Load()), attr='name', ctx=Load()), Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='open_files', ctx=Load()), args=[], keywords=[])], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[Name(id='BSD', ctx=Load()), Constant(value='broken on BSD')], keywords=[]), Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[Name(id='APPVEYOR', ctx=Load()), Constant(value='unreliable on APPVEYOR')], keywords=[])]), FunctionDef(name='test_num_fds', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='testfn', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_testfn', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='start', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='num_fds', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='file', ctx=Store())], value=Call(func=Name(id='open', ctx=Load()), args=[Name(id='testfn', ctx=Load()), Constant(value='w')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='addCleanup', ctx=Load()), args=[Attribute(value=Name(id='file', ctx=Load()), attr='close', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='num_fds', ctx=Load()), args=[], keywords=[]), BinOp(left=Name(id='start', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[])), Assign(targets=[Name(id='sock', ctx=Store())], value=Call(func=Attribute(value=Name(id='socket', ctx=Load()), attr='socket', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='addCleanup', ctx=Load()), args=[Attribute(value=Name(id='sock', ctx=Load()), attr='close', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='num_fds', ctx=Load()), args=[], keywords=[]), BinOp(left=Name(id='start', ctx=Load()), op=Add(), right=Constant(value=2))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='file', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='sock', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='num_fds', ctx=Load()), args=[], keywords=[]), Name(id='start', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='POSIX', ctx=Load())), Constant(value='POSIX only')], keywords=[])]), FunctionDef(name='test_num_ctx_switches', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='before', ctx=Store())], value=Call(func=Name(id='sum', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='num_ctx_switches', ctx=Load()), args=[], keywords=[])], keywords=[])), For(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=2)], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='sleep', ctx=Load()), args=[Constant(value=0.05)], keywords=[])), Assign(targets=[Name(id='after', ctx=Store())], value=Call(func=Name(id='sum', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='num_ctx_switches', ctx=Load()), args=[], keywords=[])], keywords=[])), If(test=Compare(left=Name(id='after', ctx=Load()), ops=[Gt()], comparators=[Name(id='before', ctx=Load())]), body=[Return()], orelse=[])], orelse=[]), Raise(exc=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Constant(value='num ctx switches still the same after 2 iterations')], keywords=[]))], decorator_list=[Call(func=Name(id='skip_on_not_implemented', ctx=Load()), args=[], keywords=[keyword(arg='only_if', value=Name(id='LINUX', ctx=Load()))]), Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[BoolOp(op=Or(), values=[Name(id='OPENBSD', ctx=Load()), Name(id='NETBSD', ctx=Load())]), Constant(value='not reliable on OPENBSD & NETBSD')], keywords=[])]), FunctionDef(name='test_ppid', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='os', ctx=Load()), Constant(value='getppid')], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ppid', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getppid', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ppid', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getpid', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_parent', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='parent', ctx=Load()), args=[], keywords=[]), attr='pid', ctx=Load()), Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getpid', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='lowest_pid', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='pids', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIsNone', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[Name(id='lowest_pid', ctx=Load())], keywords=[]), attr='parent', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_parent_multi', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='parent', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='child', ctx=Store()), Name(id='grandchild', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_children_pair', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='grandchild', ctx=Load()), attr='parent', ctx=Load()), args=[], keywords=[]), Name(id='child', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='child', ctx=Load()), attr='parent', ctx=Load()), args=[], keywords=[]), Name(id='parent', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_parents', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='parent', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assert(test=Call(func=Attribute(value=Name(id='parent', ctx=Load()), attr='parents', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='child', ctx=Store()), Name(id='grandchild', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_children_pair', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='child', ctx=Load()), attr='parents', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load()), Name(id='parent', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='grandchild', ctx=Load()), attr='parents', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load()), Name(id='child', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='grandchild', ctx=Load()), attr='parents', ctx=Load()), args=[], keywords=[]), slice=Constant(value=1), ctx=Load()), Name(id='parent', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Name(id='retry_on_failure', ctx=Load()), args=[], keywords=[])]), FunctionDef(name='test_children', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='parent', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='parent', ctx=Load()), attr='children', ctx=Load()), args=[], keywords=[]), List(elts=[], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='parent', ctx=Load()), attr='children', ctx=Load()), args=[], keywords=[keyword(arg='recursive', value=Constant(value=True))]), List(elts=[], ctx=Load())], keywords=[])), Assign(targets=[Name(id='child', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[keyword(arg='creationflags', value=Constant(value=0))])), Assign(targets=[Name(id='children1', ctx=Store())], value=Call(func=Attribute(value=Name(id='parent', ctx=Load()), attr='children', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='children2', ctx=Store())], value=Call(func=Attribute(value=Name(id='parent', ctx=Load()), attr='children', ctx=Load()), args=[], keywords=[keyword(arg='recursive', value=Constant(value=True))])), For(target=Name(id='children', ctx=Store()), iter=Tuple(elts=[Name(id='children1', ctx=Load()), Name(id='children2', ctx=Load())], ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='children', ctx=Load())], keywords=[]), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Subscript(value=Name(id='children', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='pid', ctx=Load()), Attribute(value=Name(id='child', ctx=Load()), attr='pid', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Subscript(value=Name(id='children', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='ppid', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='parent', ctx=Load()), attr='pid', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_children_recursive', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='parent', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='child', ctx=Store()), Name(id='grandchild', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_children_pair', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='parent', ctx=Load()), attr='children', ctx=Load()), args=[], keywords=[]), List(elts=[Name(id='child', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='parent', ctx=Load()), attr='children', ctx=Load()), args=[], keywords=[keyword(arg='recursive', value=Constant(value=True))]), List(elts=[Name(id='child', ctx=Load()), Name(id='grandchild', ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='child', ctx=Load()), attr='terminate', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='child', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='parent', ctx=Load()), attr='children', ctx=Load()), args=[], keywords=[keyword(arg='recursive', value=Constant(value=True))]), List(elts=[], ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_children_duplicates', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='table', ctx=Store())], value=Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='defaultdict', ctx=Load()), args=[Name(id='int', ctx=Load())], keywords=[])), For(target=Name(id='p', ctx=Store()), iter=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='process_iter', ctx=Load()), args=[], keywords=[]), body=[Try(body=[AugAssign(target=Subscript(value=Name(id='table', ctx=Load()), slice=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='ppid', ctx=Load()), args=[], keywords=[]), ctx=Store()), op=Add(), value=Constant(value=1))], handlers=[ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='Error', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], orelse=[]), Assign(targets=[Name(id='pid', ctx=Store())], value=Subscript(value=Subscript(value=Call(func=Name(id='sorted', ctx=Load()), args=[Call(func=Attribute(value=Name(id='table', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='key', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Subscript(value=Name(id='x', ctx=Load()), slice=Constant(value=1), ctx=Load())))]), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), slice=Constant(value=0), ctx=Load())), If(test=BoolOp(op=And(), values=[Name(id='LINUX', ctx=Load()), Compare(left=Name(id='pid', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)])]), body=[Raise(exc=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='skipTest', ctx=Load()), args=[Constant(value='PID 0')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[Name(id='pid', ctx=Load())], keywords=[])), Try(body=[Assign(targets=[Name(id='c', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='children', ctx=Load()), args=[], keywords=[keyword(arg='recursive', value=Constant(value=True))]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), body=[Pass()])], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='c', ctx=Load())], keywords=[]), Call(func=Name(id='len', ctx=Load()), args=[Call(func=Name(id='set', ctx=Load()), args=[Name(id='c', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], finalbody=[])], decorator_list=[]), FunctionDef(name='test_parents_and_children', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='parent', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='child', ctx=Store()), Name(id='grandchild', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_children_pair', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='children', ctx=Store())], value=Call(func=Attribute(value=Name(id='parent', ctx=Load()), attr='children', ctx=Load()), args=[], keywords=[keyword(arg='recursive', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='children', ctx=Load())], keywords=[]), Constant(value=2)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='children', ctx=Load()), slice=Constant(value=0), ctx=Load()), Name(id='child', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='children', ctx=Load()), slice=Constant(value=1), ctx=Load()), Name(id='grandchild', ctx=Load())], keywords=[])), Assign(targets=[Name(id='parents', ctx=Store())], value=Call(func=Attribute(value=Name(id='grandchild', ctx=Load()), attr='parents', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='parents', ctx=Load()), slice=Constant(value=0), ctx=Load()), Name(id='child', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='parents', ctx=Load()), slice=Constant(value=1), ctx=Load()), Name(id='parent', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_suspend_resume', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='suspend', ctx=Load()), args=[], keywords=[])), For(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=100)], keywords=[]), body=[If(test=Compare(left=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='status', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Attribute(value=Name(id='psutil', ctx=Load()), attr='STATUS_STOPPED', ctx=Load())]), body=[Break()], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='time', ctx=Load()), attr='sleep', ctx=Load()), args=[Constant(value=0.01)], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='resume', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertNotEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='status', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='psutil', ctx=Load()), attr='STATUS_STOPPED', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_invalid_pid', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='TypeError', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), Constant(value='1')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='ValueError', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]))], decorator_list=[]), FunctionDef(name='test_as_dict', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='d', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='as_dict', ctx=Load()), args=[], keywords=[keyword(arg='attrs', value=List(elts=[Constant(value='exe'), Constant(value='name')], ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='sorted', ctx=Load()), args=[Call(func=Attribute(value=Name(id='d', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[]), List(elts=[Constant(value='exe'), Constant(value='name')], ctx=Load())], keywords=[])), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[Call(func=Name(id='min', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='pids', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[])), Assign(targets=[Name(id='d', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='as_dict', ctx=Load()), args=[], keywords=[keyword(arg='attrs', value=List(elts=[Constant(value='connections')], ctx=Load())), keyword(arg='ad_value', value=Constant(value='foo'))])), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Name(id='d', ctx=Load()), slice=Constant(value='connections'), ctx=Load()), Name(id='list', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='d', ctx=Load()), slice=Constant(value='connections'), ctx=Load()), Constant(value='foo')], keywords=[]))], orelse=[]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil.Process.nice')], keywords=[keyword(arg='create', value=Constant(value=True)), keyword(arg='side_effect', value=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='as_dict', ctx=Load()), args=[], keywords=[keyword(arg='attrs', value=List(elts=[Constant(value='nice')], ctx=Load())), keyword(arg='ad_value', value=Constant(value=1))]), Dict(keys=[Constant(value='nice')], values=[Constant(value=1)])], keywords=[]))]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil.Process.nice')], keywords=[keyword(arg='create', value=Constant(value=True)), keyword(arg='side_effect', value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), args=[Attribute(value=Name(id='p', ctx=Load()), attr='pid', ctx=Load()), Constant(value='name')], keywords=[]))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='as_dict', ctx=Load())], keywords=[keyword(arg='attrs', value=List(elts=[Constant(value='nice')], ctx=Load()))]))]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil.Process.nice')], keywords=[keyword(arg='create', value=Constant(value=True)), keyword(arg='side_effect', value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='ZombieProcess', ctx=Load()), args=[Attribute(value=Name(id='p', ctx=Load()), attr='pid', ctx=Load()), Constant(value='name')], keywords=[]))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='as_dict', ctx=Load()), args=[], keywords=[keyword(arg='attrs', value=List(elts=[Constant(value='nice')], ctx=Load())), keyword(arg='ad_value', value=Constant(value='foo'))]), Dict(keys=[Constant(value='nice')], values=[Constant(value='foo')])], keywords=[]))]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil.Process.nice')], keywords=[keyword(arg='create', value=Constant(value=True)), keyword(arg='side_effect', value=Name(id='NotImplementedError', ctx=Load()))]))], body=[Assign(targets=[Name(id='d', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='as_dict', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertNotIn', ctx=Load()), args=[Constant(value='nice'), Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='d', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='NotImplementedError', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='as_dict', ctx=Load()), args=[], keywords=[keyword(arg='attrs', value=List(elts=[Constant(value='nice')], ctx=Load()))]))])]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='TypeError', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='as_dict', ctx=Load()), args=[Constant(value='name')], keywords=[]))]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='as_dict', ctx=Load()), args=[List(elts=[Constant(value='foo')], ctx=Load())], keywords=[]))]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='as_dict', ctx=Load()), args=[List(elts=[Constant(value='foo'), Constant(value='bar')], ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_oneshot', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil._psplatform.Process.cpu_times')], keywords=[]), optional_vars=Name(id='m', ctx=Store()))], body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='oneshot', ctx=Load()), args=[], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_times', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_times', ctx=Load()), args=[], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='m', ctx=Load()), attr='call_count', ctx=Load()), Constant(value=1)], keywords=[]))]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil._psplatform.Process.cpu_times')], keywords=[]), optional_vars=Name(id='m', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_times', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_times', ctx=Load()), args=[], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='m', ctx=Load()), attr='call_count', ctx=Load()), Constant(value=2)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_oneshot_twice', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil._psplatform.Process.cpu_times')], keywords=[]), optional_vars=Name(id='m1', ctx=Store()))], body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil._psplatform.Process.oneshot_enter')], keywords=[]), optional_vars=Name(id='m2', ctx=Store()))], body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='oneshot', ctx=Load()), args=[], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_times', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_times', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='oneshot', ctx=Load()), args=[], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_times', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_times', ctx=Load()), args=[], keywords=[]))])]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='m1', ctx=Load()), attr='call_count', ctx=Load()), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='m2', ctx=Load()), attr='call_count', ctx=Load()), Constant(value=1)], keywords=[]))])]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil._psplatform.Process.cpu_times')], keywords=[]), optional_vars=Name(id='m', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_times', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='cpu_times', ctx=Load()), args=[], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='m', ctx=Load()), attr='call_count', ctx=Load()), Constant(value=2)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_oneshot_cache', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='p1', ctx=Store()), Name(id='p2', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_children_pair', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='p1_ppid', ctx=Store())], value=Call(func=Attribute(value=Name(id='p1', ctx=Load()), attr='ppid', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='p2_ppid', ctx=Store())], value=Call(func=Attribute(value=Name(id='p2', ctx=Load()), attr='ppid', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertNotEqual', ctx=Load()), args=[Name(id='p1_ppid', ctx=Load()), Name(id='p2_ppid', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='p1', ctx=Load()), attr='oneshot', ctx=Load()), args=[], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p1', ctx=Load()), attr='ppid', ctx=Load()), args=[], keywords=[]), Name(id='p1_ppid', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p2', ctx=Load()), attr='ppid', ctx=Load()), args=[], keywords=[]), Name(id='p2_ppid', ctx=Load())], keywords=[]))]), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='p2', ctx=Load()), attr='oneshot', ctx=Load()), args=[], keywords=[]))], body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p1', ctx=Load()), attr='ppid', ctx=Load()), args=[], keywords=[]), Name(id='p1_ppid', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p2', ctx=Load()), attr='ppid', ctx=Load()), args=[], keywords=[]), Name(id='p2_ppid', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_halfway_terminated_process', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='assert_raises_nsp', args=arguments(posonlyargs=[], args=[arg(arg='fun'), arg(arg='fun_name')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Name(id='fun', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='ZombieProcess', ctx=Load()), body=[Raise()]), ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), body=[Pass()]), ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), body=[If(test=BoolOp(op=And(), values=[Name(id='OPENBSD', ctx=Load()), Compare(left=Name(id='fun_name', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='threads'), Constant(value='num_threads')], ctx=Load())])]), body=[Return()], orelse=[]), Raise()])], orelse=[If(test=BoolOp(op=And(), values=[Name(id='WINDOWS', ctx=Load()), Compare(left=Name(id='fun_name', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='exe'), Constant(value='name')], ctx=Load())])]), body=[Return()], orelse=[]), Raise(exc=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[BinOp(left=Constant(value="%r didn't raise NSP and returned %r instead"), op=Mod(), right=Tuple(elts=[Name(id='fun', ctx=Load()), Name(id='ret', ctx=Load())], ctx=Load()))], keywords=[]))], finalbody=[])], decorator_list=[]), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_psproc', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='terminate', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[])), If(test=Name(id='WINDOWS', ctx=Load()), body=[Expr(value=Call(func=Name(id='call_until', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='pids', ctx=Load()), BinOp(left=Constant(value='%s not in ret'), op=Mod(), right=Attribute(value=Name(id='p', ctx=Load()), attr='pid', ctx=Load()))], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertProcessGone', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ns', ctx=Store())], value=Call(func=Name(id='process_namespace', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), For(target=Tuple(elts=[Name(id='fun', ctx=Store()), Name(id='name', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='ns', ctx=Load()), attr='iter', ctx=Load()), args=[Attribute(value=Name(id='ns', ctx=Load()), attr='all', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Name(id='assert_raises_nsp', ctx=Load()), args=[Name(id='fun', ctx=Load()), Name(id='name', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_zombie_process', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='parent', ctx=Store()), Name(id='zombie', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_zombie', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertProcessZombie', ctx=Load()), args=[Name(id='zombie', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='POSIX', ctx=Load())), Constant(value='POSIX only')], keywords=[])]), FunctionDef(name='test_zombie_process_is_running_w_exc', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil.Process')], keywords=[keyword(arg='side_effect', value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='ZombieProcess', ctx=Load()), args=[Constant(value=0)], keywords=[]))]), optional_vars=Name(id='m', ctx=Store()))], body=[Assert(test=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='is_running', ctx=Load()), args=[], keywords=[])), Assert(test=Attribute(value=Name(id='m', ctx=Load()), attr='called', ctx=Load()))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='POSIX', ctx=Load())), Constant(value='POSIX only')], keywords=[])]), FunctionDef(name='test_zombie_process_status_w_exc', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='psutil._psplatform.Process.status')], keywords=[keyword(arg='side_effect', value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='ZombieProcess', ctx=Load()), args=[Constant(value=0)], keywords=[]))]), optional_vars=Name(id='m', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='status', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='psutil', ctx=Load()), attr='STATUS_ZOMBIE', ctx=Load())], keywords=[])), Assert(test=Attribute(value=Name(id='m', ctx=Load()), attr='called', ctx=Load()))])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='POSIX', ctx=Load())), Constant(value='POSIX only')], keywords=[])]), FunctionDef(name='test_reused_pid', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='subp', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_testproc', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[Attribute(value=Name(id='subp', ctx=Load()), attr='pid', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='p', ctx=Load()), attr='_ident', ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='p', ctx=Load()), attr='pid', ctx=Load()), BinOp(left=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='create_time', ctx=Load()), args=[], keywords=[]), op=Add(), right=Constant(value=100))], ctx=Load())), Assert(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='is_running', ctx=Load()), args=[], keywords=[]))), Assert(test=Compare(left=Name(id='p', ctx=Load()), ops=[NotEq()], comparators=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[Attribute(value=Name(id='subp', ctx=Load()), attr='pid', ctx=Load())], keywords=[])])), Assign(targets=[Name(id='msg', ctx=Store())], value=Constant(value='process no longer exists and its PID has been reused')), Assign(targets=[Name(id='ns', ctx=Store())], value=Call(func=Name(id='process_namespace', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), For(target=Tuple(elts=[Name(id='fun', ctx=Store()), Name(id='name', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='ns', ctx=Load()), attr='iter', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='ns', ctx=Load()), attr='setters', ctx=Load()), op=Add(), right=Attribute(value=Name(id='ns', ctx=Load()), attr='killers', ctx=Load()))], keywords=[keyword(arg='clear_cache', value=Constant(value=False))]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='subTest', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Name(id='name', ctx=Load()))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), Name(id='msg', ctx=Load()), Name(id='fun', ctx=Load())], keywords=[]))])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), Name(id='msg', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='ppid', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), Name(id='msg', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='parent', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), Name(id='msg', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='parents', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaisesRegex', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), Name(id='msg', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='children', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_pid_0', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Constant(value=0), ops=[NotIn()], comparators=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='pids', ctx=Load()), args=[], keywords=[])]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), Constant(value=0)], keywords=[])), Assert(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='pid_exists', ctx=Load()), args=[Constant(value=0)], keywords=[]))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[Constant(value=1)], keywords=[]), attr='ppid', ctx=Load()), args=[], keywords=[]), Constant(value=0)], keywords=[])), Return()], orelse=[]), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[Constant(value=0)], keywords=[])), Assign(targets=[Name(id='exc', ctx=Store())], value=IfExp(test=Name(id='WINDOWS', ctx=Load()), body=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), orelse=Name(id='ValueError', ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='exc', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='exc', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='terminate', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='exc', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='suspend', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='exc', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='resume', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='exc', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='kill', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='exc', ctx=Load()), Attribute(value=Name(id='p', ctx=Load()), attr='send_signal', ctx=Load()), Attribute(value=Name(id='signal', ctx=Load()), attr='SIGTERM', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ns', ctx=Store())], value=Call(func=Name(id='process_namespace', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), For(target=Tuple(elts=[Name(id='fun', ctx=Store()), Name(id='name', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='ns', ctx=Load()), attr='iter', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='ns', ctx=Load()), attr='getters', ctx=Load()), op=Add(), right=Attribute(value=Name(id='ns', ctx=Load()), attr='setters', ctx=Load()))], keywords=[]), body=[Try(body=[Assign(targets=[Name(id='ret', ctx=Store())], value=Call(func=Name(id='fun', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), body=[Pass()])], orelse=[If(test=Compare(left=Name(id='name', ctx=Load()), ops=[In()], comparators=[Tuple(elts=[Constant(value='uids'), Constant(value='gids')], ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='ret', ctx=Load()), attr='real', ctx=Load()), Constant(value=0)], keywords=[]))], orelse=[If(test=Compare(left=Name(id='name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='username')]), body=[Assign(targets=[Name(id='user', ctx=Store())], value=IfExp(test=Name(id='WINDOWS', ctx=Load()), body=Constant(value='NT AUTHORITY\\SYSTEM'), orelse=Constant(value='root'))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='username', ctx=Load()), args=[], keywords=[]), Name(id='user', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='name')]), body=[Assert(test=Name(id='name', ctx=Load()), msg=Name(id='name', ctx=Load()))], orelse=[])])])], finalbody=[])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='OPENBSD', ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertIn', ctx=Load()), args=[Constant(value=0), Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='pids', ctx=Load()), args=[], keywords=[])], keywords=[])), Assert(test=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='pid_exists', ctx=Load()), args=[Constant(value=0)], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_environ', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='clean_dict', args=arguments(posonlyargs=[], args=[arg(arg='d')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='d', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='PLAT'), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='d', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='HOME'), Constant(value=None)], keywords=[])), If(test=Name(id='MACOS', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='d', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='__CF_USER_TEXT_ENCODING'), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='d', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='VERSIONER_PYTHON_PREFER_32_BIT'), Constant(value=None)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='d', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='VERSIONER_PYTHON_VERSION'), Constant(value=None)], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='dict', ctx=Load()), args=[ListComp(elt=Tuple(elts=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='k', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='\r'), Constant(value='')], keywords=[]), attr='replace', ctx=Load()), args=[Constant(value='\n'), Constant(value='')], keywords=[]), Call(func=Attribute(value=Call(func=Attribute(value=Name(id='v', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='\r'), Constant(value='')], keywords=[]), attr='replace', ctx=Load()), args=[Constant(value='\n'), Constant(value='')], keywords=[])], ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='d', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])], keywords=[]))], decorator_list=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='maxDiff', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='d1', ctx=Store())], value=Call(func=Name(id='clean_dict', ctx=Load()), args=[Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='environ', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='d2', ctx=Store())], value=Call(func=Name(id='clean_dict', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])], keywords=[])), If(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='OSX', ctx=Load())), Name(id='GITHUB_ACTIONS', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='d1', ctx=Load()), Name(id='d2', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_ENVIRON', ctx=Load())), Constant(value='not supported')], keywords=[])]), FunctionDef(name='test_weird_environ', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='code', ctx=Store())], value=Call(func=Attribute(value=Name(id='textwrap', ctx=Load()), attr='dedent', ctx=Load()), args=[Constant(value='\n            #include <unistd.h>\n            #include <fcntl.h>\n\n            char * const argv[] = {"cat", 0};\n            char * const envp[] = {"A=1", "X", "C=3", 0};\n\n            int main(void) {\n                // Close stderr on exec so parent can wait for the\n                // execve to finish.\n                if (fcntl(2, F_SETFD, FD_CLOEXEC) != 0)\n                    return 0;\n                return execve("/bin/cat", argv, envp);\n            }\n            ')], keywords=[])), Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='get_testfn', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Name(id='create_exe', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[keyword(arg='c_code', value=Name(id='code', ctx=Load()))])), Assign(targets=[Name(id='sproc', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='spawn_testproc', ctx=Load()), args=[List(elts=[Name(id='path', ctx=Load())], ctx=Load())], keywords=[keyword(arg='stdin', value=Attribute(value=Name(id='subprocess', ctx=Load()), attr='PIPE', ctx=Load())), keyword(arg='stderr', value=Attribute(value=Name(id='subprocess', ctx=Load()), attr='PIPE', ctx=Load()))])), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[Attribute(value=Name(id='sproc', ctx=Load()), attr='pid', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='wait_for_pid', ctx=Load()), args=[Attribute(value=Name(id='p', ctx=Load()), attr='pid', ctx=Load())], keywords=[])), Assert(test=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='is_running', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='sproc', ctx=Load()), attr='stderr', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), Constant(value=b'')], keywords=[])), If(test=BoolOp(op=And(), values=[Name(id='MACOS', ctx=Load()), Name(id='CI_TESTING', ctx=Load())]), body=[Try(body=[Assign(targets=[Name(id='env', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='environ', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), body=[Return()])], orelse=[], finalbody=[])], orelse=[Assign(targets=[Name(id='env', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='environ', ctx=Load()), args=[], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Name(id='env', ctx=Load()), Dict(keys=[Constant(value='A'), Constant(value='C')], values=[Constant(value='1'), Constant(value='3')])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='sproc', ctx=Load()), attr='communicate', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='sproc', ctx=Load()), attr='returncode', ctx=Load()), Constant(value=0)], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='HAS_ENVIRON', ctx=Load())), Constant(value='not supported')], keywords=[]), Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='POSIX', ctx=Load())), Constant(value='POSIX only')], keywords=[]), Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[Name(id='MACOS_11PLUS', ctx=Load()), Constant(value="macOS 11+ can't get another process environment, issue #2084")], keywords=[])])], decorator_list=[]), If(test=BoolOp(op=And(), values=[Name(id='POSIX', ctx=Load()), Compare(left=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getuid', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value=0)])]), body=[ClassDef(name='LimitedUserTestCase', bases=[Name(id='TestProcess', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Repeat the previous tests by using a limited user.\n        Executed only on UNIX and only if the user who run the test script\n        is root.\n        ')), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='os', ctx=Load()), Constant(value='getuid')], keywords=[]), body=[Assign(targets=[Name(id='PROCESS_UID', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getuid', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='PROCESS_GID', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getgid', ctx=Load()), args=[], keywords=[]))], orelse=[]), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), For(target=Name(id='attr', ctx=Store()), iter=ListComp(elt=Name(id='x', ctx=Load()), generators=[comprehension(target=Name(id='x', ctx=Store()), iter=Call(func=Name(id='dir', ctx=Load()), args=[Name(id='self', ctx=Load())], keywords=[]), ifs=[Call(func=Attribute(value=Name(id='x', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='test')], keywords=[])], is_async=0)]), body=[Assign(targets=[Name(id='meth', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='attr', ctx=Load())], keywords=[])), FunctionDef(name='test_', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Expr(value=Call(func=Name(id='meth', ctx=Load()), args=[], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), body=[Pass()])], orelse=[], finalbody=[])], decorator_list=[]), Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='attr', ctx=Load()), Call(func=Attribute(value=Name(id='types', ctx=Load()), attr='MethodType', ctx=Load()), args=[Name(id='test_', ctx=Load()), Name(id='self', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='setUp', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='setUp', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='setegid', ctx=Load()), args=[Constant(value=1000)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='seteuid', ctx=Load()), args=[Constant(value=1000)], keywords=[]))], decorator_list=[]), FunctionDef(name='tearDown', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='setegid', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='PROCESS_UID', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='seteuid', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='PROCESS_GID', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='tearDown', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='test_nice', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Try(body=[Expr(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Process', ctx=Load()), args=[], keywords=[]), attr='nice', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]))], handlers=[ExceptHandler(type=Attribute(value=Name(id='psutil', ctx=Load()), attr='AccessDenied', ctx=Load()), body=[Pass()])], orelse=[Raise(exc=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='fail', ctx=Load()), args=[Constant(value='exception not raised')], keywords=[]))], finalbody=[])], decorator_list=[]), FunctionDef(name='test_zombie_process', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[Constant(value=1), Constant(value='causes problem as root')], keywords=[])])], decorator_list=[])], orelse=[]), ClassDef(name='TestPopen', bases=[Name(id='PsutilTestCase', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Tests for psutil.Popen class.')), FunctionDef(name='tearDownClass', args=arguments(posonlyargs=[], args=[arg(arg='cls')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Name(id='reap_children', ctx=Load()), args=[], keywords=[]))], decorator_list=[Name(id='classmethod', ctx=Load())]), FunctionDef(name='test_misc', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='cmd', ctx=Store())], value=List(elts=[Name(id='PYTHON_EXE', ctx=Load()), Constant(value='-c'), Constant(value='import time; time.sleep(60);')], ctx=Load())), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Popen', ctx=Load()), args=[Name(id='cmd', ctx=Load())], keywords=[keyword(arg='stdout', value=Attribute(value=Name(id='subprocess', ctx=Load()), attr='PIPE', ctx=Load())), keyword(arg='stderr', value=Attribute(value=Name(id='subprocess', ctx=Load()), attr='PIPE', ctx=Load())), keyword(arg='env', value=Name(id='PYTHON_EXE_ENV', ctx=Load()))]), optional_vars=Name(id='proc', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='proc', ctx=Load()), attr='name', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='proc', ctx=Load()), attr='cpu_times', ctx=Load()), args=[], keywords=[])), Expr(value=Attribute(value=Name(id='proc', ctx=Load()), attr='stdin', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Call(func=Name(id='dir', ctx=Load()), args=[Name(id='proc', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Name(id='AttributeError', ctx=Load()), Name(id='getattr', ctx=Load()), Name(id='proc', ctx=Load()), Constant(value='foo')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='proc', ctx=Load()), attr='terminate', ctx=Load()), args=[], keywords=[]))]), If(test=Name(id='POSIX', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='proc', ctx=Load()), attr='wait', ctx=Load()), args=[Constant(value=5)], keywords=[]), UnaryOp(op=USub(), operand=Attribute(value=Name(id='signal', ctx=Load()), attr='SIGTERM', ctx=Load()))], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='proc', ctx=Load()), attr='wait', ctx=Load()), args=[Constant(value=5)], keywords=[]), Attribute(value=Name(id='signal', ctx=Load()), attr='SIGTERM', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_ctx_manager', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Popen', ctx=Load()), args=[List(elts=[Name(id='PYTHON_EXE', ctx=Load()), Constant(value='-V')], ctx=Load())], keywords=[keyword(arg='stdout', value=Attribute(value=Name(id='subprocess', ctx=Load()), attr='PIPE', ctx=Load())), keyword(arg='stderr', value=Attribute(value=Name(id='subprocess', ctx=Load()), attr='PIPE', ctx=Load())), keyword(arg='stdin', value=Attribute(value=Name(id='subprocess', ctx=Load()), attr='PIPE', ctx=Load())), keyword(arg='env', value=Name(id='PYTHON_EXE_ENV', ctx=Load()))]), optional_vars=Name(id='proc', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='proc', ctx=Load()), attr='communicate', ctx=Load()), args=[], keywords=[]))]), Assert(test=Attribute(value=Attribute(value=Name(id='proc', ctx=Load()), attr='stdout', ctx=Load()), attr='closed', ctx=Load())), Assert(test=Attribute(value=Attribute(value=Name(id='proc', ctx=Load()), attr='stderr', ctx=Load()), attr='closed', ctx=Load())), Assert(test=Attribute(value=Attribute(value=Name(id='proc', ctx=Load()), attr='stdin', ctx=Load()), attr='closed', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='proc', ctx=Load()), attr='returncode', ctx=Load()), Constant(value=0)], keywords=[]))], decorator_list=[]), FunctionDef(name='test_kill_terminate', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='cmd', ctx=Store())], value=List(elts=[Name(id='PYTHON_EXE', ctx=Load()), Constant(value='-c'), Constant(value='import time; time.sleep(60);')], ctx=Load())), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='Popen', ctx=Load()), args=[Name(id='cmd', ctx=Load())], keywords=[keyword(arg='stdout', value=Attribute(value=Name(id='subprocess', ctx=Load()), attr='PIPE', ctx=Load())), keyword(arg='stderr', value=Attribute(value=Name(id='subprocess', ctx=Load()), attr='PIPE', ctx=Load())), keyword(arg='env', value=Name(id='PYTHON_EXE_ENV', ctx=Load()))]), optional_vars=Name(id='proc', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='proc', ctx=Load()), attr='terminate', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='proc', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), Attribute(value=Name(id='proc', ctx=Load()), attr='terminate', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), Attribute(value=Name(id='proc', ctx=Load()), attr='kill', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), Attribute(value=Name(id='proc', ctx=Load()), attr='send_signal', ctx=Load()), Attribute(value=Name(id='signal', ctx=Load()), attr='SIGTERM', ctx=Load())], keywords=[])), If(test=Name(id='WINDOWS', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), Attribute(value=Name(id='proc', ctx=Load()), attr='send_signal', ctx=Load()), Attribute(value=Name(id='signal', ctx=Load()), attr='CTRL_C_EVENT', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertRaises', ctx=Load()), args=[Attribute(value=Name(id='psutil', ctx=Load()), attr='NoSuchProcess', ctx=Load()), Attribute(value=Name(id='proc', ctx=Load()), attr='send_signal', ctx=Load()), Attribute(value=Name(id='signal', ctx=Load()), attr='CTRL_BREAK_EVENT', ctx=Load())], keywords=[]))], orelse=[])])], decorator_list=[])], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[ImportFrom(module='psutil.tests.runner', names=[alias(name='run_from_name')], level=0), Expr(value=Call(func=Name(id='run_from_name', ctx=Load()), args=[Name(id='__file__', ctx=Load())], keywords=[]))], orelse=[])], type_ignores=[])