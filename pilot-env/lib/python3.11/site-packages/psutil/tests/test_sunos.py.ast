Module(body=[Expr(value=Constant(value='Sun OS specific tests.')), Import(names=[alias(name='os')]), Import(names=[alias(name='unittest')]), Import(names=[alias(name='psutil')]), ImportFrom(module='psutil', names=[alias(name='SUNOS')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='PsutilTestCase')], level=0), ImportFrom(module='psutil.tests', names=[alias(name='sh')], level=0), ClassDef(name='SunOSSpecificTestCase', bases=[Name(id='PsutilTestCase', ctx=Load())], keywords=[], body=[FunctionDef(name='test_swap_memory', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='out', ctx=Store())], value=Call(func=Name(id='sh', ctx=Load()), args=[BinOp(left=Constant(value='env PATH=/usr/sbin:/sbin:%s swap -l'), op=Mod(), right=Subscript(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), slice=Constant(value='PATH'), ctx=Load()))], keywords=[])), Assign(targets=[Name(id='lines', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='out', ctx=Load()), attr='strip', ctx=Load()), args=[], keywords=[]), attr='split', ctx=Load()), args=[Constant(value='\n')], keywords=[]), slice=Slice(lower=Constant(value=1)), ctx=Load())), If(test=UnaryOp(op=Not(), operand=Name(id='lines', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='no swap device(s) configured')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='total', ctx=Store()), Name(id='free', ctx=Store())], value=Constant(value=0)), For(target=Name(id='line', ctx=Store()), iter=Name(id='lines', ctx=Load()), body=[Assign(targets=[Name(id='fields', ctx=Store())], value=Call(func=Attribute(value=Name(id='line', ctx=Load()), attr='split', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='total', ctx=Store())], value=BinOp(left=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='fields', ctx=Load()), slice=Constant(value=3), ctx=Load())], keywords=[]), op=Mult(), right=Constant(value=512))), Assign(targets=[Name(id='free', ctx=Store())], value=BinOp(left=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Name(id='fields', ctx=Load()), slice=Constant(value=4), ctx=Load())], keywords=[]), op=Mult(), right=Constant(value=512)))], orelse=[]), Assign(targets=[Name(id='used', ctx=Store())], value=BinOp(left=Name(id='total', ctx=Load()), op=Sub(), right=Name(id='free', ctx=Load()))), Assign(targets=[Name(id='psutil_swap', ctx=Store())], value=Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='swap_memory', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='psutil_swap', ctx=Load()), attr='total', ctx=Load()), Name(id='total', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='psutil_swap', ctx=Load()), attr='used', ctx=Load()), Name(id='used', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='psutil_swap', ctx=Load()), attr='free', ctx=Load()), Name(id='free', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_cpu_count', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='out', ctx=Store())], value=Call(func=Name(id='sh', ctx=Load()), args=[Constant(value='/usr/sbin/psrinfo')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='psutil', ctx=Load()), attr='cpu_count', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='out', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='\n')], keywords=[])], keywords=[])], keywords=[]))], decorator_list=[])], decorator_list=[Call(func=Attribute(value=Name(id='unittest', ctx=Load()), attr='skipIf', ctx=Load()), args=[UnaryOp(op=Not(), operand=Name(id='SUNOS', ctx=Load())), Constant(value='SUNOS only')], keywords=[])]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[ImportFrom(module='psutil.tests.runner', names=[alias(name='run_from_name')], level=0), Expr(value=Call(func=Name(id='run_from_name', ctx=Load()), args=[Name(id='__file__', ctx=Load())], keywords=[]))], orelse=[])], type_ignores=[])