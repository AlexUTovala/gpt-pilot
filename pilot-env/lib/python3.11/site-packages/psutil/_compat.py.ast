Module(body=[Expr(value=Constant(value='Module which provides compatibility with older Python versions.\nThis is more future-compatible rather than the opposite (prefer latest\nPython 3 way of doing things).\n')), Import(names=[alias(name='collections')]), Import(names=[alias(name='contextlib')]), Import(names=[alias(name='errno')]), Import(names=[alias(name='functools')]), Import(names=[alias(name='os')]), Import(names=[alias(name='sys')]), Import(names=[alias(name='types')]), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='PY3'), Constant(value='long'), Constant(value='range'), Constant(value='super'), Constant(value='unicode'), Constant(value='basestring'), Constant(value='u'), Constant(value='b'), Constant(value='lru_cache'), Constant(value='which'), Constant(value='get_terminal_size'), Constant(value='redirect_stderr'), Constant(value='FileNotFoundError'), Constant(value='PermissionError'), Constant(value='ProcessLookupError'), Constant(value='InterruptedError'), Constant(value='ChildProcessError'), Constant(value='FileExistsError')], ctx=Load())), Assign(targets=[Name(id='PY3', ctx=Store())], value=Compare(left=Subscript(value=Attribute(value=Name(id='sys', ctx=Load()), attr='version_info', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[GtE()], comparators=[Constant(value=3)])), Assign(targets=[Name(id='_SENTINEL', ctx=Store())], value=Call(func=Name(id='object', ctx=Load()), args=[], keywords=[])), If(test=Name(id='PY3', ctx=Load()), body=[Assign(targets=[Name(id='long', ctx=Store())], value=Name(id='int', ctx=Load())), Assign(targets=[Name(id='xrange', ctx=Store())], value=Name(id='range', ctx=Load())), Assign(targets=[Name(id='unicode', ctx=Store())], value=Name(id='str', ctx=Load())), Assign(targets=[Name(id='basestring', ctx=Store())], value=Name(id='str', ctx=Load())), Assign(targets=[Name(id='range', ctx=Store())], value=Name(id='range', ctx=Load())), FunctionDef(name='u', args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Name(id='s', ctx=Load()))], decorator_list=[]), FunctionDef(name='b', args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='encode', ctx=Load()), args=[Constant(value='latin-1')], keywords=[]))], decorator_list=[])], orelse=[Assign(targets=[Name(id='long', ctx=Store())], value=Name(id='long', ctx=Load())), Assign(targets=[Name(id='range', ctx=Store())], value=Name(id='xrange', ctx=Load())), Assign(targets=[Name(id='unicode', ctx=Store())], value=Name(id='unicode', ctx=Load())), Assign(targets=[Name(id='basestring', ctx=Store())], value=Name(id='basestring', ctx=Load())), FunctionDef(name='u', args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='unicode', ctx=Load()), args=[Name(id='s', ctx=Load()), Constant(value='unicode_escape')], keywords=[]))], decorator_list=[]), FunctionDef(name='b', args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Name(id='s', ctx=Load()))], decorator_list=[])]), If(test=Name(id='PY3', ctx=Load()), body=[Assign(targets=[Name(id='super', ctx=Store())], value=Name(id='super', ctx=Load()))], orelse=[Assign(targets=[Name(id='_builtin_super', ctx=Store())], value=Name(id='super', ctx=Load())), FunctionDef(name='super', args=arguments(posonlyargs=[], args=[arg(arg='type_'), arg(arg='type_or_obj'), arg(arg='framedepth')], kwonlyargs=[], kw_defaults=[], defaults=[Name(id='_SENTINEL', ctx=Load()), Name(id='_SENTINEL', ctx=Load()), Constant(value=1)]), body=[Expr(value=Constant(value='Like Python 3 builtin super(). If called without any arguments\n        it attempts to infer them at runtime.\n        ')), If(test=Compare(left=Name(id='type_', ctx=Load()), ops=[Is()], comparators=[Name(id='_SENTINEL', ctx=Load())]), body=[Assign(targets=[Name(id='f', ctx=Store())], value=Call(func=Attribute(value=Name(id='sys', ctx=Load()), attr='_getframe', ctx=Load()), args=[Name(id='framedepth', ctx=Load())], keywords=[])), Try(body=[Assign(targets=[Name(id='type_or_obj', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='f', ctx=Load()), attr='f_locals', ctx=Load()), slice=Subscript(value=Attribute(value=Attribute(value=Name(id='f', ctx=Load()), attr='f_code', ctx=Load()), attr='co_varnames', ctx=Load()), slice=Constant(value=0), ctx=Load()), ctx=Load()))], handlers=[ExceptHandler(type=Tuple(elts=[Name(id='IndexError', ctx=Load()), Name(id='KeyError', ctx=Load())], ctx=Load()), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='super() used in a function with no args')], keywords=[]))])], orelse=[], finalbody=[]), Try(body=[Assign(targets=[Name(id='mro', ctx=Store())], value=Attribute(value=Name(id='type_or_obj', ctx=Load()), attr='__mro__', ctx=Load()))], handlers=[ExceptHandler(type=Tuple(elts=[Name(id='AttributeError', ctx=Load()), Name(id='RuntimeError', ctx=Load())], ctx=Load()), body=[Try(body=[Assign(targets=[Name(id='mro', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='type_or_obj', ctx=Load()), attr='__class__', ctx=Load()), attr='__mro__', ctx=Load()))], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='super() used in a non-newstyle class')], keywords=[]))])], orelse=[], finalbody=[])])], orelse=[], finalbody=[]), For(target=Name(id='type_', ctx=Store()), iter=Name(id='mro', ctx=Load()), body=[For(target=Name(id='meth', ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='type_', ctx=Load()), attr='__dict__', ctx=Load()), attr='values', ctx=Load()), args=[], keywords=[]), body=[Try(body=[While(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='meth', ctx=Load()), Attribute(value=Name(id='types', ctx=Load()), attr='FunctionType', ctx=Load())], keywords=[])), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='meth', ctx=Load()), Name(id='property', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='meth', ctx=Store())], value=Attribute(value=Name(id='meth', ctx=Load()), attr='fget', ctx=Load()))], orelse=[Try(body=[Assign(targets=[Name(id='meth', ctx=Store())], value=Attribute(value=Name(id='meth', ctx=Load()), attr='__func__', ctx=Load()))], handlers=[ExceptHandler(type=Name(id='AttributeError', ctx=Load()), body=[Assign(targets=[Name(id='meth', ctx=Store())], value=Call(func=Attribute(value=Name(id='meth', ctx=Load()), attr='__get__', ctx=Load()), args=[Name(id='type_or_obj', ctx=Load()), Name(id='type_', ctx=Load())], keywords=[]))])], orelse=[], finalbody=[])])], orelse=[])], handlers=[ExceptHandler(type=Tuple(elts=[Name(id='AttributeError', ctx=Load()), Name(id='TypeError', ctx=Load())], ctx=Load()), body=[Continue()])], orelse=[], finalbody=[]), If(test=Compare(left=Attribute(value=Name(id='meth', ctx=Load()), attr='func_code', ctx=Load()), ops=[Is()], comparators=[Attribute(value=Name(id='f', ctx=Load()), attr='f_code', ctx=Load())]), body=[Break()], orelse=[])], orelse=[Continue()]), Break()], orelse=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='super() called outside a method')], keywords=[]))])], orelse=[]), If(test=Compare(left=Name(id='type_or_obj', ctx=Load()), ops=[IsNot()], comparators=[Name(id='_SENTINEL', ctx=Load())]), body=[Return(value=Call(func=Name(id='_builtin_super', ctx=Load()), args=[Name(id='type_', ctx=Load()), Name(id='type_or_obj', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Name(id='_builtin_super', ctx=Load()), args=[Name(id='type_', ctx=Load())], keywords=[]))], decorator_list=[])]), If(test=Name(id='PY3', ctx=Load()), body=[Assign(targets=[Name(id='FileNotFoundError', ctx=Store())], value=Name(id='FileNotFoundError', ctx=Load())), Assign(targets=[Name(id='PermissionError', ctx=Store())], value=Name(id='PermissionError', ctx=Load())), Assign(targets=[Name(id='ProcessLookupError', ctx=Store())], value=Name(id='ProcessLookupError', ctx=Load())), Assign(targets=[Name(id='InterruptedError', ctx=Store())], value=Name(id='InterruptedError', ctx=Load())), Assign(targets=[Name(id='ChildProcessError', ctx=Store())], value=Name(id='ChildProcessError', ctx=Load())), Assign(targets=[Name(id='FileExistsError', ctx=Store())], value=Name(id='FileExistsError', ctx=Load()))], orelse=[Import(names=[alias(name='platform')]), FunctionDef(name='_instance_checking_exception', args=arguments(posonlyargs=[], args=[arg(arg='base_exception')], kwonlyargs=[], kw_defaults=[], defaults=[Name(id='Exception', ctx=Load())]), body=[FunctionDef(name='wrapped', args=arguments(posonlyargs=[], args=[arg(arg='instance_checker')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[ClassDef(name='TemporaryClass', bases=[Name(id='base_exception', ctx=Load())], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Name(id='args', ctx=Load()), slice=Constant(value=0), ctx=Load()), Name(id='TemporaryClass', ctx=Load())], keywords=[])]), body=[Assign(targets=[Name(id='unwrap_me', ctx=Store())], value=Subscript(value=Name(id='args', ctx=Load()), slice=Constant(value=0), ctx=Load())), For(target=Name(id='attr', ctx=Store()), iter=Call(func=Name(id='dir', ctx=Load()), args=[Name(id='unwrap_me', ctx=Load())], keywords=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='attr', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='__')], keywords=[])), body=[Expr(value=Call(func=Name(id='setattr', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='attr', ctx=Load()), Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='unwrap_me', ctx=Load()), Name(id='attr', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[])], orelse=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='TemporaryClass', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))])], decorator_list=[]), ClassDef(name='__metaclass__', bases=[Name(id='type', ctx=Load())], keywords=[], body=[FunctionDef(name='__instancecheck__', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='inst')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='instance_checker', ctx=Load()), args=[Name(id='inst', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__subclasscheck__', args=arguments(posonlyargs=[], args=[arg(arg='cls'), arg(arg='classinfo')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='sys', ctx=Load()), attr='exc_info', ctx=Load()), args=[], keywords=[]), slice=Constant(value=1), ctx=Load())), Return(value=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Name(id='cls', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[])], decorator_list=[]), Assign(targets=[Attribute(value=Name(id='TemporaryClass', ctx=Load()), attr='__name__', ctx=Store())], value=Attribute(value=Name(id='instance_checker', ctx=Load()), attr='__name__', ctx=Load())), Assign(targets=[Attribute(value=Name(id='TemporaryClass', ctx=Load()), attr='__doc__', ctx=Store())], value=Attribute(value=Name(id='instance_checker', ctx=Load()), attr='__doc__', ctx=Load())), Return(value=Name(id='TemporaryClass', ctx=Load()))], decorator_list=[]), Return(value=Name(id='wrapped', ctx=Load()))], decorator_list=[]), FunctionDef(name='FileNotFoundError', args=arguments(posonlyargs=[], args=[arg(arg='inst')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='inst', ctx=Load()), Constant(value='errno'), Name(id='_SENTINEL', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Attribute(value=Name(id='errno', ctx=Load()), attr='ENOENT', ctx=Load())]))], decorator_list=[Call(func=Name(id='_instance_checking_exception', ctx=Load()), args=[Name(id='EnvironmentError', ctx=Load())], keywords=[])]), FunctionDef(name='ProcessLookupError', args=arguments(posonlyargs=[], args=[arg(arg='inst')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='inst', ctx=Load()), Constant(value='errno'), Name(id='_SENTINEL', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Attribute(value=Name(id='errno', ctx=Load()), attr='ESRCH', ctx=Load())]))], decorator_list=[Call(func=Name(id='_instance_checking_exception', ctx=Load()), args=[Name(id='EnvironmentError', ctx=Load())], keywords=[])]), FunctionDef(name='PermissionError', args=arguments(posonlyargs=[], args=[arg(arg='inst')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='inst', ctx=Load()), Constant(value='errno'), Name(id='_SENTINEL', ctx=Load())], keywords=[]), ops=[In()], comparators=[Tuple(elts=[Attribute(value=Name(id='errno', ctx=Load()), attr='EACCES', ctx=Load()), Attribute(value=Name(id='errno', ctx=Load()), attr='EPERM', ctx=Load())], ctx=Load())]))], decorator_list=[Call(func=Name(id='_instance_checking_exception', ctx=Load()), args=[Name(id='EnvironmentError', ctx=Load())], keywords=[])]), FunctionDef(name='InterruptedError', args=arguments(posonlyargs=[], args=[arg(arg='inst')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='inst', ctx=Load()), Constant(value='errno'), Name(id='_SENTINEL', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Attribute(value=Name(id='errno', ctx=Load()), attr='EINTR', ctx=Load())]))], decorator_list=[Call(func=Name(id='_instance_checking_exception', ctx=Load()), args=[Name(id='EnvironmentError', ctx=Load())], keywords=[])]), FunctionDef(name='ChildProcessError', args=arguments(posonlyargs=[], args=[arg(arg='inst')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='inst', ctx=Load()), Constant(value='errno'), Name(id='_SENTINEL', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Attribute(value=Name(id='errno', ctx=Load()), attr='ECHILD', ctx=Load())]))], decorator_list=[Call(func=Name(id='_instance_checking_exception', ctx=Load()), args=[Name(id='EnvironmentError', ctx=Load())], keywords=[])]), FunctionDef(name='FileExistsError', args=arguments(posonlyargs=[], args=[arg(arg='inst')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Compare(left=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='inst', ctx=Load()), Constant(value='errno'), Name(id='_SENTINEL', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Attribute(value=Name(id='errno', ctx=Load()), attr='EEXIST', ctx=Load())]))], decorator_list=[Call(func=Name(id='_instance_checking_exception', ctx=Load()), args=[Name(id='EnvironmentError', ctx=Load())], keywords=[])]), If(test=Compare(left=Call(func=Attribute(value=Name(id='platform', ctx=Load()), attr='python_implementation', ctx=Load()), args=[], keywords=[]), ops=[NotEq()], comparators=[Constant(value='CPython')]), body=[Try(body=[Raise(exc=Call(func=Name(id='OSError', ctx=Load()), args=[Attribute(value=Name(id='errno', ctx=Load()), attr='EEXIST', ctx=Load()), Constant(value='perm')], keywords=[]))], handlers=[ExceptHandler(type=Name(id='FileExistsError', ctx=Load()), body=[Pass()]), ExceptHandler(type=Name(id='OSError', ctx=Load()), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='broken or incompatible Python implementation, see: https://github.com/giampaolo/psutil/issues/1659')], keywords=[]))])], orelse=[], finalbody=[])], orelse=[])]), Try(body=[ImportFrom(module='functools', names=[alias(name='lru_cache')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Try(body=[ImportFrom(module='threading', names=[alias(name='RLock')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[ImportFrom(module='dummy_threading', names=[alias(name='RLock')], level=0)])], orelse=[], finalbody=[]), Assign(targets=[Name(id='_CacheInfo', ctx=Store())], value=Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='namedtuple', ctx=Load()), args=[Constant(value='CacheInfo'), List(elts=[Constant(value='hits'), Constant(value='misses'), Constant(value='maxsize'), Constant(value='currsize')], ctx=Load())], keywords=[])), ClassDef(name='_HashedSeq', bases=[Name(id='list', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='__slots__', ctx=Store())], value=Tuple(elts=[Constant(value='hashvalue')], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='tup'), arg(arg='hash')], kwonlyargs=[], kw_defaults=[], defaults=[Name(id='hash', ctx=Load())]), body=[Assign(targets=[Subscript(value=Name(id='self', ctx=Load()), slice=Slice(), ctx=Store())], value=Name(id='tup', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='hashvalue', ctx=Store())], value=Call(func=Name(id='hash', ctx=Load()), args=[Name(id='tup', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__hash__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='hashvalue', ctx=Load()))], decorator_list=[])], decorator_list=[]), FunctionDef(name='_make_key', args=arguments(posonlyargs=[], args=[arg(arg='args'), arg(arg='kwds'), arg(arg='typed'), arg(arg='kwd_mark'), arg(arg='fasttypes'), arg(arg='sorted'), arg(arg='tuple'), arg(arg='type'), arg(arg='len')], kwonlyargs=[], kw_defaults=[], defaults=[Tuple(elts=[Name(id='_SENTINEL', ctx=Load())], ctx=Load()), Call(func=Name(id='set', ctx=Load()), args=[Tuple(elts=[Name(id='int', ctx=Load()), Name(id='str', ctx=Load()), Name(id='frozenset', ctx=Load()), Call(func=Name(id='type', ctx=Load()), args=[Constant(value=None)], keywords=[])], ctx=Load())], keywords=[]), Name(id='sorted', ctx=Load()), Name(id='tuple', ctx=Load()), Name(id='type', ctx=Load()), Name(id='len', ctx=Load())]), body=[Assign(targets=[Name(id='key', ctx=Store())], value=Name(id='args', ctx=Load())), If(test=Name(id='kwds', ctx=Load()), body=[Assign(targets=[Name(id='sorted_items', ctx=Store())], value=Call(func=Name(id='sorted', ctx=Load()), args=[Call(func=Attribute(value=Name(id='kwds', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[])], keywords=[])), AugAssign(target=Name(id='key', ctx=Store()), op=Add(), value=Name(id='kwd_mark', ctx=Load())), For(target=Name(id='item', ctx=Store()), iter=Name(id='sorted_items', ctx=Load()), body=[AugAssign(target=Name(id='key', ctx=Store()), op=Add(), value=Name(id='item', ctx=Load()))], orelse=[])], orelse=[]), If(test=Name(id='typed', ctx=Load()), body=[AugAssign(target=Name(id='key', ctx=Store()), op=Add(), value=Call(func=Name(id='tuple', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='type', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='v', ctx=Store()), iter=Name(id='args', ctx=Load()), ifs=[], is_async=0)])], keywords=[])), If(test=Name(id='kwds', ctx=Load()), body=[AugAssign(target=Name(id='key', ctx=Store()), op=Add(), value=Call(func=Name(id='tuple', ctx=Load()), args=[GeneratorExp(elt=Call(func=Name(id='type', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[]), generators=[comprehension(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Name(id='sorted_items', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))], orelse=[])], orelse=[If(test=BoolOp(op=And(), values=[Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), Compare(left=Call(func=Name(id='type', ctx=Load()), args=[Subscript(value=Name(id='key', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[]), ops=[In()], comparators=[Name(id='fasttypes', ctx=Load())])]), body=[Return(value=Subscript(value=Name(id='key', ctx=Load()), slice=Constant(value=0), ctx=Load()))], orelse=[])]), Return(value=Call(func=Name(id='_HashedSeq', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='lru_cache', args=arguments(posonlyargs=[], args=[arg(arg='maxsize'), arg(arg='typed')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=100), Constant(value=False)]), body=[Expr(value=Constant(value='Least-recently-used cache decorator, see:\n        http://docs.python.org/3/library/functools.html#functools.lru_cache.\n        ')), FunctionDef(name='decorating_function', args=arguments(posonlyargs=[], args=[arg(arg='user_function')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='cache', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='stats', ctx=Store())], value=List(elts=[Constant(value=0), Constant(value=0)], ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='HITS', ctx=Store()), Name(id='MISSES', ctx=Store())], ctx=Store())], value=Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load())), Assign(targets=[Name(id='make_key', ctx=Store())], value=Name(id='_make_key', ctx=Load())), Assign(targets=[Name(id='cache_get', ctx=Store())], value=Attribute(value=Name(id='cache', ctx=Load()), attr='get', ctx=Load())), Assign(targets=[Name(id='_len', ctx=Store())], value=Name(id='len', ctx=Load())), Assign(targets=[Name(id='lock', ctx=Store())], value=Call(func=Name(id='RLock', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='root', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Subscript(value=Name(id='root', ctx=Load()), slice=Slice(), ctx=Store())], value=List(elts=[Name(id='root', ctx=Load()), Name(id='root', ctx=Load()), Constant(value=None), Constant(value=None)], ctx=Load())), Assign(targets=[Name(id='nonlocal_root', ctx=Store())], value=List(elts=[Name(id='root', ctx=Load())], ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='PREV', ctx=Store()), Name(id='NEXT', ctx=Store()), Name(id='KEY', ctx=Store()), Name(id='RESULT', ctx=Store())], ctx=Store())], value=Tuple(elts=[Constant(value=0), Constant(value=1), Constant(value=2), Constant(value=3)], ctx=Load())), If(test=Compare(left=Name(id='maxsize', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[FunctionDef(name='wrapper', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwds'), defaults=[]), body=[Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Name(id='user_function', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwds', ctx=Load()))])), AugAssign(target=Subscript(value=Name(id='stats', ctx=Load()), slice=Name(id='MISSES', ctx=Load()), ctx=Store()), op=Add(), value=Constant(value=1)), Return(value=Name(id='result', ctx=Load()))], decorator_list=[])], orelse=[If(test=Compare(left=Name(id='maxsize', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[FunctionDef(name='wrapper', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwds'), defaults=[]), body=[Assign(targets=[Name(id='key', ctx=Store())], value=Call(func=Name(id='make_key', ctx=Load()), args=[Name(id='args', ctx=Load()), Name(id='kwds', ctx=Load()), Name(id='typed', ctx=Load())], keywords=[])), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Name(id='cache_get', ctx=Load()), args=[Name(id='key', ctx=Load()), Name(id='root', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='result', ctx=Load()), ops=[IsNot()], comparators=[Name(id='root', ctx=Load())]), body=[AugAssign(target=Subscript(value=Name(id='stats', ctx=Load()), slice=Name(id='HITS', ctx=Load()), ctx=Store()), op=Add(), value=Constant(value=1)), Return(value=Name(id='result', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Name(id='user_function', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwds', ctx=Load()))])), Assign(targets=[Subscript(value=Name(id='cache', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store())], value=Name(id='result', ctx=Load())), AugAssign(target=Subscript(value=Name(id='stats', ctx=Load()), slice=Name(id='MISSES', ctx=Load()), ctx=Store()), op=Add(), value=Constant(value=1)), Return(value=Name(id='result', ctx=Load()))], decorator_list=[])], orelse=[FunctionDef(name='wrapper', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwds'), defaults=[]), body=[If(test=BoolOp(op=Or(), values=[Name(id='kwds', ctx=Load()), Name(id='typed', ctx=Load())]), body=[Assign(targets=[Name(id='key', ctx=Store())], value=Call(func=Name(id='make_key', ctx=Load()), args=[Name(id='args', ctx=Load()), Name(id='kwds', ctx=Load()), Name(id='typed', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='key', ctx=Store())], value=Name(id='args', ctx=Load()))]), Expr(value=Call(func=Attribute(value=Name(id='lock', ctx=Load()), attr='acquire', ctx=Load()), args=[], keywords=[])), Try(body=[Assign(targets=[Name(id='link', ctx=Store())], value=Call(func=Name(id='cache_get', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='link', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Tuple(elts=[Name(id='root', ctx=Store())], ctx=Store())], value=Name(id='nonlocal_root', ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='link_prev', ctx=Store()), Name(id='link_next', ctx=Store()), Name(id='key', ctx=Store()), Name(id='result', ctx=Store())], ctx=Store())], value=Name(id='link', ctx=Load())), Assign(targets=[Subscript(value=Name(id='link_prev', ctx=Load()), slice=Name(id='NEXT', ctx=Load()), ctx=Store())], value=Name(id='link_next', ctx=Load())), Assign(targets=[Subscript(value=Name(id='link_next', ctx=Load()), slice=Name(id='PREV', ctx=Load()), ctx=Store())], value=Name(id='link_prev', ctx=Load())), Assign(targets=[Name(id='last', ctx=Store())], value=Subscript(value=Name(id='root', ctx=Load()), slice=Name(id='PREV', ctx=Load()), ctx=Load())), Assign(targets=[Subscript(value=Name(id='last', ctx=Load()), slice=Name(id='NEXT', ctx=Load()), ctx=Store()), Subscript(value=Name(id='root', ctx=Load()), slice=Name(id='PREV', ctx=Load()), ctx=Store())], value=Name(id='link', ctx=Load())), Assign(targets=[Subscript(value=Name(id='link', ctx=Load()), slice=Name(id='PREV', ctx=Load()), ctx=Store())], value=Name(id='last', ctx=Load())), Assign(targets=[Subscript(value=Name(id='link', ctx=Load()), slice=Name(id='NEXT', ctx=Load()), ctx=Store())], value=Name(id='root', ctx=Load())), AugAssign(target=Subscript(value=Name(id='stats', ctx=Load()), slice=Name(id='HITS', ctx=Load()), ctx=Store()), op=Add(), value=Constant(value=1)), Return(value=Name(id='result', ctx=Load()))], orelse=[])], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='lock', ctx=Load()), attr='release', ctx=Load()), args=[], keywords=[]))]), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Name(id='user_function', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwds', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='lock', ctx=Load()), attr='acquire', ctx=Load()), args=[], keywords=[])), Try(body=[Assign(targets=[Tuple(elts=[Name(id='root', ctx=Store())], ctx=Store())], value=Name(id='nonlocal_root', ctx=Load())), If(test=Compare(left=Name(id='key', ctx=Load()), ops=[In()], comparators=[Name(id='cache', ctx=Load())]), body=[Pass()], orelse=[If(test=Compare(left=Call(func=Name(id='_len', ctx=Load()), args=[Name(id='cache', ctx=Load())], keywords=[]), ops=[GtE()], comparators=[Name(id='maxsize', ctx=Load())]), body=[Assign(targets=[Name(id='oldroot', ctx=Store())], value=Name(id='root', ctx=Load())), Assign(targets=[Subscript(value=Name(id='oldroot', ctx=Load()), slice=Name(id='KEY', ctx=Load()), ctx=Store())], value=Name(id='key', ctx=Load())), Assign(targets=[Subscript(value=Name(id='oldroot', ctx=Load()), slice=Name(id='RESULT', ctx=Load()), ctx=Store())], value=Name(id='result', ctx=Load())), Assign(targets=[Name(id='root', ctx=Store()), Subscript(value=Name(id='nonlocal_root', ctx=Load()), slice=Constant(value=0), ctx=Store())], value=Subscript(value=Name(id='oldroot', ctx=Load()), slice=Name(id='NEXT', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='oldkey', ctx=Store())], value=Subscript(value=Name(id='root', ctx=Load()), slice=Name(id='KEY', ctx=Load()), ctx=Load())), Assign(targets=[Subscript(value=Name(id='root', ctx=Load()), slice=Name(id='KEY', ctx=Load()), ctx=Store()), Subscript(value=Name(id='root', ctx=Load()), slice=Name(id='RESULT', ctx=Load()), ctx=Store())], value=Constant(value=None)), Delete(targets=[Subscript(value=Name(id='cache', ctx=Load()), slice=Name(id='oldkey', ctx=Load()), ctx=Del())]), Assign(targets=[Subscript(value=Name(id='cache', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store())], value=Name(id='oldroot', ctx=Load()))], orelse=[Assign(targets=[Name(id='last', ctx=Store())], value=Subscript(value=Name(id='root', ctx=Load()), slice=Name(id='PREV', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='link', ctx=Store())], value=List(elts=[Name(id='last', ctx=Load()), Name(id='root', ctx=Load()), Name(id='key', ctx=Load()), Name(id='result', ctx=Load())], ctx=Load())), Assign(targets=[Subscript(value=Name(id='last', ctx=Load()), slice=Name(id='NEXT', ctx=Load()), ctx=Store()), Subscript(value=Name(id='root', ctx=Load()), slice=Name(id='PREV', ctx=Load()), ctx=Store()), Subscript(value=Name(id='cache', ctx=Load()), slice=Name(id='key', ctx=Load()), ctx=Store())], value=Name(id='link', ctx=Load()))])]), AugAssign(target=Subscript(value=Name(id='stats', ctx=Load()), slice=Name(id='MISSES', ctx=Load()), ctx=Store()), op=Add(), value=Constant(value=1))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='lock', ctx=Load()), attr='release', ctx=Load()), args=[], keywords=[]))]), Return(value=Name(id='result', ctx=Load()))], decorator_list=[])])]), FunctionDef(name='cache_info', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Report cache statistics.')), Expr(value=Call(func=Attribute(value=Name(id='lock', ctx=Load()), attr='acquire', ctx=Load()), args=[], keywords=[])), Try(body=[Return(value=Call(func=Name(id='_CacheInfo', ctx=Load()), args=[Subscript(value=Name(id='stats', ctx=Load()), slice=Name(id='HITS', ctx=Load()), ctx=Load()), Subscript(value=Name(id='stats', ctx=Load()), slice=Name(id='MISSES', ctx=Load()), ctx=Load()), Name(id='maxsize', ctx=Load()), Call(func=Name(id='len', ctx=Load()), args=[Name(id='cache', ctx=Load())], keywords=[])], keywords=[]))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='lock', ctx=Load()), attr='release', ctx=Load()), args=[], keywords=[]))])], decorator_list=[]), FunctionDef(name='cache_clear', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Clear the cache and cache statistics.')), Expr(value=Call(func=Attribute(value=Name(id='lock', ctx=Load()), attr='acquire', ctx=Load()), args=[], keywords=[])), Try(body=[Expr(value=Call(func=Attribute(value=Name(id='cache', ctx=Load()), attr='clear', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='root', ctx=Store())], value=Subscript(value=Name(id='nonlocal_root', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Subscript(value=Name(id='root', ctx=Load()), slice=Slice(), ctx=Store())], value=List(elts=[Name(id='root', ctx=Load()), Name(id='root', ctx=Load()), Constant(value=None), Constant(value=None)], ctx=Load())), Assign(targets=[Subscript(value=Name(id='stats', ctx=Load()), slice=Slice(), ctx=Store())], value=List(elts=[Constant(value=0), Constant(value=0)], ctx=Load()))], handlers=[], orelse=[], finalbody=[Expr(value=Call(func=Attribute(value=Name(id='lock', ctx=Load()), attr='release', ctx=Load()), args=[], keywords=[]))])], decorator_list=[]), Assign(targets=[Attribute(value=Name(id='wrapper', ctx=Load()), attr='__wrapped__', ctx=Store())], value=Name(id='user_function', ctx=Load())), Assign(targets=[Attribute(value=Name(id='wrapper', ctx=Load()), attr='cache_info', ctx=Store())], value=Name(id='cache_info', ctx=Load())), Assign(targets=[Attribute(value=Name(id='wrapper', ctx=Load()), attr='cache_clear', ctx=Store())], value=Name(id='cache_clear', ctx=Load())), Return(value=Call(func=Attribute(value=Name(id='functools', ctx=Load()), attr='update_wrapper', ctx=Load()), args=[Name(id='wrapper', ctx=Load()), Name(id='user_function', ctx=Load())], keywords=[]))], decorator_list=[]), Return(value=Name(id='decorating_function', ctx=Load()))], decorator_list=[])])], orelse=[], finalbody=[]), Try(body=[ImportFrom(module='shutil', names=[alias(name='which')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[FunctionDef(name='which', args=arguments(posonlyargs=[], args=[arg(arg='cmd'), arg(arg='mode'), arg(arg='path')], kwonlyargs=[], kw_defaults=[], defaults=[BinOp(left=Attribute(value=Name(id='os', ctx=Load()), attr='F_OK', ctx=Load()), op=BitOr(), right=Attribute(value=Name(id='os', ctx=Load()), attr='X_OK', ctx=Load())), Constant(value=None)]), body=[Expr(value=Constant(value='Given a command, mode, and a PATH string, return the path which\n        conforms to the given mode on the PATH, or None if there is no such\n        file.\n\n        `mode` defaults to os.F_OK | os.X_OK. `path` defaults to the result\n        of os.environ.get("PATH"), or can be overridden with a custom search\n        path.\n        ')), FunctionDef(name='_access_check', args=arguments(posonlyargs=[], args=[arg(arg='fn'), arg(arg='mode')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BoolOp(op=And(), values=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='exists', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='access', ctx=Load()), args=[Name(id='fn', ctx=Load()), Name(id='mode', ctx=Load())], keywords=[]), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[Name(id='fn', ctx=Load())], keywords=[]))]))], decorator_list=[]), If(test=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='dirname', ctx=Load()), args=[Name(id='cmd', ctx=Load())], keywords=[]), body=[If(test=Call(func=Name(id='_access_check', ctx=Load()), args=[Name(id='cmd', ctx=Load()), Name(id='mode', ctx=Load())], keywords=[]), body=[Return(value=Name(id='cmd', ctx=Load()))], orelse=[]), Return(value=Constant(value=None))], orelse=[]), If(test=Compare(left=Name(id='path', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='PATH'), Attribute(value=Name(id='os', ctx=Load()), attr='defpath', ctx=Load())], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='path', ctx=Load())), body=[Return(value=Constant(value=None))], orelse=[]), Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Name(id='path', ctx=Load()), attr='split', ctx=Load()), args=[Attribute(value=Name(id='os', ctx=Load()), attr='pathsep', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='sys', ctx=Load()), attr='platform', ctx=Load()), ops=[Eq()], comparators=[Constant(value='win32')]), body=[If(test=Compare(left=Attribute(value=Name(id='os', ctx=Load()), attr='curdir', ctx=Load()), ops=[NotIn()], comparators=[Name(id='path', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='path', ctx=Load()), attr='insert', ctx=Load()), args=[Constant(value=0), Attribute(value=Name(id='os', ctx=Load()), attr='curdir', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='pathext', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='PATHEXT'), Constant(value='')], keywords=[]), attr='split', ctx=Load()), args=[Attribute(value=Name(id='os', ctx=Load()), attr='pathsep', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='any', ctx=Load()), args=[GeneratorExp(elt=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='cmd', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), attr='endswith', ctx=Load()), args=[Call(func=Attribute(value=Name(id='ext', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[])], keywords=[]), generators=[comprehension(target=Name(id='ext', ctx=Store()), iter=Name(id='pathext', ctx=Load()), ifs=[], is_async=0)])], keywords=[]), body=[Assign(targets=[Name(id='files', ctx=Store())], value=List(elts=[Name(id='cmd', ctx=Load())], ctx=Load()))], orelse=[Assign(targets=[Name(id='files', ctx=Store())], value=ListComp(elt=BinOp(left=Name(id='cmd', ctx=Load()), op=Add(), right=Name(id='ext', ctx=Load())), generators=[comprehension(target=Name(id='ext', ctx=Store()), iter=Name(id='pathext', ctx=Load()), ifs=[], is_async=0)]))])], orelse=[Assign(targets=[Name(id='files', ctx=Store())], value=List(elts=[Name(id='cmd', ctx=Load())], ctx=Load()))]), Assign(targets=[Name(id='seen', ctx=Store())], value=Call(func=Name(id='set', ctx=Load()), args=[], keywords=[])), For(target=Name(id='dir', ctx=Store()), iter=Name(id='path', ctx=Load()), body=[Assign(targets=[Name(id='normdir', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='normcase', ctx=Load()), args=[Name(id='dir', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='normdir', ctx=Load()), ops=[NotIn()], comparators=[Name(id='seen', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='seen', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='normdir', ctx=Load())], keywords=[])), For(target=Name(id='thefile', ctx=Store()), iter=Name(id='files', ctx=Load()), body=[Assign(targets=[Name(id='name', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='dir', ctx=Load()), Name(id='thefile', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='_access_check', ctx=Load()), args=[Name(id='name', ctx=Load()), Name(id='mode', ctx=Load())], keywords=[]), body=[Return(value=Name(id='name', ctx=Load()))], orelse=[])], orelse=[])], orelse=[])], orelse=[]), Return(value=Constant(value=None))], decorator_list=[])])], orelse=[], finalbody=[]), Try(body=[ImportFrom(module='shutil', names=[alias(name='get_terminal_size')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[FunctionDef(name='get_terminal_size', args=arguments(posonlyargs=[], args=[arg(arg='fallback')], kwonlyargs=[], kw_defaults=[], defaults=[Tuple(elts=[Constant(value=80), Constant(value=24)], ctx=Load())]), body=[Try(body=[Import(names=[alias(name='fcntl')]), Import(names=[alias(name='struct')]), Import(names=[alias(name='termios')])], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[Return(value=Name(id='fallback', ctx=Load()))])], orelse=[Try(body=[Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='struct', ctx=Load()), attr='unpack', ctx=Load()), args=[Constant(value='hh'), Call(func=Attribute(value=Name(id='fcntl', ctx=Load()), attr='ioctl', ctx=Load()), args=[Constant(value=1), Attribute(value=Name(id='termios', ctx=Load()), attr='TIOCGWINSZ', ctx=Load()), Constant(value='1234')], keywords=[])], keywords=[])), Return(value=Tuple(elts=[Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value=1), ctx=Load()), Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value=0), ctx=Load())], ctx=Load()))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), body=[Return(value=Name(id='fallback', ctx=Load()))])], orelse=[], finalbody=[])], finalbody=[])], decorator_list=[])])], orelse=[], finalbody=[]), Try(body=[ImportFrom(module='subprocess', names=[alias(name='TimeoutExpired', asname='SubprocessTimeoutExpired')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[ClassDef(name='SubprocessTimeoutExpired', bases=[Name(id='Exception', ctx=Load())], keywords=[], body=[Pass()], decorator_list=[])])], orelse=[], finalbody=[]), Try(body=[ImportFrom(module='contextlib', names=[alias(name='redirect_stderr')], level=0)], handlers=[ExceptHandler(type=Name(id='ImportError', ctx=Load()), body=[FunctionDef(name='redirect_stderr', args=arguments(posonlyargs=[], args=[arg(arg='new_target')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='original', ctx=Store())], value=Attribute(value=Name(id='sys', ctx=Load()), attr='stderr', ctx=Load())), Try(body=[Assign(targets=[Attribute(value=Name(id='sys', ctx=Load()), attr='stderr', ctx=Store())], value=Name(id='new_target', ctx=Load())), Expr(value=Yield(value=Name(id='new_target', ctx=Load())))], handlers=[], orelse=[], finalbody=[Assign(targets=[Attribute(value=Name(id='sys', ctx=Load()), attr='stderr', ctx=Store())], value=Name(id='original', ctx=Load()))])], decorator_list=[Attribute(value=Name(id='contextlib', ctx=Load()), attr='contextmanager', ctx=Load())])])], orelse=[], finalbody=[])], type_ignores=[])