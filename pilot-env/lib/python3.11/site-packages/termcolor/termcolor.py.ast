Module(body=[Expr(value=Constant(value='ANSI color formatting for output in terminal.')), ImportFrom(module='__future__', names=[alias(name='annotations')], level=0), Import(names=[alias(name='os')]), Import(names=[alias(name='sys')]), Import(names=[alias(name='warnings')]), ImportFrom(module='typing', names=[alias(name='Any'), alias(name='Iterable')], level=0), FunctionDef(name='__getattr__', args=arguments(posonlyargs=[], args=[arg(arg='name', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='name', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__ALL__')]), body=[Expr(value=Call(func=Attribute(value=Name(id='warnings', ctx=Load()), attr='warn', ctx=Load()), args=[Constant(value='__ALL__ is deprecated and will be removed in termcolor 3. Use __all__ instead.'), Name(id='DeprecationWarning', ctx=Load())], keywords=[keyword(arg='stacklevel', value=Constant(value=2))])), Return(value=List(elts=[Constant(value='colored'), Constant(value='cprint')], ctx=Load()))], orelse=[]), Assign(targets=[Name(id='msg', ctx=Store())], value=JoinedStr(values=[Constant(value="module '"), FormattedValue(value=Name(id='__name__', ctx=Load()), conversion=-1), Constant(value="' has no attribute '"), FormattedValue(value=Name(id='name', ctx=Load()), conversion=-1), Constant(value="'")])), Raise(exc=Call(func=Name(id='AttributeError', ctx=Load()), args=[Name(id='msg', ctx=Load())], keywords=[]))], decorator_list=[], returns=Subscript(value=Name(id='list', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='ATTRIBUTES', ctx=Store())], value=Dict(keys=[Constant(value='bold'), Constant(value='dark'), Constant(value='underline'), Constant(value='blink'), Constant(value='reverse'), Constant(value='concealed')], values=[Constant(value=1), Constant(value=2), Constant(value=4), Constant(value=5), Constant(value=7), Constant(value=8)])), Assign(targets=[Name(id='HIGHLIGHTS', ctx=Store())], value=Dict(keys=[Constant(value='on_black'), Constant(value='on_grey'), Constant(value='on_red'), Constant(value='on_green'), Constant(value='on_yellow'), Constant(value='on_blue'), Constant(value='on_magenta'), Constant(value='on_cyan'), Constant(value='on_light_grey'), Constant(value='on_dark_grey'), Constant(value='on_light_red'), Constant(value='on_light_green'), Constant(value='on_light_yellow'), Constant(value='on_light_blue'), Constant(value='on_light_magenta'), Constant(value='on_light_cyan'), Constant(value='on_white')], values=[Constant(value=40), Constant(value=40), Constant(value=41), Constant(value=42), Constant(value=43), Constant(value=44), Constant(value=45), Constant(value=46), Constant(value=47), Constant(value=100), Constant(value=101), Constant(value=102), Constant(value=103), Constant(value=104), Constant(value=105), Constant(value=106), Constant(value=107)])), Assign(targets=[Name(id='COLORS', ctx=Store())], value=Dict(keys=[Constant(value='black'), Constant(value='grey'), Constant(value='red'), Constant(value='green'), Constant(value='yellow'), Constant(value='blue'), Constant(value='magenta'), Constant(value='cyan'), Constant(value='light_grey'), Constant(value='dark_grey'), Constant(value='light_red'), Constant(value='light_green'), Constant(value='light_yellow'), Constant(value='light_blue'), Constant(value='light_magenta'), Constant(value='light_cyan'), Constant(value='white')], values=[Constant(value=30), Constant(value=30), Constant(value=31), Constant(value=32), Constant(value=33), Constant(value=34), Constant(value=35), Constant(value=36), Constant(value=37), Constant(value=90), Constant(value=91), Constant(value=92), Constant(value=93), Constant(value=94), Constant(value=95), Constant(value=96), Constant(value=97)])), Assign(targets=[Name(id='RESET', ctx=Store())], value=Constant(value='\x1b[0m')), FunctionDef(name='_can_do_colour', args=arguments(posonlyargs=[], args=[], kwonlyargs=[arg(arg='no_color', annotation=BinOp(left=Name(id='bool', ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='force_color', annotation=BinOp(left=Name(id='bool', ctx=Load()), op=BitOr(), right=Constant(value=None)))], kw_defaults=[Constant(value=None), Constant(value=None)], defaults=[]), body=[Expr(value=Constant(value='Check env vars and for tty/dumb terminal')), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='no_color', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Name(id='no_color', ctx=Load())]), body=[Return(value=Constant(value=False))], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Name(id='force_color', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Name(id='force_color', ctx=Load())]), body=[Return(value=Constant(value=True))], orelse=[]), If(test=Compare(left=Constant(value='ANSI_COLORS_DISABLED'), ops=[In()], comparators=[Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load())]), body=[Return(value=Constant(value=False))], orelse=[]), If(test=Compare(left=Constant(value='NO_COLOR'), ops=[In()], comparators=[Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load())]), body=[Return(value=Constant(value=False))], orelse=[]), If(test=Compare(left=Constant(value='FORCE_COLOR'), ops=[In()], comparators=[Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load())]), body=[Return(value=Constant(value=True))], orelse=[]), Return(value=BoolOp(op=And(), values=[Call(func=Name(id='hasattr', ctx=Load()), args=[Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), Constant(value='isatty')], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='sys', ctx=Load()), attr='stdout', ctx=Load()), attr='isatty', ctx=Load()), args=[], keywords=[]), Compare(left=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='TERM')], keywords=[]), ops=[NotEq()], comparators=[Constant(value='dumb')])]))], decorator_list=[], returns=Name(id='bool', ctx=Load())), FunctionDef(name='colored', args=arguments(posonlyargs=[], args=[arg(arg='text', annotation=Name(id='str', ctx=Load())), arg(arg='color', annotation=BinOp(left=Name(id='str', ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='on_color', annotation=BinOp(left=Name(id='str', ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='attrs', annotation=BinOp(left=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), op=BitOr(), right=Constant(value=None)))], kwonlyargs=[arg(arg='no_color', annotation=BinOp(left=Name(id='bool', ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='force_color', annotation=BinOp(left=Name(id='bool', ctx=Load()), op=BitOr(), right=Constant(value=None)))], kw_defaults=[Constant(value=None), Constant(value=None)], defaults=[Constant(value=None), Constant(value=None), Constant(value=None)]), body=[Expr(value=Constant(value="Colorize text.\n\n    Available text colors:\n        black, red, green, yellow, blue, magenta, cyan, white,\n        light_grey, dark_grey, light_red, light_green, light_yellow, light_blue,\n        light_magenta, light_cyan.\n\n    Available text highlights:\n        on_black, on_red, on_green, on_yellow, on_blue, on_magenta, on_cyan, on_white,\n        on_light_grey, on_dark_grey, on_light_red, on_light_green, on_light_yellow,\n        on_light_blue, on_light_magenta, on_light_cyan.\n\n    Available attributes:\n        bold, dark, underline, blink, reverse, concealed.\n\n    Example:\n        colored('Hello, World!', 'red', 'on_black', ['bold', 'blink'])\n        colored('Hello, World!', 'green')\n    ")), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='_can_do_colour', ctx=Load()), args=[], keywords=[keyword(arg='no_color', value=Name(id='no_color', ctx=Load())), keyword(arg='force_color', value=Name(id='force_color', ctx=Load()))])), body=[Return(value=Name(id='text', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='fmt_str', ctx=Store())], value=Constant(value='\x1b[%dm%s')), If(test=Compare(left=Name(id='color', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='text', ctx=Store())], value=BinOp(left=Name(id='fmt_str', ctx=Load()), op=Mod(), right=Tuple(elts=[Subscript(value=Name(id='COLORS', ctx=Load()), slice=Name(id='color', ctx=Load()), ctx=Load()), Name(id='text', ctx=Load())], ctx=Load())))], orelse=[]), If(test=Compare(left=Name(id='on_color', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='text', ctx=Store())], value=BinOp(left=Name(id='fmt_str', ctx=Load()), op=Mod(), right=Tuple(elts=[Subscript(value=Name(id='HIGHLIGHTS', ctx=Load()), slice=Name(id='on_color', ctx=Load()), ctx=Load()), Name(id='text', ctx=Load())], ctx=Load())))], orelse=[]), If(test=Compare(left=Name(id='attrs', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[For(target=Name(id='attr', ctx=Store()), iter=Name(id='attrs', ctx=Load()), body=[Assign(targets=[Name(id='text', ctx=Store())], value=BinOp(left=Name(id='fmt_str', ctx=Load()), op=Mod(), right=Tuple(elts=[Subscript(value=Name(id='ATTRIBUTES', ctx=Load()), slice=Name(id='attr', ctx=Load()), ctx=Load()), Name(id='text', ctx=Load())], ctx=Load())))], orelse=[])], orelse=[]), Return(value=BinOp(left=Name(id='text', ctx=Load()), op=Add(), right=Name(id='RESET', ctx=Load())))], decorator_list=[], returns=Name(id='str', ctx=Load())), FunctionDef(name='cprint', args=arguments(posonlyargs=[], args=[arg(arg='text', annotation=Name(id='str', ctx=Load())), arg(arg='color', annotation=BinOp(left=Name(id='str', ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='on_color', annotation=BinOp(left=Name(id='str', ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='attrs', annotation=BinOp(left=Subscript(value=Name(id='Iterable', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), op=BitOr(), right=Constant(value=None)))], kwonlyargs=[arg(arg='no_color', annotation=BinOp(left=Name(id='bool', ctx=Load()), op=BitOr(), right=Constant(value=None))), arg(arg='force_color', annotation=BinOp(left=Name(id='bool', ctx=Load()), op=BitOr(), right=Constant(value=None)))], kw_defaults=[Constant(value=None), Constant(value=None)], kwarg=arg(arg='kwargs', annotation=Name(id='Any', ctx=Load())), defaults=[Constant(value=None), Constant(value=None), Constant(value=None)]), body=[Expr(value=Constant(value='Print colorized text.\n\n    It accepts arguments of print function.\n    ')), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Call(func=Name(id='colored', ctx=Load()), args=[Name(id='text', ctx=Load()), Name(id='color', ctx=Load()), Name(id='on_color', ctx=Load()), Name(id='attrs', ctx=Load())], keywords=[keyword(arg='no_color', value=Name(id='no_color', ctx=Load())), keyword(arg='force_color', value=Name(id='force_color', ctx=Load()))])], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))], decorator_list=[], returns=Constant(value=None))], type_ignores=[])